public class groovyjarjarantlr.build.ANTLR extends java.lang.Object
{
    public static java.lang.String compiler;
    public static java.lang.String jarName;
    public static java.lang.String root;
    public static java.lang.String[] srcdir;

    public void <init>()
    {
        groovyjarjarantlr.build.ANTLR r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: groovyjarjarantlr.build.ANTLR;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <groovyjarjarantlr.build.ANTLR: java.lang.String compiler>;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("groovyjarjarantlr.build.compiler", $r1);

        <groovyjarjarantlr.build.ANTLR: java.lang.String compiler> = $r2;

        $r3 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("groovyjarjarantlr.build.root", $r3);

        <groovyjarjarantlr.build.ANTLR: java.lang.String root> = $r4;

        return;
    }

    public java.lang.String getName()
    {
        groovyjarjarantlr.build.ANTLR r0;

        r0 := @this: groovyjarjarantlr.build.ANTLR;

        return "ANTLR";
    }

    public void build(groovyjarjarantlr.build.Tool)
    {
        boolean $z0;
        groovyjarjarantlr.build.ANTLR r0;
        java.lang.String[] $r32, $r43;
        java.lang.StringBuffer $r2, $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r19, $r20, $r22, $r24, $r25, $r27, $r29, $r30, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r45, $r46;
        int $i0, i1;
        java.lang.String $r3, $r6, $r8, $r11, $r13, $r16, $r18, $r21, $r23, $r26, $r28, $r31, $r34, $r37, $r40, $r44, $r47;
        groovyjarjarantlr.build.Tool r1;

        r0 := @this: groovyjarjarantlr.build.ANTLR;

        r1 := @parameter0: groovyjarjarantlr.build.Tool;

        $z0 = virtualinvoke r0.<groovyjarjarantlr.build.ANTLR: boolean rootIsValidANTLRDir(groovyjarjarantlr.build.Tool)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/groovyjarjarantlr/antlr.g");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void antlr(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/groovyjarjarantlr/tokdef.g");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void antlr(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/groovyjarjarantlr/preprocessor/preproc.g");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void antlr(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/groovyjarjarantlr/actions/java/action.g");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void antlr(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/groovyjarjarantlr/actions/cpp/action.g");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void antlr(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/groovyjarjarantlr/actions/csharp/action.g");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void antlr(java.lang.String)>($r31);

        i1 = 0;

     label2:
        $r32 = <groovyjarjarantlr.build.ANTLR: java.lang.String[] srcdir>;

        $i0 = lengthof $r32;

        if i1 >= $i0 goto label3;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = <groovyjarjarantlr.build.ANTLR: java.lang.String compiler>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -d ");

        $r37 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r40 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r43 = <groovyjarjarantlr.build.ANTLR: java.lang.String[] srcdir>;

        $r44 = $r43[i1];

        $r45 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/*.java");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void system(java.lang.String)>($r47);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void jar(groovyjarjarantlr.build.Tool)
    {
        groovyjarjarantlr.build.ANTLR r0;
        java.lang.String[] $r11, $r18;
        java.lang.StringBuffer $r2, $r3, $r4, $r6, $r7, $r9, $r13, $r14, $r16, $r17, $r20, $r21;
        int $i0, i1;
        java.lang.String $r5, $r8, $r10, $r12, $r15, $r19, $r22;
        boolean $z0;
        groovyjarjarantlr.build.Tool r1;

        r0 := @this: groovyjarjarantlr.build.ANTLR;

        r1 := @parameter0: groovyjarjarantlr.build.Tool;

        $z0 = virtualinvoke r0.<groovyjarjarantlr.build.ANTLR: boolean rootIsValidANTLRDir(groovyjarjarantlr.build.Tool)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(2000);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jar cvf ");

        $r5 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r8 = <groovyjarjarantlr.build.ANTLR: java.lang.String jarName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        i1 = 0;

     label2:
        $r11 = <groovyjarjarantlr.build.ANTLR: java.lang.String[] srcdir>;

        $i0 = lengthof $r11;

        if i1 >= $i0 goto label3;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r15 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r18 = <groovyjarjarantlr.build.ANTLR: java.lang.String[] srcdir>;

        $r19 = $r18[i1];

        $r20 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/*.class");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r12 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<groovyjarjarantlr.build.Tool: void system(java.lang.String)>($r12);

        return;
    }

    protected boolean rootIsValidANTLRDir(groovyjarjarantlr.build.Tool)
    {
        groovyjarjarantlr.build.ANTLR$1 $r3;
        boolean $z0, $z1;
        groovyjarjarantlr.build.ANTLR r4;
        java.lang.String[] $r5, $r19;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r14, $r16, $r17, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36;
        int $i0, $i1;
        java.lang.String $r0, $r2, $r9, $r12, $r15, $r18, $r22, $r25, $r28, $r31, $r34, $r37;
        groovyjarjarantlr.build.Tool r6;
        java.io.File $r1, $r13;

        r4 := @this: groovyjarjarantlr.build.ANTLR;

        r6 := @parameter0: groovyjarjarantlr.build.Tool;

        $r0 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = new java.io.File;

        $r2 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Property antlr.build.root==");

        $r34 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not exist");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<groovyjarjarantlr.build.Tool: void error(java.lang.String)>($r37);

        return 0;

     label2:
        $z1 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label3;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Property antlr.build.root==");

        $r28 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a directory");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<groovyjarjarantlr.build.Tool: void error(java.lang.String)>($r31);

        return 0;

     label3:
        $r3 = new groovyjarjarantlr.build.ANTLR$1;

        specialinvoke $r3.<groovyjarjarantlr.build.ANTLR$1: void <init>(groovyjarjarantlr.build.ANTLR)>(r4);

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r3);

        if $r5 == null goto label4;

        $i0 = lengthof $r5;

        if $i0 != 0 goto label5;

     label4:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Property antlr.build.root==");

        $r9 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not appear to be a valid ANTLR project root (no antlr subdir)");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<groovyjarjarantlr.build.Tool: void error(java.lang.String)>($r12);

        return 0;

     label5:
        $r13 = new java.io.File;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/antlr");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r18);

        $r19 = virtualinvoke $r13.<java.io.File: java.lang.String[] list()>();

        if $r19 == null goto label6;

        $i1 = lengthof $r19;

        if $i1 != 0 goto label7;

     label6:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Property antlr.build.root==");

        $r22 = <groovyjarjarantlr.build.ANTLR: java.lang.String root>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not appear to be a valid ANTLR project root (no .java files in antlr subdir");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<groovyjarjarantlr.build.Tool: void error(java.lang.String)>($r25);

        return 0;

     label7:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <groovyjarjarantlr.build.ANTLR: java.lang.String compiler> = "javac";

        <groovyjarjarantlr.build.ANTLR: java.lang.String jarName> = "groovyjarjarantlr.jar";

        <groovyjarjarantlr.build.ANTLR: java.lang.String root> = ".";

        $r0 = newarray (java.lang.String)[10];

        $r0[0] = "antlr";

        $r0[1] = "groovyjarjarantlr/actions/cpp";

        $r0[2] = "groovyjarjarantlr/actions/java";

        $r0[3] = "groovyjarjarantlr/actions/csharp";

        $r0[4] = "groovyjarjarantlr/collections";

        $r0[5] = "groovyjarjarantlr/collections/impl";

        $r0[6] = "groovyjarjarantlr/debug";

        $r0[7] = "groovyjarjarantlr/ASdebug";

        $r0[8] = "groovyjarjarantlr/debug/misc";

        $r0[9] = "groovyjarjarantlr/preprocessor";

        <groovyjarjarantlr.build.ANTLR: java.lang.String[] srcdir> = $r0;

        return;
    }
}
