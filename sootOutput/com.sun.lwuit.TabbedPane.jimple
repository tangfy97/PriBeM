public class com.sun.lwuit.TabbedPane extends com.sun.lwuit.Container
{
    private com.sun.lwuit.animations.Transition transitionRight;
    private com.sun.lwuit.animations.Transition transitionLeft;
    private com.sun.lwuit.Container contentPane;
    private com.sun.lwuit.List tabsList;
    private java.util.Hashtable tabsTable;
    private int tabPlacement;
    private int tPBorder;
    private int lastListX;
    private int lastListY;

    public void <init>()
    {
        com.sun.lwuit.TabbedPane r0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        specialinvoke r0.<com.sun.lwuit.TabbedPane: void <init>(int)>(0);

        return;
    }

    public void <init>(int)
    {
        com.sun.lwuit.TabbedPane$TabsRenderer $r36;
        com.sun.lwuit.layouts.BorderLayout $r30, $r31;
        com.sun.lwuit.plaf.Style $r8, $r12, $r14, $r16, $r18, $r20, $r22;
        com.sun.lwuit.TabbedPane$1 $r35;
        com.sun.lwuit.TabbedPane$2 $r37;
        com.sun.lwuit.List $r11, $r13, $r15, $r17, $r19, $r21, $r24, $r25, $r26, $r27, $r29, $r33;
        int i0, $i2;
        com.sun.lwuit.TabbedPane r0;
        java.util.Hashtable $r34;
        com.sun.lwuit.Container $r6, $r7, $r10, $r32;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        $r30 = new com.sun.lwuit.layouts.BorderLayout;

        specialinvoke $r30.<com.sun.lwuit.layouts.BorderLayout: void <init>()>();

        specialinvoke r0.<com.sun.lwuit.Container: void <init>(com.sun.lwuit.layouts.Layout)>($r30);

        $r32 = new com.sun.lwuit.Container;

        $r31 = new com.sun.lwuit.layouts.BorderLayout;

        specialinvoke $r31.<com.sun.lwuit.layouts.BorderLayout: void <init>()>();

        specialinvoke $r32.<com.sun.lwuit.Container: void <init>(com.sun.lwuit.layouts.Layout)>($r31);

        r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane> = $r32;

        $r33 = new com.sun.lwuit.List;

        specialinvoke $r33.<com.sun.lwuit.List: void <init>()>();

        r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList> = $r33;

        $r34 = new java.util.Hashtable;

        specialinvoke $r34.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable> = $r34;

        $i2 = (int) -1;

        r0.<com.sun.lwuit.TabbedPane: int tabPlacement> = $i2;

        r0.<com.sun.lwuit.TabbedPane: int tPBorder> = 1;

        $r6 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        virtualinvoke $r6.<com.sun.lwuit.Container: void setUIID(java.lang.String)>("TabbedPane");

        $r7 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $r35 = new com.sun.lwuit.TabbedPane$1;

        specialinvoke $r35.<com.sun.lwuit.TabbedPane$1: void <init>(com.sun.lwuit.TabbedPane)>(r0);

        virtualinvoke $r8.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r35);

        $r10 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        specialinvoke r0.<com.sun.lwuit.Container: void addComponent(java.lang.Object,com.sun.lwuit.Component)>("Center", $r10);

        virtualinvoke r0.<com.sun.lwuit.TabbedPane: void setTabPlacement(int)>(i0);

        $r11 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r12 = virtualinvoke $r11.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        virtualinvoke $r12.<com.sun.lwuit.plaf.Style: void setPadding(int,int,int,int)>(0, 0, 0, 0);

        $r13 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r14 = virtualinvoke $r13.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        virtualinvoke $r14.<com.sun.lwuit.plaf.Style: void setMargin(int,int,int,int)>(0, 0, 0, 0);

        $r15 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r16 = virtualinvoke $r15.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        virtualinvoke $r16.<com.sun.lwuit.plaf.Style: void setBorder(com.sun.lwuit.plaf.Border)>(null);

        $r17 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r18 = virtualinvoke $r17.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        virtualinvoke $r18.<com.sun.lwuit.plaf.Style: void setPadding(int,int,int,int)>(0, 0, 0, 0);

        $r19 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r20 = virtualinvoke $r19.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        virtualinvoke $r20.<com.sun.lwuit.plaf.Style: void setMargin(int,int,int,int)>(0, 0, 0, 0);

        $r21 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r22 = virtualinvoke $r21.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        virtualinvoke $r22.<com.sun.lwuit.plaf.Style: void setBorder(com.sun.lwuit.plaf.Border)>(null);

        $r24 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r36 = new com.sun.lwuit.TabbedPane$TabsRenderer;

        specialinvoke $r36.<com.sun.lwuit.TabbedPane$TabsRenderer: void <init>(com.sun.lwuit.TabbedPane)>(r0);

        virtualinvoke $r24.<com.sun.lwuit.List: void setListCellRenderer(com.sun.lwuit.list.ListCellRenderer)>($r36);

        $r25 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r25.<com.sun.lwuit.List: void setItemGap(int)>(0);

        $r26 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r26.<com.sun.lwuit.List: void setIsScrollVisible(boolean)>(0);

        $r27 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r27.<com.sun.lwuit.List: void setBorderGap(int)>(0);

        $r29 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r37 = new com.sun.lwuit.TabbedPane$2;

        specialinvoke $r37.<com.sun.lwuit.TabbedPane$2: void <init>(com.sun.lwuit.TabbedPane)>(r0);

        virtualinvoke $r29.<com.sun.lwuit.List: void addSelectionListener(com.sun.lwuit.events.SelectionListener)>($r37);

        return;
    }

    public boolean animate()
    {
        com.sun.lwuit.List $r1, $r2;
        int $i0, $i1, $i2, $i3;
        com.sun.lwuit.TabbedPane r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        z0 = specialinvoke r0.<com.sun.lwuit.Container: boolean animate()>();

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.List: int getScrollX()>();

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i1 = virtualinvoke $r2.<com.sun.lwuit.List: int getScrollY()>();

        $i2 = r0.<com.sun.lwuit.TabbedPane: int lastListY>;

        if $i2 != $i1 goto label1;

        $i3 = r0.<com.sun.lwuit.TabbedPane: int lastListX>;

        if $i3 == $i0 goto label2;

     label1:
        z0 = 1;

        r0.<com.sun.lwuit.TabbedPane: int lastListX> = $i0;

        r0.<com.sun.lwuit.TabbedPane: int lastListY> = $i1;

     label2:
        return z0;
    }

    void initComponentImpl()
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.Form $r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        specialinvoke r0.<com.sun.lwuit.Container: void initComponentImpl()>();

        $r1 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Form getComponentForm()>();

        virtualinvoke $r1.<com.sun.lwuit.Form: void registerAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

        return;
    }

    public void setTransitionLeft(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.animations.Transition transitionLeft> = r1;

        return;
    }

    public com.sun.lwuit.animations.Transition getTransitionLeft()
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.animations.Transition transitionLeft>;

        return $r1;
    }

    public void setTransitionRight(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.animations.Transition transitionRight> = r1;

        return;
    }

    public com.sun.lwuit.animations.Transition getTransitionRight()
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.animations.Transition transitionRight>;

        return $r1;
    }

    public void setFocusable(boolean)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r1, $r2;
        boolean z0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r2.<com.sun.lwuit.List: void setFocusable(boolean)>(z0);

     label1:
        specialinvoke r0.<com.sun.lwuit.Container: void setFocusable(boolean)>(z0);

        return;
    }

    public void setFocus(boolean)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r1, $r2;
        boolean z0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r2.<com.sun.lwuit.List: void setFocus(boolean)>(z0);

     label1:
        return;
    }

    public boolean hasFocus()
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $z1 = virtualinvoke $r2.<com.sun.lwuit.List: boolean hasFocus()>();

        return $z1;

     label1:
        $z0 = specialinvoke r0.<com.sun.lwuit.Container: boolean hasFocus()>();

        return $z0;
    }

    public void addTabsListener(com.sun.lwuit.events.SelectionListener)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r2;
        com.sun.lwuit.events.SelectionListener r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.events.SelectionListener;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r2.<com.sun.lwuit.List: void addSelectionListener(com.sun.lwuit.events.SelectionListener)>(r1);

        return;
    }

    public void requestFocus()
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r1.<com.sun.lwuit.List: void requestFocus()>();

        return;
    }

    protected com.sun.lwuit.geom.Dimension calcPreferredSize()
    {
        com.sun.lwuit.list.ListModel $r6;
        com.sun.lwuit.List $r1, $r2, $r4, $r5;
        com.sun.lwuit.Component r8, r11;
        com.sun.lwuit.geom.Dimension $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        com.sun.lwuit.TabbedPane r0;
        java.util.Hashtable $r9;
        java.lang.Object $r7, $r10;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i7 = 0;

        i8 = 0;

        i9 = 0;

     label1:
        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.List: int size()>();

        if i9 >= $i0 goto label4;

        $r5 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r6 = virtualinvoke $r5.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r7 = interfaceinvoke $r6.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i9);

        r8 = (com.sun.lwuit.Component) $r7;

        $r9 = r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable>;

        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r8);

        r11 = (com.sun.lwuit.Component) $r10;

        $i5 = virtualinvoke r11.<com.sun.lwuit.Component: int getPreferredW()>();

        if $i5 <= i7 goto label2;

        i7 = virtualinvoke r11.<com.sun.lwuit.Component: int getPreferredW()>();

     label2:
        $i6 = virtualinvoke r11.<com.sun.lwuit.Component: int getPreferredH()>();

        if $i6 <= i8 goto label3;

        i8 = virtualinvoke r11.<com.sun.lwuit.Component: int getPreferredH()>();

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $i1 = r0.<com.sun.lwuit.TabbedPane: int tabPlacement>;

        if $i1 == 0 goto label5;

        $i3 = r0.<com.sun.lwuit.TabbedPane: int tabPlacement>;

        if $i3 != 2 goto label6;

     label5:
        i10 = i7;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i2 = virtualinvoke $r2.<com.sun.lwuit.List: int getPreferredH()>();

        i11 = $i2 + i8;

        goto label7;

     label6:
        $r4 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i4 = virtualinvoke $r4.<com.sun.lwuit.List: int getPreferredW()>();

        i10 = $i4 + i7;

        i11 = i8;

     label7:
        $r3 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r3.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(i10, i11);

        return $r3;
    }

    public void setTabPlacement(int)
    {
        com.sun.lwuit.List $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        java.lang.IllegalArgumentException $r8;
        com.sun.lwuit.Container $r10;
        int i0, $i1;
        com.sun.lwuit.TabbedPane r0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT");

        throw $r8;

     label1:
        $i1 = r0.<com.sun.lwuit.TabbedPane: int tabPlacement>;

        if $i1 != i0 goto label2;

        return;

     label2:
        r0.<com.sun.lwuit.TabbedPane: int tabPlacement> = i0;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke r0.<com.sun.lwuit.TabbedPane: void removeComponent(com.sun.lwuit.Component)>($r1);

        if i0 == 0 goto label3;

        if i0 != 2 goto label5;

     label3:
        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r2.<com.sun.lwuit.List: void setOrientation(int)>(1);

        if i0 != 0 goto label4;

        $r4 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        specialinvoke r0.<com.sun.lwuit.Container: void addComponent(java.lang.Object,com.sun.lwuit.Component)>("North", $r4);

        goto label7;

     label4:
        if i0 != 2 goto label7;

        $r3 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        specialinvoke r0.<com.sun.lwuit.Container: void addComponent(java.lang.Object,com.sun.lwuit.Component)>("South", $r3);

        goto label7;

     label5:
        $r5 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r5.<com.sun.lwuit.List: void setOrientation(int)>(0);

        if i0 != 1 goto label6;

        $r7 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        specialinvoke r0.<com.sun.lwuit.Container: void addComponent(java.lang.Object,com.sun.lwuit.Component)>("West", $r7);

        goto label7;

     label6:
        $r6 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        specialinvoke r0.<com.sun.lwuit.Container: void addComponent(java.lang.Object,com.sun.lwuit.Component)>("East", $r6);

     label7:
        $r9 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r9.<com.sun.lwuit.List: void setShouldCalcPreferredSize(boolean)>(1);

        $r10 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        virtualinvoke $r10.<com.sun.lwuit.Container: void setShouldCalcPreferredSize(boolean)>(1);

        virtualinvoke r0.<com.sun.lwuit.TabbedPane: void revalidate()>();

        return;
    }

    public void addTab(java.lang.String, com.sun.lwuit.Image, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r3;
        int $i0;
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r4;
        java.lang.String r1;
        com.sun.lwuit.Image r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.sun.lwuit.Image;

        r3 := @parameter2: com.sun.lwuit.Component;

        $r4 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i0 = virtualinvoke $r4.<com.sun.lwuit.List: int size()>();

        virtualinvoke r0.<com.sun.lwuit.TabbedPane: void insertTab(java.lang.String,com.sun.lwuit.Image,com.sun.lwuit.Component,int)>(r1, r2, r3, $i0);

        return;
    }

    public void addTab(java.lang.String, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r2;
        int $i0;
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r3;
        java.lang.String r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.sun.lwuit.Component;

        $r3 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i0 = virtualinvoke $r3.<com.sun.lwuit.List: int size()>();

        virtualinvoke r0.<com.sun.lwuit.TabbedPane: void insertTab(java.lang.String,com.sun.lwuit.Image,com.sun.lwuit.Component,int)>(r1, null, r2, $i0);

        return;
    }

    public void insertTab(java.lang.String, com.sun.lwuit.Image, com.sun.lwuit.Component, int)
    {
        com.sun.lwuit.list.ListModel $r6;
        com.sun.lwuit.Button $r2;
        com.sun.lwuit.List $r5, $r9;
        com.sun.lwuit.Image r4;
        com.sun.lwuit.Container $r10;
        com.sun.lwuit.Component r1;
        com.sun.lwuit.list.DefaultListModel $r7;
        int i0, $i1;
        com.sun.lwuit.TabbedPane r0;
        java.lang.String r3, $r11;
        java.util.Hashtable $r8;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: com.sun.lwuit.Image;

        r1 := @parameter2: com.sun.lwuit.Component;

        i0 := @parameter3: int;

        specialinvoke r0.<com.sun.lwuit.TabbedPane: void checkIndex(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        $r2 = new com.sun.lwuit.Button;

        if r3 == null goto label2;

        $r11 = r3;

        goto label3;

     label2:
        $r11 = "";

     label3:
        specialinvoke $r2.<com.sun.lwuit.Button: void <init>(java.lang.String,com.sun.lwuit.Image)>($r11, r4);

        $r5 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r6 = virtualinvoke $r5.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r7 = (com.sun.lwuit.list.DefaultListModel) $r6;

        virtualinvoke $r7.<com.sun.lwuit.list.DefaultListModel: void addItemAtIndex(java.lang.Object,int)>($r2, i0);

        $r8 = r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r1);

        $r9 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i1 = virtualinvoke $r9.<com.sun.lwuit.List: int size()>();

        if $i1 != 1 goto label4;

        $r10 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        virtualinvoke $r10.<com.sun.lwuit.Container: void addComponent(java.lang.Object,com.sun.lwuit.Component)>("Center", r1);

     label4:
        return;
    }

    public void setTabTitle(java.lang.String, com.sun.lwuit.Image, int)
    {
        com.sun.lwuit.list.ListModel $r2, $r8;
        com.sun.lwuit.List $r1, $r7;
        com.sun.lwuit.Button r4;
        com.sun.lwuit.Image r6;
        com.sun.lwuit.list.DefaultListModel $r9;
        int i0;
        com.sun.lwuit.TabbedPane r0;
        java.lang.Object $r3;
        java.lang.String r5;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: com.sun.lwuit.Image;

        i0 := @parameter2: int;

        specialinvoke r0.<com.sun.lwuit.TabbedPane: void checkIndex(int)>(i0);

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r3 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i0);

        r4 = (com.sun.lwuit.Button) $r3;

        virtualinvoke r4.<com.sun.lwuit.Button: void setText(java.lang.String)>(r5);

        virtualinvoke r4.<com.sun.lwuit.Button: void setIcon(com.sun.lwuit.Image)>(r6);

        $r7 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r9 = (com.sun.lwuit.list.DefaultListModel) $r8;

        virtualinvoke $r9.<com.sun.lwuit.list.DefaultListModel: void setItem(int,java.lang.Object)>(i0, r4);

        return;
    }

    public void removeTabAt(int)
    {
        com.sun.lwuit.list.ListModel $r2, $r5;
        com.sun.lwuit.List $r1, $r4;
        com.sun.lwuit.list.DefaultListModel $r6;
        int i0;
        com.sun.lwuit.TabbedPane r0;
        java.lang.Object $r3;
        java.util.Hashtable $r7;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        specialinvoke r0.<com.sun.lwuit.TabbedPane: void checkIndex(int)>(i0);

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r3 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i0);

        $r4 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r5 = virtualinvoke $r4.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r6 = (com.sun.lwuit.list.DefaultListModel) $r5;

        virtualinvoke $r6.<com.sun.lwuit.list.DefaultListModel: void removeItem(int)>(i0);

        $r7 = r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }

    public com.sun.lwuit.Component getTabComponentAt(int)
    {
        com.sun.lwuit.list.ListModel $r3;
        com.sun.lwuit.List $r1;
        com.sun.lwuit.Component $r5, $r7;
        int i0;
        com.sun.lwuit.TabbedPane r0;
        java.lang.Object $r4, $r6;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        specialinvoke r0.<com.sun.lwuit.TabbedPane: void checkIndex(int)>(i0);

        $r2 = r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable>;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r3 = virtualinvoke $r1.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r4 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i0);

        $r5 = (com.sun.lwuit.Component) $r4;

        $r6 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (com.sun.lwuit.Component) $r6;

        return $r7;
    }

    private void checkIndex(int)
    {
        java.lang.IndexOutOfBoundsException $r0;
        com.sun.lwuit.List $r6;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        com.sun.lwuit.TabbedPane r5;
        java.lang.String $r4;

        r5 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r6 = r5.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i1 = virtualinvoke $r6.<com.sun.lwuit.List: int size()>();

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return;
    }

    public int indexOfComponent(com.sun.lwuit.Component)
    {
        com.sun.lwuit.list.ListModel $r2;
        com.sun.lwuit.List $r1;
        com.sun.lwuit.Component r4, r7, r8;
        int $i0, i1, $i3;
        com.sun.lwuit.TabbedPane r0;
        java.lang.Object $r3, $r6;
        java.util.Hashtable $r5;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r8 := @parameter0: com.sun.lwuit.Component;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getTabCount()>();

        if i1 >= $i0 goto label3;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r3 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i1);

        r4 = (com.sun.lwuit.Component) $r3;

        $r5 = r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (com.sun.lwuit.Component) $r6;

        $z0 = virtualinvoke r8.<java.lang.Object: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public int getTabCount()
    {
        int $i0;
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.List: int size()>();

        return $i0;
    }

    public int getSelectedIndex()
    {
        int $i0;
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.List: int getSelectedIndex()>();

        return $i0;
    }

    public void setTabTitlePrototype(java.lang.String)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r2;
        java.lang.String r1;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r2.<com.sun.lwuit.List: void setRenderingPrototype(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.sun.lwuit.TabbedPane r0;
        java.lang.String $r2, $r3, $r21;
        java.lang.Class $r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[x=");

        $i2 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getX()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $i3 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getY()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" width=");

        $i4 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getWidth()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height=");

        $i5 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getHeight()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tab placement = ");

        $i6 = r0.<com.sun.lwuit.TabbedPane: int tabPlacement>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tab count = ");

        $i7 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getTabCount()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", selected index = ");

        $i8 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getSelectedIndex()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.plaf.LookAndFeel $r3;
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.plaf.UIManager $r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        specialinvoke r0.<com.sun.lwuit.Container: void paint(com.sun.lwuit.Graphics)>(r1);

        $r2 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r3.<com.sun.lwuit.plaf.LookAndFeel: void drawTabbedPane(com.sun.lwuit.Graphics,com.sun.lwuit.TabbedPane)>(r1, r0);

        return;
    }

    public void setTabsSelectedStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.plaf.Style r1;
        com.sun.lwuit.List $r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.plaf.Style;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r2.<com.sun.lwuit.List: void setSelectedStyle(com.sun.lwuit.plaf.Style)>(r1);

        return;
    }

    public void setTabsUnselectedStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.plaf.Style r1;
        com.sun.lwuit.List $r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.plaf.Style;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r2.<com.sun.lwuit.List: void setUnselectedStyle(com.sun.lwuit.plaf.Style)>(r1);

        return;
    }

    public void setContentPaneSelectedStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.plaf.Style r1;
        com.sun.lwuit.Container $r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.plaf.Style;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        virtualinvoke $r2.<com.sun.lwuit.Container: void setSelectedStyle(com.sun.lwuit.plaf.Style)>(r1);

        return;
    }

    public void setContentPaneUnselectedStyle(com.sun.lwuit.plaf.Style)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.plaf.Style r1;
        com.sun.lwuit.Container $r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        r1 := @parameter0: com.sun.lwuit.plaf.Style;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        virtualinvoke $r2.<com.sun.lwuit.Container: void setUnselectedStyle(com.sun.lwuit.plaf.Style)>(r1);

        return;
    }

    public void refreshTheme()
    {
        java.util.Enumeration $r7;
        com.sun.lwuit.Container $r1, $r4;
        com.sun.lwuit.Component r9;
        com.sun.lwuit.plaf.Style $r2, $r5;
        com.sun.lwuit.TabbedPane r0;
        java.lang.Object $r8;
        java.util.Hashtable $r6;
        com.sun.lwuit.Painter $r3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Painter getBgPainter()>();

        specialinvoke r0.<com.sun.lwuit.Container: void refreshTheme()>();

        $r4 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        $r5 = virtualinvoke $r4.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        virtualinvoke $r5.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r3);

        $r6 = r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r9 = (com.sun.lwuit.Component) $r8;

        virtualinvoke r9.<com.sun.lwuit.Component: void refreshTheme()>();

        goto label1;

     label2:
        return;
    }

    public int getTabPlacement()
    {
        int $i0;
        com.sun.lwuit.TabbedPane r0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $i0 = r0.<com.sun.lwuit.TabbedPane: int tabPlacement>;

        return $i0;
    }

    public int getTabbedPaneBorderWidth()
    {
        int $i0;
        com.sun.lwuit.TabbedPane r0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        $i0 = r0.<com.sun.lwuit.TabbedPane: int tPBorder>;

        return $i0;
    }

    public void setTabbedPaneBorderWidth(int)
    {
        int i0;
        com.sun.lwuit.TabbedPane r0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TabbedPane: int tPBorder> = i0;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        com.sun.lwuit.Container $r1, $r2;
        com.sun.lwuit.plaf.Style $r3;
        int i0, i1, i2, i3;
        com.sun.lwuit.TabbedPane r0;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        virtualinvoke $r3.<com.sun.lwuit.plaf.Style: void setPadding(int,int,int,int)>(i0, i1, i2, i3);

     label1:
        return;
    }

    public void setPadding(int, int)
    {
        com.sun.lwuit.plaf.Style $r3;
        int i0, i1;
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.Container $r1, $r2;

        r0 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        virtualinvoke $r3.<com.sun.lwuit.plaf.Style: void setPadding(int,int)>(i0, i1);

     label1:
        return;
    }

    public void setSelectedIndex(int)
    {
        java.lang.IndexOutOfBoundsException $r0;
        com.sun.lwuit.List $r6, $r9, $r10;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7;
        com.sun.lwuit.TabbedPane r5;
        java.lang.String $r8;

        r5 := @this: com.sun.lwuit.TabbedPane;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r9 = r5.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i2 = virtualinvoke $r9.<com.sun.lwuit.List: int size()>();

        if i0 < $i2 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Tab count: ");

        $r6 = r5.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        $i1 = virtualinvoke $r6.<com.sun.lwuit.List: int size()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r0;

     label2:
        $r10 = r5.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        virtualinvoke $r10.<com.sun.lwuit.List: void setSelectedIndex(int)>(i0);

        return;
    }

    static com.sun.lwuit.List access$000(com.sun.lwuit.TabbedPane)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.List $r1;

        r0 := @parameter0: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.List tabsList>;

        return $r1;
    }

    static com.sun.lwuit.animations.Transition access$100(com.sun.lwuit.TabbedPane)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @parameter0: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.animations.Transition transitionLeft>;

        return $r1;
    }

    static com.sun.lwuit.animations.Transition access$200(com.sun.lwuit.TabbedPane)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @parameter0: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.animations.Transition transitionRight>;

        return $r1;
    }

    static com.sun.lwuit.Container access$300(com.sun.lwuit.TabbedPane)
    {
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.Container $r1;

        r0 := @parameter0: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.Container contentPane>;

        return $r1;
    }

    static java.util.Hashtable access$400(com.sun.lwuit.TabbedPane)
    {
        com.sun.lwuit.TabbedPane r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: com.sun.lwuit.TabbedPane;

        $r1 = r0.<com.sun.lwuit.TabbedPane: java.util.Hashtable tabsTable>;

        return $r1;
    }
}
