public abstract class org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement extends org.eclipse.jdt.internal.compiler.ast.Statement
{
    org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        return;
    }

    public static void reenterAllExceptionHandlers(org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[], int, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] r0;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r1;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[];

        i0 := @parameter1: int;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        if r0 != null goto label1;

        return;

     label1:
        if i0 >= 0 goto label2;

        i0 = lengthof r0;

     label2:
        i1 = 0;

        goto label4;

     label3:
        r1 = r0[i1];

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel enterAnyExceptionHandler(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r2);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: void enterDeclaredExceptionHandlers(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r2);

        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label3;

        return;
    }

    public org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel enterAnyExceptionHandler(org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel $r1, $r2, $r3, $r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r5;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel>;

        if $r1 != null goto label1;

        $r4 = new org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5, null);

        r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel> = $r4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void placeStart()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel>;

        return $r3;
    }

    public void enterDeclaredExceptionHandlers(org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        return;
    }

    public void exitAnyExceptionHandler()
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel $r1, $r2;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void placeEnd()>();

     label1:
        return;
    }

    public void exitDeclaredExceptionHandlers(org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        return;
    }

    public abstract boolean generateSubRoutineInvocation(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, java.lang.Object, int, org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding);

    public abstract boolean isSubRoutineEscaping();

    public void placeAllAnyExceptionHandler()
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel $r1;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void place()>();

        return;
    }
}
