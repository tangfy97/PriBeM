public class org.xmlpull.v1.parser_pool.XmlPullParserPool extends java.lang.Object
{
    protected java.util.List pool;
    protected org.xmlpull.v1.XmlPullParserFactory factory;

    public void <init>() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.parser_pool.XmlPullParserPool r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;

        r0 := @this: org.xmlpull.v1.parser_pool.XmlPullParserPool;

        $r1 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        specialinvoke r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: void <init>(org.xmlpull.v1.XmlPullParserFactory)>($r1);

        return;
    }

    public void <init>(org.xmlpull.v1.XmlPullParserFactory)
    {
        org.xmlpull.v1.parser_pool.XmlPullParserPool r0;
        org.xmlpull.v1.XmlPullParserFactory r2;
        java.lang.IllegalArgumentException $r3;
        java.util.ArrayList $r1;

        r0 := @this: org.xmlpull.v1.parser_pool.XmlPullParserPool;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool> = $r1;

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: org.xmlpull.v1.XmlPullParserFactory factory> = r2;

        return;
    }

    protected org.xmlpull.v1.XmlPullParser newParser() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.parser_pool.XmlPullParserPool r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.parser_pool.XmlPullParserPool;

        $r1 = r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: org.xmlpull.v1.XmlPullParserFactory factory>;

        $r2 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        return $r2;
    }

    public org.xmlpull.v1.XmlPullParser getPullParserFromPool() throws org.xmlpull.v1.XmlPullParserException
    {
        java.lang.Throwable $r7;
        java.util.List $r1, $r2, $r3, $r4, $r5;
        org.xmlpull.v1.parser_pool.XmlPullParserPool r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r6;
        org.xmlpull.v1.XmlPullParser r8;

        r0 := @this: org.xmlpull.v1.parser_pool.XmlPullParserPool;

        r8 = null;

        $r1 = r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        $r2 = r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 <= 0 goto label2;

        $r5 = r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool>;

        $r4 = r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>($i3);

        r8 = (org.xmlpull.v1.XmlPullParser) $r6;

     label2:
        exitmonitor $r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

     label6:
        if r8 != null goto label7;

        r8 = virtualinvoke r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: org.xmlpull.v1.XmlPullParser newParser()>();

     label7:
        return r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void returnPullParserToPool(org.xmlpull.v1.XmlPullParser)
    {
        java.lang.Throwable $r5;
        java.util.List $r2, $r3;
        org.xmlpull.v1.parser_pool.XmlPullParserPool r1;
        java.lang.IllegalArgumentException $r4;
        org.xmlpull.v1.XmlPullParser r0;

        r1 := @this: org.xmlpull.v1.parser_pool.XmlPullParserPool;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool>;

        entermonitor $r2;

     label2:
        $r3 = r1.<org.xmlpull.v1.parser_pool.XmlPullParserPool: java.util.List pool>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        exitmonitor $r2;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r4;
        java.lang.String[] r10;
        java.lang.RuntimeException $r9;
        org.xmlpull.v1.parser_pool.XmlPullParserPool $r0;
        java.lang.StringBuffer $r3, $r6, $r7;
        java.lang.Class $r5;
        java.lang.String $r8;
        org.xmlpull.v1.XmlPullParser $r1, $r2;

        r10 := @parameter0: java.lang.String[];

        $r0 = new org.xmlpull.v1.parser_pool.XmlPullParserPool;

        specialinvoke $r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: void <init>()>();

        $r1 = virtualinvoke $r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: org.xmlpull.v1.XmlPullParser getPullParserFromPool()>();

        virtualinvoke $r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: void returnPullParserToPool(org.xmlpull.v1.XmlPullParser)>($r1);

        $r2 = virtualinvoke $r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: org.xmlpull.v1.XmlPullParser getPullParserFromPool()>();

        if $r1 == $r2 goto label1;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();

        throw $r9;

     label1:
        virtualinvoke $r0.<org.xmlpull.v1.parser_pool.XmlPullParserPool: void returnPullParserToPool(org.xmlpull.v1.XmlPullParser)>($r2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" OK");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;
    }
}
