final class org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput extends org.apache.lucene.store.DataOutput
{
    byte[] bytes;
    int length;

    void <init>(int)
    {
        byte[] $r1;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput r0;
        int i0, $i1;

        r0 := @this: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.store.DataOutput: void <init>()>();

        $i1 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>(i0, 1);

        $r1 = newarray (byte)[$i1];

        r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes> = $r1;

        r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length> = 0;

        return;
    }

    public void writeByte(byte) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4;
        byte b4;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput;

        b4 := @parameter0: byte;

        $i1 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        $r1 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        $r3 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes>;

        $r4 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[])>($r3);

        r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes> = $r4;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes>;

        $i2 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length> = $i3;

        $r2[$i2] = b4;

        return;
    }

    public void writeBytes(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1, r2, $r3, $r4, $r5;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput r0;
        int i0, $i1, i2, $i3, i4, $i5;

        r0 := @this: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput;

        r2 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        i2 = $i1 + i0;

        $r1 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes>;

        $i3 = lengthof $r1;

        if i2 <= $i3 goto label1;

        $r4 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes>;

        $r5 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r4, i2);

        r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes> = $r5;

     label1:
        $r3 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes>;

        $i5 = r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r3, $i5, i0);

        r0.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length> = i2;

        return;
    }
}
