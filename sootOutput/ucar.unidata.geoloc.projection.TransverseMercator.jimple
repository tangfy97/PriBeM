public class ucar.unidata.geoloc.projection.TransverseMercator extends ucar.unidata.geoloc.ProjectionImpl
{
    private double lat0;
    private double lon0;
    private double scale;
    private ucar.unidata.geoloc.LatLonPointImpl origin;
    private double falseEasting;
    private double falseNorthing;

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        ucar.unidata.geoloc.projection.TransverseMercator $r0, r1;
        double $d0, $d1, $d2, $d3, $d4;

        r1 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $r0 = new ucar.unidata.geoloc.projection.TransverseMercator;

        $d0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getOriginLat()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getTangentLon()>();

        $d2 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getScale()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getFalseEasting()>();

        $d4 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getFalseNorthing()>();

        specialinvoke $r0.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double,double,double)>($d0, $d1, $d2, $d3, $d4);

        return $r0;
    }

    public void <init>()
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        specialinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double)>(40.0, -105.0, 0.9996);

        return;
    }

    public void <init>(double, double, double)
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double d0, $d1, d2, $d3, d4, $d5, $d6;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d4 := @parameter2: double;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting> = 0.0;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing> = 0.0;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0> = $d1;

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d2);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0> = $d3;

        $d5 = <ucar.unidata.geoloc.projection.TransverseMercator: double EARTH_RADIUS>;

        $d6 = d4 * $d5;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double scale> = $d6;

        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d0, d2);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin> = $r1;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "transverse_mercator");

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("longitude_of_central_meridian", d2);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("latitude_of_projection_origin", d0);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("scale_factor_at_central_meridian", d4);

        return;
    }

    public void <init>(double, double, double, double, double)
    {
        byte $b0, $b1;
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        double d0, $d1, d2, $d3, d4, $d5, $d6, d7, d8, $d9, $d10, $d11, $d12;
        boolean $z0, $z1;
        ucar.unidata.geoloc.LatLonPointImpl $r1;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d4 := @parameter2: double;

        d7 := @parameter3: double;

        d8 := @parameter4: double;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting> = 0.0;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing> = 0.0;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0> = $d1;

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d2);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0> = $d3;

        $d5 = <ucar.unidata.geoloc.projection.TransverseMercator: double EARTH_RADIUS>;

        $d6 = d4 * $d5;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double scale> = $d6;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d7);

        if $z0 != 0 goto label1;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting> = d7;

     label1:
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d8);

        if $z1 != 0 goto label2;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing> = d8;

     label2:
        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d0, d2);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin> = $r1;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "transverse_mercator");

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("longitude_of_central_meridian", d2);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("latitude_of_projection_origin", d0);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("scale_factor_at_central_meridian", d4);

        $d9 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        $b0 = $d9 cmpl 0.0;

        if $b0 != 0 goto label3;

        $d12 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        $b1 = $d12 cmpl 0.0;

        if $b1 == 0 goto label4;

     label3:
        $d10 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("false_easting", $d10);

        $d11 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,double)>("false_northing", $d11);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: void addParameter(java.lang.String,java.lang.String)>("units", "km");

     label4:
        return;
    }

    public double getScale()
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        double $d0, $d1, $d2;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $d1 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d0 = <ucar.unidata.geoloc.projection.TransverseMercator: double EARTH_RADIUS>;

        $d2 = $d1 / $d0;

        return $d2;
    }

    public void setScale(double)
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        double d0, $d1, $d2;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        d0 := @parameter0: double;

        $d1 = <ucar.unidata.geoloc.projection.TransverseMercator: double EARTH_RADIUS>;

        $d2 = $d1 * d0;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double scale> = $d2;

        return;
    }

    public double getTangentLon()
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $r1 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        return $d0;
    }

    public void setTangentLon(double)
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>(d0);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0> = $d1;

        return;
    }

    public double getOriginLat()
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $r1 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        return $d0;
    }

    public void setOriginLat(double)
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>(d0);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0> = $d1;

        return;
    }

    public double getFalseEasting()
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $d0 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        return $d0;
    }

    public void setFalseEasting(double)
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting> = d0;

        return;
    }

    public double getFalseNorthing()
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $d0 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        return $d0;
    }

    public void setFalseNorthing(double)
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing> = d0;

        return;
    }

    public java.lang.String getProjectionTypeLabel()
    {
        ucar.unidata.geoloc.projection.TransverseMercator r0;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        return "Transverse mercator";
    }

    public java.lang.String paramsToString()
    {
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8;
        ucar.unidata.geoloc.projection.TransverseMercator r2;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        java.lang.String $r4, $r7, $r9;
        double $d0;

        r2 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" origin ");

        $r3 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $r4 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scale: ");

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.projection.TransverseMercator: double getScale()>();

        $r7 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>($d0, 6);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        byte $b0, $b1;
        int $i2, $i3;
        ucar.unidata.geoloc.projection.TransverseMercator r2;
        ucar.unidata.geoloc.ProjectionPoint r0, r1;
        boolean $z0, $z1, $z2;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10;

        r2 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r1 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        $z0 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d1 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        d2 = $d0 - $d1;

        $d3 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d4 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        d5 = $d3 - $d4;

        $d6 = d2 * d5;

        $b0 = $d6 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label3;

        $d7 = d2 - d5;

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $d9 = <ucar.unidata.geoloc.projection.TransverseMercator: double EARTH_RADIUS>;

        $d10 = 2.0 * $d9;

        $b1 = $d8 cmpl $d10;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        ucar.unidata.geoloc.projection.TransverseMercator r0, r2;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.Object clone()>();

        r2 = (ucar.unidata.geoloc.projection.TransverseMercator) $r1;

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: double getOriginLat()>();

        $d1 = virtualinvoke r0.<ucar.unidata.geoloc.projection.TransverseMercator: double getTangentLon()>();

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        r2.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.LatLonPointImpl origin> = $r3;

        $d2 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting> = $d2;

        $d3 = r0.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing> = $d3;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.unidata.geoloc.ProjectionRect $r3, $r4;
        byte $b0, $b1, $b2, $b3, $b4;
        ucar.unidata.geoloc.projection.TransverseMercator r1, r2;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.Object r0;

        r2 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.unidata.geoloc.projection.TransverseMercator;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ucar.unidata.geoloc.projection.TransverseMercator) r0;

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.projection.TransverseMercator: double getScale()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getScale()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label2;

        $d2 = virtualinvoke r2.<ucar.unidata.geoloc.projection.TransverseMercator: double getOriginLat()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getOriginLat()>();

        $b1 = $d2 cmpl $d3;

        if $b1 != 0 goto label2;

        $d4 = virtualinvoke r2.<ucar.unidata.geoloc.projection.TransverseMercator: double getTangentLon()>();

        $d5 = virtualinvoke r1.<ucar.unidata.geoloc.projection.TransverseMercator: double getTangentLon()>();

        $b2 = $d4 cmpl $d5;

        if $b2 != 0 goto label2;

        $d7 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        $d6 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        $b3 = $d7 cmpl $d6;

        if $b3 != 0 goto label2;

        $d9 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        $d8 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        $b4 = $d9 cmpl $d8;

        if $b4 != 0 goto label2;

        $r4 = r2.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $r3 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $z1 = virtualinvoke $r4.<ucar.unidata.geoloc.ProjectionRect: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        byte $b0;
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        int $i1;
        ucar.unidata.geoloc.projection.TransverseMercator r1;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25;
        ucar.unidata.geoloc.LatLonPoint r0;

        r1 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d4 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0>;

        d5 = $d2 - $d4;

        $d6 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d7 = staticinvoke <java.lang.Math: double sin(double)>(d5);

        d8 = $d6 * $d7;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d10 = $d9 - 1.0;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $b0 = $d11 cmpg 1.0E-6;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        d24 = 0.0;

        d25 = 0.0;

        goto label2;

     label1:
        $d12 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d13 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double atanh(double)>(d8);

        d24 = $d12 * $d13;

        $d14 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d15 = staticinvoke <java.lang.Math: double tan(double)>($d3);

        $d16 = staticinvoke <java.lang.Math: double cos(double)>(d5);

        $d17 = staticinvoke <java.lang.Math: double atan2(double,double)>($d15, $d16);

        $d18 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0>;

        $d19 = $d17 - $d18;

        d25 = $d14 * $d19;

     label2:
        $d20 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        $d23 = d24 + $d20;

        $d21 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        $d22 = d25 + $d21;

        virtualinvoke r2.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d23, $d22);

        return r2;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        ucar.unidata.geoloc.projection.TransverseMercator r1;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        ucar.unidata.geoloc.LatLonPointImpl r2;

        r1 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d2 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        $d4 = $d0 - $d2;

        $d3 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        d5 = $d4 / $d3;

        $d6 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        $d8 = $d1 - $d6;

        $d7 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d10 = $d8 / $d7;

        $d9 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0>;

        d11 = $d10 + $d9;

        $d12 = r1.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0>;

        $d13 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double sinh(double)>(d5);

        $d14 = staticinvoke <java.lang.Math: double cos(double)>(d11);

        $d15 = staticinvoke <java.lang.Math: double atan2(double,double)>($d13, $d14);

        $d16 = $d12 + $d15;

        $d17 = staticinvoke <java.lang.Math: double toDegrees(double)>($d16);

        $d18 = staticinvoke <java.lang.Math: double sin(double)>(d11);

        $d19 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double cosh(double)>(d5);

        $d20 = $d18 / $d19;

        $d21 = staticinvoke <java.lang.Math: double asin(double)>($d20);

        $d22 = staticinvoke <java.lang.Math: double toDegrees(double)>($d21);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d22);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d17);

        return r2;
    }

    public float[][] latLonToProj(float[][], float[][], int, int)
    {
        byte $b3;
        ucar.unidata.geoloc.projection.TransverseMercator r7;
        float $f0, $f1, $f2, $f3;
        float[] $r1, r2, r3, r5, r6;
        int i0, i1, i2, i4, $i5;
        double d0, d1, $d2, $d3, $d4, d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25;
        float[][] r0, r4;

        r7 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: float[][];

        r4 := @parameter1: float[][];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[i1];

        r3 = r0[i2];

        r5 = r4[0];

        r6 = r4[1];

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $f0 = r2[i4];

        d0 = (double) $f0;

        $f1 = r3[i4];

        d1 = (double) $f1;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>(d1);

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        $d4 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0>;

        d5 = $d2 - $d4;

        $d6 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d7 = staticinvoke <java.lang.Math: double sin(double)>(d5);

        d8 = $d6 * $d7;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d10 = $d9 - 1.0;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $b3 = $d11 cmpg 1.0E-6;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label2;

        d24 = 0.0;

        d25 = 0.0;

        goto label3;

     label2:
        $d12 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d13 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double atanh(double)>(d8);

        $d15 = $d12 * $d13;

        $d14 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        d24 = $d15 + $d14;

        $d16 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d17 = staticinvoke <java.lang.Math: double tan(double)>($d3);

        $d18 = staticinvoke <java.lang.Math: double cos(double)>(d5);

        $d19 = staticinvoke <java.lang.Math: double atan2(double,double)>($d17, $d18);

        $d20 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0>;

        $d21 = $d19 - $d20;

        $d23 = $d16 * $d21;

        $d22 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        d25 = $d23 + $d22;

     label3:
        $f2 = (float) d24;

        r5[i4] = $f2;

        $f3 = (float) d25;

        r6[i4] = $f3;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r4;
    }

    public float[][] projToLatLon(float[][], float[][])
    {
        ucar.unidata.geoloc.projection.TransverseMercator r7;
        float $f0, $f1, $f2, $f3;
        float[] $r1, r2, r3, r5, r6;
        int i0, i1;
        double d0, d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        float[][] r0, r4;

        r7 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: float[][];

        r4 := @parameter1: float[][];

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[0];

        r3 = r0[1];

        r5 = r4[0];

        r6 = r4[1];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f0 = r2[i1];

        d0 = (double) $f0;

        $f1 = r3[i1];

        d1 = (double) $f1;

        $d2 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        $d4 = d0 - $d2;

        $d3 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        d5 = $d4 / $d3;

        $d6 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        $d8 = d1 - $d6;

        $d7 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d10 = $d8 / $d7;

        $d9 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0>;

        d11 = $d10 + $d9;

        $d12 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0>;

        $d13 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double sinh(double)>(d5);

        $d14 = staticinvoke <java.lang.Math: double cos(double)>(d11);

        $d15 = staticinvoke <java.lang.Math: double atan2(double,double)>($d13, $d14);

        $d16 = $d12 + $d15;

        $d17 = staticinvoke <java.lang.Math: double toDegrees(double)>($d16);

        $d18 = staticinvoke <java.lang.Math: double sin(double)>(d11);

        $d19 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double cosh(double)>(d5);

        $d20 = $d18 / $d19;

        $d21 = staticinvoke <java.lang.Math: double asin(double)>($d20);

        $d22 = staticinvoke <java.lang.Math: double toDegrees(double)>($d21);

        $f2 = (float) $d22;

        r5[i1] = $f2;

        $f3 = (float) $d17;

        r6[i1] = $f3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    public double[][] latLonToProj(double[][], double[][], int, int)
    {
        byte $b3;
        ucar.unidata.geoloc.projection.TransverseMercator r7;
        double[][] r0, r4;
        double[] $r1, r2, r3, r5, r6;
        int i0, i1, i2, i4, $i5;
        double d0, d1, $d2, $d3, $d4, d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25;

        r7 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: double[][];

        r4 := @parameter1: double[][];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[i1];

        r3 = r0[i2];

        r5 = r4[0];

        r6 = r4[1];

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        d0 = r2[i4];

        d1 = r3[i4];

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>(d1);

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        $d4 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0>;

        d5 = $d2 - $d4;

        $d6 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d7 = staticinvoke <java.lang.Math: double sin(double)>(d5);

        d8 = $d6 * $d7;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d10 = $d9 - 1.0;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $b3 = $d11 cmpg 1.0E-6;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label2;

        d24 = 0.0;

        d25 = 0.0;

        goto label3;

     label2:
        $d12 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d13 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double atanh(double)>(d8);

        $d15 = $d12 * $d13;

        $d14 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        d24 = $d15 + $d14;

        $d16 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d17 = staticinvoke <java.lang.Math: double tan(double)>($d3);

        $d18 = staticinvoke <java.lang.Math: double cos(double)>(d5);

        $d19 = staticinvoke <java.lang.Math: double atan2(double,double)>($d17, $d18);

        $d20 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0>;

        $d21 = $d19 - $d20;

        $d23 = $d16 * $d21;

        $d22 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        d25 = $d23 + $d22;

     label3:
        r5[i4] = d24;

        r6[i4] = d25;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r4;
    }

    public double[][] projToLatLon(double[][], double[][])
    {
        ucar.unidata.geoloc.projection.TransverseMercator r7;
        double[][] r0, r4;
        double[] $r1, r2, r3, r5, r6;
        int i0, i1;
        double d0, d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;

        r7 := @this: ucar.unidata.geoloc.projection.TransverseMercator;

        r0 := @parameter0: double[][];

        r4 := @parameter1: double[][];

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[0];

        r3 = r0[1];

        r5 = r4[0];

        r6 = r4[1];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        d0 = r2[i1];

        d1 = r3[i1];

        $d2 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseEasting>;

        $d4 = d0 - $d2;

        $d3 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        d5 = $d4 / $d3;

        $d6 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double falseNorthing>;

        $d8 = d1 - $d6;

        $d7 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double scale>;

        $d10 = $d8 / $d7;

        $d9 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lat0>;

        d11 = $d10 + $d9;

        $d12 = r7.<ucar.unidata.geoloc.projection.TransverseMercator: double lon0>;

        $d13 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double sinh(double)>(d5);

        $d14 = staticinvoke <java.lang.Math: double cos(double)>(d11);

        $d15 = staticinvoke <java.lang.Math: double atan2(double,double)>($d13, $d14);

        $d16 = $d12 + $d15;

        $d17 = staticinvoke <java.lang.Math: double toDegrees(double)>($d16);

        $d18 = staticinvoke <java.lang.Math: double sin(double)>(d11);

        $d19 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double cosh(double)>(d5);

        $d20 = $d18 / $d19;

        $d21 = staticinvoke <java.lang.Math: double asin(double)>($d20);

        $d22 = staticinvoke <java.lang.Math: double toDegrees(double)>($d21);

        r5[i1] = $d22;

        r6[i1] = $d17;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }
}
