final class com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes)
    {
        com.mycila.inject.internal.asm.MethodVisitor $r1;
        org.xml.sax.Attributes r2;
        com.mycila.inject.internal.asm.Label $r4;
        java.lang.String $r3, r5;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule r0;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule;

        r5 := @parameter0: java.lang.String;

        r2 := @parameter1: org.xml.sax.Attributes;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $r3 = interfaceinvoke r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r4 = virtualinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$LabelRule: com.mycila.inject.internal.asm.Label getLabel(java.lang.Object)>($r3);

        interfaceinvoke $r1.<com.mycila.inject.internal.asm.MethodVisitor: void visitLabel(com.mycila.inject.internal.asm.Label)>($r4);

        return;
    }
}
