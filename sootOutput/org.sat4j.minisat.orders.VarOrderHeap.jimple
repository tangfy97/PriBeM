public class org.sat4j.minisat.orders.VarOrderHeap extends java.lang.Object implements org.sat4j.minisat.core.IOrder, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final double VAR_RESCALE_FACTOR;
    private static final double VAR_RESCALE_BOUND;
    protected double[] activity;
    private double varDecay;
    private double varInc;
    protected org.sat4j.minisat.core.ILits lits;
    private long nullchoice;
    protected org.sat4j.minisat.core.Heap heap;
    protected org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy $r1;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        $r1 = new org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy;

        specialinvoke $r1.<org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy: void <init>()>();

        specialinvoke r0.<org.sat4j.minisat.orders.VarOrderHeap: void <init>(org.sat4j.minisat.core.IPhaseSelectionStrategy)>($r1);

        return;
    }

    public void <init>(org.sat4j.minisat.core.IPhaseSelectionStrategy)
    {
        double[] $r1;
        org.sat4j.minisat.core.IPhaseSelectionStrategy r2;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        r2 := @parameter0: org.sat4j.minisat.core.IPhaseSelectionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (double)[1];

        r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity> = $r1;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: double varDecay> = 1.0;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: double varInc> = 1.0;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: long nullchoice> = 0L;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy> = r2;

        return;
    }

    public void setPhaseSelectionStrategy(org.sat4j.minisat.core.IPhaseSelectionStrategy)
    {
        org.sat4j.minisat.core.IPhaseSelectionStrategy r1;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        r1 := @parameter0: org.sat4j.minisat.core.IPhaseSelectionStrategy;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy> = r1;

        return;
    }

    public org.sat4j.minisat.core.IPhaseSelectionStrategy getPhaseSelectionStrategy()
    {
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r1;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        return $r1;
    }

    public void setLits(org.sat4j.minisat.core.ILits)
    {
        org.sat4j.minisat.orders.VarOrderHeap r0;
        org.sat4j.minisat.core.ILits r1;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        r1 := @parameter0: org.sat4j.minisat.core.ILits;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.ILits lits> = r1;

        return;
    }

    public int select()
    {
        double[] $r5;
        long $l3, $l4;
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r3;
        byte $b2;
        int $i0, $i1, $i5, $i7;
        org.sat4j.minisat.core.ILits $r4;
        boolean $z0, $z1;
        double $d0;
        org.sat4j.minisat.core.Heap $r1, $r2;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

     label1:
        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        $z0 = virtualinvoke $r1.<org.sat4j.minisat.core.Heap: boolean empty()>();

        if $z0 != 0 goto label4;

        $r2 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        $i0 = virtualinvoke $r2.<org.sat4j.minisat.core.Heap: int getmin()>();

        $r3 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        $i1 = interfaceinvoke $r3.<org.sat4j.minisat.core.IPhaseSelectionStrategy: int select(int)>($i0);

        $r4 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.ILits lits>;

        $z1 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: boolean isUnassigned(int)>($i1);

        if $z1 == 0 goto label3;

        $r5 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $d0 = $r5[$i0];

        $b2 = $d0 cmpg 1.0E-4;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label2;

        $l3 = r0.<org.sat4j.minisat.orders.VarOrderHeap: long nullchoice>;

        $l4 = $l3 + 1L;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: long nullchoice> = $l4;

     label2:
        return $i1;

     label3:
        goto label1;

     label4:
        $i7 = (int) -1;

        return $i7;
    }

    public void setVarDecay(double)
    {
        org.sat4j.minisat.orders.VarOrderHeap r0;
        double d0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        d0 := @parameter0: double;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: double varDecay> = d0;

        return;
    }

    public void undo(int)
    {
        org.sat4j.minisat.core.Heap $r1, $r2;
        int i0;
        org.sat4j.minisat.orders.VarOrderHeap r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        $z0 = virtualinvoke $r1.<org.sat4j.minisat.core.Heap: boolean inHeap(int)>(i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        virtualinvoke $r2.<org.sat4j.minisat.core.Heap: void insert(int)>(i0);

     label1:
        return;
    }

    public void updateVar(int)
    {
        org.sat4j.minisat.core.Heap $r2, $r3;
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r1;
        int i0, $i1;
        org.sat4j.minisat.orders.VarOrderHeap r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i0 := @parameter0: int;

        $i1 = staticinvoke <org.sat4j.core.LiteralsUtils: int var(int)>(i0);

        virtualinvoke r0.<org.sat4j.minisat.orders.VarOrderHeap: void updateActivity(int)>($i1);

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.IPhaseSelectionStrategy: void updateVar(int)>(i0);

        $r2 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        $z0 = virtualinvoke $r2.<org.sat4j.minisat.core.Heap: boolean inHeap(int)>($i1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        virtualinvoke $r3.<org.sat4j.minisat.core.Heap: void increase(int)>($i1);

     label1:
        return;
    }

    protected void updateActivity(int)
    {
        double[] $r1;
        byte $b1;
        int i0, $i2;
        org.sat4j.minisat.orders.VarOrderHeap r0;
        double $d0, $d1, $d2;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $d1 = $r1[i0];

        $d0 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double varInc>;

        $d2 = $d1 + $d0;

        $r1[i0] = $d2;

        $b1 = $d2 cmpl 1.0E100;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        specialinvoke r0.<org.sat4j.minisat.orders.VarOrderHeap: void varRescaleActivity()>();

     label1:
        return;
    }

    public void varDecayActivity()
    {
        org.sat4j.minisat.orders.VarOrderHeap r0;
        double $d0, $d1, $d2;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        $d1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double varInc>;

        $d0 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double varDecay>;

        $d2 = $d1 * $d0;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: double varInc> = $d2;

        return;
    }

    private void varRescaleActivity()
    {
        double[] $r1, $r2;
        int $i0, i1;
        org.sat4j.minisat.orders.VarOrderHeap r0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i1 = 1;

     label1:
        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $d2 = $r2[i1];

        $d3 = $d2 * 1.0E-100;

        $r2[i1] = $d3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $d0 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double varInc>;

        $d1 = $d0 * 1.0E-100;

        r0.<org.sat4j.minisat.orders.VarOrderHeap: double varInc> = $d1;

        return;
    }

    public double varActivity(int)
    {
        int i0, $i1;
        double[] $r1;
        org.sat4j.minisat.orders.VarOrderHeap r0;
        double $d0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $i1 = staticinvoke <org.sat4j.core.LiteralsUtils: int var(int)>(i0);

        $d0 = $r1[$i1];

        return $d0;
    }

    public int numberOfInterestingVariables()
    {
        double[] $r1, $r2;
        byte $b1;
        int $i0, i2, i3, $i4;
        org.sat4j.minisat.orders.VarOrderHeap r0;
        double $d0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i2 = 0;

        i3 = 1;

     label1:
        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $r2 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $d0 = $r2[i3];

        $b1 = $d0 cmpl 1.0;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label2;

        i2 = i2 + 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public void init()
    {
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r18;
        boolean $z0, $z1, $z2;
        org.sat4j.minisat.core.Heap $r6, $r20, $r22;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14;
        org.sat4j.minisat.orders.VarOrderHeap r0;
        double[] $r2, $r3, $r4, $r17, $r19, $r21;
        java.lang.AssertionError $r8, $r16;
        int $i0, i1, $i2, $i3, $i4, i5;
        java.lang.String $r15;
        org.sat4j.minisat.core.ILits $r1, $r5, $r7, $r11;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.ILits lits>;

        $i0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: int nVars()>();

        i1 = $i0 + 1;

        $r2 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        if $r2 == null goto label1;

        $r17 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $i4 = lengthof $r17;

        if $i4 >= i1 goto label2;

     label1:
        $r3 = newarray (double)[i1];

        r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity> = $r3;

     label2:
        $r18 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        interfaceinvoke $r18.<org.sat4j.minisat.core.IPhaseSelectionStrategy: void init(int)>(i1);

        $r19 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $r19[0] = -1.0;

        $r20 = new org.sat4j.minisat.core.Heap;

        $r21 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        specialinvoke $r20.<org.sat4j.minisat.core.Heap: void <init>(double[])>($r21);

        r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap> = $r20;

        $r22 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        virtualinvoke $r22.<org.sat4j.minisat.core.Heap: void setBounds(int)>(i1);

        i5 = 1;

     label3:
        if i5 >= i1 goto label7;

        $z0 = <org.sat4j.minisat.orders.VarOrderHeap: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if i5 > 0 goto label4;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label4:
        $z1 = <org.sat4j.minisat.orders.VarOrderHeap: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $r7 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.ILits lits>;

        $i2 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: int nVars()>();

        if i5 <= $i2 goto label5;

        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.ILits lits>;

        $i3 = interfaceinvoke $r11.<org.sat4j.minisat.core.ILits: int nVars()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        throw $r8;

     label5:
        $r4 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        $r4[i5] = 0.0;

        $r5 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.ILits lits>;

        $z2 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: boolean belongsToPool(int)>(i5);

        if $z2 == 0 goto label6;

        $r6 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.Heap heap>;

        virtualinvoke $r6.<org.sat4j.minisat.core.Heap: void insert(int)>(i5);

     label6:
        i5 = i5 + 1;

        goto label3;

     label7:
        return;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r3;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;
        org.sat4j.minisat.orders.VarOrderHeap r2;

        r2 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VSIDS like heuristics from MiniSAT using a heap ");

        $r3 = r2.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public org.sat4j.minisat.core.ILits getVocabulary()
    {
        org.sat4j.minisat.orders.VarOrderHeap r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.ILits lits>;

        return $r1;
    }

    public void printStat(java.io.PrintWriter, java.lang.String)
    {
        java.io.PrintWriter r0;
        long $l0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String r2, $r7;
        org.sat4j.minisat.orders.VarOrderHeap r5;

        r5 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        r0 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("non guided choices\t");

        $l0 = r5.<org.sat4j.minisat.orders.VarOrderHeap: long nullchoice>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;
    }

    public void assignLiteral(int)
    {
        int i0;
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r1;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.IPhaseSelectionStrategy: void assignLiteral(int)>(i0);

        return;
    }

    public void updateVarAtDecisionLevel(int)
    {
        int i0;
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r1;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.IPhaseSelectionStrategy: void updateVarAtDecisionLevel(int)>(i0);

        return;
    }

    public double[] getVariableHeuristics()
    {
        double[] $r1;
        org.sat4j.minisat.orders.VarOrderHeap r0;

        r0 := @this: org.sat4j.minisat.orders.VarOrderHeap;

        $r1 = r0.<org.sat4j.minisat.orders.VarOrderHeap: double[] activity>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.orders.VarOrderHeap: double VAR_RESCALE_BOUND> = 1.0E100;

        <org.sat4j.minisat.orders.VarOrderHeap: double VAR_RESCALE_FACTOR> = 1.0E-100;

        <org.sat4j.minisat.orders.VarOrderHeap: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/orders/VarOrderHeap;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.orders.VarOrderHeap: boolean $assertionsDisabled> = $z1;

        return;
    }
}
