public class org.apache.jena.fuseki.migrate.SinkRDFLimited extends org.apache.jena.riot.system.StreamRDFWrapper
{
    private long count;
    private final long limit;

    public void <init>(org.apache.jena.riot.system.StreamRDF, long)
    {
        org.apache.jena.riot.system.StreamRDF r1;
        long l0;
        org.apache.jena.fuseki.migrate.SinkRDFLimited r0;

        r0 := @this: org.apache.jena.fuseki.migrate.SinkRDFLimited;

        r1 := @parameter0: org.apache.jena.riot.system.StreamRDF;

        l0 := @parameter1: long;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void <init>(org.apache.jena.riot.system.StreamRDF)>(r1);

        r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count> = 0L;

        r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long limit> = l0;

        return;
    }

    public void triple(com.hp.hpl.jena.graph.Triple)
    {
        long $l0, $l1;
        org.apache.jena.fuseki.migrate.SinkRDFLimited r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: org.apache.jena.fuseki.migrate.SinkRDFLimited;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $l0 = r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count>;

        $l1 = $l0 + 1L;

        r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count> = $l1;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void triple(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public void quad(com.hp.hpl.jena.sparql.core.Quad)
    {
        long $l0, $l1;
        org.apache.jena.fuseki.migrate.SinkRDFLimited r0;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: org.apache.jena.fuseki.migrate.SinkRDFLimited;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $l0 = r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count>;

        $l1 = $l0 + 1L;

        r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count> = $l1;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void quad(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        return;
    }

    public void tuple(org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r1;
        long $l0, $l1;
        org.apache.jena.fuseki.migrate.SinkRDFLimited r0;

        r0 := @this: org.apache.jena.fuseki.migrate.SinkRDFLimited;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $l0 = r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count>;

        $l1 = $l0 + 1L;

        r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count> = $l1;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void tuple(org.apache.jena.atlas.lib.Tuple)>(r1);

        return;
    }

    public long getCount()
    {
        long $l0;
        org.apache.jena.fuseki.migrate.SinkRDFLimited r0;

        r0 := @this: org.apache.jena.fuseki.migrate.SinkRDFLimited;

        $l0 = r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long count>;

        return $l0;
    }

    public long getLimit()
    {
        long $l0;
        org.apache.jena.fuseki.migrate.SinkRDFLimited r0;

        r0 := @this: org.apache.jena.fuseki.migrate.SinkRDFLimited;

        $l0 = r0.<org.apache.jena.fuseki.migrate.SinkRDFLimited: long limit>;

        return $l0;
    }
}
