final class org.apache.xmlbeans.impl.store.Cur$Locations extends java.lang.Object
{
    private static final int NULL;
    private static final int _initialSize;
    private org.apache.xmlbeans.impl.store.Locale _locale;
    private org.apache.xmlbeans.impl.store.Xobj[] _xobjs;
    private int[] _poses;
    private org.apache.xmlbeans.impl.store.Cur[] _curs;
    private int[] _next;
    private int[] _prev;
    private int[] _nextN;
    private int[] _prevN;
    private int _free;
    private int _naked;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.xmlbeans.impl.store.Locale)
    {
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        java.lang.AssertionError $r18;
        org.apache.xmlbeans.impl.store.Cur[] $r4;
        int[] $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Xobj[] $r2, $r15;
        org.apache.xmlbeans.impl.store.Xobj $r16;
        org.apache.xmlbeans.impl.store.Locale r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Locale _locale> = r1;

        $r2 = newarray (org.apache.xmlbeans.impl.store.Xobj)[32];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs> = $r2;

        $r3 = newarray (int)[32];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses> = $r3;

        $r4 = newarray (org.apache.xmlbeans.impl.store.Cur)[32];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs> = $r4;

        $r5 = newarray (int)[32];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next> = $r5;

        $r6 = newarray (int)[32];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev> = $r6;

        $r7 = newarray (int)[32];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN> = $r7;

        $r8 = newarray (int)[32];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN> = $r8;

        i1 = 31;

     label1:
        if i1 < 0 goto label3;

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r15 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r16 = $r15[i1];

        if $r16 == null goto label2;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label2:
        $r10 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i3 = (int) -2;

        $r10[i1] = $i3;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i0 = i1 + 1;

        $r11[i1] = $i0;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        $i5 = (int) -1;

        $r12[i1] = $i5;

        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN>;

        $i7 = (int) -1;

        $r13[i1] = $i7;

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN>;

        $i9 = (int) -1;

        $r14[i1] = $i9;

        $i11 = (int) -1;

        i1 = i1 + $i11;

        goto label1;

     label3:
        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i13 = (int) -1;

        $r9[31] = $i13;

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free> = 0;

        $i15 = (int) -1;

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked> = $i15;

        return;
    }

    boolean isSamePos(int, org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Xobj[] $r6;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        org.apache.xmlbeans.impl.store.Cur[] $r1, $r4;
        org.apache.xmlbeans.impl.store.Xobj $r7, $r8;
        int[] $r9;
        int i0, $i1, $i2;
        org.apache.xmlbeans.impl.store.Cur $r2, r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        i0 := @parameter0: int;

        r3 := @parameter1: org.apache.xmlbeans.impl.store.Cur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r2 = $r1[i0];

        if $r2 != null goto label3;

        $r8 = r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r7 = $r6[i0];

        if $r8 != $r7 goto label1;

        $i2 = r3.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i1 = $r9[i0];

        if $i2 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r5 = $r4[i0];

        $z0 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean isSamePos(org.apache.xmlbeans.impl.store.Cur)>($r5);

        return $z0;
    }

    boolean isAtEndOf(int, org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        java.lang.AssertionError $r18, $r19;
        org.apache.xmlbeans.impl.store.Cur[] $r2, $r7, $r9, $r12, $r16;
        int[] $r14;
        int i0, $i1, $i2, $i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Xobj[] $r4;
        org.apache.xmlbeans.impl.store.Xobj $r5, $r6;
        org.apache.xmlbeans.impl.store.Cur r1, $r3, $r8, $r10, $r13, $r17;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r13 = $r12[i0];

        if $r13 != null goto label1;

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i2 = $r14[i0];

        if $i2 == 0 goto label1;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label1:
        $z3 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z3 != 0 goto label2;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r8 = $r7[i0];

        if $r8 == null goto label2;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r10 = $r9[i0];

        $z2 = virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z2 != 0 goto label2;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label2:
        $r16 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r17 = $r16[i0];

        if $r17 != null goto label5;

        $r6 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r5 = $r4[i0];

        if $r6 != $r5 goto label3;

        $i1 = r1.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i4 = (int) -1;

        if $i1 != $i4 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;

     label5:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r3 = $r2[i0];

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAtEndOf(org.apache.xmlbeans.impl.store.Cur)>($r3);

        return $z1;
    }

    void moveTo(int, org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Xobj[] $r6;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        org.apache.xmlbeans.impl.store.Cur[] $r1, $r4;
        org.apache.xmlbeans.impl.store.Xobj $r8;
        int[] $r7;
        int i0, $i1;
        org.apache.xmlbeans.impl.store.Cur $r2, r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        i0 := @parameter0: int;

        r3 := @parameter1: org.apache.xmlbeans.impl.store.Cur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r2 = $r1[i0];

        if $r2 != null goto label1;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r8 = $r6[i0];

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i1 = $r7[i0];

        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r8, $i1);

        goto label2;

     label1:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r5 = $r4[i0];

        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: void moveToCur(org.apache.xmlbeans.impl.store.Cur)>($r5);

     label2:
        return;
    }

    int insert(int, int, int)
    {
        int[] $r1, $r2;
        int i0, i1, i2, $i3;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        $i3 = staticinvoke <org.apache.xmlbeans.impl.store.Cur$Locations: int insert(int,int,int,int[],int[])>(i0, i1, i2, $r2, $r1);

        return $i3;
    }

    int remove(int, int)
    {
        org.apache.xmlbeans.impl.store.Cur[] $r1, $r11, $r13;
        int[] $r4, $r5, $r6, $r10, $r14, $r25, $r26, $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Cur r2, $r12;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        java.lang.AssertionError $r28, $r29, $r30, $r31, $r32;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i9, $i11, $i13;
        org.apache.xmlbeans.impl.store.Xobj[] $r3, $r7, $r16, $r19, $r22;
        org.apache.xmlbeans.impl.store.Xobj $r8, $r17, $r20, $r23;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        r2 = $r1[i0];

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r22 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r23 = $r22[i0];

        if $r23 != null goto label1;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label1:
        $z4 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z4 != 0 goto label2;

        if r2 != null goto label2;

        $r19 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r20 = $r19[i0];

        if $r20 != null goto label2;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label2:
        if r2 == null goto label4;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r12 = $r11[i0];

        virtualinvoke $r12.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r13[i0] = null;

        $z2 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r16 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r17 = $r16[i0];

        if $r17 == null goto label3;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label3:
        $z3 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z3 != 0 goto label7;

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i4 = $r14[i0];

        $i9 = (int) -2;

        if $i4 == $i9 goto label7;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label4:
        $z1 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z1 != 0 goto label6;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r8 = $r7[i0];

        if $r8 == null goto label5;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i3 = $r10[i0];

        $i11 = (int) -2;

        if $i3 != $i11 goto label6;

     label5:
        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label6:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r3[i0] = null;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i13 = (int) -2;

        $r4[i0] = $i13;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked>;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN>;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN>;

        $i2 = staticinvoke <org.apache.xmlbeans.impl.store.Cur$Locations: int remove(int,int,int[],int[])>($i1, i0, $r6, $r5);

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked> = $i2;

     label7:
        $r25 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $r26 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        $i6 = staticinvoke <org.apache.xmlbeans.impl.store.Cur$Locations: int remove(int,int,int[],int[])>(i5, i0, $r25, $r26);

        $r27 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i7 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free>;

        $r27[i0] = $i7;

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free> = i0;

        return $i6;
    }

    int allocate(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur[] $r14;
        int[] $r1, $r2, $r6, $r7, $r8, $r9, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.store.Cur r3, $r15;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        java.lang.AssertionError $r20, $r21, $r22, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13, $i15, $i17;
        org.apache.xmlbeans.impl.store.Xobj[] $r5, $r11;
        org.apache.xmlbeans.impl.store.Xobj $r4, $r12;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        r3 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z5 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean isPositioned()>();

        if $z5 != 0 goto label1;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free>;

        $i9 = (int) -1;

        if $i0 != $i9 goto label2;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Cur$Locations: void makeRoom()>();

     label2:
        $i7 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i1 = $r1[$i7];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free> = $i1;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i11 = (int) -1;

        $r2[$i7] = $i11;

        $z1 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r17 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        $i6 = $r17[$i7];

        $i13 = (int) -1;

        if $i6 == $i13 goto label3;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label3:
        $z2 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r15 = $r14[$i7];

        if $r15 == null goto label4;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label4:
        $z3 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z3 != 0 goto label5;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r12 = $r11[$i7];

        if $r12 == null goto label5;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label5:
        $z4 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z4 != 0 goto label6;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i5 = $r9[$i7];

        $i15 = (int) -2;

        if $i5 == $i15 goto label6;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label6:
        $r5 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r4 = r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r5[$i7] = $r4;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i2 = r3.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r6[$i7] = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked>;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN>;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN>;

        $i17 = (int) -1;

        $i4 = staticinvoke <org.apache.xmlbeans.impl.store.Cur$Locations: int insert(int,int,int,int[],int[])>($i3, $i17, $i7, $r8, $r7);

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked> = $i4;

        return $i7;
    }

    private static int insert(int, int, int, int[], int[])
    {
        java.lang.AssertionError $r4, $r5;
        int[] r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i8, $i10, $i12, $i14;
        boolean $z0, $z1;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        r0 := @parameter4: int[];

        $i8 = (int) -1;

        if i6 != $i8 goto label2;

        $z1 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $i10 = (int) -1;

        if i0 == $i10 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        r0[i1] = i1;

        i6 = i1;

        goto label5;

     label2:
        $i12 = (int) -1;

        if i0 == $i12 goto label3;

        $i5 = r0[i0];

        r0[i1] = $i5;

        r1[i1] = i0;

        r0[i0] = i1;

        if i6 != i0 goto label5;

        i6 = i1;

        goto label5;

     label3:
        $i2 = r0[i6];

        r0[i1] = $i2;

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $i4 = r1[i1];

        $i14 = (int) -1;

        if $i4 == $i14 goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $i3 = r0[i6];

        r1[$i3] = i1;

        r0[i6] = i1;

     label5:
        return i6;
    }

    private static int remove(int, int, int[], int[])
    {
        java.lang.AssertionError $r4, $r5;
        int[] r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11, $i13, $i15, $i17, $i19;
        boolean $z0, $z1;

        i9 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        r0 := @parameter3: int[];

        $i1 = r0[i0];

        if $i1 != i0 goto label2;

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i9 == i0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $i11 = (int) -1;

        i9 = $i11;

        goto label6;

     label2:
        if i9 != i0 goto label3;

        i9 = r1[i0];

        goto label4;

     label3:
        $i3 = r0[i0];

        $i2 = r1[i0];

        r1[$i3] = $i2;

     label4:
        $i4 = r1[i0];

        $i13 = (int) -1;

        if $i4 != $i13 goto label5;

        $i8 = r0[i0];

        r0[i9] = $i8;

        goto label6;

     label5:
        $i6 = r1[i0];

        $i5 = r0[i0];

        r0[$i6] = $i5;

        $i15 = (int) -1;

        r1[i0] = $i15;

     label6:
        $i17 = (int) -1;

        r0[i0] = $i17;

        $z1 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z1 != 0 goto label7;

        $i7 = r1[i0];

        $i19 = (int) -1;

        if $i7 == $i19 goto label7;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label7:
        return i9;
    }

    void notifyChange()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        java.lang.AssertionError $r19;
        org.apache.xmlbeans.impl.store.Cur[] $r4, $r6, $r13;
        int[] $r1, $r2, $r8, $r12, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i10;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Xobj[] $r7, $r11, $r15;
        org.apache.xmlbeans.impl.store.Xobj $r9, $r16;
        org.apache.xmlbeans.impl.store.Locale $r3;
        org.apache.xmlbeans.impl.store.Cur $r5, $r10, $r14;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked>;

        $i6 = (int) -1;

        if $i0 == $i6 goto label4;

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r14 = $r13[$i0];

        if $r14 != null goto label2;

        $r15 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r16 = $r15[$i0];

        if $r16 == null goto label2;

        $r17 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i4 = $r17[$i0];

        $i8 = (int) -2;

        if $i4 != $i8 goto label3;

     label2:
        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label3:
        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked>;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN>;

        $i2 = staticinvoke <org.apache.xmlbeans.impl.store.Cur$Locations: int remove(int,int,int[],int[])>($i1, $i0, $r2, $r1);

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _naked> = $i2;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur getCur()>();

        $r4[$i0] = $r5;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r10 = $r6[$i0];

        $r7 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r9 = $r7[$i0];

        $r8 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i3 = $r8[$i0];

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>($r9, $i3);

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r11[$i0] = null;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i10 = (int) -2;

        $r12[$i0] = $i10;

        goto label1;

     label4:
        return;
    }

    int next(int)
    {
        int[] $r1;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        int i0, $i1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i1 = $r1[i0];

        return $i1;
    }

    int prev(int)
    {
        int[] $r1;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        int i0, $i1;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        $i1 = $r1[i0];

        return $i1;
    }

    private void makeRoom()
    {
        org.apache.xmlbeans.impl.store.Cur[] $r4, $r11, $r24;
        int[] $r3, $r5, $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Cur$Locations r0;
        java.lang.AssertionError $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27;
        org.apache.xmlbeans.impl.store.Xobj[] $r1, $r2, $r9, $r22;

        r0 := @this: org.apache.xmlbeans.impl.store.Cur$Locations;

        $z0 = <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i11 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free>;

        $i15 = (int) -1;

        if $i11 == $i15 goto label1;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $i12 = lengthof $r1;

        $r22 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        $r23 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $r24 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        $r25 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $r26 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        $r27 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN>;

        $r28 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN>;

        $i0 = $i12 * 2;

        $r2 = newarray (org.apache.xmlbeans.impl.store.Xobj)[$i0];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs> = $r2;

        $i1 = $i12 * 2;

        $r3 = newarray (int)[$i1];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses> = $r3;

        $i2 = $i12 * 2;

        $r4 = newarray (org.apache.xmlbeans.impl.store.Cur)[$i2];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs> = $r4;

        $i3 = $i12 * 2;

        $r5 = newarray (int)[$i3];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next> = $r5;

        $i4 = $i12 * 2;

        $r6 = newarray (int)[$i4];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev> = $r6;

        $i5 = $i12 * 2;

        $r7 = newarray (int)[$i5];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN> = $r7;

        $i6 = $i12 * 2;

        $r8 = newarray (int)[$i6];

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN> = $r8;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Xobj[] _xobjs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, $r9, 0, $i12);

        $r10 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, 0, $r10, 0, $i12);

        $r11 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: org.apache.xmlbeans.impl.store.Cur[] _curs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r24, 0, $r11, 0, $i12);

        $r12 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r25, 0, $r12, 0, $i12);

        $r13 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r26, 0, $r13, 0, $i12);

        $r14 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r27, 0, $r14, 0, $i12);

        $r15 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r28, 0, $r15, 0, $i12);

        $i7 = $i12 * 2;

        i13 = $i7 - 1;

     label2:
        if i13 < $i12 goto label3;

        $r17 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i10 = i13 + 1;

        $r17[i13] = $i10;

        $r18 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prev>;

        $i17 = (int) -1;

        $r18[i13] = $i17;

        $r19 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _nextN>;

        $i19 = (int) -1;

        $r19[i13] = $i19;

        $r20 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _prevN>;

        $i21 = (int) -1;

        $r20[i13] = $i21;

        $r21 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _poses>;

        $i23 = (int) -2;

        $r21[i13] = $i23;

        $i25 = (int) -1;

        i13 = i13 + $i25;

        goto label2;

     label3:
        $r16 = r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int[] _next>;

        $i8 = $i12 * 2;

        $i9 = $i8 - 1;

        $i27 = (int) -1;

        $r16[$i9] = $i27;

        r0.<org.apache.xmlbeans.impl.store.Cur$Locations: int _free> = $i12;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.store.Cur$Locations: int _initialSize> = 32;

        <org.apache.xmlbeans.impl.store.Cur$Locations: int NULL> = -1;

        $r0 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$store$Cur>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Cur");

        <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$store$Cur> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.Cur: java.lang.Class class$org$apache$xmlbeans$impl$store$Cur>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.Cur$Locations: boolean $assertionsDisabled> = $z1;

        return;
    }
}
