public final class org.apache.lucene.util.Constants extends java.lang.Object
{
    public static final java.lang.String JVM_VENDOR;
    public static final java.lang.String JVM_VERSION;
    public static final java.lang.String JVM_NAME;
    public static final java.lang.String JAVA_VERSION;
    public static final java.lang.String OS_NAME;
    public static final boolean LINUX;
    public static final boolean WINDOWS;
    public static final boolean SUN_OS;
    public static final boolean MAC_OS_X;
    public static final java.lang.String OS_ARCH;
    public static final java.lang.String OS_VERSION;
    public static final java.lang.String JAVA_VENDOR;
    public static final boolean JRE_IS_MINIMUM_JAVA6;
    public static final boolean JRE_IS_MINIMUM_JAVA7;
    public static final boolean JRE_IS_MINIMUM_JAVA8;
    public static final boolean JRE_IS_64BIT;
    public static final java.lang.String LUCENE_MAIN_VERSION;
    public static final java.lang.String LUCENE_VERSION;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        org.apache.lucene.util.Constants r0;

        r0 := @this: org.apache.lucene.util.Constants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String ident(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toString()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Exception $r43;
        java.lang.StringBuilder $r28, $r29, $r32, $r33, $r35, $r36, $r54, $r55;
        java.lang.Object[] $r19;
        java.lang.AssertionError $r53;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r22, $r24, $r27, $r31, $r34, $r37, $r44, $r45, $r46, $r49, r50, $r51;
        java.lang.Number $r21;
        java.lang.Class[] $r17, $r39, $r48;
        java.lang.reflect.Field $r15;
        java.lang.NoSuchMethodException $r41, $r42;
        java.lang.reflect.Method $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, z13, z14;
        java.lang.String[] $r25;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.Boolean $r52;
        java.lang.Package $r23;
        java.lang.Class $r0, $r14, $r40, $r47;
        java.lang.Object $r16, $r20;

        $r0 = class "Lorg/apache/lucene/util/Constants;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        <org.apache.lucene.util.Constants: boolean $assertionsDisabled> = $z9;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor");

        <org.apache.lucene.util.Constants: java.lang.String JVM_VENDOR> = $r1;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.version");

        <org.apache.lucene.util.Constants: java.lang.String JVM_VERSION> = $r2;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.name");

        <org.apache.lucene.util.Constants: java.lang.String JVM_NAME> = $r3;

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        <org.apache.lucene.util.Constants: java.lang.String JAVA_VERSION> = $r4;

        $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        <org.apache.lucene.util.Constants: java.lang.String OS_NAME> = $r5;

        $r6 = <org.apache.lucene.util.Constants: java.lang.String OS_NAME>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("Linux");

        <org.apache.lucene.util.Constants: boolean LINUX> = $z1;

        $r7 = <org.apache.lucene.util.Constants: java.lang.String OS_NAME>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Windows");

        <org.apache.lucene.util.Constants: boolean WINDOWS> = $z2;

        $r8 = <org.apache.lucene.util.Constants: java.lang.String OS_NAME>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("SunOS");

        <org.apache.lucene.util.Constants: boolean SUN_OS> = $z3;

        $r9 = <org.apache.lucene.util.Constants: java.lang.String OS_NAME>;

        $z4 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("Mac OS X");

        <org.apache.lucene.util.Constants: boolean MAC_OS_X> = $z4;

        $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.arch");

        <org.apache.lucene.util.Constants: java.lang.String OS_ARCH> = $r10;

        $r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.version");

        <org.apache.lucene.util.Constants: java.lang.String OS_VERSION> = $r11;

        $r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vendor");

        <org.apache.lucene.util.Constants: java.lang.String JAVA_VENDOR> = $r12;

        $r52 = new java.lang.Boolean;

        specialinvoke $r52.<java.lang.Boolean: void <init>(boolean)>(1);

        $z5 = virtualinvoke $r52.<java.lang.Boolean: boolean booleanValue()>();

        <org.apache.lucene.util.Constants: boolean JRE_IS_MINIMUM_JAVA6> = $z5;

     label03:
        $r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.misc.Unsafe");

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("theUnsafe");

        virtualinvoke $r15.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r16 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r17 = newarray (java.lang.Class)[0];

        $r18 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addressSize", $r17);

        $r19 = newarray (java.lang.Object)[0];

        $r20 = virtualinvoke $r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r16, $r19);

        $r21 = (java.lang.Number) $r20;

        $i0 = virtualinvoke $r21.<java.lang.Number: int intValue()>();

        if $i0 < 8 goto label04;

        $z10 = 1;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        z11 = $z10;

     label06:
        goto label12;

     label07:
        $r43 := @caughtexception;

        $r44 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.arch.data.model");

        if $r44 == null goto label10;

        $i3 = virtualinvoke $r44.<java.lang.String: int indexOf(java.lang.String)>("64");

        $i5 = (int) -1;

        if $i3 == $i5 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        z11 = $z12;

        goto label12;

     label10:
        $r45 = <org.apache.lucene.util.Constants: java.lang.String OS_ARCH>;

        if $r45 == null goto label11;

        $r46 = <org.apache.lucene.util.Constants: java.lang.String OS_ARCH>;

        $i2 = virtualinvoke $r46.<java.lang.String: int indexOf(java.lang.String)>("64");

        $i7 = (int) -1;

        if $i2 == $i7 goto label11;

        z11 = 1;

        goto label12;

     label11:
        z11 = 0;

     label12:
        <org.apache.lucene.util.Constants: boolean JRE_IS_64BIT> = z11;

        z13 = 1;

     label13:
        $r47 = class "Ljava/lang/Throwable;";

        $r48 = newarray (java.lang.Class)[0];

        virtualinvoke $r47.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSuppressed", $r48);

     label14:
        goto label16;

     label15:
        $r42 := @caughtexception;

        z13 = 0;

     label16:
        <org.apache.lucene.util.Constants: boolean JRE_IS_MINIMUM_JAVA7> = z13;

        $z6 = <org.apache.lucene.util.Constants: boolean JRE_IS_MINIMUM_JAVA7>;

        if $z6 == 0 goto label21;

        z14 = 1;

     label17:
        $r40 = class "Ljava/util/Collections;";

        $r39 = newarray (java.lang.Class)[0];

        virtualinvoke $r40.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("emptySortedSet", $r39);

     label18:
        goto label20;

     label19:
        $r41 := @caughtexception;

        z14 = 0;

     label20:
        <org.apache.lucene.util.Constants: boolean JRE_IS_MINIMUM_JAVA8> = z14;

        goto label22;

     label21:
        <org.apache.lucene.util.Constants: boolean JRE_IS_MINIMUM_JAVA8> = 0;

     label22:
        $r22 = staticinvoke <org.apache.lucene.util.Constants: java.lang.String ident(java.lang.String)>("4.3.1");

        <org.apache.lucene.util.Constants: java.lang.String LUCENE_MAIN_VERSION> = $r22;

        $r23 = staticinvoke <org.apache.lucene.LucenePackage: java.lang.Package get()>();

        if $r23 != null goto label23;

        $r49 = null;

        goto label24;

     label23:
        $r49 = virtualinvoke $r23.<java.lang.Package: java.lang.String getImplementationVersion()>();

     label24:
        r50 = $r49;

        if $r49 != null goto label27;

        $r24 = <org.apache.lucene.util.Constants: java.lang.String LUCENE_MAIN_VERSION>;

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i1 = lengthof $r25;

        if $i1 != 4 goto label26;

        $z7 = <org.apache.lucene.util.Constants: boolean $assertionsDisabled>;

        if $z7 != 0 goto label25;

        $r37 = $r25[2];

        $z8 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z8 != 0 goto label25;

        $r53 = new java.lang.AssertionError;

        specialinvoke $r53.<java.lang.AssertionError: void <init>()>();

        throw $r53;

     label25:
        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r31 = $r25[0];

        $r32 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r34 = $r25[1];

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-SNAPSHOT");

        r50 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label27;

     label26:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r27 = <org.apache.lucene.util.Constants: java.lang.String LUCENE_MAIN_VERSION>;

        $r28 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-SNAPSHOT");

        r50 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label27:
        $r51 = staticinvoke <org.apache.lucene.util.Constants: java.lang.String ident(java.lang.String)>(r50);

        <org.apache.lucene.util.Constants: java.lang.String LUCENE_VERSION> = $r51;

        return;

        catch java.lang.Exception from label03 to label06 with label07;
        catch java.lang.NoSuchMethodException from label13 to label14 with label15;
        catch java.lang.NoSuchMethodException from label17 to label18 with label19;
    }
}
