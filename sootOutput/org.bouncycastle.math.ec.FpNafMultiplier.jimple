class org.bouncycastle.math.ec.FpNafMultiplier extends java.lang.Object implements org.bouncycastle.math.ec.ECMultiplier
{

    void <init>()
    {
        org.bouncycastle.math.ec.FpNafMultiplier r0;

        r0 := @this: org.bouncycastle.math.ec.FpNafMultiplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.bouncycastle.math.ec.ECPoint multiply(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, org.bouncycastle.math.ec.PreCompInfo)
    {
        org.bouncycastle.math.ec.FpNafMultiplier r6;
        org.bouncycastle.math.ec.ECPoint r3, $r4, $r5, r8, $r9;
        org.bouncycastle.math.ec.PreCompInfo r7;
        int $i0, i1, $i3;
        java.math.BigInteger r0, $r1, $r2;
        boolean $z0, $z1;

        r6 := @this: org.bouncycastle.math.ec.FpNafMultiplier;

        r3 := @parameter0: org.bouncycastle.math.ec.ECPoint;

        r0 := @parameter1: java.math.BigInteger;

        r7 := @parameter2: org.bouncycastle.math.ec.PreCompInfo;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(3L);

        $r2 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r1);

        $r4 = virtualinvoke r3.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint negate()>();

        r8 = r3;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int bitLength()>();

        i1 = $i0 - 2;

     label1:
        if i1 <= 0 goto label5;

        $r5 = virtualinvoke r8.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint twice()>();

        r8 = $r5;

        $z0 = virtualinvoke $r2.<java.math.BigInteger: boolean testBit(int)>(i1);

        $z1 = virtualinvoke r0.<java.math.BigInteger: boolean testBit(int)>(i1);

        if $z0 == $z1 goto label4;

        if $z0 == 0 goto label2;

        $r9 = r3;

        goto label3;

     label2:
        $r9 = $r4;

     label3:
        r8 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)>($r9);

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label5:
        return r8;
    }
}
