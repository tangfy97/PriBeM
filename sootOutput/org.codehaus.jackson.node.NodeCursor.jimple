abstract class org.codehaus.jackson.node.NodeCursor extends org.codehaus.jackson.JsonStreamContext
{
    final org.codehaus.jackson.node.NodeCursor _parent;

    public void <init>(int, org.codehaus.jackson.node.NodeCursor)
    {
        org.codehaus.jackson.node.NodeCursor r0, r1;
        int i0, $i2;

        r0 := @this: org.codehaus.jackson.node.NodeCursor;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.jackson.node.NodeCursor;

        specialinvoke r0.<org.codehaus.jackson.JsonStreamContext: void <init>()>();

        r0.<org.codehaus.jackson.node.NodeCursor: int _type> = i0;

        $i2 = (int) -1;

        r0.<org.codehaus.jackson.node.NodeCursor: int _index> = $i2;

        r0.<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.node.NodeCursor _parent> = r1;

        return;
    }

    public final org.codehaus.jackson.node.NodeCursor getParent()
    {
        org.codehaus.jackson.node.NodeCursor r0, $r1;

        r0 := @this: org.codehaus.jackson.node.NodeCursor;

        $r1 = r0.<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.node.NodeCursor _parent>;

        return $r1;
    }

    public abstract java.lang.String getCurrentName();

    public abstract org.codehaus.jackson.JsonToken nextToken();

    public abstract org.codehaus.jackson.JsonToken nextValue();

    public abstract org.codehaus.jackson.JsonToken endToken();

    public abstract org.codehaus.jackson.JsonNode currentNode();

    public abstract boolean currentHasChildren();

    public final org.codehaus.jackson.node.NodeCursor iterateChildren()
    {
        java.lang.IllegalStateException $r2, $r11;
        org.codehaus.jackson.node.NodeCursor$Array $r10;
        org.codehaus.jackson.JsonNode $r1;
        org.codehaus.jackson.node.NodeCursor$Object $r9;
        org.codehaus.jackson.node.NodeCursor r0;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.Class $r5;
        java.lang.String $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.node.NodeCursor;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.JsonNode currentNode()>();

        if $r1 != null goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No current node");

        throw $r11;

     label1:
        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonNode: boolean isArray()>();

        if $z0 == 0 goto label2;

        $r10 = new org.codehaus.jackson.node.NodeCursor$Array;

        specialinvoke $r10.<org.codehaus.jackson.node.NodeCursor$Array: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.node.NodeCursor)>($r1, r0);

        return $r10;

     label2:
        $z1 = virtualinvoke $r1.<org.codehaus.jackson.JsonNode: boolean isObject()>();

        if $z1 == 0 goto label3;

        $r9 = new org.codehaus.jackson.node.NodeCursor$Object;

        specialinvoke $r9.<org.codehaus.jackson.node.NodeCursor$Object: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.node.NodeCursor)>($r1, r0);

        return $r9;

     label3:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current node of type ");

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public volatile org.codehaus.jackson.JsonStreamContext getParent()
    {
        org.codehaus.jackson.node.NodeCursor r0, $r1;

        r0 := @this: org.codehaus.jackson.node.NodeCursor;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.node.NodeCursor getParent()>();

        return $r1;
    }
}
