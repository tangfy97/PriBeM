public class org.apache.pdfbox.pdfparser.VisualSignatureParser extends org.apache.pdfbox.pdfparser.BaseParser
{
    private static final org.apache.commons.logging.Log LOG;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdfparser.VisualSignatureParser r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.pdfbox.pdfparser.VisualSignatureParser;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void <init>(java.io.InputStream)>(r1);

        return;
    }

    public void parse() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument $r1;
        org.apache.pdfbox.io.PushBackInputStream $r2;
        org.apache.pdfbox.pdfparser.VisualSignatureParser r0;
        java.io.IOException $r3, $r4;
        org.apache.commons.logging.Log $r5;
        boolean $z0, z1;

        r0 := @this: org.apache.pdfbox.pdfparser.VisualSignatureParser;

        $r1 = new org.apache.pdfbox.cos.COSDocument;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSDocument: void <init>()>();

        r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.cos.COSDocument document> = $r1;

        specialinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipToNextObj()>();

        z1 = 0;

     label1:
        if z1 != 0 goto label6;

        $r2 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $z0 = virtualinvoke $r2.<org.apache.pdfbox.io.PushBackInputStream: boolean isEOF()>();

        if $z0 == 0 goto label2;

        goto label6;

     label2:
        z1 = specialinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: boolean parseObject()>();

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = <org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Parsing Error, Skipping Object", $r4);

        specialinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipToNextObj()>();

     label5:
        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipSpaces()>();

        goto label1;

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        if z1 != 0 goto label8;

        throw $r3;

     label8:
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label1 to label6 with label7;
    }

    private void skipToNextObj() throws java.io.IOException
    {
        byte[] r0;
        java.util.regex.Matcher $r6;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.pdfbox.io.PushBackInputStream $r3, $r4, $r7, $r8;
        org.apache.pdfbox.pdfparser.VisualSignatureParser r2;
        java.util.regex.Pattern $r1;

        r2 := @this: org.apache.pdfbox.pdfparser.VisualSignatureParser;

        r0 = newarray (byte)[16];

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("\\d+\\s+\\d+\\s+obj.*", 32);

     label1:
        $r3 = r2.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $z0 = virtualinvoke $r3.<org.apache.pdfbox.io.PushBackInputStream: boolean isEOF()>();

        if $z0 != 0 goto label5;

        $r4 = r2.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $i0 = virtualinvoke $r4.<org.apache.pdfbox.io.PushBackInputStream: int read(byte[])>(r0);

        if $i0 >= 1 goto label2;

        goto label5;

     label2:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "US-ASCII");

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("trailer");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("xref");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("startxref");

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("stream");

        if $z4 != 0 goto label3;

        $r6 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        $z5 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z5 == 0 goto label4;

     label3:
        $r8 = r2.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        virtualinvoke $r8.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[])>(r0);

        goto label5;

     label4:
        $r7 = r2.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $i1 = $i0 - 1;

        virtualinvoke $r7.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[],int,int)>(r0, 1, $i1);

        goto label1;

     label5:
        return;
    }

    private boolean parseObject() throws java.io.IOException
    {
        byte[] $r23, $r26, $r29, $r31;
        org.apache.pdfbox.cos.COSBase $r17, r63;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r14, $r40, $r41, $r42, $r44, $r52, $r53, $r54, $r55, $r56, $r57, $r59, $r65, $r67, $r71;
        long $l3, l6;
        java.lang.String $r3, $r10, $r13, $r15, $r18, $r28, $r37, $r45, $r48, $r49, $r60, r64;
        org.apache.pdfbox.cos.COSDocument $r20, $r35;
        java.lang.NumberFormatException $r47;
        java.io.IOException $r62, $r66, $r68, $r69, $r72;
        org.apache.pdfbox.io.RandomAccess $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12;
        org.apache.pdfbox.pdfparser.VisualSignatureParser r0;
        org.apache.pdfbox.persistence.util.COSObjectKey $r70;
        org.apache.pdfbox.cos.COSDictionary $r34;
        org.apache.pdfbox.cos.COSObject $r21;
        int $i0, $i1, $i2, $i4, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19;
        org.apache.pdfbox.io.PushBackInputStream $r1, $r2, $r4, $r16, $r22, $r24, $r25, $r27, $r30, $r32, $r43, $r46, $r58, $r61;
        char c5, c7;

        r0 := @this: org.apache.pdfbox.pdfparser.VisualSignatureParser;

        z11 = 0;

        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipSpaces()>();

        $r1 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.io.PushBackInputStream: int peek()>();

        c5 = (char) $i0;

     label01:
        $i9 = (int) c5;

        if $i9 != 101 goto label02;

        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString()>();

        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipSpaces()>();

        $r46 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $i4 = virtualinvoke $r46.<org.apache.pdfbox.io.PushBackInputStream: int peek()>();

        c5 = (char) $i4;

        goto label01;

     label02:
        $r2 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $z0 = virtualinvoke $r2.<org.apache.pdfbox.io.PushBackInputStream: boolean isEOF()>();

        if $z0 == 0 goto label03;

        goto label25;

     label03:
        $i10 = (int) c5;

        if $i10 != 120 goto label04;

        return 1;

     label04:
        $i11 = (int) c5;

        if $i11 == 116 goto label05;

        $i12 = (int) c5;

        if $i12 != 115 goto label08;

     label05:
        $i13 = (int) c5;

        if $i13 != 116 goto label06;

        return 1;

     label06:
        $i14 = (int) c5;

        if $i14 != 115 goto label25;

        specialinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipToNextObj()>();

        $r3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readExpectedString(java.lang.String)>("%%EOF");

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("%%EOF");

        $i16 = (int) -1;

        if $i1 != $i16 goto label07;

        $r4 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $z1 = virtualinvoke $r4.<org.apache.pdfbox.io.PushBackInputStream: boolean isEOF()>();

        if $z1 != 0 goto label07;

        $r66 = new java.io.IOException;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected=\'%%EOF\' actual=\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' next=");

        $r10 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" next=");

        $r13 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r66;

     label07:
        z11 = 1;

        goto label25;

     label08:
        l6 = -1L;

        z12 = 0;

     label09:
        $r16 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $i2 = virtualinvoke $r16.<org.apache.pdfbox.io.PushBackInputStream: int peek()>();

        c7 = (char) $i2;

        $i17 = (int) c7;

        if $i17 != 60 goto label10;

        z12 = 1;

        goto label11;

     label10:
        l6 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: long readObjectNumber()>();

     label11:
        goto label13;

     label12:
        $r62 := @caughtexception;

        l6 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: long readObjectNumber()>();

     label13:
        if z12 != 0 goto label14;

        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipSpaces()>();

        i8 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: int readGenerationNumber()>();

        $r37 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString(int)>(3);

        $z7 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>("obj");

        if $z7 != 0 goto label15;

        $r68 = new java.io.IOException;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected=\'obj\' actual=\'");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r43 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r68.<java.io.IOException: void <init>(java.lang.String)>($r45);

        throw $r68;

     label14:
        l6 = -1L;

        $i19 = (int) -1;

        i8 = $i19;

     label15:
        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipSpaces()>();

        $r17 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.cos.COSBase parseDirObject()>();

        r63 = $r17;

        $r18 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString()>();

        r64 = $r18;

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("stream");

        if $z2 == 0 goto label18;

        $r30 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $r31 = virtualinvoke $r18.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r30.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[])>($r31);

        $r32 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        virtualinvoke $r32.<org.apache.pdfbox.io.PushBackInputStream: void unread(int)>(32);

        $z6 = $r17 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z6 == 0 goto label16;

        $r34 = (org.apache.pdfbox.cos.COSDictionary) $r17;

        $r35 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r36 = virtualinvoke $r35.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess getScratchFile()>();

        r63 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)>($r34, $r36);

        goto label17;

     label16:
        $r69 = new java.io.IOException;

        specialinvoke $r69.<java.io.IOException: void <init>(java.lang.String)>("stream not preceded by dictionary");

        throw $r69;

     label17:
        r64 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString()>();

     label18:
        $r70 = new org.apache.pdfbox.persistence.util.COSObjectKey;

        $l3 = (long) i8;

        specialinvoke $r70.<org.apache.pdfbox.persistence.util.COSObjectKey: void <init>(long,long)>(l6, $l3);

        $r20 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.cos.COSDocument document>;

        $r21 = virtualinvoke $r20.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.persistence.util.COSObjectKey)>($r70);

        virtualinvoke r63.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        virtualinvoke $r21.<org.apache.pdfbox.cos.COSObject: void setObject(org.apache.pdfbox.cos.COSBase)>(r63);

        $z3 = virtualinvoke r64.<java.lang.String: boolean equals(java.lang.Object)>("endobj");

        if $z3 != 0 goto label24;

        $z4 = virtualinvoke r64.<java.lang.String: boolean startsWith(java.lang.String)>("endobj");

        if $z4 == 0 goto label19;

        $r27 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $r28 = virtualinvoke r64.<java.lang.String: java.lang.String substring(int)>(6);

        $r29 = virtualinvoke $r28.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r27.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[])>($r29);

        goto label24;

     label19:
        $r22 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $z5 = virtualinvoke $r22.<org.apache.pdfbox.io.PushBackInputStream: boolean isEOF()>();

        if $z5 != 0 goto label24;

     label20:
        staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r64);

        $r24 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $r23 = <org.apache.pdfbox.pdfwriter.COSWriter: byte[] SPACE>;

        virtualinvoke $r24.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[])>($r23);

        $r25 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $r26 = virtualinvoke r64.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r25.<org.apache.pdfbox.io.PushBackInputStream: void unread(byte[])>($r26);

     label21:
        goto label24;

     label22:
        $r47 := @caughtexception;

        $r48 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString()>();

        $z8 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("endobj");

        if $z8 != 0 goto label24;

        $z9 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: boolean isClosing()>();

        if $z9 == 0 goto label23;

        $r61 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        virtualinvoke $r61.<org.apache.pdfbox.io.PushBackInputStream: int read()>();

     label23:
        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipSpaces()>();

        $r49 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: java.lang.String readString()>();

        $z10 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>("endobj");

        if $z10 != 0 goto label24;

        $r72 = new java.io.IOException;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected=\'endobj\' firstReadAttempt=\'");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("secondReadAttempt=\'");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r58 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.io.PushBackInputStream pdfSource>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r72.<java.io.IOException: void <init>(java.lang.String)>($r60);

        throw $r72;

     label24:
        virtualinvoke r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: void skipSpaces()>();

     label25:
        return z11;

        catch java.io.IOException from label09 to label11 with label12;
        catch java.lang.NumberFormatException from label20 to label21 with label22;
    }

    public org.apache.pdfbox.cos.COSDocument getDocument() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument $r1, $r2;
        org.apache.pdfbox.pdfparser.VisualSignatureParser r0;
        java.io.IOException $r3;

        r0 := @this: org.apache.pdfbox.pdfparser.VisualSignatureParser;

        $r1 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.cos.COSDocument document>;

        if $r1 != null goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("You must call parse() before calling getDocument()");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.pdfbox.cos.COSDocument document>;

        return $r2;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdfparser/PDFParser;");

        <org.apache.pdfbox.pdfparser.VisualSignatureParser: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
