class org.apache.lucene.codecs.DocValuesConsumer$7$1 extends java.lang.Object implements java.util.Iterator
{
    int readerUpto;
    int docIDUpto;
    long nextValue;
    org.apache.lucene.index.AtomicReader currentReader;
    org.apache.lucene.util.Bits currentLiveDocs;
    boolean nextIsSet;
    long[] ords;
    int ordUpto;
    int ordLength;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.DocValuesConsumer$7 this$1;

    void <init>(org.apache.lucene.codecs.DocValuesConsumer$7)
    {
        org.apache.lucene.codecs.DocValuesConsumer$7 r1;
        long[] $r2;
        int $i1;
        org.apache.lucene.codecs.DocValuesConsumer$7$1 r0;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$7$1;

        r1 := @parameter0: org.apache.lucene.codecs.DocValuesConsumer$7;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.codecs.DocValuesConsumer$7 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto> = $i1;

        $r2 = newarray (long)[8];

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long[] ords> = $r2;

        return;
    }

    public boolean hasNext()
    {
        org.apache.lucene.codecs.DocValuesConsumer$7$1 r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$7$1;

        $z0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean nextIsSet>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean setNext()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.DocValuesConsumer$7$1 r1;

        r1 := @this: org.apache.lucene.codecs.DocValuesConsumer$7$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Number next()
    {
        long $l0;
        java.lang.AssertionError $r2;
        java.lang.Long $r1;
        org.apache.lucene.codecs.DocValuesConsumer$7$1 r0;
        java.util.NoSuchElementException $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$7$1;

        $z0 = virtualinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $z1 = <org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean nextIsSet>;

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean nextIsSet> = 0;

        $l0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long nextValue>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r1;
    }

    private boolean setNext()
    {
        byte $b34;
        org.apache.lucene.codecs.DocValuesConsumer$7$1 r0;
        boolean $z0, $z1;
        org.apache.lucene.index.AtomicReader[] $r3, $r5, $r25;
        org.apache.lucene.index.MultiDocValues$OrdinalMap $r15;
        org.apache.lucene.index.AtomicReader $r1, $r6, $r7, $r9, $r19;
        org.apache.lucene.index.SortedSetDocValues[] $r12;
        long $l17, $l28, $l33;
        java.lang.AssertionError $r21;
        long[] $r13, $r16, $r17, $r18, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32;
        org.apache.lucene.index.SortedSetDocValues $r20;
        org.apache.lucene.util.Bits $r8, $r10, $r22;
        org.apache.lucene.codecs.DocValuesConsumer$7 $r2, $r4, $r11, $r14, $r24;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$7$1;

     label01:
        $i31 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto>;

        $r24 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.codecs.DocValuesConsumer$7 this$1>;

        $r25 = $r24.<org.apache.lucene.codecs.DocValuesConsumer$7: org.apache.lucene.index.AtomicReader[] val$readers>;

        $i32 = lengthof $r25;

        if $i31 != $i32 goto label02;

        return 0;

     label02:
        $i1 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordUpto>;

        $i0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordLength>;

        if $i1 >= $i0 goto label03;

        $r23 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long[] ords>;

        $i27 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordUpto>;

        $l28 = $r23[$i27];

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long nextValue> = $l28;

        $i29 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordUpto>;

        $i30 = $i29 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordUpto> = $i30;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean nextIsSet> = 1;

        return 1;

     label03:
        $r1 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.index.AtomicReader currentReader>;

        if $r1 == null goto label04;

        $i7 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto>;

        $r9 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.index.AtomicReader currentReader>;

        $i8 = virtualinvoke $r9.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if $i7 != $i8 goto label06;

     label04:
        $i2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto> = $i3;

        $i5 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto>;

        $r2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.codecs.DocValuesConsumer$7 this$1>;

        $r3 = $r2.<org.apache.lucene.codecs.DocValuesConsumer$7: org.apache.lucene.index.AtomicReader[] val$readers>;

        $i4 = lengthof $r3;

        if $i5 >= $i4 goto label05;

        $r4 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.codecs.DocValuesConsumer$7 this$1>;

        $r5 = $r4.<org.apache.lucene.codecs.DocValuesConsumer$7: org.apache.lucene.index.AtomicReader[] val$readers>;

        $i6 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto>;

        $r6 = $r5[$i6];

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.index.AtomicReader currentReader> = $r6;

        $r7 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.index.AtomicReader currentReader>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.util.Bits currentLiveDocs> = $r8;

     label05:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto> = 0;

        goto label01;

     label06:
        $r10 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.util.Bits currentLiveDocs>;

        if $r10 == null goto label07;

        $r22 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.util.Bits currentLiveDocs>;

        $i24 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto>;

        $z1 = interfaceinvoke $r22.<org.apache.lucene.util.Bits: boolean get(int)>($i24);

        if $z1 == 0 goto label12;

     label07:
        $z0 = <org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label08;

        $i22 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto>;

        $r19 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.index.AtomicReader currentReader>;

        $i23 = virtualinvoke $r19.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if $i22 < $i23 goto label08;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label08:
        $r11 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.codecs.DocValuesConsumer$7 this$1>;

        $r12 = $r11.<org.apache.lucene.codecs.DocValuesConsumer$7: org.apache.lucene.index.SortedSetDocValues[] val$dvs>;

        $i9 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto>;

        $r20 = $r12[$i9];

        $i10 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto>;

        virtualinvoke $r20.<org.apache.lucene.index.SortedSetDocValues: void setDocument(int)>($i10);

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordLength> = 0;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordUpto> = 0;

     label09:
        $l33 = virtualinvoke $r20.<org.apache.lucene.index.SortedSetDocValues: long nextOrd()>();

        $b34 = $l33 cmp -1L;

        if $b34 == 0 goto label11;

        $i14 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordLength>;

        $r13 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long[] ords>;

        $i13 = lengthof $r13;

        if $i14 != $i13 goto label10;

        $r17 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long[] ords>;

        $i20 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordLength>;

        $i21 = $i20 + 1;

        $r18 = staticinvoke <org.apache.lucene.util.ArrayUtil: long[] grow(long[],int)>($r17, $i21);

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long[] ords> = $r18;

     label10:
        $r16 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: long[] ords>;

        $i16 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordLength>;

        $r14 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: org.apache.lucene.codecs.DocValuesConsumer$7 this$1>;

        $r15 = $r14.<org.apache.lucene.codecs.DocValuesConsumer$7: org.apache.lucene.index.MultiDocValues$OrdinalMap val$map>;

        $i15 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int readerUpto>;

        $l17 = virtualinvoke $r15.<org.apache.lucene.index.MultiDocValues$OrdinalMap: long getGlobalOrd(int,long)>($i15, $l33);

        $r16[$i16] = $l17;

        $i18 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordLength>;

        $i19 = $i18 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int ordLength> = $i19;

        goto label09;

     label11:
        $i11 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto>;

        $i12 = $i11 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto> = $i12;

        goto label01;

     label12:
        $i25 = r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto>;

        $i26 = $i25 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: int docIDUpto> = $i26;

        goto label01;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.codecs.DocValuesConsumer$7$1 r0;
        java.lang.Number $r1;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$7$1;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$7$1: java.lang.Number next()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/DocValuesConsumer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.DocValuesConsumer$7$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
