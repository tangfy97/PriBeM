final class org.waveprotocol.wave.model.experimental.schema.SchemaFactory$BoxedSchemaException extends java.lang.RuntimeException
{
    private final org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException exception;

    void <init>(org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException)
    {
        org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaFactory$BoxedSchemaException r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaFactory$BoxedSchemaException;

        r1 := @parameter0: org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException;

        specialinvoke r0.<java.lang.RuntimeException: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.SchemaFactory$BoxedSchemaException: org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException exception> = r1;

        return;
    }

    org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException unbox()
    {
        org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException $r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaFactory$BoxedSchemaException r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaFactory$BoxedSchemaException;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.SchemaFactory$BoxedSchemaException: org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException exception>;

        return $r1;
    }
}
