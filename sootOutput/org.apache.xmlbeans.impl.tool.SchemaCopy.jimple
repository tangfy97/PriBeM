public class org.apache.xmlbeans.impl.tool.SchemaCopy extends java.lang.Object
{
    private static final org.apache.xmlbeans.XmlOptions loadOptions;

    public void <init>()
    {
        org.apache.xmlbeans.impl.tool.SchemaCopy r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.SchemaCopy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Copies the XML schema at the specified URL to the specified file.");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage: scopy sourceurl [targetfile]");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("    sourceurl - The URL at which the schema is located.");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("    targetfile - The file to which the schema should be copied.");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.util.Map $r28;
        java.net.URI $r2, $r4, $r11, $r14, r26, r27;
        boolean $z0, $z1;
        java.lang.Exception $r15, $r17, $r18, $r20;
        java.lang.String[] r0;
        java.lang.StringBuffer $r21, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r3, $r5, $r6, $r12, $r13, $r25;
        java.io.PrintStream $r16, $r19, $r22;
        java.io.File $r7, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 < 1 goto label01;

        $i1 = lengthof r0;

        if $i1 <= 2 goto label02;

     label01:
        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void printUsage()>();

        return;

     label02:
        r26 = null;

     label03:
        $r1 = r0[0];

        $i2 = virtualinvoke $r1.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("-usage");

        if $i2 != 0 goto label05;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void printUsage()>();

     label04:
        return;

     label05:
        $r2 = new java.net.URI;

        $r3 = r0[0];

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r3);

        r26 = $r2;

        virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

     label06:
        goto label08;

     label07:
        $r20 := @caughtexception;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Badly formed URL ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r26);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

        return;

     label08:
        $i3 = lengthof r0;

        if $i3 >= 2 goto label12;

     label09:
        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.io.File: java.io.File getCanonicalFile()>();

        $r11 = virtualinvoke $r10.<java.io.File: java.net.URI toURI()>();

        $r12 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>();

        $i4 = virtualinvoke $r12.<java.lang.String: int lastIndexOf(int)>(47);

        $i5 = $i4 + 1;

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>($i5);

        $r14 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r13);

        r27 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.net.URI resolve(java.net.URI,java.net.URI)>($r11, $r14);

     label10:
        goto label20;

     label11:
        $r18 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Cannot canonicalize current directory");

        return;

     label12:
        $r4 = new java.net.URI;

        $r5 = r0[1];

        specialinvoke $r4.<java.net.URI: void <init>(java.lang.String)>($r5);

        r27 = $r4;

        $z0 = virtualinvoke $r4.<java.net.URI: boolean isAbsolute()>();

        if $z0 != 0 goto label13;

        r27 = null;

        goto label14;

     label13:
        $r6 = virtualinvoke $r4.<java.net.URI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z1 != 0 goto label14;

        r27 = null;

     label14:
        goto label16;

     label15:
        $r17 := @caughtexception;

        r27 = null;

     label16:
        if r27 != null goto label20;

     label17:
        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.net.URI)>(r27);

        $r8 = virtualinvoke $r7.<java.io.File: java.io.File getCanonicalFile()>();

        r27 = virtualinvoke $r8.<java.io.File: java.net.URI toURI()>();

     label18:
        goto label20;

     label19:
        $r15 := @caughtexception;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Cannot canonicalize current directory");

        return;

     label20:
        $r28 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: java.util.Map findAllRelative(java.net.URI,java.net.URI)>($r2, r27);

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void copyAll(java.util.Map,boolean)>($r28, 1);

        return;

        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label12 to label14 with label15;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    private static void copyAll(java.util.Map, boolean)
    {
        java.lang.StringBuffer $r7, $r9, $r10, $r11, $r12, $r15, $r17, $r18, $r19, $r20;
        java.util.Map r0;
        java.net.URI r4, r6;
        java.lang.String $r13, $r21;
        boolean z0, $z1;
        java.io.PrintStream $r8, $r16;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Exception $r14;
        java.lang.Object $r3, $r5;

        r0 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.net.URI) $r3;

        $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (java.net.URI) $r5;

     label2:
        staticinvoke <org.apache.xmlbeans.impl.common.IOUtil: void copyCompletely(java.net.URI,java.net.URI)>(r4, r6);

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        if z0 == 0 goto label5;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not copy ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label5:
        goto label1;

     label6:
        if z0 == 0 goto label7;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Copied ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label7:
        goto label1;

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static java.util.Map findAllRelative(java.net.URI, java.net.URI)
    {
        java.util.LinkedHashMap $r0;
        java.util.Map $r8;
        java.net.URI r1, r2, r5, r7, r12;
        java.util.LinkedList $r3;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r10;
        java.util.Set $r9;
        java.lang.Object $r4, $r6, $r11, $r13;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.net.URI;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

     label1:
        $z0 = virtualinvoke $r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r5 = (java.net.URI) $r4;

        $r6 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (java.net.URI) $r6;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: java.util.Map findRelativeInOne(java.net.URI,java.net.URI)>(r5, r7);

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.net.URI) $r11;

        $z1 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r12);

        if $z1 == 0 goto label3;

        goto label2;

     label3:
        $r13 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r13);

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r12);

        goto label2;

     label4:
        goto label1;

     label5:
        return $r0;
    }

    private static java.util.Map findRelativeInOne(java.net.URI, java.net.URI)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r10;
        org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument $r7;
        java.net.URL $r1;
        org.apache.xmlbeans.XmlCursor $r4;
        java.lang.Exception $r11;
        java.util.LinkedHashMap $r5;
        org.apache.xmlbeans.XmlOptions $r2;
        java.util.Map $r12;
        org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument $r9;
        java.net.URI r0, r6;
        org.apache.xmlbeans.XmlObject $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.net.URI;

        r6 := @parameter1: java.net.URI;

     label1:
        $r1 = virtualinvoke r0.<java.net.URI: java.net.URL toURL()>();

        $r2 = <org.apache.xmlbeans.impl.tool.SchemaCopy: org.apache.xmlbeans.XmlOptions loadOptions>;

        $r3 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.net.URL,org.apache.xmlbeans.XmlOptions)>($r1, $r2);

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r4.<org.apache.xmlbeans.XmlCursor: boolean toFirstChild()>();

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $z0 = $r3 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument;

        if $z0 == 0 goto label2;

        $r9 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) $r3;

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema getSchema()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void putMappingsFromSchema(java.util.Map,java.net.URI,java.net.URI,org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)>($r5, r0, r6, $r10);

        goto label3;

     label2:
        $z1 = $r3 instanceof org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument;

        if $z1 == 0 goto label3;

        $r7 = (org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument) $r3;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument: org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions getDefinitions()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void putMappingsFromWsdl(java.util.Map,java.net.URI,java.net.URI,org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions)>($r5, r0, r6, $r8);

     label3:
        return $r5;

     label4:
        $r11 := @caughtexception;

        $r12 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        return $r12;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static void putNewMapping(java.util.Map, java.net.URI, java.net.URI, java.lang.String)
    {
        java.net.URISyntaxException $r7;
        java.util.Map r6;
        java.lang.String r0;
        java.net.URI $r1, r2, $r3, r4, $r5;
        boolean $z0;

        r6 := @parameter0: java.util.Map;

        r2 := @parameter1: java.net.URI;

        r4 := @parameter2: java.net.URI;

        r0 := @parameter3: java.lang.String;

     label1:
        if r0 != null goto label3;

     label2:
        return;

     label3:
        $r1 = new java.net.URI;

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label5;

     label4:
        return;

     label5:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.net.URI resolve(java.net.URI,java.net.URI)>(r2, $r1);

        $r5 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.net.URI resolve(java.net.URI,java.net.URI)>(r4, $r1);

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

     label8:
        return;

        catch java.net.URISyntaxException from label1 to label2 with label7;
        catch java.net.URISyntaxException from label3 to label4 with label7;
        catch java.net.URISyntaxException from label5 to label6 with label7;
    }

    private static void putMappingsFromSchema(java.util.Map, java.net.URI, java.net.URI, org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema r0;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include[] $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import[] $r1;
        java.util.Map r3;
        int $i0, $i1, i2, i3;
        java.net.URI r4, r5;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include $r6;
        java.lang.String $r7, $r9;

        r3 := @parameter0: java.util.Map;

        r4 := @parameter1: java.net.URI;

        r5 := @parameter2: java.net.URI;

        r0 := @parameter3: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import[] getImportArray()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label2;

        $r8 = $r1[i2];

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import: java.lang.String getSchemaLocation()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void putNewMapping(java.util.Map,java.net.URI,java.net.URI,java.lang.String)>(r3, r4, r5, $r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include[] getIncludeArray()>();

        i3 = 0;

     label3:
        $i1 = lengthof $r2;

        if i3 >= $i1 goto label4;

        $r6 = $r2[i3];

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include: java.lang.String getSchemaLocation()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void putNewMapping(java.util.Map,java.net.URI,java.net.URI,java.lang.String)>(r3, r4, r5, $r7);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    private static void putMappingsFromWsdl(java.util.Map, java.net.URI, java.net.URI, org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions)
    {
        org.apache.xmlbeans.impl.xb.substwsdl.TImport[] $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] $r10, r12;
        java.util.Map r3;
        org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions r0;
        int $i0, $i1, $i2, i3, i4, i5;
        java.net.URI r4, r5;
        java.lang.String $r7;
        org.apache.xmlbeans.XmlObject $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r11;
        org.apache.xmlbeans.impl.xb.substwsdl.TImport $r6;
        org.apache.xmlbeans.XmlObject[] $r1, $r9;

        r3 := @parameter0: java.util.Map;

        r4 := @parameter1: java.net.URI;

        r5 := @parameter2: java.net.URI;

        r0 := @parameter3: org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions: org.apache.xmlbeans.XmlObject[] getTypesArray()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r1;

        if i3 >= $i0 goto label4;

        $r8 = $r1[i3];

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace xs=\'http://www.w3.org/2001/XMLSchema\' xs:schema");

        $r10 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r9;

        r12 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r10;

        i4 = 0;

     label2:
        $i2 = lengthof r12;

        if i4 >= $i2 goto label3;

        $r11 = r12[i4];

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void putMappingsFromSchema(java.util.Map,java.net.URI,java.net.URI,org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)>(r3, r4, r5, $r11);

        i4 = i4 + 1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions: org.apache.xmlbeans.impl.xb.substwsdl.TImport[] getImportArray()>();

        i5 = 0;

     label5:
        $i1 = lengthof $r2;

        if i5 >= $i1 goto label6;

        $r6 = $r2[i5];

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.xb.substwsdl.TImport: java.lang.String getLocation()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCopy: void putNewMapping(java.util.Map,java.net.URI,java.net.URI,java.lang.String)>(r3, r4, r5, $r7);

        i5 = i5 + 1;

        goto label5;

     label6:
        return;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.XmlOptions $r0, $r2;
        java.util.Map $r1;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("http://schemas.xmlsoap.org/wsdl/", "http://www.apache.org/internal/xmlbeans/wsdlsubst");

        $r2 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadSubstituteNamespaces(java.util.Map)>($r1);

        <org.apache.xmlbeans.impl.tool.SchemaCopy: org.apache.xmlbeans.XmlOptions loadOptions> = $r2;

        return;
    }
}
