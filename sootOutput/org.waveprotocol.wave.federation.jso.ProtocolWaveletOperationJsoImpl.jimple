public final class org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl extends org.waveprotocol.wave.communication.gwt.JsonMessage implements org.waveprotocol.wave.federation.ProtocolWaveletOperation
{
    private static final java.lang.String keyAddParticipant;
    private static final java.lang.String keyRemoveParticipant;
    private static final java.lang.String keyMutateDocument;
    private static final java.lang.String keyNoOp;

    protected void <init>()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl create()
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage $r0;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r1;

        $r0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage()>();

        r1 = (org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl) $r0;

        return r1;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0, $r2;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r1;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl) r1;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void copyFrom(org.waveprotocol.wave.communication.gwt.JsonMessage)>($r2);

        return;
    }

    public boolean hasAddParticipant()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        return $z0;
    }

    public void clearAddParticipant()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

     label1:
        return;
    }

    public java.lang.String getAddParticipant()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: java.lang.String getPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void setAddParticipant(java.lang.String)
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String,java.lang.String)>(r0, "1", r1);

        return;
    }

    public boolean hasRemoveParticipant()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        return $z0;
    }

    public void clearRemoveParticipant()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

     label1:
        return;
    }

    public java.lang.String getRemoveParticipant()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: java.lang.String getPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void setRemoveParticipant(java.lang.String)
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String,java.lang.String)>(r0, "2", r1);

        return;
    }

    public boolean hasMutateDocument()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        return $z0;
    }

    public void clearMutateDocument()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

     label1:
        return;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument getMutateDocument()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl$MutateDocumentJsoImpl $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl$MutateDocumentJsoImpl) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setMutateDocument(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument r1;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl$MutateDocumentJsoImpl $r2;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument;

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl$MutateDocumentJsoImpl) r1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String,com.google.gwt.core.client.JavaScriptObject)>(r0, "3", $r2);

        return;
    }

    public boolean hasNoOp()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        return $z0;
    }

    public void clearNoOp()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

     label1:
        return;
    }

    public boolean getNoOp()
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean getPropertyAsBoolean(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setNoOp(boolean)
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        z0 := @parameter0: boolean;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsBoolean(com.google.gwt.core.client.JavaScriptObject,java.lang.String,boolean)>(r0, "4", z0);

        return;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl r1;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation $r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl: boolean nativeIsEqualTo(java.lang.Object)>(r0);

        return $z3;

     label1:
        $z1 = r0 instanceof org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation) r0;

        $z2 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolWaveletOperation,org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r1, $r2);

        return $z2;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl: java.lang.String keyNoOp> = "4";

        <org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl: java.lang.String keyMutateDocument> = "3";

        <org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl: java.lang.String keyRemoveParticipant> = "2";

        <org.waveprotocol.wave.federation.jso.ProtocolWaveletOperationJsoImpl: java.lang.String keyAddParticipant> = "1";

        return;
    }
}
