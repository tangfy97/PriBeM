public class com.google.gxp.compiler.Compiler extends java.lang.Object
{
    private final com.google.gxp.com.google.common.collect.ImmutableSet sourceFiles;
    private final com.google.gxp.com.google.common.collect.ImmutableSet schemaFiles;
    private final com.google.gxp.com.google.common.collect.ImmutableSet outputLanguages;
    private final com.google.gxp.compiler.codegen.CodeGeneratorFactory codeGeneratorFactory;
    private final com.google.gxp.com.google.common.collect.ImmutableSet allowedOutputs;
    private final com.google.gxp.compiler.fs.FileRef dependencyFile;
    private final com.google.gxp.compiler.fs.FileRef propertiesFile;
    private final com.google.gxp.compiler.alerts.AlertPolicy alertPolicy;
    private final com.google.gxp.com.google.common.collect.ImmutableSet dotPhases;
    private final com.google.gxp.compiler.parser.SourceEntityResolver entityResolver;

    public void <init>(com.google.gxp.compiler.Configuration) throws com.google.gxp.compiler.InvalidConfigException
    {
        java.util.SortedSet $r17;
        com.google.gxp.compiler.codegen.CodeGeneratorFactory $r11;
        com.google.gxp.compiler.Compiler r0;
        com.google.gxp.compiler.alerts.AlertPolicy $r16;
        com.google.gxp.compiler.Configuration r1;
        com.google.gxp.compiler.fs.FileRef $r14, $r15;
        java.util.Set $r2, $r3, $r4, $r5, $r7, $r9, $r12;
        com.google.gxp.com.google.common.collect.ImmutableSet $r6, $r8, $r10, $r13, $r18;
        com.google.gxp.compiler.parser.SourceEntityResolver $r19;

        r0 := @this: com.google.gxp.compiler.Compiler;

        r1 := @parameter0: com.google.gxp.compiler.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.Set getAllowedOutputFileRefs()>();

        $r3 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.Set getOutputLanguages()>();

        $r4 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.Set getSourceFiles()>();

        staticinvoke <com.google.gxp.compiler.Compiler: void validateAllowedOutputs(java.util.Set,java.lang.Iterable,java.lang.Iterable)>($r2, $r3, $r4);

        $r5 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.Set getSourceFiles()>();

        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r5);

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet sourceFiles> = $r6;

        $r7 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.Set getSchemaFiles()>();

        $r8 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r7);

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet schemaFiles> = $r8;

        $r9 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.Set getOutputLanguages()>();

        $r10 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r9);

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet outputLanguages> = $r10;

        $r11 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: com.google.gxp.compiler.codegen.CodeGeneratorFactory getCodeGeneratorFactory()>();

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.codegen.CodeGeneratorFactory codeGeneratorFactory> = $r11;

        $r12 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.Set getAllowedOutputFileRefs()>();

        $r13 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r12);

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet allowedOutputs> = $r13;

        $r14 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: com.google.gxp.compiler.fs.FileRef getDependencyFile()>();

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.fs.FileRef dependencyFile> = $r14;

        $r15 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: com.google.gxp.compiler.fs.FileRef getPropertiesFile()>();

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.fs.FileRef propertiesFile> = $r15;

        $r16 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: com.google.gxp.compiler.alerts.AlertPolicy getAlertPolicy()>();

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.alerts.AlertPolicy alertPolicy> = $r16;

        $r17 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: java.util.SortedSet getDotPhases()>();

        $r18 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r17);

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet dotPhases> = $r18;

        $r19 = interfaceinvoke r1.<com.google.gxp.compiler.Configuration: com.google.gxp.compiler.parser.SourceEntityResolver getEntityResolver()>();

        r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.parser.SourceEntityResolver entityResolver> = $r19;

        return;
    }

    public void call(com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.depend.DependencyGraph $r21;
        com.google.gxp.compiler.CompilationSet$Builder $r11, $r14;
        com.google.gxp.compiler.codegen.CodeGeneratorFactory $r12;
        com.google.gxp.compiler.Compiler r4;
        com.google.gxp.compiler.CompilationSet $r16;
        com.google.gxp.compiler.alerts.AlertPolicy $r20;
        com.google.gxp.compiler.alerts.AlertSink r22;
        com.google.gxp.com.google.common.base.Predicate $r23;
        com.google.gxp.compiler.fs.FileRef $r13;
        com.google.gxp.compiler.schema.SchemaFactory[] $r2;
        boolean $z0;
        com.google.gxp.compiler.schema.BuiltinSchemaFactory $r6;
        com.google.gxp.compiler.schema.FileBackedSchemaFactory $r3;
        com.google.gxp.compiler.parser.Parser $r7;
        com.google.gxp.compiler.alerts.UniquifyingAlertSink $r0;
        com.google.gxp.com.google.common.collect.ImmutableSet $r5, $r15, $r17, $r18, $r19;
        com.google.gxp.compiler.parser.XmlParser $r9;
        com.google.gxp.compiler.CompilationManager $r10;
        com.google.gxp.compiler.schema.DelegatingSchemaFactory $r1;
        com.google.gxp.compiler.parser.SourceEntityResolver $r8;

        r4 := @this: com.google.gxp.compiler.Compiler;

        r22 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        $r0 = new com.google.gxp.compiler.alerts.UniquifyingAlertSink;

        specialinvoke $r0.<com.google.gxp.compiler.alerts.UniquifyingAlertSink: void <init>(com.google.gxp.compiler.alerts.AlertSink)>(r22);

        $r1 = new com.google.gxp.compiler.schema.DelegatingSchemaFactory;

        $r2 = newarray (com.google.gxp.compiler.schema.SchemaFactory)[2];

        $r3 = new com.google.gxp.compiler.schema.FileBackedSchemaFactory;

        $r5 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet schemaFiles>;

        specialinvoke $r3.<com.google.gxp.compiler.schema.FileBackedSchemaFactory: void <init>(com.google.gxp.compiler.alerts.AlertSink,java.lang.Iterable)>($r0, $r5);

        $r2[0] = $r3;

        $r6 = new com.google.gxp.compiler.schema.BuiltinSchemaFactory;

        specialinvoke $r6.<com.google.gxp.compiler.schema.BuiltinSchemaFactory: void <init>(com.google.gxp.compiler.alerts.AlertSink)>($r0);

        $r2[1] = $r6;

        specialinvoke $r1.<com.google.gxp.compiler.schema.DelegatingSchemaFactory: void <init>(com.google.gxp.compiler.schema.SchemaFactory[])>($r2);

        $r7 = new com.google.gxp.compiler.parser.Parser;

        $r9 = <com.google.gxp.compiler.parser.SaxXmlParser: com.google.gxp.compiler.parser.XmlParser INSTANCE>;

        $r8 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.parser.SourceEntityResolver entityResolver>;

        specialinvoke $r7.<com.google.gxp.compiler.parser.Parser: void <init>(com.google.gxp.compiler.schema.SchemaFactory,com.google.gxp.compiler.parser.XmlParser,com.google.gxp.compiler.parser.SourceEntityResolver)>($r1, $r9, $r8);

        $r10 = specialinvoke r4.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.CompilationManager readCompilationManager()>();

        $r11 = new com.google.gxp.compiler.CompilationSet$Builder;

        $r12 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.codegen.CodeGeneratorFactory codeGeneratorFactory>;

        specialinvoke $r11.<com.google.gxp.compiler.CompilationSet$Builder: void <init>(com.google.gxp.compiler.parser.Parser,com.google.gxp.compiler.codegen.CodeGeneratorFactory,com.google.gxp.compiler.CompilationManager)>($r7, $r12, $r10);

        $r13 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.fs.FileRef propertiesFile>;

        $r14 = virtualinvoke $r11.<com.google.gxp.compiler.CompilationSet$Builder: com.google.gxp.compiler.CompilationSet$Builder setPropertiesFile(com.google.gxp.compiler.fs.FileRef)>($r13);

        $r15 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet sourceFiles>;

        $r16 = virtualinvoke $r14.<com.google.gxp.compiler.CompilationSet$Builder: com.google.gxp.compiler.CompilationSet build(java.lang.Iterable)>($r15);

        $r17 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet allowedOutputs>;

        $z0 = virtualinvoke $r17.<com.google.gxp.com.google.common.collect.ImmutableSet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r23 = staticinvoke <com.google.gxp.com.google.common.base.Predicates: com.google.gxp.com.google.common.base.Predicate alwaysTrue()>();

        goto label2;

     label1:
        $r18 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet allowedOutputs>;

        $r23 = staticinvoke <com.google.gxp.com.google.common.base.Predicates: com.google.gxp.com.google.common.base.Predicate in(java.util.Collection)>($r18);

     label2:
        $r20 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.alerts.AlertPolicy alertPolicy>;

        $r19 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet outputLanguages>;

        virtualinvoke $r16.<com.google.gxp.compiler.CompilationSet: void compile(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.AlertPolicy,java.lang.Iterable,com.google.gxp.com.google.common.base.Predicate)>($r0, $r20, $r19, $r23);

        specialinvoke r4.<com.google.gxp.compiler.Compiler: void writeDotFiles(com.google.gxp.compiler.CompilationSet,com.google.gxp.compiler.alerts.AlertSink)>($r16, $r0);

        $r21 = new com.google.gxp.compiler.depend.DependencyGraph;

        specialinvoke $r21.<com.google.gxp.compiler.depend.DependencyGraph: void <init>(com.google.gxp.compiler.CompilationSet)>($r16);

        specialinvoke r4.<com.google.gxp.compiler.Compiler: void writeCompilationManager(com.google.gxp.compiler.CompilationManager)>($r21);

        return;
    }

    private void writeDotFiles(com.google.gxp.compiler.CompilationSet, com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.CompilationUnit r14;
        java.lang.Integer $r7;
        com.google.gxp.compiler.CompilationSet r0;
        com.google.gxp.compiler.Phase[] $r2;
        boolean $z0, $z1;
        com.google.gxp.com.google.common.collect.ImmutableSet $r5;
        java.util.List $r1, $r25;
        java.io.Writer $r19;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer $r21;
        java.lang.Throwable $r29;
        java.lang.Object[] $r6;
        com.google.gxp.compiler.base.Forest $r24;
        com.google.gxp.compiler.Compiler r4;
        java.nio.charset.Charset $r18;
        com.google.gxp.compiler.dot.DotWriter $r20;
        com.google.gxp.compiler.alerts.AlertSink r27;
        int i0, i1, i2;
        java.lang.String $r8, $r9, $r10, $r11, $r22, $r23;
        com.google.gxp.compiler.fs.FileRef $r15, $r16, $r17;
        java.util.Iterator $r12;
        com.google.gxp.compiler.Phase r3;
        java.io.IOException $r26;
        com.google.gxp.compiler.alerts.common.IOError $r28;
        java.lang.Object $r13;

        r4 := @this: com.google.gxp.compiler.Compiler;

        r0 := @parameter0: com.google.gxp.compiler.CompilationSet;

        r27 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.CompilationSet: java.util.List getCompilationUnits()>();

        i1 = 0;

        $r2 = staticinvoke <com.google.gxp.compiler.Phase: com.google.gxp.compiler.Phase[] values()>();

        i0 = lengthof $r2;

        i2 = 0;

     label01:
        if i2 >= i0 goto label12;

        r3 = $r2[i2];

        i1 = i1 + 1;

        $r5 = r4.<com.google.gxp.compiler.Compiler: com.google.gxp.com.google.common.collect.ImmutableSet dotPhases>;

        $z0 = virtualinvoke $r5.<com.google.gxp.com.google.common.collect.ImmutableSet: boolean contains(java.lang.Object)>(r3);

        if $z0 == 0 goto label11;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[0] = $r7;

        $r8 = virtualinvoke r3.<com.google.gxp.compiler.Phase: java.lang.String name()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "-");

        $r6[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(".%02d.%s.dot", $r6);

        $r12 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.google.gxp.compiler.CompilationUnit) $r13;

        $r15 = virtualinvoke r14.<com.google.gxp.compiler.CompilationUnit: com.google.gxp.compiler.fs.FileRef getSourceFileRef()>();

        $r16 = virtualinvoke $r15.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileRef removeExtension()>();

        $r17 = virtualinvoke $r16.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileRef addSuffix(java.lang.String)>($r11);

     label03:
        $r18 = <com.google.gxp.com.google.common.base.Charsets: java.nio.charset.Charset US_ASCII>;

        $r19 = virtualinvoke $r17.<com.google.gxp.compiler.fs.FileRef: java.io.Writer openWriter(java.nio.charset.Charset)>($r18);

     label04:
        $r20 = new com.google.gxp.compiler.dot.DotWriter;

        specialinvoke $r20.<com.google.gxp.compiler.dot.DotWriter: void <init>(java.lang.Appendable)>($r19);

        $r21 = new com.google.gxp.compiler.dot.ReflectiveGraphRenderer;

        $r22 = virtualinvoke r3.<com.google.gxp.compiler.Phase: java.lang.String name()>();

        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String toLowerCase()>();

        specialinvoke $r21.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke r3.<com.google.gxp.compiler.Phase: com.google.gxp.compiler.base.Forest getForest(com.google.gxp.compiler.CompilationUnit)>(r14);

        $r25 = virtualinvoke $r24.<com.google.gxp.compiler.base.Forest: java.util.List getChildren()>();

        interfaceinvoke $r21.<com.google.gxp.compiler.dot.GraphRenderer: void renderGraph(com.google.gxp.compiler.dot.GraphSink,java.lang.Iterable)>($r20, $r25);

     label05:
        virtualinvoke $r19.<java.io.Writer: void close()>();

        goto label08;

     label06:
        $r29 := @caughtexception;

     label07:
        virtualinvoke $r19.<java.io.Writer: void close()>();

        throw $r29;

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

        $r28 = new com.google.gxp.compiler.alerts.common.IOError;

        specialinvoke $r28.<com.google.gxp.compiler.alerts.common.IOError: void <init>(com.google.gxp.compiler.fs.FileRef,java.io.IOException)>($r17, $r26);

        interfaceinvoke r27.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r28);

     label10:
        goto label02;

     label11:
        i2 = i2 + 1;

        goto label01;

     label12:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.IOException from label03 to label08 with label09;
    }

    private com.google.gxp.compiler.CompilationManager readCompilationManager()
    {
        java.io.ObjectInputStream $r2;
        java.lang.Exception $r6;
        com.google.gxp.compiler.Compiler r0;
        java.lang.Object $r5;
        com.google.gxp.compiler.CompilationManager r7;
        com.google.gxp.compiler.fs.FileRef $r1, $r3;
        java.io.InputStream $r4;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.Compiler;

        r7 = <com.google.gxp.compiler.SimpleCompilationManager: com.google.gxp.compiler.SimpleCompilationManager INSTANCE>;

        $r1 = r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.fs.FileRef dependencyFile>;

        if $r1 == null goto label5;

     label1:
        $r2 = new java.io.ObjectInputStream;

        $r3 = r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.fs.FileRef dependencyFile>;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.fs.FileRef: java.io.InputStream openInputStream()>();

        specialinvoke $r2.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r4);

        $r5 = virtualinvoke $r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $z0 = $r5 instanceof com.google.gxp.compiler.CompilationManager;

        if $z0 == 0 goto label2;

        r7 = (com.google.gxp.compiler.CompilationManager) $r5;

     label2:
        virtualinvoke $r2.<java.io.ObjectInputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return r7;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private void writeCompilationManager(com.google.gxp.compiler.CompilationManager)
    {
        java.io.OutputStream $r4;
        java.io.ObjectOutputStream $r2;
        java.io.IOException $r6;
        com.google.gxp.compiler.CompilationManager r5;
        com.google.gxp.compiler.fs.FileRef $r1, $r3;
        com.google.gxp.compiler.Compiler r0;

        r0 := @this: com.google.gxp.compiler.Compiler;

        r5 := @parameter0: com.google.gxp.compiler.CompilationManager;

        $r1 = r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.fs.FileRef dependencyFile>;

        if $r1 == null goto label4;

     label1:
        $r2 = new java.io.ObjectOutputStream;

        $r3 = r0.<com.google.gxp.compiler.Compiler: com.google.gxp.compiler.fs.FileRef dependencyFile>;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.fs.FileRef: java.io.OutputStream openOutputStream()>();

        specialinvoke $r2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r4);

        virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r5);

        virtualinvoke $r2.<java.io.ObjectOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void validateAllowedOutputs(java.util.Set, java.lang.Iterable, java.lang.Iterable) throws com.google.gxp.compiler.InvalidConfigException
    {
        java.lang.Iterable r1, r2;
        java.util.ArrayList $r4;
        java.lang.String $r9, $r11, $r14;
        com.google.gxp.compiler.fs.FileRef r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r5;
        com.google.gxp.compiler.InvalidConfigException $r6;
        java.util.Set r0, $r3;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.Object $r12;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.Iterable;

        r2 := @parameter2: java.lang.Iterable;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r3 = staticinvoke <com.google.gxp.compiler.Compiler: java.util.Set computePossibleOutputs(java.lang.Iterable,java.lang.Iterable)>(r1, r2);

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r5 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.google.gxp.compiler.fs.FileRef) $r12;

        $z3 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r13);

        if $z3 != 0 goto label2;

        $r14 = virtualinvoke r13.<com.google.gxp.compiler.fs.FileRef: java.lang.String toFilename()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r14);

     label2:
        goto label1;

     label3:
        $z2 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $r6 = new com.google.gxp.compiler.InvalidConfigException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The following are listed as allowed output files but are not possible given the specified inputs: ");

        $r9 = staticinvoke <com.google.gxp.com.google.common.base.Join: java.lang.String join(java.lang.String,java.lang.Iterable)>(", ", $r4);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.google.gxp.compiler.InvalidConfigException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label4:
        return;
    }

    private static java.util.Set computePossibleOutputs(java.lang.Iterable, java.lang.Iterable)
    {
        java.util.Iterator $r2, $r6;
        java.lang.Iterable r1, r5;
        java.util.HashSet $r0;
        com.google.gxp.compiler.base.OutputLanguage r8;
        java.lang.Object $r3, $r7;
        java.lang.String $r10;
        com.google.gxp.compiler.fs.FileRef r4, $r9, $r11;
        boolean $z0, $z1;

        r5 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.gxp.compiler.fs.FileRef) $r3;

        $r6 = interfaceinvoke r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.google.gxp.compiler.base.OutputLanguage) $r7;

        $r9 = virtualinvoke r4.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileRef removeExtension()>();

        $r10 = virtualinvoke r8.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String getSuffix()>();

        $r11 = virtualinvoke $r9.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileRef addSuffix(java.lang.String)>($r10);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r11);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r0;
    }
}
