public class org.mortbay.jetty.handler.HandlerWrapper extends org.mortbay.jetty.handler.AbstractHandlerContainer
{
    private org.mortbay.jetty.Handler _handler;

    public void <init>()
    {
        org.mortbay.jetty.handler.HandlerWrapper r0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        specialinvoke r0.<org.mortbay.jetty.handler.AbstractHandlerContainer: void <init>()>();

        return;
    }

    public org.mortbay.jetty.Handler getHandler()
    {
        org.mortbay.jetty.Handler $r1;
        org.mortbay.jetty.handler.HandlerWrapper r0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        $r1 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        return $r1;
    }

    public void setHandler(org.mortbay.jetty.Handler)
    {
        java.lang.IllegalStateException $r7;
        org.mortbay.component.Container $r5;
        org.mortbay.jetty.Handler r2, r8;
        java.lang.Exception $r6;
        org.mortbay.jetty.Server $r1, $r3, $r4;
        org.mortbay.jetty.handler.HandlerWrapper r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        r2 := @parameter0: org.mortbay.jetty.Handler;

     label1:
        r8 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Server getServer()>();

        if $r1 == null goto label2;

        $r4 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Server getServer()>();

        $r5 = virtualinvoke $r4.<org.mortbay.jetty.Server: org.mortbay.component.Container getContainer()>();

        virtualinvoke $r5.<org.mortbay.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String)>(r0, r8, r2, "handler");

     label2:
        if r2 == null goto label3;

        $r3 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Server getServer()>();

        interfaceinvoke r2.<org.mortbay.jetty.Handler: void setServer(org.mortbay.jetty.Server)>($r3);

     label3:
        r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler> = r2;

        if r8 == null goto label4;

        $z0 = interfaceinvoke r8.<org.mortbay.jetty.Handler: boolean isStarted()>();

        if $z0 == 0 goto label4;

        interfaceinvoke r8.<org.mortbay.jetty.Handler: void stop()>();

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        virtualinvoke $r7.<java.lang.IllegalStateException: java.lang.Throwable initCause(java.lang.Throwable)>($r6);

        throw $r7;

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void addHandler(org.mortbay.jetty.Handler)
    {
        org.mortbay.jetty.HandlerContainer $r3;
        org.mortbay.jetty.Handler $r1, r2;
        java.lang.IllegalArgumentException $r4;
        org.mortbay.jetty.handler.HandlerWrapper r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        r2 := @parameter0: org.mortbay.jetty.Handler;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler getHandler()>();

        if $r1 == null goto label1;

        $z0 = r2 instanceof org.mortbay.jetty.HandlerContainer;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot add");

        throw $r4;

     label1:
        virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: void setHandler(org.mortbay.jetty.Handler)>(r2);

        if $r1 == null goto label2;

        $r3 = (org.mortbay.jetty.HandlerContainer) r2;

        interfaceinvoke $r3.<org.mortbay.jetty.HandlerContainer: void addHandler(org.mortbay.jetty.Handler)>($r1);

     label2:
        return;
    }

    public void removeHandler(org.mortbay.jetty.Handler)
    {
        java.lang.IllegalStateException $r2;
        org.mortbay.jetty.HandlerContainer $r4;
        org.mortbay.jetty.Handler $r1, r3;
        org.mortbay.jetty.handler.HandlerWrapper r0;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        r3 := @parameter0: org.mortbay.jetty.Handler;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler getHandler()>();

        if $r1 == null goto label1;

        $z1 = $r1 instanceof org.mortbay.jetty.HandlerContainer;

        if $z1 == 0 goto label1;

        $r4 = (org.mortbay.jetty.HandlerContainer) $r1;

        interfaceinvoke $r4.<org.mortbay.jetty.HandlerContainer: void removeHandler(org.mortbay.jetty.Handler)>(r3);

        goto label3;

     label1:
        if $r1 == null goto label2;

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: void setHandler(org.mortbay.jetty.Handler)>(null);

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot remove");

        throw $r2;

     label3:
        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.mortbay.jetty.Handler $r1, $r2;
        org.mortbay.jetty.handler.HandlerWrapper r0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        $r1 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        interfaceinvoke $r2.<org.mortbay.jetty.Handler: void start()>();

     label1:
        specialinvoke r0.<org.mortbay.jetty.handler.AbstractHandlerContainer: void doStart()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.mortbay.jetty.Handler $r1, $r2;
        org.mortbay.jetty.handler.HandlerWrapper r0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        specialinvoke r0.<org.mortbay.jetty.handler.AbstractHandlerContainer: void doStop()>();

        $r1 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        interfaceinvoke $r2.<org.mortbay.jetty.Handler: void stop()>();

     label1:
        return;
    }

    public void handle(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletResponse r4;
        org.mortbay.jetty.Handler $r1, $r5;
        javax.servlet.http.HttpServletRequest r3;
        int i0;
        java.lang.String r2;
        org.mortbay.jetty.handler.HandlerWrapper r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.servlet.http.HttpServletRequest;

        r4 := @parameter2: javax.servlet.http.HttpServletResponse;

        i0 := @parameter3: int;

        $r1 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        interfaceinvoke $r5.<org.mortbay.jetty.Handler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>(r2, r3, r4, i0);

     label1:
        return;
    }

    public void setServer(org.mortbay.jetty.Server)
    {
        org.mortbay.jetty.Server $r1, r2;
        org.mortbay.component.Container $r4;
        org.mortbay.jetty.Handler $r3, $r5;
        org.mortbay.jetty.handler.HandlerWrapper r0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        r2 := @parameter0: org.mortbay.jetty.Server;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Server getServer()>();

        specialinvoke r0.<org.mortbay.jetty.handler.AbstractHandlerContainer: void setServer(org.mortbay.jetty.Server)>(r2);

        $r3 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler getHandler()>();

        if $r3 == null goto label1;

        interfaceinvoke $r3.<org.mortbay.jetty.Handler: void setServer(org.mortbay.jetty.Server)>(r2);

     label1:
        if r2 == null goto label2;

        if r2 == $r1 goto label2;

        $r4 = virtualinvoke r2.<org.mortbay.jetty.Server: org.mortbay.component.Container getContainer()>();

        $r5 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        virtualinvoke $r4.<org.mortbay.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String)>(r0, null, $r5, "handler");

     label2:
        return;
    }

    protected java.lang.Object expandChildren(java.lang.Object, java.lang.Class)
    {
        java.lang.Object r1, $r4;
        java.lang.Class r2;
        org.mortbay.jetty.Handler $r3;
        org.mortbay.jetty.handler.HandlerWrapper r0;

        r0 := @this: org.mortbay.jetty.handler.HandlerWrapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.mortbay.jetty.handler.HandlerWrapper: org.mortbay.jetty.Handler _handler>;

        $r4 = virtualinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: java.lang.Object expandHandler(org.mortbay.jetty.Handler,java.lang.Object,java.lang.Class)>($r3, r1, r2);

        return $r4;
    }
}
