public class org.apache.batik.gvt.text.ConcreteTextSelector extends java.lang.Object implements org.apache.batik.gvt.Selector
{
    private java.util.ArrayList listeners;
    private org.apache.batik.gvt.GraphicsNode selectionNode;
    private org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot;

    public void <init>()
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void mouseClicked(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r1);

        return;
    }

    public void mouseDragged(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r1);

        return;
    }

    public void mouseEntered(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r1);

        return;
    }

    public void mouseExited(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r1);

        return;
    }

    public void mouseMoved(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        return;
    }

    public void mousePressed(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r1);

        return;
    }

    public void mouseReleased(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r1);

        return;
    }

    public void keyPressed(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent r1;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        specialinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)>(r1, "keyPressed");

        return;
    }

    public void keyReleased(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent r1;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        specialinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)>(r1, "keyReleased");

        return;
    }

    public void keyTyped(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent r1;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        specialinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)>(r1, "keyTyped");

        return;
    }

    public void changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.GraphicsNodeChangeEvent r1;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeChangeEvent;

        return;
    }

    public void changeCompleted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)
    {
        java.awt.Shape $r4;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;
        org.apache.batik.gvt.Selectable $r3;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.GraphicsNodeChangeEvent r7;
        java.lang.Object $r6;
        org.apache.batik.gvt.event.SelectionEvent $r5;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r7 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeChangeEvent;

        $r1 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        $r3 = (org.apache.batik.gvt.Selectable) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.Selectable: java.awt.Shape getHighlightShape()>();

        $r5 = new org.apache.batik.gvt.event.SelectionEvent;

        $r6 = virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.lang.Object getSelection()>();

        specialinvoke $r5.<org.apache.batik.gvt.event.SelectionEvent: void <init>(java.lang.Object,int,java.awt.Shape)>($r6, 1, $r4);

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)>($r5);

        return;
    }

    public void setSelection(org.apache.batik.gvt.text.Mark, org.apache.batik.gvt.text.Mark)
    {
        java.awt.Shape $r7;
        org.apache.batik.gvt.TextNode $r1, $r3;
        java.lang.Error $r9;
        org.apache.batik.gvt.text.ConcreteTextSelector r4;
        org.apache.batik.gvt.RootGraphicsNode $r5;
        org.apache.batik.gvt.text.Mark r0, r2;
        java.lang.Object $r6;
        org.apache.batik.gvt.event.SelectionEvent $r8;

        r4 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.text.Mark;

        r2 := @parameter1: org.apache.batik.gvt.text.Mark;

        $r1 = interfaceinvoke r0.<org.apache.batik.gvt.text.Mark: org.apache.batik.gvt.TextNode getTextNode()>();

        $r3 = interfaceinvoke r2.<org.apache.batik.gvt.text.Mark: org.apache.batik.gvt.TextNode getTextNode()>();

        if $r1 == $r3 goto label1;

        $r9 = new java.lang.Error;

        specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>("Markers not from same TextNode");

        throw $r9;

     label1:
        virtualinvoke $r1.<org.apache.batik.gvt.TextNode: void setSelection(org.apache.batik.gvt.text.Mark,org.apache.batik.gvt.text.Mark)>(r0, r2);

        r4.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode> = $r1;

        $r5 = virtualinvoke $r1.<org.apache.batik.gvt.AbstractGraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        r4.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot> = $r5;

        $r6 = virtualinvoke r4.<org.apache.batik.gvt.text.ConcreteTextSelector: java.lang.Object getSelection()>();

        $r7 = virtualinvoke $r1.<org.apache.batik.gvt.TextNode: java.awt.Shape getHighlightShape()>();

        $r8 = new org.apache.batik.gvt.event.SelectionEvent;

        specialinvoke $r8.<org.apache.batik.gvt.event.SelectionEvent: void <init>(java.lang.Object,int,java.awt.Shape)>($r6, 2, $r7);

        virtualinvoke r4.<org.apache.batik.gvt.text.ConcreteTextSelector: void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)>($r8);

        return;
    }

    public void clearSelection()
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.SelectionEvent $r2;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        $r1 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = new org.apache.batik.gvt.event.SelectionEvent;

        specialinvoke $r2.<org.apache.batik.gvt.event.SelectionEvent: void <init>(java.lang.Object,int,java.awt.Shape)>(null, 3, null);

        virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)>($r2);

        r0.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode> = null;

        r0.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot> = null;

        return;
    }

    protected void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeEvent r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r5, $r6, $r10, $r12, $r16, $r18, $r19, $r24, $r25, $r30;
        java.awt.geom.AffineTransform $r4, $r29, r34;
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r33;
        java.awt.geom.Point2D$Double $r3;
        org.apache.batik.gvt.event.SelectionEvent $r15, $r22, $r37, $r42;
        java.awt.geom.Point2D $r35;
        org.apache.batik.gvt.text.ConcreteTextSelector r2;
        org.apache.batik.gvt.RootGraphicsNode $r7, $r8, $r9, $r26, $r27, $r28, $r31;
        java.awt.geom.NoninvertibleTransformException $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.awt.Shape $r14, $r21, $r41;
        org.apache.batik.gvt.Selectable $r11, $r13, $r20, $r23, $r36, $r38, $r40;
        float $f0, $f1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.Object $r17, $r39;

        r2 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeEvent;

        r33 = null;

        $z0 = r0 instanceof org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        if $z0 == 0 goto label01;

        r33 = (org.apache.batik.gvt.event.GraphicsNodeMouseEvent) r0;

     label01:
        $r1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: org.apache.batik.gvt.GraphicsNode getGraphicsNode()>();

        $z1 = specialinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: boolean isDeselectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r0);

        if $z1 == 0 goto label03;

        $r30 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r30 == null goto label02;

        $r31 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot>;

        virtualinvoke $r31.<org.apache.batik.gvt.RootGraphicsNode: void removeTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)>(r2);

     label02:
        virtualinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: void clearSelection()>();

        goto label18;

     label03:
        if r33 == null goto label18;

        $r3 = new java.awt.geom.Point2D$Double;

        $f0 = virtualinvoke r33.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: float getX()>();

        $d0 = (double) $f0;

        $f1 = virtualinvoke r33.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: float getY()>();

        $d1 = (double) $f1;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        $r4 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getGlobalTransform()>();

        r34 = $r4;

        if $r4 != null goto label04;

        $r29 = new java.awt.geom.AffineTransform;

        specialinvoke $r29.<java.awt.geom.AffineTransform: void <init>()>();

        r34 = $r29;

        goto label07;

     label04:
        r34 = virtualinvoke $r4.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

     label05:
        goto label07;

     label06:
        $r32 := @caughtexception;

     label07:
        $r35 = virtualinvoke r34.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r3, null);

        $z8 = $r1 instanceof org.apache.batik.gvt.Selectable;

        if $z8 == 0 goto label10;

        $z7 = specialinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: boolean isSelectStartGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r0);

        if $z7 == 0 goto label10;

        $r24 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r24 == $r1 goto label09;

        $r25 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r25 == null goto label08;

        $r28 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot>;

        virtualinvoke $r28.<org.apache.batik.gvt.RootGraphicsNode: void removeTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)>(r2);

     label08:
        r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode> = $r1;

        if $r1 == null goto label09;

        $r26 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot> = $r26;

        $r27 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot>;

        virtualinvoke $r27.<org.apache.batik.gvt.RootGraphicsNode: void addTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)>(r2);

     label09:
        $r36 = (org.apache.batik.gvt.Selectable) $r1;

        $d6 = virtualinvoke $r35.<java.awt.geom.Point2D: double getX()>();

        $d7 = virtualinvoke $r35.<java.awt.geom.Point2D: double getY()>();

        interfaceinvoke $r36.<org.apache.batik.gvt.Selectable: boolean selectAt(double,double)>($d6, $d7);

        $r37 = new org.apache.batik.gvt.event.SelectionEvent;

        specialinvoke $r37.<org.apache.batik.gvt.event.SelectionEvent: void <init>(java.lang.Object,int,java.awt.Shape)>(null, 4, null);

        virtualinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)>($r37);

        goto label18;

     label10:
        $z2 = specialinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: boolean isSelectEndGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r0);

        if $z2 == 0 goto label13;

        $r16 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r16 != $r1 goto label11;

        $r23 = (org.apache.batik.gvt.Selectable) $r1;

        $d4 = virtualinvoke $r35.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke $r35.<java.awt.geom.Point2D: double getY()>();

        interfaceinvoke $r23.<org.apache.batik.gvt.Selectable: boolean selectTo(double,double)>($d4, $d5);

     label11:
        $r17 = virtualinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: java.lang.Object getSelection()>();

        $r18 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r18 == null goto label12;

        $r19 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        $r20 = (org.apache.batik.gvt.Selectable) $r19;

        $r21 = interfaceinvoke $r20.<org.apache.batik.gvt.Selectable: java.awt.Shape getHighlightShape()>();

        $r22 = new org.apache.batik.gvt.event.SelectionEvent;

        specialinvoke $r22.<org.apache.batik.gvt.event.SelectionEvent: void <init>(java.lang.Object,int,java.awt.Shape)>($r17, 2, $r21);

        virtualinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)>($r22);

     label12:
        goto label18;

     label13:
        $z3 = specialinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: boolean isSelectContinueGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r0);

        if $z3 == 0 goto label15;

        $r10 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r10 != $r1 goto label18;

        $r11 = (org.apache.batik.gvt.Selectable) $r1;

        $d2 = virtualinvoke $r35.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke $r35.<java.awt.geom.Point2D: double getY()>();

        $z6 = interfaceinvoke $r11.<org.apache.batik.gvt.Selectable: boolean selectTo(double,double)>($d2, $d3);

        if $z6 == 0 goto label14;

        $r12 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        $r13 = (org.apache.batik.gvt.Selectable) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.batik.gvt.Selectable: java.awt.Shape getHighlightShape()>();

        $r15 = new org.apache.batik.gvt.event.SelectionEvent;

        specialinvoke $r15.<org.apache.batik.gvt.event.SelectionEvent: void <init>(java.lang.Object,int,java.awt.Shape)>(null, 1, $r14);

        virtualinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)>($r15);

     label14:
        goto label18;

     label15:
        $z4 = $r1 instanceof org.apache.batik.gvt.Selectable;

        if $z4 == 0 goto label18;

        $z5 = specialinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: boolean isSelectAllGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)>(r0);

        if $z5 == 0 goto label18;

        $r5 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r5 == $r1 goto label17;

        $r6 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        if $r6 == null goto label16;

        $r9 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot>;

        virtualinvoke $r9.<org.apache.batik.gvt.RootGraphicsNode: void removeTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)>(r2);

     label16:
        r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode> = $r1;

        if $r1 == null goto label17;

        $r7 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot> = $r7;

        $r8 = r2.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.RootGraphicsNode selectionNodeRoot>;

        virtualinvoke $r8.<org.apache.batik.gvt.RootGraphicsNode: void addTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)>(r2);

     label17:
        $r38 = (org.apache.batik.gvt.Selectable) $r1;

        $d8 = virtualinvoke $r35.<java.awt.geom.Point2D: double getX()>();

        $d9 = virtualinvoke $r35.<java.awt.geom.Point2D: double getY()>();

        interfaceinvoke $r38.<org.apache.batik.gvt.Selectable: boolean selectAll(double,double)>($d8, $d9);

        $r39 = virtualinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: java.lang.Object getSelection()>();

        $r40 = (org.apache.batik.gvt.Selectable) $r1;

        $r41 = interfaceinvoke $r40.<org.apache.batik.gvt.Selectable: java.awt.Shape getHighlightShape()>();

        $r42 = new org.apache.batik.gvt.event.SelectionEvent;

        specialinvoke $r42.<org.apache.batik.gvt.event.SelectionEvent: void <init>(java.lang.Object,int,java.awt.Shape)>($r39, 2, $r41);

        virtualinvoke r2.<org.apache.batik.gvt.text.ConcreteTextSelector: void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)>($r42);

     label18:
        return;

        catch java.awt.geom.NoninvertibleTransformException from label04 to label05 with label06;
    }

    private boolean isDeselectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent $r1;
        int $i0, $i1;
        org.apache.batik.gvt.text.ConcreteTextSelector r2;
        org.apache.batik.gvt.event.GraphicsNodeEvent r0;
        boolean $z0;

        r2 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeEvent;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: int getID()>();

        if $i0 != 500 goto label1;

        $r1 = (org.apache.batik.gvt.event.GraphicsNodeMouseEvent) r0;

        $i1 = virtualinvoke $r1.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: int getClickCount()>();

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSelectStartGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)
    {
        int $i0;
        org.apache.batik.gvt.text.ConcreteTextSelector r1;
        org.apache.batik.gvt.event.GraphicsNodeEvent r0;
        boolean $z0;

        r1 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeEvent;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: int getID()>();

        if $i0 != 501 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSelectEndGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)
    {
        int $i0;
        org.apache.batik.gvt.text.ConcreteTextSelector r1;
        org.apache.batik.gvt.event.GraphicsNodeEvent r0;
        boolean $z0;

        r1 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeEvent;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: int getID()>();

        if $i0 != 502 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSelectContinueGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)
    {
        int $i0;
        org.apache.batik.gvt.text.ConcreteTextSelector r1;
        org.apache.batik.gvt.event.GraphicsNodeEvent r0;
        boolean $z0;

        r1 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeEvent;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: int getID()>();

        if $i0 != 506 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isSelectAllGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent $r1;
        int $i0, $i1;
        org.apache.batik.gvt.text.ConcreteTextSelector r2;
        org.apache.batik.gvt.event.GraphicsNodeEvent r0;
        boolean $z0;

        r2 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeEvent;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: int getID()>();

        if $i0 != 500 goto label1;

        $r1 = (org.apache.batik.gvt.event.GraphicsNodeMouseEvent) r0;

        $i1 = virtualinvoke $r1.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: int getClickCount()>();

        if $i1 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object getSelection()
    {
        org.apache.batik.gvt.GraphicsNode $r1, $r2;
        org.apache.batik.gvt.Selectable $r3;
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        java.lang.Object r4;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r4 = null;

        $r1 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        $z0 = $r1 instanceof org.apache.batik.gvt.Selectable;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: org.apache.batik.gvt.GraphicsNode selectionNode>;

        $r3 = (org.apache.batik.gvt.Selectable) $r2;

        r4 = interfaceinvoke $r3.<org.apache.batik.gvt.Selectable: java.lang.Object getSelection()>();

     label1:
        return r4;
    }

    public boolean isEmpty()
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.lang.Object getSelection()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void dispatchSelectionEvent(org.apache.batik.gvt.event.SelectionEvent)
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.SelectionListener $r6, $r8, $r10, $r12;
        java.util.ArrayList $r1, $r2;
        int $i0;
        org.apache.batik.gvt.event.SelectionEvent r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r3;
        java.lang.Object $r5, $r7, $r9, $r11;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r4 := @parameter0: org.apache.batik.gvt.event.SelectionEvent;

        $r1 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.util.ArrayList listeners>;

        if $r1 == null goto label13;

        $r2 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.util.ArrayList listeners>;

        $r3 = virtualinvoke $r2.<java.util.AbstractList: java.util.Iterator iterator()>();

        $i0 = virtualinvoke r4.<org.apache.batik.gvt.event.SelectionEvent: int getID()>();

        tableswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label01;
            case 3: goto label07;
            case 4: goto label10;
            default: goto label13;
        };

     label01:
        goto label03;

     label02:
        $r9 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.apache.batik.gvt.event.SelectionListener) $r9;

        interfaceinvoke $r10.<org.apache.batik.gvt.event.SelectionListener: void selectionDone(org.apache.batik.gvt.event.SelectionEvent)>(r4);

     label03:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label02;

        goto label13;

     label04:
        goto label06;

     label05:
        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.apache.batik.gvt.event.SelectionListener) $r11;

        interfaceinvoke $r12.<org.apache.batik.gvt.event.SelectionListener: void selectionChanged(org.apache.batik.gvt.event.SelectionEvent)>(r4);

     label06:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label05;

        goto label13;

     label07:
        goto label09;

     label08:
        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.batik.gvt.event.SelectionListener) $r7;

        interfaceinvoke $r8.<org.apache.batik.gvt.event.SelectionListener: void selectionCleared(org.apache.batik.gvt.event.SelectionEvent)>(r4);

     label09:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label08;

        goto label13;

     label10:
        goto label12;

     label11:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.batik.gvt.event.SelectionListener) $r5;

        interfaceinvoke $r6.<org.apache.batik.gvt.event.SelectionListener: void selectionStarted(org.apache.batik.gvt.event.SelectionEvent)>(r4);

     label12:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label11;

     label13:
        return;
    }

    public void addSelectionListener(org.apache.batik.gvt.event.SelectionListener)
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.SelectionListener r2;
        java.util.ArrayList $r1, $r3, $r4;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r2 := @parameter0: org.apache.batik.gvt.event.SelectionListener;

        $r1 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.util.ArrayList listeners>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.util.ArrayList listeners> = $r4;

     label1:
        $r3 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.util.ArrayList listeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void removeSelectionListener(org.apache.batik.gvt.event.SelectionListener)
    {
        org.apache.batik.gvt.text.ConcreteTextSelector r0;
        org.apache.batik.gvt.event.SelectionListener r2;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r2 := @parameter0: org.apache.batik.gvt.event.SelectionListener;

        $r1 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.util.ArrayList listeners>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.gvt.text.ConcreteTextSelector: java.util.ArrayList listeners>;

        virtualinvoke $r3.<java.util.AbstractCollection: boolean remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    private void report(org.apache.batik.gvt.event.GraphicsNodeEvent, java.lang.String)
    {
        org.apache.batik.gvt.TextNode $r10;
        org.apache.batik.gvt.text.ConcreteTextSelector r14;
        org.apache.batik.gvt.event.GraphicsNodeEvent r0;
        java.lang.StringBuffer $r2, $r4, $r6, $r7, $r8;
        int $i0, $i1, $i2, i5;
        java.lang.String r5, $r9, $r13, r15;
        boolean $z0;
        java.io.PrintStream $r3;
        org.apache.batik.gvt.GraphicsNode $r1;
        char $c3, $c4;
        java.text.AttributedCharacterIterator $r11;
        char[] r12;

        r14 := @this: org.apache.batik.gvt.text.ConcreteTextSelector;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeEvent;

        r5 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: org.apache.batik.gvt.GraphicsNode getGraphicsNode()>();

        r15 = "(non-text node)";

        $z0 = $r1 instanceof org.apache.batik.gvt.TextNode;

        if $z0 == 0 goto label4;

        $r10 = (org.apache.batik.gvt.TextNode) $r1;

        $r11 = virtualinvoke $r10.<org.apache.batik.gvt.TextNode: java.text.AttributedCharacterIterator getAttributedCharacterIterator()>();

        $i0 = interfaceinvoke $r11.<java.text.CharacterIterator: int getEndIndex()>();

        r12 = newarray (char)[$i0];

        $i1 = lengthof r12;

        if $i1 <= 0 goto label1;

        $c4 = interfaceinvoke $r11.<java.text.CharacterIterator: char first()>();

        r12[0] = $c4;

     label1:
        i5 = 1;

        goto label3;

     label2:
        $c3 = interfaceinvoke $r11.<java.text.CharacterIterator: char next()>();

        r12[i5] = $c3;

        i5 = i5 + 1;

     label3:
        $i2 = lengthof r12;

        if i5 < $i2 goto label2;

        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>(r12);

        r15 = $r13;

     label4:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Mouse ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;
    }
}
