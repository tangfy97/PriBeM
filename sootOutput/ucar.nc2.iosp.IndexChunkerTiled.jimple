public class ucar.nc2.iosp.IndexChunkerTiled extends java.lang.Object
{
    private java.util.List dimList;
    private ucar.nc2.iosp.IndexLong dataIndex;
    private ucar.ma2.Index resultIndex;
    private ucar.nc2.iosp.IndexChunker$Chunk chunk;
    private int nelems;
    private long total;
    private long done;
    private int startDestElem;
    private int startSrcElem;
    private boolean debug;
    private boolean debugMerge;
    private boolean debugDetail;
    private boolean debugNext;
    private boolean debugStartingElems;
    static final boolean $assertionsDisabled;

    public void <init>(ucar.ma2.Section, ucar.ma2.Section) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.iosp.IndexChunkerTiled r0;
        byte $b2, $b15, $b35;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r28, $r31, $r35, $r38, $r42, $r43, $r51, $r52, $r53, $r54, $r72, $r73, $r76, $r77, $r79;
        ucar.ma2.Section r2, r3, $r4;
        long $l0, $l1, $l8, $l9, $l12, $l13, $l14, $l16, $l22, $l34;
        java.lang.AssertionError $r70, $r78;
        java.util.ArrayList $r69;
        ucar.nc2.iosp.IndexLong $r29, $r74;
        java.lang.String $r24, $r30, $r32, $r37, $r39, $r44, $r55;
        ucar.ma2.Index $r36, $r75;
        int[] $r66, $r67;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.ma2.Range $r48, $r56, $r57, $r58;
        java.util.List $r5, $r45, $r60, $r64, $r68;
        long[] $r65;
        int $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i36, i37, i38, $i39, i40, $i41, $i42, $i43, $i45;
        java.io.PrintStream $r10, $r27, $r34, $r41, $r50, $r62;
        ucar.nc2.iosp.IndexChunkerTiled$Dim r47, r63, $r71;
        java.lang.Object $r6, $r46;

        r0 := @this: ucar.nc2.iosp.IndexChunkerTiled;

        r2 := @parameter0: ucar.ma2.Section;

        r3 := @parameter1: ucar.ma2.Section;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r69 = new java.util.ArrayList;

        specialinvoke $r69.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList> = $r69;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debug> = 0;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugMerge> = 0;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugDetail> = 0;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugNext> = 0;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugStartingElems> = 0;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: long done> = 0L;

        $r4 = virtualinvoke r2.<ucar.ma2.Section: ucar.ma2.Section intersect(ucar.ma2.Section)>(r3);

        $l0 = virtualinvoke $r4.<ucar.ma2.Section: long computeSize()>();

        r0.<ucar.nc2.iosp.IndexChunkerTiled: long total> = $l0;

        $l1 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long total>;

        $b2 = $l1 cmp 0L;

        $i42 = (int) $b2;

        if $i42 > 0 goto label01;

        $r62 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("hey");

     label01:
        $z0 = <ucar.nc2.iosp.IndexChunkerTiled: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $l34 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long total>;

        $b35 = $l34 cmp 0L;

        $i43 = (int) $b35;

        if $i43 > 0 goto label02;

        $r70 = new java.lang.AssertionError;

        specialinvoke $r70.<java.lang.AssertionError: void <init>()>();

        throw $r70;

     label02:
        $i3 = virtualinvoke $r4.<ucar.ma2.Section: int getRank()>();

        i36 = 1;

        i37 = 1;

        i38 = $i3 - 1;

     label03:
        if i38 < 0 goto label04;

        $r56 = virtualinvoke r2.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(i38);

        $r57 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(i38);

        $r58 = virtualinvoke $r4.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(i38);

        $r60 = r0.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList>;

        $r71 = new ucar.nc2.iosp.IndexChunkerTiled$Dim;

        specialinvoke $r71.<ucar.nc2.iosp.IndexChunkerTiled$Dim: void <init>(ucar.nc2.iosp.IndexChunkerTiled,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,int,int)>(r0, $r56, $r57, $r58, i37, i36);

        interfaceinvoke $r60.<java.util.List: boolean add(java.lang.Object)>($r71);

        $i32 = virtualinvoke $r56.<ucar.ma2.Range: int length()>();

        i37 = i37 * $i32;

        $i33 = virtualinvoke $r57.<ucar.ma2.Range: int length()>();

        i36 = i36 * $i33;

        $i45 = (int) -1;

        i38 = i38 + $i45;

        goto label03;

     label04:
        $i4 = virtualinvoke r3.<ucar.ma2.Section: int offset(ucar.ma2.Section)>($r4);

        r0.<ucar.nc2.iosp.IndexChunkerTiled: int startDestElem> = $i4;

        $i5 = virtualinvoke r2.<ucar.ma2.Section: int offset(ucar.ma2.Section)>($r4);

        r0.<ucar.nc2.iosp.IndexChunkerTiled: int startSrcElem> = $i5;

        $z1 = r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugStartingElems>;

        if $z1 == 0 goto label05;

        $r50 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startDestElem=");

        $i30 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int startDestElem>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startSrcElem=");

        $i31 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int startSrcElem>;

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>($r55);

     label05:
        if $i3 != 0 goto label06;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: int nelems> = 1;

        goto label07;

     label06:
        $r5 = r0.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r63 = (ucar.nc2.iosp.IndexChunkerTiled$Dim) $r6;

        $i6 = r63.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int ncontigElements>;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: int nelems> = $i6;

        $i7 = r63.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int ncontigElements>;

        if $i7 <= 1 goto label07;

        r63.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int wantNelems> = 1;

        $i29 = r63.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int ncontigElements>;

        r63.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int wantStride> = $i29;

     label07:
        $r64 = r0.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList>;

        $i39 = interfaceinvoke $r64.<java.util.List: int size()>();

        $r65 = newarray (long)[$i39];

        $r66 = newarray (int)[$i39];

        $r67 = newarray (int)[$i39];

        i40 = 0;

     label08:
        $r68 = r0.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList>;

        $i41 = interfaceinvoke $r68.<java.util.List: int size()>();

        if i40 >= $i41 goto label09;

        $r45 = r0.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList>;

        $r46 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>(i40);

        r47 = (ucar.nc2.iosp.IndexChunkerTiled$Dim) $r46;

        $i17 = $i39 - i40;

        $i18 = $i17 - 1;

        $i19 = r47.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int dataStride>;

        $r48 = r47.<ucar.nc2.iosp.IndexChunkerTiled$Dim: ucar.ma2.Range want>;

        $i20 = virtualinvoke $r48.<ucar.ma2.Range: int stride()>();

        $i21 = $i19 * $i20;

        $l22 = (long) $i21;

        $r65[$i18] = $l22;

        $i23 = $i39 - i40;

        $i25 = $i23 - 1;

        $i24 = r47.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int wantStride>;

        $r66[$i25] = $i24;

        $i26 = $i39 - i40;

        $i28 = $i26 - 1;

        $i27 = r47.<ucar.nc2.iosp.IndexChunkerTiled$Dim: int wantNelems>;

        $r67[$i28] = $i27;

        i40 = i40 + 1;

        goto label08;

     label09:
        $z2 = r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugDetail>;

        if $z2 == 0 goto label10;

        staticinvoke <ucar.nc2.iosp.IndexChunker: void printa(java.lang.String,int[])>(" indexShape=", $r67);

        staticinvoke <ucar.nc2.iosp.IndexChunker: void printl(java.lang.String,long[])>(" dataStrides=", $r65);

        staticinvoke <ucar.nc2.iosp.IndexChunker: void printa(java.lang.String,int[])>(" wantStride=", $r66);

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" indexChunks=");

        $l16 = staticinvoke <ucar.ma2.Index: long computeSize(int[])>($r67);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r44);

     label10:
        $r74 = new ucar.nc2.iosp.IndexLong;

        specialinvoke $r74.<ucar.nc2.iosp.IndexLong: void <init>(int[],long[])>($r67, $r65);

        r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexLong dataIndex> = $r74;

        $r75 = new ucar.ma2.Index;

        specialinvoke $r75.<ucar.ma2.Index: void <init>(int[],int[])>($r67, $r66);

        r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.ma2.Index resultIndex> = $r75;

        $z3 = r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugDetail>;

        if $z3 == 0 goto label11;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataIndex=");

        $r29 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexLong dataIndex>;

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.String toString()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resultIndex=");

        $r36 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.ma2.Index resultIndex>;

        $r37 = virtualinvoke $r36.<ucar.ma2.Index: java.lang.String toStringDebug()>();

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r39);

     label11:
        $l8 = staticinvoke <ucar.ma2.Index: long computeSize(int[])>($r67);

        $z4 = <ucar.nc2.iosp.IndexChunkerTiled: boolean $assertionsDisabled>;

        if $z4 != 0 goto label12;

        $i11 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int nelems>;

        $l12 = (long) $i11;

        $l14 = $l8 * $l12;

        $l13 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long total>;

        $b15 = $l14 cmp $l13;

        if $b15 == 0 goto label12;

        $r78 = new java.lang.AssertionError;

        specialinvoke $r78.<java.lang.AssertionError: void <init>()>();

        throw $r78;

     label12:
        $z5 = r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debug>;

        if $z5 == 0 goto label13;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RegularSectionLayout total = ");

        $l9 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long total>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nchunks= ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nelems= ");

        $i10 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int nelems>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataSection= ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wantSection= ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intersect= ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label13:
        return;
    }

    public long getTotalNelems()
    {
        long $l0;
        ucar.nc2.iosp.IndexChunkerTiled r0;

        r0 := @this: ucar.nc2.iosp.IndexChunkerTiled;

        $l0 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long total>;

        return $l0;
    }

    public boolean hasNext()
    {
        byte $b2;
        int $i3;
        long $l0, $l1;
        ucar.nc2.iosp.IndexChunkerTiled r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.IndexChunkerTiled;

        $l1 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long done>;

        $l0 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long total>;

        $b2 = $l1 cmp $l0;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public ucar.nc2.iosp.IndexChunker$Chunk next()
    {
        ucar.nc2.iosp.IndexChunkerTiled r0;
        boolean $z0, $z1;
        ucar.nc2.iosp.IndexChunker$Chunk $r1, $r5, $r7, $r8, $r24, $r27;
        java.lang.StringBuilder $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        long $l1, $l2, $l3, $l7, $l9, $l10, $l11, $l13;
        ucar.nc2.iosp.IndexLong $r2, $r4, $r12;
        int $i0, $i4, $i5, $i6, $i8, $i12, $i14;
        java.lang.String $r14, $r20, $r26;
        java.io.PrintStream $r10, $r16, $r22;
        ucar.ma2.Index $r3, $r6, $r18;

        r0 := @this: ucar.nc2.iosp.IndexChunkerTiled;

        $r1 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexChunker$Chunk chunk>;

        if $r1 != null goto label1;

        $r27 = new ucar.nc2.iosp.IndexChunker$Chunk;

        $i14 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int nelems>;

        $i12 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int startDestElem>;

        $l13 = (long) $i12;

        specialinvoke $r27.<ucar.nc2.iosp.IndexChunker$Chunk: void <init>(long,int,long)>(0L, $i14, $l13);

        r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexChunker$Chunk chunk> = $r27;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexLong dataIndex>;

        virtualinvoke $r2.<ucar.nc2.iosp.IndexLong: long incr()>();

        $r3 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.ma2.Index resultIndex>;

        virtualinvoke $r3.<ucar.ma2.Index: int incr()>();

     label2:
        $r5 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexChunker$Chunk chunk>;

        $i0 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int startSrcElem>;

        $l1 = (long) $i0;

        $r4 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexLong dataIndex>;

        $l2 = virtualinvoke $r4.<ucar.nc2.iosp.IndexLong: long currentElement()>();

        $l3 = $l1 + $l2;

        virtualinvoke $r5.<ucar.nc2.iosp.IndexChunker$Chunk: void setSrcElem(long)>($l3);

        $r7 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexChunker$Chunk chunk>;

        $i4 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int startDestElem>;

        $r6 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.ma2.Index resultIndex>;

        $i5 = virtualinvoke $r6.<ucar.ma2.Index: int currentElement()>();

        $i6 = $i4 + $i5;

        $l7 = (long) $i6;

        virtualinvoke $r7.<ucar.nc2.iosp.IndexChunker$Chunk: void setDestElem(long)>($l7);

        $z0 = r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugNext>;

        if $z0 == 0 goto label3;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk: ");

        $r24 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexChunker$Chunk chunk>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label3:
        $z1 = r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugDetail>;

        if $z1 == 0 goto label4;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataIndex: ");

        $r12 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexLong dataIndex>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wantIndex: ");

        $r18 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.ma2.Index resultIndex>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label4:
        $l10 = r0.<ucar.nc2.iosp.IndexChunkerTiled: long done>;

        $i8 = r0.<ucar.nc2.iosp.IndexChunkerTiled: int nelems>;

        $l9 = (long) $i8;

        $l11 = $l10 + $l9;

        r0.<ucar.nc2.iosp.IndexChunkerTiled: long done> = $l11;

        $r8 = r0.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexChunker$Chunk chunk>;

        return $r8;
    }

    public java.lang.String toString()
    {
        ucar.nc2.iosp.IndexChunkerTiled$Dim r6;
        ucar.nc2.iosp.IndexChunkerTiled r1;
        java.util.List $r2, $r4;
        int $i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5;
        java.lang.String $r3;

        r1 := @this: ucar.nc2.iosp.IndexChunkerTiled;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label1:
        $r2 = r1.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r1.<ucar.nc2.iosp.IndexChunkerTiled: java.util.List dimList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (ucar.nc2.iosp.IndexChunkerTiled$Dim) $r5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static boolean access$000(ucar.nc2.iosp.IndexChunkerTiled)
    {
        ucar.nc2.iosp.IndexChunkerTiled r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.IndexChunkerTiled;

        $z0 = r0.<ucar.nc2.iosp.IndexChunkerTiled: boolean debugMerge>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/iosp/IndexChunkerTiled;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.iosp.IndexChunkerTiled: boolean $assertionsDisabled> = $z1;

        return;
    }
}
