public class org.apache.http.impl.cookie.RFC2965PortAttributeHandler extends java.lang.Object implements org.apache.http.cookie.CookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int[] parsePortAttribute(java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.cookie.MalformedCookieException $r5, $r7;
        int[] r2;
        java.util.StringTokenizer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, $r3, $r4, $r10, $r12;
        boolean $z0;
        java.lang.NumberFormatException $r6;
        java.lang.StringBuilder $r8, $r9, $r11;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        r2 = newarray (int)[$i0];

     label1:
        i3 = 0;

     label2:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r2[i3] = $i1;

        $i2 = r2[i3];

        if $i2 >= 0 goto label3;

        $r5 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r5.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Invalid Port attribute.");

        throw $r5;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Port attribute: ");

        $r10 = virtualinvoke $r6.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label6:
        return r2;

        catch java.lang.NumberFormatException from label1 to label4 with label5;
    }

    private static boolean portMatch(int, int[])
    {
        int[] r0;
        int i0, i1, $i2, i3;
        boolean z0;

        i1 := @parameter0: int;

        r0 := @parameter1: int[];

        z0 = 0;

        i3 = 0;

        i0 = lengthof r0;

     label1:
        if i3 >= i0 goto label3;

        $i2 = r0[i3];

        if i1 != $i2 goto label2;

        z0 = 1;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return z0;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        java.lang.IllegalArgumentException $r5;
        org.apache.http.cookie.SetCookie r0;
        org.apache.http.cookie.SetCookie2 r1;
        int[] $r4;
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r6;
        int $i0;
        java.lang.String r2, $r3;
        boolean $z0;

        r6 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        r0 := @parameter0: org.apache.http.cookie.SetCookie;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r5;

     label1:
        $z0 = r0 instanceof org.apache.http.cookie.SetCookie2;

        if $z0 == 0 goto label2;

        r1 = (org.apache.http.cookie.SetCookie2) r0;

        if r2 == null goto label2;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r4 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: int[] parsePortAttribute(java.lang.String)>(r2);

        interfaceinvoke r1.<org.apache.http.cookie.SetCookie2: void setPorts(int[])>($r4);

     label2:
        return;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.cookie.CookieOrigin r1;
        org.apache.http.cookie.CookieRestrictionViolationException $r4;
        org.apache.http.cookie.ClientCookie $r2;
        java.lang.IllegalArgumentException $r5, $r6;
        int[] $r3;
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r7;
        int $i0;
        org.apache.http.cookie.Cookie r0;
        boolean $z0, $z1, $z2;

        r7 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r1 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r6;

     label1:
        if r1 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r5;

     label2:
        $i0 = virtualinvoke r1.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $z0 = r0 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label3;

        $r2 = (org.apache.http.cookie.ClientCookie) r0;

        $z1 = interfaceinvoke $r2.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("port");

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r0.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        $z2 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: boolean portMatch(int,int[])>($i0, $r3);

        if $z2 != 0 goto label3;

        $r4 = new org.apache.http.cookie.CookieRestrictionViolationException;

        specialinvoke $r4.<org.apache.http.cookie.CookieRestrictionViolationException: void <init>(java.lang.String)>("Port attribute violates RFC 2965: Request port not found in cookie\'s port list.");

        throw $r4;

     label3:
        return;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin r1;
        org.apache.http.cookie.ClientCookie $r2;
        java.lang.IllegalArgumentException $r5, $r6;
        int[] $r3, $r4;
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r7;
        int $i0;
        org.apache.http.cookie.Cookie r0;
        boolean $z0, $z1, $z2;

        r7 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r1 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r6;

     label1:
        if r1 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r5;

     label2:
        $i0 = virtualinvoke r1.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $z0 = r0 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label4;

        $r2 = (org.apache.http.cookie.ClientCookie) r0;

        $z1 = interfaceinvoke $r2.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("port");

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke r0.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        if $r3 != null goto label3;

        return 0;

     label3:
        $r4 = interfaceinvoke r0.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        $z2 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: boolean portMatch(int,int[])>($i0, $r4);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }
}
