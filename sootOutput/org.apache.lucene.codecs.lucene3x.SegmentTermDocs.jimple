class org.apache.lucene.codecs.lucene3x.SegmentTermDocs extends java.lang.Object
{
    private final org.apache.lucene.index.FieldInfos fieldInfos;
    private final org.apache.lucene.codecs.lucene3x.TermInfosReader tis;
    protected org.apache.lucene.util.Bits liveDocs;
    protected org.apache.lucene.store.IndexInput freqStream;
    protected int count;
    protected int df;
    int doc;
    int freq;
    private int skipInterval;
    private int maxSkipLevels;
    private org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader;
    private long freqBasePointer;
    private long proxBasePointer;
    private long skipPointer;
    private boolean haveSkipped;
    protected boolean currentFieldStoresPayloads;
    protected org.apache.lucene.index.FieldInfo$IndexOptions indexOptions;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.IndexInput, org.apache.lucene.codecs.lucene3x.TermInfosReader, org.apache.lucene.index.FieldInfos)
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r3;
        org.apache.lucene.store.IndexInput r1, $r2;
        int $i0, $i1;
        org.apache.lucene.index.FieldInfos r4;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        r1 := @parameter0: org.apache.lucene.store.IndexInput;

        r3 := @parameter1: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r4 := @parameter2: org.apache.lucene.index.FieldInfos;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc> = 0;

        $r2 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream> = $r2;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.TermInfosReader tis> = r3;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.index.FieldInfos fieldInfos> = r4;

        $i0 = virtualinvoke r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int getSkipInterval()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int skipInterval> = $i0;

        $i1 = virtualinvoke r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int getMaxSkipLevels()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int maxSkipLevels> = $i1;

        return;
    }

    public void seek(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        org.apache.lucene.codecs.lucene3x.TermInfosReader $r2;
        org.apache.lucene.codecs.lucene3x.TermInfo $r3;
        org.apache.lucene.index.Term r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.TermInfosReader tis>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfo get(org.apache.lucene.index.Term)>(r1);

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: void seek(org.apache.lucene.codecs.lucene3x.TermInfo,org.apache.lucene.index.Term)>($r3, r1);

        return;
    }

    public void setLiveDocs(org.apache.lucene.util.Bits)
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        org.apache.lucene.util.Bits r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        r1 := @parameter0: org.apache.lucene.util.Bits;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.util.Bits liveDocs> = r1;

        return;
    }

    public void seek(org.apache.lucene.codecs.lucene3x.SegmentTermEnum) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader $r5;
        org.apache.lucene.codecs.lucene3x.TermInfo r7;
        org.apache.lucene.index.Term $r4, r6;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r1;
        org.apache.lucene.index.FieldInfos $r2, $r3;

        r1 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.index.FieldInfos fieldInfos>;

        if $r3 != $r2 goto label1;

        r6 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        r7 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo()>();

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        r6 = $r4;

        $r5 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.TermInfosReader tis>;

        r7 = virtualinvoke $r5.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfo get(org.apache.lucene.index.Term)>($r4);

     label2:
        virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: void seek(org.apache.lucene.codecs.lucene3x.TermInfo,org.apache.lucene.index.Term)>(r7, r6);

        return;
    }

    void seek(org.apache.lucene.codecs.lucene3x.TermInfo, org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.Term r1;
        long $l1, $l2, $l4, $l5, $l6, $l7;
        int $i0, $i3;
        java.lang.String $r3;
        org.apache.lucene.index.FieldInfos $r2;
        boolean $z0;
        org.apache.lucene.index.FieldInfo$IndexOptions $r7;
        org.apache.lucene.store.IndexInput $r6;
        org.apache.lucene.codecs.lucene3x.TermInfo r5;
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        org.apache.lucene.index.FieldInfo $r4;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        r5 := @parameter0: org.apache.lucene.codecs.lucene3x.TermInfo;

        r1 := @parameter1: org.apache.lucene.index.Term;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count> = 0;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r3 = virtualinvoke r1.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r4 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>($r3);

        if $r4 == null goto label1;

        $r7 = virtualinvoke $r4.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        goto label2;

     label1:
        $r7 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

     label2:
        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.index.FieldInfo$IndexOptions indexOptions> = $r7;

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        goto label4;

     label3:
        $z0 = 0;

     label4:
        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean currentFieldStoresPayloads> = $z0;

        if r5 != null goto label5;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int df> = 0;

        goto label6;

     label5:
        $i0 = r5.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int df> = $i0;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc> = 0;

        $l1 = r5.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer>;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long freqBasePointer> = $l1;

        $l2 = r5.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer>;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long proxBasePointer> = $l2;

        $l5 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long freqBasePointer>;

        $i3 = r5.<org.apache.lucene.codecs.lucene3x.TermInfo: int skipOffset>;

        $l4 = (long) $i3;

        $l6 = $l5 + $l4;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long skipPointer> = $l6;

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $l7 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long freqBasePointer>;

        virtualinvoke $r6.<org.apache.lucene.store.IndexInput: void seek(long)>($l7);

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean haveSkipped> = 0;

     label6:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader $r2, $r3;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void close()>();

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        virtualinvoke $r3.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: void close()>();

     label1:
        return;
    }

    public final int doc()
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        int $i0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        return $i0;
    }

    public final int freq()
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        int $i0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int freq>;

        return $i0;
    }

    protected void skippingDoc() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        return;
    }

    public boolean next() throws java.io.IOException
    {
        java.lang.AssertionError $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.lucene.util.Bits $r5, $r7;
        boolean $z0, $z1;
        org.apache.lucene.index.FieldInfo$IndexOptions $r2, $r3;
        org.apache.lucene.store.IndexInput $r1, $r4;
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

     label1:
        $i1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count>;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int df>;

        if $i1 != $i0 goto label2;

        return 0;

     label2:
        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.index.FieldInfo$IndexOptions indexOptions>;

        $r2 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if $r3 != $r2 goto label3;

        $i10 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        $i11 = $i10 + $i2;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc> = $i11;

        goto label5;

     label3:
        $i4 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        $i3 = $i2 >>> 1;

        $i5 = $i4 + $i3;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc> = $i5;

        $i6 = $i2 & 1;

        if $i6 == 0 goto label4;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int freq> = 1;

        goto label5;

     label4:
        $r4 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $i7 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int freq> = $i7;

        $z0 = <org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $i9 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int freq>;

        if $i9 != 1 goto label5;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label5:
        $i12 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count>;

        $i13 = $i12 + 1;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count> = $i13;

        $r7 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.util.Bits liveDocs>;

        if $r7 == null goto label7;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.util.Bits liveDocs>;

        $i8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        $z1 = interfaceinvoke $r5.<org.apache.lucene.util.Bits: boolean get(int)>($i8);

        if $z1 == 0 goto label6;

        goto label7;

     label6:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: void skippingDoc()>();

        goto label1;

     label7:
        return 1;
    }

    public int read(int[], int[]) throws java.io.IOException
    {
        int[] r0, r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        org.apache.lucene.util.Bits $r6, $r8;
        boolean $z0;
        org.apache.lucene.index.FieldInfo$IndexOptions $r2, $r3;
        org.apache.lucene.store.IndexInput $r4, $r5;
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r1;

        r1 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        r0 := @parameter0: int[];

        r7 := @parameter1: int[];

        i0 = lengthof r0;

        $r3 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.index.FieldInfo$IndexOptions indexOptions>;

        $r2 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if $r3 != $r2 goto label1;

        $i14 = specialinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int readNoTf(int[],int[],int)>(r0, r7, i0);

        return $i14;

     label1:
        i15 = 0;

     label2:
        if i15 >= i0 goto label7;

        $i2 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count>;

        $i1 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int df>;

        if $i2 >= $i1 goto label7;

        $r4 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $i3 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i5 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        $i4 = $i3 >>> 1;

        $i6 = $i5 + $i4;

        r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc> = $i6;

        $i7 = $i3 & 1;

        if $i7 == 0 goto label3;

        r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int freq> = 1;

        goto label4;

     label3:
        $r5 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $i8 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int freq> = $i8;

     label4:
        $i9 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count>;

        $i10 = $i9 + 1;

        r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count> = $i10;

        $r6 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.util.Bits liveDocs>;

        if $r6 == null goto label5;

        $r8 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.util.Bits liveDocs>;

        $i13 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        $z0 = interfaceinvoke $r8.<org.apache.lucene.util.Bits: boolean get(int)>($i13);

        if $z0 == 0 goto label6;

     label5:
        $i11 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        r0[i15] = $i11;

        $i12 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int freq>;

        r7[i15] = $i12;

        i15 = i15 + 1;

     label6:
        goto label2;

     label7:
        return i15;
    }

    private final int readNoTf(int[], int[], int) throws java.io.IOException
    {
        int[] r3, r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.apache.lucene.util.Bits $r2, $r5;
        boolean $z0;
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        r3 := @parameter0: int[];

        r4 := @parameter1: int[];

        i0 := @parameter2: int;

        i10 = 0;

     label1:
        if i10 >= i0 goto label3;

        $i2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count>;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int df>;

        if $i2 >= $i1 goto label3;

        $i3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $i4 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i5 = $i3 + $i4;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc> = $i5;

        $i6 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count>;

        $i7 = $i6 + 1;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count> = $i7;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.util.Bits liveDocs>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.util.Bits liveDocs>;

        $i9 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        $z0 = interfaceinvoke $r5.<org.apache.lucene.util.Bits: boolean get(int)>($i9);

        if $z0 == 0 goto label1;

     label2:
        $i8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        r3[i10] = $i8;

        r4[i10] = 1;

        i10 = i10 + 1;

        goto label1;

     label3:
        return i10;
    }

    protected void skipProx(long, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;
        int i1;
        long l0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        return;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2;
        long $l9, $l10, $l14, $l15, $l16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i17, $i18;
        org.apache.lucene.store.IndexInput $r4, $r10, $r11;
        org.apache.lucene.codecs.lucene3x.SegmentTermDocs r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermDocs;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int skipInterval>;

        $i3 = i0 - $i1;

        $i2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        if $i3 < $i2 goto label3;

        $i6 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int df>;

        $i5 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int skipInterval>;

        if $i6 < $i5 goto label3;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        if $r1 != null goto label1;

        $r9 = new org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader;

        $r10 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $i18 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int maxSkipLevels>;

        $i17 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int skipInterval>;

        specialinvoke $r9.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: void <init>(org.apache.lucene.store.IndexInput,int,int)>($r11, $i18, $i17);

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader> = $r9;

     label1:
        $z0 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean haveSkipped>;

        if $z0 != 0 goto label2;

        $r8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        $l16 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long skipPointer>;

        $l15 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long freqBasePointer>;

        $l14 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: long proxBasePointer>;

        $i13 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int df>;

        $z1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean currentFieldStoresPayloads>;

        virtualinvoke $r8.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: void init(long,long,long,int,boolean)>($l16, $l15, $l14, $i13, $z1);

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean haveSkipped> = 1;

     label2:
        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        $i7 = virtualinvoke $r2.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: int skipTo(int)>(i0);

        $i8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count>;

        if $i7 <= $i8 goto label3;

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        $l9 = virtualinvoke $r3.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: long getFreqPointer()>();

        virtualinvoke $r4.<org.apache.lucene.store.IndexInput: void seek(long)>($l9);

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        $l10 = virtualinvoke $r5.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: long getProxPointer()>();

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        $i11 = virtualinvoke $r6.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: int getPayloadLength()>();

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: void skipProx(long,int)>($l10, $i11);

        $r7 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader skipListReader>;

        $i12 = virtualinvoke $r7.<org.apache.lucene.codecs.lucene3x.Lucene3xSkipListReader: int getDoc()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc> = $i12;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int count> = $i7;

     label3:
        $z2 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean next()>();

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $i4 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermDocs: int doc>;

        if i0 > $i4 goto label3;

        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/SegmentTermDocs;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.SegmentTermDocs: boolean $assertionsDisabled> = $z1;

        return;
    }
}
