public class com.hp.hpl.jena.sparql.modify.request.UpdateModify extends com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing
{
    private final com.hp.hpl.jena.sparql.modify.request.QuadAcc deletePattern;
    private final com.hp.hpl.jena.sparql.modify.request.QuadAcc insertPattern;
    private boolean hasInsert;
    private boolean hasDelete;
    private com.hp.hpl.jena.sparql.syntax.Element wherePattern;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1, $r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasInsert> = 0;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasDelete> = 0;

        $r1 = new com.hp.hpl.jena.sparql.modify.request.QuadAcc;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadAcc: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc deletePattern> = $r1;

        $r2 = new com.hp.hpl.jena.sparql.modify.request.QuadAcc;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.modify.request.QuadAcc: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc insertPattern> = $r2;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.syntax.Element wherePattern> = null;

        return;
    }

    public void setElement(com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.Element r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.syntax.Element wherePattern> = r1;

        return;
    }

    public com.hp.hpl.jena.sparql.modify.request.QuadAcc getDeleteAcc()
    {
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc deletePattern>;

        return $r1;
    }

    public com.hp.hpl.jena.sparql.modify.request.QuadAcc getInsertAcc()
    {
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc insertPattern>;

        return $r1;
    }

    public java.util.List getDeleteQuads()
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc deletePattern>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadAcc: java.util.List getQuads()>();

        return $r2;
    }

    public java.util.List getInsertQuads()
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc insertPattern>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadAcc: java.util.List getQuads()>();

        return $r2;
    }

    public void setHasInsertClause(boolean)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasInsert> = z0;

        return;
    }

    public void setHasDeleteClause(boolean)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasDelete> = z0;

        return;
    }

    public boolean hasInsertClause()
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $z0 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasInsert>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc insertPattern>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadAcc: java.util.List getQuads()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean hasDeleteClause()
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $z0 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasDelete>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc deletePattern>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadAcc: java.util.List getQuads()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public com.hp.hpl.jena.sparql.syntax.Element getWherePattern()
    {
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.syntax.Element wherePattern>;

        return $r1;
    }

    public void visit(com.hp.hpl.jena.sparql.modify.request.UpdateVisitor)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateVisitor r0;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r1;

        r1 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.request.UpdateVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateVisitor: void visit(com.hp.hpl.jena.sparql.modify.request.UpdateModify)>(r1);

        return;
    }

    public boolean equalTo(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.update.Update r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0, r4;
        java.util.List $r6, $r7, $r8, $r9;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r5;
        com.hp.hpl.jena.sparql.syntax.Element $r10, $r11;
        java.lang.Class $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        r1 := @parameter0: com.hp.hpl.jena.update.Update;

        r5 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (com.hp.hpl.jena.sparql.modify.request.UpdateModify) r1;

        $z1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasDelete>;

        $z0 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasDelete>;

        if $z1 == $z0 goto label4;

        return 0;

     label4:
        $z3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasInsert>;

        $z2 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean hasInsert>;

        if $z3 == $z2 goto label5;

        return 0;

     label5:
        $z4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: boolean equalIso(com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>(r4, r5);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: java.util.List getDeleteQuads()>();

        $r7 = virtualinvoke r4.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: java.util.List getDeleteQuads()>();

        $z5 = staticinvoke <com.hp.hpl.jena.sparql.util.Iso: boolean isomorphicQuads(java.util.List,java.util.List,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r6, $r7, r5);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: java.util.List getInsertQuads()>();

        $r9 = virtualinvoke r4.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: java.util.List getInsertQuads()>();

        $z6 = staticinvoke <com.hp.hpl.jena.sparql.util.Iso: boolean isomorphicQuads(java.util.List,java.util.List,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r8, $r9, r5);

        if $z6 != 0 goto label8;

        return 0;

     label8:
        $r11 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.syntax.Element wherePattern>;

        $r10 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.syntax.Element wherePattern>;

        $z7 = virtualinvoke $r11.<com.hp.hpl.jena.sparql.syntax.Element: boolean equalTo(com.hp.hpl.jena.sparql.syntax.Element,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r10, r5);

        if $z7 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }
}
