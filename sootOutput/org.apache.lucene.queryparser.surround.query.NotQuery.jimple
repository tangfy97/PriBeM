public class org.apache.lucene.queryparser.surround.query.NotQuery extends org.apache.lucene.queryparser.surround.query.ComposedQuery
{

    public void <init>(java.util.List, java.lang.String)
    {
        java.util.List r1;
        org.apache.lucene.queryparser.surround.query.NotQuery r0;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.queryparser.surround.query.NotQuery;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.query.ComposedQuery: void <init>(java.util.List,boolean,java.lang.String)>(r1, 1, r2);

        return;
    }

    public org.apache.lucene.search.Query makeLuceneQueryFieldNoBoost(java.lang.String, org.apache.lucene.queryparser.surround.query.BasicQueryFactory)
    {
        org.apache.lucene.search.Query $r7;
        org.apache.lucene.queryparser.surround.query.BasicQueryFactory r2;
        org.apache.lucene.queryparser.surround.query.NotQuery r0;
        java.util.List $r3, $r8;
        org.apache.lucene.search.BooleanQuery $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r1;
        org.apache.lucene.search.BooleanClause$Occur $r6, $r9;

        r0 := @this: org.apache.lucene.queryparser.surround.query.NotQuery;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.queryparser.surround.query.BasicQueryFactory;

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.NotQuery: java.util.List makeLuceneSubQueriesField(java.lang.String,org.apache.lucene.queryparser.surround.query.BasicQueryFactory)>(r1, r2);

        $r4 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r4.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.lucene.search.Query) $r5;

        $r6 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        virtualinvoke $r4.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r7, $r6);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r8 = interfaceinvoke $r3.<java.util.List: java.util.List subList(int,int)>(1, $i0);

        $r9 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;

        staticinvoke <org.apache.lucene.queryparser.surround.query.SrndBooleanQuery: void addQueriesToBoolean(org.apache.lucene.search.BooleanQuery,java.util.List,org.apache.lucene.search.BooleanClause$Occur)>($r4, $r8, $r9);

        return $r4;
    }
}
