class com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator extends com.mycila.inject.internal.guava.collect.ForwardingSet
{
    final java.util.Set delegate;
    final java.lang.Object key;
    final com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.LinkedHashMultimap, java.lang.Object, java.util.Set)
    {
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set r2;
        java.lang.Object r3;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedHashMultimap;

        r3 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.Set;

        r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingSet: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate> = r2;

        r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.lang.Object key> = r3;

        return;
    }

    protected java.util.Set delegate()
    {
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        return $r1;
    }

    java.util.Map$Entry createEntry(java.lang.Object)
    {
        java.util.Map$Entry $r3;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.lang.Object r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.lang.Object key>;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r2, r1);

        return $r3;
    }

    java.util.Collection createEntries(java.util.Collection)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r2;
        java.util.Collection r0;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r4;
        java.util.ArrayList $r1;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r4 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r0 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.Lists: java.util.ArrayList newArrayListWithExpectedSize(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = virtualinvoke r4.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r1;
    }

    public boolean add(java.lang.Object)
    {
        java.util.Map$Entry $r5;
        java.util.Collection $r4;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r2;
        java.lang.Object r1;
        boolean $z0;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap: java.util.Collection linkedEntries>;

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>(r1);

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label1:
        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Collection r1, $r4, $r6;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r2, $r5;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap: java.util.Collection linkedEntries>;

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate()>();

        $r6 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Collection createEntries(java.util.Collection)>($r5);

        interfaceinvoke $r4.<java.util.Collection: boolean addAll(java.util.Collection)>($r6);

     label1:
        return $z0;
    }

    public void clear()
    {
        java.util.Map$Entry $r7;
        java.util.Iterator $r2;
        java.util.Collection $r6;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r1, $r3;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0>;

        $r6 = $r5.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap: java.util.Collection linkedEntries>;

        $r7 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>($r4);

        interfaceinvoke $r6.<java.util.Collection: boolean remove(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator$1 $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = new com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator$1;

        specialinvoke $r3.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator$1: void <init>(com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator,java.util.Iterator)>(r0, $r2);

        return $r3;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry $r5;
        java.util.Collection $r4;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r2;
        java.lang.Object r1;
        boolean $z0;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap: java.util.Collection linkedEntries>;

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>(r1);

        interfaceinvoke $r4.<java.util.Collection: boolean remove(java.lang.Object)>($r5);

     label1:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Collection r1, $r4, $r5;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r2;
        boolean $z0;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean removeAll(java.util.Collection)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap: java.util.Collection linkedEntries>;

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Collection createEntries(java.util.Collection)>(r1);

        interfaceinvoke $r4.<java.util.Collection: boolean removeAll(java.util.Collection)>($r5);

     label1:
        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Map$Entry $r8;
        java.util.Iterator $r2;
        java.util.Collection r4, $r7;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap $r5;
        java.lang.Object $r3, $r6;
        boolean $z0, $z1, z2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        r4 := @parameter0: java.util.Collection;

        z2 = 0;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        $r5 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: com.mycila.inject.internal.guava.collect.LinkedHashMultimap this$0>;

        $r7 = $r5.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap: java.util.Collection linkedEntries>;

        $r6 = r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.lang.Object key>;

        $r8 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r6, $r3);

        interfaceinvoke $r7.<java.util.Collection: boolean remove(java.lang.Object)>($r8);

        z2 = 1;

     label2:
        goto label1;

     label3:
        return z2;
    }

    protected volatile java.util.Collection delegate()
    {
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator r0;
        java.util.Set $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate()>();

        return $r1;
    }
}
