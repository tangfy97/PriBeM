public class org.jdesktop.swingx.painter.AlphaPainter extends org.jdesktop.swingx.painter.CompoundPainter
{
    private float alpha;

    public void <init>()
    {
        org.jdesktop.swingx.painter.AlphaPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.AlphaPainter;

        specialinvoke r0.<org.jdesktop.swingx.painter.CompoundPainter: void <init>()>();

        r0.<org.jdesktop.swingx.painter.AlphaPainter: float alpha> = 1.0F;

        return;
    }

    protected void doPaint(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        java.lang.Throwable $r8;
        org.jdesktop.swingx.painter.AlphaPainter r3;
        java.awt.geom.AffineTransform $r4, $r7;
        java.awt.AlphaComposite $r6;
        byte $b0;
        java.awt.Graphics2D r0, r2;
        java.awt.Graphics $r1;
        int i1, i2, $i3;
        float $f0, $f1;
        java.lang.Object r5;

        r3 := @this: org.jdesktop.swingx.painter.AlphaPainter;

        r0 := @parameter0: java.awt.Graphics2D;

        r5 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = virtualinvoke r0.<java.awt.Graphics2D: java.awt.Graphics create()>();

        r2 = (java.awt.Graphics2D) $r1;

     label1:
        $r4 = virtualinvoke r3.<org.jdesktop.swingx.painter.AlphaPainter: java.awt.geom.AffineTransform getTransform()>();

        if $r4 == null goto label2;

        $r7 = virtualinvoke r3.<org.jdesktop.swingx.painter.AlphaPainter: java.awt.geom.AffineTransform getTransform()>();

        virtualinvoke r2.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r7);

     label2:
        $f0 = r3.<org.jdesktop.swingx.painter.AlphaPainter: float alpha>;

        $b0 = $f0 cmpg 1.0F;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label3;

        $f1 = r3.<org.jdesktop.swingx.painter.AlphaPainter: float alpha>;

        $r6 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f1);

        virtualinvoke r2.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r6);

     label3:
        specialinvoke r3.<org.jdesktop.swingx.painter.CompoundPainter: void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)>(r2, r5, i1, i2);

     label4:
        virtualinvoke r2.<java.awt.Graphics2D: void dispose()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

     label6:
        virtualinvoke r2.<java.awt.Graphics2D: void dispose()>();

        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public float getAlpha()
    {
        float $f0;
        org.jdesktop.swingx.painter.AlphaPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.AlphaPainter;

        $f0 = r0.<org.jdesktop.swingx.painter.AlphaPainter: float alpha>;

        return $f0;
    }

    public void setAlpha(float)
    {
        java.lang.Float $r1, $r2;
        float $f0, f1, $f2;
        org.jdesktop.swingx.painter.AlphaPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.AlphaPainter;

        f1 := @parameter0: float;

        $f0 = virtualinvoke r0.<org.jdesktop.swingx.painter.AlphaPainter: float getAlpha()>();

        r0.<org.jdesktop.swingx.painter.AlphaPainter: float alpha> = f1;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f2 = virtualinvoke r0.<org.jdesktop.swingx.painter.AlphaPainter: float getAlpha()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.AlphaPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alpha", $r1, $r2);

        return;
    }
}
