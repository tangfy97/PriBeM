final class org.mozilla.javascript.IdScriptableObject$PrototypeValues extends java.lang.Object implements java.io.Serializable
{
    static final long serialVersionUID;
    private static final int VALUE_SLOT;
    private static final int NAME_SLOT;
    private static final int SLOT_SPAN;
    private org.mozilla.javascript.IdScriptableObject obj;
    private int maxId;
    private volatile java.lang.Object[] valueArray;
    private volatile short[] attributeArray;
    private volatile int lastFoundId;
    int constructorId;
    private org.mozilla.javascript.IdFunctionObject constructor;
    private short constructorAttrs;

    void <init>(org.mozilla.javascript.IdScriptableObject, int)
    {
        org.mozilla.javascript.IdScriptableObject r1;
        int i0;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        r1 := @parameter0: org.mozilla.javascript.IdScriptableObject;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int lastFoundId> = 1;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        if i0 >= 1 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj> = r1;

        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int maxId> = i0;

        return;
    }

    final int getMaxId()
    {
        int $i0;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        $i0 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int maxId>;

        return $i0;
    }

    final void initValue(int, java.lang.String, java.lang.Object, int)
    {
        short $s5;
        org.mozilla.javascript.IdFunctionObject $r6;
        int i0, $i1, i2, $i3, $i4;
        java.lang.String r2;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r1;
        boolean $z0;
        org.mozilla.javascript.IdScriptableObject $r5;
        java.lang.IllegalArgumentException $r0, $r7, $r8, $r9, $r10;
        java.lang.Object r3, $r4;

        r1 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        if 1 > i0 goto label1;

        $i1 = r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int maxId>;

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        if r2 != null goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r10;

     label3:
        $r4 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if r3 != $r4 goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label4:
        staticinvoke <org.mozilla.javascript.ScriptableObject: void checkValidAttributes(int)>(i2);

        $r5 = r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $i3 = virtualinvoke $r5.<org.mozilla.javascript.IdScriptableObject: int findPrototypeId(java.lang.String)>(r2);

        if $i3 == i0 goto label5;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r2);

        throw $r8;

     label5:
        $i4 = r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId>;

        if i0 != $i4 goto label7;

        $z0 = r3 instanceof org.mozilla.javascript.IdFunctionObject;

        if $z0 != 0 goto label6;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("consructor should be initialized with IdFunctionObject");

        throw $r7;

     label6:
        $r6 = (org.mozilla.javascript.IdFunctionObject) r3;

        r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdFunctionObject constructor> = $r6;

        $s5 = (short) i2;

        r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short constructorAttrs> = $s5;

        return;

     label7:
        specialinvoke r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: void initSlot(int,java.lang.String,java.lang.Object,int)>(i0, r2, r3, i2);

        return;
    }

    private void initSlot(int, java.lang.String, java.lang.Object, int)
    {
        java.lang.Throwable $r8;
        java.lang.IllegalStateException $r4, $r7;
        java.lang.Object[] r1;
        short $s7;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i9;
        java.lang.String r2;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;
        boolean $z0;
        java.lang.Object $r3, $r6, r9;
        short[] $r5;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.Object;

        i6 := @parameter3: int;

        r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label1:
        if r9 != null goto label2;

        r9 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag NULL_VALUE>;

     label2:
        $i1 = i0 - 1;

        $i9 = $i1 * 2;

        entermonitor r0;

     label3:
        $i2 = $i9 + 0;

        $r6 = r1[$i2];

        if $r6 != null goto label4;

        $i4 = $i9 + 0;

        r1[$i4] = r9;

        $i5 = $i9 + 1;

        r1[$i5] = r2;

        $r5 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray>;

        $i8 = i0 - 1;

        $s7 = (short) i6;

        $r5[$i8] = $s7;

        goto label5;

     label4:
        $i3 = $i9 + 1;

        $r3 = r1[$i3];

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label5:
        exitmonitor r0;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        exitmonitor r0;

     label8:
        throw $r8;

     label9:
        return;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    final org.mozilla.javascript.IdFunctionObject createPrecachedConstructor()
    {
        java.lang.IllegalStateException $r12, $r22, $r23;
        org.mozilla.javascript.IdFunctionObject $r3, $r5, $r10, $r11;
        java.lang.StringBuffer $r13, $r17, $r18, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6, $r16, $r21;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;
        org.mozilla.javascript.IdScriptableObject $r1, $r2, $r4, $r7, $r9, $r14;
        org.mozilla.javascript.Scriptable $r8;
        java.lang.Class $r15;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        $i0 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId>;

        if $i0 == 0 goto label1;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>()>();

        throw $r23;

     label1:
        $r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $i1 = virtualinvoke $r1.<org.mozilla.javascript.IdScriptableObject: int findPrototypeId(java.lang.String)>("constructor");

        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId> = $i1;

        $i2 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId>;

        if $i2 != 0 goto label2;

        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No id for constructor property");

        throw $r22;

     label2:
        $r2 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $i3 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId>;

        virtualinvoke $r2.<org.mozilla.javascript.IdScriptableObject: void initPrototypeId(int)>($i3);

        $r3 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdFunctionObject constructor>;

        if $r3 != null goto label3;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".initPrototypeId() did not ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("initialize id=");

        $i4 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r12;

     label3:
        $r5 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdFunctionObject constructor>;

        $r4 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $r6 = virtualinvoke $r4.<org.mozilla.javascript.IdScriptableObject: java.lang.String getClassName()>();

        $r7 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>($r7);

        virtualinvoke $r5.<org.mozilla.javascript.IdFunctionObject: void initFunction(java.lang.String,org.mozilla.javascript.Scriptable)>($r6, $r8);

        $r10 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdFunctionObject constructor>;

        $r9 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        virtualinvoke $r10.<org.mozilla.javascript.IdFunctionObject: void markAsConstructor(org.mozilla.javascript.Scriptable)>($r9);

        $r11 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdFunctionObject constructor>;

        return $r11;
    }

    final int findId(java.lang.String)
    {
        java.lang.Object[] r1;
        org.mozilla.javascript.IdScriptableObject $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8;
        java.lang.Object $r3;
        java.lang.String r2;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        r2 := @parameter0: java.lang.String;

        r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        if r1 != null goto label1;

        $r5 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $i7 = virtualinvoke $r5.<org.mozilla.javascript.IdScriptableObject: int findPrototypeId(java.lang.String)>(r2);

        return $i7;

     label1:
        i8 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int lastFoundId>;

        $i0 = i8 - 1;

        $i1 = $i0 * 2;

        $i2 = $i1 + 1;

        $r3 = r1[$i2];

        if r2 != $r3 goto label2;

        return i8;

     label2:
        $r4 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $i3 = virtualinvoke $r4.<org.mozilla.javascript.IdScriptableObject: int findPrototypeId(java.lang.String)>(r2);

        if $i3 == 0 goto label3;

        $i4 = $i3 - 1;

        $i5 = $i4 * 2;

        i6 = $i5 + 1;

        r1[i6] = r2;

        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int lastFoundId> = $i3;

     label3:
        return $i3;
    }

    final boolean has(int)
    {
        java.lang.Object[] r1;
        int i0, $i1, $i2, i3;
        java.lang.Object r2, $r3;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        if r1 != null goto label1;

        return 1;

     label1:
        $i1 = i0 - 1;

        $i2 = $i1 * 2;

        i3 = $i2 + 0;

        r2 = r1[i3];

        if r2 != null goto label2;

        return 1;

     label2:
        $r3 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if r2 == $r3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    final java.lang.Object get(int)
    {
        org.mozilla.javascript.UniqueTag $r2;
        int i0;
        java.lang.Object $r1, r3;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object ensureId(int)>(i0);

        r3 = $r1;

        $r2 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag NULL_VALUE>;

        if $r1 != $r2 goto label1;

        r3 = null;

     label1:
        return r3;
    }

    final void set(int, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        java.lang.Throwable $r9;
        java.lang.Object[] $r5, $r7;
        short s2, $s3;
        int i0, $i1, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.String r11;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r1;
        org.mozilla.javascript.IdScriptableObject $r4;
        java.lang.IllegalArgumentException $r8;
        org.mozilla.javascript.Scriptable r3;
        java.lang.Object $r0, $r6, r10;
        short[] $r2;

        r1 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r10 := @parameter2: java.lang.Object;

        $r0 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if r10 != $r0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label1:
        specialinvoke r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object ensureId(int)>(i0);

        $r2 = r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray>;

        $i1 = i0 - 1;

        s2 = $r2[$i1];

        $s3 = s2 & 1;

        if $s3 != 0 goto label8;

        $r4 = r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        if r3 != $r4 goto label7;

        if r10 != null goto label2;

        r10 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag NULL_VALUE>;

     label2:
        $i6 = i0 - 1;

        $i7 = $i6 * 2;

        $i8 = $i7 + 0;

        entermonitor r1;

     label3:
        $r7 = r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        $r7[$i8] = r10;

        exitmonitor r1;

     label4:
        goto label8;

     label5:
        $r9 := @caughtexception;

        exitmonitor r1;

     label6:
        throw $r9;

     label7:
        $i4 = i0 - 1;

        $i5 = $i4 * 2;

        i9 = $i5 + 1;

        $r5 = r1.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        $r6 = $r5[i9];

        r11 = (java.lang.String) $r6;

        interfaceinvoke r3.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>(r11, r3, r10);

     label8:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    final void delete(int)
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r3;
        short s2, $s3;
        int i0, $i1, $i4, $i5, i6, $i7;
        java.lang.Object $r2;
        short[] $r1, $r4;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object ensureId(int)>(i0);

        $r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray>;

        $i1 = i0 - 1;

        s2 = $r1[$i1];

        $s3 = s2 & 4;

        if $s3 != 0 goto label5;

        $i4 = i0 - 1;

        $i5 = $i4 * 2;

        i6 = $i5 + 0;

        entermonitor r0;

     label1:
        $r3 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        $r2 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        $r3[i6] = $r2;

        $r4 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray>;

        $i7 = i0 - 1;

        $r4[$i7] = 0;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    final int getAttributes(int)
    {
        short $s2;
        int i0, $i1, $i3;
        short[] $r1;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object ensureId(int)>(i0);

        $r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray>;

        $i1 = i0 - 1;

        $s2 = $r1[$i1];

        $i3 = (int) $s2;

        return $i3;
    }

    final void setAttributes(int, int)
    {
        java.lang.Throwable $r2;
        short $s2;
        int i0, i1, $i3;
        short[] $r1;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void checkValidAttributes(int)>(i0);

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object ensureId(int)>(i1);

        entermonitor r0;

     label1:
        $r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray>;

        $i3 = i1 - 1;

        $s2 = (short) i0;

        $r1[$i3] = $s2;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    final java.lang.Object[] getNames(boolean, java.lang.Object[])
    {
        java.lang.Object[] r1, $r4, r8, r9, r10;
        short $s10, $s11;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i12, i13, i14;
        java.lang.String r6;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;
        boolean z0;
        java.lang.Object $r2, $r3, $r5;
        short[] $r7;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object[];

        r8 = null;

        i12 = 0;

        i13 = 1;

     label1:
        $i0 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int maxId>;

        if i13 > $i0 goto label5;

        $r2 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object ensureId(int)>(i13);

        if z0 != 0 goto label2;

        $r7 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray>;

        $i9 = i13 - 1;

        $s10 = $r7[$i9];

        $s11 = $s10 & 2;

        if $s11 != 0 goto label4;

     label2:
        $r3 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r2 == $r3 goto label4;

        $i4 = i13 - 1;

        $i5 = $i4 * 2;

        i6 = $i5 + 1;

        $r4 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        $r5 = $r4[i6];

        r6 = (java.lang.String) $r5;

        if r8 != null goto label3;

        $i8 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int maxId>;

        r8 = newarray (java.lang.Object)[$i8];

     label3:
        $i7 = i12;

        i12 = i12 + 1;

        r8[$i7] = r6;

     label4:
        i13 = i13 + 1;

        goto label1;

     label5:
        if i12 != 0 goto label6;

        return r1;

     label6:
        if r1 == null goto label7;

        $i2 = lengthof r1;

        if $i2 != 0 goto label9;

     label7:
        $i1 = lengthof r8;

        if i12 == $i1 goto label8;

        r9 = newarray (java.lang.Object)[i12];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r9, 0, i12);

        r8 = r9;

     label8:
        return r8;

     label9:
        i14 = lengthof r1;

        $i3 = i14 + i12;

        r10 = newarray (java.lang.Object)[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r10, 0, i14);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r10, i14, i12);

        return r10;
    }

    private java.lang.Object ensureId(int)
    {
        java.lang.Throwable $r16;
        java.lang.IllegalStateException $r20;
        java.lang.Object[] r17;
        short $s4;
        org.mozilla.javascript.IdFunctionObject $r12;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r19;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r6, $r11;
        org.mozilla.javascript.IdScriptableObject$PrototypeValues r0;
        org.mozilla.javascript.IdScriptableObject $r1, $r4;
        java.lang.Class $r5;
        java.lang.Object $r13, $r14, r18;
        short[] $r15;

        r0 := @this: org.mozilla.javascript.IdScriptableObject$PrototypeValues;

        i0 := @parameter0: int;

        r17 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        if r17 != null goto label6;

        entermonitor r0;

     label1:
        r17 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray>;

        if r17 != null goto label2;

        $i7 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int maxId>;

        $i8 = $i7 * 2;

        r17 = newarray (java.lang.Object)[$i8];

        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: java.lang.Object[] valueArray> = r17;

        $i9 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int maxId>;

        $r15 = newarray (short)[$i9];

        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short[] attributeArray> = $r15;

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r16 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r16;

     label6:
        $i1 = i0 - 1;

        $i2 = $i1 * 2;

        $i6 = $i2 + 0;

        $r14 = r17[$i6];

        r18 = $r14;

        if $r14 != null goto label9;

        $i3 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId>;

        if i0 != $i3 goto label7;

        $i5 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: int constructorId>;

        $r12 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdFunctionObject constructor>;

        $s4 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: short constructorAttrs>;

        $i10 = (int) $s4;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: void initSlot(int,java.lang.String,java.lang.Object,int)>($i5, "constructor", $r12, $i10);

        r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdFunctionObject constructor> = null;

        goto label8;

     label7:
        $r1 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        virtualinvoke $r1.<org.mozilla.javascript.IdScriptableObject: void initPrototypeId(int)>(i0);

     label8:
        $r13 = r17[$i6];

        r18 = $r13;

        if $r13 != null goto label9;

        $r20 = new java.lang.IllegalStateException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<org.mozilla.javascript.IdScriptableObject$PrototypeValues: org.mozilla.javascript.IdScriptableObject obj>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".initPrototypeId(int id) ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("did not initialize id=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r20;

     label9:
        return r18;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.IdScriptableObject$PrototypeValues: int SLOT_SPAN> = 2;

        <org.mozilla.javascript.IdScriptableObject$PrototypeValues: int NAME_SLOT> = 1;

        <org.mozilla.javascript.IdScriptableObject$PrototypeValues: int VALUE_SLOT> = 0;

        <org.mozilla.javascript.IdScriptableObject$PrototypeValues: long serialVersionUID> = 3038645279153854371L;

        return;
    }
}
