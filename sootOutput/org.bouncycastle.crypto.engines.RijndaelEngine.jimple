public class org.bouncycastle.crypto.engines.RijndaelEngine extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private static final int MAXROUNDS;
    private static final int MAXKC;
    private static final byte[] logtable;
    private static final byte[] aLogtable;
    private static final byte[] S;
    private static final byte[] Si;
    private static final int[] rcon;
    static byte[][] shifts0;
    static byte[][] shifts1;
    private int BC;
    private long BC_MASK;
    private int ROUNDS;
    private int blockBits;
    private long[][] workingKey;
    private long A0;
    private long A1;
    private long A2;
    private long A3;
    private boolean forEncryption;
    private byte[] shifts0SC;
    private byte[] shifts1SC;

    private byte mul0x2(int)
    {
        byte[] $r0, $r1;
        org.bouncycastle.crypto.engines.RijndaelEngine r2;
        short $s2, $s5;
        byte $b1, $b4;
        int i0, $i3, $i6;

        r2 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $r0 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $b1 = $r0[i0];

        $s5 = (short) $b1;

        $s2 = $s5 & 255;

        $i6 = (int) $s2;

        $i3 = 25 + $i6;

        $b4 = $r1[$i3];

        return $b4;

     label1:
        return 0;
    }

    private byte mul0x3(int)
    {
        byte[] $r0, $r1;
        org.bouncycastle.crypto.engines.RijndaelEngine r2;
        short $s2, $s5;
        byte $b1, $b4;
        int i0, $i3, $i6;

        r2 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $r0 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $b1 = $r0[i0];

        $s5 = (short) $b1;

        $s2 = $s5 & 255;

        $i6 = (int) $s2;

        $i3 = 1 + $i6;

        $b4 = $r1[$i3];

        return $b4;

     label1:
        return 0;
    }

    private byte mul0x9(int)
    {
        byte[] $r0;
        org.bouncycastle.crypto.engines.RijndaelEngine r1;
        byte $b2;
        int i0, $i1;

        r1 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r0 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i1 = 199 + i0;

        $b2 = $r0[$i1];

        return $b2;

     label1:
        return 0;
    }

    private byte mul0xb(int)
    {
        byte[] $r0;
        org.bouncycastle.crypto.engines.RijndaelEngine r1;
        byte $b2;
        int i0, $i1;

        r1 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r0 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i1 = 104 + i0;

        $b2 = $r0[$i1];

        return $b2;

     label1:
        return 0;
    }

    private byte mul0xd(int)
    {
        byte[] $r0;
        org.bouncycastle.crypto.engines.RijndaelEngine r1;
        byte $b2;
        int i0, $i1;

        r1 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r0 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i1 = 238 + i0;

        $b2 = $r0[$i1];

        return $b2;

     label1:
        return 0;
    }

    private byte mul0xe(int)
    {
        byte[] $r0;
        org.bouncycastle.crypto.engines.RijndaelEngine r1;
        byte $b2;
        int i0, $i1;

        r1 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r0 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i1 = 223 + i0;

        $b2 = $r0[$i1];

        return $b2;

     label1:
        return 0;
    }

    private void KeyAddition(long[])
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11;
        long[] r1;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r1 := @parameter0: long[];

        $l1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0>;

        $l0 = r1[0];

        $l2 = $l1 ^ $l0;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0> = $l2;

        $l4 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1>;

        $l3 = r1[1];

        $l5 = $l4 ^ $l3;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1> = $l5;

        $l7 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2>;

        $l6 = r1[2];

        $l8 = $l7 ^ $l6;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2> = $l8;

        $l10 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3>;

        $l9 = r1[3];

        $l11 = $l10 ^ $l9;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3> = $l11;

        return;
    }

    private long shift(long, int)
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        long l0, $l4, $l5, $l6, $l7, $l8;
        int i1, $i2, $i3;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l5 = l0 >>> i1;

        $i2 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i3 = $i2 - i1;

        $l4 = l0 << $i3;

        $l7 = $l5 | $l4;

        $l6 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long BC_MASK>;

        $l8 = $l7 & $l6;

        return $l8;
    }

    private void ShiftRow(byte[])
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        byte[] r1;
        long $l1, $l2, $l4, $l5, $l7, $l8;
        byte $b0, $b3, $b6;
        int $i9, $i10, $i11;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r1 := @parameter0: byte[];

        $l1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1>;

        $b0 = r1[1];

        $i9 = (int) $b0;

        $l2 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long shift(long,int)>($l1, $i9);

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1> = $l2;

        $l4 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2>;

        $b3 = r1[2];

        $i10 = (int) $b3;

        $l5 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long shift(long,int)>($l4, $i10);

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2> = $l5;

        $l7 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3>;

        $b6 = r1[3];

        $i11 = (int) $b6;

        $l8 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long shift(long,int)>($l7, $i11);

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3> = $l8;

        return;
    }

    private long applyS(long, byte[])
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        byte[] r1;
        long l1, $l2, $l3, $l7, $l8, l9;
        short $s6, $s11;
        byte $b5;
        int $i0, $i4, i10;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        l1 := @parameter0: long;

        r1 := @parameter1: byte[];

        l9 = 0L;

        i10 = 0;

     label1:
        $i0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        if i10 >= $i0 goto label2;

        $l2 = l1 >> i10;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = r1[$i4];

        $s11 = (short) $b5;

        $s6 = $s11 & 255;

        $l7 = (long) $s6;

        $l8 = $l7 << i10;

        l9 = l9 | $l8;

        i10 = i10 + 8;

        goto label1;

     label2:
        return l9;
    }

    private void Substitution(byte[])
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        byte[] r1;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r1 := @parameter0: byte[];

        $l0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0>;

        $l1 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l0, r1);

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0> = $l1;

        $l2 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1>;

        $l3 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l2, r1);

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1> = $l3;

        $l4 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2>;

        $l5 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l4, r1);

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2> = $l5;

        $l6 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3>;

        $l7 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l6, r1);

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3> = $l7;

        return;
    }

    private void MixColumn()
    {
        byte $b17, $b18, $b19, $b25, $b26, $b27, $b33, $b34, $b35, $b41, $b42, $b43;
        long $l1, $l2, $l3, $l5, $l6, $l7, $l9, $l10, $l11, $l13, $l14, $l15, $l23, $l24, $l31, $l32, $l39, $l40, $l47, $l48, l49, l50, l51, l52;
        int $i0, i4, i8, i12, i16, $i20, $i21, $i22, $i28, $i29, $i30, $i36, $i37, $i38, $i44, $i45, $i46, i53, $i54, $i55, $i56, $i57;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        l49 = 0L;

        l50 = 0L;

        l51 = 0L;

        l52 = 0L;

        i53 = 0;

     label1:
        $i0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        if i53 >= $i0 goto label2;

        $l1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0>;

        $l2 = $l1 >> i53;

        $l3 = $l2 & 255L;

        i4 = (int) $l3;

        $l5 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1>;

        $l6 = $l5 >> i53;

        $l7 = $l6 & 255L;

        i8 = (int) $l7;

        $l9 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2>;

        $l10 = $l9 >> i53;

        $l11 = $l10 & 255L;

        i12 = (int) $l11;

        $l13 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3>;

        $l14 = $l13 >> i53;

        $l15 = $l14 & 255L;

        i16 = (int) $l15;

        $b17 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i4);

        $b18 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i8);

        $b19 = $b17 ^ $b18;

        $i54 = (int) $b19;

        $i20 = $i54 ^ i12;

        $i21 = $i20 ^ i16;

        $i22 = $i21 & 255;

        $l23 = (long) $i22;

        $l24 = $l23 << i53;

        l52 = l52 | $l24;

        $b25 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i8);

        $b26 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i12);

        $b27 = $b25 ^ $b26;

        $i55 = (int) $b27;

        $i28 = $i55 ^ i16;

        $i29 = $i28 ^ i4;

        $i30 = $i29 & 255;

        $l31 = (long) $i30;

        $l32 = $l31 << i53;

        l51 = l51 | $l32;

        $b33 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i12);

        $b34 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i16);

        $b35 = $b33 ^ $b34;

        $i56 = (int) $b35;

        $i36 = $i56 ^ i4;

        $i37 = $i36 ^ i8;

        $i38 = $i37 & 255;

        $l39 = (long) $i38;

        $l40 = $l39 << i53;

        l50 = l50 | $l40;

        $b41 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i16);

        $b42 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i4);

        $b43 = $b41 ^ $b42;

        $i57 = (int) $b43;

        $i44 = $i57 ^ i8;

        $i45 = $i44 ^ i12;

        $i46 = $i45 & 255;

        $l47 = (long) $i46;

        $l48 = $l47 << i53;

        l49 = l49 | $l48;

        i53 = i53 + 8;

        goto label1;

     label2:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0> = l52;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1> = l51;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2> = l50;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3> = l49;

        return;
    }

    private void InvMixColumn()
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b23, $b24, $b25, $b26, $b27, $b28, $b29, $b33, $b34, $b35, $b36, $b37, $b38, $b39, $b43, $b44, $b45, $b46, $b47, $b48, $b49, $b54, $b56, $b58, $b60;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l21, $l22, $l31, $l32, $l41, $l42, $l51, $l52, l61, l62, l63, l64;
        short $s20, $s30, $s40, $s50, $s70, s71, $s72, s73, $s74, s75, $s76, $s77, $s78, $s79, $s80;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        int $i0, $i53, $i55, $i57, $i59, i65, i66, i67, i68, i69;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        l61 = 0L;

        l62 = 0L;

        l63 = 0L;

        l64 = 0L;

        i65 = 0;

     label01:
        $i0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        if i65 >= $i0 goto label10;

        $l1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0>;

        $l2 = $l1 >> i65;

        $l3 = $l2 & 255L;

        i66 = (int) $l3;

        $l4 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1>;

        $l5 = $l4 >> i65;

        $l6 = $l5 & 255L;

        i67 = (int) $l6;

        $l7 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2>;

        $l8 = $l7 >> i65;

        $l9 = $l8 & 255L;

        i68 = (int) $l9;

        $l10 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3>;

        $l11 = $l10 >> i65;

        $l12 = $l11 & 255L;

        i69 = (int) $l12;

        if i66 == 0 goto label02;

        $r4 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $i59 = i66 & 255;

        $b60 = $r4[$i59];

        $s70 = $b60 & 255;

        goto label03;

     label02:
        $s70 = -1;

     label03:
        s71 = $s70;

        if i67 == 0 goto label04;

        $r3 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $i57 = i67 & 255;

        $b58 = $r3[$i57];

        $s72 = $b58 & 255;

        goto label05;

     label04:
        $s72 = -1;

     label05:
        s73 = $s72;

        if i68 == 0 goto label06;

        $r2 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $i55 = i68 & 255;

        $b56 = $r2[$i55];

        $s74 = $b56 & 255;

        goto label07;

     label06:
        $s74 = -1;

     label07:
        s75 = $s74;

        if i69 == 0 goto label08;

        $r1 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $i53 = i69 & 255;

        $b54 = $r1[$i53];

        $s76 = $b54 & 255;

        goto label09;

     label08:
        $s76 = -1;

     label09:
        $b13 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>(s71);

        $b14 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>(s73);

        $b15 = $b13 ^ $b14;

        $b16 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>(s75);

        $b17 = $b15 ^ $b16;

        $b18 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>($s76);

        $b19 = $b17 ^ $b18;

        $s77 = (short) $b19;

        $s20 = $s77 & 255;

        $l21 = (long) $s20;

        $l22 = $l21 << i65;

        l64 = l64 | $l22;

        $b23 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>(s73);

        $b24 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>(s75);

        $b25 = $b23 ^ $b24;

        $b26 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>($s76);

        $b27 = $b25 ^ $b26;

        $b28 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>(s71);

        $b29 = $b27 ^ $b28;

        $s78 = (short) $b29;

        $s30 = $s78 & 255;

        $l31 = (long) $s30;

        $l32 = $l31 << i65;

        l63 = l63 | $l32;

        $b33 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>(s75);

        $b34 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>($s76);

        $b35 = $b33 ^ $b34;

        $b36 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>(s71);

        $b37 = $b35 ^ $b36;

        $b38 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>(s73);

        $b39 = $b37 ^ $b38;

        $s79 = (short) $b39;

        $s40 = $s79 & 255;

        $l41 = (long) $s40;

        $l42 = $l41 << i65;

        l62 = l62 | $l42;

        $b43 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>($s76);

        $b44 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>(s71);

        $b45 = $b43 ^ $b44;

        $b46 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>(s73);

        $b47 = $b45 ^ $b46;

        $b48 = specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>(s75);

        $b49 = $b47 ^ $b48;

        $s80 = (short) $b49;

        $s50 = $s80 & 255;

        $l51 = (long) $s50;

        $l52 = $l51 << i65;

        l61 = l61 | $l52;

        i65 = i65 + 8;

        goto label01;

     label10:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0> = l64;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1> = l63;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2> = l62;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3> = l61;

        return;
    }

    private long[][] generateWorkingKey(byte[])
    {
        byte[] r0, $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22;
        byte $b7, $b9, $b18, $b28, $b29, $b30, $b31, $b32, $b34, $b35, $b36, $b37, $b39, $b40, $b41, $b42, $b44, $b45, $b46, $b47, $b51, $b53, $b54, $b55, $b56, $b65, $b76, b80, b103, b104, b105, b106, b107, b108, b109;
        byte[][] r1;
        long $l23, $l24, $l25, $l26, $l70, $l71, $l72, $l73;
        short $s19, $s33, $s52, $s66, $s110, $s111, $s114, $s116;
        long[][] r2;
        int[] $r5;
        long[] $r6, $r20;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i20, $i21, $i22, $i27, $i38, $i43, $i48, $i49, $i50, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i67, $i68, $i69, $i74, $i75, $i77, $i78, i79, $i81, i82, i83, $i84, i85, i86, i87, $i88, $i89, $i90, $i91, $i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, $i112, $i113, $i115;
        org.bouncycastle.crypto.engines.RijndaelEngine r3;
        java.lang.IllegalArgumentException $r24;

        r3 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r0 := @parameter0: byte[];

        i79 = 0;

        $i0 = lengthof r0;

        i1 = $i0 * 8;

        r1 = newmultiarray (byte)[4][64];

        r2 = newmultiarray (long)[15][4];

        lookupswitch(i1)
        {
            case 128: goto label01;
            case 160: goto label02;
            case 192: goto label03;
            case 224: goto label04;
            case 256: goto label05;
            default: goto label06;
        };

     label01:
        b80 = 4;

        b109 = 4;

        b108 = 4;

        b107 = 4;

        b106 = 4;

        b105 = 4;

        b104 = 4;

        b103 = 4;

        goto label07;

     label02:
        b80 = 5;

        b109 = 5;

        b108 = 5;

        b107 = 5;

        b106 = 5;

        b105 = 5;

        b104 = 5;

        b103 = 5;

        goto label07;

     label03:
        b80 = 6;

        b109 = 6;

        b108 = 6;

        b107 = 6;

        b106 = 6;

        b105 = 6;

        b104 = 6;

        b103 = 6;

        goto label07;

     label04:
        b80 = 7;

        b109 = 7;

        b108 = 7;

        b107 = 7;

        b106 = 7;

        b105 = 7;

        b104 = 7;

        b103 = 7;

        goto label07;

     label05:
        b80 = 8;

        b109 = 8;

        b108 = 8;

        b107 = 8;

        b106 = 8;

        b105 = 8;

        b104 = 8;

        b103 = 8;

        goto label07;

     label06:
        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length not 128/160/192/224/256 bits.");

        throw $r24;

     label07:
        $i81 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int blockBits>;

        if i1 < $i81 goto label08;

        $i78 = b103 + 6;

        r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS> = $i78;

        goto label09;

     label08:
        $i2 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i3 = $i2 / 8;

        $i4 = $i3 + 6;

        r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS> = $i4;

     label09:
        i82 = 0;

        i83 = 0;

     label10:
        $i84 = lengthof r0;

        if i83 >= $i84 goto label11;

        $i74 = i83 % 4;

        $r22 = r1[$i74];

        $i77 = i83 / 4;

        $i75 = i82;

        i82 = i82 + 1;

        $b76 = r0[$i75];

        $r22[$i77] = $b76;

        i83 = i83 + 1;

        goto label10;

     label11:
        i85 = 0;

        i86 = 0;

     label12:
        if i86 >= b107 goto label15;

        $i57 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $i60 = $i57 + 1;

        $i58 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i59 = $i58 / 8;

        $i61 = $i60 * $i59;

        if i85 >= $i61 goto label15;

        i87 = 0;

     label13:
        if i87 >= 4 goto label14;

        $i62 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i63 = $i62 / 8;

        $i64 = i85 / $i63;

        $r20 = r2[$i64];

        $l72 = $r20[i87];

        $r21 = r1[i87];

        $b65 = $r21[i86];

        $s110 = (short) $b65;

        $s66 = $s110 & 255;

        $l70 = (long) $s66;

        $i68 = i85 * 8;

        $i67 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i69 = $i68 % $i67;

        $l71 = $l70 << $i69;

        $l73 = $l72 | $l71;

        $r20[i87] = $l73;

        i87 = i87 + 1;

        goto label13;

     label14:
        i86 = i86 + 1;

        i85 = i85 + 1;

        goto label12;

     label15:
        $i88 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $i89 = $i88 + 1;

        $i90 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i91 = $i90 / 8;

        $i92 = $i89 * $i91;

        if i85 >= $i92 goto label37;

        i93 = 0;

     label16:
        if i93 >= 4 goto label17;

        $r17 = r1[i93];

        $b54 = $r17[0];

        $r19 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] S>;

        $i48 = i93 + 1;

        $i49 = $i48 % 4;

        $r18 = r1[$i49];

        $i50 = b108 - 1;

        $b51 = $r18[$i50];

        $s111 = (short) $b51;

        $s52 = $s111 & 255;

        $i112 = (int) $s52;

        $b53 = $r19[$i112];

        $b55 = $b54 ^ $b53;

        $b56 = (byte) $b55;

        $r17[0] = $b56;

        i93 = i93 + 1;

        goto label16;

     label17:
        $r4 = r1[0];

        $b7 = $r4[0];

        $r5 = <org.bouncycastle.crypto.engines.RijndaelEngine: int[] rcon>;

        $i5 = i79;

        i79 = i79 + 1;

        $i6 = $r5[$i5];

        $i113 = (int) $b7;

        $i8 = $i113 ^ $i6;

        $b9 = (byte) $i8;

        $r4[0] = $b9;

        if b109 > 6 goto label22;

        i94 = 1;

     label18:
        if i94 >= b104 goto label21;

        i95 = 0;

     label19:
        if i95 >= 4 goto label20;

        $r15 = r1[i95];

        $b45 = $r15[i94];

        $r16 = r1[i95];

        $i43 = i94 - 1;

        $b44 = $r16[$i43];

        $b46 = $b45 ^ $b44;

        $b47 = (byte) $b46;

        $r15[i94] = $b47;

        i95 = i95 + 1;

        goto label19;

     label20:
        i94 = i94 + 1;

        goto label18;

     label21:
        goto label32;

     label22:
        i96 = 1;

     label23:
        if i96 >= 4 goto label26;

        i97 = 0;

     label24:
        if i97 >= 4 goto label25;

        $r13 = r1[i97];

        $b40 = $r13[i96];

        $r14 = r1[i97];

        $i38 = i96 - 1;

        $b39 = $r14[$i38];

        $b41 = $b40 ^ $b39;

        $b42 = (byte) $b41;

        $r13[i96] = $b42;

        i97 = i97 + 1;

        goto label24;

     label25:
        i96 = i96 + 1;

        goto label23;

     label26:
        i98 = 0;

     label27:
        if i98 >= 4 goto label28;

        $r10 = r1[i98];

        $b35 = $r10[4];

        $r12 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] S>;

        $r11 = r1[i98];

        $b32 = $r11[3];

        $s114 = (short) $b32;

        $s33 = $s114 & 255;

        $i115 = (int) $s33;

        $b34 = $r12[$i115];

        $b36 = $b35 ^ $b34;

        $b37 = (byte) $b36;

        $r10[4] = $b37;

        i98 = i98 + 1;

        goto label27;

     label28:
        i99 = 5;

     label29:
        if i99 >= b105 goto label32;

        i100 = 0;

     label30:
        if i100 >= 4 goto label31;

        $r8 = r1[i100];

        $b29 = $r8[i99];

        $r9 = r1[i100];

        $i27 = i99 - 1;

        $b28 = $r9[$i27];

        $b30 = $b29 ^ $b28;

        $b31 = (byte) $b30;

        $r8[i99] = $b31;

        i100 = i100 + 1;

        goto label30;

     label31:
        i99 = i99 + 1;

        goto label29;

     label32:
        i101 = 0;

     label33:
        if i101 >= b106 goto label36;

        $i10 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $i13 = $i10 + 1;

        $i11 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i12 = $i11 / 8;

        $i14 = $i13 * $i12;

        if i85 >= $i14 goto label36;

        i102 = 0;

     label34:
        if i102 >= 4 goto label35;

        $i15 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i16 = $i15 / 8;

        $i17 = i85 / $i16;

        $r6 = r2[$i17];

        $l25 = $r6[i102];

        $r7 = r1[i102];

        $b18 = $r7[i101];

        $s116 = (short) $b18;

        $s19 = $s116 & 255;

        $l23 = (long) $s19;

        $i21 = i85 * 8;

        $i20 = r3.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i22 = $i21 % $i20;

        $l24 = $l23 << $i22;

        $l26 = $l25 | $l24;

        $r6[i102] = $l26;

        i102 = i102 + 1;

        goto label34;

     label35:
        i101 = i101 + 1;

        i85 = i85 + 1;

        goto label33;

     label36:
        goto label15;

     label37:
        return r2;
    }

    public void <init>()
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void <init>(int)>(128);

        return;
    }

    public void <init>(int)
    {
        byte[] $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;
        int i0;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        java.lang.IllegalArgumentException $r21;
        byte[][] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        lookupswitch(i0)
        {
            case 128: goto label1;
            case 160: goto label2;
            case 192: goto label3;
            case 224: goto label4;
            case 256: goto label5;
            default: goto label6;
        };

     label1:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC> = 32;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 4294967295L;

        $r17 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r18 = $r17[0];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r18;

        $r19 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r20 = $r19[0];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r20;

        goto label7;

     label2:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC> = 40;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 1099511627775L;

        $r13 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r14 = $r13[1];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r14;

        $r15 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r16 = $r15[1];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r16;

        goto label7;

     label3:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC> = 48;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 281474976710655L;

        $r9 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r10 = $r9[2];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r10;

        $r11 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r12 = $r11[2];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r12;

        goto label7;

     label4:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC> = 56;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 72057594037927935L;

        $r5 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r6 = $r5[3];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r6;

        $r7 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r8 = $r7[3];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r8;

        goto label7;

     label5:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC> = 64;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long BC_MASK> = -1L;

        $r1 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r2 = $r1[4];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r2;

        $r3 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r4 = $r3[4];

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r4;

        goto label7;

     label6:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown blocksize to Rijndael");

        throw $r21;

     label7:
        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int blockBits> = i0;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        long[][] $r11;
        org.bouncycastle.crypto.engines.RijndaelEngine r8;
        byte[] $r10;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;
        org.bouncycastle.crypto.params.KeyParameter $r9;
        org.bouncycastle.crypto.CipherParameters r0;
        boolean $z0, z1;

        r8 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        z1 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z0 == 0 goto label1;

        $r9 = (org.bouncycastle.crypto.params.KeyParameter) r0;

        $r10 = virtualinvoke $r9.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r11 = specialinvoke r8.<org.bouncycastle.crypto.engines.RijndaelEngine: long[][] generateWorkingKey(byte[])>($r10);

        r8.<org.bouncycastle.crypto.engines.RijndaelEngine: long[][] workingKey> = $r11;

        r8.<org.bouncycastle.crypto.engines.RijndaelEngine: boolean forEncryption> = z1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to Rijndael init - ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        return "Rijndael";
    }

    public int getBlockSize()
    {
        int $i0, $i1;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        $i0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i1 = $i0 / 2;

        return $i1;
    }

    public int processBlock(byte[], int, byte[], int)
    {
        byte[] r2, r3;
        java.lang.IllegalStateException $r8;
        org.bouncycastle.crypto.DataLengthException $r6, $r7;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0;
        long[][] $r1, $r4, $r5;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        r3 := @parameter2: byte[];

        i5 := @parameter3: int;

        $r1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long[][] workingKey>;

        if $r1 != null goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Rijndael engine not initialised");

        throw $r8;

     label1:
        $i1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i2 = $i1 / 2;

        $i4 = i0 + $i2;

        $i3 = lengthof r2;

        if $i4 <= $i3 goto label2;

        $r7 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r7.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r7;

     label2:
        $i6 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i7 = $i6 / 2;

        $i9 = i5 + $i7;

        $i8 = lengthof r3;

        if $i9 <= $i8 goto label3;

        $r6 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r6.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r6;

     label3:
        $z0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: boolean forEncryption>;

        if $z0 == 0 goto label4;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void unpackBlock(byte[],int)>(r2, i0);

        $r5 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long[][] workingKey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void encryptBlock(long[][])>($r5);

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void packBlock(byte[],int)>(r3, i5);

        goto label5;

     label4:
        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void unpackBlock(byte[],int)>(r2, i0);

        $r4 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long[][] workingKey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void decryptBlock(long[][])>($r4);

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void packBlock(byte[],int)>(r3, i5);

     label5:
        $i10 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        $i11 = $i10 / 2;

        return $i11;
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        return;
    }

    private void unpackBlock(byte[], int)
    {
        byte[] r1;
        byte $b1, $b4, $b7, $b10, $b14, $b20, $b26, $b32;
        long $l3, $l6, $l9, $l12, $l16, $l17, $l18, $l19, $l22, $l23, $l24, $l25, $l28, $l29, $l30, $l31, $l34, $l35, $l36, $l37;
        short $s2, $s5, $s8, $s11, $s15, $s21, $s27, $s33, $s46, $s47, $s48, $s49, $s50, $s51, $s52, $s53;
        int i0, $i13, i38, i39, i40, i41, i42, i43, i44, i45;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i38 = i0 + 1;

        $b1 = r1[i0];

        $s46 = (short) $b1;

        $s2 = $s46 & 255;

        $l3 = (long) $s2;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0> = $l3;

        i39 = i38 + 1;

        $b4 = r1[i38];

        $s47 = (short) $b4;

        $s5 = $s47 & 255;

        $l6 = (long) $s5;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1> = $l6;

        i40 = i39 + 1;

        $b7 = r1[i39];

        $s48 = (short) $b7;

        $s8 = $s48 & 255;

        $l9 = (long) $s8;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2> = $l9;

        i41 = i40 + 1;

        $b10 = r1[i40];

        $s49 = (short) $b10;

        $s11 = $s49 & 255;

        $l12 = (long) $s11;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3> = $l12;

        i42 = 8;

     label1:
        $i13 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        if i42 == $i13 goto label2;

        $l18 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0>;

        i43 = i41 + 1;

        $b14 = r1[i41];

        $s50 = (short) $b14;

        $s15 = $s50 & 255;

        $l16 = (long) $s15;

        $l17 = $l16 << i42;

        $l19 = $l18 | $l17;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0> = $l19;

        $l24 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1>;

        i44 = i43 + 1;

        $b20 = r1[i43];

        $s51 = (short) $b20;

        $s21 = $s51 & 255;

        $l22 = (long) $s21;

        $l23 = $l22 << i42;

        $l25 = $l24 | $l23;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1> = $l25;

        $l30 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2>;

        i45 = i44 + 1;

        $b26 = r1[i44];

        $s52 = (short) $b26;

        $s27 = $s52 & 255;

        $l28 = (long) $s27;

        $l29 = $l28 << i42;

        $l31 = $l30 | $l29;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2> = $l31;

        $l36 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3>;

        i41 = i45 + 1;

        $b32 = r1[i45];

        $s53 = (short) $b32;

        $s33 = $s53 & 255;

        $l34 = (long) $s33;

        $l35 = $l34 << i42;

        $l37 = $l36 | $l35;

        r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3> = $l37;

        i42 = i42 + 8;

        goto label1;

     label2:
        return;
    }

    private void packBlock(byte[], int)
    {
        byte[] r1;
        long $l2, $l3, $l6, $l7, $l10, $l11, $l14, $l15;
        byte $b5, $b9, $b13, $b17;
        int i0, $i1, $i4, $i8, $i12, $i16, i18, i19, i20, i21, i22;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i18 = i0;

        i19 = 0;

     label1:
        $i1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int BC>;

        if i19 == $i1 goto label2;

        i20 = i18 + 1;

        $l2 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A0>;

        $l3 = $l2 >> i19;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r1[i18] = $b5;

        i21 = i20 + 1;

        $l6 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A1>;

        $l7 = $l6 >> i19;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r1[i20] = $b9;

        i22 = i21 + 1;

        $l10 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A2>;

        $l11 = $l10 >> i19;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        r1[i21] = $b13;

        i18 = i22 + 1;

        $l14 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: long A3>;

        $l15 = $l14 >> i19;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        r1[i22] = $b17;

        i19 = i19 + 8;

        goto label1;

     label2:
        return;
    }

    private void encryptBlock(long[][])
    {
        long[][] r1;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r3, $r4, $r6, $r7;
        long[] $r2, $r5, $r8;
        int $i0, $i1, i2;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r1 := @parameter0: long[][];

        $r2 = r1[0];

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        i2 = 1;

     label1:
        $i0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        if i2 >= $i0 goto label2;

        $r6 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] S>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r6);

        $r7 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r7);

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void MixColumn()>();

        $r8 = r1[i2];

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] S>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r3);

        $r4 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r4);

        $i1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $r5 = r1[$i1];

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r5);

        return;
    }

    private void decryptBlock(long[][])
    {
        long[][] r1;
        org.bouncycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r3, $r4, $r7, $r8;
        long[] $r2, $r5, $r6;
        int $i0, $i1, i2, $i4;

        r0 := @this: org.bouncycastle.crypto.engines.RijndaelEngine;

        r1 := @parameter0: long[][];

        $i0 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $r2 = r1[$i0];

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        $r3 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] Si>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r3);

        $r4 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r4);

        $i1 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        i2 = $i1 - 1;

     label1:
        if i2 <= 0 goto label2;

        $r6 = r1[i2];

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r6);

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void InvMixColumn()>();

        $r7 = <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] Si>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r7);

        $r8 = r0.<org.bouncycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r8);

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label2:
        $r5 = r1[0];

        specialinvoke r0.<org.bouncycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r5);

        return;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16;
        int[] $r4;
        byte[][] $r5, $r11;

        <org.bouncycastle.crypto.engines.RijndaelEngine: int MAXKC> = 64;

        <org.bouncycastle.crypto.engines.RijndaelEngine: int MAXROUNDS> = 14;

        $r0 = newarray (byte)[256];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 25;

        $r0[3] = 1;

        $r0[4] = 50;

        $r0[5] = 2;

        $r0[6] = 26;

        $r0[7] = -58;

        $r0[8] = 75;

        $r0[9] = -57;

        $r0[10] = 27;

        $r0[11] = 104;

        $r0[12] = 51;

        $r0[13] = -18;

        $r0[14] = -33;

        $r0[15] = 3;

        $r0[16] = 100;

        $r0[17] = 4;

        $r0[18] = -32;

        $r0[19] = 14;

        $r0[20] = 52;

        $r0[21] = -115;

        $r0[22] = -127;

        $r0[23] = -17;

        $r0[24] = 76;

        $r0[25] = 113;

        $r0[26] = 8;

        $r0[27] = -56;

        $r0[28] = -8;

        $r0[29] = 105;

        $r0[30] = 28;

        $r0[31] = -63;

        $r0[32] = 125;

        $r0[33] = -62;

        $r0[34] = 29;

        $r0[35] = -75;

        $r0[36] = -7;

        $r0[37] = -71;

        $r0[38] = 39;

        $r0[39] = 106;

        $r0[40] = 77;

        $r0[41] = -28;

        $r0[42] = -90;

        $r0[43] = 114;

        $r0[44] = -102;

        $r0[45] = -55;

        $r0[46] = 9;

        $r0[47] = 120;

        $r0[48] = 101;

        $r0[49] = 47;

        $r0[50] = -118;

        $r0[51] = 5;

        $r0[52] = 33;

        $r0[53] = 15;

        $r0[54] = -31;

        $r0[55] = 36;

        $r0[56] = 18;

        $r0[57] = -16;

        $r0[58] = -126;

        $r0[59] = 69;

        $r0[60] = 53;

        $r0[61] = -109;

        $r0[62] = -38;

        $r0[63] = -114;

        $r0[64] = -106;

        $r0[65] = -113;

        $r0[66] = -37;

        $r0[67] = -67;

        $r0[68] = 54;

        $r0[69] = -48;

        $r0[70] = -50;

        $r0[71] = -108;

        $r0[72] = 19;

        $r0[73] = 92;

        $r0[74] = -46;

        $r0[75] = -15;

        $r0[76] = 64;

        $r0[77] = 70;

        $r0[78] = -125;

        $r0[79] = 56;

        $r0[80] = 102;

        $r0[81] = -35;

        $r0[82] = -3;

        $r0[83] = 48;

        $r0[84] = -65;

        $r0[85] = 6;

        $r0[86] = -117;

        $r0[87] = 98;

        $r0[88] = -77;

        $r0[89] = 37;

        $r0[90] = -30;

        $r0[91] = -104;

        $r0[92] = 34;

        $r0[93] = -120;

        $r0[94] = -111;

        $r0[95] = 16;

        $r0[96] = 126;

        $r0[97] = 110;

        $r0[98] = 72;

        $r0[99] = -61;

        $r0[100] = -93;

        $r0[101] = -74;

        $r0[102] = 30;

        $r0[103] = 66;

        $r0[104] = 58;

        $r0[105] = 107;

        $r0[106] = 40;

        $r0[107] = 84;

        $r0[108] = -6;

        $r0[109] = -123;

        $r0[110] = 61;

        $r0[111] = -70;

        $r0[112] = 43;

        $r0[113] = 121;

        $r0[114] = 10;

        $r0[115] = 21;

        $r0[116] = -101;

        $r0[117] = -97;

        $r0[118] = 94;

        $r0[119] = -54;

        $r0[120] = 78;

        $r0[121] = -44;

        $r0[122] = -84;

        $r0[123] = -27;

        $r0[124] = -13;

        $r0[125] = 115;

        $r0[126] = -89;

        $r0[127] = 87;

        $r0[128] = -81;

        $r0[129] = 88;

        $r0[130] = -88;

        $r0[131] = 80;

        $r0[132] = -12;

        $r0[133] = -22;

        $r0[134] = -42;

        $r0[135] = 116;

        $r0[136] = 79;

        $r0[137] = -82;

        $r0[138] = -23;

        $r0[139] = -43;

        $r0[140] = -25;

        $r0[141] = -26;

        $r0[142] = -83;

        $r0[143] = -24;

        $r0[144] = 44;

        $r0[145] = -41;

        $r0[146] = 117;

        $r0[147] = 122;

        $r0[148] = -21;

        $r0[149] = 22;

        $r0[150] = 11;

        $r0[151] = -11;

        $r0[152] = 89;

        $r0[153] = -53;

        $r0[154] = 95;

        $r0[155] = -80;

        $r0[156] = -100;

        $r0[157] = -87;

        $r0[158] = 81;

        $r0[159] = -96;

        $r0[160] = 127;

        $r0[161] = 12;

        $r0[162] = -10;

        $r0[163] = 111;

        $r0[164] = 23;

        $r0[165] = -60;

        $r0[166] = 73;

        $r0[167] = -20;

        $r0[168] = -40;

        $r0[169] = 67;

        $r0[170] = 31;

        $r0[171] = 45;

        $r0[172] = -92;

        $r0[173] = 118;

        $r0[174] = 123;

        $r0[175] = -73;

        $r0[176] = -52;

        $r0[177] = -69;

        $r0[178] = 62;

        $r0[179] = 90;

        $r0[180] = -5;

        $r0[181] = 96;

        $r0[182] = -79;

        $r0[183] = -122;

        $r0[184] = 59;

        $r0[185] = 82;

        $r0[186] = -95;

        $r0[187] = 108;

        $r0[188] = -86;

        $r0[189] = 85;

        $r0[190] = 41;

        $r0[191] = -99;

        $r0[192] = -105;

        $r0[193] = -78;

        $r0[194] = -121;

        $r0[195] = -112;

        $r0[196] = 97;

        $r0[197] = -66;

        $r0[198] = -36;

        $r0[199] = -4;

        $r0[200] = -68;

        $r0[201] = -107;

        $r0[202] = -49;

        $r0[203] = -51;

        $r0[204] = 55;

        $r0[205] = 63;

        $r0[206] = 91;

        $r0[207] = -47;

        $r0[208] = 83;

        $r0[209] = 57;

        $r0[210] = -124;

        $r0[211] = 60;

        $r0[212] = 65;

        $r0[213] = -94;

        $r0[214] = 109;

        $r0[215] = 71;

        $r0[216] = 20;

        $r0[217] = 42;

        $r0[218] = -98;

        $r0[219] = 93;

        $r0[220] = 86;

        $r0[221] = -14;

        $r0[222] = -45;

        $r0[223] = -85;

        $r0[224] = 68;

        $r0[225] = 17;

        $r0[226] = -110;

        $r0[227] = -39;

        $r0[228] = 35;

        $r0[229] = 32;

        $r0[230] = 46;

        $r0[231] = -119;

        $r0[232] = -76;

        $r0[233] = 124;

        $r0[234] = -72;

        $r0[235] = 38;

        $r0[236] = 119;

        $r0[237] = -103;

        $r0[238] = -29;

        $r0[239] = -91;

        $r0[240] = 103;

        $r0[241] = 74;

        $r0[242] = -19;

        $r0[243] = -34;

        $r0[244] = -59;

        $r0[245] = 49;

        $r0[246] = -2;

        $r0[247] = 24;

        $r0[248] = 13;

        $r0[249] = 99;

        $r0[250] = -116;

        $r0[251] = -128;

        $r0[252] = -64;

        $r0[253] = -9;

        $r0[254] = 112;

        $r0[255] = 7;

        <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] logtable> = $r0;

        $r1 = newarray (byte)[511];

        $r1[0] = 0;

        $r1[1] = 3;

        $r1[2] = 5;

        $r1[3] = 15;

        $r1[4] = 17;

        $r1[5] = 51;

        $r1[6] = 85;

        $r1[7] = -1;

        $r1[8] = 26;

        $r1[9] = 46;

        $r1[10] = 114;

        $r1[11] = -106;

        $r1[12] = -95;

        $r1[13] = -8;

        $r1[14] = 19;

        $r1[15] = 53;

        $r1[16] = 95;

        $r1[17] = -31;

        $r1[18] = 56;

        $r1[19] = 72;

        $r1[20] = -40;

        $r1[21] = 115;

        $r1[22] = -107;

        $r1[23] = -92;

        $r1[24] = -9;

        $r1[25] = 2;

        $r1[26] = 6;

        $r1[27] = 10;

        $r1[28] = 30;

        $r1[29] = 34;

        $r1[30] = 102;

        $r1[31] = -86;

        $r1[32] = -27;

        $r1[33] = 52;

        $r1[34] = 92;

        $r1[35] = -28;

        $r1[36] = 55;

        $r1[37] = 89;

        $r1[38] = -21;

        $r1[39] = 38;

        $r1[40] = 106;

        $r1[41] = -66;

        $r1[42] = -39;

        $r1[43] = 112;

        $r1[44] = -112;

        $r1[45] = -85;

        $r1[46] = -26;

        $r1[47] = 49;

        $r1[48] = 83;

        $r1[49] = -11;

        $r1[50] = 4;

        $r1[51] = 12;

        $r1[52] = 20;

        $r1[53] = 60;

        $r1[54] = 68;

        $r1[55] = -52;

        $r1[56] = 79;

        $r1[57] = -47;

        $r1[58] = 104;

        $r1[59] = -72;

        $r1[60] = -45;

        $r1[61] = 110;

        $r1[62] = -78;

        $r1[63] = -51;

        $r1[64] = 76;

        $r1[65] = -44;

        $r1[66] = 103;

        $r1[67] = -87;

        $r1[68] = -32;

        $r1[69] = 59;

        $r1[70] = 77;

        $r1[71] = -41;

        $r1[72] = 98;

        $r1[73] = -90;

        $r1[74] = -15;

        $r1[75] = 8;

        $r1[76] = 24;

        $r1[77] = 40;

        $r1[78] = 120;

        $r1[79] = -120;

        $r1[80] = -125;

        $r1[81] = -98;

        $r1[82] = -71;

        $r1[83] = -48;

        $r1[84] = 107;

        $r1[85] = -67;

        $r1[86] = -36;

        $r1[87] = 127;

        $r1[88] = -127;

        $r1[89] = -104;

        $r1[90] = -77;

        $r1[91] = -50;

        $r1[92] = 73;

        $r1[93] = -37;

        $r1[94] = 118;

        $r1[95] = -102;

        $r1[96] = -75;

        $r1[97] = -60;

        $r1[98] = 87;

        $r1[99] = -7;

        $r1[100] = 16;

        $r1[101] = 48;

        $r1[102] = 80;

        $r1[103] = -16;

        $r1[104] = 11;

        $r1[105] = 29;

        $r1[106] = 39;

        $r1[107] = 105;

        $r1[108] = -69;

        $r1[109] = -42;

        $r1[110] = 97;

        $r1[111] = -93;

        $r1[112] = -2;

        $r1[113] = 25;

        $r1[114] = 43;

        $r1[115] = 125;

        $r1[116] = -121;

        $r1[117] = -110;

        $r1[118] = -83;

        $r1[119] = -20;

        $r1[120] = 47;

        $r1[121] = 113;

        $r1[122] = -109;

        $r1[123] = -82;

        $r1[124] = -23;

        $r1[125] = 32;

        $r1[126] = 96;

        $r1[127] = -96;

        $r1[128] = -5;

        $r1[129] = 22;

        $r1[130] = 58;

        $r1[131] = 78;

        $r1[132] = -46;

        $r1[133] = 109;

        $r1[134] = -73;

        $r1[135] = -62;

        $r1[136] = 93;

        $r1[137] = -25;

        $r1[138] = 50;

        $r1[139] = 86;

        $r1[140] = -6;

        $r1[141] = 21;

        $r1[142] = 63;

        $r1[143] = 65;

        $r1[144] = -61;

        $r1[145] = 94;

        $r1[146] = -30;

        $r1[147] = 61;

        $r1[148] = 71;

        $r1[149] = -55;

        $r1[150] = 64;

        $r1[151] = -64;

        $r1[152] = 91;

        $r1[153] = -19;

        $r1[154] = 44;

        $r1[155] = 116;

        $r1[156] = -100;

        $r1[157] = -65;

        $r1[158] = -38;

        $r1[159] = 117;

        $r1[160] = -97;

        $r1[161] = -70;

        $r1[162] = -43;

        $r1[163] = 100;

        $r1[164] = -84;

        $r1[165] = -17;

        $r1[166] = 42;

        $r1[167] = 126;

        $r1[168] = -126;

        $r1[169] = -99;

        $r1[170] = -68;

        $r1[171] = -33;

        $r1[172] = 122;

        $r1[173] = -114;

        $r1[174] = -119;

        $r1[175] = -128;

        $r1[176] = -101;

        $r1[177] = -74;

        $r1[178] = -63;

        $r1[179] = 88;

        $r1[180] = -24;

        $r1[181] = 35;

        $r1[182] = 101;

        $r1[183] = -81;

        $r1[184] = -22;

        $r1[185] = 37;

        $r1[186] = 111;

        $r1[187] = -79;

        $r1[188] = -56;

        $r1[189] = 67;

        $r1[190] = -59;

        $r1[191] = 84;

        $r1[192] = -4;

        $r1[193] = 31;

        $r1[194] = 33;

        $r1[195] = 99;

        $r1[196] = -91;

        $r1[197] = -12;

        $r1[198] = 7;

        $r1[199] = 9;

        $r1[200] = 27;

        $r1[201] = 45;

        $r1[202] = 119;

        $r1[203] = -103;

        $r1[204] = -80;

        $r1[205] = -53;

        $r1[206] = 70;

        $r1[207] = -54;

        $r1[208] = 69;

        $r1[209] = -49;

        $r1[210] = 74;

        $r1[211] = -34;

        $r1[212] = 121;

        $r1[213] = -117;

        $r1[214] = -122;

        $r1[215] = -111;

        $r1[216] = -88;

        $r1[217] = -29;

        $r1[218] = 62;

        $r1[219] = 66;

        $r1[220] = -58;

        $r1[221] = 81;

        $r1[222] = -13;

        $r1[223] = 14;

        $r1[224] = 18;

        $r1[225] = 54;

        $r1[226] = 90;

        $r1[227] = -18;

        $r1[228] = 41;

        $r1[229] = 123;

        $r1[230] = -115;

        $r1[231] = -116;

        $r1[232] = -113;

        $r1[233] = -118;

        $r1[234] = -123;

        $r1[235] = -108;

        $r1[236] = -89;

        $r1[237] = -14;

        $r1[238] = 13;

        $r1[239] = 23;

        $r1[240] = 57;

        $r1[241] = 75;

        $r1[242] = -35;

        $r1[243] = 124;

        $r1[244] = -124;

        $r1[245] = -105;

        $r1[246] = -94;

        $r1[247] = -3;

        $r1[248] = 28;

        $r1[249] = 36;

        $r1[250] = 108;

        $r1[251] = -76;

        $r1[252] = -57;

        $r1[253] = 82;

        $r1[254] = -10;

        $r1[255] = 1;

        $r1[256] = 3;

        $r1[257] = 5;

        $r1[258] = 15;

        $r1[259] = 17;

        $r1[260] = 51;

        $r1[261] = 85;

        $r1[262] = -1;

        $r1[263] = 26;

        $r1[264] = 46;

        $r1[265] = 114;

        $r1[266] = -106;

        $r1[267] = -95;

        $r1[268] = -8;

        $r1[269] = 19;

        $r1[270] = 53;

        $r1[271] = 95;

        $r1[272] = -31;

        $r1[273] = 56;

        $r1[274] = 72;

        $r1[275] = -40;

        $r1[276] = 115;

        $r1[277] = -107;

        $r1[278] = -92;

        $r1[279] = -9;

        $r1[280] = 2;

        $r1[281] = 6;

        $r1[282] = 10;

        $r1[283] = 30;

        $r1[284] = 34;

        $r1[285] = 102;

        $r1[286] = -86;

        $r1[287] = -27;

        $r1[288] = 52;

        $r1[289] = 92;

        $r1[290] = -28;

        $r1[291] = 55;

        $r1[292] = 89;

        $r1[293] = -21;

        $r1[294] = 38;

        $r1[295] = 106;

        $r1[296] = -66;

        $r1[297] = -39;

        $r1[298] = 112;

        $r1[299] = -112;

        $r1[300] = -85;

        $r1[301] = -26;

        $r1[302] = 49;

        $r1[303] = 83;

        $r1[304] = -11;

        $r1[305] = 4;

        $r1[306] = 12;

        $r1[307] = 20;

        $r1[308] = 60;

        $r1[309] = 68;

        $r1[310] = -52;

        $r1[311] = 79;

        $r1[312] = -47;

        $r1[313] = 104;

        $r1[314] = -72;

        $r1[315] = -45;

        $r1[316] = 110;

        $r1[317] = -78;

        $r1[318] = -51;

        $r1[319] = 76;

        $r1[320] = -44;

        $r1[321] = 103;

        $r1[322] = -87;

        $r1[323] = -32;

        $r1[324] = 59;

        $r1[325] = 77;

        $r1[326] = -41;

        $r1[327] = 98;

        $r1[328] = -90;

        $r1[329] = -15;

        $r1[330] = 8;

        $r1[331] = 24;

        $r1[332] = 40;

        $r1[333] = 120;

        $r1[334] = -120;

        $r1[335] = -125;

        $r1[336] = -98;

        $r1[337] = -71;

        $r1[338] = -48;

        $r1[339] = 107;

        $r1[340] = -67;

        $r1[341] = -36;

        $r1[342] = 127;

        $r1[343] = -127;

        $r1[344] = -104;

        $r1[345] = -77;

        $r1[346] = -50;

        $r1[347] = 73;

        $r1[348] = -37;

        $r1[349] = 118;

        $r1[350] = -102;

        $r1[351] = -75;

        $r1[352] = -60;

        $r1[353] = 87;

        $r1[354] = -7;

        $r1[355] = 16;

        $r1[356] = 48;

        $r1[357] = 80;

        $r1[358] = -16;

        $r1[359] = 11;

        $r1[360] = 29;

        $r1[361] = 39;

        $r1[362] = 105;

        $r1[363] = -69;

        $r1[364] = -42;

        $r1[365] = 97;

        $r1[366] = -93;

        $r1[367] = -2;

        $r1[368] = 25;

        $r1[369] = 43;

        $r1[370] = 125;

        $r1[371] = -121;

        $r1[372] = -110;

        $r1[373] = -83;

        $r1[374] = -20;

        $r1[375] = 47;

        $r1[376] = 113;

        $r1[377] = -109;

        $r1[378] = -82;

        $r1[379] = -23;

        $r1[380] = 32;

        $r1[381] = 96;

        $r1[382] = -96;

        $r1[383] = -5;

        $r1[384] = 22;

        $r1[385] = 58;

        $r1[386] = 78;

        $r1[387] = -46;

        $r1[388] = 109;

        $r1[389] = -73;

        $r1[390] = -62;

        $r1[391] = 93;

        $r1[392] = -25;

        $r1[393] = 50;

        $r1[394] = 86;

        $r1[395] = -6;

        $r1[396] = 21;

        $r1[397] = 63;

        $r1[398] = 65;

        $r1[399] = -61;

        $r1[400] = 94;

        $r1[401] = -30;

        $r1[402] = 61;

        $r1[403] = 71;

        $r1[404] = -55;

        $r1[405] = 64;

        $r1[406] = -64;

        $r1[407] = 91;

        $r1[408] = -19;

        $r1[409] = 44;

        $r1[410] = 116;

        $r1[411] = -100;

        $r1[412] = -65;

        $r1[413] = -38;

        $r1[414] = 117;

        $r1[415] = -97;

        $r1[416] = -70;

        $r1[417] = -43;

        $r1[418] = 100;

        $r1[419] = -84;

        $r1[420] = -17;

        $r1[421] = 42;

        $r1[422] = 126;

        $r1[423] = -126;

        $r1[424] = -99;

        $r1[425] = -68;

        $r1[426] = -33;

        $r1[427] = 122;

        $r1[428] = -114;

        $r1[429] = -119;

        $r1[430] = -128;

        $r1[431] = -101;

        $r1[432] = -74;

        $r1[433] = -63;

        $r1[434] = 88;

        $r1[435] = -24;

        $r1[436] = 35;

        $r1[437] = 101;

        $r1[438] = -81;

        $r1[439] = -22;

        $r1[440] = 37;

        $r1[441] = 111;

        $r1[442] = -79;

        $r1[443] = -56;

        $r1[444] = 67;

        $r1[445] = -59;

        $r1[446] = 84;

        $r1[447] = -4;

        $r1[448] = 31;

        $r1[449] = 33;

        $r1[450] = 99;

        $r1[451] = -91;

        $r1[452] = -12;

        $r1[453] = 7;

        $r1[454] = 9;

        $r1[455] = 27;

        $r1[456] = 45;

        $r1[457] = 119;

        $r1[458] = -103;

        $r1[459] = -80;

        $r1[460] = -53;

        $r1[461] = 70;

        $r1[462] = -54;

        $r1[463] = 69;

        $r1[464] = -49;

        $r1[465] = 74;

        $r1[466] = -34;

        $r1[467] = 121;

        $r1[468] = -117;

        $r1[469] = -122;

        $r1[470] = -111;

        $r1[471] = -88;

        $r1[472] = -29;

        $r1[473] = 62;

        $r1[474] = 66;

        $r1[475] = -58;

        $r1[476] = 81;

        $r1[477] = -13;

        $r1[478] = 14;

        $r1[479] = 18;

        $r1[480] = 54;

        $r1[481] = 90;

        $r1[482] = -18;

        $r1[483] = 41;

        $r1[484] = 123;

        $r1[485] = -115;

        $r1[486] = -116;

        $r1[487] = -113;

        $r1[488] = -118;

        $r1[489] = -123;

        $r1[490] = -108;

        $r1[491] = -89;

        $r1[492] = -14;

        $r1[493] = 13;

        $r1[494] = 23;

        $r1[495] = 57;

        $r1[496] = 75;

        $r1[497] = -35;

        $r1[498] = 124;

        $r1[499] = -124;

        $r1[500] = -105;

        $r1[501] = -94;

        $r1[502] = -3;

        $r1[503] = 28;

        $r1[504] = 36;

        $r1[505] = 108;

        $r1[506] = -76;

        $r1[507] = -57;

        $r1[508] = 82;

        $r1[509] = -10;

        $r1[510] = 1;

        <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] aLogtable> = $r1;

        $r2 = newarray (byte)[256];

        $r2[0] = 99;

        $r2[1] = 124;

        $r2[2] = 119;

        $r2[3] = 123;

        $r2[4] = -14;

        $r2[5] = 107;

        $r2[6] = 111;

        $r2[7] = -59;

        $r2[8] = 48;

        $r2[9] = 1;

        $r2[10] = 103;

        $r2[11] = 43;

        $r2[12] = -2;

        $r2[13] = -41;

        $r2[14] = -85;

        $r2[15] = 118;

        $r2[16] = -54;

        $r2[17] = -126;

        $r2[18] = -55;

        $r2[19] = 125;

        $r2[20] = -6;

        $r2[21] = 89;

        $r2[22] = 71;

        $r2[23] = -16;

        $r2[24] = -83;

        $r2[25] = -44;

        $r2[26] = -94;

        $r2[27] = -81;

        $r2[28] = -100;

        $r2[29] = -92;

        $r2[30] = 114;

        $r2[31] = -64;

        $r2[32] = -73;

        $r2[33] = -3;

        $r2[34] = -109;

        $r2[35] = 38;

        $r2[36] = 54;

        $r2[37] = 63;

        $r2[38] = -9;

        $r2[39] = -52;

        $r2[40] = 52;

        $r2[41] = -91;

        $r2[42] = -27;

        $r2[43] = -15;

        $r2[44] = 113;

        $r2[45] = -40;

        $r2[46] = 49;

        $r2[47] = 21;

        $r2[48] = 4;

        $r2[49] = -57;

        $r2[50] = 35;

        $r2[51] = -61;

        $r2[52] = 24;

        $r2[53] = -106;

        $r2[54] = 5;

        $r2[55] = -102;

        $r2[56] = 7;

        $r2[57] = 18;

        $r2[58] = -128;

        $r2[59] = -30;

        $r2[60] = -21;

        $r2[61] = 39;

        $r2[62] = -78;

        $r2[63] = 117;

        $r2[64] = 9;

        $r2[65] = -125;

        $r2[66] = 44;

        $r2[67] = 26;

        $r2[68] = 27;

        $r2[69] = 110;

        $r2[70] = 90;

        $r2[71] = -96;

        $r2[72] = 82;

        $r2[73] = 59;

        $r2[74] = -42;

        $r2[75] = -77;

        $r2[76] = 41;

        $r2[77] = -29;

        $r2[78] = 47;

        $r2[79] = -124;

        $r2[80] = 83;

        $r2[81] = -47;

        $r2[82] = 0;

        $r2[83] = -19;

        $r2[84] = 32;

        $r2[85] = -4;

        $r2[86] = -79;

        $r2[87] = 91;

        $r2[88] = 106;

        $r2[89] = -53;

        $r2[90] = -66;

        $r2[91] = 57;

        $r2[92] = 74;

        $r2[93] = 76;

        $r2[94] = 88;

        $r2[95] = -49;

        $r2[96] = -48;

        $r2[97] = -17;

        $r2[98] = -86;

        $r2[99] = -5;

        $r2[100] = 67;

        $r2[101] = 77;

        $r2[102] = 51;

        $r2[103] = -123;

        $r2[104] = 69;

        $r2[105] = -7;

        $r2[106] = 2;

        $r2[107] = 127;

        $r2[108] = 80;

        $r2[109] = 60;

        $r2[110] = -97;

        $r2[111] = -88;

        $r2[112] = 81;

        $r2[113] = -93;

        $r2[114] = 64;

        $r2[115] = -113;

        $r2[116] = -110;

        $r2[117] = -99;

        $r2[118] = 56;

        $r2[119] = -11;

        $r2[120] = -68;

        $r2[121] = -74;

        $r2[122] = -38;

        $r2[123] = 33;

        $r2[124] = 16;

        $r2[125] = -1;

        $r2[126] = -13;

        $r2[127] = -46;

        $r2[128] = -51;

        $r2[129] = 12;

        $r2[130] = 19;

        $r2[131] = -20;

        $r2[132] = 95;

        $r2[133] = -105;

        $r2[134] = 68;

        $r2[135] = 23;

        $r2[136] = -60;

        $r2[137] = -89;

        $r2[138] = 126;

        $r2[139] = 61;

        $r2[140] = 100;

        $r2[141] = 93;

        $r2[142] = 25;

        $r2[143] = 115;

        $r2[144] = 96;

        $r2[145] = -127;

        $r2[146] = 79;

        $r2[147] = -36;

        $r2[148] = 34;

        $r2[149] = 42;

        $r2[150] = -112;

        $r2[151] = -120;

        $r2[152] = 70;

        $r2[153] = -18;

        $r2[154] = -72;

        $r2[155] = 20;

        $r2[156] = -34;

        $r2[157] = 94;

        $r2[158] = 11;

        $r2[159] = -37;

        $r2[160] = -32;

        $r2[161] = 50;

        $r2[162] = 58;

        $r2[163] = 10;

        $r2[164] = 73;

        $r2[165] = 6;

        $r2[166] = 36;

        $r2[167] = 92;

        $r2[168] = -62;

        $r2[169] = -45;

        $r2[170] = -84;

        $r2[171] = 98;

        $r2[172] = -111;

        $r2[173] = -107;

        $r2[174] = -28;

        $r2[175] = 121;

        $r2[176] = -25;

        $r2[177] = -56;

        $r2[178] = 55;

        $r2[179] = 109;

        $r2[180] = -115;

        $r2[181] = -43;

        $r2[182] = 78;

        $r2[183] = -87;

        $r2[184] = 108;

        $r2[185] = 86;

        $r2[186] = -12;

        $r2[187] = -22;

        $r2[188] = 101;

        $r2[189] = 122;

        $r2[190] = -82;

        $r2[191] = 8;

        $r2[192] = -70;

        $r2[193] = 120;

        $r2[194] = 37;

        $r2[195] = 46;

        $r2[196] = 28;

        $r2[197] = -90;

        $r2[198] = -76;

        $r2[199] = -58;

        $r2[200] = -24;

        $r2[201] = -35;

        $r2[202] = 116;

        $r2[203] = 31;

        $r2[204] = 75;

        $r2[205] = -67;

        $r2[206] = -117;

        $r2[207] = -118;

        $r2[208] = 112;

        $r2[209] = 62;

        $r2[210] = -75;

        $r2[211] = 102;

        $r2[212] = 72;

        $r2[213] = 3;

        $r2[214] = -10;

        $r2[215] = 14;

        $r2[216] = 97;

        $r2[217] = 53;

        $r2[218] = 87;

        $r2[219] = -71;

        $r2[220] = -122;

        $r2[221] = -63;

        $r2[222] = 29;

        $r2[223] = -98;

        $r2[224] = -31;

        $r2[225] = -8;

        $r2[226] = -104;

        $r2[227] = 17;

        $r2[228] = 105;

        $r2[229] = -39;

        $r2[230] = -114;

        $r2[231] = -108;

        $r2[232] = -101;

        $r2[233] = 30;

        $r2[234] = -121;

        $r2[235] = -23;

        $r2[236] = -50;

        $r2[237] = 85;

        $r2[238] = 40;

        $r2[239] = -33;

        $r2[240] = -116;

        $r2[241] = -95;

        $r2[242] = -119;

        $r2[243] = 13;

        $r2[244] = -65;

        $r2[245] = -26;

        $r2[246] = 66;

        $r2[247] = 104;

        $r2[248] = 65;

        $r2[249] = -103;

        $r2[250] = 45;

        $r2[251] = 15;

        $r2[252] = -80;

        $r2[253] = 84;

        $r2[254] = -69;

        $r2[255] = 22;

        <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] S> = $r2;

        $r3 = newarray (byte)[256];

        $r3[0] = 82;

        $r3[1] = 9;

        $r3[2] = 106;

        $r3[3] = -43;

        $r3[4] = 48;

        $r3[5] = 54;

        $r3[6] = -91;

        $r3[7] = 56;

        $r3[8] = -65;

        $r3[9] = 64;

        $r3[10] = -93;

        $r3[11] = -98;

        $r3[12] = -127;

        $r3[13] = -13;

        $r3[14] = -41;

        $r3[15] = -5;

        $r3[16] = 124;

        $r3[17] = -29;

        $r3[18] = 57;

        $r3[19] = -126;

        $r3[20] = -101;

        $r3[21] = 47;

        $r3[22] = -1;

        $r3[23] = -121;

        $r3[24] = 52;

        $r3[25] = -114;

        $r3[26] = 67;

        $r3[27] = 68;

        $r3[28] = -60;

        $r3[29] = -34;

        $r3[30] = -23;

        $r3[31] = -53;

        $r3[32] = 84;

        $r3[33] = 123;

        $r3[34] = -108;

        $r3[35] = 50;

        $r3[36] = -90;

        $r3[37] = -62;

        $r3[38] = 35;

        $r3[39] = 61;

        $r3[40] = -18;

        $r3[41] = 76;

        $r3[42] = -107;

        $r3[43] = 11;

        $r3[44] = 66;

        $r3[45] = -6;

        $r3[46] = -61;

        $r3[47] = 78;

        $r3[48] = 8;

        $r3[49] = 46;

        $r3[50] = -95;

        $r3[51] = 102;

        $r3[52] = 40;

        $r3[53] = -39;

        $r3[54] = 36;

        $r3[55] = -78;

        $r3[56] = 118;

        $r3[57] = 91;

        $r3[58] = -94;

        $r3[59] = 73;

        $r3[60] = 109;

        $r3[61] = -117;

        $r3[62] = -47;

        $r3[63] = 37;

        $r3[64] = 114;

        $r3[65] = -8;

        $r3[66] = -10;

        $r3[67] = 100;

        $r3[68] = -122;

        $r3[69] = 104;

        $r3[70] = -104;

        $r3[71] = 22;

        $r3[72] = -44;

        $r3[73] = -92;

        $r3[74] = 92;

        $r3[75] = -52;

        $r3[76] = 93;

        $r3[77] = 101;

        $r3[78] = -74;

        $r3[79] = -110;

        $r3[80] = 108;

        $r3[81] = 112;

        $r3[82] = 72;

        $r3[83] = 80;

        $r3[84] = -3;

        $r3[85] = -19;

        $r3[86] = -71;

        $r3[87] = -38;

        $r3[88] = 94;

        $r3[89] = 21;

        $r3[90] = 70;

        $r3[91] = 87;

        $r3[92] = -89;

        $r3[93] = -115;

        $r3[94] = -99;

        $r3[95] = -124;

        $r3[96] = -112;

        $r3[97] = -40;

        $r3[98] = -85;

        $r3[99] = 0;

        $r3[100] = -116;

        $r3[101] = -68;

        $r3[102] = -45;

        $r3[103] = 10;

        $r3[104] = -9;

        $r3[105] = -28;

        $r3[106] = 88;

        $r3[107] = 5;

        $r3[108] = -72;

        $r3[109] = -77;

        $r3[110] = 69;

        $r3[111] = 6;

        $r3[112] = -48;

        $r3[113] = 44;

        $r3[114] = 30;

        $r3[115] = -113;

        $r3[116] = -54;

        $r3[117] = 63;

        $r3[118] = 15;

        $r3[119] = 2;

        $r3[120] = -63;

        $r3[121] = -81;

        $r3[122] = -67;

        $r3[123] = 3;

        $r3[124] = 1;

        $r3[125] = 19;

        $r3[126] = -118;

        $r3[127] = 107;

        $r3[128] = 58;

        $r3[129] = -111;

        $r3[130] = 17;

        $r3[131] = 65;

        $r3[132] = 79;

        $r3[133] = 103;

        $r3[134] = -36;

        $r3[135] = -22;

        $r3[136] = -105;

        $r3[137] = -14;

        $r3[138] = -49;

        $r3[139] = -50;

        $r3[140] = -16;

        $r3[141] = -76;

        $r3[142] = -26;

        $r3[143] = 115;

        $r3[144] = -106;

        $r3[145] = -84;

        $r3[146] = 116;

        $r3[147] = 34;

        $r3[148] = -25;

        $r3[149] = -83;

        $r3[150] = 53;

        $r3[151] = -123;

        $r3[152] = -30;

        $r3[153] = -7;

        $r3[154] = 55;

        $r3[155] = -24;

        $r3[156] = 28;

        $r3[157] = 117;

        $r3[158] = -33;

        $r3[159] = 110;

        $r3[160] = 71;

        $r3[161] = -15;

        $r3[162] = 26;

        $r3[163] = 113;

        $r3[164] = 29;

        $r3[165] = 41;

        $r3[166] = -59;

        $r3[167] = -119;

        $r3[168] = 111;

        $r3[169] = -73;

        $r3[170] = 98;

        $r3[171] = 14;

        $r3[172] = -86;

        $r3[173] = 24;

        $r3[174] = -66;

        $r3[175] = 27;

        $r3[176] = -4;

        $r3[177] = 86;

        $r3[178] = 62;

        $r3[179] = 75;

        $r3[180] = -58;

        $r3[181] = -46;

        $r3[182] = 121;

        $r3[183] = 32;

        $r3[184] = -102;

        $r3[185] = -37;

        $r3[186] = -64;

        $r3[187] = -2;

        $r3[188] = 120;

        $r3[189] = -51;

        $r3[190] = 90;

        $r3[191] = -12;

        $r3[192] = 31;

        $r3[193] = -35;

        $r3[194] = -88;

        $r3[195] = 51;

        $r3[196] = -120;

        $r3[197] = 7;

        $r3[198] = -57;

        $r3[199] = 49;

        $r3[200] = -79;

        $r3[201] = 18;

        $r3[202] = 16;

        $r3[203] = 89;

        $r3[204] = 39;

        $r3[205] = -128;

        $r3[206] = -20;

        $r3[207] = 95;

        $r3[208] = 96;

        $r3[209] = 81;

        $r3[210] = 127;

        $r3[211] = -87;

        $r3[212] = 25;

        $r3[213] = -75;

        $r3[214] = 74;

        $r3[215] = 13;

        $r3[216] = 45;

        $r3[217] = -27;

        $r3[218] = 122;

        $r3[219] = -97;

        $r3[220] = -109;

        $r3[221] = -55;

        $r3[222] = -100;

        $r3[223] = -17;

        $r3[224] = -96;

        $r3[225] = -32;

        $r3[226] = 59;

        $r3[227] = 77;

        $r3[228] = -82;

        $r3[229] = 42;

        $r3[230] = -11;

        $r3[231] = -80;

        $r3[232] = -56;

        $r3[233] = -21;

        $r3[234] = -69;

        $r3[235] = 60;

        $r3[236] = -125;

        $r3[237] = 83;

        $r3[238] = -103;

        $r3[239] = 97;

        $r3[240] = 23;

        $r3[241] = 43;

        $r3[242] = 4;

        $r3[243] = 126;

        $r3[244] = -70;

        $r3[245] = 119;

        $r3[246] = -42;

        $r3[247] = 38;

        $r3[248] = -31;

        $r3[249] = 105;

        $r3[250] = 20;

        $r3[251] = 99;

        $r3[252] = 85;

        $r3[253] = 33;

        $r3[254] = 12;

        $r3[255] = 125;

        <org.bouncycastle.crypto.engines.RijndaelEngine: byte[] Si> = $r3;

        $r4 = newarray (int)[30];

        $r4[0] = 1;

        $r4[1] = 2;

        $r4[2] = 4;

        $r4[3] = 8;

        $r4[4] = 16;

        $r4[5] = 32;

        $r4[6] = 64;

        $r4[7] = 128;

        $r4[8] = 27;

        $r4[9] = 54;

        $r4[10] = 108;

        $r4[11] = 216;

        $r4[12] = 171;

        $r4[13] = 77;

        $r4[14] = 154;

        $r4[15] = 47;

        $r4[16] = 94;

        $r4[17] = 188;

        $r4[18] = 99;

        $r4[19] = 198;

        $r4[20] = 151;

        $r4[21] = 53;

        $r4[22] = 106;

        $r4[23] = 212;

        $r4[24] = 179;

        $r4[25] = 125;

        $r4[26] = 250;

        $r4[27] = 239;

        $r4[28] = 197;

        $r4[29] = 145;

        <org.bouncycastle.crypto.engines.RijndaelEngine: int[] rcon> = $r4;

        $r5 = newarray (byte[])[5];

        $r6 = newarray (byte)[4];

        $r6[0] = 0;

        $r6[1] = 8;

        $r6[2] = 16;

        $r6[3] = 24;

        $r5[0] = $r6;

        $r7 = newarray (byte)[4];

        $r7[0] = 0;

        $r7[1] = 8;

        $r7[2] = 16;

        $r7[3] = 24;

        $r5[1] = $r7;

        $r8 = newarray (byte)[4];

        $r8[0] = 0;

        $r8[1] = 8;

        $r8[2] = 16;

        $r8[3] = 24;

        $r5[2] = $r8;

        $r9 = newarray (byte)[4];

        $r9[0] = 0;

        $r9[1] = 8;

        $r9[2] = 16;

        $r9[3] = 32;

        $r5[3] = $r9;

        $r10 = newarray (byte)[4];

        $r10[0] = 0;

        $r10[1] = 8;

        $r10[2] = 24;

        $r10[3] = 32;

        $r5[4] = $r10;

        <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts0> = $r5;

        $r11 = newarray (byte[])[5];

        $r12 = newarray (byte)[4];

        $r12[0] = 0;

        $r12[1] = 24;

        $r12[2] = 16;

        $r12[3] = 8;

        $r11[0] = $r12;

        $r13 = newarray (byte)[4];

        $r13[0] = 0;

        $r13[1] = 32;

        $r13[2] = 24;

        $r13[3] = 16;

        $r11[1] = $r13;

        $r14 = newarray (byte)[4];

        $r14[0] = 0;

        $r14[1] = 40;

        $r14[2] = 32;

        $r14[3] = 24;

        $r11[2] = $r14;

        $r15 = newarray (byte)[4];

        $r15[0] = 0;

        $r15[1] = 48;

        $r15[2] = 40;

        $r15[3] = 24;

        $r11[3] = $r15;

        $r16 = newarray (byte)[4];

        $r16[0] = 0;

        $r16[1] = 56;

        $r16[2] = 40;

        $r16[3] = 32;

        $r11[4] = $r16;

        <org.bouncycastle.crypto.engines.RijndaelEngine: byte[][] shifts1> = $r11;

        return;
    }
}
