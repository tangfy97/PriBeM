public class org.apache.commons.collections.bag.TreeBag extends org.apache.commons.collections.bag.AbstractMapBag implements org.apache.commons.collections.SortedBag, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.TreeMap $r1;
        org.apache.commons.collections.bag.TreeBag r0;

        r0 := @this: org.apache.commons.collections.bag.TreeBag;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections.bag.AbstractMapBag: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(java.util.Comparator)
    {
        java.util.TreeMap $r1;
        java.util.Comparator r2;
        org.apache.commons.collections.bag.TreeBag r0;

        r0 := @this: org.apache.commons.collections.bag.TreeBag;

        r2 := @parameter0: java.util.Comparator;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>(java.util.Comparator)>(r2);

        specialinvoke r0.<org.apache.commons.collections.bag.AbstractMapBag: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.commons.collections.bag.TreeBag r0;
        java.util.Collection r1;

        r0 := @this: org.apache.commons.collections.bag.TreeBag;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.apache.commons.collections.bag.TreeBag: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections.bag.TreeBag: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.lang.Object first()
    {
        org.apache.commons.collections.bag.TreeBag r0;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.util.SortedMap $r2;

        r0 := @this: org.apache.commons.collections.bag.TreeBag;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bag.TreeBag: java.util.Map getMap()>();

        $r2 = (java.util.SortedMap) $r1;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object firstKey()>();

        return $r3;
    }

    public java.lang.Object last()
    {
        org.apache.commons.collections.bag.TreeBag r0;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.util.SortedMap $r2;

        r0 := @this: org.apache.commons.collections.bag.TreeBag;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bag.TreeBag: java.util.Map getMap()>();

        $r2 = (java.util.SortedMap) $r1;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object lastKey()>();

        return $r3;
    }

    public java.util.Comparator comparator()
    {
        org.apache.commons.collections.bag.TreeBag r0;
        java.util.Map $r1;
        java.util.Comparator $r3;
        java.util.SortedMap $r2;

        r0 := @this: org.apache.commons.collections.bag.TreeBag;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bag.TreeBag: java.util.Map getMap()>();

        $r2 = (java.util.SortedMap) $r1;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.util.Comparator comparator()>();

        return $r3;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        java.util.Comparator $r2;
        org.apache.commons.collections.bag.TreeBag r1;

        r1 := @this: org.apache.commons.collections.bag.TreeBag;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = virtualinvoke r1.<org.apache.commons.collections.bag.TreeBag: java.util.Comparator comparator()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        specialinvoke r1.<org.apache.commons.collections.bag.AbstractMapBag: void doWriteObject(java.io.ObjectOutputStream)>(r0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.TreeMap $r4;
        org.apache.commons.collections.bag.TreeBag r3;
        java.io.ObjectInputStream r0;
        java.lang.Object $r1;
        java.util.Comparator r2;

        r3 := @this: org.apache.commons.collections.bag.TreeBag;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r1 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = (java.util.Comparator) $r1;

        $r4 = new java.util.TreeMap;

        specialinvoke $r4.<java.util.TreeMap: void <init>(java.util.Comparator)>(r2);

        specialinvoke r3.<org.apache.commons.collections.bag.AbstractMapBag: void doReadObject(java.util.Map,java.io.ObjectInputStream)>($r4, r0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.bag.TreeBag: long serialVersionUID> = -7740146511091606676L;

        return;
    }
}
