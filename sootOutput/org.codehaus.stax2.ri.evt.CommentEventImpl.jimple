public class org.codehaus.stax2.ri.evt.CommentEventImpl extends org.codehaus.stax2.ri.evt.BaseEventImpl implements javax.xml.stream.events.Comment
{
    final java.lang.String mContent;

    public void <init>(javax.xml.stream.Location, java.lang.String)
    {
        java.lang.String r2;
        org.codehaus.stax2.ri.evt.CommentEventImpl r0;
        javax.xml.stream.Location r1;

        r0 := @this: org.codehaus.stax2.ri.evt.CommentEventImpl;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.stax2.ri.evt.BaseEventImpl: void <init>(javax.xml.stream.Location)>(r1);

        r0.<org.codehaus.stax2.ri.evt.CommentEventImpl: java.lang.String mContent> = r2;

        return;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        org.codehaus.stax2.ri.evt.CommentEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.CommentEventImpl;

        $r1 = r0.<org.codehaus.stax2.ri.evt.CommentEventImpl: java.lang.String mContent>;

        return $r1;
    }

    public int getEventType()
    {
        org.codehaus.stax2.ri.evt.CommentEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.CommentEventImpl;

        return 5;
    }

    public void writeAsEncodedUnicode(java.io.Writer) throws javax.xml.stream.XMLStreamException
    {
        java.io.Writer r0;
        java.io.IOException $r3;
        java.lang.String $r2;
        org.codehaus.stax2.ri.evt.CommentEventImpl r1;

        r1 := @this: org.codehaus.stax2.ri.evt.CommentEventImpl;

        r0 := @parameter0: java.io.Writer;

     label1:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("<!--");

        $r2 = r1.<org.codehaus.stax2.ri.evt.CommentEventImpl: java.lang.String mContent>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r2);

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("-->");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<org.codehaus.stax2.ri.evt.CommentEventImpl: void throwFromIOE(java.io.IOException)>($r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeUsing(org.codehaus.stax2.XMLStreamWriter2) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String $r2;
        org.codehaus.stax2.XMLStreamWriter2 r0;
        org.codehaus.stax2.ri.evt.CommentEventImpl r1;

        r1 := @this: org.codehaus.stax2.ri.evt.CommentEventImpl;

        r0 := @parameter0: org.codehaus.stax2.XMLStreamWriter2;

        $r2 = r1.<org.codehaus.stax2.ri.evt.CommentEventImpl: java.lang.String mContent>;

        interfaceinvoke r0.<org.codehaus.stax2.XMLStreamWriter2: void writeComment(java.lang.String)>($r2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        javax.xml.stream.events.Comment r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        org.codehaus.stax2.ri.evt.CommentEventImpl r1;
        boolean $z0, $z1;

        r1 := @this: org.codehaus.stax2.ri.evt.CommentEventImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        $z0 = r0 instanceof javax.xml.stream.events.Comment;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (javax.xml.stream.events.Comment) r0;

        $r3 = r1.<org.codehaus.stax2.ri.evt.CommentEventImpl: java.lang.String mContent>;

        $r4 = interfaceinvoke r2.<javax.xml.stream.events.Comment: java.lang.String getText()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.codehaus.stax2.ri.evt.CommentEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.CommentEventImpl;

        $r1 = r0.<org.codehaus.stax2.ri.evt.CommentEventImpl: java.lang.String mContent>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
}
