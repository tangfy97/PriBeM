public class com.hp.hpl.jena.assembler.BadObjectException extends com.hp.hpl.jena.assembler.exceptions.AssemblerException
{
    protected final com.hp.hpl.jena.rdf.model.RDFNode object;

    public void <init>(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Statement r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        com.hp.hpl.jena.assembler.BadObjectException r0;

        r0 := @this: com.hp.hpl.jena.assembler.BadObjectException;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.BadObjectException: java.lang.String makeMessage(com.hp.hpl.jena.rdf.model.Statement)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>($r2, $r3);

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        r0.<com.hp.hpl.jena.assembler.BadObjectException: com.hp.hpl.jena.rdf.model.RDFNode object> = $r4;

        return;
    }

    private static java.lang.String makeMessage(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.Statement r0;
        com.hp.hpl.jena.rdf.model.Property $r10;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r12, $r13;
        java.lang.String $r4, $r7, $r11, $r14;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the ");

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.BadObjectException: java.lang.String typeOf(com.hp.hpl.jena.rdf.model.RDFNode)>($r1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = staticinvoke <com.hp.hpl.jena.assembler.BadObjectException: java.lang.String nice(com.hp.hpl.jena.rdf.model.RDFNode)>($r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unsuitable as the object of a ");

        $r10 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r11 = staticinvoke <com.hp.hpl.jena.assembler.BadObjectException: java.lang.String nice(com.hp.hpl.jena.rdf.model.Resource)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" statement");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    private static java.lang.String typeOf(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r1 = "bnode";

        goto label3;

     label1:
        $z1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isLiteral()>();

        if $z1 == 0 goto label2;

        $r1 = "literal";

        goto label3;

     label2:
        $r1 = "resource";

     label3:
        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode getObject()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.assembler.BadObjectException r0;

        r0 := @this: com.hp.hpl.jena.assembler.BadObjectException;

        $r1 = r0.<com.hp.hpl.jena.assembler.BadObjectException: com.hp.hpl.jena.rdf.model.RDFNode object>;

        return $r1;
    }
}
