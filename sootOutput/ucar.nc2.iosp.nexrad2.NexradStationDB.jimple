public class ucar.nc2.iosp.nexrad2.NexradStationDB extends java.lang.Object
{
    private static boolean showStations;
    private static java.util.Map stationTableHash;
    private static java.util.Map stationTableHash1;

    public void <init>()
    {
        ucar.nc2.iosp.nexrad2.NexradStationDB r0;

        r0 := @this: ucar.nc2.iosp.nexrad2.NexradStationDB;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized void init() throws java.io.IOException
    {
        java.util.Map $r0;

        $r0 = <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash>;

        if $r0 != null goto label1;

        staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: void readStationTableXML()>();

     label1:
        return;
    }

    public static ucar.nc2.iosp.nexrad2.NexradStationDB$Station get(java.lang.String)
    {
        java.util.Map $r1;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r3;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (ucar.nc2.iosp.nexrad2.NexradStationDB$Station) $r2;

        return $r3;
    }

    public static ucar.nc2.iosp.nexrad2.NexradStationDB$Station getByIdNumber(java.lang.String)
    {
        java.util.Map $r1;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r3;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash1>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (ucar.nc2.iosp.nexrad2.NexradStationDB$Station) $r2;

        return $r3;
    }

    private static void readStationTableXML() throws java.io.IOException
    {
        org.jdom.Document $r6;
        org.jdom.JDOMException $r39;
        java.util.Map $r32, $r33;
        boolean $z0;
        java.util.List $r8;
        java.lang.StringBuilder $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r34, $r36, $r37;
        java.lang.ClassLoader $r3;
        org.jdom.input.SAXBuilder $r5;
        java.util.HashMap $r0, $r1;
        int $i0, i1;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r19;
        java.lang.String $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r23, $r30, $r31, $r38, $r41;
        double $d0, $d1, $d2;
        java.io.PrintStream $r35;
        java.io.IOException $r40;
        java.lang.Class $r2;
        java.lang.Object $r9;
        org.jdom.Element $r7, r10;
        java.io.InputStream $r4;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash1> = $r1;

        $r2 = class "Lucar/nc2/iosp/nexrad2/Level2VolumeScan;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = virtualinvoke $r3.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("resources/nj22/tables/nexradstns.xml");

        $r5 = new org.jdom.input.SAXBuilder;

        specialinvoke $r5.<org.jdom.input.SAXBuilder: void <init>()>();

     label1:
        $r6 = virtualinvoke $r5.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>($r4);

     label2:
        goto label4;

     label3:
        $r39 := @caughtexception;

        $r40 = new java.io.IOException;

        $r41 = virtualinvoke $r39.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r40.<java.io.IOException: void <init>(java.lang.String)>($r41);

        throw $r40;

     label4:
        $r7 = virtualinvoke $r6.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r8 = virtualinvoke $r7.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("station");

        i1 = 0;

     label5:
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i1 >= $i0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r10 = (org.jdom.Element) $r9;

        $r11 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("idn");

        $r12 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        $r13 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r14 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("st");

        $r15 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("co");

        $r16 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("lat");

        $r17 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("lon");

        $r18 = virtualinvoke r10.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("elev");

        $r19 = new ucar.nc2.iosp.nexrad2.NexradStationDB$Station;

        specialinvoke $r19.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: void <init>()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("K");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String id> = $r23;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String name> = $r30;

        $d0 = staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: double parseDegree(java.lang.String)>($r16);

        $r19.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lat> = $d0;

        $d1 = staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: double parseDegree(java.lang.String)>($r17);

        $r19.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lon> = $d1;

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r18);

        $r19.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double elev> = $d2;

        $r32 = <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash>;

        $r31 = $r19.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String id>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r19);

        $r33 = <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash1>;

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r19);

        $z0 = <ucar.nc2.iosp.nexrad2.NexradStationDB: boolean showStations>;

        if $z0 == 0 goto label6;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" station= ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label6:
        i1 = i1 + 1;

        goto label5;

     label7:
        return;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    private static double parseDegree(java.lang.String)
    {
        byte $b0;
        java.util.StringTokenizer $r6;
        int $i1;
        java.lang.String r1, $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.lang.NumberFormatException $r5;

        r1 := @parameter0: java.lang.String;

        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ":");

        $r2 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r3 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $b0 = $d0 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label3;

        $d7 = $d1 / 60.0;

        $d9 = $d0 - $d7;

        $d8 = $d2 / 3600.0;

        $d10 = $d9 - $d8;

     label2:
        return $d10;

     label3:
        $d3 = $d1 / 60.0;

        $d5 = $d0 + $d3;

        $d4 = $d2 / 3600.0;

        $d6 = $d5 + $d4;

     label4:
        return $d6;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.NumberFormatException: void printStackTrace()>();

        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private static void readStationTable() throws java.io.IOException
    {
        java.util.Map $r28;
        boolean $z0, $z1;
        java.util.List $r4;
        java.lang.StringBuilder $r10, $r12, $r16, $r17, $r19, $r31, $r32, $r36, $r37, $r38;
        java.lang.ClassLoader $r2;
        java.lang.Double $r22, $r24, $r26;
        java.util.HashMap $r34;
        int $i1;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r35;
        java.lang.String $r13, $r20, $r27, $r33;
        ucar.nc2.util.TableParser$Record r7;
        double $d0, $d1, $d2, $d3, $d4;
        java.io.PrintStream $r30;
        java.util.Iterator $r5;
        java.lang.Class $r1;
        java.lang.Object $r6, $r11, $r15, $r18, $r21, $r23, $r25;
        java.io.InputStream $r3;

        $r34 = new java.util.HashMap;

        specialinvoke $r34.<java.util.HashMap: void <init>()>();

        <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash> = $r34;

        $r1 = class "Lucar/nc2/iosp/nexrad2/Level2VolumeScan;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("resources/nj22/tables/nexrad.tbl");

        $i1 = (int) 50000;

        $r4 = staticinvoke <ucar.nc2.util.TableParser: java.util.List readTable(java.io.InputStream,java.lang.String,int)>($r3, "3,15,46, 54,60d,67d,73d", $i1);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.util.TableParser$Record) $r6;

        $r35 = new ucar.nc2.iosp.nexrad2.NexradStationDB$Station;

        specialinvoke $r35.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: void <init>()>();

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("K");

        $r11 = virtualinvoke r7.<ucar.nc2.util.TableParser$Record: java.lang.Object get(int)>(0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String id> = $r13;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r7.<ucar.nc2.util.TableParser$Record: java.lang.Object get(int)>(2);

        $r16 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke r7.<ucar.nc2.util.TableParser$Record: java.lang.Object get(int)>(3);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String name> = $r20;

        $r21 = virtualinvoke r7.<ucar.nc2.util.TableParser$Record: java.lang.Object get(int)>(4);

        $r22 = (java.lang.Double) $r21;

        $d0 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        $d1 = $d0 * 0.01;

        $r35.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lat> = $d1;

        $r23 = virtualinvoke r7.<ucar.nc2.util.TableParser$Record: java.lang.Object get(int)>(5);

        $r24 = (java.lang.Double) $r23;

        $d2 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        $d3 = $d2 * 0.01;

        $r35.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lon> = $d3;

        $r25 = virtualinvoke r7.<ucar.nc2.util.TableParser$Record: java.lang.Object get(int)>(6);

        $r26 = (java.lang.Double) $r25;

        $d4 = virtualinvoke $r26.<java.lang.Double: double doubleValue()>();

        $r35.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double elev> = $d4;

        $r28 = <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash>;

        $r27 = $r35.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String id>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r35);

        $z1 = <ucar.nc2.iosp.nexrad2.NexradStationDB: boolean showStations>;

        if $z1 == 0 goto label2;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" station= ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label2:
        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.iosp.nexrad2.NexradStationDB: boolean showStations> = 0;

        <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash> = null;

        <ucar.nc2.iosp.nexrad2.NexradStationDB: java.util.Map stationTableHash1> = null;

        return;
    }
}
