class ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D extends java.lang.Object implements ucar.nc2.ProxyReader
{
    final ucar.nc2.ft.fmrc.FmrcDataset this$0;

    private void <init>(ucar.nc2.ft.fmrc.FmrcDataset)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r1;
        ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcDataset;

        r0.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D: ucar.nc2.ft.fmrc.FmrcDataset this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D r0;
        ucar.ma2.InvalidRangeException $r5;
        ucar.nc2.util.CancelTask r3;
        ucar.ma2.Section $r2;
        ucar.nc2.Variable r1;
        java.io.IOException $r6;
        ucar.ma2.Array $r4;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D;

        r1 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

     label1:
        $r2 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.Section getShapeAsSection()>();

        $r4 = virtualinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D: ucar.ma2.Array reallyRead(ucar.nc2.Variable,ucar.ma2.Section,ucar.nc2.util.CancelTask)>(r1, $r2, r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid r2;
        ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D r13;
        ucar.nc2.util.CancelTask r28;
        int[] $r5, $r18;
        boolean $z0, $z1, $z2;
        ucar.ma2.Range $r24, $r25;
        ucar.nc2.dataset.VariableDS $r19, $r23;
        ucar.ma2.DataType r3, $r29;
        java.util.List $r7, $r10;
        java.lang.Throwable $r26;
        ucar.ma2.Section r4, $r17;
        java.util.HashMap $r11;
        long $l3, $l5, $l6, $l7;
        int $i0, $i1, $i2, $i4, i8;
        ucar.nc2.Variable r0;
        java.lang.String $r20;
        ucar.nc2.ft.fmrc.TimeInventory$Instance $r16;
        ucar.nc2.ft.fmrc.FmrcDataset $r14, $r21, $r27;
        ucar.ma2.Array $r6, $r22, r30;
        ucar.ma2.Range$Iterator $r12, $r15;
        java.lang.Object $r1, $r8, $r9;

        r13 := @this: ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D;

        r0 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: ucar.ma2.Section;

        r28 := @parameter2: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r2 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid) $r1;

        $z0 = r0 instanceof ucar.nc2.dataset.VariableDS;

        if $z0 == 0 goto label01;

        $r23 = (ucar.nc2.dataset.VariableDS) r0;

        $r29 = virtualinvoke $r23.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getOriginalDataType()>();

        goto label02;

     label01:
        $r29 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

     label02:
        r3 = $r29;

        $r5 = virtualinvoke r4.<ucar.ma2.Section: int[] getShape()>();

        $r6 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r29, $r5);

        i8 = 0;

        $r7 = virtualinvoke r4.<ucar.ma2.Section: java.util.List getRanges()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r24 = (ucar.ma2.Range) $r8;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1);

        $r25 = (ucar.ma2.Range) $r9;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r10 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(2, $i0);

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

     label03:
        $r12 = virtualinvoke $r24.<ucar.ma2.Range: ucar.ma2.Range$Iterator getIterator()>();

     label04:
        $z2 = virtualinvoke $r12.<ucar.ma2.Range$Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $i1 = virtualinvoke $r12.<ucar.ma2.Range$Iterator: int next()>();

        $r15 = virtualinvoke $r25.<ucar.ma2.Range: ucar.ma2.Range$Iterator getIterator()>();

     label05:
        $z1 = virtualinvoke $r15.<ucar.ma2.Range$Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $i2 = virtualinvoke $r15.<ucar.ma2.Range$Iterator: int next()>();

        r30 = null;

        $r16 = virtualinvoke r2.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: ucar.nc2.ft.fmrc.TimeInventory$Instance getInstance(int,int)>($i1, $i2);

        if $r16 == null goto label06;

        $r21 = r13.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D: ucar.nc2.ft.fmrc.FmrcDataset this$0>;

        $r20 = r2.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: java.lang.String name>;

        $r22 = staticinvoke <ucar.nc2.ft.fmrc.FmrcDataset: ucar.ma2.Array access$200(ucar.nc2.ft.fmrc.FmrcDataset,ucar.nc2.ft.fmrc.TimeInventory$Instance,java.lang.String,java.util.List,java.util.HashMap)>($r21, $r16, $r20, $r10, $r11);

        r30 = staticinvoke <ucar.ma2.MAMath: ucar.ma2.Array convert(ucar.ma2.Array,ucar.ma2.DataType)>($r22, r3);

     label06:
        if r30 != null goto label07;

        $r17 = new ucar.ma2.Section;

        specialinvoke $r17.<ucar.ma2.Section: void <init>(java.util.List)>($r10);

        $r18 = virtualinvoke $r17.<ucar.ma2.Section: int[] getShape()>();

        $r19 = (ucar.nc2.dataset.VariableDS) r0;

        r30 = virtualinvoke $r19.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array getMissingDataArray(int[])>($r18);

     label07:
        $l3 = virtualinvoke r30.<ucar.ma2.Array: long getSize()>();

        $i4 = (int) $l3;

        staticinvoke <ucar.ma2.Array: void arraycopy(ucar.ma2.Array,int,ucar.ma2.Array,int,int)>(r30, 0, $r6, i8, $i4);

        $l5 = (long) i8;

        $l6 = virtualinvoke r30.<ucar.ma2.Array: long getSize()>();

        $l7 = $l5 + $l6;

        i8 = (int) $l7;

        goto label05;

     label08:
        goto label04;

     label09:
        $r14 = r13.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D: ucar.nc2.ft.fmrc.FmrcDataset this$0>;

        staticinvoke <ucar.nc2.ft.fmrc.FmrcDataset: void access$300(ucar.nc2.ft.fmrc.FmrcDataset,java.util.HashMap)>($r14, $r11);

        return $r6;

     label10:
        $r26 := @caughtexception;

     label11:
        $r27 = r13.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D: ucar.nc2.ft.fmrc.FmrcDataset this$0>;

        staticinvoke <ucar.nc2.ft.fmrc.FmrcDataset: void access$300(ucar.nc2.ft.fmrc.FmrcDataset,java.util.HashMap)>($r27, $r11);

        throw $r26;

        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void <init>(ucar.nc2.ft.fmrc.FmrcDataset, ucar.nc2.ft.fmrc.FmrcDataset$1)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r1;
        ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D r0;
        ucar.nc2.ft.fmrc.FmrcDataset$1 r2;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcDataset;

        r2 := @parameter1: ucar.nc2.ft.fmrc.FmrcDataset$1;

        specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D: void <init>(ucar.nc2.ft.fmrc.FmrcDataset)>(r1);

        return;
    }
}
