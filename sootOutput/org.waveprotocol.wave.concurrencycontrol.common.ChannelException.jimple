public class org.waveprotocol.wave.concurrencycontrol.common.ChannelException extends java.lang.Exception
{
    private final org.waveprotocol.wave.concurrencycontrol.common.Recoverable isRecoverable;
    private final org.waveprotocol.wave.model.id.WaveId waveId;
    private final org.waveprotocol.wave.model.id.WaveletId waveletId;
    private final org.waveprotocol.wave.concurrencycontrol.common.ResponseCode responseCode;

    public void <init>(org.waveprotocol.wave.concurrencycontrol.common.ResponseCode, java.lang.String, java.lang.Throwable, org.waveprotocol.wave.concurrencycontrol.common.Recoverable, org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId)
    {
        java.lang.Throwable r2;
        org.waveprotocol.wave.concurrencycontrol.common.Recoverable r3;
        org.waveprotocol.wave.model.id.WaveId r4;
        org.waveprotocol.wave.concurrencycontrol.common.ResponseCode r6;
        org.waveprotocol.wave.model.id.WaveletId r5;
        java.lang.String r1;
        org.waveprotocol.wave.concurrencycontrol.common.ChannelException r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.ChannelException;

        r6 := @parameter0: org.waveprotocol.wave.concurrencycontrol.common.ResponseCode;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        r3 := @parameter3: org.waveprotocol.wave.concurrencycontrol.common.Recoverable;

        r4 := @parameter4: org.waveprotocol.wave.model.id.WaveId;

        r5 := @parameter5: org.waveprotocol.wave.model.id.WaveletId;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.concurrencycontrol.common.Recoverable isRecoverable> = r3;

        r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.model.id.WaveId waveId> = r4;

        r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.model.id.WaveletId waveletId> = r5;

        r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.concurrencycontrol.common.ResponseCode responseCode> = r6;

        return;
    }

    public void <init>(java.lang.String, org.waveprotocol.wave.concurrencycontrol.common.Recoverable)
    {
        org.waveprotocol.wave.concurrencycontrol.common.Recoverable r2;
        org.waveprotocol.wave.concurrencycontrol.common.ResponseCode $r3;
        java.lang.String r1;
        org.waveprotocol.wave.concurrencycontrol.common.ChannelException r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.ChannelException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.concurrencycontrol.common.Recoverable;

        $r3 = <org.waveprotocol.wave.concurrencycontrol.common.ResponseCode: org.waveprotocol.wave.concurrencycontrol.common.ResponseCode INTERNAL_ERROR>;

        specialinvoke r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: void <init>(org.waveprotocol.wave.concurrencycontrol.common.ResponseCode,java.lang.String,java.lang.Throwable,org.waveprotocol.wave.concurrencycontrol.common.Recoverable,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>($r3, r1, null, r2, null, null);

        return;
    }

    public org.waveprotocol.wave.concurrencycontrol.common.Recoverable getRecoverable()
    {
        org.waveprotocol.wave.concurrencycontrol.common.Recoverable $r1;
        org.waveprotocol.wave.concurrencycontrol.common.ChannelException r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.ChannelException;

        $r1 = r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.concurrencycontrol.common.Recoverable isRecoverable>;

        return $r1;
    }

    public org.waveprotocol.wave.model.id.WaveId getWaveId()
    {
        org.waveprotocol.wave.model.id.WaveId $r1;
        org.waveprotocol.wave.concurrencycontrol.common.ChannelException r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.ChannelException;

        $r1 = r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.model.id.WaveId waveId>;

        return $r1;
    }

    public org.waveprotocol.wave.model.id.WaveletId getWaveletId()
    {
        org.waveprotocol.wave.model.id.WaveletId $r1;
        org.waveprotocol.wave.concurrencycontrol.common.ChannelException r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.ChannelException;

        $r1 = r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        return $r1;
    }

    public org.waveprotocol.wave.concurrencycontrol.common.ResponseCode getResponseCode()
    {
        org.waveprotocol.wave.concurrencycontrol.common.ResponseCode $r1;
        org.waveprotocol.wave.concurrencycontrol.common.ChannelException r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.common.ChannelException;

        $r1 = r0.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.concurrencycontrol.common.ResponseCode responseCode>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.concurrencycontrol.common.Recoverable $r11;
        org.waveprotocol.wave.model.id.WaveletId $r8;
        java.lang.String $r2, $r16;
        org.waveprotocol.wave.model.id.WaveId $r5;
        org.waveprotocol.wave.concurrencycontrol.common.ResponseCode $r14;
        org.waveprotocol.wave.concurrencycontrol.common.ChannelException r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15;

        r1 := @this: org.waveprotocol.wave.concurrencycontrol.common.ChannelException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", \nwaveId: ");

        $r5 = r1.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" waveletId: ");

        $r8 = r1.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isRecoverable: ");

        $r11 = r1.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.concurrencycontrol.common.Recoverable isRecoverable>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", responseCode: ");

        $r14 = r1.<org.waveprotocol.wave.concurrencycontrol.common.ChannelException: org.waveprotocol.wave.concurrencycontrol.common.ResponseCode responseCode>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }
}
