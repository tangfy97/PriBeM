class com.pff.PSTTable7C extends com.pff.PSTTable
{
    private final int BLOCK_SIZE;
    private java.util.List items;
    private int numberOfDataSets;
    private int cCols;
    private int TCI_bm;
    private com.pff.PSTTable$NodeInfo rowNodeInfo;
    private int TCI_1b;
    private int overrideCol;
    com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors;
    java.util.HashMap keyMap;

    protected void <init>(com.pff.PSTNodeInputStream, java.util.HashMap) throws com.pff.PSTException, java.io.IOException
    {
        com.pff.PSTTable7C r0;
        int $i1;
        java.util.HashMap r2;
        com.pff.PSTNodeInputStream r1;

        r0 := @this: com.pff.PSTTable7C;

        r1 := @parameter0: com.pff.PSTNodeInputStream;

        r2 := @parameter1: java.util.HashMap;

        $i1 = (int) -1;

        specialinvoke r0.<com.pff.PSTTable7C: void <init>(com.pff.PSTNodeInputStream,java.util.HashMap,int)>(r1, r2, $i1);

        return;
    }

    protected void <init>(com.pff.PSTNodeInputStream, java.util.HashMap, int) throws com.pff.PSTException, java.io.IOException
    {
        java.lang.Integer $r29, $r30;
        byte $b0;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r40;
        com.pff.PSTNodeInputStream r1;
        long $l2, $l3, $l5, $l6, $l7, $l8, $l10, $l11, $l13, $l14, $l16, $l17, $l39, $l40, $l43, $l44;
        java.lang.String $r8, $r25;
        com.pff.PSTTable7C$ColumnDescriptor $r35, $r38;
        com.pff.PSTTable$NodeInfo $r3, $r5, $r6, $r26, $r27;
        com.pff.PSTException $r37;
        com.pff.PSTTable7C r0;
        java.util.HashMap r2, $r28, $r39;
        int $i1, $i4, $i9, $i12, i15, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i41, $i42, $i45, $i46, $i47, $i48, $i49, i50, $i51, i52, i53, i54, i55, $i56, i57, i58, i59, i60, i61, $i63, $i64, $i66;
        com.pff.PSTTable7C$ColumnDescriptor[] $r31, $r33, $r34;

        r0 := @this: com.pff.PSTTable7C;

        r1 := @parameter0: com.pff.PSTNodeInputStream;

        r2 := @parameter1: java.util.HashMap;

        i50 := @parameter2: int;

        specialinvoke r0.<com.pff.PSTTable: void <init>(com.pff.PSTNodeInputStream,java.util.HashMap)>(r1, r2);

        r0.<com.pff.PSTTable7C: int BLOCK_SIZE> = 8176;

        r0.<com.pff.PSTTable7C: int BLOCK_SIZE> = 8176;

        r0.<com.pff.PSTTable7C: java.util.List items> = null;

        r0.<com.pff.PSTTable7C: int numberOfDataSets> = 0;

        r0.<com.pff.PSTTable7C: int cCols> = 0;

        r0.<com.pff.PSTTable7C: int TCI_bm> = 0;

        r0.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo> = null;

        r0.<com.pff.PSTTable7C: int TCI_1b> = 0;

        $i63 = (int) -1;

        r0.<com.pff.PSTTable7C: int overrideCol> = $i63;

        r0.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors> = null;

        r0.<com.pff.PSTTable7C: java.util.HashMap keyMap> = null;

        $b0 = r0.<com.pff.PSTTable7C: byte tableTypeByte>;

        $i64 = (int) $b0;

        if $i64 == 124 goto label1;

        $r37 = new com.pff.PSTException;

        specialinvoke $r37.<com.pff.PSTException: void <init>(java.lang.String)>("unable to create PSTTable7C, table does not appear to be a 7c!");

        throw $r37;

     label1:
        $i1 = r0.<com.pff.PSTTable7C: int hidUserRoot>;

        $r3 = virtualinvoke r0.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo getNodeInfo(int)>($i1);

        $l2 = (long) 1;

        $l3 = virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l2, 1);

        $i4 = (int) $l3;

        r0.<com.pff.PSTTable7C: int cCols> = $i4;

        $l5 = (long) 2;

        virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l5, 2);

        $l6 = (long) 4;

        virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l6, 2);

        $l7 = (long) 6;

        $l8 = virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l7, 2);

        $i9 = (int) $l8;

        r0.<com.pff.PSTTable7C: int TCI_1b> = $i9;

        $l10 = (long) 8;

        $l11 = virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l10, 2);

        $i12 = (int) $l11;

        r0.<com.pff.PSTTable7C: int TCI_bm> = $i12;

        $l13 = (long) 10;

        $l14 = virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l13, 4);

        i15 = (int) $l14;

        $l16 = (long) 14;

        $l17 = virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l16, 4);

        i18 = (int) $l17;

        i52 = 22;

        $i19 = r0.<com.pff.PSTTable7C: int cCols>;

        if $i19 == 0 goto label4;

        $i48 = r0.<com.pff.PSTTable7C: int cCols>;

        $r31 = newarray (com.pff.PSTTable7C$ColumnDescriptor)[$i48];

        r0.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors> = $r31;

        i53 = 0;

     label2:
        $i49 = r0.<com.pff.PSTTable7C: int cCols>;

        if i53 >= $i49 goto label4;

        $r33 = r0.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r38 = new com.pff.PSTTable7C$ColumnDescriptor;

        specialinvoke $r38.<com.pff.PSTTable7C$ColumnDescriptor: void <init>(com.pff.PSTTable7C,com.pff.PSTTable$NodeInfo,int)>(r0, $r3, i52);

        $r33[i53] = $r38;

        $r34 = r0.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r35 = $r34[i53];

        $i51 = $r35.<com.pff.PSTTable7C$ColumnDescriptor: int id>;

        if $i51 != i50 goto label3;

        r0.<com.pff.PSTTable7C: int overrideCol> = i53;

     label3:
        i52 = i52 + 8;

        i53 = i53 + 1;

        goto label2;

     label4:
        $i20 = r0.<com.pff.PSTTable7C: int overrideCol>;

        $i66 = (int) -1;

        if $i20 <= $i66 goto label5;

        $i46 = r0.<com.pff.PSTTable7C: int overrideCol>;

        $i47 = $i46 + 1;

        r0.<com.pff.PSTTable7C: int cCols> = $i47;

     label5:
        $r39 = new java.util.HashMap;

        specialinvoke $r39.<java.util.HashMap: void <init>()>();

        r0.<com.pff.PSTTable7C: java.util.HashMap keyMap> = $r39;

        $i21 = r0.<com.pff.PSTTable7C: int hidRoot>;

        $r5 = virtualinvoke r0.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo getNodeInfo(int)>($i21);

        $i22 = virtualinvoke $r5.<com.pff.PSTTable$NodeInfo: int length()>();

        $i24 = r0.<com.pff.PSTTable7C: int sizeOfItemKey>;

        $i23 = r0.<com.pff.PSTTable7C: int sizeOfItemValue>;

        $i25 = $i24 + $i23;

        $i26 = $i22 / $i25;

        r0.<com.pff.PSTTable7C: int numberOfKeys> = $i26;

        i54 = 0;

        i55 = 0;

     label6:
        $i56 = r0.<com.pff.PSTTable7C: int numberOfKeys>;

        if i55 >= $i56 goto label7;

        $l39 = (long) i54;

        $i38 = r0.<com.pff.PSTTable7C: int sizeOfItemKey>;

        $l40 = virtualinvoke $r5.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l39, $i38);

        i57 = (int) $l40;

        $i41 = r0.<com.pff.PSTTable7C: int sizeOfItemKey>;

        i58 = i54 + $i41;

        $l43 = (long) i58;

        $i42 = r0.<com.pff.PSTTable7C: int sizeOfItemValue>;

        $l44 = virtualinvoke $r5.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l43, $i42);

        i59 = (int) $l44;

        $i45 = r0.<com.pff.PSTTable7C: int sizeOfItemValue>;

        i54 = i58 + $i45;

        $r28 = r0.<com.pff.PSTTable7C: java.util.HashMap keyMap>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i57);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i59);

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30);

        i55 = i55 + 1;

        goto label6;

     label7:
        $r6 = virtualinvoke r0.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo getNodeInfo(int)>(i18);

        r0.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo> = $r6;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.pff.PSTTable7C: java.lang.String description>;

        $r9 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of keys: ");

        $i27 = r0.<com.pff.PSTTable7C: int numberOfKeys>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of columns: ");

        $i28 = r0.<com.pff.PSTTable7C: int cCols>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Row Size: ");

        $i29 = r0.<com.pff.PSTTable7C: int TCI_bm>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hidRowIndex: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hnidRows: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.pff.PSTTable7C: java.lang.String description> = $r25;

        $r26 = r0.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i30 = virtualinvoke $r26.<com.pff.PSTTable$NodeInfo: int length()>();

        i60 = $i30 / 8176;

        $i31 = r0.<com.pff.PSTTable7C: int TCI_bm>;

        i61 = 8176 / $i31;

        $i32 = i60 * i61;

        $r27 = r0.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i33 = virtualinvoke $r27.<com.pff.PSTTable$NodeInfo: int length()>();

        $i35 = $i33 % 8176;

        $i34 = r0.<com.pff.PSTTable7C: int TCI_bm>;

        $i36 = $i35 / $i34;

        $i37 = $i32 + $i36;

        r0.<com.pff.PSTTable7C: int numberOfDataSets> = $i37;

        return;
    }

    java.util.List getItems() throws com.pff.PSTException, java.io.IOException
    {
        com.pff.PSTTable7C r0;
        java.util.List $r1, $r2, $r3;
        int $i1, $i3;

        r0 := @this: com.pff.PSTTable7C;

        $r1 = r0.<com.pff.PSTTable7C: java.util.List items>;

        if $r1 != null goto label1;

        $i1 = (int) -1;

        $i3 = (int) -1;

        $r3 = virtualinvoke r0.<com.pff.PSTTable7C: java.util.List getItems(int,int)>($i1, $i3);

        r0.<com.pff.PSTTable7C: java.util.List items> = $r3;

     label1:
        $r2 = r0.<com.pff.PSTTable7C: java.util.List items>;

        return $r2;
    }

    java.util.List getItems(int, int) throws com.pff.PSTException, java.io.IOException
    {
        byte[] $r19, $r26, $r44, $r46, $r48, $r53;
        java.lang.Integer $r61, $r62;
        byte $b31, $b77;
        com.pff.PSTFile $r7;
        com.pff.PSTNodeInputStream $r6, $r24, $r27, $r45, $r47, $r52, $r55, $r58;
        com.pff.PSTTable7CItem $r65, $r66;
        long $l40, $l43, $l44, $l49, $l50, $l55, $l56, $l67, $l75, $l76, $l93, $l94, $l95;
        com.pff.PSTTable$NodeInfo $r2, $r3, $r5, $r20, $r21, $r25, $r30, $r33, $r36, $r43, $r49, $r50, $r51, $r54, $r56, $r57, $r59;
        int $i0, i1, $i2, i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, $i27, i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i41, $i42, $i45, $i46, $i47, $i48, $i51, $i52, $i53, $i54, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i78, $i79, $i80, i81, i82, i83, i84, i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i96, $i97, i98, $i99, $i100, $i101, $i103, $i104, $i106, $i108, $i109, $i111;
        java.util.ArrayList $r63;
        com.pff.PSTTable7C$ColumnDescriptor $r9, $r11, $r14, $r16, $r18, $r23, $r29, $r32, $r35, $r38, $r40, $r42;
        com.pff.PSTTable7C r1;
        java.util.HashMap $r64;
        com.pff.PSTTable7C$ColumnDescriptor[] $r8, $r10, $r13, $r15, $r17, $r22, $r28, $r31, $r34, $r37, $r39, $r41;

        r1 := @this: com.pff.PSTTable7C;

        i81 := @parameter0: int;

        i82 := @parameter1: int;

        $r63 = new java.util.ArrayList;

        specialinvoke $r63.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i0 = virtualinvoke $r2.<com.pff.PSTTable$NodeInfo: int length()>();

        i1 = $i0 / 8176;

        $i2 = r1.<com.pff.PSTTable7C: int TCI_bm>;

        i3 = 8176 / $i2;

        $i4 = r1.<com.pff.PSTTable7C: int TCI_bm>;

        $i5 = i3 * $i4;

        i6 = 8176 - $i5;

        $i7 = i1 * i3;

        $r3 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i8 = virtualinvoke $r3.<com.pff.PSTTable$NodeInfo: int length()>();

        $i10 = $i8 % 8176;

        $i9 = r1.<com.pff.PSTTable7C: int TCI_bm>;

        $i11 = $i10 / $i9;

        $i12 = $i7 + $i11;

        r1.<com.pff.PSTTable7C: int numberOfDataSets> = $i12;

        $i103 = (int) -1;

        if i81 != $i103 goto label01;

        i82 = r1.<com.pff.PSTTable7C: int numberOfDataSets>;

        i81 = 0;

     label01:
        $i13 = i81 / i3;

        $i17 = $i13 * 8176;

        $i15 = i81 % i3;

        $i14 = r1.<com.pff.PSTTable7C: int TCI_bm>;

        $i16 = $i15 * $i14;

        i83 = $i17 + $i16;

        $i18 = virtualinvoke r1.<com.pff.PSTTable7C: int getRowCount()>();

        $i19 = $i18 - i81;

        if i82 <= $i19 goto label02;

        $i80 = virtualinvoke r1.<com.pff.PSTTable7C: int getRowCount()>();

        i82 = $i80 - i81;

     label02:
        i84 = 0;

        i85 = 0;

     label03:
        if i85 >= i82 goto label21;

        $r64 = new java.util.HashMap;

        specialinvoke $r64.<java.util.HashMap: void <init>()>();

        $r5 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r6 = $r5.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        $r7 = virtualinvoke $r6.<com.pff.PSTNodeInputStream: com.pff.PSTFile getPSTFile()>();

        $i20 = virtualinvoke $r7.<com.pff.PSTFile: int getPSTFileType()>();

        if $i20 != 14 goto label05;

        if i83 < 8176 goto label04;

        $i78 = i83 / 8176;

        $i79 = 4 * $i78;

        i83 = i83 + $i79;

     label04:
        $r50 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i71 = $r50.<com.pff.PSTTable$NodeInfo: int startOffset>;

        $i73 = $i71 + i83;

        $i72 = r1.<com.pff.PSTTable7C: int TCI_1b>;

        $i74 = $i73 + $i72;

        $l75 = (long) $i74;

        $r51 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r52 = $r51.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        $l76 = virtualinvoke $r52.<com.pff.PSTNodeInputStream: long length()>();

        $b77 = $l75 cmp $l76;

        $i104 = (int) $b77;

        if $i104 <= 0 goto label06;

        goto label20;

     label05:
        $i23 = i83 % 8176;

        $i21 = r1.<com.pff.PSTTable7C: int TCI_bm>;

        $i22 = 8176 - $i21;

        if $i23 <= $i22 goto label06;

        i83 = i83 + i6;

        $i68 = r1.<com.pff.PSTTable7C: int TCI_bm>;

        $i69 = i83 + $i68;

        $r49 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i70 = virtualinvoke $r49.<com.pff.PSTTable$NodeInfo: int length()>();

        if $i69 <= $i70 goto label06;

        goto label20;

     label06:
        $i86 = r1.<com.pff.PSTTable7C: int cCols>;

        $i87 = $i86 + 7;

        $i88 = $i87 / 8;

        $r53 = newarray (byte)[$i88];

        $r54 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r55 = $r54.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        $r56 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i89 = $r56.<com.pff.PSTTable$NodeInfo: int startOffset>;

        $i90 = $i89 + i83;

        $i91 = r1.<com.pff.PSTTable7C: int TCI_1b>;

        $i92 = $i90 + $i91;

        $l93 = (long) $i92;

        virtualinvoke $r55.<com.pff.PSTNodeInputStream: void seek(long)>($l93);

        $r57 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r58 = $r57.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        virtualinvoke $r58.<com.pff.PSTNodeInputStream: int read(byte[])>($r53);

        $r59 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $l94 = (long) i83;

        $l95 = virtualinvoke $r59.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l94, 4);

        $i96 = (int) $l95;

        $r65 = new com.pff.PSTTable7CItem;

        specialinvoke $r65.<com.pff.PSTTable7CItem: void <init>()>();

        $i106 = (int) -1;

        $r65.<com.pff.PSTTable7CItem: int itemIndex> = $i106;

        $r65.<com.pff.PSTTable7CItem: int entryValueType> = 3;

        $r65.<com.pff.PSTTable7CItem: int entryType> = 26610;

        $r65.<com.pff.PSTTable7CItem: int entryValueReference> = $i96;

        $r65.<com.pff.PSTTable7CItem: boolean isExternalValueReference> = 1;

        $i97 = $r65.<com.pff.PSTTable7CItem: int entryType>;

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i97);

        virtualinvoke $r64.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r61, $r65);

        i98 = 0;

        $i99 = r1.<com.pff.PSTTable7C: int overrideCol>;

        $i108 = (int) -1;

        if $i99 <= $i108 goto label07;

        i98 = r1.<com.pff.PSTTable7C: int overrideCol>;

     label07:
        $i100 = r1.<com.pff.PSTTable7C: int cCols>;

        if i98 >= $i100 goto label19;

        $r8 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r9 = $r8[i98];

        $i25 = $r9.<com.pff.PSTTable7C$ColumnDescriptor: int iBit>;

        i26 = $i25 / 8;

        $r10 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r11 = $r10[i98];

        $i27 = $r11.<com.pff.PSTTable7C$ColumnDescriptor: int iBit>;

        i28 = $i27 % 8;

        $i29 = lengthof $r53;

        if i26 >= $i29 goto label18;

        $b31 = $r53[i26];

        $i30 = 1 << i28;

        $i109 = (int) $b31;

        $i32 = $i109 & $i30;

        if $i32 != 0 goto label08;

        goto label18;

     label08:
        $r66 = new com.pff.PSTTable7CItem;

        specialinvoke $r66.<com.pff.PSTTable7CItem: void <init>()>();

        $r66.<com.pff.PSTTable7CItem: int itemIndex> = i98;

        $r13 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r14 = $r13[i98];

        $i33 = $r14.<com.pff.PSTTable7C$ColumnDescriptor: int type>;

        $r66.<com.pff.PSTTable7CItem: int entryValueType> = $i33;

        $r15 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r16 = $r15[i98];

        $i34 = $r16.<com.pff.PSTTable7C$ColumnDescriptor: int id>;

        $r66.<com.pff.PSTTable7CItem: int entryType> = $i34;

        $r66.<com.pff.PSTTable7CItem: int entryValueReference> = 0;

        $r17 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r18 = $r17[i98];

        $i35 = $r18.<com.pff.PSTTable7C$ColumnDescriptor: int cbData>;

        lookupswitch($i35)
        {
            case 1: goto label09;
            case 2: goto label10;
            case 8: goto label11;
            default: goto label12;
        };

     label09:
        $r33 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r31 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r32 = $r31[i98];

        $i47 = $r32.<com.pff.PSTTable7C$ColumnDescriptor: int ibData>;

        $i48 = i83 + $i47;

        $l49 = (long) $i48;

        $l50 = virtualinvoke $r33.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l49, 1);

        $i51 = (int) $l50;

        $i52 = $i51 & 255;

        $r66.<com.pff.PSTTable7CItem: int entryValueReference> = $i52;

        $r66.<com.pff.PSTTable7CItem: boolean isExternalValueReference> = 1;

        goto label17;

     label10:
        $r30 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r28 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r29 = $r28[i98];

        $i41 = $r29.<com.pff.PSTTable7C$ColumnDescriptor: int ibData>;

        $i42 = i83 + $i41;

        $l43 = (long) $i42;

        $l44 = virtualinvoke $r30.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l43, 2);

        $i45 = (int) $l44;

        $i111 = (int) 65535;

        $i46 = $i45 & $i111;

        $r66.<com.pff.PSTTable7CItem: int entryValueReference> = $i46;

        $r66.<com.pff.PSTTable7CItem: boolean isExternalValueReference> = 1;

        goto label17;

     label11:
        $r19 = newarray (byte)[8];

        $r66.<com.pff.PSTTable7CItem: byte[] data> = $r19;

        $r20 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r24 = $r20.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        $r21 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $i36 = $r21.<com.pff.PSTTable$NodeInfo: int startOffset>;

        $i38 = $i36 + i83;

        $r22 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r23 = $r22[i98];

        $i37 = $r23.<com.pff.PSTTable7C$ColumnDescriptor: int ibData>;

        $i39 = $i38 + $i37;

        $l40 = (long) $i39;

        virtualinvoke $r24.<com.pff.PSTNodeInputStream: void seek(long)>($l40);

        $r25 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r27 = $r25.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        $r26 = $r66.<com.pff.PSTTable7CItem: byte[] data>;

        virtualinvoke $r27.<com.pff.PSTNodeInputStream: int read(byte[])>($r26);

        goto label17;

     label12:
        $r36 = r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo rowNodeInfo>;

        $r34 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r35 = $r34[i98];

        $i53 = $r35.<com.pff.PSTTable7C$ColumnDescriptor: int ibData>;

        $i54 = i83 + $i53;

        $l55 = (long) $i54;

        $l56 = virtualinvoke $r36.<com.pff.PSTTable$NodeInfo: long seekAndReadLong(long,int)>($l55, 4);

        $i57 = (int) $l56;

        $r66.<com.pff.PSTTable7CItem: int entryValueReference> = $i57;

        $r37 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r38 = $r37[i98];

        $i58 = $r38.<com.pff.PSTTable7C$ColumnDescriptor: int type>;

        if $i58 == 3 goto label13;

        $r39 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r40 = $r39[i98];

        $i59 = $r40.<com.pff.PSTTable7C$ColumnDescriptor: int type>;

        if $i59 == 4 goto label13;

        $r41 = r1.<com.pff.PSTTable7C: com.pff.PSTTable7C$ColumnDescriptor[] columnDescriptors>;

        $r42 = $r41[i98];

        $i60 = $r42.<com.pff.PSTTable7C$ColumnDescriptor: int type>;

        if $i60 != 10 goto label14;

     label13:
        $r66.<com.pff.PSTTable7CItem: boolean isExternalValueReference> = 1;

        goto label17;

     label14:
        $i61 = $r66.<com.pff.PSTTable7CItem: int entryValueReference>;

        $i62 = $i61 & 31;

        if $i62 == 0 goto label15;

        $r66.<com.pff.PSTTable7CItem: boolean isExternalValueReference> = 1;

        goto label17;

     label15:
        $i63 = $r66.<com.pff.PSTTable7CItem: int entryValueReference>;

        if $i63 != 0 goto label16;

        $r48 = newarray (byte)[0];

        $r66.<com.pff.PSTTable7CItem: byte[] data> = $r48;

        goto label17;

     label16:
        $i64 = $r66.<com.pff.PSTTable7CItem: int entryValueReference>;

        $r43 = virtualinvoke r1.<com.pff.PSTTable7C: com.pff.PSTTable$NodeInfo getNodeInfo(int)>($i64);

        $i65 = virtualinvoke $r43.<com.pff.PSTTable$NodeInfo: int length()>();

        $r44 = newarray (byte)[$i65];

        $r66.<com.pff.PSTTable7CItem: byte[] data> = $r44;

        $r45 = $r43.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        $i66 = $r43.<com.pff.PSTTable$NodeInfo: int startOffset>;

        $l67 = (long) $i66;

        virtualinvoke $r45.<com.pff.PSTNodeInputStream: void seek(long)>($l67);

        $r47 = $r43.<com.pff.PSTTable$NodeInfo: com.pff.PSTNodeInputStream in>;

        $r46 = $r66.<com.pff.PSTTable7CItem: byte[] data>;

        virtualinvoke $r47.<com.pff.PSTNodeInputStream: int read(byte[])>($r46);

     label17:
        $i101 = $r66.<com.pff.PSTTable7CItem: int entryType>;

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i101);

        virtualinvoke $r64.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, $r66);

     label18:
        i98 = i98 + 1;

        goto label07;

     label19:
        interfaceinvoke $r63.<java.util.List: void add(int,java.lang.Object)>(i84, $r64);

        i84 = i84 + 1;

        $i24 = r1.<com.pff.PSTTable7C: int TCI_bm>;

        i83 = i83 + $i24;

     label20:
        i85 = i85 + 1;

        goto label03;

     label21:
        return $r63;
    }

    public int getRowCount()
    {
        int $i0;
        com.pff.PSTTable7C r0;

        r0 := @this: com.pff.PSTTable7C;

        $i0 = r0.<com.pff.PSTTable7C: int numberOfDataSets>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.pff.PSTTable7C r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTTable7C;

        $r1 = r0.<com.pff.PSTTable7C: java.lang.String description>;

        return $r1;
    }

    public java.lang.String getItemsString()
    {
        com.pff.PSTTable7C r0;
        java.util.List $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.pff.PSTTable7C;

        $r1 = r0.<com.pff.PSTTable7C: java.util.List items>;

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = r0.<com.pff.PSTTable7C: java.util.List items>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }
}
