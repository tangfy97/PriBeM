public class com.jidesoft.swing.PartialEtchedBorder extends javax.swing.border.EtchedBorder implements com.jidesoft.swing.PartialSide
{
    private static final long serialVersionUID;
    private int _sides;
    private boolean _roundedCorners;

    public void <init>()
    {
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        specialinvoke r0.<com.jidesoft.swing.PartialEtchedBorder: void <init>(int)>(15);

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.swing.border.EtchedBorder: void <init>()>();

        r0.<com.jidesoft.swing.PartialEtchedBorder: boolean _roundedCorners> = 0;

        r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides> = i0;

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javax.swing.border.EtchedBorder: void <init>(int)>(i0);

        r0.<com.jidesoft.swing.PartialEtchedBorder: boolean _roundedCorners> = 0;

        r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides> = i1;

        return;
    }

    public void <init>(java.awt.Color, java.awt.Color, int)
    {
        java.awt.Color r1, r2;
        int i0;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        r1 := @parameter0: java.awt.Color;

        r2 := @parameter1: java.awt.Color;

        i0 := @parameter2: int;

        specialinvoke r0.<javax.swing.border.EtchedBorder: void <init>(java.awt.Color,java.awt.Color)>(r1, r2);

        r0.<com.jidesoft.swing.PartialEtchedBorder: boolean _roundedCorners> = 0;

        r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides> = i0;

        return;
    }

    public void <init>(int, java.awt.Color, java.awt.Color, int)
    {
        java.awt.Color r1, r2;
        int i0, i1;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.Color;

        r2 := @parameter2: java.awt.Color;

        i1 := @parameter3: int;

        specialinvoke r0.<javax.swing.border.EtchedBorder: void <init>(int,java.awt.Color,java.awt.Color)>(i0, r1, r2);

        r0.<com.jidesoft.swing.PartialEtchedBorder: boolean _roundedCorners> = 0;

        r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides> = i1;

        return;
    }

    public int getSides()
    {
        int $i0;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        $i0 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        return $i0;
    }

    public void setSides(int)
    {
        int i0;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides> = i0;

        return;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.awt.Component r1;
        boolean $z0;
        java.awt.Graphics r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;
        com.jidesoft.swing.PartialEtchedBorder r3;

        r3 := @this: com.jidesoft.swing.PartialEtchedBorder;

        r1 := @parameter0: java.awt.Component;

        r0 := @parameter1: java.awt.Graphics;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        virtualinvoke r0.<java.awt.Graphics: void translate(int,int)>(i2, i3);

        $r2 = virtualinvoke r1.<java.awt.Component: java.awt.Color getBackground()>();

        if $r2 != null goto label01;

        $r6 = <java.awt.Color: java.awt.Color GRAY>;

        virtualinvoke r1.<java.awt.Component: void setBackground(java.awt.Color)>($r6);

     label01:
        $r4 = virtualinvoke r3.<com.jidesoft.swing.PartialEtchedBorder: java.awt.Color getShadowColor(java.awt.Component)>(r1);

        $r5 = virtualinvoke r3.<com.jidesoft.swing.PartialEtchedBorder: java.awt.Color getHighlightColor(java.awt.Component)>(r1);

        $i4 = r3.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        if $i4 != 15 goto label08;

        $i31 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i31 != 1 goto label02;

        $r7 = $r4;

        goto label03;

     label02:
        $r7 = $r5;

     label03:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $z0 = virtualinvoke r3.<com.jidesoft.swing.PartialEtchedBorder: boolean isRoundedCorners()>();

        if $z0 == 0 goto label04;

        $i44 = i0 - 2;

        $i43 = i1 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawRoundRect(int,int,int,int,int,int)>(0, 0, $i44, $i43, 2, 2);

        goto label05;

     label04:
        $i33 = i0 - 2;

        $i32 = i1 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>(0, 0, $i33, $i32);

     label05:
        $i34 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i34 != 1 goto label06;

        $r8 = $r5;

        goto label07;

     label06:
        $r8 = $r4;

     label07:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i35 = i1 - 3;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, $i35, 1, 1);

        $i36 = i0 - 3;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, $i36, 1);

        $i39 = i1 - 1;

        $i38 = i0 - 1;

        $i37 = i1 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i39, $i38, $i37);

        $i42 = i0 - 1;

        $i41 = i1 - 1;

        $i40 = i0 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i42, $i41, $i40, 0);

        goto label28;

     label08:
        $i5 = r3.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label13;

        $i27 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i27 != 1 goto label09;

        $r9 = $r4;

        goto label10;

     label09:
        $r9 = $r5;

     label10:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i28 = i0 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, $i28, 0);

        $i29 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i29 != 1 goto label11;

        $r10 = $r5;

        goto label12;

     label11:
        $r10 = $r4;

     label12:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i30 = i0 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, $i30, 1);

     label13:
        $i45 = r3.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i46 = $i45 & 2;

        if $i46 == 0 goto label18;

        $i19 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i19 != 1 goto label14;

        $r11 = $r4;

        goto label15;

     label14:
        $r11 = $r5;

     label15:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i22 = i1 - 2;

        $i21 = i0 - 1;

        $i20 = i1 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i22, $i21, $i20);

        $i23 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i23 != 1 goto label16;

        $r12 = $r5;

        goto label17;

     label16:
        $r12 = $r4;

     label17:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i26 = i1 - 1;

        $i25 = i0 - 1;

        $i24 = i1 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i26, $i25, $i24);

     label18:
        $i47 = r3.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i48 = $i47 & 8;

        if $i48 == 0 goto label23;

        $i15 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i15 != 1 goto label19;

        $r13 = $r4;

        goto label20;

     label19:
        $r13 = $r5;

     label20:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        $i16 = i1 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i16, 0, 0);

        $i17 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i17 != 1 goto label21;

        $r14 = $r5;

        goto label22;

     label21:
        $r14 = $r4;

     label22:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i18 = i1 - 3;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, $i18, 1, 1);

     label23:
        $i49 = r3.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i50 = $i49 & 4;

        if $i50 == 0 goto label28;

        $i7 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i7 != 1 goto label24;

        $r15 = $r4;

        goto label25;

     label24:
        $r15 = $r5;

     label25:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i10 = i0 - 2;

        $i9 = i1 - 2;

        $i8 = i0 - 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i10, $i9, $i8, 0);

        $i11 = r3.<com.jidesoft.swing.PartialEtchedBorder: int etchType>;

        if $i11 != 1 goto label26;

        $r16 = $r5;

        goto label27;

     label26:
        $r16 = $r4;

     label27:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        $i14 = i0 - 1;

        $i13 = i1 - 1;

        $i12 = i0 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i14, $i13, $i12, 0);

     label28:
        $i51 = neg i2;

        $i52 = neg i3;

        virtualinvoke r0.<java.awt.Graphics: void translate(int,int)>($i51, $i52);

        return;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r2;
        java.awt.Component r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        r1 := @parameter0: java.awt.Component;

        $r2 = specialinvoke r0.<javax.swing.border.EtchedBorder: java.awt.Insets getBorderInsets(java.awt.Component)>(r1);

        $i0 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r2.<java.awt.Insets: int top> = 0;

     label1:
        $i2 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i3 = $i2 & 2;

        if $i3 != 0 goto label2;

        $r2.<java.awt.Insets: int bottom> = 0;

     label2:
        $i4 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i5 = $i4 & 8;

        if $i5 != 0 goto label3;

        $r2.<java.awt.Insets: int left> = 0;

     label3:
        $i6 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i7 = $i6 & 4;

        if $i7 != 0 goto label4;

        $r2.<java.awt.Insets: int right> = 0;

     label4:
        return $r2;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)
    {
        java.awt.Insets r2, $r3;
        java.awt.Component r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.jidesoft.swing.PartialEtchedBorder r0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.awt.Insets;

        $r3 = specialinvoke r0.<javax.swing.border.EtchedBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)>(r1, r2);

        $i0 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r3.<java.awt.Insets: int top> = 0;

     label1:
        $i2 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i3 = $i2 & 2;

        if $i3 != 0 goto label2;

        $r3.<java.awt.Insets: int bottom> = 0;

     label2:
        $i4 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i5 = $i4 & 8;

        if $i5 != 0 goto label3;

        $r3.<java.awt.Insets: int left> = 0;

     label3:
        $i6 = r0.<com.jidesoft.swing.PartialEtchedBorder: int _sides>;

        $i7 = $i6 & 4;

        if $i7 != 0 goto label4;

        $r3.<java.awt.Insets: int right> = 0;

     label4:
        return $r3;
    }

    public boolean isRoundedCorners()
    {
        com.jidesoft.swing.PartialEtchedBorder r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        $z0 = r0.<com.jidesoft.swing.PartialEtchedBorder: boolean _roundedCorners>;

        return $z0;
    }

    public void setRoundedCorners(boolean)
    {
        com.jidesoft.swing.PartialEtchedBorder r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.PartialEtchedBorder;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.PartialEtchedBorder: boolean _roundedCorners> = z0;

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.PartialEtchedBorder: long serialVersionUID> = 2711317518164196639L;

        return;
    }
}
