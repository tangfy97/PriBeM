public class org.apache.xalan.templates.ElemUnknown extends org.apache.xalan.templates.ElemLiteralResult
{

    public void <init>()
    {
        org.apache.xalan.templates.ElemUnknown r0;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        specialinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: void <init>()>();

        return;
    }

    public int getXSLToken()
    {
        int $i1;
        org.apache.xalan.templates.ElemUnknown r0;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        $i1 = (int) -1;

        return $i1;
    }

    private void executeFallbacks(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r3;
        org.apache.xalan.templates.ElemUnknown r0;
        org.apache.xalan.templates.ElemFallback $r2;
        org.apache.xalan.templates.ElemTemplateElement r4;
        int $i0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label7;

     label1:
        $i0 = virtualinvoke r4.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label6;

     label2:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r4);

        $r2 = (org.apache.xalan.templates.ElemFallback) r4;

        virtualinvoke $r2.<org.apache.xalan.templates.ElemFallback: void executeFallback(org.apache.xalan.transformer.TransformerImpl)>(r1);

        goto label8;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        goto label9;

     label5:
        throw $r3;

     label6:
        r4 = r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label7:
        if r4 != null goto label1;

        return;

     label8:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label3;

     label9:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label5;

        catch java.lang.Throwable from label2 to label4 with label4;
    }

    private boolean hasFallbackChildren()
    {
        int $i0;
        org.apache.xalan.templates.ElemUnknown r0;
        org.apache.xalan.templates.ElemTemplateElement r1;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label3;

     label1:
        $i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label2;

        return 1;

     label2:
        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label3:
        if r1 != null goto label1;

        return 0;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemUnknown r0;
        javax.xml.transform.TransformerException $r4;
        javax.xml.transform.ErrorListener $r5;
        org.apache.xalan.trace.TraceManager $r2, $r3;
        boolean $z0, $z1, $z2;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r3.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r0);

     label1:
        $z1 = specialinvoke r0.<org.apache.xalan.templates.ElemUnknown: boolean hasFallbackChildren()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.apache.xalan.templates.ElemUnknown: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r5.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r4);

     label4:
        $z2 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z2 == 0 goto label5;

        $r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r2.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r0);

     label5:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }
}
