public class org.apache.lucene.analysis.fi.FinnishLightStemmer extends java.lang.Object
{

    public void <init>()
    {
        org.apache.lucene.analysis.fi.FinnishLightStemmer r0;

        r0 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int stem(char[], int)
    {
        char $c5;
        org.apache.lucene.analysis.fi.FinnishLightStemmer r0;
        int $i0, $i1, $i2, $i3, $i4, i6, i7, $i8;
        char[] r1;

        r0 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        r1 := @parameter0: char[];

        i6 := @parameter1: int;

        if i6 >= 4 goto label1;

        return i6;

     label1:
        i7 = 0;

     label2:
        if i7 >= i6 goto label6;

        $c5 = r1[i7];

        $i8 = (int) $c5;

        lookupswitch($i8)
        {
            case 228: goto label3;
            case 229: goto label3;
            case 246: goto label4;
            default: goto label5;
        };

     label3:
        r1[i7] = 97;

        goto label5;

     label4:
        r1[i7] = 111;

     label5:
        i7 = i7 + 1;

        goto label2;

     label6:
        $i0 = specialinvoke r0.<org.apache.lucene.analysis.fi.FinnishLightStemmer: int step1(char[],int)>(r1, i6);

        $i1 = specialinvoke r0.<org.apache.lucene.analysis.fi.FinnishLightStemmer: int step2(char[],int)>(r1, $i0);

        $i2 = specialinvoke r0.<org.apache.lucene.analysis.fi.FinnishLightStemmer: int step3(char[],int)>(r1, $i1);

        $i3 = specialinvoke r0.<org.apache.lucene.analysis.fi.FinnishLightStemmer: int norm1(char[],int)>(r1, $i2);

        $i4 = specialinvoke r0.<org.apache.lucene.analysis.fi.FinnishLightStemmer: int norm2(char[],int)>(r1, $i3);

        return $i4;
    }

    private int step1(char[], int)
    {
        org.apache.lucene.analysis.fi.FinnishLightStemmer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char[] r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 8 goto label2;

        $z2 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "kin");

        if $z2 == 0 goto label1;

        $i5 = i0 - 3;

        $i6 = specialinvoke r1.<org.apache.lucene.analysis.fi.FinnishLightStemmer: int step1(char[],int)>(r0, $i5);

        return $i6;

     label1:
        $z3 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ko");

        if $z3 == 0 goto label2;

        $i3 = i0 - 2;

        $i4 = specialinvoke r1.<org.apache.lucene.analysis.fi.FinnishLightStemmer: int step1(char[],int)>(r0, $i3);

        return $i4;

     label2:
        if i0 <= 11 goto label4;

        $z0 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "dellinen");

        if $z0 == 0 goto label3;

        $i2 = i0 - 8;

        return $i2;

     label3:
        $z1 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "dellisuus");

        if $z1 == 0 goto label4;

        $i1 = i0 - 9;

        return $i1;

     label4:
        return i0;
    }

    private int step2(char[], int)
    {
        org.apache.lucene.analysis.fi.FinnishLightStemmer r1;
        int i0, $i1, $i2, $i3;
        char[] r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 5 goto label4;

        $z0 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "lla");

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "tse");

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "sti");

        if $z2 == 0 goto label2;

     label1:
        $i3 = i0 - 3;

        return $i3;

     label2:
        $z3 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ni");

        if $z3 == 0 goto label3;

        $i2 = i0 - 2;

        return $i2;

     label3:
        $z4 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "aa");

        if $z4 == 0 goto label4;

        $i1 = i0 - 1;

        return $i1;

     label4:
        return i0;
    }

    private int step3(char[], int)
    {
        org.apache.lucene.analysis.fi.FinnishLightStemmer r1;
        char[] r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        int i0, $i1, $i2, $i4, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        char $c3, $c5, $c7, $c10, $c16, $c22, $c24;

        r1 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 8 goto label04;

        $z20 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "nnen");

        if $z20 == 0 goto label01;

        $i30 = i0 - 4;

        r0[$i30] = 115;

        $i31 = i0 - 3;

        return $i31;

     label01:
        $z21 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ntena");

        if $z21 == 0 goto label02;

        $i28 = i0 - 5;

        r0[$i28] = 115;

        $i29 = i0 - 4;

        return $i29;

     label02:
        $z22 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "tten");

        if $z22 == 0 goto label03;

        $i27 = i0 - 4;

        return $i27;

     label03:
        $z23 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "eiden");

        if $z23 == 0 goto label04;

        $i26 = i0 - 5;

        return $i26;

     label04:
        if i0 <= 6 goto label11;

        $z6 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "neen");

        if $z6 != 0 goto label05;

        $z7 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "niin");

        if $z7 != 0 goto label05;

        $z8 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "seen");

        if $z8 != 0 goto label05;

        $z9 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "teen");

        if $z9 != 0 goto label05;

        $z10 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "inen");

        if $z10 == 0 goto label06;

     label05:
        $i32 = i0 - 4;

        return $i32;

     label06:
        $i15 = i0 - 3;

        $c16 = r0[$i15];

        $i34 = (int) $c16;

        if $i34 != 104 goto label07;

        $i21 = i0 - 2;

        $c22 = r0[$i21];

        $z19 = specialinvoke r1.<org.apache.lucene.analysis.fi.FinnishLightStemmer: boolean isVowel(char)>($c22);

        if $z19 == 0 goto label07;

        $i23 = i0 - 1;

        $c24 = r0[$i23];

        $i35 = (int) $c24;

        if $i35 != 110 goto label07;

        $i25 = i0 - 3;

        return $i25;

     label07:
        $z24 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "den");

        if $z24 == 0 goto label08;

        $i19 = i0 - 3;

        r0[$i19] = 115;

        $i20 = i0 - 2;

        return $i20;

     label08:
        $z11 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ksen");

        if $z11 == 0 goto label09;

        $i17 = i0 - 4;

        r0[$i17] = 115;

        $i18 = i0 - 3;

        return $i18;

     label09:
        $z12 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ssa");

        if $z12 != 0 goto label10;

        $z13 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "sta");

        if $z13 != 0 goto label10;

        $z14 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "lla");

        if $z14 != 0 goto label10;

        $z15 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "lta");

        if $z15 != 0 goto label10;

        $z16 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "tta");

        if $z16 != 0 goto label10;

        $z17 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ksi");

        if $z17 != 0 goto label10;

        $z18 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "lle");

        if $z18 == 0 goto label11;

     label10:
        $i33 = i0 - 3;

        return $i33;

     label11:
        if i0 <= 5 goto label14;

        $z3 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "na");

        if $z3 != 0 goto label12;

        $z4 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ne");

        if $z4 == 0 goto label13;

     label12:
        $i13 = i0 - 2;

        return $i13;

     label13:
        $z5 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "nei");

        if $z5 == 0 goto label14;

        $i14 = i0 - 3;

        return $i14;

     label14:
        if i0 <= 4 goto label19;

        $z0 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ja");

        if $z0 != 0 goto label15;

        $z1 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ta");

        if $z1 == 0 goto label16;

     label15:
        $i1 = i0 - 2;

        return $i1;

     label16:
        $i2 = i0 - 1;

        $c3 = r0[$i2];

        $i36 = (int) $c3;

        if $i36 != 97 goto label17;

        $i12 = i0 - 1;

        return $i12;

     label17:
        $i4 = i0 - 1;

        $c5 = r0[$i4];

        $i37 = (int) $c5;

        if $i37 != 110 goto label18;

        $i9 = i0 - 2;

        $c10 = r0[$i9];

        $z2 = specialinvoke r1.<org.apache.lucene.analysis.fi.FinnishLightStemmer: boolean isVowel(char)>($c10);

        if $z2 == 0 goto label18;

        $i11 = i0 - 2;

        return $i11;

     label18:
        $i6 = i0 - 1;

        $c7 = r0[$i6];

        $i38 = (int) $c7;

        if $i38 != 110 goto label19;

        $i8 = i0 - 1;

        return $i8;

     label19:
        return i0;
    }

    private int norm1(char[], int)
    {
        char $c2;
        org.apache.lucene.analysis.fi.FinnishLightStemmer r1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 5 goto label1;

        $z2 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "hde");

        if $z2 == 0 goto label1;

        $i5 = i0 - 3;

        r0[$i5] = 107;

        $i6 = i0 - 2;

        r0[$i6] = 115;

        $i7 = i0 - 1;

        r0[$i7] = 105;

     label1:
        if i0 <= 4 goto label3;

        $z0 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ei");

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "at");

        if $z1 == 0 goto label3;

     label2:
        $i4 = i0 - 2;

        return $i4;

     label3:
        if i0 <= 3 goto label5;

        $i1 = i0 - 1;

        $c2 = r0[$i1];

        $i8 = (int) $c2;

        tableswitch($i8)
        {
            case 97: goto label4;
            case 98: goto label5;
            case 99: goto label5;
            case 100: goto label5;
            case 101: goto label4;
            case 102: goto label5;
            case 103: goto label5;
            case 104: goto label5;
            case 105: goto label4;
            case 106: goto label4;
            case 107: goto label5;
            case 108: goto label5;
            case 109: goto label5;
            case 110: goto label5;
            case 111: goto label5;
            case 112: goto label5;
            case 113: goto label5;
            case 114: goto label5;
            case 115: goto label4;
            case 116: goto label4;
            default: goto label5;
        };

     label4:
        $i3 = i0 - 1;

        return $i3;

     label5:
        return i0;
    }

    private int norm2(char[], int)
    {
        org.apache.lucene.analysis.fi.FinnishLightStemmer r1;
        int $i0, $i3, $i5, $i7, i9, i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i27;
        char $c1, $c2, $c4, $c6, $c8, c10;
        char[] r0;

        r1 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        r0 := @parameter0: char[];

        i9 := @parameter1: int;

        if i9 <= 8 goto label2;

        $i3 = i9 - 1;

        $c4 = r0[$i3];

        $i13 = (int) $c4;

        if $i13 == 101 goto label1;

        $i5 = i9 - 1;

        $c6 = r0[$i5];

        $i14 = (int) $c6;

        if $i14 == 111 goto label1;

        $i7 = i9 - 1;

        $c8 = r0[$i7];

        $i15 = (int) $c8;

        if $i15 != 117 goto label2;

     label1:
        $i17 = (int) -1;

        i9 = i9 + $i17;

     label2:
        if i9 <= 4 goto label8;

        $i0 = i9 - 1;

        $c1 = r0[$i0];

        $i18 = (int) $c1;

        if $i18 != 105 goto label3;

        $i20 = (int) -1;

        i9 = i9 + $i20;

     label3:
        if i9 <= 4 goto label8;

        c10 = r0[0];

        i11 = 1;

     label4:
        if i11 >= i9 goto label8;

        $c2 = r0[i11];

        $i21 = (int) $c2;

        $i22 = (int) c10;

        if $i21 != $i22 goto label6;

        $i23 = (int) c10;

        if $i23 == 107 goto label5;

        $i24 = (int) c10;

        if $i24 == 112 goto label5;

        $i25 = (int) c10;

        if $i25 != 116 goto label6;

     label5:
        $i12 = i11;

        $i27 = (int) -1;

        i11 = i11 + $i27;

        i9 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: int delete(char[],int,int)>(r0, $i12, i9);

        goto label7;

     label6:
        c10 = r0[i11];

     label7:
        i11 = i11 + 1;

        goto label4;

     label8:
        return i9;
    }

    private boolean isVowel(char)
    {
        org.apache.lucene.analysis.fi.FinnishLightStemmer r0;
        int $i1;
        char c0;

        r0 := @this: org.apache.lucene.analysis.fi.FinnishLightStemmer;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 97: goto label1;
            case 101: goto label1;
            case 105: goto label1;
            case 111: goto label1;
            case 117: goto label1;
            case 121: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }
}
