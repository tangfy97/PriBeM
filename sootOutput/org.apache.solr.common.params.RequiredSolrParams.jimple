public class org.apache.solr.common.params.RequiredSolrParams extends org.apache.solr.common.params.SolrParams
{
    protected final org.apache.solr.common.params.SolrParams params;

    public void <init>(org.apache.solr.common.params.SolrParams)
    {
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams r1;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: org.apache.solr.common.params.SolrParams;

        specialinvoke r0.<org.apache.solr.common.params.SolrParams: void <init>()>();

        r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params> = r1;

        return;
    }

    public java.lang.String get(java.lang.String)
    {
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.SolrException$ErrorCode $r6;
        org.apache.solr.common.params.SolrParams $r2;
        org.apache.solr.common.SolrException $r4;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String r1, $r3, $r9;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new org.apache.solr.common.SolrException;

        $r6 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required parameter: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r6, $r9);

        throw $r4;

     label1:
        return $r3;
    }

    public java.lang.String getFieldParam(java.lang.String, java.lang.String)
    {
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r4, $r6;
        org.apache.solr.common.SolrException $r8;
        java.lang.String r1, r2, $r3, $r5, $r7, $r16, r17;
        org.apache.solr.common.SolrException$ErrorCode $r10;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.solr.common.params.RequiredSolrParams: java.lang.String fpname(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r5 = virtualinvoke $r4.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>($r3);

        r17 = $r5;

        if null != $r5 goto label1;

        $r6 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r7 = virtualinvoke $r6.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>(r2);

        r17 = $r7;

        if null != $r7 goto label1;

        $r8 = new org.apache.solr.common.SolrException;

        $r10 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required parameter: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (or default: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r10, $r16);

        throw $r8;

     label1:
        return r17;
    }

    public java.lang.String[] getFieldParams(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r5, $r7, r17;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r4, $r6;
        org.apache.solr.common.SolrException $r8;
        java.lang.String r1, r2, $r3, $r16;
        org.apache.solr.common.SolrException$ErrorCode $r10;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.solr.common.params.RequiredSolrParams: java.lang.String fpname(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r5 = virtualinvoke $r4.<org.apache.solr.common.params.SolrParams: java.lang.String[] getParams(java.lang.String)>($r3);

        r17 = $r5;

        if null != $r5 goto label1;

        $r6 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r7 = virtualinvoke $r6.<org.apache.solr.common.params.SolrParams: java.lang.String[] getParams(java.lang.String)>(r2);

        r17 = $r7;

        if null != $r7 goto label1;

        $r8 = new org.apache.solr.common.SolrException;

        $r10 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required parameter: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (or default: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r10, $r16);

        throw $r8;

     label1:
        return r17;
    }

    public java.lang.String[] getParams(java.lang.String)
    {
        java.lang.String[] $r3;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.SolrException$ErrorCode $r6;
        org.apache.solr.common.params.SolrParams $r2;
        org.apache.solr.common.SolrException $r4;
        int $i0;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.params.SolrParams: java.lang.String[] getParams(java.lang.String)>(r1);

        if $r3 == null goto label1;

        $i0 = lengthof $r3;

        if $i0 != 0 goto label2;

     label1:
        $r4 = new org.apache.solr.common.SolrException;

        $r6 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required parameter: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r6, $r9);

        throw $r4;

     label2:
        return $r3;
    }

    public java.util.Iterator getParameterNamesIterator()
    {
        java.util.Iterator $r2;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r1;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        $r1 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r2 = virtualinvoke $r1.<org.apache.solr.common.params.SolrParams: java.util.Iterator getParameterNamesIterator()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r6;
        org.apache.solr.common.params.RequiredSolrParams r2;
        org.apache.solr.common.params.SolrParams $r3;

        r2 := @this: org.apache.solr.common.params.RequiredSolrParams;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{required(");

        $r3 = r2.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")}");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String get(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, $r4;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r3;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r4 = virtualinvoke $r3.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public int getInt(java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r1;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r2;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $i1 = virtualinvoke $r2.<org.apache.solr.common.params.SolrParams: int getInt(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public float getFloat(java.lang.String, float)
    {
        float f0, $f1;
        java.lang.String r1;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r2;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r2 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $f1 = virtualinvoke $r2.<org.apache.solr.common.params.SolrParams: float getFloat(java.lang.String,float)>(r1, f0);

        return $f1;
    }

    public boolean getBool(java.lang.String, boolean)
    {
        java.lang.String r1;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $z1 = virtualinvoke $r2.<org.apache.solr.common.params.SolrParams: boolean getBool(java.lang.String,boolean)>(r1, z0);

        return $z1;
    }

    public int getFieldInt(java.lang.String, java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r1, r2;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r3;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $i1 = virtualinvoke $r3.<org.apache.solr.common.params.SolrParams: int getFieldInt(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        return $i1;
    }

    public boolean getFieldBool(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r1, r2;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r3;
        boolean z0, $z1;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $z1 = virtualinvoke $r3.<org.apache.solr.common.params.SolrParams: boolean getFieldBool(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        return $z1;
    }

    public float getFieldFloat(java.lang.String, java.lang.String, float)
    {
        float f0, $f1;
        java.lang.String r1, r2;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r3;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r3 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $f1 = virtualinvoke $r3.<org.apache.solr.common.params.SolrParams: float getFieldFloat(java.lang.String,java.lang.String,float)>(r1, r2, f0);

        return $f1;
    }

    public java.lang.String getFieldParam(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, r3, $r5;
        org.apache.solr.common.params.RequiredSolrParams r0;
        org.apache.solr.common.params.SolrParams $r4;

        r0 := @this: org.apache.solr.common.params.RequiredSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.solr.common.params.RequiredSolrParams: org.apache.solr.common.params.SolrParams params>;

        $r5 = virtualinvoke $r4.<org.apache.solr.common.params.SolrParams: java.lang.String getFieldParam(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r5;
    }
}
