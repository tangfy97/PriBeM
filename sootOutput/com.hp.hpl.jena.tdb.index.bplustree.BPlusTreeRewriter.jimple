public class com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter extends java.lang.Object
{
    private static org.slf4j.Logger log;
    static boolean rebalance;
    static boolean debug;
    static boolean materialize;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.tdb.index.bplustree.BPlusTree packIntoBPlusTree(java.util.Iterator, com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams, com.hp.hpl.jena.tdb.base.record.RecordFactory, com.hp.hpl.jena.tdb.base.block.BlockMgr, com.hp.hpl.jena.tdb.base.block.BlockMgr)
    {
        org.apache.jena.atlas.iterator.IteratorWithBuffer $r25;
        com.hp.hpl.jena.tdb.base.block.BlockMgr r2, r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeException $r24;
        int $i0, $i2;
        java.lang.String $r17;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r4, $r11, $r19;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r5;
        boolean $z0, $z1, z2, $z3;
        org.slf4j.Logger $r12, $r14;
        java.util.Iterator r0, $r7, r21;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r6;
        org.apache.jena.atlas.lib.Pair r22;
        java.lang.Object $r9, $r10;
        java.lang.StringBuilder $r15, $r16, $r23;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r20;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams;

        r20 := @parameter2: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        r2 := @parameter3: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        r3 := @parameter4: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r19 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree create(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r1, r2, r3);

        return $r19;

     label1:
        $r4 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree attach(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r1, r2, r3);

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        $i2 = (int) -2;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode createNode(int)>($i2);

        $i0 = virtualinvoke $r6.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: int getId()>();

        if $i0 == 0 goto label2;

        $r14 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: org.slf4j.Logger log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**** Not the root: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r17);

        $r24 = new com.hp.hpl.jena.tdb.index.bplustree.BPTreeException;

        specialinvoke $r24.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeException: void <init>()>();

        throw $r24;

     label2:
        r21 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: java.util.Iterator writePackedDataBlocks(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)>(r0, $r4);

        z2 = 1;

     label3:
        $r7 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: java.util.Iterator genTreeLevel(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPlusTree,boolean)>(r21, $r4, z2);

        $r25 = new org.apache.jena.atlas.iterator.IteratorWithBuffer;

        specialinvoke $r25.<org.apache.jena.atlas.iterator.IteratorWithBuffer: void <init>(java.util.Iterator,int)>($r7, 2);

        $r9 = virtualinvoke $r25.<org.apache.jena.atlas.iterator.IteratorWithBuffer: java.lang.Object peek(int)>(1);

        if $r9 != null goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        r21 = $r25;

        if $z3 == 0 goto label6;

        goto label7;

     label6:
        z2 = 0;

        goto label3;

     label7:
        $r10 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.jena.atlas.lib.Pair) $r10;

        $z1 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r12 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: org.slf4j.Logger log>;

        interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String)>("**** Building index layers didn\'t result in a single block");

        return null;

     label8:
        staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: void fixupRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,org.apache.jena.atlas.lib.Pair,com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)>($r6, r22, $r4);

        interfaceinvoke r2.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void sync()>();

        interfaceinvoke r3.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void sync()>();

        $r11 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree create(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r1, r2, r3);

        return $r11;
    }

    private static java.util.Iterator writePackedDataBlocks(java.util.Iterator, com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr $r2, $r10, $r14;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$RebalenceDataEnd $r12;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.PrintStream $r8, $r15, $r16;
        com.hp.hpl.jena.tdb.index.bplustree.RecordBufferPageLinker $r3;
        java.util.Iterator r5, $r7, r17;
        java.util.List $r11;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$1 $r6;
        com.hp.hpl.jena.tdb.index.bplustree.RecordBufferPagePacker $r4;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r1, $r9, $r13;

        r5 := @parameter0: java.util.Iterator;

        r0 := @parameter1: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $z0 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z0 == 0 goto label1;

        staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriterUtils: void divider()>();

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("---- Data level");

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr getRecordsMgr()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr getRecordBufferPageMgr()>();

        $r3 = new com.hp.hpl.jena.tdb.index.bplustree.RecordBufferPageLinker;

        $r4 = new com.hp.hpl.jena.tdb.index.bplustree.RecordBufferPagePacker;

        specialinvoke $r4.<com.hp.hpl.jena.tdb.index.bplustree.RecordBufferPagePacker: void <init>(java.util.Iterator,com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr)>(r5, $r2);

        specialinvoke $r3.<com.hp.hpl.jena.tdb.index.bplustree.RecordBufferPageLinker: void <init>(java.util.Iterator)>($r4);

        $r6 = new com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$1;

        specialinvoke $r6.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$1: void <init>(com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr,com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)>($r2, r0);

        $r7 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>($r3, $r6);

        r17 = $r7;

        $z1 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z1 == 0 goto label3;

        $z5 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean rebalance>;

        if $z5 == 0 goto label2;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Before rebalance (data)");

     label2:
        $r13 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr getRecordsMgr()>();

        $r14 = virtualinvoke $r13.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr getRecordBufferPageMgr()>();

        r17 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriterUtils: java.util.Iterator summarizeDataBlocks(java.util.Iterator,com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr)>($r7, $r14);

     label3:
        $z6 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean rebalance>;

        if $z6 == 0 goto label4;

        $r12 = new com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$RebalenceDataEnd;

        specialinvoke $r12.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$RebalenceDataEnd: void <init>(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)>(r17, r0);

        r17 = $r12;

     label4:
        $z2 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean materialize>;

        if $z2 == 0 goto label5;

        $z4 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z4 != 0 goto label5;

        $r11 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.List toList(java.util.Iterator)>(r17);

        r17 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z7 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z7 == 0 goto label6;

        $z3 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean rebalance>;

        if $z3 == 0 goto label6;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("After rebalance (data)");

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr getRecordsMgr()>();

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr getRecordBufferPageMgr()>();

        r17 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriterUtils: java.util.Iterator summarizeDataBlocks(java.util.Iterator,com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr)>(r17, $r10);

     label6:
        return r17;
    }

    private static java.util.Iterator genTreeLevel(java.util.Iterator, com.hp.hpl.jena.tdb.index.bplustree.BPlusTree, boolean)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$RebalenceIndexEnd $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r3, $r6, $r9;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.PrintStream $r5, $r10, $r11;
        java.util.Iterator r1, r12;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeBuilder $r0;
        java.util.List $r7;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r4;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        z1 := @parameter2: boolean;

        $z0 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z0 == 0 goto label1;

        staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriterUtils: void divider()>();

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("---- Index level");

     label1:
        $r0 = new com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeBuilder;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()>();

        specialinvoke $r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeBuilder: void <init>(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr,boolean,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r1, $r3, z1, $r4);

        r12 = $r0;

        $z2 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z2 == 0 goto label3;

        $z6 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean rebalance>;

        if $z6 == 0 goto label2;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Before rebalance (index)");

     label2:
        $r9 = virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        r12 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriterUtils: java.util.Iterator printIndexBlocks(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr)>($r0, $r9);

     label3:
        $z7 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean rebalance>;

        if $z7 == 0 goto label4;

        $r8 = new com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$RebalenceIndexEnd;

        specialinvoke $r8.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter$RebalenceIndexEnd: void <init>(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPlusTree,boolean)>(r12, r2, z1);

        r12 = $r8;

     label4:
        $z3 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean materialize>;

        if $z3 == 0 goto label5;

        $z5 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z5 != 0 goto label5;

        $r7 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.List toList(java.util.Iterator)>(r12);

        r12 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z8 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z8 == 0 goto label6;

        $z4 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean rebalance>;

        if $z4 == 0 goto label6;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("After rebalance (index)");

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        r12 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriterUtils: java.util.Iterator printIndexBlocks(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr)>(r12, $r6);

     label6:
        return r12;
    }

    private static void fixupRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode, org.apache.jena.atlas.lib.Pair, com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)
    {
        java.io.PrintStream $r11;
        java.lang.Object[] $r10;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer $r1;
        java.lang.Integer $r7;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode r0, $r8;
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r2;
        int $i0, $i2;
        org.apache.jena.atlas.lib.Pair r5;
        java.lang.Object $r6;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r4, $r9;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        r5 := @parameter1: org.apache.jena.atlas.lib.Pair;

        r3 := @parameter2: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer getPtrBuffer()>();

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void clear()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer getRecordBuffer()>();

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.base.buffer.RecordBuffer: void clear()>();

        $z0 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        if $z0 == 0 goto label1;

        staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriterUtils: void divider()>();

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r5;

        virtualinvoke $r11.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("** Process root: %s\n", $r10);

     label1:
        $r4 = virtualinvoke r3.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        $r6 = virtualinvoke r5.<org.apache.jena.atlas.lib.Pair: java.lang.Object car()>();

        $r7 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i2 = (int) -2;

        $r8 = virtualinvoke $r4.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRead(int,int)>($i0, $i2);

        staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: void copyBPTreeNode(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)>($r8, r0, r3);

        $r9 = virtualinvoke r3.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        virtualinvoke $r9.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: void release(com.hp.hpl.jena.tdb.base.page.Page)>($r8);

        return;
    }

    private static void copyBPTreeNode(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode, com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode, com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)
    {
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer $r1, $r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode r0, r2;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r4, $r5;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r6;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r7;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        r2 := @parameter1: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        r6 := @parameter2: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer getPtrBuffer()>();

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer getPtrBuffer()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int getSize()>();

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void copy(int,com.hp.hpl.jena.tdb.base.buffer.BufferBase,int,int)>(0, $r3, 0, $i0);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer getRecordBuffer()>();

        $r5 = virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer getRecordBuffer()>();

        $i1 = virtualinvoke $r4.<com.hp.hpl.jena.tdb.base.buffer.RecordBuffer: int getSize()>();

        virtualinvoke $r4.<com.hp.hpl.jena.tdb.base.buffer.RecordBuffer: void copy(int,com.hp.hpl.jena.tdb.base.buffer.BufferBase,int,int)>(0, $r5, 0, $i1);

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: int getCount()>();

        virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void setCount(int)>($i2);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: boolean isLeaf()>();

        virtualinvoke r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void setIsLeaf(boolean)>($z0);

        $r7 = virtualinvoke r6.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        virtualinvoke $r7.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: void put(com.hp.hpl.jena.tdb.base.page.Page)>(r2);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        boolean $z0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/index/bplustree/BPlusTreeRewriter;");

        <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: org.slf4j.Logger log> = $r0;

        <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean rebalance> = 1;

        <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug> = 0;

        $z0 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean debug>;

        <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: boolean materialize> = $z0;

        return;
    }
}
