public class thredds.catalog.InvDatasetScan extends thredds.catalog.InvCatalogRef
{
    private static org.slf4j.Logger log;
    private static java.lang.String context;
    private static java.lang.String catalogServletName;
    private final java.lang.String rootPath;
    private java.lang.String scanLocation;
    private thredds.crawlabledataset.CrawlableDataset scanLocationCrDs;
    private final java.lang.String crDsClassName;
    private final java.lang.Object crDsConfigObj;
    private final thredds.crawlabledataset.CrawlableDatasetFilter filter;
    private thredds.crawlabledataset.CrawlableDatasetLabeler identifier;
    private thredds.crawlabledataset.CrawlableDatasetLabeler namer;
    private thredds.crawlabledataset.CrawlableDatasetSorter sorter;
    private java.util.Map proxyDatasetHandlers;
    private boolean addDatasetSize;
    private java.util.List childEnhancerList;
    private thredds.cataloggen.CatalogRefExpander catalogRefExpander;
    private boolean isValid;
    private java.lang.StringBuilder invalidMessage;

    public static void setContext(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <thredds.catalog.InvDatasetScan: java.lang.String context> = r0;

        return;
    }

    public static void setCatalogServletName(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <thredds.catalog.InvDatasetScan: java.lang.String catalogServletName> = r0;

        return;
    }

    private static java.lang.String makeHref(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r8;
        java.lang.String $r1, $r3, r6, $r9, $r10;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <thredds.catalog.InvDatasetScan: java.lang.String context>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = <thredds.catalog.InvDatasetScan: java.lang.String catalogServletName>;

        if $r3 != null goto label1;

        $r10 = "";

        goto label2;

     label1:
        $r10 = <thredds.catalog.InvDatasetScan: java.lang.String catalogServletName>;

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/catalog.xml");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void <init>(thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, java.lang.String, java.lang.String, thredds.catalog.InvDatasetScan)
    {
        thredds.crawlabledataset.CrawlableDatasetFilter $r12;
        thredds.cataloggen.CatalogRefExpander $r6;
        thredds.catalog.InvDatasetScan r0, r5;
        java.util.Map $r8;
        thredds.crawlabledataset.CrawlableDatasetSorter $r9;
        java.lang.String r2, r3, r4, $r14, r15;
        boolean $z0;
        thredds.crawlabledataset.CrawlableDatasetLabeler $r10, $r11;
        java.util.List $r7;
        java.lang.Object $r13;
        thredds.catalog.InvDatasetImpl r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r15 := @parameter4: java.lang.String;

        r5 := @parameter5: thredds.catalog.InvDatasetScan;

        $r14 = r5.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r13 = r5.<thredds.catalog.InvDatasetScan: java.lang.Object crDsConfigObj>;

        $r12 = r5.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        $r11 = r5.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler identifier>;

        $r10 = r5.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler namer>;

        $z0 = r5.<thredds.catalog.InvDatasetScan: boolean addDatasetSize>;

        $r9 = r5.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetSorter sorter>;

        $r8 = r5.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers>;

        $r7 = r5.<thredds.catalog.InvDatasetScan: java.util.List childEnhancerList>;

        $r6 = r5.<thredds.catalog.InvDatasetScan: thredds.cataloggen.CatalogRefExpander catalogRefExpander>;

        specialinvoke r0.<thredds.catalog.InvDatasetScan: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,thredds.crawlabledataset.CrawlableDatasetFilter,thredds.crawlabledataset.CrawlableDatasetLabeler,thredds.crawlabledataset.CrawlableDatasetLabeler,boolean,thredds.crawlabledataset.CrawlableDatasetSorter,java.util.Map,java.util.List,thredds.cataloggen.CatalogRefExpander)>(r1, r2, r3, r4, $r14, $r13, $r12, $r11, $r10, $z0, $r9, $r8, $r7, $r6);

        virtualinvoke r0.<thredds.catalog.InvDatasetScan: void setID(java.lang.String)>(r15);

        return;
    }

    public void <init>(thredds.catalog.InvCatalogImpl, thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.cataloggen.inserter.SimpleLatestProxyDsHandler $r45;
        java.util.Map $r46;
        thredds.catalog.InvCatalogImpl r43;
        thredds.crawlabledataset.sorter.LexigraphicByNameSorter $r38;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer $r42;
        java.util.ArrayList $r40;
        java.lang.String r2, r3, $r4, r14, r17, r20, r25, r28, r31, $r33;
        thredds.catalog.InvDatasetImpl r1;
        thredds.catalog.InvDatasetScan r0;
        thredds.crawlabledataset.filter.RegExpMatchOnNameFilter $r47;
        boolean z0, $z1, $z2, z3, $z4;
        thredds.crawlabledataset.CrawlableDataset $r34, $r35, $r36, $r37;
        java.util.List $r41;
        java.util.HashMap $r39;
        org.slf4j.Logger $r6;
        thredds.catalog.InvService $r44;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r43 := @parameter0: thredds.catalog.InvCatalogImpl;

        r1 := @parameter1: thredds.catalog.InvDatasetImpl;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r14 := @parameter4: java.lang.String;

        r17 := @parameter5: java.lang.String;

        z3 := @parameter6: boolean;

        r20 := @parameter7: java.lang.String;

        z0 := @parameter8: boolean;

        r25 := @parameter9: java.lang.String;

        r28 := @parameter10: java.lang.String;

        r31 := @parameter11: java.lang.String;

        $r4 = staticinvoke <thredds.catalog.InvDatasetScan: java.lang.String makeHref(java.lang.String)>(r3);

        specialinvoke r0.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, r2, $r4);

        $r6 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvDatasetScan(): parent=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , path=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , scanLocation=");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , filter=");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , addLatest=");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , sortOrderIncreasing=");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , datasetNameMatchPattern=");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , startTimeSubstitutionPattern= ");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", duration=");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>($r33);

        r0.<thredds.catalog.InvDatasetScan: java.lang.String rootPath> = r3;

        r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation> = r14;

        r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName> = null;

        r0.<thredds.catalog.InvDatasetScan: java.lang.Object crDsConfigObj> = null;

        $r34 = specialinvoke r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset createScanLocationCrDs()>();

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs> = $r34;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 1;

        $r35 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        if $r35 != null goto label1;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: could not create CrawlableDataset for scanLocation.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r62;

        goto label3;

     label1:
        $r36 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z1 = interfaceinvoke $r36.<thredds.crawlabledataset.CrawlableDataset: boolean exists()>();

        if $z1 != 0 goto label2;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation does not exist.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r57;

        goto label3;

     label2:
        $r37 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z2 = interfaceinvoke $r37.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z2 != 0 goto label3;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation not a collection.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r52;

     label3:
        if r17 == null goto label4;

        $r47 = new thredds.crawlabledataset.filter.RegExpMatchOnNameFilter;

        specialinvoke $r47.<thredds.crawlabledataset.filter.RegExpMatchOnNameFilter: void <init>(java.lang.String)>(r17);

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetFilter filter> = $r47;

        goto label5;

     label4:
        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetFilter filter> = null;

     label5:
        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler identifier> = null;

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler namer> = null;

        r0.<thredds.catalog.InvDatasetScan: boolean addDatasetSize> = z3;

        $r38 = new thredds.crawlabledataset.sorter.LexigraphicByNameSorter;

        specialinvoke $r38.<thredds.crawlabledataset.sorter.LexigraphicByNameSorter: void <init>(boolean)>(z0);

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetSorter sorter> = $r38;

        $r39 = new java.util.HashMap;

        specialinvoke $r39.<java.util.HashMap: void <init>()>();

        r0.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers> = $r39;

        if r20 == null goto label6;

        $z4 = virtualinvoke r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z4 == 0 goto label6;

        $r44 = virtualinvoke r43.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvService findService(java.lang.String)>("latest");

        if $r44 == null goto label6;

        $r45 = new thredds.cataloggen.inserter.SimpleLatestProxyDsHandler;

        specialinvoke $r45.<thredds.cataloggen.inserter.SimpleLatestProxyDsHandler: void <init>(java.lang.String,boolean,thredds.catalog.InvService,boolean)>("latest.xml", 1, $r44, 1);

        $r46 = r0.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers>;

        interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("latest.xml", $r45);

     label6:
        if r25 == null goto label7;

        if r28 == null goto label7;

        if r31 == null goto label7;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog.InvDatasetScan: java.util.List childEnhancerList> = $r40;

        $r41 = r0.<thredds.catalog.InvDatasetScan: java.util.List childEnhancerList>;

        $r42 = staticinvoke <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer getInstanceToMatchOnDatasetName(java.lang.String,java.lang.String,java.lang.String)>(r25, r28, r31);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r42);

     label7:
        return;
    }

    public void <init>(thredds.catalog.InvCatalogImpl, thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, java.lang.String, thredds.crawlabledataset.CrawlableDatasetFilter, boolean, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.cataloggen.inserter.SimpleLatestProxyDsHandler $r43;
        java.util.Map $r44;
        thredds.catalog.InvCatalogImpl r41;
        thredds.crawlabledataset.sorter.LexigraphicByNameSorter $r60;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer $r40;
        thredds.crawlabledataset.CrawlableDatasetFilter r17;
        java.util.ArrayList $r38;
        java.lang.String r2, r3, $r4, r14, r20, r25, r28, r31, $r33;
        thredds.catalog.InvDatasetImpl r1;
        thredds.catalog.InvDatasetScan r0;
        boolean z0, $z1, $z2, z3, $z4;
        thredds.crawlabledataset.CrawlableDataset $r34, $r35, $r36, $r37;
        java.util.List $r39;
        java.util.HashMap $r61;
        org.slf4j.Logger $r6;
        thredds.catalog.InvService $r42;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r41 := @parameter0: thredds.catalog.InvCatalogImpl;

        r1 := @parameter1: thredds.catalog.InvDatasetImpl;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r14 := @parameter4: java.lang.String;

        r17 := @parameter5: thredds.crawlabledataset.CrawlableDatasetFilter;

        z3 := @parameter6: boolean;

        r20 := @parameter7: java.lang.String;

        z0 := @parameter8: boolean;

        r25 := @parameter9: java.lang.String;

        r28 := @parameter10: java.lang.String;

        r31 := @parameter11: java.lang.String;

        $r4 = staticinvoke <thredds.catalog.InvDatasetScan: java.lang.String makeHref(java.lang.String)>(r3);

        specialinvoke r0.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, r2, $r4);

        $r6 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvDatasetScan(): parent=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , path=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , scanLocation=");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , filter=");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , addLatest=");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , sortOrderIncreasing=");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , datasetNameMatchPattern=");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , startTimeSubstitutionPattern= ");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", duration=");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>($r33);

        r0.<thredds.catalog.InvDatasetScan: java.lang.String rootPath> = r3;

        r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation> = r14;

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetFilter filter> = r17;

        r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName> = null;

        r0.<thredds.catalog.InvDatasetScan: java.lang.Object crDsConfigObj> = null;

        $r34 = specialinvoke r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset createScanLocationCrDs()>();

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs> = $r34;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 1;

        $r35 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        if $r35 != null goto label1;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: could not create CrawlableDataset for scanLocation.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r59;

        goto label3;

     label1:
        $r36 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z1 = interfaceinvoke $r36.<thredds.crawlabledataset.CrawlableDataset: boolean exists()>();

        if $z1 != 0 goto label2;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation does not exist.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r54;

        goto label3;

     label2:
        $r37 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z2 = interfaceinvoke $r37.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z2 != 0 goto label3;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation not a collection.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r49;

     label3:
        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler identifier> = null;

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler namer> = null;

        r0.<thredds.catalog.InvDatasetScan: boolean addDatasetSize> = z3;

        $r60 = new thredds.crawlabledataset.sorter.LexigraphicByNameSorter;

        specialinvoke $r60.<thredds.crawlabledataset.sorter.LexigraphicByNameSorter: void <init>(boolean)>(z0);

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetSorter sorter> = $r60;

        $r61 = new java.util.HashMap;

        specialinvoke $r61.<java.util.HashMap: void <init>()>();

        r0.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers> = $r61;

        if r20 == null goto label4;

        $z4 = virtualinvoke r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z4 == 0 goto label4;

        $r42 = virtualinvoke r41.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvService findService(java.lang.String)>("latest");

        if $r42 == null goto label4;

        $r43 = new thredds.cataloggen.inserter.SimpleLatestProxyDsHandler;

        specialinvoke $r43.<thredds.cataloggen.inserter.SimpleLatestProxyDsHandler: void <init>(java.lang.String,boolean,thredds.catalog.InvService,boolean)>("latest.xml", 1, $r42, 1);

        $r44 = r0.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers>;

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("latest.xml", $r43);

     label4:
        if r25 == null goto label5;

        if r28 == null goto label5;

        if r31 == null goto label5;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog.InvDatasetScan: java.util.List childEnhancerList> = $r38;

        $r39 = r0.<thredds.catalog.InvDatasetScan: java.util.List childEnhancerList>;

        $r40 = staticinvoke <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer getInstanceToMatchOnDatasetName(java.lang.String,java.lang.String,java.lang.String)>(r25, r28, r31);

        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>($r40);

     label5:
        return;
    }

    public void <init>(thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object, thredds.crawlabledataset.CrawlableDatasetFilter, thredds.crawlabledataset.CrawlableDatasetLabeler, thredds.crawlabledataset.CrawlableDatasetLabeler, boolean, thredds.crawlabledataset.CrawlableDatasetSorter, java.util.Map, java.util.List, thredds.cataloggen.CatalogRefExpander)
    {
        thredds.cataloggen.CatalogRefExpander r17;
        thredds.catalog.InvDatasetScan r0;
        java.util.Map r18;
        thredds.crawlabledataset.CrawlableDatasetSorter r15;
        boolean $z0, $z1, z2;
        thredds.crawlabledataset.CrawlableDatasetLabeler r13, r14;
        thredds.crawlabledataset.CrawlableDataset $r8, $r9, $r10, $r11;
        java.util.List r16;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        java.util.HashMap $r19;
        thredds.crawlabledataset.CrawlableDatasetFilter r12;
        java.lang.String r2, r3, $r4, r5, r6;
        java.lang.Object r7;
        thredds.catalog.InvDatasetImpl r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.Object;

        r12 := @parameter6: thredds.crawlabledataset.CrawlableDatasetFilter;

        r13 := @parameter7: thredds.crawlabledataset.CrawlableDatasetLabeler;

        r14 := @parameter8: thredds.crawlabledataset.CrawlableDatasetLabeler;

        z2 := @parameter9: boolean;

        r15 := @parameter10: thredds.crawlabledataset.CrawlableDatasetSorter;

        r18 := @parameter11: java.util.Map;

        r16 := @parameter12: java.util.List;

        r17 := @parameter13: thredds.cataloggen.CatalogRefExpander;

        $r4 = staticinvoke <thredds.catalog.InvDatasetScan: java.lang.String makeHref(java.lang.String)>(r3);

        specialinvoke r0.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, r2, $r4);

        r0.<thredds.catalog.InvDatasetScan: java.lang.String rootPath> = r3;

        r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation> = r5;

        r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName> = r6;

        r0.<thredds.catalog.InvDatasetScan: java.lang.Object crDsConfigObj> = r7;

        $r8 = specialinvoke r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset createScanLocationCrDs()>();

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs> = $r8;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 1;

        $r9 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        if $r9 != null goto label1;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: could not create CrawlableDataset for scanLocation.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r34;

        goto label3;

     label1:
        $r10 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z0 = interfaceinvoke $r10.<thredds.crawlabledataset.CrawlableDataset: boolean exists()>();

        if $z0 != 0 goto label2;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation does not exist.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r29;

        goto label3;

     label2:
        $r11 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z1 = interfaceinvoke $r11.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z1 != 0 goto label3;

        r0.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation not a collection.");

        r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r24;

     label3:
        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetFilter filter> = r12;

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler identifier> = r13;

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler namer> = r14;

        r0.<thredds.catalog.InvDatasetScan: boolean addDatasetSize> = z2;

        r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetSorter sorter> = r15;

        r0.<thredds.catalog.InvDatasetScan: java.util.List childEnhancerList> = r16;

        r0.<thredds.catalog.InvDatasetScan: thredds.cataloggen.CatalogRefExpander catalogRefExpander> = r17;

        if r18 != null goto label4;

        $r19 = new java.util.HashMap;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        r0.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers> = $r19;

        goto label5;

     label4:
        r0.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers> = r18;

     label5:
        return;
    }

    public java.lang.String getPath()
    {
        thredds.catalog.InvDatasetScan r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.lang.String rootPath>;

        return $r1;
    }

    public java.lang.String getScanLocation()
    {
        thredds.catalog.InvDatasetScan r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        return $r1;
    }

    public void setScanLocation(java.lang.String)
    {
        thredds.catalog.InvDatasetScan r1;
        java.lang.String r0, $r2, $r8, $r14, $r20;
        boolean $z0, $z1, $z2;
        thredds.crawlabledataset.CrawlableDataset $r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24;

        r1 := @this: thredds.catalog.InvDatasetScan;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        r1.<thredds.catalog.InvDatasetScan: boolean isValid> = 1;

        r1.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation> = r0;

        $r3 = specialinvoke r1.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset createScanLocationCrDs()>();

        r1.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs> = $r3;

        $r4 = r1.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        if $r4 != null goto label1;

        r1.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r20 = r1.<thredds.catalog.InvDatasetScan: java.lang.String rootPath>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: could not create CrawlableDataset for scanLocation.");

        r1.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r24;

        goto label3;

     label1:
        $r5 = r1.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z1 = interfaceinvoke $r5.<thredds.crawlabledataset.CrawlableDataset: boolean exists()>();

        if $z1 != 0 goto label2;

        r1.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r14 = r1.<thredds.catalog.InvDatasetScan: java.lang.String rootPath>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation does not exist.");

        r1.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r18;

        goto label3;

     label2:
        $r6 = r1.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $z2 = interfaceinvoke $r6.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z2 != 0 goto label3;

        r1.<thredds.catalog.InvDatasetScan: boolean isValid> = 0;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid InvDatasetScan <path=");

        $r8 = r1.<thredds.catalog.InvDatasetScan: java.lang.String rootPath>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scanLocation=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: CrawlableDataset for scanLocation not a collection.");

        r1.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage> = $r12;

     label3:
        return;
    }

    public java.lang.String getCrDsClassName()
    {
        thredds.catalog.InvDatasetScan r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        return $r1;
    }

    public java.lang.Object getCrDsConfigObj()
    {
        java.lang.Object $r1;
        thredds.catalog.InvDatasetScan r0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.lang.Object crDsConfigObj>;

        return $r1;
    }

    public thredds.crawlabledataset.CrawlableDatasetFilter getFilter()
    {
        thredds.catalog.InvDatasetScan r0;
        thredds.crawlabledataset.CrawlableDatasetFilter $r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        return $r1;
    }

    public thredds.crawlabledataset.CrawlableDatasetLabeler getIdentifier()
    {
        thredds.crawlabledataset.CrawlableDatasetLabeler $r1;
        thredds.catalog.InvDatasetScan r0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler identifier>;

        return $r1;
    }

    public thredds.crawlabledataset.CrawlableDatasetLabeler getNamer()
    {
        thredds.crawlabledataset.CrawlableDatasetLabeler $r1;
        thredds.catalog.InvDatasetScan r0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetLabeler namer>;

        return $r1;
    }

    public thredds.crawlabledataset.CrawlableDatasetSorter getSorter()
    {
        thredds.crawlabledataset.CrawlableDatasetSorter $r1;
        thredds.catalog.InvDatasetScan r0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDatasetSorter sorter>;

        return $r1;
    }

    public java.util.Map getProxyDatasetHandlers()
    {
        thredds.catalog.InvDatasetScan r0;
        java.util.Map $r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.util.Map proxyDatasetHandlers>;

        return $r1;
    }

    public boolean getAddDatasetSize()
    {
        thredds.catalog.InvDatasetScan r0;
        boolean $z0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $z0 = r0.<thredds.catalog.InvDatasetScan: boolean addDatasetSize>;

        return $z0;
    }

    public java.util.List getChildEnhancerList()
    {
        java.util.List $r1;
        thredds.catalog.InvDatasetScan r0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.util.List childEnhancerList>;

        return $r1;
    }

    public thredds.cataloggen.CatalogRefExpander getCatalogRefExpander()
    {
        thredds.cataloggen.CatalogRefExpander $r1;
        thredds.catalog.InvDatasetScan r0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: thredds.cataloggen.CatalogRefExpander catalogRefExpander>;

        return $r1;
    }

    public boolean isValid()
    {
        thredds.catalog.InvDatasetScan r0;
        boolean $z0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $z0 = r0.<thredds.catalog.InvDatasetScan: boolean isValid>;

        return $z0;
    }

    public java.lang.String getInvalidMessage()
    {
        java.lang.StringBuilder $r1;
        thredds.catalog.InvDatasetScan r0;
        java.lang.String $r2;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.lang.StringBuilder invalidMessage>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private thredds.crawlabledataset.CrawlableDataset createScanLocationCrDs()
    {
        java.lang.reflect.InvocationTargetException $r31;
        java.lang.StringBuilder $r6, $r8, $r10, $r11, $r13, $r14, $r16, $r19, $r21, $r23, $r24, $r26, $r27, $r29, $r32, $r34, $r36, $r37, $r39, $r40, $r42, $r45, $r47, $r49, $r50, $r52, $r53, $r55, $r58, $r60, $r62, $r63, $r65, $r66, $r68, $r71, $r73, $r75, $r76, $r78, $r79, $r81;
        java.lang.String $r2, $r3, $r9, $r12, $r15, $r17, $r22, $r25, $r28, $r30, $r35, $r38, $r41, $r43, $r48, $r51, $r54, $r56, $r61, $r64, $r67, $r69, $r74, $r77, $r80, $r82;
        java.io.IOException $r44;
        java.lang.ClassNotFoundException $r5;
        java.lang.NoSuchMethodException $r57;
        thredds.catalog.InvDatasetScan r0;
        java.lang.InstantiationException $r18;
        java.lang.IllegalAccessException $r70;
        thredds.crawlabledataset.CrawlableDataset $r4;
        org.slf4j.Logger $r7, $r20, $r33, $r46, $r59, $r72;
        java.lang.Object $r1;

        r0 := @this: thredds.catalog.InvDatasetScan;

     label1:
        $r3 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r2 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r1 = r0.<thredds.catalog.InvDatasetScan: java.lang.Object crDsConfigObj>;

        $r4 = staticinvoke <thredds.crawlabledataset.CrawlableDatasetFactory: thredds.crawlabledataset.CrawlableDataset createCrawlableDataset(java.lang.String,java.lang.String,java.lang.Object)>($r3, $r2, $r1);

     label2:
        goto label9;

     label3:
        $r70 := @caughtexception;

        $r72 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createScanLocationCrDs(): failed to create CrawlableDataset for collectionLevel <");

        $r74 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and class <");

        $r77 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r80 = virtualinvoke $r70.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r72.<org.slf4j.Logger: void error(java.lang.String)>($r82);

        return null;

     label4:
        $r57 := @caughtexception;

        $r59 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createScanLocationCrDs(): failed to create CrawlableDataset for collectionLevel <");

        $r61 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and class <");

        $r64 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r67 = virtualinvoke $r57.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r59.<org.slf4j.Logger: void error(java.lang.String)>($r69);

        return null;

     label5:
        $r44 := @caughtexception;

        $r46 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createScanLocationCrDs(): failed to create CrawlableDataset for collectionLevel <");

        $r48 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and class <");

        $r51 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r54 = virtualinvoke $r44.<java.io.IOException: java.lang.String getMessage()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<org.slf4j.Logger: void error(java.lang.String)>($r56);

        return null;

     label6:
        $r31 := @caughtexception;

        $r33 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createScanLocationCrDs(): failed to create CrawlableDataset for collectionLevel <");

        $r35 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and class <");

        $r38 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r41 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String)>($r43);

        return null;

     label7:
        $r18 := @caughtexception;

        $r20 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createScanLocationCrDs(): failed to create CrawlableDataset for collectionLevel <");

        $r22 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and class <");

        $r25 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r28 = virtualinvoke $r18.<java.lang.InstantiationException: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r30);

        return null;

     label8:
        $r5 := @caughtexception;

        $r7 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createScanLocationCrDs(): failed to create CrawlableDataset for collectionLevel <");

        $r9 = r0.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and class <");

        $r12 = r0.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r15 = virtualinvoke $r5.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r17);

        return null;

     label9:
        return $r4;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
        catch java.lang.InstantiationException from label1 to label2 with label7;
        catch java.lang.ClassNotFoundException from label1 to label2 with label8;
    }

    private thredds.cataloggen.CatalogBuilder buildCatalogBuilder()
    {
        org.slf4j.Logger $r6;
        thredds.catalog.InvService $r1;
        thredds.crawlabledataset.CrawlableDataset $r3, $r8;
        java.lang.IllegalArgumentException $r4;
        thredds.catalog.InvDatasetScan r0;
        thredds.cataloggen.DatasetScanCatalogBuilder $r2;
        java.lang.StringBuilder $r5, $r7, $r10, $r11, $r13;
        java.lang.String $r9, $r12, $r14;

        r0 := @this: thredds.catalog.InvDatasetScan;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: thredds.catalog.InvService getServiceDefault()>();

     label1:
        $r2 = new thredds.cataloggen.DatasetScanCatalogBuilder;

        $r3 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        specialinvoke $r2.<thredds.cataloggen.DatasetScanCatalogBuilder: void <init>(thredds.catalog.InvDatasetScan,thredds.crawlabledataset.CrawlableDataset,thredds.catalog.InvService)>(r0, $r3, $r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("buildCatalogBuilder(): failed to create CatalogBuilder for this collection <");

        $r8 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $r9 = interfaceinvoke $r8.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r12 = virtualinvoke $r4.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r14);

        return null;

     label4:
        return $r2;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public java.lang.String translatePathToLocation(java.lang.String)
    {
        thredds.catalog.InvDatasetScan r0;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r6, $r12, $r14, r15, $r16, r17;
        boolean $z0, $z1, $z2, $z3;
        org.slf4j.Logger $r5, $r8;
        thredds.crawlabledataset.CrawlableDataset $r3, $r4;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r13;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r15 := @parameter0: java.lang.String;

        if r15 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $z2 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z2 == 0 goto label2;

        r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $r16 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String getPath()>();

        $z3 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>($r16);

        if $z3 != 0 goto label3;

        return null;

     label3:
        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String getPath()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i1);

        r17 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label4;

        r17 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

     label4:
        $r3 = r0.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $r4 = interfaceinvoke $r3.<thredds.crawlabledataset.CrawlableDataset: thredds.crawlabledataset.CrawlableDataset getDescendant(java.lang.String)>(r17);

        $r5 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label5;

        $r8 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("translatePathToLocation(): url dsPath= ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to dataset dsPath= ");

        $r12 = interfaceinvoke $r4.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

     label5:
        $r6 = interfaceinvoke $r4.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        return $r6;
    }

    public thredds.crawlabledataset.CrawlableDataset requestCrawlableDataset(java.lang.String) throws java.io.IOException
    {
        thredds.catalog.InvDatasetScan r0;
        thredds.crawlabledataset.CrawlableDataset $r4;
        java.lang.String r1, $r2;
        thredds.cataloggen.CatalogBuilder $r3;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String translatePathToLocation(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = specialinvoke r0.<thredds.catalog.InvDatasetScan: thredds.cataloggen.CatalogBuilder buildCatalogBuilder()>();

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = interfaceinvoke $r3.<thredds.cataloggen.CatalogBuilder: thredds.crawlabledataset.CrawlableDataset requestCrawlableDataset(java.lang.String)>($r2);

        return $r4;
    }

    public thredds.catalog.InvCatalogImpl makeCatalogForDirectory(java.lang.String, java.net.URI)
    {
        thredds.cataloggen.CatalogBuilder $r11;
        thredds.catalog.InvCatalogImpl $r13;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33, $r36, $r38, $r39, $r41, $r43, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r59, $r61, $r63, $r64, $r66, $r69, $r71, $r72, $r73, $r75;
        java.lang.String r2, $r3, $r5, $r6, $r10, $r20, $r26, $r31, $r34, $r40, $r45, $r49, $r51, $r55, $r57, $r62, $r65, $r67, $r74, $r76, r77;
        java.io.IOException $r58, $r68;
        thredds.catalog.InvDatasetScan r1;
        java.net.URI r14;
        boolean $z0, $z1, $z2;
        thredds.crawlabledataset.CrawlableDataset $r4, $r7, $r8, $r9, $r12;
        int $i0;
        org.slf4j.Logger $r0, $r16, $r22, $r35, $r37, $r42, $r47, $r53, $r60, $r70;

        r1 := @this: thredds.catalog.InvDatasetScan;

        r2 := @parameter0: java.lang.String;

        r14 := @parameter1: java.net.URI;

        $r0 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r37 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("baseURI=");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.slf4j.Logger: void debug(java.lang.String)>($r40);

        $r42 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("orgPath=");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r42.<org.slf4j.Logger: void debug(java.lang.String)>($r45);

        $r47 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rootPath=");

        $r49 = r1.<thredds.catalog.InvDatasetScan: java.lang.String rootPath>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void debug(java.lang.String)>($r51);

        $r53 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scanLocation=");

        $r55 = r1.<thredds.catalog.InvDatasetScan: java.lang.String scanLocation>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r53.<org.slf4j.Logger: void debug(java.lang.String)>($r57);

     label01:
        $r3 = virtualinvoke r1.<thredds.catalog.InvDatasetScan: java.lang.String translatePathToLocation(java.lang.String)>(r2);

        if $r3 != null goto label02;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeCatalogForDirectory(): Requesting path <");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> must start with \"");

        $r31 = r1.<thredds.catalog.InvDatasetScan: java.lang.String rootPath>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String)>($r34);

        return null;

     label02:
        $r4 = r1.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $r5 = interfaceinvoke $r4.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        r77 = $r6;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label03;

        r77 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);

     label03:
        $r7 = r1.<thredds.catalog.InvDatasetScan: thredds.crawlabledataset.CrawlableDataset scanLocationCrDs>;

        $r8 = interfaceinvoke $r7.<thredds.crawlabledataset.CrawlableDataset: thredds.crawlabledataset.CrawlableDataset getDescendant(java.lang.String)>(r77);

        $r9 = interfaceinvoke $r8.<thredds.crawlabledataset.CrawlableDataset: thredds.crawlabledataset.CrawlableDataset getParentDataset()>();

        $r10 = interfaceinvoke $r9.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r11 = specialinvoke r1.<thredds.catalog.InvDatasetScan: thredds.cataloggen.CatalogBuilder buildCatalogBuilder()>();

        if $r11 != null goto label04;

        return null;

     label04:
        $r12 = interfaceinvoke $r11.<thredds.cataloggen.CatalogBuilder: thredds.crawlabledataset.CrawlableDataset requestCrawlableDataset(java.lang.String)>($r10);

     label05:
        goto label07;

     label06:
        $r68 := @caughtexception;

        $r70 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeCatalogForDirectory(): I/O error getting catalog level <");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r74 = virtualinvoke $r68.<java.io.IOException: java.lang.String getMessage()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r76, $r68);

        return null;

     label07:
        if $r12 != null goto label08;

        $r22 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeCatalogForDirectory(): requested catalog level <");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not allowed (filtered out).");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String)>($r26);

        return null;

     label08:
        $z2 = interfaceinvoke $r12.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z2 != 0 goto label09;

        $r16 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeCatalogForDirectory(): requested catalog level <");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> is not a collection.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String)>($r20);

        return null;

     label09:
        $r13 = interfaceinvoke $r11.<thredds.cataloggen.CatalogBuilder: thredds.catalog.InvCatalogImpl generateCatalog(thredds.crawlabledataset.CrawlableDataset)>($r12);

     label10:
        goto label12;

     label11:
        $r58 := @caughtexception;

        $r60 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeCatalogForDirectory(): catalog generation failed <");

        $r62 = interfaceinvoke $r12.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r65 = virtualinvoke $r58.<java.io.IOException: java.lang.String getMessage()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r60.<org.slf4j.Logger: void error(java.lang.String)>($r67);

        return null;

     label12:
        if $r13 == null goto label13;

        virtualinvoke $r13.<thredds.catalog.InvCatalogImpl: void setBaseURI(java.net.URI)>(r14);

     label13:
        return $r13;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public thredds.catalog.InvCatalogImpl makeProxyDsResolverCatalog(java.lang.String, java.net.URI)
    {
        java.util.Map $r5;
        thredds.cataloggen.CatalogBuilder $r8;
        thredds.catalog.InvCatalogImpl $r10;
        java.lang.StringBuilder $r14, $r15, $r16, $r20, $r21, $r22, $r26, $r27, $r28, $r32, $r33, $r34, $r38, $r39, $r40, $r42, $r43, $r48, $r50, $r51, $r53, $r58, $r59, $r60, $r62, $r63, $r65, $r67, $r68, $r69, $r70, $r71, $r72, $r73;
        java.lang.String r0, $r2, $r3, $r4, $r17, $r23, $r29, $r35, $r41, $r44, $r49, $r52, $r54, $r61, $r64, $r66;
        java.io.IOException $r45, $r55;
        thredds.catalog.InvDatasetScan r1;
        java.net.URI r11;
        boolean $z0, $z1;
        thredds.crawlabledataset.CrawlableDataset $r9;
        int $i0, $i1, $i3;
        thredds.cataloggen.ProxyDatasetHandler r7;
        org.slf4j.Logger $r13, $r19, $r25, $r31, $r37, $r47, $r57;
        java.lang.Object $r6;

        r1 := @this: thredds.catalog.InvDatasetScan;

        r0 := @parameter0: java.lang.String;

        r11 := @parameter1: java.net.URI;

        if r0 != null goto label01;

        return null;

     label01:
        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label02;

        return null;

     label02:
        $r2 = virtualinvoke r1.<thredds.catalog.InvDatasetScan: java.lang.String translatePathToLocation(java.lang.String)>(r0);

        if $r2 != null goto label03;

        $r37 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeProxyDsResolverCatalog(): Requsting path <");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> must start with \"");

        $r41 = r1.<thredds.catalog.InvDatasetScan: java.lang.String rootPath>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String)>($r44);

        return null;

     label03:
        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 != $i3 goto label04;

        $r31 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeProxyDsResolverCatalog(): Requsting path <");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> must contain a slash (\"/\").");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r35);

        return null;

     label04:
        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r5 = virtualinvoke r1.<thredds.catalog.InvDatasetScan: java.util.Map getProxyDatasetHandlers()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r7 = (thredds.cataloggen.ProxyDatasetHandler) $r6;

        if r7 != null goto label05;

        $r25 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeProxyDsResolverCatalog(): No matching proxy dataset handler found <");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String)>($r29);

        return null;

     label05:
        $r8 = specialinvoke r1.<thredds.catalog.InvDatasetScan: thredds.cataloggen.CatalogBuilder buildCatalogBuilder()>();

        if $r8 != null goto label06;

        return null;

     label06:
        $r9 = interfaceinvoke $r8.<thredds.cataloggen.CatalogBuilder: thredds.crawlabledataset.CrawlableDataset requestCrawlableDataset(java.lang.String)>($r4);

     label07:
        goto label09;

     label08:
        $r55 := @caughtexception;

        $r57 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeProxyDsResolverCatalog(): failed to create CrawlableDataset for catalogLevel <");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and class <");

        $r61 = r1.<thredds.catalog.InvDatasetScan: java.lang.String crDsClassName>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r64 = virtualinvoke $r55.<java.io.IOException: java.lang.String getMessage()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r66, $r55);

        return null;

     label09:
        if $r9 != null goto label10;

        $r19 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeProxyDsResolverCatalog(): requested catalog level <");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not allowed (filtered out).");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>($r23);

        return null;

     label10:
        $z1 = interfaceinvoke $r9.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z1 != 0 goto label11;

        $r13 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeProxyDsResolverCatalog(): requested catalog level <");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not a collection.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String)>($r17);

        return null;

     label11:
        $r10 = interfaceinvoke $r8.<thredds.cataloggen.CatalogBuilder: thredds.catalog.InvCatalogImpl generateProxyDsResolverCatalog(thredds.crawlabledataset.CrawlableDataset,thredds.cataloggen.ProxyDatasetHandler)>($r9, r7);

     label12:
        goto label14;

     label13:
        $r45 := @caughtexception;

        $r47 = <thredds.catalog.InvDatasetScan: org.slf4j.Logger log>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeProxyDsResolverCatalog(): catalog generation failed <");

        $r49 = interfaceinvoke $r9.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r52 = virtualinvoke $r45.<java.io.IOException: java.lang.String getMessage()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String)>($r54);

        return null;

     label14:
        if $r10 == null goto label15;

        virtualinvoke $r10.<thredds.catalog.InvCatalogImpl: void setBaseURI(java.net.URI)>(r11);

     label15:
        return $r10;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public thredds.catalog.InvCatalog makeLatestCatalogForDirectory(java.lang.String, java.net.URI)
    {
        thredds.catalog.InvDatasetScan r0;
        int $i0;
        java.lang.String r1, $r13, $r19, $r22;
        java.net.URI r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r8;
        thredds.catalog.InvCatalog $r17;
        thredds.catalog.InvDatasetScan$1 $r11;
        java.util.List $r4, $r7, $r9, $r10;
        thredds.catalog.InvCatalogImpl $r3;
        java.lang.Object $r5, $r12, $r18;
        java.lang.StringBuilder $r14, $r15, $r16;
        thredds.catalog.InvDatasetImpl r6, r20, r21;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.net.URI;

        $r3 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: thredds.catalog.InvCatalogImpl makeCatalogForDirectory(java.lang.String,java.net.URI)>(r1, r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<thredds.catalog.InvCatalogImpl: java.util.List getDatasets()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (thredds.catalog.InvDatasetImpl) $r5;

        $r7 = virtualinvoke r6.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r18 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r20 = (thredds.catalog.InvDatasetImpl) $r18;

        $z2 = virtualinvoke r20.<thredds.catalog.InvDatasetImpl: boolean hasAccess()>();

        if $z2 == 0 goto label3;

        $r19 = virtualinvoke r20.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        $z3 = virtualinvoke $r19.<java.lang.String: boolean endsWith(java.lang.String)>("latest.xml");

        if $z3 == 0 goto label4;

     label3:
        interfaceinvoke $r8.<java.util.Iterator: void remove()>();

     label4:
        goto label2;

     label5:
        $r9 = virtualinvoke r6.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $z1 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label6;

        return null;

     label6:
        $r10 = virtualinvoke r6.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r11 = new thredds.catalog.InvDatasetScan$1;

        specialinvoke $r11.<thredds.catalog.InvDatasetScan$1: void <init>(thredds.catalog.InvDatasetScan)>(r0);

        $r12 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>($r10, $r11);

        r21 = (thredds.catalog.InvDatasetImpl) $r12;

        $r13 = virtualinvoke r6.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 != 0 goto label7;

        $r22 = "Latest";

        goto label8;

     label7:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latest ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        virtualinvoke r21.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>($r22);

        $r17 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvCatalog subsetCatalogOnDataset(thredds.catalog.InvCatalog,thredds.catalog.InvDataset)>($r3, r21);

        return $r17;
    }

    public boolean isRead()
    {
        thredds.catalog.InvDatasetScan r0;

        r0 := @this: thredds.catalog.InvDatasetScan;

        return 0;
    }

    boolean check(java.lang.StringBuilder, boolean)
    {
        thredds.catalog.InvDatasetScan r0;
        java.lang.String $r1, $r2, $r6, $r9, $r12;
        boolean z0, $z1, z2, $z3;
        thredds.catalog.InvService $r3;
        java.lang.StringBuilder r4, $r5, $r7, $r8, $r10, $r11, $r13;

        r0 := @this: thredds.catalog.InvDatasetScan;

        r4 := @parameter0: java.lang.StringBuilder;

        z0 := @parameter1: boolean;

        z2 = 1;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String getPath()>();

        if $r1 != null goto label1;

        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Error: DatasetScan (");

        $r12 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String getFullName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): must have path attribute\n");

        z2 = 0;

     label1:
        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String getScanLocation()>();

        if $r2 != null goto label2;

        $r8 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Error: DatasetScan (");

        $r9 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String getFullName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): must have dirLocation attribute\n");

        z2 = 0;

     label2:
        $r3 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: thredds.catalog.InvService getServiceDefault()>();

        if $r3 != null goto label3;

        $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Error: DatasetScan (");

        $r6 = virtualinvoke r0.<thredds.catalog.InvDatasetScan: java.lang.String getFullName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): must have a default service\n");

        z2 = 0;

     label3:
        if z2 == 0 goto label4;

        $z1 = specialinvoke r0.<thredds.catalog.InvCatalogRef: boolean check(java.lang.StringBuilder,boolean)>(r4, z0);

        if $z1 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/InvDatasetScan;");

        <thredds.catalog.InvDatasetScan: org.slf4j.Logger log> = $r0;

        <thredds.catalog.InvDatasetScan: java.lang.String context> = "/thredds";

        <thredds.catalog.InvDatasetScan: java.lang.String catalogServletName> = "/catalog";

        return;
    }
}
