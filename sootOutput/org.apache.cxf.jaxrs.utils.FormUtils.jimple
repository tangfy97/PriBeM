public final class org.apache.cxf.jaxrs.utils.FormUtils extends java.lang.Object
{
    public static final java.lang.String FORM_PARAM_MAP;
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String MULTIPART_FORM_DATA_TYPE;
    private static final java.lang.String MAX_FORM_PARAM_COUNT;
    private static final java.lang.String CONTENT_DISPOSITION_FILES_PARAM;

    private void <init>()
    {
        org.apache.cxf.jaxrs.utils.FormUtils r0;

        r0 := @this: org.apache.cxf.jaxrs.utils.FormUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void restoreForm(org.apache.cxf.jaxrs.provider.FormEncodingProvider, org.apache.cxf.jaxrs.ext.form.Form, org.apache.cxf.message.Message) throws java.lang.Exception
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r1;
        org.apache.cxf.message.Message r3;
        org.apache.cxf.io.CachedOutputStream $r0;
        org.apache.cxf.jaxrs.ext.form.Form r2;
        java.io.InputStream $r4;

        r1 := @parameter0: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r2 := @parameter1: org.apache.cxf.jaxrs.ext.form.Form;

        r3 := @parameter2: org.apache.cxf.message.Message;

        $r0 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void writeForm(org.apache.cxf.jaxrs.provider.FormEncodingProvider,org.apache.cxf.jaxrs.ext.form.Form,java.io.OutputStream)>(r1, r2, $r0);

        $r4 = virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: java.io.InputStream getInputStream()>();

        interfaceinvoke r3.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/InputStream;", $r4);

        return;
    }

    public static void writeForm(org.apache.cxf.jaxrs.provider.FormEncodingProvider, org.apache.cxf.jaxrs.ext.form.Form, java.io.OutputStream) throws java.lang.Exception
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        java.io.OutputStream r5;
        javax.ws.rs.core.MediaType $r4;
        org.apache.cxf.jaxrs.impl.MetadataMap $r2;
        java.lang.'annotation'.Annotation[] $r3;
        org.apache.cxf.jaxrs.ext.form.Form r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter1: org.apache.cxf.jaxrs.ext.form.Form;

        r5 := @parameter2: java.io.OutputStream;

        $r3 = newarray (java.lang.'annotation'.Annotation)[0];

        $r4 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_FORM_URLENCODED_TYPE>;

        $r2 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)>(r1, class "Lorg/apache/cxf/jaxrs/ext/form/Form;", class "Lorg/apache/cxf/jaxrs/ext/form/Form;", $r3, $r4, $r2, r5);

        return;
    }

    public static org.apache.cxf.jaxrs.ext.form.Form readForm(org.apache.cxf.jaxrs.provider.FormEncodingProvider, org.apache.cxf.message.Message) throws java.lang.Exception
    {
        org.apache.cxf.message.Message r4;
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;
        java.lang.'annotation'.Annotation[] $r2;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        javax.ws.rs.core.MediaType $r3;
        java.lang.Object $r5, $r7;
        org.apache.cxf.jaxrs.ext.form.Form $r8;
        java.io.InputStream $r6;

        r0 := @parameter0: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r4 := @parameter1: org.apache.cxf.message.Message;

        $r2 = newarray (java.lang.'annotation'.Annotation)[0];

        $r3 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_FORM_URLENCODED_TYPE>;

        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        $r6 = (java.io.InputStream) $r5;

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(class "Lorg/apache/cxf/jaxrs/ext/form/Form;", class "Lorg/apache/cxf/jaxrs/ext/form/Form;", $r2, $r3, $r1, $r6);

        $r8 = (org.apache.cxf.jaxrs.ext.form.Form) $r7;

        return $r8;
    }

    public static void addPropertyToForm(javax.ws.rs.core.MultivaluedMap, java.lang.String, java.lang.Object)
    {
        java.lang.String r0, $r1, $r14, $r15;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r7;
        java.util.Iterator $r5, $r10;
        java.util.Set $r4;
        javax.ws.rs.core.MultivaluedMap $r3, r12;
        java.util.List $r9;
        java.lang.Object r2, $r6, $r8, $r11, $r13;

        r12 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r15 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r12.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>(r0, $r15);

        goto label5;

     label1:
        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: javax.ws.rs.core.MultivaluedMap extractValuesFromBean(java.lang.Object,java.lang.String)>(r2, "");

        $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.util.List) $r8;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r13 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r12.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r13, $r14);

        goto label3;

     label4:
        goto label2;

     label5:
        return;
    }

    public static java.lang.String readBody(java.io.InputStream, java.lang.String)
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r0;
        javax.ws.rs.InternalServerErrorException $r6;
        java.lang.String $r2, r4;
        java.lang.Exception $r5;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.String;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.cxf.helpers.IOUtils: int copy(java.io.InputStream,java.io.OutputStream,int)>(r1, $r0, 1024);

        $r2 = new java.lang.String;

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, r4);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r6.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void populateMapFromString(javax.ws.rs.core.MultivaluedMap, org.apache.cxf.message.Message, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String[] $r1, r7;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String r0, r6, r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16;
        boolean $z0, z1;
        java.util.Iterator $r4;
        org.apache.cxf.message.Message r3;
        javax.ws.rs.core.MultivaluedMap r11;
        java.util.List $r2;
        java.lang.Object $r5;

        r11 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter1: org.apache.cxf.message.Message;

        r0 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        z1 := @parameter4: boolean;

        $r1 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, "&");

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void checkNumberOfParts(org.apache.cxf.message.Message,int)>(r3, $i0);

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        r7 = newarray (java.lang.String)[2];

        $i1 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>("=");

        $i6 = (int) -1;

        if $i1 == $i6 goto label4;

        $r15 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r7[0] = $r15;

        $i2 = $i1 + 1;

        $i3 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label2;

        $i4 = $i1 + 1;

        $r16 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i4);

        goto label3;

     label2:
        $r16 = "";

     label3:
        r7[1] = $r16;

        goto label5;

     label4:
        r7[0] = r6;

        r7[1] = "";

     label5:
        $r9 = r7[0];

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlDecode(java.lang.String,java.lang.String)>($r9, r8);

        if z1 == 0 goto label6;

        $r13 = r7[1];

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlDecode(java.lang.String,java.lang.String)>($r13, r8);

        interfaceinvoke r11.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r10, $r14);

        goto label7;

     label6:
        $r12 = r7[1];

        interfaceinvoke r11.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r10, $r12);

     label7:
        goto label1;

     label8:
        return;
    }

    public static void populateMapFromString(javax.ws.rs.core.MultivaluedMap, org.apache.cxf.message.Message, java.lang.String, java.lang.String, boolean, javax.servlet.http.HttpServletRequest)
    {
        java.util.Enumeration $r2;
        org.apache.cxf.message.Message r10;
        java.lang.String[] $r7;
        javax.ws.rs.core.MultivaluedMap r3;
        javax.servlet.http.HttpServletRequest r1;
        java.util.List $r9;
        java.lang.Object $r5;
        java.lang.String r0, r4, r6, $r8;
        boolean $z0, $z1, z2;

        r3 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r10 := @parameter1: org.apache.cxf.message.Message;

        r0 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z2 := @parameter4: boolean;

        r1 := @parameter5: javax.servlet.http.HttpServletRequest;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean)>(r3, r10, r0, r4, z2);

        goto label4;

     label1:
        if r1 == null goto label4;

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>(r6);

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlDecode(java.lang.String)>(r6);

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        interfaceinvoke r3.<javax.ws.rs.core.MultivaluedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label2;

     label3:
        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void logRequestParametersIfNeeded(java.util.Map,java.lang.String)>(r3, r4);

     label4:
        return;
    }

    public static void logRequestParametersIfNeeded(java.util.Map, java.lang.String)
    {
        java.io.ByteArrayOutputStream $r5;
        org.apache.cxf.interceptor.InterceptorChain $r1;
        org.apache.cxf.message.Message $r0;
        java.io.IOException $r10;
        java.util.logging.Logger $r8;
        java.util.Map r6;
        java.lang.Class $r3;
        java.lang.String $r2, $r4, r7, $r9;
        boolean $z0;

        r6 := @parameter0: java.util.Map;

        r7 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        $r1 = interfaceinvoke $r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = class "Lorg/apache/cxf/interceptor/LoggingInInterceptor;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label4;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)>(r6, $r5, r7, 0);

        $r8 = <org.apache.cxf.jaxrs.utils.FormUtils: java.util.logging.Logger LOG>;

        $r9 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>(r7);

        virtualinvoke $r8.<java.util.logging.Logger: void info(java.lang.String)>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void writeMapToOutputStream(java.util.Map, java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException
    {
        byte[] $r14, $r15;
        java.util.Map r0;
        java.lang.String r9, r12, $r13, $r16;
        boolean $z0, $z1, z2, $z3, $z4;
        java.io.OutputStream r10;
        java.util.Map$Entry r4;
        java.util.Iterator $r2, $r7;
        java.util.Set $r1;
        java.util.List $r6;
        java.lang.Object $r3, $r5, $r8, $r11;

        r0 := @parameter0: java.util.Map;

        r10 := @parameter1: java.io.OutputStream;

        r12 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.util.List) $r5;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r11;

        $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>(r12);

        virtualinvoke r10.<java.io.OutputStream: void write(byte[])>($r14);

        virtualinvoke r10.<java.io.OutputStream: void write(int)>(61);

        if z2 == 0 goto label3;

        $r16 = r9;

        goto label4;

     label3:
        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlEncode(java.lang.String,java.lang.String)>(r9, r12);

     label4:
        $r15 = virtualinvoke $r16.<java.lang.String: byte[] getBytes(java.lang.String)>(r12);

        virtualinvoke r10.<java.io.OutputStream: void write(byte[])>($r15);

        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label5;

        $z4 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

     label5:
        virtualinvoke r10.<java.io.OutputStream: void write(int)>(38);

     label6:
        goto label2;

     label7:
        goto label1;

     label8:
        return;
    }

    public static void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap, org.apache.cxf.jaxrs.ext.multipart.MultipartBody, org.apache.cxf.message.Message, boolean)
    {
        org.apache.cxf.jaxrs.ext.multipart.ContentDisposition $r6;
        javax.ws.rs.BadRequestException $r15, $r19;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        javax.ws.rs.InternalServerErrorException $r22;
        java.util.logging.Logger $r21;
        java.util.List $r1;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r5;
        javax.activation.DataHandler $r10;
        int $i0;
        java.lang.String $r7, $r8, $r9, $r12, $r14, $r16, $r17, $r23, $r24, $r25;
        java.util.Iterator $r3;
        org.apache.cxf.message.Message r2;
        java.io.IOException $r18;
        java.lang.IllegalArgumentException $r20;
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody r0;
        javax.ws.rs.core.MultivaluedMap r13;
        java.lang.Object $r4;
        java.io.InputStream $r11;

        r13 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r0 := @parameter1: org.apache.cxf.jaxrs.ext.multipart.MultipartBody;

        r2 := @parameter2: org.apache.cxf.message.Message;

        z3 := @parameter3: boolean;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.MultipartBody: java.util.List getAllAttachments()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void checkNumberOfParts(org.apache.cxf.message.Message,int)>(r2, $i0);

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r4;

        $r6 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: org.apache.cxf.jaxrs.ext.multipart.ContentDisposition getContentDisposition()>();

        if $r6 == null goto label02;

        $r16 = "form-data";

        $r17 = virtualinvoke $r6.<org.apache.cxf.jaxrs.ext.multipart.ContentDisposition: java.lang.String getType()>();

        $z4 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r17);

        if $z4 != 0 goto label02;

        goto label01;

     label02:
        if $r6 != null goto label03;

        $r23 = null;

        goto label04;

     label03:
        $r23 = virtualinvoke $r6.<org.apache.cxf.jaxrs.ext.multipart.ContentDisposition: java.lang.String getParameter(java.lang.String)>("name");

     label04:
        $r7 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.String getContentId()>();

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r23);

        if $z0 == 0 goto label05;

        $r24 = $r7;

        goto label06;

     label05:
        $r8 = virtualinvoke $r23.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "");

        $r24 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "");

     label06:
        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r24);

        if $z1 == 0 goto label07;

        $r15 = new javax.ws.rs.BadRequestException;

        specialinvoke $r15.<javax.ws.rs.BadRequestException: void <init>()>();

        throw $r15;

     label07:
        $r9 = "files";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z2 == 0 goto label08;

        goto label01;

     label08:
        $r10 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.activation.DataHandler getDataHandler()>();

        $r11 = virtualinvoke $r10.<javax.activation.DataHandler: java.io.InputStream getInputStream()>();

        $r12 = staticinvoke <org.apache.cxf.helpers.IOUtils: java.lang.String toString(java.io.InputStream)>($r11);

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlDecode(java.lang.String)>($r24);

        if z3 == 0 goto label09;

        $r25 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlDecode(java.lang.String)>($r12);

        goto label10;

     label09:
        $r25 = $r12;

     label10:
        interfaceinvoke r13.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r14, $r25);

     label11:
        goto label14;

     label12:
        $r20 := @caughtexception;

        $r21 = <org.apache.cxf.jaxrs.utils.FormUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r21.<java.util.logging.Logger: void warning(java.lang.String)>("Illegal URL-encoded characters, make sure that no @FormParam and @Multipart annotations are mixed up");

        $r22 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r22.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r22;

     label13:
        $r18 := @caughtexception;

        $r19 = new javax.ws.rs.BadRequestException;

        specialinvoke $r19.<javax.ws.rs.BadRequestException: void <init>()>();

        throw $r19;

     label14:
        goto label01;

     label15:
        return;

        catch java.lang.IllegalArgumentException from label08 to label11 with label12;
        catch java.io.IOException from label08 to label11 with label13;
    }

    private static void checkNumberOfParts(org.apache.cxf.message.Message, int)
    {
        org.apache.cxf.message.Message r0, $r3, $r5;
        java.lang.NumberFormatException $r10;
        javax.ws.rs.InternalServerErrorException $r13;
        org.apache.cxf.message.Exchange $r1, $r2, $r4;
        java.lang.Integer $r8;
        int $i0, i1, $i3;
        javax.ws.rs.WebApplicationException $r12;
        java.lang.Object $r6;
        java.lang.String r7;

        r0 := @parameter0: org.apache.cxf.message.Message;

        i1 := @parameter1: int;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("maxFormParameterCount");

        r7 = (java.lang.String) $r6;

        if r7 != null goto label3;

        return;

     label3:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r7);

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i3 = (int) -1;

        if $i0 == $i3 goto label4;

        if i1 < $i0 goto label4;

        $r12 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r12.<javax.ws.rs.WebApplicationException: void <init>(int)>(413);

        throw $r12;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r13 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r13.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r13;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.utils.FormUtils: java.lang.String CONTENT_DISPOSITION_FILES_PARAM> = "files";

        <org.apache.cxf.jaxrs.utils.FormUtils: java.lang.String MAX_FORM_PARAM_COUNT> = "maxFormParameterCount";

        <org.apache.cxf.jaxrs.utils.FormUtils: java.lang.String MULTIPART_FORM_DATA_TYPE> = "form-data";

        <org.apache.cxf.jaxrs.utils.FormUtils: java.lang.String FORM_PARAM_MAP> = "org.apache.cxf.form_data";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/FormUtils;");

        <org.apache.cxf.jaxrs.utils.FormUtils: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
