class org.waveprotocol.wave.client.editor.EditorImpl$15 extends java.lang.Object implements org.waveprotocol.wave.model.util.IdentityMap$ProcV
{
    final org.waveprotocol.wave.client.editor.EditorImpl this$0;

    void <init>(org.waveprotocol.wave.client.editor.EditorImpl)
    {
        org.waveprotocol.wave.client.editor.EditorImpl$15 r0;
        org.waveprotocol.wave.client.editor.EditorImpl r1;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$15;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorImpl;

        r0.<org.waveprotocol.wave.client.editor.EditorImpl$15: org.waveprotocol.wave.client.editor.EditorImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(com.google.gwt.dom.client.Element, java.lang.Integer)
    {
        com.google.gwt.dom.client.Element r0;
        int $i0;
        java.lang.Integer r1;
        org.waveprotocol.wave.client.editor.EditorImpl$15 r2;

        r2 := @this: org.waveprotocol.wave.client.editor.EditorImpl$15;

        r0 := @parameter0: com.google.gwt.dom.client.Element;

        r1 := @parameter1: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.google.gwt.dom.client.Element: void setScrollTop(int)>($i0);

        return;
    }

    public volatile void apply(java.lang.Object, java.lang.Object)
    {
        com.google.gwt.dom.client.Element $r4;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.EditorImpl$15 r0;
        java.lang.Integer $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$15;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.google.gwt.dom.client.Element) r1;

        $r3 = (java.lang.Integer) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.EditorImpl$15: void apply(com.google.gwt.dom.client.Element,java.lang.Integer)>($r4, $r3);

        return;
    }
}
