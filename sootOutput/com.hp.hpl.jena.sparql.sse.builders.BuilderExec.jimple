public class com.hp.hpl.jena.sparql.sse.builders.BuilderExec extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderExec r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderExec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        com.hp.hpl.jena.sparql.sse.Item $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.sse.SSE: com.hp.hpl.jena.sparql.sse.Item readFile(java.lang.String)>("SSE/all.sse");

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderExec: void exec(com.hp.hpl.jena.sparql.sse.Item)>($r0);

        return;
    }

    public static void exec(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r11;
        com.hp.hpl.jena.sparql.sse.builders.BuildException $r12;
        java.lang.String $r3, $r6, $r15, $r17;
        com.hp.hpl.jena.sparql.algebra.Op $r10;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.sparql.sse.ItemList $r1;
        com.hp.hpl.jena.sparql.sse.Item r0, $r7, $r9;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r8;
        java.lang.StringBuilder $r2, $r4, $r5, $r13, $r14, $r16;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Attempt to build evaluation from a plain node");

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z1 == 0 goto label2;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Attempt to build evaluation from a bare symbol");

     label2:
        $z2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>("exec");

        if $z2 != 0 goto label3;

        $r12 = new com.hp.hpl.jena.sparql.sse.builders.BuildException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wanted (exec...) : got: ");

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.hp.hpl.jena.sparql.sse.builders.BuildException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label3:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have 2 components");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void checkLength(int,com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(3, $r1, $r6);

        $r7 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(1);

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderGraph: com.hp.hpl.jena.sparql.core.DatasetGraph buildDataset(com.hp.hpl.jena.sparql.sse.Item)>($r7);

        $r9 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(2);

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.Item)>($r9);

        $r11 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_TEXT>;

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void execute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>($r10, $r8, $r11);

        return;
    }
}
