public abstract class arq.cmdline.CmdArgModule extends arq.cmdline.CmdMain
{
    java.util.List modules;

    protected void <init>(java.lang.String[])
    {
        arq.cmdline.CmdArgModule r0;
        java.lang.String[] r1;
        java.util.ArrayList $r2;

        r0 := @this: arq.cmdline.CmdArgModule;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.cmdline.CmdMain: void <init>(java.lang.String[])>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<arq.cmdline.CmdArgModule: java.util.List modules> = $r2;

        return;
    }

    protected void addModule(arq.cmdline.ArgModuleGeneral)
    {
        arq.cmdline.CmdArgModule r0;
        java.util.List $r2;
        arq.cmdline.ArgModuleGeneral r1;

        r0 := @this: arq.cmdline.CmdArgModule;

        r1 := @parameter0: arq.cmdline.ArgModuleGeneral;

        $r2 = r0.<arq.cmdline.CmdArgModule: java.util.List modules>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void process()
    {
        arq.cmdline.CmdArgModule r0;
        arq.cmdline.CmdArgModule$1 $r1;

        r0 := @this: arq.cmdline.CmdArgModule;

        specialinvoke r0.<arq.cmdline.CmdMain: void process()>();

        $r1 = new arq.cmdline.CmdArgModule$1;

        specialinvoke $r1.<arq.cmdline.CmdArgModule$1: void <init>(arq.cmdline.CmdArgModule)>(r0);

        specialinvoke r0.<arq.cmdline.CmdArgModule: void forEach(arq.cmdline.CmdArgModule$Action)>($r1);

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void processModulesAndArgs()>();

        return;
    }

    protected abstract void processModulesAndArgs();

    private void forEach(arq.cmdline.CmdArgModule$Action)
    {
        arq.cmdline.CmdArgModule r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        arq.cmdline.ArgModuleGeneral r4;
        arq.cmdline.CmdArgModule$Action r5;
        boolean $z0;

        r0 := @this: arq.cmdline.CmdArgModule;

        r5 := @parameter0: arq.cmdline.CmdArgModule$Action;

        $r1 = r0.<arq.cmdline.CmdArgModule: java.util.List modules>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (arq.cmdline.ArgModuleGeneral) $r3;

        interfaceinvoke r5.<arq.cmdline.CmdArgModule$Action: void action(arq.cmdline.CmdArgModule,arq.cmdline.ArgModuleGeneral)>(r0, r4);

        goto label1;

     label2:
        return;
    }
}
