public class org.apache.cxf.service.model.InterfaceInfo extends org.apache.cxf.service.model.AbstractDescriptionElement implements org.apache.cxf.service.model.NamedItem
{
    private static final java.util.logging.Logger LOG;
    javax.xml.namespace.QName name;
    org.apache.cxf.service.model.ServiceInfo service;
    java.util.Map operations;

    public void <init>(org.apache.cxf.service.model.ServiceInfo, javax.xml.namespace.QName)
    {
        org.apache.cxf.service.model.InterfaceInfo r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.cxf.service.model.ServiceInfo r3;
        javax.xml.namespace.QName r2;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        r3 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        r2 := @parameter1: javax.xml.namespace.QName;

        specialinvoke r0.<org.apache.cxf.service.model.AbstractDescriptionElement: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(4, 0.75F, 2);

        r0.<org.apache.cxf.service.model.InterfaceInfo: java.util.Map operations> = $r1;

        r0.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName name> = r2;

        r0.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.ServiceInfo service> = r3;

        virtualinvoke r3.<org.apache.cxf.service.model.ServiceInfo: void setInterface(org.apache.cxf.service.model.InterfaceInfo)>(r0);

        return;
    }

    public org.apache.cxf.service.model.DescriptionInfo getDescription()
    {
        org.apache.cxf.service.model.InterfaceInfo r0;
        org.apache.cxf.service.model.ServiceInfo $r1, $r2;
        org.apache.cxf.service.model.DescriptionInfo $r3;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        $r1 = r0.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.ServiceInfo service>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.ServiceInfo service>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.DescriptionInfo getDescription()>();

        return $r3;
    }

    public org.apache.cxf.service.model.ServiceInfo getService()
    {
        org.apache.cxf.service.model.ServiceInfo $r1;
        org.apache.cxf.service.model.InterfaceInfo r0;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        $r1 = r0.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.ServiceInfo service>;

        return $r1;
    }

    public void setName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        org.apache.cxf.service.model.InterfaceInfo r0;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        r1 := @parameter0: javax.xml.namespace.QName;

        r0.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName name> = r1;

        return;
    }

    public javax.xml.namespace.QName getName()
    {
        javax.xml.namespace.QName $r1;
        org.apache.cxf.service.model.InterfaceInfo r0;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        $r1 = r0.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName name>;

        return $r1;
    }

    public org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)
    {
        java.lang.Object[] $r6, $r11;
        org.apache.cxf.service.model.InterfaceInfo r1;
        org.apache.cxf.service.model.OperationInfo $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.cxf.common.i18n.Message $r5, $r10;
        java.util.logging.Logger $r7, $r12;
        java.lang.NullPointerException $r9;
        java.util.Map $r2;
        javax.xml.namespace.QName r0;
        java.lang.String $r8, $r13;
        boolean $z0;

        r1 := @this: org.apache.cxf.service.model.InterfaceInfo;

        r0 := @parameter0: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        $r10 = new org.apache.cxf.common.i18n.Message;

        $r12 = <org.apache.cxf.service.model.InterfaceInfo: java.util.logging.Logger LOG>;

        $r11 = newarray (java.lang.Object)[0];

        specialinvoke $r10.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("OPERATION.NAME.NOT.NULL", $r12, $r11);

        $r13 = virtualinvoke $r10.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $r2 = r1.<org.apache.cxf.service.model.InterfaceInfo: java.util.Map operations>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new org.apache.cxf.common.i18n.Message;

        $r7 = <org.apache.cxf.service.model.InterfaceInfo: java.util.logging.Logger LOG>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        specialinvoke $r5.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("DUPLICATED.OPERATION.NAME", $r7, $r6);

        $r8 = virtualinvoke $r5.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        $r3 = new org.apache.cxf.service.model.OperationInfo;

        specialinvoke $r3.<org.apache.cxf.service.model.OperationInfo: void <init>(org.apache.cxf.service.model.InterfaceInfo,javax.xml.namespace.QName)>(r1, r0);

        virtualinvoke r1.<org.apache.cxf.service.model.InterfaceInfo: void addOperation(org.apache.cxf.service.model.OperationInfo)>($r3);

        return $r3;
    }

    void addOperation(org.apache.cxf.service.model.OperationInfo)
    {
        org.apache.cxf.service.model.InterfaceInfo r0;
        java.util.Map $r2;
        org.apache.cxf.service.model.OperationInfo r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        $r2 = r0.<org.apache.cxf.service.model.InterfaceInfo: java.util.Map operations>;

        $r3 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public void removeOperation(org.apache.cxf.service.model.OperationInfo)
    {
        org.apache.cxf.service.model.InterfaceInfo r0;
        java.util.Map $r2;
        org.apache.cxf.service.model.OperationInfo r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        $r2 = r0.<org.apache.cxf.service.model.InterfaceInfo: java.util.Map operations>;

        $r3 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }

    public org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)
    {
        org.apache.cxf.service.model.InterfaceInfo r0;
        java.util.Map $r2;
        org.apache.cxf.service.model.OperationInfo $r4;
        java.lang.Object $r3;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.cxf.service.model.InterfaceInfo: java.util.Map operations>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.cxf.service.model.OperationInfo) $r3;

        return $r4;
    }

    public java.util.Collection getOperations()
    {
        org.apache.cxf.service.model.InterfaceInfo r0;
        java.util.Map $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: org.apache.cxf.service.model.InterfaceInfo;

        $r1 = r0.<org.apache.cxf.service.model.InterfaceInfo: java.util.Map operations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/service/model/InterfaceInfo;");

        <org.apache.cxf.service.model.InterfaceInfo: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
