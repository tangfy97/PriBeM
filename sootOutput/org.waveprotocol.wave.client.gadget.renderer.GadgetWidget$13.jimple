class org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13 extends org.waveprotocol.wave.client.scheduler.ScheduleTimer
{
    private boolean wasEditing;
    final org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0;

    void <init>(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget)
    {
        org.waveprotocol.wave.client.gadget.renderer.EditingIndicator $r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13 r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget r1, $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.client.scheduler.ScheduleTimer: void <init>()>();

        $r2 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: org.waveprotocol.wave.client.gadget.renderer.EditingIndicator access$1700(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget)>($r2);

        $z0 = interfaceinvoke $r3.<org.waveprotocol.wave.client.gadget.renderer.EditingIndicator: boolean isEditing()>();

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: boolean wasEditing> = $z0;

        return;
    }

    public void run()
    {
        org.waveprotocol.wave.client.gadget.renderer.EditingIndicator $r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13 r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r1, $r2, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0>;

        $z0 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: boolean access$000(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget)>($r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: void cancel()>();

        return;

     label1:
        $r2 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: org.waveprotocol.wave.client.gadget.renderer.EditingIndicator access$1700(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget)>($r2);

        $z1 = interfaceinvoke $r3.<org.waveprotocol.wave.client.gadget.renderer.EditingIndicator: boolean isEditing()>();

        $z2 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: boolean wasEditing>;

        if $z2 == $z1 goto label2;

        $r4 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0>;

        virtualinvoke $r4.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void sendMode()>();

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$13: boolean wasEditing> = $z1;

     label2:
        return;
    }
}
