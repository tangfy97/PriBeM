public class org.apache.batik.swing.JSVGScrollPane extends javax.swing.JPanel
{
    protected org.apache.batik.swing.JSVGCanvas canvas;
    protected javax.swing.JPanel horizontalPanel;
    protected javax.swing.JScrollBar vertical;
    protected javax.swing.JScrollBar horizontal;
    protected java.awt.Component cornerBox;
    protected boolean scrollbarsAlwaysVisible;
    protected org.apache.batik.swing.JSVGScrollPane$SBListener hsbListener;
    protected org.apache.batik.swing.JSVGScrollPane$SBListener vsbListener;
    protected java.awt.geom.Rectangle2D viewBox;
    protected boolean ignoreScrollChange;

    public void <init>(org.apache.batik.swing.JSVGCanvas)
    {
        javax.swing.BoundedRangeModel $r18, $r22;
        org.apache.batik.swing.JSVGScrollPane$ScrollListener $r28;
        org.apache.batik.swing.JSVGScrollPane$SBListener $r16, $r19, $r20, $r23;
        org.apache.batik.swing.JSVGCanvas r1;
        int $i0, $i1;
        java.awt.BorderLayout $r5, $r24;
        java.awt.Component $r13, $r14;
        org.apache.batik.swing.svg.SVGDocumentLoaderListener $r27;
        org.apache.batik.swing.JSVGScrollPane r0;
        java.awt.Dimension $r8, $r10, $r12;
        javax.swing.JScrollBar $r2, $r3, $r6, $r9, $r11, $r17, $r21, $r25;
        javax.swing.JPanel $r4, $r7, $r15, $r26;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        r1 := @parameter0: org.apache.batik.swing.JSVGCanvas;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        r0.<org.apache.batik.swing.JSVGScrollPane: boolean scrollbarsAlwaysVisible> = 0;

        r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox> = null;

        r0.<org.apache.batik.swing.JSVGScrollPane: boolean ignoreScrollChange> = 0;

        r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas> = r1;

        virtualinvoke r1.<org.apache.batik.swing.svg.AbstractJSVGComponent: void setRecenterOnResize(boolean)>(0);

        $r2 = new javax.swing.JScrollBar;

        specialinvoke $r2.<javax.swing.JScrollBar: void <init>(int,int,int,int,int)>(1, 0, 0, 0, 0);

        r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical> = $r2;

        $r3 = new javax.swing.JScrollBar;

        specialinvoke $r3.<javax.swing.JScrollBar: void <init>(int,int,int,int,int)>(0, 0, 0, 0, 0);

        r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal> = $r3;

        $r4 = new javax.swing.JPanel;

        $r5 = new java.awt.BorderLayout;

        specialinvoke $r5.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r4.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r5);

        r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel> = $r4;

        $r7 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel>;

        $r6 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        virtualinvoke $r7.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r6, "Center");

        $r8 = new java.awt.Dimension;

        $r9 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $r10 = virtualinvoke $r9.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $i0 = $r10.<java.awt.Dimension: int width>;

        $r11 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $r12 = virtualinvoke $r11.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $i1 = $r12.<java.awt.Dimension: int height>;

        specialinvoke $r8.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        $r13 = staticinvoke <javax.swing.Box: java.awt.Component createRigidArea(java.awt.Dimension)>($r8);

        r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.Component cornerBox> = $r13;

        $r15 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel>;

        $r14 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.Component cornerBox>;

        virtualinvoke $r15.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r14, "East");

        $r16 = virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGScrollPane$SBListener createScrollBarListener(boolean)>(0);

        r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGScrollPane$SBListener hsbListener> = $r16;

        $r17 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $r18 = virtualinvoke $r17.<javax.swing.JScrollBar: javax.swing.BoundedRangeModel getModel()>();

        $r19 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGScrollPane$SBListener hsbListener>;

        interfaceinvoke $r18.<javax.swing.BoundedRangeModel: void addChangeListener(javax.swing.event.ChangeListener)>($r19);

        $r20 = virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGScrollPane$SBListener createScrollBarListener(boolean)>(1);

        r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGScrollPane$SBListener vsbListener> = $r20;

        $r21 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $r22 = virtualinvoke $r21.<javax.swing.JScrollBar: javax.swing.BoundedRangeModel getModel()>();

        $r23 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGScrollPane$SBListener vsbListener>;

        interfaceinvoke $r22.<javax.swing.BoundedRangeModel: void addChangeListener(javax.swing.event.ChangeListener)>($r23);

        virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: void updateScrollbarState(boolean,boolean)>(0, 0);

        $r24 = new java.awt.BorderLayout;

        specialinvoke $r24.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke r0.<java.awt.Container: void setLayout(java.awt.LayoutManager)>($r24);

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>(r1, "Center");

        $r25 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r25, "East");

        $r26 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel>;

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r26, "South");

        $r27 = virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.svg.SVGDocumentLoaderListener createLoadListener()>();

        virtualinvoke r1.<org.apache.batik.swing.svg.AbstractJSVGComponent: void addSVGDocumentLoaderListener(org.apache.batik.swing.svg.SVGDocumentLoaderListener)>($r27);

        $r28 = virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGScrollPane$ScrollListener createScrollListener()>();

        virtualinvoke r0.<java.awt.Component: void addComponentListener(java.awt.event.ComponentListener)>($r28);

        virtualinvoke r1.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void addGVTTreeRendererListener(org.apache.batik.swing.gvt.GVTTreeRendererListener)>($r28);

        virtualinvoke r1.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void addJGVTComponentListener(org.apache.batik.swing.gvt.JGVTComponentListener)>($r28);

        virtualinvoke r1.<org.apache.batik.swing.svg.AbstractJSVGComponent: void addGVTTreeBuilderListener(org.apache.batik.swing.svg.GVTTreeBuilderListener)>($r28);

        virtualinvoke r1.<org.apache.batik.swing.svg.AbstractJSVGComponent: void addUpdateManagerListener(org.apache.batik.bridge.UpdateManagerListener)>($r28);

        return;
    }

    public boolean getScrollbarsAlwaysVisible()
    {
        org.apache.batik.swing.JSVGScrollPane r0;
        boolean $z0;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        $z0 = r0.<org.apache.batik.swing.JSVGScrollPane: boolean scrollbarsAlwaysVisible>;

        return $z0;
    }

    public void setScrollbarsAlwaysVisible(boolean)
    {
        org.apache.batik.swing.JSVGScrollPane r0;
        boolean z0;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.swing.JSVGScrollPane: boolean scrollbarsAlwaysVisible> = z0;

        virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: void resizeScrollBars()>();

        return;
    }

    protected org.apache.batik.swing.JSVGScrollPane$SBListener createScrollBarListener(boolean)
    {
        org.apache.batik.swing.JSVGScrollPane$SBListener $r0;
        org.apache.batik.swing.JSVGScrollPane r1;
        boolean z0;

        r1 := @this: org.apache.batik.swing.JSVGScrollPane;

        z0 := @parameter0: boolean;

        $r0 = new org.apache.batik.swing.JSVGScrollPane$SBListener;

        specialinvoke $r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: void <init>(org.apache.batik.swing.JSVGScrollPane,boolean)>(r1, z0);

        return $r0;
    }

    protected org.apache.batik.swing.JSVGScrollPane$ScrollListener createScrollListener()
    {
        org.apache.batik.swing.JSVGScrollPane$ScrollListener $r0;
        org.apache.batik.swing.JSVGScrollPane r1;

        r1 := @this: org.apache.batik.swing.JSVGScrollPane;

        $r0 = new org.apache.batik.swing.JSVGScrollPane$ScrollListener;

        specialinvoke $r0.<org.apache.batik.swing.JSVGScrollPane$ScrollListener: void <init>(org.apache.batik.swing.JSVGScrollPane)>(r1);

        return $r0;
    }

    protected org.apache.batik.swing.svg.SVGDocumentLoaderListener createLoadListener()
    {
        org.apache.batik.swing.JSVGScrollPane$SVGScrollDocumentLoaderListener $r0;
        org.apache.batik.swing.JSVGScrollPane r1;

        r1 := @this: org.apache.batik.swing.JSVGScrollPane;

        $r0 = new org.apache.batik.swing.JSVGScrollPane$SVGScrollDocumentLoaderListener;

        specialinvoke $r0.<org.apache.batik.swing.JSVGScrollPane$SVGScrollDocumentLoaderListener: void <init>(org.apache.batik.swing.JSVGScrollPane)>(r1);

        return $r0;
    }

    public org.apache.batik.swing.JSVGCanvas getCanvas()
    {
        org.apache.batik.swing.JSVGScrollPane r0;
        org.apache.batik.swing.JSVGCanvas $r1;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        return $r1;
    }

    public void reset()
    {
        org.apache.batik.swing.JSVGScrollPane r0;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox> = null;

        virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: void updateScrollbarState(boolean,boolean)>(0, 0);

        virtualinvoke r0.<javax.swing.JComponent: void revalidate()>();

        return;
    }

    protected void setScrollPosition()
    {
        java.awt.Rectangle $r8;
        java.awt.geom.Rectangle2D $r1, $r6;
        org.apache.batik.swing.JSVGCanvas $r2, $r4, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        double $d0, $d1;
        java.awt.Shape $r7;
        java.awt.geom.AffineTransform $r3, $r5, $r11, $r13, $r14, r15, r16;
        org.apache.batik.swing.JSVGScrollPane r0;
        javax.swing.JScrollBar $r9, $r10;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: void checkAndSetViewBoxRect()>();

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        $r3 = virtualinvoke $r2.<org.apache.batik.swing.gvt.AbstractJGVTComponent: java.awt.geom.AffineTransform getRenderingTransform()>();

        r15 = $r3;

        $r4 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        $r5 = virtualinvoke $r4.<org.apache.batik.swing.svg.AbstractJSVGComponent: java.awt.geom.AffineTransform getViewBoxTransform()>();

        r16 = $r5;

        if $r3 != null goto label2;

        $r14 = new java.awt.geom.AffineTransform;

        specialinvoke $r14.<java.awt.geom.AffineTransform: void <init>()>();

        r15 = $r14;

     label2:
        if $r5 != null goto label3;

        $r13 = new java.awt.geom.AffineTransform;

        specialinvoke $r13.<java.awt.geom.AffineTransform: void <init>()>();

        r16 = $r13;

     label3:
        $r6 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox>;

        $r7 = virtualinvoke r16.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r6);

        $r8 = interfaceinvoke $r7.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        i10 = 0;

        i11 = 0;

        $i0 = $r8.<java.awt.Rectangle: int x>;

        if $i0 >= 0 goto label4;

        $i9 = $r8.<java.awt.Rectangle: int x>;

        i10 = 0 - $i9;

     label4:
        $i1 = $r8.<java.awt.Rectangle: int y>;

        if $i1 >= 0 goto label5;

        $i6 = $r8.<java.awt.Rectangle: int y>;

        i11 = 0 - $i6;

     label5:
        $r9 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $i2 = virtualinvoke $r9.<javax.swing.JScrollBar: int getValue()>();

        $i7 = $i2 - i10;

        $r10 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $i3 = virtualinvoke $r10.<javax.swing.JScrollBar: int getValue()>();

        $i8 = $i3 - i11;

        $i4 = neg $i7;

        $d1 = (double) $i4;

        $i5 = neg $i8;

        $d0 = (double) $i5;

        $r11 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d1, $d0);

        virtualinvoke r15.<java.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)>($r11);

        $r12 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        virtualinvoke $r12.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void setRenderingTransform(java.awt.geom.AffineTransform)>(r15);

        return;
    }

    protected void resizeScrollBars()
    {
        java.awt.geom.Rectangle2D $r1, $r4;
        org.apache.batik.swing.JSVGCanvas $r2;
        java.awt.Shape $r5;
        java.awt.geom.AffineTransform $r3, $r17, r18;
        org.apache.batik.swing.JSVGScrollPane r0;
        java.awt.Dimension $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        javax.swing.JPanel $r14;
        java.awt.Rectangle $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        javax.swing.JScrollBar $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        r0.<org.apache.batik.swing.JSVGScrollPane: boolean ignoreScrollChange> = 1;

        virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: void checkAndSetViewBoxRect()>();

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        $r3 = virtualinvoke $r2.<org.apache.batik.swing.svg.AbstractJSVGComponent: java.awt.geom.AffineTransform getViewBoxTransform()>();

        r18 = $r3;

        if $r3 != null goto label2;

        $r17 = new java.awt.geom.AffineTransform;

        specialinvoke $r17.<java.awt.geom.AffineTransform: void <init>()>();

        r18 = $r17;

     label2:
        $r4 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox>;

        $r5 = virtualinvoke r18.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r4);

        $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i16 = $r6.<java.awt.Rectangle: int width>;

        i18 = $i16;

        $i17 = $r6.<java.awt.Rectangle: int height>;

        i19 = $i17;

        i20 = 0;

        i21 = 0;

        $i0 = $r6.<java.awt.Rectangle: int x>;

        if $i0 <= 0 goto label3;

        $i15 = $r6.<java.awt.Rectangle: int x>;

        i18 = $i16 + $i15;

        goto label4;

     label3:
        $i1 = $r6.<java.awt.Rectangle: int x>;

        i20 = 0 - $i1;

     label4:
        $i2 = $r6.<java.awt.Rectangle: int y>;

        if $i2 <= 0 goto label5;

        $i14 = $r6.<java.awt.Rectangle: int y>;

        i19 = $i17 + $i14;

        goto label6;

     label5:
        $i3 = $r6.<java.awt.Rectangle: int y>;

        i21 = 0 - $i3;

     label6:
        $r7 = virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.Dimension updateScrollbarVisibility(int,int,int,int)>(i20, i21, i18, i19);

        $r8 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $i4 = $r7.<java.awt.Dimension: int height>;

        virtualinvoke $r8.<javax.swing.JScrollBar: void setValues(int,int,int,int)>(i21, $i4, 0, i19);

        $r9 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $i5 = $r7.<java.awt.Dimension: int width>;

        virtualinvoke $r9.<javax.swing.JScrollBar: void setValues(int,int,int,int)>(i20, $i5, 0, i18);

        $r10 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $i6 = $r7.<java.awt.Dimension: int height>;

        $f0 = (float) $i6;

        $f1 = 0.9F * $f0;

        $i7 = (int) $f1;

        virtualinvoke $r10.<javax.swing.JScrollBar: void setBlockIncrement(int)>($i7);

        $r11 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $i8 = $r7.<java.awt.Dimension: int width>;

        $f2 = (float) $i8;

        $f3 = 0.9F * $f2;

        $i9 = (int) $f3;

        virtualinvoke $r11.<javax.swing.JScrollBar: void setBlockIncrement(int)>($i9);

        $r12 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $i10 = $r7.<java.awt.Dimension: int height>;

        $f4 = (float) $i10;

        $f5 = 0.2F * $f4;

        $i11 = (int) $f5;

        virtualinvoke $r12.<javax.swing.JScrollBar: void setUnitIncrement(int)>($i11);

        $r13 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $i12 = $r7.<java.awt.Dimension: int width>;

        $f6 = (float) $i12;

        $f7 = 0.2F * $f6;

        $i13 = (int) $f7;

        virtualinvoke $r13.<javax.swing.JScrollBar: void setUnitIncrement(int)>($i13);

        virtualinvoke r0.<java.awt.Container: void doLayout()>();

        $r14 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel>;

        virtualinvoke $r14.<java.awt.Container: void doLayout()>();

        $r15 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        virtualinvoke $r15.<java.awt.Container: void doLayout()>();

        $r16 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        virtualinvoke $r16.<java.awt.Container: void doLayout()>();

        r0.<org.apache.batik.swing.JSVGScrollPane: boolean ignoreScrollChange> = 0;

        return;
    }

    protected java.awt.Dimension updateScrollbarVisibility(int, int, int, int)
    {
        org.apache.batik.swing.JSVGCanvas $r1;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, $z7, $z9, $z10, $z11, $z12;
        org.apache.batik.swing.JSVGScrollPane r0;
        java.awt.Dimension $r2, $r5, $r8, $r9, $r11, $r13;
        javax.swing.JPanel $r6;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, i8, i9, i10, i11, $i12, $i13;
        javax.swing.JScrollBar $r3, $r4, $r7, $r10, $r12;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        i5 := @parameter0: int;

        i4 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        $r2 = virtualinvoke $r1.<java.awt.Component: java.awt.Dimension getSize()>();

        i8 = $r2.<java.awt.Dimension: int width>;

        i9 = $r2.<java.awt.Dimension: int width>;

        i10 = $r2.<java.awt.Dimension: int height>;

        i11 = $r2.<java.awt.Dimension: int height>;

        $r3 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $z0 = virtualinvoke $r3.<java.awt.Component: boolean isVisible()>();

        if $z0 == 0 goto label01;

        $r12 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $r13 = virtualinvoke $r12.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $i7 = $r13.<java.awt.Dimension: int width>;

        i8 = i8 + $i7;

        goto label02;

     label01:
        $r4 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $r5 = virtualinvoke $r4.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $i0 = $r5.<java.awt.Dimension: int width>;

        i9 = i9 - $i0;

     label02:
        $r6 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel>;

        $z1 = virtualinvoke $r6.<java.awt.Component: boolean isVisible()>();

        if $z1 == 0 goto label03;

        $r10 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $r11 = virtualinvoke $r10.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $i6 = $r11.<java.awt.Dimension: int height>;

        i10 = i10 + $i6;

        goto label04;

     label03:
        $r7 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $r8 = virtualinvoke $r7.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $i1 = $r8.<java.awt.Dimension: int height>;

        i11 = i11 - $i1;

     label04:
        $r9 = new java.awt.Dimension;

        specialinvoke $r9.<java.awt.Dimension: void <init>()>();

        $z2 = r0.<org.apache.batik.swing.JSVGScrollPane: boolean scrollbarsAlwaysVisible>;

        if $z2 == 0 goto label09;

        if i2 <= i9 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z4 = $z3;

        if i3 <= i11 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z6 = $z5;

        $r9.<java.awt.Dimension: int width> = i9;

        $r9.<java.awt.Dimension: int height> = i11;

        goto label26;

     label09:
        if i2 > i8 goto label10;

        if i5 == 0 goto label11;

     label10:
        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        z4 = $z7;

        if i3 > i10 goto label13;

        if i4 == 0 goto label14;

     label13:
        $z12 = 1;

        $z11 = 1;

        goto label15;

     label14:
        $z12 = 0;

        $z11 = 0;

     label15:
        z6 = $z11;

        if $z12 == 0 goto label18;

        if z4 != 0 goto label18;

        if i2 <= i9 goto label16;

        $z9 = 1;

        goto label17;

     label16:
        $z9 = 0;

     label17:
        z4 = $z9;

        goto label21;

     label18:
        if z4 == 0 goto label21;

        if z6 != 0 goto label21;

        if i3 <= i11 goto label19;

        $z10 = 1;

        goto label20;

     label19:
        $z10 = 0;

     label20:
        z6 = $z10;

     label21:
        if z4 == 0 goto label22;

        $i12 = i9;

        goto label23;

     label22:
        $i12 = i8;

     label23:
        $r9.<java.awt.Dimension: int width> = $i12;

        if z6 == 0 goto label24;

        $i13 = i11;

        goto label25;

     label24:
        $i13 = i10;

     label25:
        $r9.<java.awt.Dimension: int height> = $i13;

     label26:
        virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: void updateScrollbarState(boolean,boolean)>(z4, z6);

        return $r9;
    }

    protected void updateScrollbarState(boolean, boolean)
    {
        java.awt.Component $r7, $r8;
        org.apache.batik.swing.JSVGScrollPane r0;
        javax.swing.JScrollBar $r1, $r2, $r4, $r6;
        javax.swing.JPanel $r3, $r5;
        boolean z0, z1, $z2, $z3;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        virtualinvoke $r1.<javax.swing.JScrollBar: void setEnabled(boolean)>(z0);

        $r2 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        virtualinvoke $r2.<javax.swing.JScrollBar: void setEnabled(boolean)>(z1);

        $z2 = r0.<org.apache.batik.swing.JSVGScrollPane: boolean scrollbarsAlwaysVisible>;

        if $z2 == 0 goto label1;

        $r5 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel>;

        virtualinvoke $r5.<javax.swing.JComponent: void setVisible(boolean)>(1);

        $r6 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        virtualinvoke $r6.<javax.swing.JComponent: void setVisible(boolean)>(1);

        $r7 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.Component cornerBox>;

        virtualinvoke $r7.<java.awt.Component: void setVisible(boolean)>(1);

        goto label4;

     label1:
        $r3 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JPanel horizontalPanel>;

        virtualinvoke $r3.<javax.swing.JComponent: void setVisible(boolean)>(z0);

        $r4 = r0.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        virtualinvoke $r4.<javax.swing.JComponent: void setVisible(boolean)>(z1);

        $r8 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.Component cornerBox>;

        if z0 == 0 goto label2;

        if z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        virtualinvoke $r8.<java.awt.Component: void setVisible(boolean)>($z3);

     label4:
        return;
    }

    protected void checkAndSetViewBoxRect()
    {
        org.apache.batik.swing.JSVGScrollPane r0;
        java.awt.geom.Rectangle2D $r1, $r2;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D getViewBoxRect()>();

        r0.<org.apache.batik.swing.JSVGScrollPane: java.awt.geom.Rectangle2D viewBox> = $r2;

        return;
    }

    protected java.awt.geom.Rectangle2D getViewBoxRect()
    {
        org.w3c.dom.svg.SVGDocument $r2;
        java.awt.geom.Rectangle2D $r7, $r9;
        float[] $r10;
        java.awt.geom.Rectangle2D$Float $r11;
        org.apache.batik.swing.JSVGCanvas $r1, $r5;
        int $i0;
        java.lang.String $r4;
        org.w3c.dom.svg.SVGSVGElement $r3;
        org.apache.batik.gvt.GraphicsNode $r6;
        org.apache.batik.swing.JSVGScrollPane r0;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r8;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        $r2 = virtualinvoke $r1.<org.apache.batik.swing.svg.AbstractJSVGComponent: org.w3c.dom.svg.SVGDocument getSVGDocument()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<org.w3c.dom.svg.SVGDocument: org.w3c.dom.svg.SVGSVGElement getRootElement()>();

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = interfaceinvoke $r3.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "viewBox");

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $r10 = staticinvoke <org.apache.batik.bridge.ViewBox: float[] parseViewBoxAttribute(org.w3c.dom.Element,java.lang.String,org.apache.batik.bridge.BridgeContext)>($r3, $r4, null);

        $r11 = new java.awt.geom.Rectangle2D$Float;

        $f3 = $r10[0];

        $f2 = $r10[1];

        $f1 = $r10[2];

        $f0 = $r10[3];

        specialinvoke $r11.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r11;

     label3:
        $r5 = r0.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        $r6 = virtualinvoke $r5.<org.apache.batik.swing.gvt.AbstractJGVTComponent: org.apache.batik.gvt.GraphicsNode getGraphicsNode()>();

        if $r6 != null goto label4;

        return null;

     label4:
        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getBounds()>();

        if $r7 != null goto label5;

        return null;

     label5:
        $r8 = virtualinvoke $r7.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r9 = (java.awt.geom.Rectangle2D) $r8;

        return $r9;
    }

    public void scaleChange(float)
    {
        float f0;
        org.apache.batik.swing.JSVGScrollPane r0;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane;

        f0 := @parameter0: float;

        return;
    }
}
