public abstract class org.apache.cxf.transport.AbstractMultiplexDestination extends org.apache.cxf.transport.AbstractDestination implements org.apache.cxf.transport.MultiplexDestination
{
    private static final javax.xml.namespace.QName MULTIPLEX_ID_QNAME;

    public void <init>(org.apache.cxf.Bus, org.apache.cxf.ws.addressing.EndpointReferenceType, org.apache.cxf.service.model.EndpointInfo)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.service.model.EndpointInfo r3;
        org.apache.cxf.ws.addressing.EndpointReferenceType r2;
        org.apache.cxf.transport.AbstractMultiplexDestination r0;

        r0 := @this: org.apache.cxf.transport.AbstractMultiplexDestination;

        r1 := @parameter0: org.apache.cxf.Bus;

        r2 := @parameter1: org.apache.cxf.ws.addressing.EndpointReferenceType;

        r3 := @parameter2: org.apache.cxf.service.model.EndpointInfo;

        specialinvoke r0.<org.apache.cxf.transport.AbstractDestination: void <init>(org.apache.cxf.Bus,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.service.model.EndpointInfo)>(r1, r2, r3);

        return;
    }

    public org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)
    {
        org.apache.cxf.Bus $r1;
        org.apache.cxf.ws.addressing.ReferenceParametersType $r6, $r7;
        org.apache.cxf.ws.addressing.EndpointReferenceType $r2, $r3, $r4;
        org.apache.cxf.transport.AbstractMultiplexDestination r0;
        org.apache.cxf.ws.addressing.ObjectFactory $r5;
        javax.xml.bind.JAXBElement $r9;
        java.util.List $r8, $r12, $r13;
        java.lang.String r10;
        javax.xml.namespace.QName $r11;

        r0 := @this: org.apache.cxf.transport.AbstractMultiplexDestination;

        r10 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.transport.AbstractMultiplexDestination: org.apache.cxf.ws.addressing.EndpointReferenceType reference>;

        $r1 = r0.<org.apache.cxf.transport.AbstractMultiplexDestination: org.apache.cxf.Bus bus>;

        $r3 = staticinvoke <org.apache.cxf.wsdl.EndpointReferenceUtils: org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)>($r2, $r1);

        $r4 = staticinvoke <org.apache.cxf.wsdl.EndpointReferenceUtils: org.apache.cxf.ws.addressing.EndpointReferenceType duplicate(org.apache.cxf.ws.addressing.EndpointReferenceType)>($r3);

        $r5 = new org.apache.cxf.ws.addressing.ObjectFactory;

        specialinvoke $r5.<org.apache.cxf.ws.addressing.ObjectFactory: void <init>()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.ws.addressing.ObjectFactory: org.apache.cxf.ws.addressing.ReferenceParametersType createReferenceParametersType()>();

        $r7 = virtualinvoke $r4.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.ReferenceParametersType getReferenceParameters()>();

        if null == $r7 goto label1;

        $r12 = virtualinvoke $r6.<org.apache.cxf.ws.addressing.ReferenceParametersType: java.util.List getAny()>();

        $r13 = virtualinvoke $r7.<org.apache.cxf.ws.addressing.ReferenceParametersType: java.util.List getAny()>();

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r13);

     label1:
        $r8 = virtualinvoke $r6.<org.apache.cxf.ws.addressing.ReferenceParametersType: java.util.List getAny()>();

        $r9 = new javax.xml.bind.JAXBElement;

        $r11 = <org.apache.cxf.transport.AbstractMultiplexDestination: javax.xml.namespace.QName MULTIPLEX_ID_QNAME>;

        specialinvoke $r9.<javax.xml.bind.JAXBElement: void <init>(javax.xml.namespace.QName,java.lang.Class,java.lang.Object)>($r11, class "Ljava/lang/String;", r10);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        virtualinvoke $r4.<org.apache.cxf.ws.addressing.EndpointReferenceType: void setReferenceParameters(org.apache.cxf.ws.addressing.ReferenceParametersType)>($r6);

        return $r4;
    }

    public java.lang.String getId(java.util.Map)
    {
        org.apache.cxf.ws.addressing.EndpointReferenceType $r3;
        org.apache.cxf.transport.AbstractMultiplexDestination r4;
        java.util.Map r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r5;
        java.lang.String r6;
        org.apache.cxf.ws.addressing.AddressingProperties r2;

        r4 := @this: org.apache.cxf.transport.AbstractMultiplexDestination;

        r0 := @parameter0: java.util.Map;

        r6 = null;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("javax.xml.ws.addressing.context.inbound");

        r2 = (org.apache.cxf.ws.addressing.AddressingProperties) $r1;

        if null == r2 goto label1;

        $r3 = interfaceinvoke r2.<org.apache.cxf.ws.addressing.AddressingProperties: org.apache.cxf.ws.addressing.EndpointReferenceType getToEndpointReference()>();

        if null == $r3 goto label1;

        $r5 = <org.apache.cxf.transport.AbstractMultiplexDestination: javax.xml.namespace.QName MULTIPLEX_ID_QNAME>;

        r6 = specialinvoke r4.<org.apache.cxf.transport.AbstractMultiplexDestination: java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)>($r5, $r3);

     label1:
        return r6;
    }

    private java.lang.String extractStringElementFromAny(javax.xml.namespace.QName, org.apache.cxf.ws.addressing.EndpointReferenceType)
    {
        org.apache.cxf.ws.addressing.ReferenceParametersType $r1, $r2;
        org.apache.cxf.ws.addressing.EndpointReferenceType r0;
        java.util.Iterator $r4;
        org.apache.cxf.transport.AbstractMultiplexDestination r10;
        javax.xml.bind.JAXBElement r6;
        java.util.List $r3;
        java.lang.Object $r5, $r9;
        javax.xml.namespace.QName $r7, r8;
        java.lang.String r11;
        boolean $z0, $z1, $z2;

        r10 := @this: org.apache.cxf.transport.AbstractMultiplexDestination;

        r8 := @parameter0: javax.xml.namespace.QName;

        r0 := @parameter1: org.apache.cxf.ws.addressing.EndpointReferenceType;

        r11 = null;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.ReferenceParametersType getReferenceParameters()>();

        if null == $r1 goto label3;

        $r2 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.ReferenceParametersType getReferenceParameters()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.ws.addressing.ReferenceParametersType: java.util.List getAny()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r5 instanceof javax.xml.bind.JAXBElement;

        if $z1 == 0 goto label2;

        r6 = (javax.xml.bind.JAXBElement) $r5;

        $r7 = virtualinvoke r6.<javax.xml.bind.JAXBElement: javax.xml.namespace.QName getName()>();

        $z2 = virtualinvoke $r7.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label2;

        $r9 = virtualinvoke r6.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

        r11 = (java.lang.String) $r9;

     label2:
        goto label1;

     label3:
        return r11;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r0;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://multiplex.transport.cxf.apache.org", "id");

        <org.apache.cxf.transport.AbstractMultiplexDestination: javax.xml.namespace.QName MULTIPLEX_ID_QNAME> = $r0;

        return;
    }
}
