public class org.apache.http.message.HeaderGroup extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.List headers;

    public void <init>()
    {
        org.apache.http.message.HeaderGroup r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.http.message.HeaderGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(16);

        r0.<org.apache.http.message.HeaderGroup: java.util.List headers> = $r1;

        return;
    }

    public void clear()
    {
        java.util.List $r1;
        org.apache.http.message.HeaderGroup r0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void addHeader(org.apache.http.Header)
    {
        java.util.List $r2;
        org.apache.http.message.HeaderGroup r1;
        org.apache.http.Header r0;

        r1 := @this: org.apache.http.message.HeaderGroup;

        r0 := @parameter0: org.apache.http.Header;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public void removeHeader(org.apache.http.Header)
    {
        java.util.List $r2;
        org.apache.http.message.HeaderGroup r1;
        org.apache.http.Header r0;

        r1 := @this: org.apache.http.message.HeaderGroup;

        r0 := @parameter0: org.apache.http.Header;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public void updateHeader(org.apache.http.Header)
    {
        org.apache.http.message.HeaderGroup r1;
        org.apache.http.Header r0, r6;
        java.util.List $r2, $r3, $r4, $r9;
        int $i0, i1;
        java.lang.Object $r5;
        java.lang.String $r7, $r8;
        boolean $z0;

        r1 := @this: org.apache.http.message.HeaderGroup;

        r0 := @parameter0: org.apache.http.Header;

        if r0 != null goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $r2 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r4 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (org.apache.http.Header) $r5;

        $r7 = interfaceinvoke r6.<org.apache.http.Header: java.lang.String getName()>();

        $r8 = interfaceinvoke r0.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z0 == 0 goto label3;

        $r9 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r9.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r0);

        return;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r3 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public void setHeaders(org.apache.http.Header[])
    {
        org.apache.http.Header[] r1;
        java.util.List $r3;
        org.apache.http.message.HeaderGroup r0;
        int $i0, i1;
        org.apache.http.Header $r2;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: org.apache.http.Header[];

        virtualinvoke r0.<org.apache.http.message.HeaderGroup: void clear()>();

        if r1 != null goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r2 = r1[i1];

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public org.apache.http.Header getCondensedHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header $r4, $r10, $r12;
        java.util.Locale $r7;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, $r5, $r8, $r9, $r11;
        org.apache.http.Header[] $r2;
        org.apache.http.util.CharArrayBuffer $r3;
        org.apache.http.message.BasicHeader $r6;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>(r1);

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof $r2;

        if $i1 != 1 goto label2;

        $r12 = $r2[0];

        return $r12;

     label2:
        $r3 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r3.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        $r4 = $r2[0];

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        i3 = 1;

     label3:
        $i2 = lengthof $r2;

        if i3 >= $i2 goto label4;

        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(", ");

        $r10 = $r2[i3];

        $r11 = interfaceinvoke $r10.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r11);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r6 = new org.apache.http.message.BasicHeader;

        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        $r9 = virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>($r8, $r9);

        return $r6;
    }

    public org.apache.http.Header[] getHeaders(java.lang.String)
    {
        org.apache.http.Header[] $r3, $r5;
        org.apache.http.message.HeaderGroup r1;
        java.lang.Object[] $r4;
        org.apache.http.Header r8;
        java.util.ArrayList $r0;
        java.util.List $r2, $r6;
        int $i0, $i1, i2;
        java.lang.Object $r7;
        java.lang.String $r9, r10;
        boolean $z0;

        r1 := @this: org.apache.http.message.HeaderGroup;

        r10 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $r2 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r6 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (org.apache.http.Header) $r7;

        $r9 = interfaceinvoke r8.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z0 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r8);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r3 = newarray (org.apache.http.Header)[$i1];

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.http.Header[]) $r4;

        return $r5;
    }

    public org.apache.http.Header getFirstHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header r4;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r6 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke r4.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.http.Header getLastHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header r4;
        java.util.List $r1, $r2;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke r4.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return null;
    }

    public org.apache.http.Header[] getAllHeaders()
    {
        org.apache.http.Header[] $r3, $r5;
        java.util.List $r1, $r2;
        org.apache.http.message.HeaderGroup r0;
        java.lang.Object[] $r4;
        int $i0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.http.Header)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.http.Header[]) $r4;

        return $r5;
    }

    public boolean containsHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header r4;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r6 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke r4.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public org.apache.http.HeaderIterator iterator()
    {
        java.util.List $r2;
        org.apache.http.message.HeaderGroup r1;
        org.apache.http.message.BasicListHeaderIterator $r0;

        r1 := @this: org.apache.http.message.HeaderGroup;

        $r0 = new org.apache.http.message.BasicListHeaderIterator;

        $r2 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r0.<org.apache.http.message.BasicListHeaderIterator: void <init>(java.util.List,java.lang.String)>($r2, null);

        return $r0;
    }

    public org.apache.http.HeaderIterator iterator(java.lang.String)
    {
        java.util.List $r3;
        org.apache.http.message.HeaderGroup r1;
        org.apache.http.message.BasicListHeaderIterator $r0;
        java.lang.String r2;

        r1 := @this: org.apache.http.message.HeaderGroup;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.http.message.BasicListHeaderIterator;

        $r3 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r0.<org.apache.http.message.BasicListHeaderIterator: void <init>(java.util.List,java.lang.String)>($r3, r2);

        return $r0;
    }

    public org.apache.http.message.HeaderGroup copy()
    {
        java.util.List $r2, $r3;
        org.apache.http.message.HeaderGroup $r0, r1;

        r1 := @this: org.apache.http.message.HeaderGroup;

        $r0 = new org.apache.http.message.HeaderGroup;

        specialinvoke $r0.<org.apache.http.message.HeaderGroup: void <init>()>();

        $r3 = $r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r2 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return $r0;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.util.List $r3, $r4, $r5;
        org.apache.http.message.HeaderGroup r0, r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.http.message.HeaderGroup) $r1;

        $r3 = r2.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r5 = r2.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return r2;
    }

    public java.lang.String toString()
    {
        java.util.List $r1;
        org.apache.http.message.HeaderGroup r0;
        java.lang.String $r2;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.http.message.HeaderGroup: long serialVersionUID> = 2608834160639271617L;

        return;
    }
}
