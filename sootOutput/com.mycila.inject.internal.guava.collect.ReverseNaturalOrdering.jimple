final class com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering extends com.mycila.inject.internal.guava.collect.Ordering implements java.io.Serializable
{
    static final com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering INSTANCE;
    private static final long serialVersionUID;

    public int compare(java.lang.Comparable, java.lang.Comparable)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r2;
        int $i0;
        java.lang.Comparable r0, r1;

        r2 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        if r0 != r1 goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>(r0);

        return $i0;
    }

    public com.mycila.inject.internal.guava.collect.Ordering reverse()
    {
        com.mycila.inject.internal.guava.collect.Ordering $r0;
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.Ordering: com.mycila.inject.internal.guava.collect.Ordering natural()>();

        return $r0;
    }

    public java.lang.Comparable min(java.lang.Comparable, java.lang.Comparable)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r5;
        java.lang.Comparable r0, r1, $r4;
        java.lang.Object $r3;
        com.mycila.inject.internal.guava.collect.NaturalOrdering $r2;

        r5 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        $r2 = <com.mycila.inject.internal.guava.collect.NaturalOrdering: com.mycila.inject.internal.guava.collect.NaturalOrdering INSTANCE>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.NaturalOrdering: java.lang.Object max(java.lang.Object,java.lang.Object)>(r0, r1);

        $r4 = (java.lang.Comparable) $r3;

        return $r4;
    }

    public transient java.lang.Comparable min(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable[])
    {
        com.mycila.inject.internal.guava.collect.NaturalOrdering $r4;
        java.lang.Comparable[] r3;
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r7;
        java.lang.Comparable r0, r1, r2, $r6;
        java.lang.Object $r5;

        r7 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        r2 := @parameter2: java.lang.Comparable;

        r3 := @parameter3: java.lang.Comparable[];

        $r4 = <com.mycila.inject.internal.guava.collect.NaturalOrdering: com.mycila.inject.internal.guava.collect.NaturalOrdering INSTANCE>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.NaturalOrdering: java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>(r0, r1, r2, r3);

        $r6 = (java.lang.Comparable) $r5;

        return $r6;
    }

    public java.lang.Comparable min(java.lang.Iterable)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r4;
        java.lang.Object $r2;
        java.lang.Comparable $r3;
        com.mycila.inject.internal.guava.collect.NaturalOrdering $r1;
        java.lang.Iterable r0;

        r4 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = <com.mycila.inject.internal.guava.collect.NaturalOrdering: com.mycila.inject.internal.guava.collect.NaturalOrdering INSTANCE>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.NaturalOrdering: java.lang.Object max(java.lang.Iterable)>(r0);

        $r3 = (java.lang.Comparable) $r2;

        return $r3;
    }

    public java.lang.Comparable max(java.lang.Comparable, java.lang.Comparable)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r5;
        java.lang.Comparable r0, r1, $r4;
        java.lang.Object $r3;
        com.mycila.inject.internal.guava.collect.NaturalOrdering $r2;

        r5 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        $r2 = <com.mycila.inject.internal.guava.collect.NaturalOrdering: com.mycila.inject.internal.guava.collect.NaturalOrdering INSTANCE>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.NaturalOrdering: java.lang.Object min(java.lang.Object,java.lang.Object)>(r0, r1);

        $r4 = (java.lang.Comparable) $r3;

        return $r4;
    }

    public transient java.lang.Comparable max(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable[])
    {
        com.mycila.inject.internal.guava.collect.NaturalOrdering $r4;
        java.lang.Comparable[] r3;
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r7;
        java.lang.Comparable r0, r1, r2, $r6;
        java.lang.Object $r5;

        r7 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        r2 := @parameter2: java.lang.Comparable;

        r3 := @parameter3: java.lang.Comparable[];

        $r4 = <com.mycila.inject.internal.guava.collect.NaturalOrdering: com.mycila.inject.internal.guava.collect.NaturalOrdering INSTANCE>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.NaturalOrdering: java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>(r0, r1, r2, r3);

        $r6 = (java.lang.Comparable) $r5;

        return $r6;
    }

    public java.lang.Comparable max(java.lang.Iterable)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r4;
        java.lang.Object $r2;
        java.lang.Comparable $r3;
        com.mycila.inject.internal.guava.collect.NaturalOrdering $r1;
        java.lang.Iterable r0;

        r4 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = <com.mycila.inject.internal.guava.collect.NaturalOrdering: com.mycila.inject.internal.guava.collect.NaturalOrdering INSTANCE>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.NaturalOrdering: java.lang.Object min(java.lang.Iterable)>(r0);

        $r3 = (java.lang.Comparable) $r2;

        return $r3;
    }

    private java.lang.Object readResolve()
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering $r0, r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        $r0 = <com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering INSTANCE>;

        return $r0;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        return "Ordering.natural().reverse()";
    }

    private void <init>()
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Ordering: void <init>()>();

        return;
    }

    public volatile java.lang.Object min(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;
        java.lang.Object r1, r2;
        java.lang.Comparable $r3, $r4, $r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Comparable) r1;

        $r3 = (java.lang.Comparable) r2;

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object min(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r4;
        java.lang.Comparable[] $r5;
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;
        java.lang.Object r1, r2, r3;
        java.lang.Comparable $r6, $r7, $r8, $r9;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object[];

        $r8 = (java.lang.Comparable) r1;

        $r7 = (java.lang.Comparable) r2;

        $r6 = (java.lang.Comparable) r3;

        $r5 = (java.lang.Comparable[]) r4;

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[])>($r8, $r7, $r6, $r5);

        return $r9;
    }

    public volatile java.lang.Object min(java.lang.Iterable)
    {
        java.lang.Comparable $r2;
        java.lang.Iterable r1;
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: java.lang.Comparable min(java.lang.Iterable)>(r1);

        return $r2;
    }

    public volatile java.lang.Object max(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;
        java.lang.Object r1, r2;
        java.lang.Comparable $r3, $r4, $r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Comparable) r1;

        $r3 = (java.lang.Comparable) r2;

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object max(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r4;
        java.lang.Comparable[] $r5;
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;
        java.lang.Object r1, r2, r3;
        java.lang.Comparable $r6, $r7, $r8, $r9;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object[];

        $r8 = (java.lang.Comparable) r1;

        $r7 = (java.lang.Comparable) r2;

        $r6 = (java.lang.Comparable) r3;

        $r5 = (java.lang.Comparable[]) r4;

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[])>($r8, $r7, $r6, $r5);

        return $r9;
    }

    public volatile java.lang.Object max(java.lang.Iterable)
    {
        java.lang.Comparable $r2;
        java.lang.Iterable r1;
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: java.lang.Comparable max(java.lang.Iterable)>(r1);

        return $r2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering r0;
        int $i0;
        java.lang.Object r1, r2;
        java.lang.Comparable $r3, $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Comparable) r1;

        $r3 = (java.lang.Comparable) r2;

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering $r0;

        <com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: long serialVersionUID> = 0L;

        $r0 = new com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: void <init>()>();

        <com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering: com.mycila.inject.internal.guava.collect.ReverseNaturalOrdering INSTANCE> = $r0;

        return;
    }
}
