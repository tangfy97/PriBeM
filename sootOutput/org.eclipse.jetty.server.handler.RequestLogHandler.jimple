public class org.eclipse.jetty.server.handler.RequestLogHandler extends org.eclipse.jetty.server.handler.HandlerWrapper
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private org.eclipse.jetty.server.RequestLog _requestLog;

    public void <init>()
    {
        org.eclipse.jetty.server.handler.RequestLogHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        return;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Response $r9, $r15;
        java.lang.Throwable $r11;
        long $l0;
        javax.servlet.http.HttpServletRequest r4;
        java.lang.String r3;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.server.RequestLog $r6, $r10, $r12, $r16;
        javax.servlet.http.HttpServletResponse r5;
        org.eclipse.jetty.server.handler.RequestLogHandler r2;
        javax.servlet.DispatcherType $r7, $r8, $r13, $r14;
        org.eclipse.jetty.server.AsyncContinuation $r1;

        r2 := @this: org.eclipse.jetty.server.handler.RequestLogHandler;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.eclipse.jetty.server.Request;

        r4 := @parameter2: javax.servlet.http.HttpServletRequest;

        r5 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation getAsyncContinuation()>();

        $z0 = virtualinvoke $r1.<org.eclipse.jetty.server.AsyncContinuation: boolean isInitial()>();

        if $z0 != 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setDispatchTime(long)>($l0);

     label1:
        specialinvoke r2.<org.eclipse.jetty.server.handler.HandlerWrapper: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r3, r0, r4, r5);

     label2:
        $r6 = r2.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        if $r6 == null goto label6;

        $r7 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType REQUEST>;

        $r8 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.DispatcherType getDispatcherType()>();

        $z1 = virtualinvoke $r7.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label6;

        $r10 = r2.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        $r9 = (org.eclipse.jetty.server.Response) r5;

        interfaceinvoke $r10.<org.eclipse.jetty.server.RequestLog: void log(org.eclipse.jetty.server.Request,org.eclipse.jetty.server.Response)>(r0, $r9);

        goto label6;

     label3:
        $r11 := @caughtexception;

     label4:
        $r12 = r2.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        if $r12 == null goto label5;

        $r13 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType REQUEST>;

        $r14 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.DispatcherType getDispatcherType()>();

        $z2 = virtualinvoke $r13.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label5;

        $r16 = r2.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        $r15 = (org.eclipse.jetty.server.Response) r5;

        interfaceinvoke $r16.<org.eclipse.jetty.server.RequestLog: void log(org.eclipse.jetty.server.Request,org.eclipse.jetty.server.Response)>(r0, $r15);

     label5:
        throw $r11;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setRequestLog(org.eclipse.jetty.server.RequestLog)
    {
        org.eclipse.jetty.server.RequestLog $r1, r3, $r4, $r5, $r8, $r9;
        java.lang.RuntimeException $r11;
        java.lang.Exception $r10, $r12;
        org.eclipse.jetty.server.handler.RequestLogHandler r0;
        org.eclipse.jetty.util.component.Container $r7;
        org.eclipse.jetty.util.log.Logger $r13;
        org.eclipse.jetty.server.Server $r2, $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler;

        r3 := @parameter0: org.eclipse.jetty.server.RequestLog;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        if $r1 == null goto label2;

        $r9 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        interfaceinvoke $r9.<org.eclipse.jetty.server.RequestLog: void stop()>();

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = <org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r12);

     label4:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r2 == null goto label5;

        $r6 = virtualinvoke r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.Server getServer()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r8 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        virtualinvoke $r7.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, $r8, r3, "logimpl", 1);

     label5:
        r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog> = r3;

     label6:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.RequestLogHandler: boolean isStarted()>();

        if $z0 == 0 goto label7;

        $r4 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        if $r4 == null goto label7;

        $r5 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        interfaceinvoke $r5.<org.eclipse.jetty.server.RequestLog: void start()>();

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void setServer(org.eclipse.jetty.server.Server)
    {
        org.eclipse.jetty.server.RequestLog $r1, $r6, $r10;
        org.eclipse.jetty.server.handler.RequestLogHandler r0;
        org.eclipse.jetty.util.component.Container $r5, $r9;
        org.eclipse.jetty.server.Server r2, $r3, $r4, $r7, $r8;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler;

        r2 := @parameter0: org.eclipse.jetty.server.Server;

        $r1 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        if $r1 == null goto label2;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r3 == null goto label1;

        $r7 = virtualinvoke r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r7 == r2 goto label1;

        $r8 = virtualinvoke r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.Server getServer()>();

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r10 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        virtualinvoke $r9.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, $r10, null, "logimpl", 1);

     label1:
        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void setServer(org.eclipse.jetty.server.Server)>(r2);

        if r2 == null goto label3;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.Server getServer()>();

        if r2 == $r4 goto label3;

        $r5 = virtualinvoke r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r6 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        virtualinvoke $r5.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, null, $r6, "logimpl", 1);

        goto label3;

     label2:
        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void setServer(org.eclipse.jetty.server.Server)>(r2);

     label3:
        return;
    }

    public org.eclipse.jetty.server.RequestLog getRequestLog()
    {
        org.eclipse.jetty.server.handler.RequestLogHandler r0;
        org.eclipse.jetty.server.RequestLog $r1;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        return $r1;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.RequestLogHandler r0;
        org.eclipse.jetty.server.RequestLog $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStart()>();

        $r1 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        interfaceinvoke $r2.<org.eclipse.jetty.server.RequestLog: void start()>();

     label1:
        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.RequestLogHandler r0;
        org.eclipse.jetty.server.RequestLog $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStop()>();

        $r1 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog _requestLog>;

        interfaceinvoke $r2.<org.eclipse.jetty.server.RequestLog: void stop()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/RequestLogHandler;");

        <org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
