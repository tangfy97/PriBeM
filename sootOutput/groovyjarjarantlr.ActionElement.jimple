class groovyjarjarantlr.ActionElement extends groovyjarjarantlr.AlternativeElement
{
    protected java.lang.String actionText;
    protected boolean isSemPred;

    public void <init>(groovyjarjarantlr.Grammar, groovyjarjarantlr.Token)
    {
        int $i0, $i1;
        groovyjarjarantlr.ActionElement r0;
        java.lang.String $r3;
        groovyjarjarantlr.Grammar r1;
        groovyjarjarantlr.Token r2;

        r0 := @this: groovyjarjarantlr.ActionElement;

        r1 := @parameter0: groovyjarjarantlr.Grammar;

        r2 := @parameter1: groovyjarjarantlr.Token;

        specialinvoke r0.<groovyjarjarantlr.AlternativeElement: void <init>(groovyjarjarantlr.Grammar)>(r1);

        r0.<groovyjarjarantlr.ActionElement: boolean isSemPred> = 0;

        $r3 = virtualinvoke r2.<groovyjarjarantlr.Token: java.lang.String getText()>();

        r0.<groovyjarjarantlr.ActionElement: java.lang.String actionText> = $r3;

        $i0 = virtualinvoke r2.<groovyjarjarantlr.Token: int getLine()>();

        r0.<groovyjarjarantlr.ActionElement: int line> = $i0;

        $i1 = virtualinvoke r2.<groovyjarjarantlr.Token: int getColumn()>();

        r0.<groovyjarjarantlr.ActionElement: int column> = $i1;

        return;
    }

    public void generate()
    {
        groovyjarjarantlr.ActionElement r0;
        groovyjarjarantlr.Grammar $r1;
        groovyjarjarantlr.CodeGenerator $r2;

        r0 := @this: groovyjarjarantlr.ActionElement;

        $r1 = r0.<groovyjarjarantlr.ActionElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.CodeGenerator generator>;

        virtualinvoke $r2.<groovyjarjarantlr.CodeGenerator: void gen(groovyjarjarantlr.ActionElement)>(r0);

        return;
    }

    public groovyjarjarantlr.Lookahead look(int)
    {
        groovyjarjarantlr.Lookahead $r3;
        int i0;
        groovyjarjarantlr.LLkGrammarAnalyzer $r2;
        groovyjarjarantlr.ActionElement r0;
        groovyjarjarantlr.Grammar $r1;

        r0 := @this: groovyjarjarantlr.ActionElement;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.ActionElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        $r3 = interfaceinvoke $r2.<groovyjarjarantlr.LLkGrammarAnalyzer: groovyjarjarantlr.Lookahead look(int,groovyjarjarantlr.ActionElement)>(i0, r0);

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        groovyjarjarantlr.ActionElement r2;
        java.lang.String $r3, $r6, $r7;
        boolean $z0;

        r2 := @this: groovyjarjarantlr.ActionElement;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r3 = r2.<groovyjarjarantlr.ActionElement: java.lang.String actionText>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $z0 = r2.<groovyjarjarantlr.ActionElement: boolean isSemPred>;

        if $z0 == 0 goto label1;

        $r7 = "?";

        goto label2;

     label1:
        $r7 = "";

     label2:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
