public abstract class com.mycila.inject.internal.guava.collect.ForwardingMultimap extends com.mycila.inject.internal.guava.collect.ForwardingObject implements com.mycila.inject.internal.guava.collect.Multimap
{

    protected void <init>()
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingObject: void <init>()>();

        return;
    }

    protected abstract com.mycila.inject.internal.guava.collect.Multimap delegate();

    public java.util.Map asMap()
    {
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        java.util.Map $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Map asMap()>();

        return $r2;
    }

    public void clear()
    {
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: void clear()>();

        return;
    }

    public boolean containsEntry(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2, r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(r2, r3);

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean containsKey(java.lang.Object)>(r2);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean containsValue(java.lang.Object)>(r2);

        return $z0;
    }

    public java.util.Collection entries()
    {
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        java.util.Collection $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Collection entries()>();

        return $r2;
    }

    public java.util.Collection get(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        java.util.Collection $r3;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r3 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Collection get(java.lang.Object)>(r2);

        return $r3;
    }

    public boolean isEmpty()
    {
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean isEmpty()>();

        return $z0;
    }

    public com.mycila.inject.internal.guava.collect.Multiset keys()
    {
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.Multiset $r2;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: com.mycila.inject.internal.guava.collect.Multiset keys()>();

        return $r2;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Set keySet()>();

        return $r2;
    }

    public boolean put(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2, r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(r2, r3);

        return $z0;
    }

    public boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2;
        java.lang.Iterable r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Iterable;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(r2, r3);

        return $z0;
    }

    public boolean putAll(com.mycila.inject.internal.guava.collect.Multimap)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        com.mycila.inject.internal.guava.collect.Multimap $r1, r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: com.mycila.inject.internal.guava.collect.Multimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean putAll(com.mycila.inject.internal.guava.collect.Multimap)>(r2);

        return $z0;
    }

    public boolean remove(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2, r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(r2, r3);

        return $z0;
    }

    public java.util.Collection removeAll(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        java.util.Collection $r3;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r3 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Collection removeAll(java.lang.Object)>(r2);

        return $r3;
    }

    public java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        java.util.Collection $r4;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        java.lang.Object r2;
        java.lang.Iterable r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Iterable;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r4 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable)>(r2, r3);

        return $r4;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $i0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;
        java.util.Collection $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Collection values()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r1;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.Multimap $r2;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.collect.Multimap $r1;
        com.mycila.inject.internal.guava.collect.ForwardingMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultimap: com.mycila.inject.internal.guava.collect.Multimap delegate()>();

        return $r1;
    }
}
