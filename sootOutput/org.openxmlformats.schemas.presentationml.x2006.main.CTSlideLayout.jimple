public interface  org.openxmlformats.schemas.presentationml.x2006.main.CTSlideLayout extends java.lang.Object implements org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData getCSld();

    public abstract void setCSld(org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData);

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData addNewCSld();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTColorMappingOverride getClrMapOvr();

    public abstract boolean isSetClrMapOvr();

    public abstract void setClrMapOvr(org.openxmlformats.schemas.drawingml.x2006.main.CTColorMappingOverride);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTColorMappingOverride addNewClrMapOvr();

    public abstract void unsetClrMapOvr();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTSlideTransition getTransition();

    public abstract boolean isSetTransition();

    public abstract void setTransition(org.openxmlformats.schemas.presentationml.x2006.main.CTSlideTransition);

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTSlideTransition addNewTransition();

    public abstract void unsetTransition();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTSlideTiming getTiming();

    public abstract boolean isSetTiming();

    public abstract void setTiming(org.openxmlformats.schemas.presentationml.x2006.main.CTSlideTiming);

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTSlideTiming addNewTiming();

    public abstract void unsetTiming();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTHeaderFooter getHf();

    public abstract boolean isSetHf();

    public abstract void setHf(org.openxmlformats.schemas.presentationml.x2006.main.CTHeaderFooter);

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTHeaderFooter addNewHf();

    public abstract void unsetHf();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTExtensionListModify getExtLst();

    public abstract boolean isSetExtLst();

    public abstract void setExtLst(org.openxmlformats.schemas.presentationml.x2006.main.CTExtensionListModify);

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTExtensionListModify addNewExtLst();

    public abstract void unsetExtLst();

    public abstract boolean getShowMasterSp();

    public abstract org.apache.xmlbeans.XmlBoolean xgetShowMasterSp();

    public abstract boolean isSetShowMasterSp();

    public abstract void setShowMasterSp(boolean);

    public abstract void xsetShowMasterSp(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetShowMasterSp();

    public abstract boolean getShowMasterPhAnim();

    public abstract org.apache.xmlbeans.XmlBoolean xgetShowMasterPhAnim();

    public abstract boolean isSetShowMasterPhAnim();

    public abstract void setShowMasterPhAnim(boolean);

    public abstract void xsetShowMasterPhAnim(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetShowMasterPhAnim();

    public abstract java.lang.String getMatchingName();

    public abstract org.apache.xmlbeans.XmlString xgetMatchingName();

    public abstract boolean isSetMatchingName();

    public abstract void setMatchingName(java.lang.String);

    public abstract void xsetMatchingName(org.apache.xmlbeans.XmlString);

    public abstract void unsetMatchingName();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STSlideLayoutType$Enum getType();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STSlideLayoutType xgetType();

    public abstract boolean isSetType();

    public abstract void setType(org.openxmlformats.schemas.presentationml.x2006.main.STSlideLayoutType$Enum);

    public abstract void xsetType(org.openxmlformats.schemas.presentationml.x2006.main.STSlideLayoutType);

    public abstract void unsetType();

    public abstract boolean getPreserve();

    public abstract org.apache.xmlbeans.XmlBoolean xgetPreserve();

    public abstract boolean isSetPreserve();

    public abstract void setPreserve(boolean);

    public abstract void xsetPreserve(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetPreserve();

    public abstract boolean getUserDrawn();

    public abstract org.apache.xmlbeans.XmlBoolean xgetUserDrawn();

    public abstract boolean isSetUserDrawn();

    public abstract void setUserDrawn(boolean);

    public abstract void xsetUserDrawn(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetUserDrawn();

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = class "Lorg/openxmlformats/schemas/presentationml/x2006/main/CTSlideLayout;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("ctslidelayouteb34type");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.openxmlformats.schemas.presentationml.x2006.main.CTSlideLayout: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
