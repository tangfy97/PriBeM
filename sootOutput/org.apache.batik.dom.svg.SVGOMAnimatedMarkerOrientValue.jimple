public class org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue extends org.apache.batik.dom.svg.AbstractSVGAnimatedValue
{
    protected boolean valid;
    protected org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle animatedAngle;
    protected org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedEnumeration animatedEnumeration;
    protected org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle baseAngleVal;
    protected short baseEnumerationVal;
    protected org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle animAngleVal;
    protected short animEnumerationVal;
    protected boolean changing;

    public void <init>(org.apache.batik.dom.svg.AbstractElement, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedEnumeration $r5;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        java.lang.String r2, r3;
        org.apache.batik.dom.svg.AbstractElement r1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle $r4;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractElement;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void <init>(org.apache.batik.dom.svg.AbstractElement,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r4 = new org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle;

        specialinvoke $r4.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle animatedAngle> = $r4;

        $r5 = new org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedEnumeration;

        specialinvoke $r5.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedEnumeration: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedEnumeration animatedEnumeration> = $r5;

        return;
    }

    protected void updateAnimatedValue(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r1;
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.anim.values.AnimatableValue r2;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r2 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Animation of marker orient value is not implemented");

        throw $r0;
    }

    public org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r1;
        org.apache.batik.dom.anim.AnimationTarget r2;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r2 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Animation of marker orient value is not implemented");

        throw $r0;
    }

    public void attrAdded(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        java.lang.String r2;
        org.w3c.dom.Attr r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean changing>;

        if $z0 != 0 goto label1;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean valid> = 0;

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public void attrModified(org.w3c.dom.Attr, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        java.lang.String r2, r3;
        org.w3c.dom.Attr r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean changing>;

        if $z0 != 0 goto label1;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean valid> = 0;

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public void attrRemoved(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        java.lang.String r2;
        org.w3c.dom.Attr r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean changing>;

        if $z0 != 0 goto label1;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean valid> = 0;

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public void setAnimatedValueToAngle(short, float)
    {
        short s0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        int $i1;
        float f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        s0 := @parameter0: short;

        f0 := @parameter1: float;

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle animAngleVal>;

        $i1 = (int) s0;

        virtualinvoke $r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: void setAnimatedValue(int,float)>($i1, f0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: short animEnumerationVal> = 2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public void setAnimatedValueToAuto()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle animAngleVal>;

        virtualinvoke $r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: void setAnimatedValue(int,float)>(1, 0.0F);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: short animEnumerationVal> = 1;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public void resetAnimatedValue()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public org.w3c.dom.svg.SVGAnimatedAngle getAnimatedAngle()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle animatedAngle>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedEnumeration getAnimatedEnumeration()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedEnumeration $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedEnumeration animatedEnumeration>;

        return $r1;
    }
}
