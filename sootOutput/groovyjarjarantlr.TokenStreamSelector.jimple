public class groovyjarjarantlr.TokenStreamSelector extends java.lang.Object implements groovyjarjarantlr.TokenStream, groovyjarjarantlr.ASdebug.IASDebugStream
{
    protected java.util.Hashtable inputStreamNames;
    protected groovyjarjarantlr.TokenStream input;
    protected groovyjarjarantlr.collections.Stack streamStack;

    public void <init>()
    {
        groovyjarjarantlr.collections.impl.LList $r1;
        groovyjarjarantlr.TokenStreamSelector r0;
        java.util.Hashtable $r2;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new groovyjarjarantlr.collections.impl.LList;

        specialinvoke $r1.<groovyjarjarantlr.collections.impl.LList: void <init>()>();

        r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.collections.Stack streamStack> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<groovyjarjarantlr.TokenStreamSelector: java.util.Hashtable inputStreamNames> = $r2;

        return;
    }

    public void addInputStream(groovyjarjarantlr.TokenStream, java.lang.String)
    {
        groovyjarjarantlr.TokenStream r2;
        groovyjarjarantlr.TokenStreamSelector r0;
        java.lang.String r1;
        java.util.Hashtable $r3;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        r2 := @parameter0: groovyjarjarantlr.TokenStream;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<groovyjarjarantlr.TokenStreamSelector: java.util.Hashtable inputStreamNames>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public groovyjarjarantlr.TokenStream getCurrentStream()
    {
        groovyjarjarantlr.TokenStream $r1;
        groovyjarjarantlr.TokenStreamSelector r0;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        $r1 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input>;

        return $r1;
    }

    public groovyjarjarantlr.TokenStream getStream(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        groovyjarjarantlr.TokenStream r4;
        groovyjarjarantlr.TokenStreamSelector r0;
        java.lang.StringBuffer $r6, $r7, $r8, $r9;
        java.lang.Object $r3;
        java.lang.String r1, $r10;
        java.util.Hashtable $r2;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.TokenStreamSelector: java.util.Hashtable inputStreamNames>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (groovyjarjarantlr.TokenStream) $r3;

        if r4 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TokenStream ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        return r4;
    }

    public groovyjarjarantlr.Token nextToken() throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenStream $r1;
        groovyjarjarantlr.TokenStreamSelector r0;
        groovyjarjarantlr.TokenStreamRetryException $r3;
        groovyjarjarantlr.Token $r2;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

     label1:
        $r1 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input>;

        $r2 = interfaceinvoke $r1.<groovyjarjarantlr.TokenStream: groovyjarjarantlr.Token nextToken()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        goto label1;

        catch groovyjarjarantlr.TokenStreamRetryException from label1 to label2 with label3;
    }

    public groovyjarjarantlr.TokenStream pop()
    {
        groovyjarjarantlr.TokenStream r3;
        groovyjarjarantlr.TokenStreamSelector r0;
        java.lang.Object $r2;
        groovyjarjarantlr.collections.Stack $r1;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        $r1 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.collections.Stack streamStack>;

        $r2 = interfaceinvoke $r1.<groovyjarjarantlr.collections.Stack: java.lang.Object pop()>();

        r3 = (groovyjarjarantlr.TokenStream) $r2;

        virtualinvoke r0.<groovyjarjarantlr.TokenStreamSelector: void select(groovyjarjarantlr.TokenStream)>(r3);

        return r3;
    }

    public void push(groovyjarjarantlr.TokenStream)
    {
        groovyjarjarantlr.TokenStream $r1, r3;
        groovyjarjarantlr.TokenStreamSelector r0;
        groovyjarjarantlr.collections.Stack $r2;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        r3 := @parameter0: groovyjarjarantlr.TokenStream;

        $r2 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.collections.Stack streamStack>;

        $r1 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input>;

        interfaceinvoke $r2.<groovyjarjarantlr.collections.Stack: void push(java.lang.Object)>($r1);

        virtualinvoke r0.<groovyjarjarantlr.TokenStreamSelector: void select(groovyjarjarantlr.TokenStream)>(r3);

        return;
    }

    public void push(java.lang.String)
    {
        groovyjarjarantlr.TokenStream $r1;
        groovyjarjarantlr.TokenStreamSelector r0;
        groovyjarjarantlr.collections.Stack $r2;
        java.lang.String r3;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        r3 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.collections.Stack streamStack>;

        $r1 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input>;

        interfaceinvoke $r2.<groovyjarjarantlr.collections.Stack: void push(java.lang.Object)>($r1);

        virtualinvoke r0.<groovyjarjarantlr.TokenStreamSelector: void select(java.lang.String)>(r3);

        return;
    }

    public void retry() throws groovyjarjarantlr.TokenStreamRetryException
    {
        groovyjarjarantlr.TokenStreamRetryException $r0;
        groovyjarjarantlr.TokenStreamSelector r1;

        r1 := @this: groovyjarjarantlr.TokenStreamSelector;

        $r0 = new groovyjarjarantlr.TokenStreamRetryException;

        specialinvoke $r0.<groovyjarjarantlr.TokenStreamRetryException: void <init>()>();

        throw $r0;
    }

    public void select(groovyjarjarantlr.TokenStream)
    {
        groovyjarjarantlr.TokenStream r1;
        groovyjarjarantlr.TokenStreamSelector r0;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        r1 := @parameter0: groovyjarjarantlr.TokenStream;

        r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input> = r1;

        return;
    }

    public void select(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r1;
        groovyjarjarantlr.TokenStream $r2;
        groovyjarjarantlr.TokenStreamSelector r0;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream getStream(java.lang.String)>(r1);

        r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input> = $r2;

        return;
    }

    public java.lang.String getEntireText()
    {
        java.lang.String $r2;
        groovyjarjarantlr.TokenStream $r1;
        groovyjarjarantlr.TokenStreamSelector r0;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        $r1 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input>;

        $r2 = staticinvoke <groovyjarjarantlr.ASdebug.ASDebugStream: java.lang.String getEntireText(groovyjarjarantlr.TokenStream)>($r1);

        return $r2;
    }

    public groovyjarjarantlr.ASdebug.TokenOffsetInfo getOffsetInfo(groovyjarjarantlr.Token)
    {
        groovyjarjarantlr.TokenStream $r2;
        groovyjarjarantlr.TokenStreamSelector r0;
        groovyjarjarantlr.ASdebug.TokenOffsetInfo $r3;
        groovyjarjarantlr.Token r1;

        r0 := @this: groovyjarjarantlr.TokenStreamSelector;

        r1 := @parameter0: groovyjarjarantlr.Token;

        $r2 = r0.<groovyjarjarantlr.TokenStreamSelector: groovyjarjarantlr.TokenStream input>;

        $r3 = staticinvoke <groovyjarjarantlr.ASdebug.ASDebugStream: groovyjarjarantlr.ASdebug.TokenOffsetInfo getOffsetInfo(groovyjarjarantlr.TokenStream,groovyjarjarantlr.Token)>($r2, r1);

        return $r3;
    }
}
