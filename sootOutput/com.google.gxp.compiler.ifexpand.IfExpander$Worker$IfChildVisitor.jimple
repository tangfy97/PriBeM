class com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor extends com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor
{
    private java.util.List clauses;
    private java.util.List clauseChildren;
    private com.google.gxp.compiler.parser.ParsedElement clauseFromNode;
    private boolean sawElse;
    final com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0;

    void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker, com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.ifexpand.IfExpander$Worker r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r4;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.ifexpand.IfExpander$Worker;

        r4 := @parameter1: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0> = r1;

        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor: void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker,com.google.gxp.compiler.ifexpand.IfExpander$1)>(r1, null);

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List clauses> = $r2;

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List clauseChildren> = $r3;

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: boolean sawElse> = 0;

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode> = r4;

        return;
    }

    private void flush()
    {
        com.google.gxp.compiler.alerts.SourcePosition $r5;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType $r12;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;
        com.google.gxp.com.google.common.collect.ImmutableList $r11;
        java.util.ArrayList $r13;
        java.util.List $r4, $r9, $r10;
        com.google.gxp.compiler.parser.ParsedElement $r1, $r3, $r6, $r8;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement $r2;
        java.lang.String $r7;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        $r1 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode>;

        if $r1 == null goto label1;

        $r4 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List clauses>;

        $r2 = new com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r3 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode>;

        $r5 = virtualinvoke $r3.<com.google.gxp.compiler.parser.ParsedElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r6 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode>;

        $r7 = virtualinvoke $r6.<com.google.gxp.compiler.parser.ParsedElement: java.lang.String getDisplayName()>();

        $r8 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode>;

        $r9 = virtualinvoke $r8.<com.google.gxp.compiler.parser.ParsedElement: java.util.List getAttributes()>();

        $r10 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List clauseChildren>;

        $r11 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r10);

        $r12 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType CLAUSE>;

        specialinvoke $r2.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.util.List,java.util.List,com.google.gxp.compiler.parser.GxpNamespace$ElementType)>($r5, $r7, $r9, $r11, $r12);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode> = null;

        $r13 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List clauseChildren> = $r13;

     label1:
        return;
    }

    public java.util.List get()
    {
        java.util.List $r1, $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: void flush()>();

        $r1 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List clauses>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    protected java.lang.Void addNodeToCurrentClause(com.google.gxp.compiler.parser.ParsedElement)
    {
        java.util.List $r3;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker $r2;
        com.google.gxp.compiler.parser.ParsedElement r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor $r4;
        java.lang.Object $r5;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.ParsedElement;

        $r3 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List clauseChildren>;

        $r2 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0>;

        $r4 = staticinvoke <com.google.gxp.compiler.ifexpand.IfExpander$Worker: com.google.gxp.compiler.ifexpand.IfExpander$Worker$NormalVisitor access$100(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>($r2);

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.parser.ParsedElement: java.lang.Object acceptVisitor(com.google.gxp.compiler.parser.ParsedElementVisitor)>($r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        return null;
    }

    protected java.lang.Void defaultVisitElement(com.google.gxp.compiler.parser.ParsedElement)
    {
        com.google.gxp.compiler.parser.ParsedElement r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.ParsedElement;

        virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.lang.Void addNodeToCurrentClause(com.google.gxp.compiler.parser.ParsedElement)>(r1);

        return null;
    }

    public java.lang.Void visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.ifexpand.IfExpander$Worker $r2;
        com.google.gxp.compiler.alerts.AlertSink $r3;
        com.google.gxp.compiler.ifexpand.ElifAfterElseError $r4;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $z0 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: boolean sawElse>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0>;

        $r3 = staticinvoke <com.google.gxp.compiler.ifexpand.IfExpander$Worker: com.google.gxp.compiler.alerts.AlertSink access$300(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>($r2);

        $r4 = new com.google.gxp.compiler.ifexpand.ElifAfterElseError;

        specialinvoke $r4.<com.google.gxp.compiler.ifexpand.ElifAfterElseError: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        interfaceinvoke $r3.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r4);

        goto label2;

     label1:
        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: void flush()>();

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode> = r1;

     label2:
        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: void reportBadChildren(com.google.gxp.compiler.parser.ParsedElement)>(r1);

        return null;
    }

    public java.lang.Void visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        com.google.gxp.compiler.ifexpand.DoubleElseError $r4;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker $r2;
        com.google.gxp.compiler.alerts.AlertSink $r3;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $z0 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: boolean sawElse>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0>;

        $r3 = staticinvoke <com.google.gxp.compiler.ifexpand.IfExpander$Worker: com.google.gxp.compiler.alerts.AlertSink access$300(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>($r2);

        $r4 = new com.google.gxp.compiler.ifexpand.DoubleElseError;

        specialinvoke $r4.<com.google.gxp.compiler.ifexpand.DoubleElseError: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        interfaceinvoke $r3.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r4);

        goto label2;

     label1:
        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: void flush()>();

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.parser.ParsedElement clauseFromNode> = r1;

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: boolean sawElse> = 1;

     label2:
        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: void reportBadChildren(com.google.gxp.compiler.parser.ParsedElement)>(r1);

        return null;
    }

    private void reportBadChildren(com.google.gxp.compiler.parser.ParsedElement)
    {
        com.google.gxp.compiler.alerts.common.BadNodePlacementError $r8;
        java.util.Iterator $r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r5;
        java.util.List $r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker $r6;
        com.google.gxp.compiler.parser.ParsedElement r0, r4;
        com.google.gxp.compiler.alerts.AlertSink $r7;
        java.lang.Object $r3;
        boolean $z0;

        r5 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r0 := @parameter0: com.google.gxp.compiler.parser.ParsedElement;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.parser.ParsedElement: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.gxp.compiler.parser.ParsedElement) $r3;

        $r6 = r5.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0>;

        $r7 = staticinvoke <com.google.gxp.compiler.ifexpand.IfExpander$Worker: com.google.gxp.compiler.alerts.AlertSink access$300(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>($r6);

        $r8 = new com.google.gxp.compiler.alerts.common.BadNodePlacementError;

        specialinvoke $r8.<com.google.gxp.compiler.alerts.common.BadNodePlacementError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>(r4, r0);

        interfaceinvoke $r7.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r8);

        goto label1;

     label2:
        return;
    }

    public java.lang.Void visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.lang.Void addNodeToCurrentClause(com.google.gxp.compiler.parser.ParsedElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.lang.Void visitIfElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.lang.Void visitElseElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.lang.Void visitElifElement(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>(r1);

        return $r2;
    }

    protected volatile java.lang.Object defaultVisitElement(com.google.gxp.compiler.parser.ParsedElement)
    {
        java.lang.Void $r2;
        com.google.gxp.compiler.parser.ParsedElement r1;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor r0;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        r1 := @parameter0: com.google.gxp.compiler.parser.ParsedElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.lang.Void defaultVisitElement(com.google.gxp.compiler.parser.ParsedElement)>(r1);

        return $r2;
    }
}
