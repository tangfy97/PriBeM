class org.springframework.beans.GenericTypeAwarePropertyDescriptor extends java.beans.PropertyDescriptor
{
    private final java.lang.Class beanClass;
    private final java.lang.reflect.Method readMethod;
    private final java.lang.reflect.Method writeMethod;
    private final java.lang.Class propertyEditorClass;
    private volatile java.util.Set ambiguousWriteMethods;
    private java.lang.Class propertyType;
    private org.springframework.core.MethodParameter writeMethodParameter;

    public void <init>(java.lang.Class, java.lang.String, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Class) throws java.beans.IntrospectionException
    {
        java.lang.reflect.Method[] $r10;
        java.util.HashSet $r9;
        int i0, i1;
        java.lang.String r1, $r12, $r13, $r16, $r17, $r19;
        java.lang.reflect.Method r4, $r5, r6, $r7, $r8, r11, r22, $r23;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class[] $r20;
        org.springframework.beans.GenericTypeAwarePropertyDescriptor r0;
        java.lang.Class r2, r3, $r15, $r21;
        java.lang.StringBuilder $r14, $r18;

        r0 := @this: org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        r2 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.reflect.Method;

        r6 := @parameter3: java.lang.reflect.Method;

        r3 := @parameter4: java.lang.Class;

        specialinvoke r0.<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)>(r1, null, null);

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class beanClass> = r2;

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class propertyEditorClass> = r3;

        $r5 = staticinvoke <org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>(r4);

        $r7 = staticinvoke <org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>(r6);

        r22 = $r7;

        if $r7 != null goto label1;

        if $r5 == null goto label1;

        $r15 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class beanClass>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("set");

        $r16 = virtualinvoke r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.String getName()>();

        $r17 = staticinvoke <org.springframework.util.StringUtils: java.lang.String capitalize(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = newarray (java.lang.Class)[1];

        $r21 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r20[0] = $r21;

        r22 = staticinvoke <org.springframework.util.ClassUtils: java.lang.reflect.Method getMethodIfAvailable(java.lang.Class,java.lang.String,java.lang.Class[])>($r15, $r19, $r20);

     label1:
        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method readMethod> = $r5;

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method writeMethod> = r22;

        $r23 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method writeMethod>;

        if $r23 == null goto label5;

        $r8 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method readMethod>;

        if $r8 != null goto label5;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        $r10 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r10;

        i1 = 0;

        goto label4;

     label2:
        r11 = $r10[i1];

        $r12 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.String getName()>();

        $r13 = virtualinvoke r22.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r11.<java.lang.reflect.Method: boolean equals(java.lang.Object)>(r22);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r11.<java.lang.reflect.Method: boolean isBridge()>();

        if $z2 != 0 goto label3;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>(r11);

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label2;

        $z3 = interfaceinvoke $r9.<java.util.Set: boolean isEmpty()>();

        if $z3 != 0 goto label5;

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.util.Set ambiguousWriteMethods> = $r9;

     label5:
        return;
    }

    public java.lang.reflect.Method getReadMethod()
    {
        java.lang.reflect.Method $r1;
        org.springframework.beans.GenericTypeAwarePropertyDescriptor r0;

        r0 := @this: org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        $r1 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method readMethod>;

        return $r1;
    }

    public java.lang.reflect.Method getWriteMethod()
    {
        java.lang.reflect.Method $r1;
        org.springframework.beans.GenericTypeAwarePropertyDescriptor r0;

        r0 := @this: org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        $r1 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method writeMethod>;

        return $r1;
    }

    public java.lang.reflect.Method getWriteMethodForActualAccess()
    {
        java.util.Set r1;
        org.springframework.beans.GenericTypeAwarePropertyDescriptor r0;
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        java.lang.String $r5, $r12;
        java.lang.reflect.Method $r2, $r8;

        r0 := @this: org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        r1 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.util.Set ambiguousWriteMethods>;

        if r1 == null goto label1;

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.util.Set ambiguousWriteMethods> = null;

        $r3 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/beans/GenericTypeAwarePropertyDescriptor;");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid JavaBean property \'");

        $r5 = virtualinvoke r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' being accessed! Ambiguous write methods found next to actually used [");

        $r8 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method writeMethod>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r12);

     label1:
        $r2 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method writeMethod>;

        return $r2;
    }

    public java.lang.Class getPropertyEditorClass()
    {
        java.lang.Class $r1;
        org.springframework.beans.GenericTypeAwarePropertyDescriptor r0;

        r0 := @this: org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        $r1 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class propertyEditorClass>;

        return $r1;
    }

    public synchronized java.lang.Class getPropertyType()
    {
        org.springframework.beans.GenericTypeAwarePropertyDescriptor r0;
        org.springframework.core.MethodParameter $r3;
        java.lang.Class $r1, $r4, $r5, $r6, $r8, $r9;
        java.lang.reflect.Method $r2, $r7;

        r0 := @this: org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        $r1 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class propertyType>;

        if $r1 != null goto label3;

        $r2 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method readMethod>;

        if $r2 == null goto label1;

        $r7 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method readMethod>;

        $r6 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class beanClass>;

        $r8 = staticinvoke <org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>($r7, $r6);

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class propertyType> = $r8;

        goto label3;

     label1:
        $r3 = virtualinvoke r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter getWriteMethodParameter()>();

        if $r3 == null goto label2;

        $r5 = virtualinvoke $r3.<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>();

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class propertyType> = $r5;

        goto label3;

     label2:
        $r4 = specialinvoke r0.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>();

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class propertyType> = $r4;

     label3:
        $r9 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class propertyType>;

        return $r9;
    }

    public synchronized org.springframework.core.MethodParameter getWriteMethodParameter()
    {
        org.springframework.beans.GenericTypeAwarePropertyDescriptor r0;
        org.springframework.core.MethodParameter $r2, $r3, $r4, $r7;
        java.lang.Class $r6;
        java.lang.reflect.Method $r1, $r5;

        r0 := @this: org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        $r1 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method writeMethod>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter writeMethodParameter>;

        if $r2 != null goto label2;

        $r4 = new org.springframework.core.MethodParameter;

        $r5 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method writeMethod>;

        specialinvoke $r4.<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Method,int)>($r5, 0);

        r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter writeMethodParameter> = $r4;

        $r7 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter writeMethodParameter>;

        $r6 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class beanClass>;

        staticinvoke <org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>($r7, $r6);

     label2:
        $r3 = r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter writeMethodParameter>;

        return $r3;
    }
}
