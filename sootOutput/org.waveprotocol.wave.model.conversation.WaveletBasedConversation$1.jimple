class org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1 extends org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl
{
    final org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0;

    void <init>(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1 r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversation;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl: void <init>()>();

        return;
    }

    public void onParticipantAdded(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1 r0;
        org.waveprotocol.wave.model.wave.ObservableWavelet r3;
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r2;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1;

        r3 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$1500(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.wave.ParticipantId)>($r2, r1);

        return;
    }

    public void onParticipantRemoved(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1 r0;
        org.waveprotocol.wave.model.wave.ObservableWavelet r3;
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r2;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1;

        r3 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$1: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$1600(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.wave.ParticipantId)>($r2, r1);

        return;
    }
}
