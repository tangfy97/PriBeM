public class org.apache.batik.dom.svg12.XBLEventSupport extends org.apache.batik.dom.events.EventSupport
{
    protected org.apache.batik.dom.util.HashTable capturingImplementationListeners;
    protected org.apache.batik.dom.util.HashTable bubblingImplementationListeners;
    protected static org.apache.batik.dom.util.HashTable eventTypeAliases;

    public void <init>(org.apache.batik.dom.AbstractNode)
    {
        org.apache.batik.dom.svg12.XBLEventSupport r0;
        org.apache.batik.dom.AbstractNode r1;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r1 := @parameter0: org.apache.batik.dom.AbstractNode;

        specialinvoke r0.<org.apache.batik.dom.events.EventSupport: void <init>(org.apache.batik.dom.AbstractNode)>(r1);

        return;
    }

    public void addEventListenerNS(java.lang.String, java.lang.String, org.w3c.dom.events.EventListener, boolean, java.lang.Object)
    {
        org.apache.batik.dom.svg12.XBLEventSupport r0;
        org.apache.batik.dom.util.HashTable $r5;
        org.w3c.dom.events.EventListener r3;
        java.lang.Object r4, $r6;
        java.lang.String r1, r2, $r7;
        boolean z0, $z1;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.w3c.dom.events.EventListener;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.lang.Object;

        specialinvoke r0.<org.apache.batik.dom.events.EventSupport: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>(r1, r2, r3, z0, r4);

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/xml-events");

        if $z1 == 0 goto label2;

     label1:
        $r5 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        $r6 = virtualinvoke $r5.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>(r2);

        $r7 = (java.lang.String) $r6;

        if $r7 == null goto label2;

        specialinvoke r0.<org.apache.batik.dom.events.EventSupport: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>(r1, $r7, r3, z0, r4);

     label2:
        return;
    }

    public void removeEventListenerNS(java.lang.String, java.lang.String, org.w3c.dom.events.EventListener, boolean)
    {
        org.apache.batik.dom.svg12.XBLEventSupport r0;
        org.apache.batik.dom.util.HashTable $r4;
        org.w3c.dom.events.EventListener r3;
        java.lang.Object $r5;
        java.lang.String r1, r2, $r6;
        boolean z0, $z1;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.w3c.dom.events.EventListener;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.apache.batik.dom.events.EventSupport: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r1, r2, r3, z0);

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/xml-events");

        if $z1 == 0 goto label2;

     label1:
        $r4 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        $r5 = virtualinvoke $r4.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>(r2);

        $r6 = (java.lang.String) $r5;

        if $r6 == null goto label2;

        specialinvoke r0.<org.apache.batik.dom.events.EventSupport: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r1, $r6, r3, z0);

     label2:
        return;
    }

    public void addImplementationEventListenerNS(java.lang.String, java.lang.String, org.w3c.dom.events.EventListener, boolean)
    {
        org.apache.batik.dom.events.EventListenerList $r5, $r11, r12;
        org.apache.batik.dom.svg12.XBLEventSupport r0;
        org.apache.batik.dom.util.HashTable $r1, $r6, $r7, $r8, r9;
        org.w3c.dom.events.EventListener r4;
        java.lang.Object $r10;
        java.lang.String r2, r3;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: org.w3c.dom.events.EventListener;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label2;

        $r7 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners>;

        if $r7 != null goto label1;

        $r8 = new org.apache.batik.dom.util.HashTable;

        specialinvoke $r8.<org.apache.batik.dom.util.HashTable: void <init>()>();

        r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners> = $r8;

     label1:
        r9 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners>;

        goto label4;

     label2:
        $r1 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners>;

        if $r1 != null goto label3;

        $r6 = new org.apache.batik.dom.util.HashTable;

        specialinvoke $r6.<org.apache.batik.dom.util.HashTable: void <init>()>();

        r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners> = $r6;

     label3:
        r9 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners>;

     label4:
        $r10 = virtualinvoke r9.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>(r2);

        $r11 = (org.apache.batik.dom.events.EventListenerList) $r10;

        r12 = $r11;

        if $r11 != null goto label5;

        $r5 = new org.apache.batik.dom.events.EventListenerList;

        specialinvoke $r5.<org.apache.batik.dom.events.EventListenerList: void <init>()>();

        r12 = $r5;

        virtualinvoke r9.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

     label5:
        virtualinvoke r12.<org.apache.batik.dom.events.EventListenerList: void addListener(java.lang.String,java.lang.Object,org.w3c.dom.events.EventListener)>(r3, null, r4);

        return;
    }

    public void removeImplementationEventListenerNS(java.lang.String, java.lang.String, org.w3c.dom.events.EventListener, boolean)
    {
        org.apache.batik.dom.events.EventListenerList r3;
        org.apache.batik.dom.svg12.XBLEventSupport r0;
        org.apache.batik.dom.util.HashTable $r6;
        org.w3c.dom.events.EventListener r5;
        int $i0;
        java.lang.Object $r2;
        java.lang.String r1, r4;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: org.w3c.dom.events.EventListener;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners>;

        goto label2;

     label1:
        $r6 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners>;

     label2:
        if $r6 != null goto label3;

        return;

     label3:
        $r2 = virtualinvoke $r6.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (org.apache.batik.dom.events.EventListenerList) $r2;

        if r3 != null goto label4;

        return;

     label4:
        virtualinvoke r3.<org.apache.batik.dom.events.EventListenerList: void removeListener(java.lang.String,org.w3c.dom.events.EventListener)>(r4, r5);

        $i0 = virtualinvoke r3.<org.apache.batik.dom.events.EventListenerList: int size()>();

        if $i0 != 0 goto label5;

        virtualinvoke $r6.<org.apache.batik.dom.util.HashTable: java.lang.Object remove(java.lang.Object)>(r1);

     label5:
        return;
    }

    public void moveEventListeners(org.apache.batik.dom.events.EventSupport)
    {
        org.apache.batik.dom.svg12.XBLEventSupport r0, r2;
        org.apache.batik.dom.util.HashTable $r3, $r4;
        org.apache.batik.dom.events.EventSupport r1;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r1 := @parameter0: org.apache.batik.dom.events.EventSupport;

        specialinvoke r0.<org.apache.batik.dom.events.EventSupport: void moveEventListeners(org.apache.batik.dom.events.EventSupport)>(r1);

        r2 = (org.apache.batik.dom.svg12.XBLEventSupport) r1;

        $r3 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners>;

        r2.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners> = $r3;

        $r4 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners>;

        r2.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners> = $r4;

        r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners> = null;

        r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners> = null;

        return;
    }

    public boolean dispatchEvent(org.apache.batik.dom.events.NodeEventTarget, org.w3c.dom.events.Event) throws org.w3c.dom.events.EventException
    {
        org.apache.batik.dom.svg12.XBLEventSupport r3;
        org.w3c.dom.events.Event r0;
        java.lang.Object[] $r4, $r32;
        org.apache.batik.dom.AbstractNode $r17, r34, r35;
        java.lang.String $r2;
        org.apache.batik.dom.events.NodeEventTarget r6, r24, $r30, r39, r40, r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, z10, $z11, $z12;
        org.w3c.dom.events.EventException $r5, $r33;
        org.apache.batik.dom.events.AbstractEvent r1, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28;
        org.apache.batik.dom.events.AbstractEvent[] $r36;
        java.util.HashSet $r42, $r43;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9, i10, i11, $i13, $i15, $i17;
        org.apache.batik.dom.events.NodeEventTarget[] $r7;
        org.w3c.dom.Element $r29, $r31;

        r3 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r6 := @parameter0: org.apache.batik.dom.events.NodeEventTarget;

        r0 := @parameter1: org.w3c.dom.events.Event;

        if r0 != null goto label01;

        return 0;

     label01:
        $z0 = r0 instanceof org.apache.batik.dom.events.AbstractEvent;

        if $z0 != 0 goto label02;

        $r32 = newarray (java.lang.Object)[0];

        $r33 = virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: org.w3c.dom.events.EventException createEventException(short,java.lang.String,java.lang.Object[])>(9, "unsupported.event", $r32);

        throw $r33;

     label02:
        r1 = (org.apache.batik.dom.events.AbstractEvent) r0;

        $r2 = virtualinvoke r1.<org.apache.batik.dom.events.AbstractEvent: java.lang.String getType()>();

        if $r2 == null goto label03;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

     label03:
        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: org.w3c.dom.events.EventException createEventException(short,java.lang.String,java.lang.Object[])>(0, "unspecified.event", $r4);

        throw $r5;

     label04:
        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setTarget(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>(r1, r6);

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void stopPropagation(org.apache.batik.dom.events.AbstractEvent,boolean)>(r1, 0);

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void stopImmediatePropagation(org.apache.batik.dom.events.AbstractEvent,boolean)>(r1, 0);

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void preventDefault(org.apache.batik.dom.events.AbstractEvent,boolean)>(r1, 0);

        $r7 = virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: org.apache.batik.dom.events.NodeEventTarget[] getAncestors(org.apache.batik.dom.events.NodeEventTarget)>(r6);

        $i1 = virtualinvoke r1.<org.apache.batik.dom.events.AbstractEvent: int getBubbleLimit()>();

        i6 = 0;

        $z1 = virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: boolean isSingleScopeEvent(org.w3c.dom.events.Event)>(r1);

        if $z1 == 0 goto label09;

        r34 = (org.apache.batik.dom.AbstractNode) r6;

        $r29 = virtualinvoke r34.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblBoundElement()>();

        if $r29 == null goto label08;

        i6 = lengthof $r7;

        goto label07;

     label05:
        $i5 = i6 - 1;

        $r30 = $r7[$i5];

        r35 = (org.apache.batik.dom.AbstractNode) $r30;

        $r31 = virtualinvoke r35.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblBoundElement()>();

        if $r31 == $r29 goto label06;

        goto label08;

     label06:
        $i13 = (int) -1;

        i6 = i6 + $i13;

     label07:
        if i6 > 0 goto label05;

     label08:
        goto label10;

     label09:
        if $i1 == 0 goto label10;

        $i3 = lengthof $r7;

        $i4 = $i3 - $i1;

        i6 = $i4 + 1;

        if i6 >= 0 goto label10;

        i6 = 0;

     label10:
        $r36 = virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.events.AbstractEvent[] getRetargettedEvents(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.NodeEventTarget[],org.apache.batik.dom.events.AbstractEvent)>(r6, $r7, r1);

        z7 = 0;

        $r42 = new java.util.HashSet;

        specialinvoke $r42.<java.util.HashSet: void <init>()>();

        $r43 = new java.util.HashSet;

        specialinvoke $r43.<java.util.HashSet: void <init>()>();

        i7 = 0;

        goto label12;

     label11:
        r39 = $r7[i7];

        $r8 = $r36[i7];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setCurrentTarget(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>($r8, r39);

        $r9 = $r36[i7];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setEventPhase(org.apache.batik.dom.events.AbstractEvent,short)>($r9, 1);

        $r10 = $r36[i7];

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireImplementationEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean)>(r39, $r10, 1);

        i7 = i7 + 1;

     label12:
        if i7 < i6 goto label11;

        i8 = i6;

        goto label17;

     label13:
        r40 = $r7[i8];

        $r11 = $r36[i8];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setCurrentTarget(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>($r11, r40);

        $r12 = $r36[i8];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setEventPhase(org.apache.batik.dom.events.AbstractEvent,short)>($r12, 1);

        $r13 = $r36[i8];

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireImplementationEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean)>(r40, $r13, 1);

        $r14 = $r36[i8];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void fireEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean,java.util.HashSet,java.util.HashSet)>(r40, $r14, 1, $r42, $r43);

        $r15 = $r36[i8];

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireHandlerGroupEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean,java.util.HashSet,java.util.HashSet)>(r40, $r15, 1, $r42, $r43);

        if z7 != 0 goto label14;

        $r16 = $r36[i8];

        $z2 = virtualinvoke $r16.<org.apache.batik.dom.events.AbstractEvent: boolean getDefaultPrevented()>();

        if $z2 == 0 goto label15;

     label14:
        $z8 = 1;

        goto label16;

     label15:
        $z8 = 0;

     label16:
        z7 = $z8;

        virtualinvoke $r42.<java.util.AbstractCollection: boolean addAll(java.util.Collection)>($r43);

        virtualinvoke $r43.<java.util.HashSet: void clear()>();

        i8 = i8 + 1;

     label17:
        $i9 = lengthof $r7;

        if i8 < $i9 goto label13;

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setEventPhase(org.apache.batik.dom.events.AbstractEvent,short)>(r1, 2);

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setCurrentTarget(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>(r1, r6);

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireImplementationEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean)>(r6, r1, 0);

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void fireEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean,java.util.HashSet,java.util.HashSet)>(r6, r1, 0, $r42, $r43);

        $r17 = r3.<org.apache.batik.dom.events.EventSupport: org.apache.batik.dom.AbstractNode node>;

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireHandlerGroupEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean,java.util.HashSet,java.util.HashSet)>($r17, r1, 0, $r42, $r43);

        virtualinvoke $r42.<java.util.AbstractCollection: boolean addAll(java.util.Collection)>($r43);

        virtualinvoke $r43.<java.util.HashSet: void clear()>();

        if z7 != 0 goto label18;

        $z6 = virtualinvoke r1.<org.apache.batik.dom.events.AbstractEvent: boolean getDefaultPrevented()>();

        if $z6 == 0 goto label19;

     label18:
        $z9 = 1;

        goto label20;

     label19:
        $z9 = 0;

     label20:
        z10 = $z9;

        $z3 = virtualinvoke r1.<org.apache.batik.dom.events.AbstractEvent: boolean getBubbles()>();

        if $z3 == 0 goto label31;

        $i2 = lengthof $r7;

        i10 = $i2 - 1;

        goto label25;

     label21:
        r41 = $r7[i10];

        $r18 = $r36[i10];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setCurrentTarget(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>($r18, r41);

        $r19 = $r36[i10];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setEventPhase(org.apache.batik.dom.events.AbstractEvent,short)>($r19, 3);

        $r20 = $r36[i10];

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireImplementationEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean)>(r41, $r20, 0);

        $r21 = $r36[i10];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void fireEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean,java.util.HashSet,java.util.HashSet)>(r41, $r21, 0, $r42, $r43);

        $r22 = $r36[i10];

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireHandlerGroupEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean,java.util.HashSet,java.util.HashSet)>(r41, $r22, 0, $r42, $r43);

        if z10 != 0 goto label22;

        $r23 = $r36[i10];

        $z4 = virtualinvoke $r23.<org.apache.batik.dom.events.AbstractEvent: boolean getDefaultPrevented()>();

        if $z4 == 0 goto label23;

     label22:
        $z11 = 1;

        goto label24;

     label23:
        $z11 = 0;

     label24:
        z10 = $z11;

        virtualinvoke $r42.<java.util.AbstractCollection: boolean addAll(java.util.Collection)>($r43);

        virtualinvoke $r43.<java.util.HashSet: void clear()>();

        $i15 = (int) -1;

        i10 = i10 + $i15;

     label25:
        if i10 >= i6 goto label21;

        i11 = i6 - 1;

        goto label30;

     label26:
        r24 = $r7[i11];

        $r25 = $r36[i11];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setCurrentTarget(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>($r25, r24);

        $r26 = $r36[i11];

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void setEventPhase(org.apache.batik.dom.events.AbstractEvent,short)>($r26, 3);

        $r27 = $r36[i11];

        virtualinvoke r3.<org.apache.batik.dom.svg12.XBLEventSupport: void fireImplementationEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,boolean)>(r24, $r27, 0);

        if z10 != 0 goto label27;

        $r28 = $r36[i11];

        $z5 = virtualinvoke $r28.<org.apache.batik.dom.events.AbstractEvent: boolean getDefaultPrevented()>();

        if $z5 == 0 goto label28;

     label27:
        $z12 = 1;

        goto label29;

     label28:
        $z12 = 0;

     label29:
        z10 = $z12;

        $i17 = (int) -1;

        i11 = i11 + $i17;

     label30:
        if i11 >= 0 goto label26;

     label31:
        if z10 != 0 goto label32;

        virtualinvoke r3.<org.apache.batik.dom.events.EventSupport: void runDefaultActions(org.apache.batik.dom.events.AbstractEvent)>(r1);

     label32:
        return z10;
    }

    protected void fireHandlerGroupEventListeners(org.apache.batik.dom.events.NodeEventTarget, org.apache.batik.dom.events.AbstractEvent, boolean, java.util.HashSet, java.util.HashSet)
    {
        org.apache.batik.dom.events.EventListenerList $r6;
        java.util.HashSet r9, r10;
        org.w3c.dom.Node $r2, r12;
        int i0, $i1;
        java.lang.String $r4;
        boolean z0, $z1;
        org.w3c.dom.NodeList $r1;
        org.apache.batik.dom.events.EventSupport $r5;
        org.apache.batik.dom.xbl.NodeXBL $r0;
        org.apache.batik.dom.events.AbstractEvent r3;
        org.apache.batik.dom.events.EventListenerList$Entry[] $r7;
        org.apache.batik.dom.events.NodeEventTarget r11, r13;
        org.apache.batik.dom.svg12.XBLEventSupport r8;

        r8 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r11 := @parameter0: org.apache.batik.dom.events.NodeEventTarget;

        r3 := @parameter1: org.apache.batik.dom.events.AbstractEvent;

        z0 := @parameter2: boolean;

        r9 := @parameter3: java.util.HashSet;

        r10 := @parameter4: java.util.HashSet;

        $r0 = (org.apache.batik.dom.xbl.NodeXBL) r11;

        $r1 = interfaceinvoke $r0.<org.apache.batik.dom.xbl.NodeXBL: org.w3c.dom.NodeList getXblDefinitions()>();

        i0 = 0;

        goto label9;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        r12 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label2:
        r12 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r12 == null goto label4;

        $z1 = r12 instanceof org.apache.batik.dom.svg12.XBLOMHandlerGroupElement;

        if $z1 == 0 goto label2;

     label4:
        if r12 != null goto label5;

        goto label8;

     label5:
        r13 = (org.apache.batik.dom.events.NodeEventTarget) r12;

        $r4 = virtualinvoke r3.<org.apache.batik.dom.events.AbstractEvent: java.lang.String getType()>();

        $r5 = interfaceinvoke r13.<org.apache.batik.dom.events.NodeEventTarget: org.apache.batik.dom.events.EventSupport getEventSupport()>();

        if $r5 != null goto label6;

        goto label8;

     label6:
        $r6 = virtualinvoke $r5.<org.apache.batik.dom.events.EventSupport: org.apache.batik.dom.events.EventListenerList getEventListeners(java.lang.String,boolean)>($r4, z0);

        if $r6 != null goto label7;

        return;

     label7:
        $r7 = virtualinvoke $r6.<org.apache.batik.dom.events.EventListenerList: org.apache.batik.dom.events.EventListenerList$Entry[] getEventListeners()>();

        virtualinvoke r8.<org.apache.batik.dom.events.EventSupport: void fireEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.EventListenerList$Entry[],java.util.HashSet,java.util.HashSet)>(r13, r3, $r7, r9, r10);

     label8:
        i0 = i0 + 1;

     label9:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        return;
    }

    protected boolean isSingleScopeEvent(org.w3c.dom.events.Event)
    {
        org.apache.batik.dom.svg12.XBLEventSupport r1;
        org.w3c.dom.events.Event r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r0 := @parameter0: org.w3c.dom.events.Event;

        $z0 = r0 instanceof org.w3c.dom.events.MutationEvent;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.apache.batik.dom.xbl.ShadowTreeEvent;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected org.apache.batik.dom.events.AbstractEvent[] getRetargettedEvents(org.apache.batik.dom.events.NodeEventTarget, org.apache.batik.dom.events.NodeEventTarget[], org.apache.batik.dom.events.AbstractEvent)
    {
        org.apache.batik.dom.AbstractNode r3, r11, r20, r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        org.apache.batik.dom.events.NodeEventTarget[] r4;
        boolean $z0;
        org.apache.batik.dom.events.AbstractEvent r1, $r13, $r15, $r16, $r19;
        org.apache.batik.dom.events.NodeEventTarget r2, $r7, $r8, $r10, $r14, $r18;
        org.apache.batik.dom.svg12.XBLEventSupport r0;
        org.w3c.dom.Element $r6, $r9, $r12, $r17;
        org.apache.batik.dom.events.AbstractEvent[] r5;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r2 := @parameter0: org.apache.batik.dom.events.NodeEventTarget;

        r4 := @parameter1: org.apache.batik.dom.events.NodeEventTarget[];

        r1 := @parameter2: org.apache.batik.dom.events.AbstractEvent;

        $z0 = virtualinvoke r0.<org.apache.batik.dom.svg12.XBLEventSupport: boolean isSingleScopeEvent(org.w3c.dom.events.Event)>(r1);

        r3 = (org.apache.batik.dom.AbstractNode) r2;

        $i0 = lengthof r4;

        r5 = newarray (org.apache.batik.dom.events.AbstractEvent)[$i0];

        $i1 = lengthof r4;

        if $i1 <= 0 goto label5;

        $i2 = lengthof r4;

        i6 = $i2 - 1;

        $r6 = virtualinvoke r3.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblBoundElement()>();

        $r7 = r4[i6];

        r20 = (org.apache.batik.dom.AbstractNode) $r7;

        if $z0 != 0 goto label1;

        $r17 = virtualinvoke r20.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblBoundElement()>();

        if $r17 == $r6 goto label1;

        $r18 = r4[i6];

        $r19 = virtualinvoke r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.events.AbstractEvent retargetEvent(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>(r1, $r18);

        r5[i6] = $r19;

        goto label4;

     label1:
        r5[i6] = r1;

        goto label4;

     label2:
        $i3 = i6 + 1;

        $r8 = r4[$i3];

        r21 = (org.apache.batik.dom.AbstractNode) $r8;

        $r9 = virtualinvoke r21.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblBoundElement()>();

        $r10 = r4[i6];

        r11 = (org.apache.batik.dom.AbstractNode) $r10;

        $r12 = virtualinvoke r11.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblBoundElement()>();

        if $z0 != 0 goto label3;

        if $r12 == $r9 goto label3;

        $i5 = i6 + 1;

        $r15 = r5[$i5];

        $r14 = r4[i6];

        $r16 = virtualinvoke r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.events.AbstractEvent retargetEvent(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>($r15, $r14);

        r5[i6] = $r16;

        goto label4;

     label3:
        $i4 = i6 + 1;

        $r13 = r5[$i4];

        r5[i6] = $r13;

     label4:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        if i6 >= 0 goto label2;

     label5:
        return r5;
    }

    protected org.apache.batik.dom.events.AbstractEvent retargetEvent(org.apache.batik.dom.events.AbstractEvent, org.apache.batik.dom.events.NodeEventTarget)
    {
        org.apache.batik.dom.svg12.XBLEventSupport r2;
        org.apache.batik.dom.events.AbstractEvent r0, $r1;
        org.apache.batik.dom.events.NodeEventTarget r3;

        r2 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r0 := @parameter0: org.apache.batik.dom.events.AbstractEvent;

        r3 := @parameter1: org.apache.batik.dom.events.NodeEventTarget;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.events.AbstractEvent: org.apache.batik.dom.events.AbstractEvent cloneEvent()>();

        virtualinvoke r2.<org.apache.batik.dom.events.EventSupport: void setTarget(org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.NodeEventTarget)>($r1, r3);

        return $r1;
    }

    public org.apache.batik.dom.events.EventListenerList getImplementationEventListeners(java.lang.String, boolean)
    {
        org.apache.batik.dom.svg12.XBLEventSupport r0;
        org.apache.batik.dom.events.EventListenerList $r3;
        org.apache.batik.dom.util.HashTable $r4;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable capturingImplementationListeners>;

        goto label2;

     label1:
        $r4 = r0.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable bubblingImplementationListeners>;

     label2:
        if $r4 != null goto label3;

        return null;

     label3:
        $r2 = virtualinvoke $r4.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (org.apache.batik.dom.events.EventListenerList) $r2;

        return $r3;
    }

    protected void fireImplementationEventListeners(org.apache.batik.dom.events.NodeEventTarget, org.apache.batik.dom.events.AbstractEvent, boolean)
    {
        org.apache.batik.dom.events.EventListenerList $r5;
        org.apache.batik.dom.events.EventSupport $r3;
        org.apache.batik.dom.events.AbstractEvent r0;
        org.apache.batik.dom.events.EventListenerList$Entry[] $r6;
        org.apache.batik.dom.events.NodeEventTarget r2;
        org.apache.batik.dom.svg12.XBLEventSupport r4, r7;
        java.lang.String $r1;
        boolean z0;

        r7 := @this: org.apache.batik.dom.svg12.XBLEventSupport;

        r2 := @parameter0: org.apache.batik.dom.events.NodeEventTarget;

        r0 := @parameter1: org.apache.batik.dom.events.AbstractEvent;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String getType()>();

        $r3 = interfaceinvoke r2.<org.apache.batik.dom.events.NodeEventTarget: org.apache.batik.dom.events.EventSupport getEventSupport()>();

        r4 = (org.apache.batik.dom.svg12.XBLEventSupport) $r3;

        if r4 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r4.<org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.events.EventListenerList getImplementationEventListeners(java.lang.String,boolean)>($r1, z0);

        if $r5 != null goto label2;

        return;

     label2:
        $r6 = virtualinvoke $r5.<org.apache.batik.dom.events.EventListenerList: org.apache.batik.dom.events.EventListenerList$Entry[] getEventListeners()>();

        virtualinvoke r7.<org.apache.batik.dom.events.EventSupport: void fireEventListeners(org.apache.batik.dom.events.NodeEventTarget,org.apache.batik.dom.events.AbstractEvent,org.apache.batik.dom.events.EventListenerList$Entry[],java.util.HashSet,java.util.HashSet)>(r2, r0, $r6, null, null);

        return;
    }

    static void <clinit>()
    {
        org.apache.batik.dom.util.HashTable $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = new org.apache.batik.dom.util.HashTable;

        specialinvoke $r0.<org.apache.batik.dom.util.HashTable: void <init>()>();

        <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases> = $r0;

        $r1 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        virtualinvoke $r1.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SVGLoad", "load");

        $r2 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SVGUnoad", "unload");

        $r3 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        virtualinvoke $r3.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SVGAbort", "abort");

        $r4 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        virtualinvoke $r4.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SVGError", "error");

        $r5 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        virtualinvoke $r5.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SVGResize", "resize");

        $r6 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        virtualinvoke $r6.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SVGScroll", "scroll");

        $r7 = <org.apache.batik.dom.svg12.XBLEventSupport: org.apache.batik.dom.util.HashTable eventTypeAliases>;

        virtualinvoke $r7.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SVGZoom", "zoom");

        return;
    }
}
