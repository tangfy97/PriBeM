public class org.apache.batik.css.parser.ExtendedParserWrapper extends java.lang.Object implements org.apache.batik.css.parser.ExtendedParser
{
    public org.w3c.css.sac.Parser parser;

    public static org.apache.batik.css.parser.ExtendedParser wrap(org.w3c.css.sac.Parser)
    {
        org.apache.batik.css.parser.ExtendedParser $r2;
        org.w3c.css.sac.Parser r0;
        org.apache.batik.css.parser.ExtendedParserWrapper $r1;
        boolean $z0;

        r0 := @parameter0: org.w3c.css.sac.Parser;

        $z0 = r0 instanceof org.apache.batik.css.parser.ExtendedParser;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.batik.css.parser.ExtendedParser) r0;

        return $r2;

     label1:
        $r1 = new org.apache.batik.css.parser.ExtendedParserWrapper;

        specialinvoke $r1.<org.apache.batik.css.parser.ExtendedParserWrapper: void <init>(org.w3c.css.sac.Parser)>(r0);

        return $r1;
    }

    public void <init>(org.w3c.css.sac.Parser)
    {
        org.w3c.css.sac.Parser r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser> = r1;

        return;
    }

    public java.lang.String getParserVersion()
    {
        org.w3c.css.sac.Parser $r1;
        java.lang.String $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        $r1 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r2 = interfaceinvoke $r1.<org.w3c.css.sac.Parser: java.lang.String getParserVersion()>();

        return $r2;
    }

    public void setLocale(java.util.Locale) throws org.w3c.css.sac.CSSException
    {
        org.w3c.css.sac.Parser $r2;
        java.util.Locale r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public void setDocumentHandler(org.w3c.css.sac.DocumentHandler)
    {
        org.w3c.css.sac.Parser $r2;
        org.w3c.css.sac.DocumentHandler r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.DocumentHandler;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void setDocumentHandler(org.w3c.css.sac.DocumentHandler)>(r1);

        return;
    }

    public void setSelectorFactory(org.w3c.css.sac.SelectorFactory)
    {
        org.w3c.css.sac.Parser $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.SelectorFactory r1;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.SelectorFactory;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void setSelectorFactory(org.w3c.css.sac.SelectorFactory)>(r1);

        return;
    }

    public void setConditionFactory(org.w3c.css.sac.ConditionFactory)
    {
        org.w3c.css.sac.Parser $r2;
        org.w3c.css.sac.ConditionFactory r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.ConditionFactory;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void setConditionFactory(org.w3c.css.sac.ConditionFactory)>(r1);

        return;
    }

    public void setErrorHandler(org.w3c.css.sac.ErrorHandler)
    {
        org.w3c.css.sac.Parser $r2;
        org.w3c.css.sac.ErrorHandler r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.ErrorHandler;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void setErrorHandler(org.w3c.css.sac.ErrorHandler)>(r1);

        return;
    }

    public void parseStyleSheet(org.w3c.css.sac.InputSource) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r2;
        org.w3c.css.sac.InputSource r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.InputSource;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void parseStyleSheet(org.w3c.css.sac.InputSource)>(r1);

        return;
    }

    public void parseStyleSheet(java.lang.String) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r2;
        java.lang.String r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void parseStyleSheet(java.lang.String)>(r1);

        return;
    }

    public void parseStyleDeclaration(org.w3c.css.sac.InputSource) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r2;
        org.w3c.css.sac.InputSource r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.InputSource;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void parseStyleDeclaration(org.w3c.css.sac.InputSource)>(r1);

        return;
    }

    public void parseStyleDeclaration(java.lang.String) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r4;
        java.io.StringReader $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.InputSource $r1;
        java.lang.String r3;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r3 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r1 = new org.w3c.css.sac.InputSource;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<org.w3c.css.sac.InputSource: void <init>(java.io.Reader)>($r2);

        interfaceinvoke $r4.<org.w3c.css.sac.Parser: void parseStyleDeclaration(org.w3c.css.sac.InputSource)>($r1);

        return;
    }

    public void parseRule(org.w3c.css.sac.InputSource) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r2;
        org.w3c.css.sac.InputSource r1;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.InputSource;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        interfaceinvoke $r2.<org.w3c.css.sac.Parser: void parseRule(org.w3c.css.sac.InputSource)>(r1);

        return;
    }

    public void parseRule(java.lang.String) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r4;
        java.io.StringReader $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.InputSource $r1;
        java.lang.String r3;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r3 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r1 = new org.w3c.css.sac.InputSource;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<org.w3c.css.sac.InputSource: void <init>(java.io.Reader)>($r2);

        interfaceinvoke $r4.<org.w3c.css.sac.Parser: void parseRule(org.w3c.css.sac.InputSource)>($r1);

        return;
    }

    public org.w3c.css.sac.SelectorList parseSelectors(org.w3c.css.sac.InputSource) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.SelectorList $r3;
        org.w3c.css.sac.InputSource r1;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.InputSource;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r3 = interfaceinvoke $r2.<org.w3c.css.sac.Parser: org.w3c.css.sac.SelectorList parseSelectors(org.w3c.css.sac.InputSource)>(r1);

        return $r3;
    }

    public org.w3c.css.sac.SelectorList parseSelectors(java.lang.String) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r4;
        java.io.StringReader $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.SelectorList $r5;
        org.w3c.css.sac.InputSource $r1;
        java.lang.String r3;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r3 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r1 = new org.w3c.css.sac.InputSource;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<org.w3c.css.sac.InputSource: void <init>(java.io.Reader)>($r2);

        $r5 = interfaceinvoke $r4.<org.w3c.css.sac.Parser: org.w3c.css.sac.SelectorList parseSelectors(org.w3c.css.sac.InputSource)>($r1);

        return $r5;
    }

    public org.w3c.css.sac.LexicalUnit parsePropertyValue(org.w3c.css.sac.InputSource) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.LexicalUnit $r3;
        org.w3c.css.sac.InputSource r1;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.InputSource;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r3 = interfaceinvoke $r2.<org.w3c.css.sac.Parser: org.w3c.css.sac.LexicalUnit parsePropertyValue(org.w3c.css.sac.InputSource)>(r1);

        return $r3;
    }

    public org.w3c.css.sac.LexicalUnit parsePropertyValue(java.lang.String) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r4;
        java.io.StringReader $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.LexicalUnit $r5;
        org.w3c.css.sac.InputSource $r1;
        java.lang.String r3;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r3 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r1 = new org.w3c.css.sac.InputSource;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<org.w3c.css.sac.InputSource: void <init>(java.io.Reader)>($r2);

        $r5 = interfaceinvoke $r4.<org.w3c.css.sac.Parser: org.w3c.css.sac.LexicalUnit parsePropertyValue(org.w3c.css.sac.InputSource)>($r1);

        return $r5;
    }

    public boolean parsePriority(org.w3c.css.sac.InputSource) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.InputSource r1;
        boolean $z0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: org.w3c.css.sac.InputSource;

        $r2 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $z0 = interfaceinvoke $r2.<org.w3c.css.sac.Parser: boolean parsePriority(org.w3c.css.sac.InputSource)>(r1);

        return $z0;
    }

    public org.w3c.css.sac.SACMediaList parseMedia(java.lang.String) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.apache.batik.css.parser.ExtendedParserWrapper r5;
        org.apache.batik.css.parser.CSSSACMediaList $r0;
        java.util.StringTokenizer $r3;
        java.lang.String r1, $r2, $r4;
        boolean $z0, $z1;

        r5 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.css.parser.CSSSACMediaList;

        specialinvoke $r0.<org.apache.batik.css.parser.CSSSACMediaList: void <init>()>();

        $r2 = "all";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 != 0 goto label3;

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " ,");

        goto label2;

     label1:
        $r4 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r0.<org.apache.batik.css.parser.CSSSACMediaList: void append(java.lang.String)>($r4);

     label2:
        $z1 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label1;

     label3:
        return $r0;
    }

    public boolean parsePriority(java.lang.String) throws org.w3c.css.sac.CSSException, java.io.IOException
    {
        org.w3c.css.sac.Parser $r4;
        java.io.StringReader $r2;
        org.apache.batik.css.parser.ExtendedParserWrapper r0;
        org.w3c.css.sac.InputSource $r1;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.apache.batik.css.parser.ExtendedParserWrapper;

        r3 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.batik.css.parser.ExtendedParserWrapper: org.w3c.css.sac.Parser parser>;

        $r1 = new org.w3c.css.sac.InputSource;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<org.w3c.css.sac.InputSource: void <init>(java.io.Reader)>($r2);

        $z0 = interfaceinvoke $r4.<org.w3c.css.sac.Parser: boolean parsePriority(org.w3c.css.sac.InputSource)>($r1);

        return $z0;
    }
}
