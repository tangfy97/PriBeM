public abstract class org.codehaus.jackson.map.deser.ValueInstantiator extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.String getValueTypeDesc();

    public boolean canInstantiate()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDelegate()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromObjectWith()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromString()>();

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromInt()>();

        if $z4 != 0 goto label1;

        $z5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromLong()>();

        if $z5 != 0 goto label1;

        $z6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromDouble()>();

        if $z6 != 0 goto label1;

        $z7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromBoolean()>();

        if $z7 == 0 goto label2;

     label1:
        $z8 = 1;

        goto label3;

     label2:
        $z8 = 0;

     label3:
        return $z8;
    }

    public boolean canCreateFromString()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return 0;
    }

    public boolean canCreateFromInt()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return 0;
    }

    public boolean canCreateFromLong()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return 0;
    }

    public boolean canCreateFromDouble()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return 0;
    }

    public boolean canCreateFromBoolean()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return 0;
    }

    public boolean canCreateUsingDefault()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateUsingDelegate()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.deser.ValueInstantiator r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ValueInstantiator: org.codehaus.jackson.type.JavaType getDelegateType()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canCreateFromObjectWith()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return 0;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return null;
    }

    public org.codehaus.jackson.type.JavaType getDelegateType()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return null;
    }

    public java.lang.Object createUsingDefault() throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; no default creator found");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.Object createFromObjectWith(java.lang.Object[]) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object[] r8;
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        r8 := @parameter0: java.lang.Object[];

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with arguments");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.Object createUsingDelegate(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.Object r8;
        java.lang.String $r4, $r7;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        r8 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using delegate");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.Object createFromString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7, r8;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        r8 := @parameter0: java.lang.String;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON String");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.Object createFromInt(int) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        org.codehaus.jackson.map.JsonMappingException $r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        i0 := @parameter0: int;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON int number");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.Object createFromLong(long) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        long l0;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        l0 := @parameter0: long;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON long number");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.Object createFromDouble(double) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7;
        double d0;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        d0 := @parameter0: double;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON floating-point number");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.Object createFromBoolean(boolean) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r3;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r4, $r7;
        boolean z0;

        r3 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        z0 := @parameter0: boolean;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate value of type ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.String getValueTypeDesc()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from JSON boolean value");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return null;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return null;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator()
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r0;

        r0 := @this: org.codehaus.jackson.map.deser.ValueInstantiator;

        return null;
    }
}
