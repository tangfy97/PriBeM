public abstract class org.apache.lucene.index.MergeState$DocMap extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    void <init>()
    {
        org.apache.lucene.index.MergeState$DocMap r0;

        r0 := @this: org.apache.lucene.index.MergeState$DocMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int get(int);

    public abstract int maxDoc();

    public final int numDocs()
    {
        int $i0, $i1, $i2;
        org.apache.lucene.index.MergeState$DocMap r0;

        r0 := @this: org.apache.lucene.index.MergeState$DocMap;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.MergeState$DocMap: int maxDoc()>();

        $i1 = virtualinvoke r0.<org.apache.lucene.index.MergeState$DocMap: int numDeletedDocs()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public abstract int numDeletedDocs();

    public boolean hasDeletions()
    {
        int $i0;
        org.apache.lucene.index.MergeState$DocMap r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MergeState$DocMap;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.MergeState$DocMap: int numDeletedDocs()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static org.apache.lucene.index.MergeState$DocMap build(org.apache.lucene.index.AtomicReader)
    {
        org.apache.lucene.index.MergeState$NoDelDocMap $r3;
        int $i0;
        org.apache.lucene.index.MergeState$DocMap $r2;
        org.apache.lucene.util.Bits $r1;
        org.apache.lucene.index.AtomicReader r0;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $z0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: boolean hasDeletions()>();

        if $z0 != 0 goto label1;

        $r3 = new org.apache.lucene.index.MergeState$NoDelDocMap;

        specialinvoke $r3.<org.apache.lucene.index.MergeState$NoDelDocMap: void <init>(int,org.apache.lucene.index.MergeState$1)>($i0, null);

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $r2 = staticinvoke <org.apache.lucene.index.MergeState$DocMap: org.apache.lucene.index.MergeState$DocMap build(int,org.apache.lucene.util.Bits)>($i0, $r1);

        return $r2;
    }

    static org.apache.lucene.index.MergeState$DocMap build(int, org.apache.lucene.util.Bits)
    {
        long $l1, $l2, $l5;
        java.lang.AssertionError $r3, $r4;
        byte $b3;
        int i0, $i4, i6, i7, i8;
        org.apache.lucene.util.Bits r2;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.packed.MonotonicAppendingLongBuffer $r0;
        org.apache.lucene.index.MergeState$DocMap$1 $r1;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.util.Bits;

        $z0 = <org.apache.lucene.index.MergeState$DocMap: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r0 = new org.apache.lucene.util.packed.MonotonicAppendingLongBuffer;

        specialinvoke $r0.<org.apache.lucene.util.packed.MonotonicAppendingLongBuffer: void <init>()>();

        i6 = 0;

        i7 = 0;

     label2:
        if i7 >= i0 goto label4;

        $i4 = i7 - i6;

        $l5 = (long) $i4;

        virtualinvoke $r0.<org.apache.lucene.util.packed.MonotonicAppendingLongBuffer: void add(long)>($l5);

        $z2 = interfaceinvoke r2.<org.apache.lucene.util.Bits: boolean get(int)>(i7);

        if $z2 != 0 goto label3;

        i6 = i6 + 1;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        i8 = i6;

        $z1 = <org.apache.lucene.index.MergeState$DocMap: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $l1 = virtualinvoke $r0.<org.apache.lucene.util.packed.MonotonicAppendingLongBuffer: long size()>();

        $l2 = (long) i0;

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label5;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label5:
        $r1 = new org.apache.lucene.index.MergeState$DocMap$1;

        specialinvoke $r1.<org.apache.lucene.index.MergeState$DocMap$1: void <init>(org.apache.lucene.util.Bits,org.apache.lucene.util.packed.MonotonicAppendingLongBuffer,int,int)>(r2, $r0, i0, i8);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/MergeState;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.MergeState$DocMap: boolean $assertionsDisabled> = $z1;

        return;
    }
}
