public class org.bouncycastle.crypto.encodings.ISO9796d1Encoding extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricBlockCipher
{
    private static byte[] shadows;
    private static byte[] inverse;
    private org.bouncycastle.crypto.AsymmetricBlockCipher engine;
    private boolean forEncryption;
    private int bitSize;
    private int padBits;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits> = 0;

        r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine> = r1;

        return;
    }

    public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        return $r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        org.bouncycastle.crypto.params.RSAKeyParameters r6;
        org.bouncycastle.crypto.params.ParametersWithRandom r4;
        int $i0;
        java.math.BigInteger $r3;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r1;
        org.bouncycastle.crypto.CipherParameters r0, $r5;
        boolean $z0, z1;

        r1 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        z1 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z0 == 0 goto label1;

        r4 = (org.bouncycastle.crypto.params.ParametersWithRandom) r0;

        $r5 = virtualinvoke r4.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r6 = (org.bouncycastle.crypto.params.RSAKeyParameters) $r5;

        goto label2;

     label1:
        r6 = (org.bouncycastle.crypto.params.RSAKeyParameters) r0;

     label2:
        $r2 = r1.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z1, r0);

        $r3 = virtualinvoke r6.<org.bouncycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        r1.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize> = $i0;

        r1.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption> = z1;

        return;
    }

    public int getInputBlockSize()
    {
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $z0 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i1 = $i0 + 1;

        $i2 = $i1 / 2;

        return $i2;

     label1:
        return $i0;
    }

    public int getOutputBlockSize()
    {
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r1 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

        $z0 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        return $i0;

     label1:
        $i1 = $i0 + 1;

        $i2 = $i1 / 2;

        return $i2;
    }

    public void setPadBits(int)
    {
        int i0;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        i0 := @parameter0: int;

        if i0 <= 7 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("padBits > 7");

        throw $r1;

     label1:
        r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits> = i0;

        return;
    }

    public int getPadBits()
    {
        int $i0;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $i0 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits>;

        return $i0;
    }

    public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r2, $r3;
        int i0, i1;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] encodeBlock(byte[],int,int)>(r1, i0, i1);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] decodeBlock(byte[],int,int)>(r1, i0, i1);

        return $r2;
    }

    private byte[] encodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r3, $r4, $r5, r6;
        byte $b15, $b17, $b21, $b24, $b29, $b31, $b35, $b37, $b39, $b41, $b48, $b49, $b50, $b53, b68, b70;
        short $s30, $s46, $s71, $s80;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i19, $i20, $i22, $i23, $i25, $i26, $i27, $i28, $i32, $i33, $i34, $i36, $i38, $i40, $i42, $i43, $i44, $i45, $i47, $i51, $i52, $i54, $i55, i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, i66, i67, i69, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        r6 := @parameter0: byte[];

        i56 := @parameter1: int;

        i5 := @parameter2: int;

        $i0 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i1 = $i0 + 7;

        $i2 = $i1 / 8;

        r1 = newarray (byte)[$i2];

        $i3 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits>;

        i4 = $i3 + 1;

        $i6 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i7 = $i6 + 13;

        i8 = $i7 / 16;

        i66 = 0;

     label1:
        if i66 >= i8 goto label4;

        $i55 = i8 - i5;

        if i66 <= $i55 goto label2;

        $i61 = i56 + i5;

        $i60 = i8 - i66;

        $i65 = $i61 - $i60;

        $i62 = lengthof r1;

        $i64 = $i62 - i8;

        $i63 = i8 - i66;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, $i65, r1, $i64, $i63);

        goto label3;

     label2:
        $i58 = lengthof r1;

        $i57 = i66 + i5;

        $i59 = $i58 - $i57;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, i56, r1, $i59, i5);

     label3:
        i66 = i66 + i5;

        goto label1;

     label4:
        $i10 = lengthof r1;

        $i9 = 2 * i8;

        i67 = $i10 - $i9;

     label5:
        $i11 = lengthof r1;

        if i67 == $i11 goto label6;

        $i42 = lengthof r1;

        $i44 = $i42 - i8;

        $i43 = i67 / 2;

        $i45 = $i44 + $i43;

        b68 = r1[$i45];

        $r4 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $s71 = (short) b68;

        $s46 = $s71 & 255;

        $i72 = (int) $s46;

        $i47 = $i72 >>> 4;

        $b48 = $r4[$i47];

        $i73 = (int) $b48;

        $i51 = $i73 << 4;

        $r5 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b49 = b68 & 15;

        $i74 = (int) $b49;

        $b50 = $r5[$i74];

        $i75 = (int) $b50;

        $i52 = $i51 | $i75;

        $b53 = (byte) $i52;

        r1[i67] = $b53;

        $i54 = i67 + 1;

        r1[$i54] = b68;

        i67 = i67 + 2;

        goto label5;

     label6:
        $i13 = lengthof r1;

        $i12 = 2 * i5;

        $i14 = $i13 - $i12;

        $b15 = r1[$i14];

        $i76 = (int) $b15;

        $i16 = $i76 ^ i4;

        $b17 = (byte) $i16;

        r1[$i14] = $b17;

        $i18 = lengthof r1;

        $i25 = $i18 - 1;

        $i19 = lengthof r1;

        $i20 = $i19 - 1;

        $b21 = r1[$i20];

        $i77 = (int) $b21;

        $i22 = $i77 << 4;

        $i23 = $i22 | 6;

        $b24 = (byte) $i23;

        r1[$i25] = $b24;

        $i26 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i27 = $i26 - 1;

        $i28 = $i27 % 8;

        i69 = 8 - $i28;

        z0 = 0;

        z1 = 0;

        b70 = 0;

        if i69 == 8 goto label7;

        $b35 = r1[0];

        $i34 = 255 >>> i69;

        $i78 = (int) $b35;

        $i36 = $i78 & $i34;

        $b37 = (byte) $i36;

        r1[0] = $b37;

        $b39 = r1[0];

        $i38 = 128 >>> i69;

        $i79 = (int) $b39;

        $i40 = $i79 | $i38;

        $b41 = (byte) $i40;

        r1[0] = $b41;

        goto label8;

     label7:
        r1[0] = 0;

        $b29 = r1[1];

        $s80 = (short) $b29;

        $s30 = $s80 | 128;

        $b31 = (byte) $s30;

        r1[1] = $b31;

        z0 = 1;

        z1 = 1;

        b70 = 1;

     label8:
        $r2 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i32 = lengthof r1;

        $i33 = $i32 - z1;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r1, b70, $i33);

        return $r3;
    }

    private byte[] decodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r3, $r4, $r5, $r6, $r7, $r8, r11;
        byte $b7, $b8, $b12, $b16, $b19, $b23, $b25, $b28, $b29, $b30, $b31, $b34, $b47, $b48, $b51, $b52, $b53, $b54, $b57, $b61;
        org.bouncycastle.crypto.InvalidCipherTextException $r12, $r13;
        short $s13, $s17, $s26, $s49, $s69, $s71, $s74, $s79;
        boolean z0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i9, $i10, $i11, $i14, $i15, $i18, $i20, $i21, $i22, $i24, $i27, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i50, $i55, $i56, $i58, $i59, $i60, $i62, i63, i64, i65, i66, i67, $i68, $i70, $i72, $i73, $i75, $i76, $i77, $i78, $i80, $i81, $i82, $i83, $i84, $i85, $i87;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding r0;

        r0 := @this: org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r1, i0, i1);

        i63 = 1;

        $i2 = r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int bitSize>;

        $i3 = $i2 + 13;

        i4 = $i3 / 16;

        $i5 = lengthof $r3;

        $i6 = $i5 - 1;

        $b7 = $r3[$i6];

        $b8 = $b7 & 15;

        $i68 = (int) $b8;

        if $i68 == 6 goto label1;

        $r12 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r12.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("invalid forcing byte in block");

        throw $r12;

     label1:
        $i9 = lengthof $r3;

        $i24 = $i9 - 1;

        $i10 = lengthof $r3;

        $i11 = $i10 - 1;

        $b12 = $r3[$i11];

        $s69 = (short) $b12;

        $s13 = $s69 & 255;

        $i70 = (int) $s13;

        $i21 = $i70 >>> 4;

        $r4 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] inverse>;

        $i14 = lengthof $r3;

        $i15 = $i14 - 2;

        $b16 = $r3[$i15];

        $s71 = (short) $b16;

        $s17 = $s71 & 255;

        $i72 = (int) $s17;

        $i18 = $i72 >> 4;

        $b19 = $r4[$i18];

        $i73 = (int) $b19;

        $i20 = $i73 << 4;

        $i22 = $i21 | $i20;

        $b23 = (byte) $i22;

        $r3[$i24] = $b23;

        $r5 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b25 = $r3[1];

        $s74 = (short) $b25;

        $s26 = $s74 & 255;

        $i75 = (int) $s26;

        $i27 = $i75 >>> 4;

        $b28 = $r5[$i27];

        $i76 = (int) $b28;

        $i32 = $i76 << 4;

        $r6 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b29 = $r3[1];

        $b30 = $b29 & 15;

        $i77 = (int) $b30;

        $b31 = $r6[$i77];

        $i78 = (int) $b31;

        $i33 = $i32 | $i78;

        $b34 = (byte) $i33;

        $r3[0] = $b34;

        z0 = 0;

        i64 = 0;

        $i35 = lengthof $r3;

        i65 = $i35 - 1;

     label2:
        $i37 = lengthof $r3;

        $i36 = 2 * i4;

        $i38 = $i37 - $i36;

        if i65 < $i38 goto label5;

        $r7 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b48 = $r3[i65];

        $s79 = (short) $b48;

        $s49 = $s79 & 255;

        $i80 = (int) $s49;

        $i50 = $i80 >>> 4;

        $b51 = $r7[$i50];

        $i81 = (int) $b51;

        $i55 = $i81 << 4;

        $r8 = <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows>;

        $b52 = $r3[i65];

        $b53 = $b52 & 15;

        $i82 = (int) $b53;

        $b54 = $r8[$i82];

        $i83 = (int) $b54;

        i66 = $i55 | $i83;

        $i56 = i65 - 1;

        $b57 = $r3[$i56];

        $i84 = (int) $b57;

        $i58 = $i84 ^ i66;

        $i59 = $i58 & 255;

        if $i59 == 0 goto label4;

        if z0 != 0 goto label3;

        z0 = 1;

        $i60 = i65 - 1;

        $b61 = $r3[$i60];

        $i85 = (int) $b61;

        $i62 = $i85 ^ i66;

        i63 = $i62 & 255;

        i64 = i65 - 1;

        goto label4;

     label3:
        $r13 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r13.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("invalid tsums in block");

        throw $r13;

     label4:
        $i87 = (int) -2;

        i65 = i65 + $i87;

        goto label2;

     label5:
        $r3[i64] = 0;

        $i39 = lengthof $r3;

        $i40 = $i39 - i64;

        $i41 = $i40 / 2;

        r11 = newarray (byte)[$i41];

        i67 = 0;

     label6:
        $i42 = lengthof r11;

        if i67 >= $i42 goto label7;

        $i44 = 2 * i67;

        $i45 = $i44 + i64;

        $i46 = $i45 + 1;

        $b47 = $r3[$i46];

        r11[i67] = $b47;

        i67 = i67 + 1;

        goto label6;

     label7:
        $i43 = i63 - 1;

        r0.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: int padBits> = $i43;

        return r11;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1;

        $r0 = newarray (byte)[16];

        $r0[0] = 14;

        $r0[1] = 3;

        $r0[2] = 5;

        $r0[3] = 8;

        $r0[4] = 9;

        $r0[5] = 4;

        $r0[6] = 2;

        $r0[7] = 15;

        $r0[8] = 0;

        $r0[9] = 13;

        $r0[10] = 11;

        $r0[11] = 6;

        $r0[12] = 7;

        $r0[13] = 10;

        $r0[14] = 12;

        $r0[15] = 1;

        <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] shadows> = $r0;

        $r1 = newarray (byte)[16];

        $r1[0] = 8;

        $r1[1] = 15;

        $r1[2] = 6;

        $r1[3] = 1;

        $r1[4] = 5;

        $r1[5] = 2;

        $r1[6] = 11;

        $r1[7] = 12;

        $r1[8] = 3;

        $r1[9] = 4;

        $r1[10] = 13;

        $r1[11] = 10;

        $r1[12] = 14;

        $r1[13] = 9;

        $r1[14] = 0;

        $r1[15] = 7;

        <org.bouncycastle.crypto.encodings.ISO9796d1Encoding: byte[] inverse> = $r1;

        return;
    }
}
