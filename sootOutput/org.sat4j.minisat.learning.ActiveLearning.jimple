public final class org.sat4j.minisat.learning.ActiveLearning extends org.sat4j.minisat.learning.LimitedLearning
{
    private static final long serialVersionUID;
    private double percent;
    private org.sat4j.minisat.core.IOrder order;
    private int maxpercent;

    public void <init>()
    {
        org.sat4j.minisat.learning.ActiveLearning r0;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        specialinvoke r0.<org.sat4j.minisat.learning.ActiveLearning: void <init>(double)>(0.95);

        return;
    }

    public void <init>(double)
    {
        org.sat4j.minisat.learning.ActiveLearning r0;
        double d0;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        d0 := @parameter0: double;

        specialinvoke r0.<org.sat4j.minisat.learning.LimitedLearning: void <init>()>();

        r0.<org.sat4j.minisat.learning.ActiveLearning: double percent> = d0;

        return;
    }

    public void setOrder(org.sat4j.minisat.core.IOrder)
    {
        org.sat4j.minisat.learning.ActiveLearning r0;
        org.sat4j.minisat.core.IOrder r1;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        r1 := @parameter0: org.sat4j.minisat.core.IOrder;

        r0.<org.sat4j.minisat.learning.ActiveLearning: org.sat4j.minisat.core.IOrder order> = r1;

        return;
    }

    public void setSolver(org.sat4j.minisat.core.Solver)
    {
        org.sat4j.minisat.learning.ActiveLearning r0;
        org.sat4j.minisat.core.IOrder $r2;
        org.sat4j.minisat.core.Solver r1;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        r1 := @parameter0: org.sat4j.minisat.core.Solver;

        specialinvoke r0.<org.sat4j.minisat.learning.LimitedLearning: void setSolver(org.sat4j.minisat.core.Solver)>(r1);

        $r2 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder getOrder()>();

        r0.<org.sat4j.minisat.learning.ActiveLearning: org.sat4j.minisat.core.IOrder order> = $r2;

        return;
    }

    public void setActivityPercent(double)
    {
        org.sat4j.minisat.learning.ActiveLearning r0;
        double d0;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        d0 := @parameter0: double;

        r0.<org.sat4j.minisat.learning.ActiveLearning: double percent> = d0;

        return;
    }

    public double getActivityPercent()
    {
        org.sat4j.minisat.learning.ActiveLearning r0;
        double $d0;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        $d0 = r0.<org.sat4j.minisat.learning.ActiveLearning: double percent>;

        return $d0;
    }

    protected boolean learningCondition(org.sat4j.minisat.core.Constr)
    {
        org.sat4j.minisat.core.Constr r0;
        byte $b2, $b4;
        int $i0, $i1, $i3, i5, i6, $i7, $i8;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;
        org.sat4j.minisat.core.IOrder $r2;
        org.sat4j.minisat.learning.ActiveLearning r1;

        r1 := @this: org.sat4j.minisat.learning.ActiveLearning;

        r0 := @parameter0: org.sat4j.minisat.core.Constr;

        i5 = 0;

        i6 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: int size()>();

        if i6 >= $i0 goto label3;

        $r2 = r1.<org.sat4j.minisat.learning.ActiveLearning: org.sat4j.minisat.core.IOrder order>;

        $i3 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: int get(int)>(i6);

        $d4 = interfaceinvoke $r2.<org.sat4j.minisat.core.IOrder: double varActivity(int)>($i3);

        $b4 = $d4 cmpl 1.0;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label2;

        i5 = i5 + 1;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $d0 = (double) i5;

        $i1 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: int size()>();

        $d2 = (double) $i1;

        $d1 = r1.<org.sat4j.minisat.learning.ActiveLearning: double percent>;

        $d3 = $d2 * $d1;

        $b2 = $d0 cmpl $d3;

        $i8 = (int) $b2;

        if $i8 <= 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.learning.ActiveLearning r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r5;
        double $d0, $d1;

        r2 := @this: org.sat4j.minisat.learning.ActiveLearning;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Limit learning to clauses containing active literals (");

        $d0 = r2.<org.sat4j.minisat.learning.ActiveLearning: double percent>;

        $d1 = $d0 * 100.0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void setLimit(int)
    {
        int i0;
        org.sat4j.minisat.learning.ActiveLearning r0;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        i0 := @parameter0: int;

        r0.<org.sat4j.minisat.learning.ActiveLearning: int maxpercent> = i0;

        return;
    }

    public int getLimit()
    {
        int $i0;
        org.sat4j.minisat.learning.ActiveLearning r0;

        r0 := @this: org.sat4j.minisat.learning.ActiveLearning;

        $i0 = r0.<org.sat4j.minisat.learning.ActiveLearning: int maxpercent>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.learning.ActiveLearning: long serialVersionUID> = 1L;

        return;
    }
}
