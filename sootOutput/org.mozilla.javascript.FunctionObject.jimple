public class org.mozilla.javascript.FunctionObject extends org.mozilla.javascript.BaseFunction
{
    static final long serialVersionUID;
    private static final short VARARGS_METHOD;
    private static final short VARARGS_CTOR;
    private static boolean sawSecurityException;
    public static final int JAVA_UNSUPPORTED_TYPE;
    public static final int JAVA_STRING_TYPE;
    public static final int JAVA_INT_TYPE;
    public static final int JAVA_BOOLEAN_TYPE;
    public static final int JAVA_DOUBLE_TYPE;
    public static final int JAVA_SCRIPTABLE_TYPE;
    public static final int JAVA_OBJECT_TYPE;
    org.mozilla.javascript.MemberBox member;
    private java.lang.String functionName;
    private transient byte[] typeTags;
    private int parmsLength;
    private transient boolean hasVoidReturn;
    private transient int returnTypeTag;
    private boolean isStatic;

    public void <init>(java.lang.String, java.lang.reflect.Member, org.mozilla.javascript.Scriptable)
    {
        byte[] $r19, $r21;
        byte $b2;
        java.lang.reflect.Member r1;
        java.lang.reflect.Constructor $r47;
        java.lang.String $r6, r7, $r13, $r23;
        org.mozilla.javascript.EvaluatorException $r14, $r24, $r49, $r50;
        org.mozilla.javascript.FunctionObject r0;
        java.lang.Class[] $r48;
        java.lang.reflect.Method $r3, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.mozilla.javascript.Scriptable r12;
        org.mozilla.javascript.MemberBox $r4, $r5, $r8, $r9, $r15, $r51, $r52, $r53;
        int $i0, $i1, $i3, i4, $i6, $i8;
        java.lang.Class $r10, $r11, $r17, $r18, $r20, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.reflect.Member;

        r12 := @parameter2: org.mozilla.javascript.Scriptable;

        specialinvoke r0.<org.mozilla.javascript.BaseFunction: void <init>()>();

        $z0 = r1 instanceof java.lang.reflect.Constructor;

        if $z0 == 0 goto label01;

        $r52 = new org.mozilla.javascript.MemberBox;

        $r47 = (java.lang.reflect.Constructor) r1;

        specialinvoke $r52.<org.mozilla.javascript.MemberBox: void <init>(java.lang.reflect.Constructor)>($r47);

        r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member> = $r52;

        r0.<org.mozilla.javascript.FunctionObject: boolean isStatic> = 1;

        goto label02;

     label01:
        $r53 = new org.mozilla.javascript.MemberBox;

        $r3 = (java.lang.reflect.Method) r1;

        specialinvoke $r53.<org.mozilla.javascript.MemberBox: void <init>(java.lang.reflect.Method)>($r3);

        r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member> = $r53;

        $r4 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $z1 = virtualinvoke $r4.<org.mozilla.javascript.MemberBox: boolean isStatic()>();

        r0.<org.mozilla.javascript.FunctionObject: boolean isStatic> = $z1;

     label02:
        $r5 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.MemberBox: java.lang.String getName()>();

        r0.<org.mozilla.javascript.FunctionObject: java.lang.String functionName> = r7;

        $r8 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r48 = $r8.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        $i3 = lengthof $r48;

        if $i3 != 4 goto label09;

        $r25 = $r48[1];

        $z3 = virtualinvoke $r25.<java.lang.Class: boolean isArray()>();

        if $z3 != 0 goto label03;

        $r45 = $r48[2];

        $z7 = virtualinvoke $r45.<java.lang.Class: boolean isArray()>();

        if $z7 == 0 goto label09;

     label03:
        $r26 = $r48[1];

        $z4 = virtualinvoke $r26.<java.lang.Class: boolean isArray()>();

        if $z4 == 0 goto label06;

        $z6 = r0.<org.mozilla.javascript.FunctionObject: boolean isStatic>;

        if $z6 == 0 goto label04;

        $r37 = $r48[0];

        $r36 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextClass>;

        if $r37 != $r36 goto label04;

        $r38 = $r48[1];

        $r39 = virtualinvoke $r38.<java.lang.Class: java.lang.Class getComponentType()>();

        $r40 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if $r39 != $r40 goto label04;

        $r42 = $r48[2];

        $r41 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class FunctionClass>;

        if $r42 != $r41 goto label04;

        $r44 = $r48[3];

        $r43 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r44 == $r43 goto label05;

     label04:
        $r49 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.varargs.ctor", $r6);

        throw $r49;

     label05:
        $i6 = (int) -2;

        r0.<org.mozilla.javascript.FunctionObject: int parmsLength> = $i6;

        goto label12;

     label06:
        $z5 = r0.<org.mozilla.javascript.FunctionObject: boolean isStatic>;

        if $z5 == 0 goto label07;

        $r28 = $r48[0];

        $r27 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextClass>;

        if $r28 != $r27 goto label07;

        $r30 = $r48[1];

        $r29 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        if $r30 != $r29 goto label07;

        $r31 = $r48[2];

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.Class getComponentType()>();

        $r33 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if $r32 != $r33 goto label07;

        $r35 = $r48[3];

        $r34 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class FunctionClass>;

        if $r35 == $r34 goto label08;

     label07:
        $r50 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.varargs.fun", $r6);

        throw $r50;

     label08:
        $i8 = (int) -1;

        r0.<org.mozilla.javascript.FunctionObject: int parmsLength> = $i8;

        goto label12;

     label09:
        r0.<org.mozilla.javascript.FunctionObject: int parmsLength> = $i3;

        if $i3 <= 0 goto label12;

        $r19 = newarray (byte)[$i3];

        r0.<org.mozilla.javascript.FunctionObject: byte[] typeTags> = $r19;

        i4 = 0;

     label10:
        if i4 == $i3 goto label12;

        $r20 = $r48[i4];

        $i1 = staticinvoke <org.mozilla.javascript.FunctionObject: int getTypeTag(java.lang.Class)>($r20);

        if $i1 != 0 goto label11;

        $r22 = $r48[i4];

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        $r24 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError2(java.lang.String,java.lang.Object,java.lang.Object)>("msg.bad.parms", $r23, $r6);

        throw $r24;

     label11:
        $r21 = r0.<org.mozilla.javascript.FunctionObject: byte[] typeTags>;

        $b2 = (byte) $i1;

        $r21[i4] = $b2;

        i4 = i4 + 1;

        goto label10;

     label12:
        $r51 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $z8 = virtualinvoke $r51.<org.mozilla.javascript.MemberBox: boolean isMethod()>();

        if $z8 == 0 goto label14;

        $r15 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r16 = virtualinvoke $r15.<org.mozilla.javascript.MemberBox: java.lang.reflect.Method method()>();

        $r17 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r18 = <java.lang.Void: java.lang.Class TYPE>;

        if $r17 != $r18 goto label13;

        r0.<org.mozilla.javascript.FunctionObject: boolean hasVoidReturn> = 1;

        goto label15;

     label13:
        $i0 = staticinvoke <org.mozilla.javascript.FunctionObject: int getTypeTag(java.lang.Class)>($r17);

        r0.<org.mozilla.javascript.FunctionObject: int returnTypeTag> = $i0;

        goto label15;

     label14:
        $r9 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r10 = virtualinvoke $r9.<org.mozilla.javascript.MemberBox: java.lang.Class getDeclaringClass()>();

        $r11 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        $z2 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        if $z2 != 0 goto label15;

        $r13 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r14 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.bad.ctor.return", $r13);

        throw $r14;

     label15:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void setFunctionProtoAndParent(org.mozilla.javascript.BaseFunction,org.mozilla.javascript.Scriptable)>(r0, r12);

        return;
    }

    public static int getTypeTag(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class IntegerClass>;

        if r0 == $r2 goto label2;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

     label2:
        return 2;

     label3:
        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        if r0 == $r4 goto label4;

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

     label4:
        return 3;

     label5:
        $r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class DoubleClass>;

        if r0 == $r6 goto label6;

        $r7 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r7 goto label7;

     label6:
        return 4;

     label7:
        $r8 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label8;

        return 5;

     label8:
        $r9 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r0 != $r9 goto label9;

        return 6;

     label9:
        return 0;
    }

    public static java.lang.Object convertArg(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, int)
    {
        java.lang.Double $r4;
        java.lang.Integer $r5;
        int i0, $i1;
        java.lang.Boolean $r8;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0;
        org.mozilla.javascript.Context r1;
        java.lang.IllegalArgumentException $r7;
        org.mozilla.javascript.Scriptable r2, $r3;
        java.lang.Object r0;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label03;
            case 3: goto label05;
            case 4: goto label09;
            case 5: goto label11;
            case 6: goto label13;
            default: goto label14;
        };

     label01:
        $z5 = r0 instanceof java.lang.String;

        if $z5 == 0 goto label02;

        return r0;

     label02:
        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        return $r6;

     label03:
        $z4 = r0 instanceof java.lang.Integer;

        if $z4 == 0 goto label04;

        return r0;

     label04:
        $r5 = new java.lang.Integer;

        $i1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(java.lang.Object)>(r0);

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i1);

        return $r5;

     label05:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label06;

        return r0;

     label06:
        $z3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>(r0);

        if $z3 == 0 goto label07;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label08;

     label07:
        $r8 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label08:
        return $r8;

     label09:
        $z1 = r0 instanceof java.lang.Double;

        if $z1 == 0 goto label10;

        return r0;

     label10:
        $r4 = new java.lang.Double;

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r0);

        specialinvoke $r4.<java.lang.Double: void <init>(double)>($d0);

        return $r4;

     label11:
        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label12;

        return r0;

     label12:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r1, r2, r0);

        return $r3;

     label13:
        return r0;

     label14:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;
    }

    public int getArity()
    {
        int $i0, $i1;
        org.mozilla.javascript.FunctionObject r0;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        $i0 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        if $i0 >= 0 goto label1;

        $i1 = 1;

        goto label2;

     label1:
        $i1 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

     label2:
        return $i1;
    }

    public int getLength()
    {
        int $i0;
        org.mozilla.javascript.FunctionObject r0;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.FunctionObject: int getArity()>();

        return $i0;
    }

    public java.lang.String getFunctionName()
    {
        org.mozilla.javascript.FunctionObject r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        $r1 = r0.<org.mozilla.javascript.FunctionObject: java.lang.String functionName>;

        if $r1 != null goto label1;

        $r2 = "";

        goto label2;

     label1:
        $r2 = r0.<org.mozilla.javascript.FunctionObject: java.lang.String functionName>;

     label2:
        return $r2;
    }

    public java.lang.reflect.Member getMethodOrConstructor()
    {
        org.mozilla.javascript.MemberBox $r1, $r2, $r4;
        org.mozilla.javascript.FunctionObject r0;
        java.lang.reflect.Constructor $r3;
        java.lang.reflect.Method $r5;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        $r1 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $z0 = virtualinvoke $r1.<org.mozilla.javascript.MemberBox: boolean isMethod()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.MemberBox: java.lang.reflect.Method method()>();

        return $r5;

     label1:
        $r2 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.MemberBox: java.lang.reflect.Constructor ctor()>();

        return $r3;
    }

    static java.lang.reflect.Method findSingleMethod(java.lang.reflect.Method[], java.lang.String)
    {
        org.mozilla.javascript.EvaluatorException $r6;
        java.lang.reflect.Method[] r0;
        int i0, i1;
        java.lang.Class $r4;
        java.lang.String r2, $r3, $r5;
        java.lang.reflect.Method r1, r7;
        boolean $z0;

        r0 := @parameter0: java.lang.reflect.Method[];

        r2 := @parameter1: java.lang.String;

        r7 = null;

        i1 = 0;

        i0 = lengthof r0;

     label1:
        if i1 == i0 goto label4;

        r1 = r0[i1];

        if r1 == null goto label3;

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        if r7 == null goto label2;

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError2(java.lang.String,java.lang.Object,java.lang.Object)>("msg.no.overload", r2, $r5);

        throw $r6;

     label2:
        r7 = r1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r7;
    }

    static java.lang.reflect.Method[] getMethodList(java.lang.Class)
    {
        java.lang.reflect.Method[] r7, r8;
        int $i0, $i1, $i2, i3, i4, $i5, i6, i7;
        java.lang.SecurityException $r6;
        java.lang.reflect.Method $r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.Class $r4, r5;

        r5 := @parameter0: java.lang.Class;

        r7 = null;

     label01:
        $z0 = <org.mozilla.javascript.FunctionObject: boolean sawSecurityException>;

        if $z0 != 0 goto label02;

        r7 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

        <org.mozilla.javascript.FunctionObject: boolean sawSecurityException> = 1;

     label04:
        if r7 != null goto label05;

        r7 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

     label05:
        i3 = 0;

        i4 = 0;

     label06:
        $i5 = lengthof r7;

        if i4 >= $i5 goto label11;

        $z1 = <org.mozilla.javascript.FunctionObject: boolean sawSecurityException>;

        if $z1 == 0 goto label07;

        $r3 = r7[i4];

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if $r4 == r5 goto label09;

        goto label08;

     label07:
        $r2 = r7[i4];

        $i2 = virtualinvoke $r2.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i2);

        if $z2 != 0 goto label09;

     label08:
        r7[i4] = null;

        goto label10;

     label09:
        i3 = i3 + 1;

     label10:
        i4 = i4 + 1;

        goto label06;

     label11:
        r8 = newarray (java.lang.reflect.Method)[i3];

        i6 = 0;

        i7 = 0;

     label12:
        $i0 = lengthof r7;

        if i7 >= $i0 goto label14;

        $r0 = r7[i7];

        if $r0 == null goto label13;

        $i1 = i6;

        i6 = i6 + 1;

        $r1 = r7[i7];

        r8[$i1] = $r1;

     label13:
        i7 = i7 + 1;

        goto label12;

     label14:
        return r8;

        catch java.lang.SecurityException from label01 to label02 with label03;
    }

    public void addAsConstructor(org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r1, r2;
        org.mozilla.javascript.FunctionObject r0;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void setFunctionProtoAndParent(org.mozilla.javascript.BaseFunction,org.mozilla.javascript.Scriptable)>(r0, r1);

        virtualinvoke r0.<org.mozilla.javascript.FunctionObject: void setImmunePrototypeProperty(java.lang.Object)>(r2);

        interfaceinvoke r2.<org.mozilla.javascript.Scriptable: void setParentScope(org.mozilla.javascript.Scriptable)>(r0);

        staticinvoke <org.mozilla.javascript.FunctionObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r2, "constructor", r0, 7);

        $r3 = interfaceinvoke r2.<org.mozilla.javascript.Scriptable: java.lang.String getClassName()>();

        staticinvoke <org.mozilla.javascript.FunctionObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r1, $r3, r0, 2);

        virtualinvoke r0.<org.mozilla.javascript.FunctionObject: void setParentScope(org.mozilla.javascript.Scriptable)>(r1);

        return;
    }

    public static java.lang.Object convertArg(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Class)
    {
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.EvaluatorException $r6;
        org.mozilla.javascript.Scriptable r2;
        int $i0;
        java.lang.Class r0;
        java.lang.Object r3, $r4;
        java.lang.String $r5;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object;

        r0 := @parameter3: java.lang.Class;

        $i0 = staticinvoke <org.mozilla.javascript.FunctionObject: int getTypeTag(java.lang.Class)>(r0);

        if $i0 != 0 goto label1;

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.cant.convert", $r5);

        throw $r6;

     label1:
        $r4 = staticinvoke <org.mozilla.javascript.FunctionObject: java.lang.Object convertArg(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,int)>(r1, r2, r3, $i0);

        return $r4;
    }

    public java.lang.Object call(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        byte[] $r7, $r9;
        byte $b6, $b8;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, z7, $z8;
        org.mozilla.javascript.Scriptable r5, $r16, r23;
        org.mozilla.javascript.EcmaError $r15;
        org.mozilla.javascript.MemberBox $r2, $r6, $r12, $r18, $r19, $r20, $r22, $r30;
        java.lang.Object[] r1, $r17, $r21, r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, i12, i13, $i15, $i16, $i17;
        java.lang.Boolean $r25;
        java.lang.String $r14;
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.FunctionObject r0;
        org.mozilla.javascript.WrapFactory $r4;
        java.lang.Object $r8, $r10, $r11, r24, $r26, r28, $r29;
        java.lang.Class $r13;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r5 := @parameter1: org.mozilla.javascript.Scriptable;

        r23 := @parameter2: org.mozilla.javascript.Scriptable;

        r1 := @parameter3: java.lang.Object[];

        z5 = 0;

        $i0 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        if $i0 >= 0 goto label08;

        $i9 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        $i15 = (int) -1;

        if $i9 != $i15 goto label01;

        $r21 = newarray (java.lang.Object)[4];

        $r21[0] = r3;

        $r21[1] = r23;

        $r21[2] = r1;

        $r21[3] = r0;

        $r22 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        r24 = virtualinvoke $r22.<org.mozilla.javascript.MemberBox: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r21);

        z5 = 1;

        goto label21;

     label01:
        if r23 != null goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        if $z6 == 0 goto label04;

        $r25 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label05;

     label04:
        $r25 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label05:
        $r17 = newarray (java.lang.Object)[4];

        $r17[0] = r3;

        $r17[1] = r1;

        $r17[2] = r0;

        $r17[3] = $r25;

        $r18 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $z4 = virtualinvoke $r18.<org.mozilla.javascript.MemberBox: boolean isCtor()>();

        if $z4 == 0 goto label06;

        $r20 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r26 = virtualinvoke $r20.<org.mozilla.javascript.MemberBox: java.lang.Object newInstance(java.lang.Object[])>($r17);

        goto label07;

     label06:
        $r19 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r26 = virtualinvoke $r19.<org.mozilla.javascript.MemberBox: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r17);

     label07:
        r24 = $r26;

        goto label21;

     label08:
        $z0 = r0.<org.mozilla.javascript.FunctionObject: boolean isStatic>;

        if $z0 != 0 goto label10;

        $r12 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r13 = virtualinvoke $r12.<org.mozilla.javascript.MemberBox: java.lang.Class getDeclaringClass()>();

        $z2 = virtualinvoke $r13.<java.lang.Class: boolean isInstance(java.lang.Object)>(r23);

        if $z2 != 0 goto label10;

        z7 = 0;

        if r23 != r5 goto label09;

        $r16 = virtualinvoke r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.Scriptable getParentScope()>();

        if r5 == $r16 goto label09;

        $z3 = virtualinvoke $r13.<java.lang.Class: boolean isInstance(java.lang.Object)>($r16);

        z7 = $z3;

        if $z3 == 0 goto label09;

        r23 = $r16;

     label09:
        if z7 != 0 goto label10;

        $r14 = r0.<org.mozilla.javascript.FunctionObject: java.lang.String functionName>;

        $r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.incompat.call", $r14);

        throw $r15;

     label10:
        $i10 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        $i11 = lengthof r1;

        if $i10 != $i11 goto label14;

        r27 = r1;

        i12 = 0;

     label11:
        $i7 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        if i12 == $i7 goto label19;

        r28 = r1[i12];

        $r9 = r0.<org.mozilla.javascript.FunctionObject: byte[] typeTags>;

        $b8 = $r9[i12];

        $i16 = (int) $b8;

        $r10 = staticinvoke <org.mozilla.javascript.FunctionObject: java.lang.Object convertArg(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,int)>(r3, r5, r28, $i16);

        if r28 == $r10 goto label13;

        if r27 != r1 goto label12;

        $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r27 = (java.lang.Object[]) $r11;

     label12:
        r27[i12] = $r10;

     label13:
        i12 = i12 + 1;

        goto label11;

     label14:
        $i1 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        if $i1 != 0 goto label15;

        r27 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        goto label19;

     label15:
        $i2 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        r27 = newarray (java.lang.Object)[$i2];

        i13 = 0;

     label16:
        $i3 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        if i13 == $i3 goto label19;

        $i5 = lengthof r1;

        if i13 >= $i5 goto label17;

        $r29 = r1[i13];

        goto label18;

     label17:
        $r29 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label18:
        $r7 = r0.<org.mozilla.javascript.FunctionObject: byte[] typeTags>;

        $b6 = $r7[i13];

        $i17 = (int) $b6;

        $r8 = staticinvoke <org.mozilla.javascript.FunctionObject: java.lang.Object convertArg(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,int)>(r3, r5, $r29, $i17);

        r27[i13] = $r8;

        i13 = i13 + 1;

        goto label16;

     label19:
        $r30 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $z8 = virtualinvoke $r30.<org.mozilla.javascript.MemberBox: boolean isMethod()>();

        if $z8 == 0 goto label20;

        $r6 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        r24 = virtualinvoke $r6.<org.mozilla.javascript.MemberBox: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r23, r27);

        z5 = 1;

        goto label21;

     label20:
        $r2 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        r24 = virtualinvoke $r2.<org.mozilla.javascript.MemberBox: java.lang.Object newInstance(java.lang.Object[])>(r27);

     label21:
        if z5 == 0 goto label23;

        $z1 = r0.<org.mozilla.javascript.FunctionObject: boolean hasVoidReturn>;

        if $z1 == 0 goto label22;

        r24 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label23;

     label22:
        $i4 = r0.<org.mozilla.javascript.FunctionObject: int returnTypeTag>;

        if $i4 != 0 goto label23;

        $r4 = virtualinvoke r3.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        r24 = virtualinvoke $r4.<org.mozilla.javascript.WrapFactory: java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r3, r5, r24, null);

     label23:
        return r24;
    }

    public org.mozilla.javascript.Scriptable createObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.MemberBox $r1, $r2;
        org.mozilla.javascript.Context r10;
        org.mozilla.javascript.FunctionObject r0;
        java.lang.RuntimeException $r9;
        java.lang.Exception $r8;
        org.mozilla.javascript.Scriptable r5, $r6, $r7, r11;
        int $i0, $i2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        r10 := @parameter0: org.mozilla.javascript.Context;

        r11 := @parameter1: org.mozilla.javascript.Scriptable;

        $r1 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $z0 = virtualinvoke $r1.<org.mozilla.javascript.MemberBox: boolean isCtor()>();

        if $z0 != 0 goto label1;

        $i0 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        $i2 = (int) -2;

        if $i0 != $i2 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.MemberBox: java.lang.Class getDeclaringClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        r5 = (org.mozilla.javascript.Scriptable) $r4;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.mozilla.javascript.Context: java.lang.RuntimeException throwAsScriptRuntimeEx(java.lang.Throwable)>($r8);

        throw $r9;

     label5:
        $r6 = virtualinvoke r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.Scriptable getClassPrototype()>();

        interfaceinvoke r5.<org.mozilla.javascript.Scriptable: void setPrototype(org.mozilla.javascript.Scriptable)>($r6);

        $r7 = virtualinvoke r0.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.Scriptable getParentScope()>();

        interfaceinvoke r5.<org.mozilla.javascript.Scriptable: void setParentScope(org.mozilla.javascript.Scriptable)>($r7);

        return r5;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    boolean isVarArgsMethod()
    {
        int $i0, $i2;
        org.mozilla.javascript.FunctionObject r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        $i0 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isVarArgsConstructor()
    {
        int $i0, $i2;
        org.mozilla.javascript.FunctionObject r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.FunctionObject;

        $i0 = r0.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        $i2 = (int) -2;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        byte[] $r8, $r10;
        org.mozilla.javascript.MemberBox $r2, $r3, $r7;
        java.io.ObjectInputStream r0;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, i6;
        java.lang.reflect.Method $r4;
        boolean $z0;
        org.mozilla.javascript.FunctionObject r1;
        java.lang.Class[] r11;
        java.lang.Class $r5, $r6, $r9;

        r1 := @this: org.mozilla.javascript.FunctionObject;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i0 = r1.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        if $i0 <= 0 goto label2;

        $r7 = r1.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        r11 = $r7.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        $i2 = r1.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        $r8 = newarray (byte)[$i2];

        r1.<org.mozilla.javascript.FunctionObject: byte[] typeTags> = $r8;

        i6 = 0;

     label1:
        $i3 = r1.<org.mozilla.javascript.FunctionObject: int parmsLength>;

        if i6 == $i3 goto label2;

        $r10 = r1.<org.mozilla.javascript.FunctionObject: byte[] typeTags>;

        $r9 = r11[i6];

        $i4 = staticinvoke <org.mozilla.javascript.FunctionObject: int getTypeTag(java.lang.Class)>($r9);

        $b5 = (byte) $i4;

        $r10[i6] = $b5;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r2 = r1.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $z0 = virtualinvoke $r2.<org.mozilla.javascript.MemberBox: boolean isMethod()>();

        if $z0 == 0 goto label4;

        $r3 = r1.<org.mozilla.javascript.FunctionObject: org.mozilla.javascript.MemberBox member>;

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.MemberBox: java.lang.reflect.Method method()>();

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r6 = <java.lang.Void: java.lang.Class TYPE>;

        if $r5 != $r6 goto label3;

        r1.<org.mozilla.javascript.FunctionObject: boolean hasVoidReturn> = 1;

        goto label4;

     label3:
        $i1 = staticinvoke <org.mozilla.javascript.FunctionObject: int getTypeTag(java.lang.Class)>($r5);

        r1.<org.mozilla.javascript.FunctionObject: int returnTypeTag> = $i1;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.FunctionObject: int JAVA_OBJECT_TYPE> = 6;

        <org.mozilla.javascript.FunctionObject: int JAVA_SCRIPTABLE_TYPE> = 5;

        <org.mozilla.javascript.FunctionObject: int JAVA_DOUBLE_TYPE> = 4;

        <org.mozilla.javascript.FunctionObject: int JAVA_BOOLEAN_TYPE> = 3;

        <org.mozilla.javascript.FunctionObject: int JAVA_INT_TYPE> = 2;

        <org.mozilla.javascript.FunctionObject: int JAVA_STRING_TYPE> = 1;

        <org.mozilla.javascript.FunctionObject: int JAVA_UNSUPPORTED_TYPE> = 0;

        <org.mozilla.javascript.FunctionObject: short VARARGS_CTOR> = -2;

        <org.mozilla.javascript.FunctionObject: short VARARGS_METHOD> = -1;

        <org.mozilla.javascript.FunctionObject: long serialVersionUID> = -5332312783643935019L;

        return;
    }
}
