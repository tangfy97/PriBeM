class com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector extends com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector
{
    private final javax.xml.stream.XMLStreamReader staxStreamReader;
    protected final java.lang.StringBuilder buffer;
    protected boolean textReported;
    private final org.xml.sax.Attributes attributes;
    private static final java.lang.Class FI_STAX_READER_CLASS;
    private static final java.lang.reflect.Constructor FI_CONNECTOR_CTOR;
    private static final java.lang.Class STAX_EX_READER_CLASS;
    private static final java.lang.reflect.Constructor STAX_EX_CONNECTOR_CTOR;

    public static com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector create(javax.xml.stream.XMLStreamReader, com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)
    {
        java.lang.Object[] $r5, $r11;
        java.lang.reflect.Constructor $r6, $r10, $r12;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector $r8, $r14;
        com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor $r3;
        javax.xml.stream.XMLStreamReader r0;
        java.lang.String $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector $r20;
        java.lang.Exception $r15, $r16;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor r17;
        java.lang.Class $r1, $r2, $r4, $r9, $r19;
        java.lang.Object $r7, $r13;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r17 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class FI_STAX_READER_CLASS>;

        if $r2 == null goto label04;

        $r9 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class FI_STAX_READER_CLASS>;

        $z3 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z3 == 0 goto label04;

        $r10 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.reflect.Constructor FI_CONNECTOR_CTOR>;

        if $r10 == null goto label04;

     label01:
        $r12 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.reflect.Constructor FI_CONNECTOR_CTOR>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r0;

        $r11[1] = r17;

        $r13 = virtualinvoke $r12.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r11);

        $r14 = (com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector) $r13;

     label02:
        return $r14;

     label03:
        $r16 := @caughtexception;

     label04:
        $r18 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.xml.stream.XMLReaderImpl");

        $z5 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: boolean getBoolProp(javax.xml.stream.XMLStreamReader,java.lang.String)>(r0, "org.codehaus.stax2.internNames");

        if $z5 == 0 goto label05;

        $z2 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: boolean getBoolProp(javax.xml.stream.XMLStreamReader,java.lang.String)>(r0, "org.codehaus.stax2.internNsUris");

        if $z2 == 0 goto label05;

        goto label08;

     label05:
        if $z4 == 0 goto label06;

        goto label08;

     label06:
        $z0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: boolean checkImplementaionNameOfSjsxp(javax.xml.stream.XMLStreamReader)>(r0);

        if $z0 == 0 goto label07;

        goto label08;

     label07:
        $r3 = new com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>(r17);

        r17 = $r3;

     label08:
        $r19 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class STAX_EX_READER_CLASS>;

        if $r19 == null goto label12;

        $r4 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class STAX_EX_READER_CLASS>;

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z1 == 0 goto label12;

     label09:
        $r6 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.reflect.Constructor STAX_EX_CONNECTOR_CTOR>;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r0;

        $r5[1] = r17;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        $r8 = (com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector) $r7;

     label10:
        return $r8;

     label11:
        $r15 := @caughtexception;

     label12:
        $r20 = new com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        specialinvoke $r20.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void <init>(javax.xml.stream.XMLStreamReader,com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>(r0, r17);

        return $r20;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private static boolean checkImplementaionNameOfSjsxp(javax.xml.stream.XMLStreamReader)
    {
        javax.xml.stream.XMLStreamReader r0;
        java.lang.Object $r1;
        java.lang.Exception $r2;
        boolean $z0, $z1;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

     label1:
        $r1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.Object getProperty(java.lang.String)>("http://java.sun.com/xml/stream/properties/implementation-name");

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>("sjsxp");

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static boolean getBoolProp(javax.xml.stream.XMLStreamReader, java.lang.String)
    {
        javax.xml.stream.XMLStreamReader r0;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        java.lang.String r1;
        java.lang.Exception $r4;
        boolean $z0, $z1;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.Object getProperty(java.lang.String)>(r1);

        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label3;

        $r3 = (java.lang.Boolean) $r2;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z1;

     label3:
        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    protected void <init>(javax.xml.stream.XMLStreamReader, com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector$1 $r3;
        javax.xml.stream.XMLStreamReader r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor r1;
        java.lang.StringBuilder $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        r4 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>(r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.StringBuilder buffer> = $r2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: boolean textReported> = 0;

        $r3 = new com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector$1;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector$1: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector)>(r0);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: org.xml.sax.Attributes attributes> = $r3;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader> = r4;

        return;
    }

    public void bridge() throws javax.xml.stream.XMLStreamException
    {
        java.lang.IllegalStateException $r16;
        javax.xml.stream.XMLStreamReader $r1, $r2, $r4, $r10, $r11, $r14;
        javax.xml.stream.XMLStreamException $r17;
        int $i0, i1, i2, $i4;
        javax.xml.namespace.NamespaceContext $r3;
        java.lang.String $r9;
        boolean $z0;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        org.xml.sax.SAXException $r12;
        java.lang.StringBuilder $r7, $r8, $r15;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

     label01:
        i1 = 0;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        i2 = $i0;

        if $i0 != 7 goto label03;

     label02:
        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $z0 = interfaceinvoke $r10.<javax.xml.stream.XMLStreamReader: boolean isStartElement()>();

        if $z0 != 0 goto label03;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        i2 = interfaceinvoke $r11.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label02;

     label03:
        if i2 == 1 goto label04;

        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current event is not START_ELEMENT\n but ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r16;

     label04:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void handleStartDocument(javax.xml.namespace.NamespaceContext)>($r3);

     label05:
        tableswitch(i2)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label09;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label09;
            case 12: goto label08;
            default: goto label09;
        };

     label06:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void handleStartElement()>();

        i1 = i1 + 1;

        goto label09;

     label07:
        $i4 = (int) -1;

        i1 = i1 + $i4;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void handleEndElement()>();

        if i1 != 0 goto label09;

        goto label10;

     label08:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void handleCharacters()>();

     label09:
        $r14 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        i2 = interfaceinvoke $r14.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label05;

     label10:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: int next()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void handleEndDocument()>();

     label11:
        goto label13;

     label12:
        $r12 := @caughtexception;

        $r17 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r17.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r12);

        throw $r17;

     label13:
        return;

        catch org.xml.sax.SAXException from label01 to label11 with label12;
    }

    protected javax.xml.stream.Location getCurrentLocation()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        javax.xml.stream.XMLStreamReader $r1;
        javax.xml.stream.Location $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>();

        return $r2;
    }

    protected java.lang.String getCurrentQName()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        javax.xml.stream.XMLStreamReader $r1, $r3;
        java.lang.String $r2, $r4, $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r4 = interfaceinvoke $r3.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.String getQName(java.lang.String,java.lang.String)>($r2, $r4);

        return $r5;
    }

    private void handleEndElement() throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName $r2, $r6, $r8;
        javax.xml.stream.XMLStreamReader $r1, $r5, $r10, $r11;
        int $i0, i1, $i3;
        java.lang.String $r3, $r4, $r7, $r13, $r14;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r9, $r12;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void processText(boolean)>(0);

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r3 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        $r4 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.String fixNull(java.lang.String)>($r3);

        $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri> = $r4;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r7 = interfaceinvoke $r5.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local> = $r7;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        interfaceinvoke $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void endElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>($r8);

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r10.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r13 = interfaceinvoke $r11.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i1);

        $r14 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.String fixNull(java.lang.String)>($r13);

        interfaceinvoke $r12.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void endPrefixMapping(java.lang.String)>($r14);

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label2:
        return;
    }

    private void handleStartElement() throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName $r3, $r7, $r10, $r11;
        javax.xml.stream.XMLStreamReader $r1, $r2, $r6, $r13, $r17;
        int $i0, i1;
        org.xml.sax.Attributes $r9;
        java.lang.String $r4, $r5, $r8, $r15, $r16, $r18, $r19;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r12, $r14;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void processText(boolean)>(1);

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r15 = interfaceinvoke $r13.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i1);

        $r16 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.String fixNull(java.lang.String)>($r15);

        $r17 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r18 = interfaceinvoke $r17.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i1);

        $r19 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.String fixNull(java.lang.String)>($r18);

        interfaceinvoke $r14.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void startPrefixMapping(java.lang.String,java.lang.String)>($r16, $r19);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r4 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        $r5 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.String fixNull(java.lang.String)>($r4);

        $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri> = $r5;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r8 = interfaceinvoke $r6.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local> = $r8;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: org.xml.sax.Attributes attributes>;

        $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: org.xml.sax.Attributes atts> = $r9;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        interfaceinvoke $r12.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>($r11);

        return;
    }

    protected void handleCharacters() throws javax.xml.stream.XMLStreamException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor $r1;
        javax.xml.stream.XMLStreamReader $r2, $r5, $r6;
        int $i0, $i1;
        char[] $r4;
        java.lang.StringBuilder $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor predictor>;

        $z0 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor: boolean expectText()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.StringBuilder buffer>;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r4 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: char[] getTextCharacters()>();

        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r5.<javax.xml.stream.XMLStreamReader: int getTextStart()>();

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i1 = interfaceinvoke $r6.<javax.xml.stream.XMLStreamReader: int getTextLength()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r4, $i0, $i1);

     label1:
        return;
    }

    private void processText(boolean) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r3;
        java.lang.StringBuilder $r2, $r4, $r5;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        z1 := @parameter0: boolean;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor predictor>;

        $z0 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor: boolean expectText()>();

        if $z0 == 0 goto label3;

        if z1 == 0 goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.StringBuilder buffer>;

        $z3 = staticinvoke <com.sun.xml.bind.WhiteSpaceProcessor: boolean isWhiteSpace(java.lang.CharSequence)>($r4);

        if $z3 != 0 goto label3;

     label1:
        $z2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: boolean textReported>;

        if $z2 == 0 goto label2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: boolean textReported> = 0;

        goto label3;

     label2:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.StringBuilder buffer>;

        interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void text(java.lang.CharSequence)>($r2);

     label3:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.StringBuilder buffer>;

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }

    private static java.lang.Class initFIStAXReaderClass()
    {
        java.lang.Throwable $r3;
        java.lang.Class $r1, $r2;
        java.lang.ClassLoader $r0;
        boolean $z0;

     label1:
        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.ClassLoader getClassLoader()>();

        $r1 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.jvnet.fastinfoset.stax.FastInfosetStreamReader");

        $r2 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.sun.xml.fastinfoset.stax.StAXDocumentParser");

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return $r2;

     label3:
        return null;

     label4:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private static java.lang.reflect.Constructor initFastInfosetConnectorClass()
    {
        java.lang.Throwable $r6;
        java.lang.Class[] $r3;
        java.lang.Class $r0, $r2, $r4;
        java.lang.ClassLoader $r1;
        java.lang.reflect.Constructor $r5;

     label1:
        $r0 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class FI_STAX_READER_CLASS>;

        if $r0 != null goto label3;

     label2:
        return null;

     label3:
        $r1 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.sun.xml.bind.v2.runtime.unmarshaller.FastInfosetConnector");

        $r3 = newarray (java.lang.Class)[2];

        $r4 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class FI_STAX_READER_CLASS>;

        $r3[0] = $r4;

        $r3[1] = class "Lcom/sun/xml/bind/v2/runtime/unmarshaller/XmlVisitor;";

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static java.lang.Class initStAXExReader()
    {
        java.lang.Throwable $r2;
        java.lang.Class $r1;
        java.lang.ClassLoader $r0;

     label1:
        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.ClassLoader getClassLoader()>();

        $r1 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.jvnet.staxex.XMLStreamReaderEx");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.lang.reflect.Constructor initStAXExConnector()
    {
        java.lang.Throwable $r5;
        java.lang.Class[] $r2;
        java.lang.Class $r1, $r3;
        java.lang.ClassLoader $r0;
        java.lang.reflect.Constructor $r4;

     label1:
        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.ClassLoader getClassLoader()>();

        $r1 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector");

        $r2 = newarray (java.lang.Class)[2];

        $r3 = <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class STAX_EX_READER_CLASS>;

        $r2[0] = $r3;

        $r2[1] = class "Lcom/sun/xml/bind/v2/runtime/unmarshaller/XmlVisitor;";

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.lang.ClassLoader getClassLoader()
    {
        java.lang.ClassLoader $r0, r1;

        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.SecureLoader: java.lang.ClassLoader getClassClassLoader(java.lang.Class)>(class "Lcom/sun/xml/bind/v2/runtime/unmarshaller/UnmarshallerImpl;");

        r1 = $r0;

        if $r0 != null goto label1;

        r1 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.SecureLoader: java.lang.ClassLoader getContextClassLoader()>();

     label1:
        return r1;
    }

    static javax.xml.stream.XMLStreamReader access$000(com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector r0;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: javax.xml.stream.XMLStreamReader staxStreamReader>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        java.lang.reflect.Constructor $r1, $r3;

        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class initFIStAXReaderClass()>();

        <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class FI_STAX_READER_CLASS> = $r0;

        $r1 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.reflect.Constructor initFastInfosetConnectorClass()>();

        <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.reflect.Constructor FI_CONNECTOR_CTOR> = $r1;

        $r2 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class initStAXExReader()>();

        <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.Class STAX_EX_READER_CLASS> = $r2;

        $r3 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.reflect.Constructor initStAXExConnector()>();

        <com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: java.lang.reflect.Constructor STAX_EX_CONNECTOR_CTOR> = $r3;

        return;
    }
}
