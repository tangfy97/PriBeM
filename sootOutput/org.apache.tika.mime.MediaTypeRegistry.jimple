public class org.apache.tika.mime.MediaTypeRegistry extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.Map registry;
    private final java.util.Map inheritance;

    public void <init>()
    {
        java.util.HashMap $r1, $r2;
        org.apache.tika.mime.MediaTypeRegistry r0;

        r0 := @this: org.apache.tika.mime.MediaTypeRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map registry> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map inheritance> = $r2;

        return;
    }

    public static org.apache.tika.mime.MediaTypeRegistry getDefaultRegistry()
    {
        org.apache.tika.mime.MimeTypes $r0;
        org.apache.tika.mime.MediaTypeRegistry $r1;

        $r0 = staticinvoke <org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeTypes getDefaultMimeTypes()>();

        $r1 = virtualinvoke $r0.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MediaTypeRegistry getMediaTypeRegistry()>();

        return $r1;
    }

    public java.util.SortedSet getTypes()
    {
        org.apache.tika.mime.MediaTypeRegistry r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.TreeSet $r0;

        r1 := @this: org.apache.tika.mime.MediaTypeRegistry;

        $r0 = new java.util.TreeSet;

        $r2 = r1.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map registry>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r0.<java.util.TreeSet: void <init>(java.util.Collection)>($r3);

        return $r0;
    }

    public java.util.SortedSet getAliases(org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r1;
        org.apache.tika.mime.MediaType r8, $r9, $r11;
        java.util.TreeSet $r0;
        java.util.Map $r2;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.Object $r5, $r7, $r10, $r12;

        r1 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r8 := @parameter0: org.apache.tika.mime.MediaType;

        $r0 = new java.util.TreeSet;

        specialinvoke $r0.<java.util.TreeSet: void <init>()>();

        $r2 = r1.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map registry>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.tika.mime.MediaType) $r7;

        $z1 = virtualinvoke $r9.<org.apache.tika.mime.MediaType: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (org.apache.tika.mime.MediaType) $r10;

        $z2 = virtualinvoke $r11.<org.apache.tika.mime.MediaType: boolean equals(java.lang.Object)>(r8);

        if $z2 != 0 goto label2;

        $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r0.<java.util.SortedSet: boolean add(java.lang.Object)>($r12);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public void addType(org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaType r1;
        org.apache.tika.mime.MediaTypeRegistry r0;
        java.util.Map $r2;

        r0 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r1 := @parameter0: org.apache.tika.mime.MediaType;

        $r2 = r0.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map registry>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r1);

        return;
    }

    public void addAlias(org.apache.tika.mime.MediaType, org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r0;
        java.util.Map $r3;
        org.apache.tika.mime.MediaType r1, r2;

        r0 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r2 := @parameter0: org.apache.tika.mime.MediaType;

        r1 := @parameter1: org.apache.tika.mime.MediaType;

        $r3 = r0.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map registry>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void addSuperType(org.apache.tika.mime.MediaType, org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r0;
        java.util.Map $r3;
        org.apache.tika.mime.MediaType r1, r2;

        r0 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r1 := @parameter0: org.apache.tika.mime.MediaType;

        r2 := @parameter1: org.apache.tika.mime.MediaType;

        $r3 = r0.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map inheritance>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r1;
        org.apache.tika.mime.MediaType r0, $r3, r5, $r6;
        java.util.Map $r2, $r7;
        java.lang.Object $r4;
        boolean $z0;

        r1 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r0 := @parameter0: org.apache.tika.mime.MediaType;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map registry>;

        $r3 = virtualinvoke r0.<org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType getBaseType()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.tika.mime.MediaType) $r4;

        if r5 != null goto label2;

        return r0;

     label2:
        $z0 = virtualinvoke r0.<org.apache.tika.mime.MediaType: boolean hasParameters()>();

        if $z0 == 0 goto label3;

        $r6 = new org.apache.tika.mime.MediaType;

        $r7 = virtualinvoke r0.<org.apache.tika.mime.MediaType: java.util.Map getParameters()>();

        specialinvoke $r6.<org.apache.tika.mime.MediaType: void <init>(org.apache.tika.mime.MediaType,java.util.Map)>(r5, $r7);

        return $r6;

     label3:
        return r5;
    }

    public boolean isSpecializationOf(org.apache.tika.mime.MediaType, org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r0;
        org.apache.tika.mime.MediaType r1, $r2, r3;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r1 := @parameter0: org.apache.tika.mime.MediaType;

        r3 := @parameter1: org.apache.tika.mime.MediaType;

        $r2 = virtualinvoke r0.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType getSupertype(org.apache.tika.mime.MediaType)>(r1);

        $z0 = virtualinvoke r0.<org.apache.tika.mime.MediaTypeRegistry: boolean isInstanceOf(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType)>($r2, r3);

        return $z0;
    }

    public boolean isInstanceOf(org.apache.tika.mime.MediaType, org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r2;
        org.apache.tika.mime.MediaType r0, r1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r0 := @parameter0: org.apache.tika.mime.MediaType;

        r1 := @parameter1: org.apache.tika.mime.MediaType;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<org.apache.tika.mime.MediaType: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<org.apache.tika.mime.MediaTypeRegistry: boolean isSpecializationOf(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType)>(r0, r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isInstanceOf(java.lang.String, org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r0;
        java.lang.String r1;
        org.apache.tika.mime.MediaType $r2, $r3, r4;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.tika.mime.MediaType;

        $r2 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType)>($r2);

        $z0 = virtualinvoke r0.<org.apache.tika.mime.MediaTypeRegistry: boolean isInstanceOf(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType)>($r3, r4);

        return $z0;
    }

    public org.apache.tika.mime.MediaType getSupertype(org.apache.tika.mime.MediaType)
    {
        org.apache.tika.mime.MediaTypeRegistry r1;
        org.apache.tika.mime.MediaType r0, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16;
        java.util.Map $r2, $r13;
        java.lang.String $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r14;

        r1 := @this: org.apache.tika.mime.MediaTypeRegistry;

        r0 := @parameter0: org.apache.tika.mime.MediaType;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<org.apache.tika.mime.MediaType: boolean hasParameters()>();

        if $z0 == 0 goto label2;

        $r16 = virtualinvoke r0.<org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType getBaseType()>();

        return $r16;

     label2:
        $r2 = r1.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map inheritance>;

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        $r13 = r1.<org.apache.tika.mime.MediaTypeRegistry: java.util.Map inheritance>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r15 = (org.apache.tika.mime.MediaType) $r14;

        return $r15;

     label3:
        $r3 = virtualinvoke r0.<org.apache.tika.mime.MediaType: java.lang.String getSubtype()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("+xml");

        if $z2 == 0 goto label4;

        $r12 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType APPLICATION_XML>;

        return $r12;

     label4:
        $r4 = virtualinvoke r0.<org.apache.tika.mime.MediaType: java.lang.String getSubtype()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("+zip");

        if $z3 == 0 goto label5;

        $r11 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType APPLICATION_ZIP>;

        return $r11;

     label5:
        $r5 = "text";

        $r6 = virtualinvoke r0.<org.apache.tika.mime.MediaType: java.lang.String getType()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label6;

        $r9 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType TEXT_PLAIN>;

        $z6 = virtualinvoke $r9.<org.apache.tika.mime.MediaType: boolean equals(java.lang.Object)>(r0);

        if $z6 != 0 goto label6;

        $r10 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType TEXT_PLAIN>;

        return $r10;

     label6:
        $r7 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

        $z5 = virtualinvoke $r7.<org.apache.tika.mime.MediaType: boolean equals(java.lang.Object)>(r0);

        if $z5 != 0 goto label7;

        $r8 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

        return $r8;

     label7:
        return null;
    }

    public static void <clinit>()
    {
        <org.apache.tika.mime.MediaTypeRegistry: long serialVersionUID> = 4710974869988895410L;

        return;
    }
}
