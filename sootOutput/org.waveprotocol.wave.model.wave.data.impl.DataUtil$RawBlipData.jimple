final class org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData extends org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData
{

    public void <init>(java.lang.String, org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData, org.waveprotocol.wave.model.wave.data.DocumentOperationSink)
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r7;
        org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData r0;
        org.waveprotocol.wave.model.wave.data.DocumentOperationSink r6;
        java.lang.Object $r5;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData;

        r6 := @parameter2: org.waveprotocol.wave.model.wave.data.DocumentOperationSink;

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData: java.util.Set getParticipants()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.waveprotocol.wave.model.wave.ParticipantId) $r5;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.AbstractBlipData: void <init>(java.lang.String,org.waveprotocol.wave.model.wave.data.impl.AbstractWaveletData,org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.wave.model.wave.data.DocumentOperationSink,long,long)>(r1, r2, $r7, r6, 0L, -1L);

        return;
    }

    public java.util.Set getContributors()
    {
        java.util.Set $r0;
        org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r0;
    }

    public void addContributor(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RawBlipData doesn\'t support addContributor");

        throw $r0;
    }

    public void removeContributor(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.DataUtil$RawBlipData;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RawBlipData doesn\'t support removeContributor");

        throw $r0;
    }
}
