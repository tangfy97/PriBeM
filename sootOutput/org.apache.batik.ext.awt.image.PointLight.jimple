public class org.apache.batik.ext.awt.image.PointLight extends org.apache.batik.ext.awt.image.AbstractLight
{
    private double lightX;
    private double lightY;
    private double lightZ;

    public double getLightX()
    {
        org.apache.batik.ext.awt.image.PointLight r0;
        double $d0;

        r0 := @this: org.apache.batik.ext.awt.image.PointLight;

        $d0 = r0.<org.apache.batik.ext.awt.image.PointLight: double lightX>;

        return $d0;
    }

    public double getLightY()
    {
        org.apache.batik.ext.awt.image.PointLight r0;
        double $d0;

        r0 := @this: org.apache.batik.ext.awt.image.PointLight;

        $d0 = r0.<org.apache.batik.ext.awt.image.PointLight: double lightY>;

        return $d0;
    }

    public double getLightZ()
    {
        org.apache.batik.ext.awt.image.PointLight r0;
        double $d0;

        r0 := @this: org.apache.batik.ext.awt.image.PointLight;

        $d0 = r0.<org.apache.batik.ext.awt.image.PointLight: double lightZ>;

        return $d0;
    }

    public void <init>(double, double, double, java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.ext.awt.image.PointLight r0;
        double d0, d1, d2;

        r0 := @this: org.apache.batik.ext.awt.image.PointLight;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: java.awt.Color;

        specialinvoke r0.<org.apache.batik.ext.awt.image.AbstractLight: void <init>(java.awt.Color)>(r1);

        r0.<org.apache.batik.ext.awt.image.PointLight: double lightX> = d0;

        r0.<org.apache.batik.ext.awt.image.PointLight: double lightY> = d1;

        r0.<org.apache.batik.ext.awt.image.PointLight: double lightZ> = d2;

        return;
    }

    public boolean isConstant()
    {
        org.apache.batik.ext.awt.image.PointLight r0;

        r0 := @this: org.apache.batik.ext.awt.image.PointLight;

        return 0;
    }

    public final void getLight(double, double, double, double[])
    {
        double[] r1;
        org.apache.batik.ext.awt.image.PointLight r0;
        byte $b0;
        int $i1;
        double d0, $d1, d2, $d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13, d14, d15;

        r0 := @this: org.apache.batik.ext.awt.image.PointLight;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d4 := @parameter2: double;

        r1 := @parameter3: double[];

        $d1 = r0.<org.apache.batik.ext.awt.image.PointLight: double lightX>;

        d13 = $d1 - d0;

        $d3 = r0.<org.apache.batik.ext.awt.image.PointLight: double lightY>;

        d14 = $d3 - d2;

        $d5 = r0.<org.apache.batik.ext.awt.image.PointLight: double lightZ>;

        d15 = $d5 - d4;

        $d7 = d13 * d13;

        $d6 = d14 * d14;

        $d9 = $d7 + $d6;

        $d8 = d15 * d15;

        $d10 = $d9 + $d8;

        $d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);

        $b0 = $d11 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        d12 = 1.0 / $d11;

        d13 = d13 * d12;

        d14 = d14 * d12;

        d15 = d15 * d12;

     label1:
        r1[0] = d13;

        r1[1] = d14;

        r1[2] = d15;

        return;
    }
}
