public class org.springframework.beans.propertyeditors.UUIDEditor extends java.beans.PropertyEditorSupport
{

    public void <init>()
    {
        org.springframework.beans.propertyeditors.UUIDEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.UUIDEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0;
        java.util.UUID $r2;
        org.springframework.beans.propertyeditors.UUIDEditor r1;
        boolean $z0;

        r1 := @this: org.springframework.beans.propertyeditors.UUIDEditor;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(r0);

        virtualinvoke r1.<org.springframework.beans.propertyeditors.UUIDEditor: void setValue(java.lang.Object)>($r2);

        goto label2;

     label1:
        virtualinvoke r1.<org.springframework.beans.propertyeditors.UUIDEditor: void setValue(java.lang.Object)>(null);

     label2:
        return;
    }

    public java.lang.String getAsText()
    {
        java.lang.Object $r1;
        java.util.UUID r2;
        java.lang.String $r3;
        org.springframework.beans.propertyeditors.UUIDEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.UUIDEditor;

        $r1 = virtualinvoke r0.<org.springframework.beans.propertyeditors.UUIDEditor: java.lang.Object getValue()>();

        r2 = (java.util.UUID) $r1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<java.util.UUID: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }
}
