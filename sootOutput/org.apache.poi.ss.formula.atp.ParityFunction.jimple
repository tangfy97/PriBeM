final class org.apache.poi.ss.formula.atp.ParityFunction extends java.lang.Object implements org.apache.poi.ss.formula.functions.FreeRefFunction
{
    public static final org.apache.poi.ss.formula.functions.FreeRefFunction IS_EVEN;
    public static final org.apache.poi.ss.formula.functions.FreeRefFunction IS_ODD;
    private final int _desiredParity;

    private void <init>(int)
    {
        int i0;
        org.apache.poi.ss.formula.atp.ParityFunction r0;

        r0 := @this: org.apache.poi.ss.formula.atp.ParityFunction;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.ss.formula.atp.ParityFunction: int _desiredParity> = i0;

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(org.apache.poi.ss.formula.eval.ValueEval[], org.apache.poi.ss.formula.OperationEvaluationContext)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r5, $r7;
        org.apache.poi.ss.formula.eval.ValueEval[] r0;
        org.apache.poi.ss.formula.OperationEvaluationContext r1;
        org.apache.poi.ss.formula.atp.ParityFunction r3;
        org.apache.poi.ss.formula.eval.ValueEval $r2;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.poi.ss.formula.eval.EvaluationException $r6;
        org.apache.poi.ss.formula.eval.BoolEval $r4;
        boolean $z0;

        r3 := @this: org.apache.poi.ss.formula.atp.ParityFunction;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval[];

        r1 := @parameter1: org.apache.poi.ss.formula.OperationEvaluationContext;

        $i0 = lengthof r0;

        if $i0 == 1 goto label1;

        $r5 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

        return $r5;

     label1:
        $r2 = r0[0];

        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.OperationEvaluationContext: int getRowIndex()>();

        $i2 = virtualinvoke r1.<org.apache.poi.ss.formula.OperationEvaluationContext: int getColumnIndex()>();

        $i3 = staticinvoke <org.apache.poi.ss.formula.atp.ParityFunction: int evaluateArgParity(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r2, $i1, $i2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r7;

     label4:
        $i4 = r3.<org.apache.poi.ss.formula.atp.ParityFunction: int _desiredParity>;

        if $i3 != $i4 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        $r4 = staticinvoke <org.apache.poi.ss.formula.eval.BoolEval: org.apache.poi.ss.formula.eval.BoolEval valueOf(boolean)>($z0);

        return $r4;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label2 with label3;
    }

    private static int evaluateArgParity(org.apache.poi.ss.formula.eval.ValueEval, int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        long $l4, $l6;
        short $s2;
        byte $b3;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r1;
        int i0, i1, $i5, $i7, $i8;
        double $d0, $d1, d2;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $s2 = (short) i1;

        $i7 = (int) $s2;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, $i7);

        $d0 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: double coerceValueToDouble(org.apache.poi.ss.formula.eval.ValueEval)>($r1);

        d2 = $d0;

        $b3 = $d0 cmpg 0.0;

        $i8 = (int) $b3;

        if $i8 >= 0 goto label1;

        d2 = neg $d0;

     label1:
        $d1 = staticinvoke <java.lang.Math: double floor(double)>(d2);

        $l6 = (long) $d1;

        $l4 = $l6 & 1L;

        $i5 = (int) $l4;

        return $i5;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.atp.ParityFunction $r0, $r1;

        $r0 = new org.apache.poi.ss.formula.atp.ParityFunction;

        specialinvoke $r0.<org.apache.poi.ss.formula.atp.ParityFunction: void <init>(int)>(0);

        <org.apache.poi.ss.formula.atp.ParityFunction: org.apache.poi.ss.formula.functions.FreeRefFunction IS_EVEN> = $r0;

        $r1 = new org.apache.poi.ss.formula.atp.ParityFunction;

        specialinvoke $r1.<org.apache.poi.ss.formula.atp.ParityFunction: void <init>(int)>(1);

        <org.apache.poi.ss.formula.atp.ParityFunction: org.apache.poi.ss.formula.functions.FreeRefFunction IS_ODD> = $r1;

        return;
    }
}
