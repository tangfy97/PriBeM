public class org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser extends java.lang.Object implements org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation, org.eclipse.jdt.internal.compiler.parser.TerminalTokens
{
    private static final boolean DEBUG;
    private boolean DEBUG_PARSECHECK;
    private static final int STACK_INCREMENT;
    private static final int BEFORE_CODE;
    private static final int INSERTION_CODE;
    private static final int INVALID_CODE;
    private static final int SUBSTITUTION_CODE;
    private static final int DELETION_CODE;
    private static final int MERGE_CODE;
    private static final int MISPLACED_CODE;
    private static final int SCOPE_CODE;
    private static final int SECONDARY_CODE;
    private static final int EOF_CODE;
    private static final int BUFF_UBOUND;
    private static final int BUFF_SIZE;
    private static final int MAX_DISTANCE;
    private static final int MIN_DISTANCE;
    private org.eclipse.jdt.internal.compiler.impl.CompilerOptions options;
    private org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream;
    private int errorToken;
    private int errorTokenStart;
    private int currentToken;
    private int stackLength;
    private int stateStackTop;
    private int[] stack;
    private int[] locationStack;
    private int[] locationStartStack;
    private int tempStackTop;
    private int[] tempStack;
    private int prevStackTop;
    private int[] prevStack;
    private int nextStackTop;
    private int[] nextStack;
    private int scopeStackTop;
    private int[] scopeIndex;
    private int[] scopePosition;
    int[] list;
    int[] buffer;
    private static final int NIL;
    int[] stateSeen;
    int statePoolTop;
    org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool;
    private org.eclipse.jdt.internal.compiler.parser.Parser parser;
    private org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner;
    private boolean reportProblem;

    public void <init>(org.eclipse.jdt.internal.compiler.parser.Parser, int, int, int, org.eclipse.jdt.internal.compiler.impl.CompilerOptions)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] $r3, $r4, $r5;
        int i0, i1, i2;
        org.eclipse.jdt.internal.compiler.parser.Parser r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: org.eclipse.jdt.internal.compiler.impl.CompilerOptions;

        $r5 = <org.eclipse.jdt.internal.compiler.util.Util: int[] EMPTY_INT_ARRAY>;

        $r4 = <org.eclipse.jdt.internal.compiler.util.Util: int[] EMPTY_INT_ARRAY>;

        $r3 = <org.eclipse.jdt.internal.compiler.util.Util: int[] EMPTY_INT_ARRAY>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void <init>(org.eclipse.jdt.internal.compiler.parser.Parser,int,int,int,int[],int[],int[],org.eclipse.jdt.internal.compiler.impl.CompilerOptions)>(r1, i0, i1, i2, $r5, $r4, $r3, r2);

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.parser.Parser, int, int, int, int[], int[], int[], org.eclipse.jdt.internal.compiler.impl.CompilerOptions)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        org.eclipse.jdt.internal.compiler.parser.Scanner $r9;
        org.eclipse.jdt.internal.compiler.parser.RecoveryScanner $r10;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r5;
        int[] $r1, $r2, r6, r7, r8;
        int i0, i1, i2;
        org.eclipse.jdt.internal.compiler.parser.Parser r3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r6 := @parameter4: int[];

        r7 := @parameter5: int[];

        r8 := @parameter6: int[];

        r4 := @parameter7: org.eclipse.jdt.internal.compiler.impl.CompilerOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK> = 0;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken> = 0;

        $r1 = newarray (int)[422];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list> = $r1;

        $r2 = newarray (int)[32];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer> = $r2;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.Parser parser> = r3;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options> = r4;

        $r5 = new org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream;

        $r9 = r3.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.parser.Scanner scanner>;

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void <init>(int,org.eclipse.jdt.internal.compiler.parser.Scanner,int[],int[],int[],int,int,int)>(32, $r9, r6, r7, r8, i0, i1, i2);

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream> = $r5;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner> = $r10;

        return;
    }

    private org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()
    {
        org.eclipse.jdt.internal.compiler.parser.Parser $r1;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        return $r2;
    }

    private void reallocateStacks()
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i0 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $i2 = $i1 + 256;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength> = $i2;

        if i0 != 0 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r17 = newarray (int)[$i11];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack> = $r17;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r18 = newarray (int)[$i12];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack> = $r18;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r19 = newarray (int)[$i13];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack> = $r19;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r20 = newarray (int)[$i14];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack> = $r20;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r21 = newarray (int)[$i15];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] prevStack> = $r21;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r22 = newarray (int)[$i16];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack> = $r22;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r23 = newarray (int)[$i17];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex> = $r23;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r24 = newarray (int)[$i18];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition> = $r24;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r1 = newarray (int)[$i3];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack> = $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, i0);

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r3 = newarray (int)[$i4];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, i0);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r5 = newarray (int)[$i5];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack> = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i0);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r7 = newarray (int)[$i6];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack> = $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, i0);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] prevStack>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r9 = newarray (int)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] prevStack> = $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, i0);

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r11 = newarray (int)[$i8];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack> = $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, 0, i0);

        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r13 = newarray (int)[$i9];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex> = $r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, $r13, 0, i0);

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r15 = newarray (int)[$i10];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition> = $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r15, 0, i0);

     label2:
        return;
    }

    public void diagnoseParse(boolean)
    {
        byte[] $r11, $r25, $r36, $r53;
        byte $b10, $b39, $b65, $b87;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate $r41;
        org.eclipse.jdt.internal.compiler.CompilationResult $r48;
        org.eclipse.jdt.internal.compiler.parser.Parser $r42, $r43, $r46;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] $r4, $r6, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r37, $r49, $r50, $r52, $r54, $r56, $r59, $r61;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i66, $i67, $i68, $i69, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, i86, $i88, $i89, $i90, $i91, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, i104, i105, i106, i107, i108, $i109, $i110, i111, $i112, i113, i114, $i115, $i116, $i117, $i118, $i119, $i120, i121, i122, $i124, $i126, $i128, $i130, $i131, $i132, $i134, $i135, $i136, $i137, $i138, $i139, $i140;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r45;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r47;
        java.lang.Throwable $r67;
        char[] $r13, $r24, $r38, $r55;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r44;
        boolean $z0, $z1, z2, z3;
        char $c15, $c46, $c70, $c92;
        org.eclipse.jdt.internal.compiler.parser.RecoveryScanner $r1, $r39, $r40, $r62, $r63, $r64, $r65, $r66, $r68, $r69, $r70;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r2, $r3, $r5, $r7, $r22, $r23, $r34, $r51, $r57, $r58, $r60;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        z2 := @parameter0: boolean;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem> = 1;

        z3 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r1 == null goto label01;

        $r65 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        z3 = $r65.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: boolean record>;

        $r66 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $r66.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: boolean record> = z2;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i0 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int getToken()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken> = $i0;

        i104 = 731;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reallocateStacks()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = 0;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r4[$i1] = 731;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        i105 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i2);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $r6[$i4] = $i3;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $i7 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i5);

        $r8[$i6] = $i7;

     label02:
        $i124 = (int) -1;

        i106 = $i124;

        $i126 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int prevStackTop> = $i126;

        $i128 = (int) -1;

        i107 = $i128;

        $i130 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop> = $i130;

        i108 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i109 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i110 = $i109 - 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i110;

        i111 = 0;

        goto label04;

     label03:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i9 = $r9[i111];

        $r10[i111] = $i9;

        i111 = i111 + 1;

     label04:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if i111 <= $i8 goto label03;

        i104 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>(i104, i105);

        goto label09;

     label05:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r11 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b10 = $r11[i104];

        $i131 = (int) $b10;

        $i11 = $i131 - 1;

        $i13 = $i12 - $i11;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i13;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i16 = $r12[$i14];

        $r13 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c15 = $r13[i104];

        $i132 = (int) $c15;

        $i17 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i16, $i132);

        i104 = $i17;

        if $i17 <= 700 goto label05;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i20 = $i18 + 1;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        if $i20 < $i19 goto label06;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reallocateStacks()>();

     label06:
        $i21 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if i108 >= $i21 goto label07;

        $i112 = i108;

        goto label08;

     label07:
        $i112 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

     label08:
        i108 = $i112;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i23 = $i22 + 1;

        $r14[$i23] = $i17;

        i104 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i17, i105);

     label09:
        if i104 <= 700 goto label05;

        goto label31;

     label10:
        $i24 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i25 = $i24 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop> = $i25;

        i113 = i107 + 1;

        goto label12;

     label11:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i27 = $r15[i113];

        $r16[i113] = $i27;

        i113 = i113 + 1;

     label12:
        $i26 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if i113 <= $i26 goto label11;

        i114 = i108 + 1;

        goto label14;

     label13:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i29 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i30 = $r17[$i29];

        $r18[i114] = $i30;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i31 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i32 = $r19[$i31];

        $r20[i114] = $i32;

        i114 = i114 + 1;

     label14:
        $i28 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if i114 <= $i28 goto label13;

        if i104 <= 12828 goto label18;

        $i134 = (int) -12828;

        i104 = i104 + $i134;

     label15:
        $i67 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r36 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b65 = $r36[i104];

        $i135 = (int) $b65;

        $i66 = $i135 - 1;

        $i68 = $i67 - $i66;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop> = $i68;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i69 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $i71 = $r37[$i69];

        $r38 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c70 = $r38[i104];

        $i136 = (int) $c70;

        $i72 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i71, $i136);

        i104 = $i72;

        if $i72 <= 700 goto label15;

        $i73 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if i108 >= $i73 goto label16;

        $i115 = i108;

        goto label17;

     label16:
        $i115 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

     label17:
        i108 = $i115;

     label18:
        $i116 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $i117 = $i116 + 1;

        $i118 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        if $i117 < $i118 goto label19;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reallocateStacks()>();

     label19:
        $i33 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i33;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i34 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $i35 = $i34 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop> = $i35;

        $r21[$i35] = i104;

        i107 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i36 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int getToken()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken> = $i36;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i37 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $i38 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i37);

        i105 = $i38;

        i104 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>(i104, $i38);

        goto label26;

     label20:
        $r24 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c46 = $r24[i104];

        $i41 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r25 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b39 = $r25[i104];

        $i137 = (int) $b39;

        $i40 = $i137 - 1;

        $i42 = $i41 - $i40;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i42;

        $i43 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i43 <= i107 goto label21;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i53 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i119 = $r28[$i53];

        goto label22;

     label21:
        $r26 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i44 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i119 = $r26[$i44];

     label22:
        $i138 = (int) $c46;

        $i45 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i119, $i138);

        i104 = $i45;

        if $i45 <= 700 goto label20;

        $i47 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i49 = $i47 + 1;

        $i48 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        if $i49 < $i48 goto label23;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reallocateStacks()>();

     label23:
        $i50 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if i107 >= $i50 goto label24;

        $i120 = i107;

        goto label25;

     label24:
        $i120 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

     label25:
        i107 = $i120;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i51 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i52 = $i51 + 1;

        $r27[$i52] = $i45;

        i104 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i45, $i38);

     label26:
        if i104 <= 700 goto label20;

        if i104 == 12828 goto label31;

        $i54 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int prevStackTop> = $i54;

        i121 = i106 + 1;

        goto label28;

     label27:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] prevStack>;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i56 = $r29[i121];

        $r30[i121] = $i56;

        i121 = i121 + 1;

     label28:
        $i55 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int prevStackTop>;

        if i121 <= $i55 goto label27;

        i106 = i108;

        $i57 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i57;

        i122 = i108 + 1;

        goto label30;

     label29:
        $r32 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i59 = $r31[i122];

        $r32[i122] = $i59;

        i122 = i122 + 1;

     label30:
        $i58 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if i122 <= $i58 goto label29;

        $r33 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i61 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i60 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $r33[$i61] = $i60;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i63 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i62 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $i64 = virtualinvoke $r34.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i62);

        $r35[$i63] = $i64;

        i108 = i107;

     label31:
        if i104 > 12828 goto label10;

        if i104 < 12827 goto label10;

        if i104 != 12828 goto label41;

        $i74 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $r41 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate errorRecovery(int,boolean)>($i74, 0);

        $r42 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        $z0 = $r42.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean reportOnlyOneSyntaxError>;

        if $z0 == 0 goto label34;

     label32:
        $r70 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r70 == null goto label33;

        $r63 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $r63.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: boolean record> = z3;

     label33:
        return;

     label34:
        $r43 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        $r44 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r45 = $r44.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i76 = $r45.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int maxProblemsPerUnit>;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        $r47 = $r46.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnit>;

        $r48 = $r47.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $i75 = $r48.<org.eclipse.jdt.internal.compiler.CompilationResult: int problemCount>;

        if $i76 >= $i75 goto label36;

        $r62 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r62 == null goto label32;

        $r64 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $z1 = $r64.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: boolean record>;

        if $z1 != 0 goto label35;

        goto label32;

     label35:
        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem> = 0;

     label36:
        $r49 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i77 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i103 = $r49[$i77];

        i104 = $i103;

        $i78 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol>;

        if $i78 != 0 goto label37;

        goto label44;

     label37:
        $i79 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol>;

        if $i79 <= 110 goto label40;

        $i85 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol>;

        i86 = $i85 - 110;

        i104 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i103, i86);

        goto label39;

     label38:
        $i89 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r53 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b87 = $r53[i104];

        $i139 = (int) $b87;

        $i88 = $i139 - 1;

        $i90 = $i89 - $i88;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i90;

        $r54 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i91 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i93 = $r54[$i91];

        $r55 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c92 = $r55[i104];

        $i140 = (int) $c92;

        i104 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i93, $i140);

     label39:
        if i104 <= 700 goto label38;

        $r56 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i94 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i95 = $i94 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i95;

        $r56[$i95] = i104;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i96 = virtualinvoke $r57.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int getToken()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken> = $i96;

        $r58 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i97 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        i105 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i97);

        $r59 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i99 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i98 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $r59[$i99] = $i98;

        $r61 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i101 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r60 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i100 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int currentToken>;

        $i102 = virtualinvoke $r60.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i100);

        $r61[$i101] = $i102;

        goto label41;

     label40:
        i105 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol>;

        $r50 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i81 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i80 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location>;

        $r50[$i81] = $i80;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i83 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r51 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i82 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location>;

        $i84 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i82);

        $r52[$i83] = $i84;

     label41:
        if i104 != 12827 goto label02;

        goto label44;

     label42:
        $r67 := @caughtexception;

        $r68 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r68 == null goto label43;

        $r69 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $r69.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: boolean record> = z3;

     label43:
        throw $r67;

     label44:
        $r39 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r39 == null goto label45;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $r40.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: boolean record> = z3;

     label45:
        return;

        catch java.lang.Throwable from label01 to label32 with label42;
        catch java.lang.Throwable from label34 to label42 with label42;
    }

    private static char[] displayEscapeCharacters(char[], int, int)
    {
        char $c1, c3, $c5;
        java.lang.StringBuffer $r4;
        int i0, i2, $i4, i6, i7, i8, $i9;
        char[] r1, $r3;
        java.lang.String $r2;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        i6 = 0;

        goto label02;

     label01:
        $c1 = r1[i6];

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        i6 = i6 + 1;

     label02:
        if i6 < i0 goto label01;

        i7 = i0;

        goto label14;

     label03:
        c3 = r1[i7];

        $i9 = (int) c3;

        lookupswitch($i9)
        {
            case 8: goto label06;
            case 9: goto label07;
            case 10: goto label05;
            case 12: goto label08;
            case 13: goto label04;
            case 34: goto label09;
            case 39: goto label10;
            case 92: goto label11;
            default: goto label12;
        };

     label04:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label13;

     label05:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label13;

     label06:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label13;

     label07:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

        goto label13;

     label08:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label13;

     label09:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label13;

     label10:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label13;

     label11:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label13;

     label12:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);

     label13:
        i7 = i7 + 1;

     label14:
        if i7 < i2 goto label03;

        i8 = i2;

        goto label16;

     label15:
        $c5 = r1[i8];

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        i8 = i8 + 1;

     label16:
        $i4 = lengthof r1;

        if i8 < $i4 goto label15;

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        return $r3;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate errorRecovery(int, boolean)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] $r7, $r9, $r11, $r14, $r15, $r20, $r21, $r22, $r24;
        boolean z0;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate $r4, $r5, $r10, r25, $r26;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17, $i18, $i19, $i20, $i21, $i22, i24, i25, $i26, $i27, $i29, $i30;
        char $c14, $c16, c23;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r1, $r2, $r3, $r6, $r8, $r12, $r19, $r23;
        char[] $r13, $r16, $r17;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int errorToken> = i0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i1 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>(i0);

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int errorTokenStart> = $i1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i2 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>(i0);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i3 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i2);

        if z0 == 0 goto label3;

        $r17 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        c23 = $r17[69];

        $i26 = (int) c23;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>(3, $i26, $i2, $i2);

        $r26 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate;

        specialinvoke $r26.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: void <init>()>();

        $r26.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = 69;

        $r26.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = i0;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>(i0);

        $i17 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i17;

        i24 = 0;

        goto label2;

     label1:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i19 = $r20[i24];

        $r21[i24] = $i19;

        i24 = i24 + 1;

     label2:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if i24 <= $i18 goto label1;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r22[$i20] = i0;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i22 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>(i0);

        $r24[$i21] = $i22;

        return $r26;

     label3:
        $r4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate primaryPhase(int)>(i0);

        $i4 = $r4.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol>;

        if $i4 == 0 goto label4;

        return $r4;

     label4:
        $r5 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate secondaryPhase(int)>(i0);

        r25 = $r5;

        $i5 = $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol>;

        if $i5 == 0 goto label5;

        return $r5;

     label5:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i6 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>(i0);

        if $i6 != 68 goto label7;

        $r16 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c16 = $r16[68];

        $i27 = (int) $c16;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>(11, $i27, $i2, $i2);

        $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = 0;

        $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = i0;

        return $r5;

     label6:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i9 = $r9[29];

        $r10 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate secondaryPhase(int)>($i9);

        r25 = $r10;

        $i10 = $r10.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol>;

        if $i10 == 0 goto label7;

        return $r10;

     label7:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i7 = $r7[31];

        $i8 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i7);

        if $i8 != 68 goto label6;

        i25 = 31;

        goto label9;

     label8:
        $i29 = (int) -1;

        i25 = i25 + $i29;

     label9:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i11 = $r11[i25];

        $i12 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i11);

        if $i12 == 68 goto label8;

        $r13 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c14 = $r13[$i3];

        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i13 = $r14[i25];

        $i30 = (int) $c14;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>(6, $i30, i0, $i13);

        r25.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = 0;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i15 = $r15[i25];

        r25.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i15;

        return r25;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate primaryPhase(int)
    {
        byte b1, $b61, $b62, $b63;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate $r30, $r32;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo $r10, $r12, $r25, $r27, r29, $r31;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r2;
        int[] $r3, $r4, $r6, $r7, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r26, $r28;
        boolean $z0, $z1;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, i51, i52, $i53, $i54, $i55, $i56, $i57, $i58, i59, i60, $i65;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r5, $r8, $r19;

        r2 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i2 := @parameter0: int;

        $r31 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        specialinvoke $r31.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: void <init>()>();

        r29 = $r31;

        $r32 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate;

        specialinvoke $r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: void <init>()>();

        $i0 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if $i0 < 0 goto label01;

        $b63 = 3;

        $b62 = 3;

        $b61 = 3;

        goto label02;

     label01:
        $b63 = 2;

        $b62 = 2;

        $b61 = 2;

     label02:
        b1 = $b63;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r3[$b61] = i2;

        i51 = $b62;

        goto label04;

     label03:
        $r6 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i4 = i51 - 1;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i3 = $r4[i51];

        $i5 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i3);

        $r6[$i4] = $i5;

        $i65 = (int) -1;

        i51 = i51 + $i65;

     label04:
        if i51 > 0 goto label03;

        i52 = b1 + 1;

        goto label06;

     label05:
        $r9 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r8 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r7 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i6 = i52 - 1;

        $i7 = $r7[$i6];

        $i8 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i7);

        $r9[i52] = $i8;

        i52 = i52 + 1;

     label06:
        if i52 < 32 goto label05;

        $i9 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if $i9 < 0 goto label07;

        $r31.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition> = 3;

        $r28 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i49 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        r29 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo checkPrimaryDistance(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>($r28, $i49, $r31);

     label07:
        $r10 = virtualinvoke r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo copy()>();

        $r10.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition> = 2;

        $r11 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i10 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r12 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo checkPrimaryDistance(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>($r11, $i10, $r10);

        $i12 = $r12.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $i11 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i12 > $i11 goto label08;

        $i48 = $r12.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        $i47 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if $i48 <= $i47 goto label09;

     label08:
        r29 = $r12;

     label09:
        $i53 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int prevStackTop>;

        if $i53 < 0 goto label11;

        $r25 = virtualinvoke r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo copy()>();

        $r25.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition> = 1;

        $r26 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] prevStack>;

        $i42 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int prevStackTop>;

        $r27 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo checkPrimaryDistance(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>($r26, $i42, $r25);

        $i44 = $r27.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $i43 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i44 > $i43 goto label10;

        $i46 = $r27.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        $i45 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if $i46 <= $i45 goto label11;

     label10:
        r29 = $r27;

     label11:
        $i54 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if $i54 < 0 goto label12;

        $r24 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i41 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $i40 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $z1 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean secondaryCheck(int[],int,int,int)>($r24, $i41, 3, $i40);

        if $z1 == 0 goto label13;

        return $r32;

     label12:
        $r13 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i14 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i13 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $z0 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean secondaryCheck(int[],int,int,int)>($r13, $i14, 2, $i13);

        if $z0 == 0 goto label13;

        return $r32;

     label13:
        $i16 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $i15 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i17 = $i16 - $i15;

        $i18 = $i17 + 1;

        r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i18;

        $i19 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        if $i19 == 4 goto label14;

        $i37 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        if $i37 == 6 goto label14;

        $i38 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        if $i38 == 5 goto label14;

        $i39 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        if $i39 != 7 goto label15;

     label14:
        $i55 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $i56 = $i55 - 1;

        r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i56;

     label15:
        $i57 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i57 >= 3 goto label16;

        return $r32;

     label16:
        $i20 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        if $i20 != 3 goto label17;

        $r23 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i34 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i35 = $i34 - 1;

        $i36 = $r23[$i35];

        if $i36 != 0 goto label17;

        r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 2;

     label17:
        $i58 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        if $i58 != 1 goto label20;

        $i31 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int prevStackTop>;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i31;

        i59 = 0;

        goto label19;

     label18:
        $r22 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $r21 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] prevStack>;

        $i33 = $r21[i59];

        $r22[i59] = $i33;

        i59 = i59 + 1;

     label19:
        $i32 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if i59 <= $i32 goto label18;

        goto label23;

     label20:
        $i21 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if $i21 < 0 goto label23;

        $i22 = r29.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        if $i22 < 3 goto label23;

        $i23 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i23;

        i60 = 0;

        goto label22;

     label21:
        $r15 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $r14 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i25 = $r14[i60];

        $r15[i60] = $i25;

        i60 = i60 + 1;

     label22:
        $i24 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if i60 <= $i24 goto label21;

        $r17 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i27 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r16 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i26 = $r16[3];

        $r17[$i27] = $i26;

        $r20 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i29 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r19 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r18 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i28 = $r18[3];

        $i30 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i28);

        $r20[$i29] = $i30;

     label23:
        $r30 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate primaryDiagnosis(org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>(r29);

        return $r30;
    }

    private int mergeCandidate(int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] $r1, $r4;
        boolean $z0;
        java.lang.String[] $r10, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i10, i12, $i14, $i15, $i16, $i17;
        java.lang.String $r11, $r13;
        char $c8, c9, $c11, $c13;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r2, $r5;
        char[] $r3, $r6, $r7, $r8, $r9, $r14, $r15, $r16;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i1 = $r1[i0];

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: char[] name(int)>($i1);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i2 = i0 + 1;

        $i3 = $r4[$i2];

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: char[] name(int)>($i3);

        $i5 = lengthof $r3;

        $i4 = lengthof $r6;

        i6 = $i5 + $i4;

        $r7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[])>($r3, $r6);

        i12 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int asi(int)>(i7);

        goto label3;

     label1:
        $r9 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $r8 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] asr>;

        $c8 = $r8[i12];

        $i14 = (int) $c8;

        c9 = $r9[$i14];

        $r10 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] name>;

        $i15 = (int) c9;

        $r11 = $r10[$i15];

        $i10 = virtualinvoke $r11.<java.lang.String: int length()>();

        if i6 != $i10 goto label2;

        $r12 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] name>;

        $i16 = (int) c9;

        $r13 = $r12[$i16];

        $r14 = virtualinvoke $r13.<java.lang.String: char[] toCharArray()>();

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[],boolean)>($r7, $r14, 0);

        if $z0 == 0 goto label2;

        $r15 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] asr>;

        $c11 = $r15[i12];

        $i17 = (int) $c11;

        return $i17;

     label2:
        i12 = i12 + 1;

     label3:
        $r16 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] asr>;

        $c13 = $r16[i12];

        if $c13 != 0 goto label1;

        return 0;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo checkPrimaryDistance(int[], int, org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)
    {
        byte[] $r5;
        byte $b5, b80, b103, b117, b118, b119, b120, b121, b122, b123;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] r1, $r4, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r21, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r34, $r36, $r38, $r40, $r43, $r44, $r45;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i81, $i82, i83, i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, i92, $i93, $i94, i95, i96, i99, i102, $i104, $i105, $i106, i107, i108, $i109, $i110, $i111, $i112, i113, i114, i115, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo $r2, $r3, r32;
        char[] $r6, $r9, $r19, $r23, $r41, $r42, $r46;
        boolean $z0, $z1, $z2, $z3, $z4;
        char $c12, $c29, c97, $c98, c100, $c101, $c116;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r17, $r22, $r30, $r33, $r35, $r37, $r39;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        r32 := @parameter2: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        $r2 = virtualinvoke r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo copy()>();

        $r3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo scopeTrial(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>(r1, i0, $r2);

        $i2 = $r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $i1 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i2 <= $i1 goto label01;

        r32 = $r3;

     label01:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i3 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i4 = $r4[$i3];

        if $i4 == 0 goto label03;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i58 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i59 = $i58 + 1;

        $i60 = $r31[$i59];

        if $i60 == 0 goto label03;

        $i62 = r1[i0];

        $i61 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i63 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int mergeCandidate(int,int)>($i62, $i61);

        if $i63 == 0 goto label03;

        $i64 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i65 = $i64 + 2;

        $i66 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r1, i0, $i63, $i65);

        $i67 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i66 > $i67 goto label02;

        $i68 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i66 != $i68 goto label03;

        $i69 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if $i69 >= 10 goto label03;

     label02:
        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = 10;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = $i63;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i66;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 7;

     label03:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i70 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i71 = $i70 + 1;

        $i72 = $r34[$i71];

        $i73 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i72);

        $i74 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i75 = $i74 + 2;

        $i76 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r1, i0, $i73, $i75);

        $r35 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i77 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i78 = $r36[$i77];

        $i79 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i78);

        if $i79 != 68 goto label04;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i55 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i56 = $i55 + 1;

        $i57 = $r29[$i56];

        $z4 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: boolean afterEol(int)>($i57);

        if $z4 == 0 goto label04;

        b80 = 10;

        b123 = 10;

        b122 = 10;

        goto label05;

     label04:
        b80 = 0;

        b123 = 0;

        b122 = 0;

     label05:
        $i81 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i76 > $i81 goto label06;

        $i53 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i76 != $i53 goto label07;

        $i54 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if b122 <= $i54 goto label07;

     label06:
        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = b123;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 6;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i76;

     label07:
        $i82 = r1[i0];

        i83 = $i82;

        i84 = i0;

        $i85 = i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i85;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i86 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i87 = $r38[$i86];

        $i88 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i87);

        $r39 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i89 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i90 = $i89 + 1;

        $i91 = $r40[$i90];

        virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i91);

        i92 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i82, $i88);

        goto label13;

     label08:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r5 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b5 = $r5[i92];

        $i124 = (int) $b5;

        $i6 = $i124 - 1;

        $i8 = $i7 - $i6;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i8;

        $r6 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c12 = $r6[i92];

        $i9 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i9 <= i84 goto label09;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i93 = $r8[$i16];

        goto label10;

     label09:
        $i10 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i93 = r1[$i10];

     label10:
        $i125 = (int) $c12;

        $i11 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i93, $i125);

        i92 = $i11;

        if $i11 <= 700 goto label08;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if i84 >= $i13 goto label11;

        $i94 = i84;

        goto label12;

     label11:
        $i94 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

     label12:
        i84 = $i94;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i15 = $i14 + 1;

        $r7[$i15] = $i11;

        i83 = $i11;

        i92 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i11, $i88);

     label13:
        if i92 <= 700 goto label08;

        i95 = 0;

        i96 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int asi(int)>(i83);

        goto label18;

     label14:
        $r9 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] asr>;

        c97 = $r9[i96];

        $i126 = (int) c97;

        if $i126 == 68 goto label17;

        $i127 = (int) c97;

        if $i127 == 110 goto label17;

        if i95 != 0 goto label15;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i128 = (int) c97;

        $i129 = (int) c97;

        $r13[$i128] = $i129;

        goto label16;

     label15:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i17 = $r10[i95];

        $i130 = (int) c97;

        $r11[$i130] = $i17;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i131 = (int) c97;

        $r12[i95] = $i131;

     label16:
        i95 = c97;

     label17:
        i96 = i96 + 1;

     label18:
        $r41 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] asr>;

        $c98 = $r41[i96];

        if $c98 != 0 goto label14;

        $i18 = r1[i0];

        if $i18 == i83 goto label24;

        $i49 = r1[i0];

        i99 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int asi(int)>($i49);

        goto label23;

     label19:
        $r23 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] asr>;

        c100 = $r23[i99];

        $i132 = (int) c100;

        if $i132 == 68 goto label22;

        $i133 = (int) c100;

        if $i133 == 110 goto label22;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i134 = (int) c100;

        $i50 = $r24[$i134];

        if $i50 != 0 goto label22;

        if i95 != 0 goto label20;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i135 = (int) c100;

        $i136 = (int) c100;

        $r28[$i135] = $i136;

        goto label21;

     label20:
        $r26 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i51 = $r25[i95];

        $i137 = (int) c100;

        $r26[$i137] = $i51;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i138 = (int) c100;

        $r27[i95] = $i138;

     label21:
        i95 = c100;

     label22:
        i99 = i99 + 1;

     label23:
        $r42 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] asr>;

        $c101 = $r42[i99];

        if $c101 != 0 goto label19;

     label24:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $i52 = $r14[i95];

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $r15[i95] = 0;

        i102 = $i52;

        goto label31;

     label25:
        if i102 != 68 goto label26;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i24 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i25 = $r16[$i24];

        $z1 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: boolean afterEol(int)>($i25);

        if $z1 == 0 goto label26;

        b103 = 10;

        b121 = 10;

        b120 = 10;

        b119 = 10;

        b118 = 10;

        b117 = 10;

        goto label27;

     label26:
        b103 = 0;

        b121 = 0;

        b120 = 0;

        b119 = 0;

        b118 = 0;

        b117 = 0;

     label27:
        $i104 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i105 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r1, i0, i102, $i104);

        $i106 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i105 <= $i106 goto label28;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = b117;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i105;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i102;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 3;

        goto label30;

     label28:
        $i19 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i105 != $i19 goto label29;

        $i23 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if b121 <= $i23 goto label29;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = b119;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i105;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i102;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 3;

        goto label30;

     label29:
        $i20 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i105 != $i20 goto label30;

        $i21 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if b118 != $i21 goto label30;

        $i22 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean isBetterSymbol(int,int)>(i102, $i22);

        if $z0 == 0 goto label30;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = b120;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i105;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i102;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 3;

     label30:
        $r43 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        i102 = $r43[i102];

     label31:
        if i102 != 0 goto label25;

        i107 = $i52;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i26 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i27 = $r18[$i26];

        if $i27 == 0 goto label39;

        goto label38;

     label32:
        if i107 != 68 goto label33;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i46 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i47 = $i46 + 1;

        $i48 = $r21[$i47];

        $z3 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: boolean afterEol(int)>($i48);

        if $z3 == 0 goto label33;

        i108 = 10;

        goto label34;

     label33:
        $r20 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i39 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i40 = $r20[$i39];

        i108 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int misspell(int,int)>(i107, $i40);

     label34:
        $i109 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i110 = $i109 + 1;

        $i111 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r1, i0, i107, $i110);

        $i112 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i111 <= $i112 goto label35;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = i108;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i111;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i107;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 5;

        goto label37;

     label35:
        $i41 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i111 != $i41 goto label36;

        $i45 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if i108 <= $i45 goto label36;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = i108;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i107;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 5;

        goto label37;

     label36:
        $i42 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i111 != $i42 goto label37;

        $i43 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if i108 <= $i43 goto label37;

        $i44 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $z2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean isBetterSymbol(int,int)>(i107, $i44);

        if $z2 == 0 goto label37;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = i108;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i107;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 5;

     label37:
        i113 = i107;

        $r44 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        i107 = $r44[i107];

        $r45 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] list>;

        $r45[i113] = 0;

     label38:
        if i107 != 0 goto label32;

     label39:
        $i28 = r1[i0];

        i114 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int nasi(int)>($i28);

        goto label44;

     label40:
        $r19 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] nasr>;

        $c29 = $r19[i114];

        $i139 = (int) $c29;

        i115 = $i139 + 110;

        $i30 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i31 = $i30 + 1;

        $i32 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r1, i0, i115, $i31);

        $i33 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i32 <= $i33 goto label41;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = 0;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i32;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i115;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 4;

     label41:
        $i34 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i35 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r1, i0, i115, $i34);

        $i36 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i35 > $i36 goto label42;

        $i37 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i35 != $i37 goto label43;

        $i38 = r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        if $i38 != 4 goto label43;

     label42:
        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = 0;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i35;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = i115;

        r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 3;

     label43:
        i114 = i114 + 1;

     label44:
        $r46 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] nasr>;

        $c116 = $r46[i114];

        if $c116 != 0 goto label40;

        return r32;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate primaryDiagnosis(org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate $r41;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r33, $r36, $r37, $r38;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i91, i92, $i93, i94, $i95, i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo r1;
        char[] $r8, $r9, $r11, $r31, $r34, $r35, $r39;
        char $c10, $c11, $c17, $c62, $c71, $c90;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r19, $r22, $r25, $r28, $r30, $r32;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i1 = $i0 - 1;

        i2 = $r2[$i1];

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        i4 = $r3[$i3];

        $i5 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        tableswitch($i5)
        {
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label14;
            case 7: goto label10;
            case 8: goto label14;
            case 9: goto label11;
            default: goto label14;
        };

     label01:
        $i80 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        if $i80 <= 110 goto label02;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i86 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i89 = $r38[$i86];

        $i88 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $i87 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        i92 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int getNtermIndex(int,int,int)>($i89, $i88, $i87);

        goto label03;

     label02:
        $r37 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i83 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i82 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $i81 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        i92 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int getTermIndex(int[],int,int,int)>($r37, $i83, $i82, $i81);

     label03:
        $i84 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        if $i84 != 3 goto label04;

        $i93 = i2;

        goto label05;

     label04:
        $i93 = i4;

     label05:
        $i85 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>($i85, i92, $i93, $i93);

        goto label15;

     label06:
        $r36 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i73 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i77 = $r36[$i73];

        $i76 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $i74 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i75 = $i74 + 1;

        $i78 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int getNtermIndex(int,int,int)>($i77, $i76, $i75);

        $i79 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>($i79, $i78, i4, i4);

        goto label15;

     label07:
        $i64 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex>;

        if $i64 < 6 goto label08;

        $r35 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $i72 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        i94 = $r35[$i72];

        goto label09;

     label08:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i68 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i67 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $i65 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i66 = $i65 + 1;

        $i69 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int getTermIndex(int[],int,int,int)>($r33, $i68, $i67, $i66);

        i94 = $i69;

        $r34 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $i70 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $c71 = $r34[$i70];

        $i98 = (int) $c71;

        if $i69 == $i98 goto label09;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 4;

     label09:
        $i95 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>($i95, i94, i4, i4);

        goto label15;

     label10:
        $i61 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        $r31 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $i60 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $c62 = $r31[$i60];

        $r32 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i63 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>(i4);

        $i99 = (int) $c62;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>($i61, $i99, i4, $i63);

        goto label15;

     label11:
        i96 = 0;

        goto label13;

     label12:
        $i14 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i7 = $r4[i96];

        $i13 = neg $i7;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $i8 = $r5[i96];

        $i12 = $r6[$i8];

        $r9 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $r8 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i9 = $r7[i96];

        $c10 = $r8[$i9];

        $i100 = (int) $c10;

        $c11 = $r9[$i100];

        $i101 = (int) $c11;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int,int)>($i14, $i13, $i12, i2, $i101);

        i96 = i96 + 1;

     label13:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        if i96 < $i6 goto label12;

        $r11 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i16 = $r10[$i15];

        $c17 = $r11[$i16];

        $i102 = (int) $c17;

        $i18 = $i102 + 110;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol> = $i18;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i20 = $r12[$i19];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i20;

        $i29 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i22 = $r13[$i21];

        $i30 = neg $i22;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i24 = $r14[$i23];

        $i31 = $r15[$i24];

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i25 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i28 = $r16[$i25];

        $i27 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $i26 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i32 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int getNtermIndex(int,int,int)>($i28, $i27, $i26);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int,int)>($i29, $i30, $i31, i2, $i32);

        goto label15;

     label14:
        $i91 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        $r39 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c90 = $r39[110];

        $i103 = (int) $c90;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>($i91, $i103, i4, i4);

     label15:
        $r41 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate;

        specialinvoke $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: void <init>()>();

        $i97 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code>;

        tableswitch($i97)
        {
            case 2: goto label16;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label19;
            case 7: goto label18;
            case 8: goto label19;
            case 9: goto label16;
            default: goto label19;
        };

     label16:
        $i45 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = $i45;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i46 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i47 = $r23[$i46];

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i47;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i48 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i49 = $r24[$i48];

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i49);

        goto label20;

     label17:
        $i39 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = $i39;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i40 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i41 = $r20[$i40];

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i41;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i42 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i43 = $i42 + 1;

        $i44 = $r21[$i43];

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i44);

        goto label20;

     label18:
        $i33 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int symbol>;

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = $i33;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i34 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i35 = $r17[$i34];

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i35;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i36 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i37 = $i36 + 2;

        $i38 = $r18[$i37];

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i38);

        goto label20;

     label19:
        $r26 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i50 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i51 = $i50 + 1;

        $i52 = $r26[$i51];

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i52;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i53 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i54 = $i53 + 1;

        $i55 = $r27[$i54];

        $i56 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i55);

        $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = $i56;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i57 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i58 = $i57 + 2;

        $i59 = $r29[$i58];

        virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i59);

     label20:
        return $r41;
    }

    private int getTermIndex(int[], int, int, int)
    {
        byte[] $r4, $r13;
        byte $b4, $b24;
        char[] $r5, $r14, $r17, $r18, $r19, $r20;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r1;
        int[] r0, $r2, $r6, $r7, $r8, $r10, $r12, $r15, $r16;
        int i0, $i1, i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, i42, i43, $i44, $i45, i46, i47, $i49, $i51, $i52, $i54, $i55, $i56, $i57, $i58, $i59;
        char $c11, c29, $c48, $c50;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r3, $r9, $r11;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i39 := @parameter2: int;

        i2 := @parameter3: int;

        i40 = r0[i0];

        i41 = i0;

        i42 = i39;

        $i1 = i0 - 1;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i3 = $r2[i2];

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i3);

        i43 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>(i40, i39);

        goto label06;

     label01:
        $i6 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r4 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b4 = $r4[i43];

        $i51 = (int) $b4;

        $i5 = $i51 - 1;

        $i7 = $i6 - $i5;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i7;

        $r5 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c11 = $r5[i43];

        $i8 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i8 <= i41 goto label02;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i15 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i44 = $r7[$i15];

        goto label03;

     label02:
        $i9 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i44 = r0[$i9];

     label03:
        $i52 = (int) $c11;

        $i10 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i44, $i52);

        i43 = $i10;

        if $i10 <= 700 goto label01;

        $i12 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if i41 >= $i12 goto label04;

        $i45 = i41;

        goto label05;

     label04:
        $i45 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

     label05:
        i41 = $i45;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i13 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i14 = $i13 + 1;

        $r6[$i14] = $i10;

        i43 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i10, i39);

     label06:
        if i43 <= 700 goto label01;

        $i16 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i17 = $i16 + 1;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i17;

        i46 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i18 = $r8[i2];

        $i19 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i18);

        $r11 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i20 = i2 + 1;

        $i21 = $r10[$i20];

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i21);

        if i43 <= 12828 goto label07;

        $i54 = (int) -12828;

        i47 = i43 + $i54;

        goto label15;

     label07:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i22 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i23 = $i22 + 1;

        $r12[$i23] = i43;

        i47 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>(i43, $i19);

        goto label15;

     label08:
        $i26 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r13 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b24 = $r13[i47];

        $i55 = (int) $b24;

        $i25 = $i55 - 1;

        $i27 = $i26 - $i25;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i27;

        $i28 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i28 >= i46 goto label11;

        if i42 <= 110 goto label09;

        $r18 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $i37 = i42 - 110;

        $c48 = $r18[$i37];

        goto label10;

     label09:
        $r17 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c48 = $r17[i42];

     label10:
        $i56 = (int) $c48;

        return $i56;

     label11:
        $r14 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        c29 = $r14[i47];

        $i30 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i30 != i46 goto label12;

        $i57 = (int) c29;

        i42 = $i57 + 110;

     label12:
        $i31 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i31 <= i41 goto label13;

        $r16 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i36 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i49 = $r16[$i36];

        goto label14;

     label13:
        $i32 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i49 = r0[$i32];

     label14:
        $i58 = (int) c29;

        $i33 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i49, $i58);

        i47 = $i33;

        if $i33 <= 700 goto label08;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i34 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i35 = $i34 + 1;

        $r15[$i35] = $i33;

        i47 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i33, $i19);

     label15:
        if i47 <= 700 goto label08;

        if i42 <= 110 goto label16;

        $r20 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $i38 = i42 - 110;

        $c50 = $r20[$i38];

        goto label17;

     label16:
        $r19 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c50 = $r19[i42];

     label17:
        $i59 = (int) $c50;

        return $i59;
    }

    private int getNtermIndex(int, int, int)
    {
        byte[] $r6;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        byte $b9;
        int[] $r1, $r3, $r5, $r7, $r9, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i23, $i24, i25, i26, $i27, $i28, $i29, $i30;
        char $c16, $c21, $c22;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r2, $r4;
        char[] $r8, $r10, $r11, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i25 = i0 - 110;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i2 = $r1[i1];

        $i3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i2);

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i4 = i1 + 1;

        $i5 = $r3[$i4];

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i5);

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = 0;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r5[$i7] = i6;

        $i8 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>(i6, i25);

        i26 = $i8;

        if $i8 <= 700 goto label4;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i24 = $i23 + 1;

        $r13[$i24] = $i8;

        i26 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i8, $i3);

        goto label4;

     label1:
        $i11 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r6 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b9 = $r6[i26];

        $i27 = (int) $b9;

        $i10 = $i27 - 1;

        $i12 = $i11 - $i10;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i12;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i13 >= 0 goto label2;

        $r11 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $c21 = $r11[i25];

        $i28 = (int) $c21;

        return $i28;

     label2:
        $i14 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i14 != 0 goto label3;

        $r10 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        i25 = $r10[i26];

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i17 = $r7[$i15];

        $r8 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c16 = $r8[i26];

        $i29 = (int) $c16;

        $i18 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i17, $i29);

        i26 = $i18;

        if $i18 <= 700 goto label1;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i20 = $i19 + 1;

        $r9[$i20] = $i18;

        i26 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i18, $i3);

     label4:
        if i26 <= 700 goto label1;

        $r12 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $c22 = $r12[i25];

        $i30 = (int) $c22;

        return $i30;
    }

    private boolean isBetterSymbol(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    private int misspell(int, int)
    {
        java.lang.String $r2;
        char[] $r0, $r3, r4, $r7, $r8;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r5;
        java.lang.String[] $r1;
        int i0, i2, $i3, i5, i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i20, $i21, $i24, $i25, $i26, $i27, $i28, i47, i49, $i50, i51, i53, i54, i55, i56, i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84;
        char $c1, $c4, $c8, $c15, $c16, $c18, $c19, $c22, $c23, $c29, $c30, $c31, $c32, $c33, $c34, $c35, $c36, $c37, $c38, $c39, $c40, $c41, $c42, $c43, $c44, $c45, $c46, c48, c52;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r6;

        r5 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        $r1 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] name>;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c1 = $r0[i0];

        $i60 = (int) $c1;

        $r2 = $r1[$i60];

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        i2 = lengthof $r3;

        $i3 = i2 + 1;

        r4 = newarray (char)[$i3];

        i47 = 0;

        goto label02;

     label01:
        c48 = $r3[i47];

        $c4 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: char toLowerCase(char)>(c48);

        r4[i47] = $c4;

        i47 = i47 + 1;

     label02:
        if i47 < i2 goto label01;

        r4[i2] = 0;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: char[] name(int)>(i5);

        i49 = lengthof $r7;

        if i49 >= 41 goto label03;

        $i50 = i49;

        goto label04;

     label03:
        $i50 = 41;

     label04:
        i6 = $i50;

        $i7 = $i50 + 1;

        $r8 = newarray (char)[$i7];

        i51 = 0;

        goto label06;

     label05:
        c52 = $r7[i51];

        $c8 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: char toLowerCase(char)>(c52);

        $r8[i51] = $c8;

        i51 = i51 + 1;

     label06:
        if i51 < i6 goto label05;

        $r8[i6] = 0;

        if i2 != 1 goto label15;

        if i6 != 1 goto label15;

        $c31 = r4[0];

        $i61 = (int) $c31;

        if $i61 != 59 goto label07;

        $c46 = $r8[0];

        $i62 = (int) $c46;

        if $i62 == 44 goto label14;

     label07:
        $c32 = r4[0];

        $i63 = (int) $c32;

        if $i63 != 44 goto label08;

        $c45 = $r8[0];

        $i64 = (int) $c45;

        if $i64 == 59 goto label14;

     label08:
        $c33 = r4[0];

        $i65 = (int) $c33;

        if $i65 != 59 goto label09;

        $c44 = $r8[0];

        $i66 = (int) $c44;

        if $i66 == 58 goto label14;

     label09:
        $c34 = r4[0];

        $i67 = (int) $c34;

        if $i67 != 58 goto label10;

        $c43 = $r8[0];

        $i68 = (int) $c43;

        if $i68 == 59 goto label14;

     label10:
        $c35 = r4[0];

        $i69 = (int) $c35;

        if $i69 != 46 goto label11;

        $c42 = $r8[0];

        $i70 = (int) $c42;

        if $i70 == 44 goto label14;

     label11:
        $c36 = r4[0];

        $i71 = (int) $c36;

        if $i71 != 44 goto label12;

        $c41 = $r8[0];

        $i72 = (int) $c41;

        if $i72 == 46 goto label14;

     label12:
        $c37 = r4[0];

        $i73 = (int) $c37;

        if $i73 != 39 goto label13;

        $c40 = $r8[0];

        $i74 = (int) $c40;

        if $i74 == 34 goto label14;

     label13:
        $c38 = r4[0];

        $i75 = (int) $c38;

        if $i75 != 34 goto label15;

        $c39 = $r8[0];

        $i76 = (int) $c39;

        if $i76 != 39 goto label15;

     label14:
        return 3;

     label15:
        i53 = 0;

        i54 = 0;

        i55 = 0;

        i56 = 0;

        i57 = 0;

        goto label23;

     label16:
        $c16 = r4[i56];

        $c15 = $r8[i57];

        $i77 = (int) $c16;

        $i78 = (int) $c15;

        if $i77 != $i78 goto label17;

        i53 = i53 + 1;

        i56 = i56 + 1;

        i57 = i57 + 1;

        if i55 != 0 goto label23;

        i54 = i54 + 1;

        goto label23;

     label17:
        $i17 = i56 + 1;

        $c19 = r4[$i17];

        $c18 = $r8[i57];

        $i79 = (int) $c19;

        $i80 = (int) $c18;

        if $i79 != $i80 goto label18;

        $c30 = r4[i56];

        $i28 = i57 + 1;

        $c29 = $r8[$i28];

        $i81 = (int) $c30;

        $i82 = (int) $c29;

        if $i81 != $i82 goto label18;

        i53 = i53 + 2;

        i56 = i56 + 2;

        i57 = i57 + 2;

        i55 = i55 + 1;

        goto label23;

     label18:
        $i20 = i56 + 1;

        $c23 = r4[$i20];

        $i21 = i57 + 1;

        $c22 = $r8[$i21];

        $i83 = (int) $c23;

        $i84 = (int) $c22;

        if $i83 != $i84 goto label19;

        i56 = i56 + 1;

        i57 = i57 + 1;

        i55 = i55 + 1;

        goto label23;

     label19:
        $i25 = i2 - i56;

        $i24 = i6 - i57;

        if $i25 <= $i24 goto label20;

        i56 = i56 + 1;

        goto label22;

     label20:
        $i27 = i6 - i57;

        $i26 = i2 - i56;

        if $i27 <= $i26 goto label21;

        i57 = i57 + 1;

        goto label22;

     label21:
        i56 = i56 + 1;

        i57 = i57 + 1;

     label22:
        i55 = i55 + 1;

     label23:
        if i56 >= i2 goto label24;

        if i57 < i6 goto label16;

     label24:
        if i56 < i2 goto label25;

        if i57 >= i6 goto label26;

     label25:
        i55 = i55 + 1;

     label26:
        $i14 = i55;

        if i2 >= i6 goto label27;

        $i58 = i2;

        goto label28;

     label27:
        $i58 = i6;

     label28:
        $i9 = $i58 / 6;

        $i10 = $i9 + 1;

        if $i14 <= $i10 goto label29;

        i53 = i54;

     label29:
        $i12 = i53 * 10;

        if i2 >= i49 goto label30;

        $i59 = i49;

        goto label31;

     label30:
        $i59 = i2;

     label31:
        $i11 = $i59 + i55;

        $i13 = $i12 / $i11;

        return $i13;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo scopeTrial(int[], int, org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo r5;
        int[] $r1, $r2, r4;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] $r3;
        int $i0, $i1, $i2, i3, i4, $i6;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r4 := @parameter0: int[];

        i3 := @parameter1: int;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r1 = newarray (int)[$i0];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stateSeen> = $r1;

        i4 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stateSeen>;

        $i6 = (int) -1;

        $r2[i4] = $i6;

        i4 = i4 + 1;

     label2:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        if i4 < $i1 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int statePoolTop> = 0;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo)[$i2];

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool> = $r3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void scopeTrialCheck(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo,int)>(r4, i3, r5, 0);

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stateSeen> = null;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int statePoolTop> = 0;

        r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int code> = 9;

        r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int misspellIndex> = 10;

        return r5;
    }

    private void scopeTrialCheck(int[], int, org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo, int)
    {
        byte[] $r12, $r16, $r31;
        byte b9, $b12, $b48, $b49;
        long $l46, $l47;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r1;
        int[] r0, $r2, $r9, $r11, $r14, $r18, $r19, $r26, $r27, $r35, $r40;
        long[] $r29;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i30, $i32, i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i50, $i52, $i53, $i55, $i56, $i58, $i59, $i61, $i62, $i63, i64, i65, i66, i67, i68, i69, $i70, $i71, i72, i73, $i74, i75, i76, i77, i78, i79, $i80, $i81, $i82, $i83, $i85, $i86, $i87, $i88, $i89, $i91, $i92, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo $r4, $r6, $r41;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r30;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo r13;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] $r3, $r5, $r7, $r10, $r37, $r38;
        char[] $r17, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r32, $r33, $r34, $r36;
        char $c19, $c29, $c31, $c33, $c35, $c44, $c51, $c54, $c57, $c60;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r15, $r39;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r0 := @parameter0: int[];

        i1 := @parameter1: int;

        r13 := @parameter2: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        i0 := @parameter3: int;

        if i0 <= 20 goto label01;

        return;

     label01:
        i64 = r0[i1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stateSeen>;

        i65 = $r2[i1];

        goto label04;

     label02:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool>;

        $r4 = $r3[i65];

        $i2 = $r4.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo: int state>;

        if $i2 != i64 goto label03;

        return;

     label03:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool>;

        $r6 = $r5[i65];

        i65 = $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo: int next>;

     label04:
        $i85 = (int) -1;

        if i65 != $i85 goto label02;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int statePoolTop>;

        $i4 = $i3 + 1;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int statePoolTop> = $i4;

        $i6 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int statePoolTop>;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool>;

        $i5 = lengthof $r7;

        if $i6 < $i5 goto label05;

        $r38 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool>;

        $i61 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int statePoolTop>;

        $i62 = $i61 * 2;

        $r37 = newarray (org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo)[$i62];

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool> = $r37;

        $i63 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int statePoolTop>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r38, 0, $r37, 0, $i63);

     label05:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo[] statePool>;

        $r41 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stateSeen>;

        $i7 = $r9[i1];

        specialinvoke $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo: void <init>(int,int)>(i64, $i7);

        $r10[$i3] = $r41;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stateSeen>;

        $r11[i1] = $i3;

        i66 = 0;

        goto label32;

     label06:
        i67 = r0[i1];

        $i8 = i1 - 1;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i8;

        i68 = i1;

        $r12 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] scope_la>;

        b9 = $r12[i66];

        $r15 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i10 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i11 = $r14[$i10];

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i11);

        $i86 = (int) b9;

        i69 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>(i67, $i86);

        goto label13;

     label07:
        $i14 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r16 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b12 = $r16[i69];

        $i87 = (int) $b12;

        $i13 = $i87 - 1;

        $i15 = $i14 - $i13;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i15;

        $r17 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c19 = $r17[i69];

        $i16 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i16 <= i68 goto label08;

        $r19 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i26 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i70 = $r19[$i26];

        goto label09;

     label08:
        $i17 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i70 = r0[$i17];

     label09:
        $i88 = (int) $c19;

        $i18 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i70, $i88);

        i69 = $i18;

        if $i18 <= 700 goto label07;

        $i20 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i22 = $i20 + 1;

        $i21 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        if $i22 < $i21 goto label10;

        return;

     label10:
        $i23 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if i68 >= $i23 goto label11;

        $i71 = i68;

        goto label12;

     label11:
        $i71 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

     label12:
        i68 = $i71;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i24 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i25 = $i24 + 1;

        $r18[$i25] = $i18;

        $i89 = (int) b9;

        i69 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>($i18, $i89);

     label13:
        if i69 <= 700 goto label07;

        if i69 == 12828 goto label31;

        $r20 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_prefix>;

        i72 = $r20[i66];

        $i27 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        i73 = $i27 + 1;

        goto label15;

     label14:
        i72 = i72 + 1;

        $i91 = (int) -1;

        i73 = i73 + $i91;

     label15:
        $i28 = i68 + 1;

        if i73 < $i28 goto label16;

        $r35 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i58 = $r35[i73];

        $i59 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int in_symbol(int)>($i58);

        $r36 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c60 = $r36[i72];

        $i92 = (int) $c60;

        if $i59 == $i92 goto label14;

     label16:
        if i73 != i68 goto label19;

        i73 = i68;

        goto label18;

     label17:
        i72 = i72 + 1;

        $i94 = (int) -1;

        i73 = i73 + $i94;

     label18:
        if i73 < 1 goto label19;

        $i55 = r0[i73];

        $i56 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int in_symbol(int)>($i55);

        $r34 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c57 = $r34[i72];

        $i95 = (int) $c57;

        if $i56 == $i95 goto label17;

     label19:
        if i68 >= i1 goto label20;

        $i74 = i68 + 1;

        goto label21;

     label20:
        $i74 = i1;

     label21:
        $r21 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c29 = $r21[i72];

        if $c29 != 0 goto label31;

        if i73 >= $i74 goto label31;

        i30 = i73;

        $r22 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_state_set>;

        i75 = $r22[i66];

        goto label23;

     label22:
        i75 = i75 + 1;

     label23:
        $i32 = r0[i30];

        $r23 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_state>;

        $c31 = $r23[i75];

        $i96 = (int) $c31;

        if $i32 == $i96 goto label24;

        $r33 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_state>;

        $c54 = $r33[i75];

        if $c54 != 0 goto label22;

     label24:
        $r24 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_state>;

        $c33 = $r24[i75];

        if $c33 == 0 goto label31;

        i34 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $r25 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $c35 = $r25[i66];

        $i97 = (int) $c35;

        $i37 = $i97 + 110;

        $i36 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i38 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r0, i30, $i37, $i36);

        $i39 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i40 = $i38 - $i39;

        $i41 = $i40 + 1;

        if $i41 >= 3 goto label28;

        i76 = i30;

        $i45 = r0[i30];

        $r28 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $c44 = $r28[i66];

        $i98 = (int) $c44;

        i77 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i45, $i98);

        goto label27;

     label25:
        $r29 = <org.eclipse.jdt.internal.compiler.parser.Parser: long[] rules_compliance>;

        $l47 = $r29[i77];

        $r30 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l46 = $r30.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b48 = $l47 cmp $l46;

        $i99 = (int) $b48;

        if $i99 <= 0 goto label26;

        goto label31;

     label26:
        $r31 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b49 = $r31[i77];

        $i100 = (int) $b49;

        $i50 = $i100 - 1;

        i76 = i76 - $i50;

        $i52 = r0[i76];

        $r32 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c51 = $r32[i77];

        $i101 = (int) $c51;

        i77 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i52, $i101);

     label27:
        if i77 <= 700 goto label25;

        i78 = i76 + 1;

        i79 = r0[i78];

        r0[i78] = i77;

        $i53 = i0 + 1;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void scopeTrialCheck(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo,int)>(r0, i78, r13, $i53);

        r0[i78] = i79;

        goto label29;

     label28:
        $i42 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i38 <= $i42 goto label29;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop> = i0;

        r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = $i38;

     label29:
        $r39 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r40 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i80 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i81 = $r40[$i80];

        $i82 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i81);

        if $i82 != 68 goto label30;

        $i43 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i43 != i34 goto label30;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop> = i0;

        r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = 30;

     label30:
        $i83 = r13.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i83 <= i34 goto label31;

        $r26 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $r26[i0] = i66;

        $r27 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $r27[i0] = i30;

        return;

     label31:
        i66 = i66 + 1;

     label32:
        if i66 < 134 goto label06;

        return;
    }

    private boolean secondaryCheck(int[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo $r5, $r6;
        int[] r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, i13, $i15;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i8 := @parameter3: int;

        i13 = i0 - 1;

        goto label3;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i2 = $r2[i1];

        $i3 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i2);

        $i4 = i1 + 1;

        $i5 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r1, i13, $i3, $i4);

        $i6 = $i5 - i1;

        $i7 = $i6 + 1;

        if $i7 <= 3 goto label2;

        if $i5 <= i8 goto label2;

        return 1;

     label2:
        $i15 = (int) -1;

        i13 = i13 + $i15;

     label3:
        if i13 >= 0 goto label1;

        $r6 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: void <init>()>();

        $i9 = i1 + 1;

        $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition> = $i9;

        $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = i8;

        $r5 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo scopeTrial(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>(r1, i0, $r6);

        $i10 = $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        $i11 = $i10 - i1;

        if $i11 <= 3 goto label4;

        $i12 = $r5.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i12 <= i8 goto label4;

        return 1;

     label4:
        return 0;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate secondaryPhase(int)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo $r18, $r20, $r89, $r91, r96, r97, $r100, $r101;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate $r102;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r3;
        int[] $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r22, $r23, $r25, $r28, $r29, $r31, $r34, $r35, $r37, $r40, $r42, $r44, $r46, $r48, $r49, $r50, $r51, $r53, $r54, $r56, $r57, $r59, $r61, $r62, $r63, $r64, $r66, $r67, $r69, $r70, $r72, $r73, $r75, $r76, $r78, $r80, $r81, $r82, $r83, $r84, $r85, $r87, $r88, $r90, $r92, $r93, $r94;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, i120, i121, i122, i123, i124, i125, i126, i127, $i128, i129, $i130, $i131, $i132, $i133, $i134, i135, i136, $i137, $i139, $i141, $i142, $i143, $i145;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo $r41, $r45, r98, r99, $r103, $r104;
        char[] $r43, $r47;
        boolean $z0, $z1, $z2, $z3;
        char $c42, $c55;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r6, $r9, $r12, $r15, $r24, $r26, $r27, $r30, $r32, $r33, $r36, $r38, $r52, $r55, $r58, $r60, $r65, $r68, $r71, $r74, $r77, $r79, $r86, $r95;

        r3 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i4 := @parameter0: int;

        $r100 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo;

        specialinvoke $r100.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: void <init>()>();

        r96 = $r100;

        $r101 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo;

        specialinvoke $r101.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: void <init>()>();

        r97 = $r101;

        $r102 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate;

        specialinvoke $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: void <init>()>();

        i120 = 0;

        $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = 0;

        $r100.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code> = 0;

        $r100.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = 0;

        $r100.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack> = 0;

        $r101.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = 0;

        $r101.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack> = 0;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        if $i0 < 0 goto label08;

        $r69 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r69[2] = i4;

        $r72 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r71 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r70 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i90 = $r70[2];

        $i91 = virtualinvoke $r71.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i90);

        $r72[1] = $i91;

        $r75 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r74 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r73 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i92 = $r73[1];

        $i93 = virtualinvoke $r74.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i92);

        $r75[0] = $i93;

        i121 = 3;

        goto label02;

     label01:
        $r78 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r77 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r76 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i94 = i121 - 1;

        $i95 = $r76[$i94];

        $i96 = virtualinvoke $r77.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i95);

        $r78[i121] = $i96;

        i121 = i121 + 1;

     label02:
        if i121 < 31 goto label01;

        $r80 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r79 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i97 = virtualinvoke $r79.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int badtoken()>();

        $r80[31] = $i97;

        i122 = 29;

        goto label04;

     label03:
        $i139 = (int) -1;

        i122 = i122 + $i139;

     label04:
        if i122 < 1 goto label05;

        $r95 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r94 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i116 = $r94[i122];

        $i117 = virtualinvoke $r95.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i116);

        if $i117 == 68 goto label03;

     label05:
        i120 = i122 + 1;

        $r81 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i98 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $i118 = $r81[$i98];

        $r82 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i99 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $i119 = $r82[$i99];

        $r84 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i101 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r83 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i100 = $r83[2];

        $r84[$i101] = $i100;

        $r87 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i103 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r86 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r85 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i102 = $r85[2];

        $i104 = virtualinvoke $r86.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i102);

        $r87[$i103] = $i104;

        $i105 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r101.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = $i105;

        $r88 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i106 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r89 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo misplacementRecovery(int[],int,int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo,boolean)>($r88, $i106, i120, $r101, 1);

        r97 = $r89;

        $z1 = $r89.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack>;

        if $z1 == 0 goto label06;

        $i114 = $r89.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i115 = $i114 + 1;

        $r89.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = $i115;

     label06:
        $i107 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $i108 = $i107 + 31;

        $r100.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = $i108;

        $r90 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i109 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r91 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo secondaryRecovery(int[],int,int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo,boolean)>($r90, $i109, i120, $r100, 1);

        r96 = $r91;

        $z2 = $r91.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack>;

        if $z2 == 0 goto label07;

        $i112 = $r91.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i113 = $i112 + 1;

        $r91.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = $i113;

     label07:
        $r92 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i110 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r92[$i110] = $i118;

        $r93 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i111 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r93[$i111] = $i119;

        goto label09;

     label08:
        $i1 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r101.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = $i1;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i3 = $i2 + 31;

        $r100.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = $i3;

     label09:
        $r4 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r4[3] = i4;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r6 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r5 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i5 = $r5[3];

        $i6 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i5);

        $r7[2] = $i6;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r9 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i7 = $r8[2];

        $i8 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i7);

        $r10[1] = $i8;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r11 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i9 = $r11[1];

        $i10 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i9);

        $r13[0] = $i10;

        i123 = 4;

        goto label11;

     label10:
        $r16 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r14 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i11 = i123 - 1;

        $i12 = $r14[$i11];

        $i13 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i12);

        $r16[i123] = $i13;

        i123 = i123 + 1;

     label11:
        if i123 < 32 goto label10;

        i124 = 29;

        goto label13;

     label12:
        $i141 = (int) -1;

        i124 = i124 + $i141;

     label13:
        if i124 < 1 goto label14;

        $r68 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r67 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i88 = $r67[i124];

        $i89 = virtualinvoke $r68.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i88);

        if $i89 == 68 goto label12;

     label14:
        i125 = i124 + 1;

        $r17 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i14 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r18 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo misplacementRecovery(int[],int,int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo,boolean)>($r17, $i14, i125, r97, 0);

        $r19 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i15 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r20 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo secondaryRecovery(int[],int,int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo,boolean)>($r19, $i15, i125, r96, 0);

        $i16 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        if $i16 <= 3 goto label16;

        $i78 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i77 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        if $i78 <= $i77 goto label15;

        $i83 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i82 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i87 = $i83 - $i82;

        $i85 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i84 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i86 = $i85 - $i84;

        if $i87 < $i86 goto label16;

     label15:
        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code> = 8;

        $i79 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition>;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition> = $i79;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition> = 2;

        $i80 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = $i80;

        $i81 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = $i81;

        $z0 = $r18.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack>;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack> = $z0;

     label16:
        $z3 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack>;

        if $z3 == 0 goto label21;

        $i61 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i61;

        i126 = 0;

        goto label18;

     label17:
        $r49 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $r48 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] nextStack>;

        $i63 = $r48[i126];

        $r49[i126] = $i63;

        i126 = i126 + 1;

     label18:
        $i62 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if i126 <= $i62 goto label17;

        $r50 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r50[2] = i4;

        $r53 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r52 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r51 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i64 = $r51[2];

        $i65 = virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i64);

        $r53[1] = $i65;

        $r56 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r55 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r54 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i66 = $r54[1];

        $i67 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int previous(int)>($i66);

        $r56[0] = $i67;

        i127 = 3;

        goto label20;

     label19:
        $r59 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r58 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r57 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i68 = i127 - 1;

        $i69 = $r57[$i68];

        $i70 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i69);

        $r59[i127] = $i70;

        i127 = i127 + 1;

     label20:
        if i127 < 31 goto label19;

        $r61 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $r60 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i71 = virtualinvoke $r60.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int badtoken()>();

        $r61[31] = $i71;

        $r63 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i73 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r62 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i72 = $r62[2];

        $r63[$i73] = $i72;

        $r66 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        $i75 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int nextStackTop>;

        $r65 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r64 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i74 = $r64[2];

        $i76 = virtualinvoke $r65.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i74);

        $r66[$i75] = $i76;

        i125 = i120;

     label21:
        $i17 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i17 == 10 goto label22;

        $i60 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i60 != 6 goto label28;

     label22:
        $r103 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        specialinvoke $r103.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: void <init>()>();

        r98 = $r103;

        $r103.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = 0;

        $r103.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition> = 2;

        goto label27;

     label23:
        $r44 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i46 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r45 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo scopeTrial(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>($r44, $i46, r98);

        r98 = $r45;

        $i47 = $r45.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i47 != 30 goto label24;

        $i128 = i125;

        goto label25;

     label24:
        $i128 = $r45.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

     label25:
        $i48 = $r45.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i59 = $i48 - 1;

        $i49 = $i128 - $i59;

        if $i49 <= 3 goto label26;

        $i53 = $i128 - $i59;

        $i51 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i50 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i52 = $i51 - $i50;

        if $i53 <= $i52 goto label26;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code> = 9;

        $r46 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i54 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        i129 = $r46[$i54];

        $r47 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $c55 = $r47[i129];

        $i142 = (int) $c55;

        $i56 = $i142 + 110;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int symbol> = $i56;

        $i57 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition> = $i57;

        $i58 = $r45.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition> = $i58;

     label26:
        $i130 = $r45.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i131 = $i130 + 1;

        $r45.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition> = $i131;

     label27:
        $i132 = r98.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $i133 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        if $i132 > $i133 goto label28;

        $i45 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i45 != 9 goto label23;

     label28:
        $i134 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i134 != 0 goto label32;

        $r38 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r37 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i37 = $r37[i125];

        $i38 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i37);

        if $i38 != 68 goto label32;

        $r104 = new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo;

        specialinvoke $r104.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: void <init>()>();

        r99 = $r104;

        $r104.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition> = i125;

        $r104.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance> = 0;

        i135 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        goto label31;

     label29:
        $r40 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $r41 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo scopeTrial(int[],int,org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo)>($r40, i135, r99);

        r99 = $r41;

        $i40 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int distance>;

        if $i40 <= 0 goto label30;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code> = 9;

        $r42 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i41 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        i136 = $r42[$i41];

        $r43 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $c42 = $r43[i136];

        $i143 = (int) $c42;

        $i43 = $i143 + 110;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int symbol> = $i43;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition> = i135;

        $i44 = $r41.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo: int bufferPosition>;

        $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition> = $i44;

     label30:
        $i145 = (int) -1;

        i135 = i135 + $i145;

     label31:
        if i135 < 0 goto label32;

        $i39 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i39 == 0 goto label29;

     label32:
        $i137 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i137 != 0 goto label33;

        return $r102;

     label33:
        specialinvoke r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void secondaryDiagnosis(org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo)>($r20);

        $i18 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        tableswitch($i18)
        {
            case 6: goto label35;
            case 7: goto label36;
            case 8: goto label34;
            default: goto label36;
        };

     label34:
        $r22 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i19 = $r22[2];

        $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i19;

        $r24 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r23 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i20 = $r23[2];

        $i21 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i20);

        $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = $i21;

        $r27 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r26 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r25 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i22 = $r25[2];

        $i23 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i22);

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i23);

        goto label37;

     label35:
        $r28 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i24 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i25 = $r28[$i24];

        $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i25;

        $r30 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r29 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i26 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i27 = $r29[$i26];

        $i28 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i27);

        $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = $i28;

        $r33 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r32 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r31 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i29 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i30 = $r31[$i29];

        $i31 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i30);

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i31);

        goto label37;

     label36:
        $i32 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int symbol>;

        $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int symbol> = $i32;

        $r34 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i33 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i34 = $r34[$i33];

        $r102.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate: int location> = $i34;

        $r36 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r35 = r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i35 = $r20.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i36 = $r35[$i35];

        virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i36);

     label37:
        return $r102;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo misplacementRecovery(int[], int, int, org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo, boolean)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo r7;
        int[] $r1, $r2, $r3, r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, $i15;
        boolean z0;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r4 := @parameter0: int[];

        i0 := @parameter1: int;

        i9 := @parameter2: int;

        r7 := @parameter3: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo;

        z0 := @parameter4: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        i10 = $r1[2];

        i11 = 0;

        i12 = i0 - 1;

        goto label5;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i1 = $r2[i12];

        if $i1 >= i10 goto label2;

        i11 = i11 + 1;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        i10 = $r3[i12];

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i2 = $r5[2];

        $i3 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i2);

        $i4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r4, i12, $i3, 3);

        i13 = $i4;

        if $i4 != 30 goto label3;

        i13 = i9;

     label3:
        if i13 <= 3 goto label4;

        $i8 = i13 - i11;

        $i6 = r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i5 = r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i7 = $i6 - $i5;

        if $i8 <= $i7 goto label4;

        r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition> = i12;

        r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = i13;

        r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = i11;

        r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack> = z0;

     label4:
        $i15 = (int) -1;

        i12 = i12 + $i15;

     label5:
        if i12 >= 0 goto label1;

        return r7;
    }

    private org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo secondaryRecovery(int[], int, int, org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo, boolean)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo r2;
        int[] $r1, $r3, $r4, r5, $r6;
        boolean z0;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, i39, i40, i41, i42, $i43, i44, i45, $i46, $i47, $i48, $i50;
        char $c13, $c14;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r7;
        char[] $r8, $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r5 := @parameter0: int[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        r2 := @parameter3: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo;

        z0 := @parameter4: boolean;

        i37 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        i38 = $r1[2];

        i39 = i0;

        goto label15;

     label01:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i2 = $r3[i39];

        if $i2 >= i38 goto label02;

        i37 = i37 + 1;

     label02:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        i38 = $r4[i39];

        i40 = 2;

        goto label13;

     label03:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i7 = $r6[i40];

        $i8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i7);

        $i9 = i40 + 1;

        $i10 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r5, i39, $i8, $i9);

        i41 = $i10;

        if $i10 != 30 goto label04;

        i41 = i3;

     label04:
        $i11 = i41 - i40;

        $i12 = $i11 + 1;

        if $i12 <= 3 goto label06;

        $i26 = i37 + i40;

        i42 = $i26 - 1;

        $i27 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        if i42 < $i27 goto label05;

        $i31 = i41 - i42;

        $i29 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i28 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i30 = $i29 - $i28;

        if $i31 > $i30 goto label05;

        $i32 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i32 != 10 goto label06;

        $i36 = i41 - i42;

        $i34 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i33 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i35 = $i34 - $i33;

        if $i36 != $i35 goto label06;

     label05:
        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code> = 6;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = i41;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition> = i39;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition> = i40;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = i42;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack> = z0;

     label06:
        $i43 = r5[i39];

        i44 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int nasi(int)>($i43);

        goto label11;

     label07:
        $r9 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] nasr>;

        $c14 = $r9[i44];

        $i48 = (int) $c14;

        i15 = $i48 + 110;

        $i16 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int parseCheck(int[],int,int,int)>(r5, i39, i15, i40);

        i45 = $i16;

        if $i16 != 30 goto label08;

        i45 = i3;

     label08:
        $i17 = i45 - i40;

        $i18 = $i17 + 1;

        if $i18 <= 3 goto label10;

        $i19 = i37 + i40;

        i20 = $i19 - 1;

        $i21 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        if i20 < $i21 goto label09;

        $i25 = i45 - i20;

        $i23 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance>;

        $i22 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i24 = $i23 - $i22;

        if $i25 <= $i24 goto label10;

     label09:
        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code> = 10;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int symbol> = i15;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int distance> = i45;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition> = i39;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition> = i40;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions> = i20;

        r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: boolean recoveryOnNextStack> = z0;

     label10:
        i44 = i44 + 1;

     label11:
        if i44 < 0 goto label12;

        $r8 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] nasr>;

        $c13 = $r8[i44];

        if $c13 != 0 goto label07;

     label12:
        i40 = i40 + 1;

     label13:
        $i46 = i3 - 3;

        $i47 = $i46 + 1;

        if i40 > $i47 goto label14;

        $i6 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        $i4 = i37 + i40;

        $i5 = $i4 - 1;

        if $i6 >= $i5 goto label03;

     label14:
        $i50 = (int) -1;

        i39 = i39 + $i50;

     label15:
        if i39 < 0 goto label16;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int numDeletions>;

        if $i1 >= i37 goto label01;

     label16:
        return r2;
    }

    private void secondaryDiagnosis(org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo r0;
        char[] $r7, $r8, $r10, $r17, $r20;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, $i47, $i48, $i49, $i50, $i51;
        char $c7, $c8, $c14, $c33;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        tableswitch($i0)
        {
            case 9: goto label1;
            default: goto label5;
        };

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if $i2 >= $i1 goto label2;

        $r17 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c33 = $r17[110];

        $r18 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i30 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition>;

        $i32 = $r18[$i30];

        $r19 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i31 = $r19[1];

        $i48 = (int) $c33;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>(6, $i48, $i32, $i31);

     label2:
        i46 = 0;

        goto label4;

     label3:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i4 = $r2[i46];

        $i11 = neg $i4;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $i5 = $r3[i46];

        $i10 = $r4[$i5];

        $r5 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i9 = $r5[1];

        $r8 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $r7 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i6 = $r6[i46];

        $c7 = $r7[$i6];

        $i49 = (int) $c7;

        $c8 = $r8[$i49];

        $i50 = (int) $c8;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int,int)>(9, $i11, $i10, $i9, $i50);

        i46 = i46 + 1;

     label4:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        if i46 < $i3 goto label3;

        $r10 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_lhs>;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i12 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i13 = $r9[$i12];

        $c14 = $r10[$i13];

        $i51 = (int) $c14;

        $i15 = $i51 + 110;

        r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int symbol> = $i15;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $i16 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i17 = $r11[$i16];

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i17;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopeIndex>;

        $i18 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i19 = $r12[$i18];

        $i26 = neg $i19;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] scopePosition>;

        $i20 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int scopeStackTop>;

        $i21 = $r13[$i20];

        $i27 = $r14[$i21];

        $r15 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i28 = $r15[1];

        $r16 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i22 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        $i25 = $r16[$i22];

        $i24 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int symbol>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i29 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int getNtermIndex(int,int,int)>($i25, $i24, $i23);

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int,int)>(9, $i26, $i27, $i28, $i29);

        goto label8;

     label5:
        $i40 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        $i34 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int code>;

        if $i34 != 10 goto label6;

        $r23 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] stack>;

        $i42 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition>;

        $i45 = $r23[$i42];

        $i44 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int symbol>;

        $i43 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i47 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int getNtermIndex(int,int,int)>($i45, $i44, $i43);

        goto label7;

     label6:
        $r20 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $i47 = $r20[110];

     label7:
        $r21 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i35 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition>;

        $i39 = $r21[$i35];

        $r22 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i36 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int bufferPosition>;

        $i37 = $i36 - 1;

        $i38 = $r22[$i37];

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int)>($i40, $i47, $i39, $i38);

        $i41 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo: int stackPosition>;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop> = $i41;

     label8:
        return;
    }

    private int parseCheck(int[], int, int, int)
    {
        byte[] $r17, $r55, $r62, $r76;
        byte $b20, $b23, $b40, $b46, $b53, $b68;
        long $l18, $l19, $l44, $l45;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r1;
        int[] r0, $r2, $r4, $r5, $r7, $r12, $r50, $r52, $r59;
        long[] $r13, $r56;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i22, $i24, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i41, $i42, $i43, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i55, $i58, $i59, i60, i61, i62, i63, $i65, $i66, $i67, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i81, $i82, $i83, $i84, $i85, $i86, $i87;
        java.io.PrintStream $r10, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r48, $r49, $r60, $r61, $r63, $r64, $r65, $r66, $r67, $r68, $r73, $r74, $r75;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r14, $r57;
        java.lang.String $r27, $r46, $r72;
        char[] $r11, $r24, $r25, $r44, $r58, $r69, $r70;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String[] $r26, $r45, $r71;
        char $c21, $c26, $c27, $c34, $c56, $c57, c64;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r3, $r6, $r8, $r9, $r51, $r53, $r54;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        i60 = r0[i0];

        if i1 <= 110 goto label09;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = i0;

        $z4 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z4 == 0 goto label01;

        $r75 = <java.lang.System: java.io.PrintStream out>;

        $i58 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        virtualinvoke $r75.<java.io.PrintStream: void println(int)>($i58);

     label01:
        i61 = i0;

        i62 = i3;

        $r51 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r50 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i36 = $r50[i3];

        i63 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i36);

        $r54 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r53 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r52 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i37 = $r52[i3];

        $i38 = virtualinvoke $r53.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i37);

        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i38);

        $i59 = i1 - 110;

        $i39 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>(i60, $i59);

        i60 = $i39;

        if $i39 > 700 goto label11;

     label02:
        $i42 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r55 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b40 = $r55[i60];

        $i73 = (int) $b40;

        $i41 = $i73 - 1;

        $i43 = $i42 - $i41;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i43;

        $z5 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z5 == 0 goto label03;

        $r60 = <java.lang.System: java.io.PrintStream out>;

        $i52 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        virtualinvoke $r60.<java.io.PrintStream: void print(int)>($i52);

        $r61 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r61.<java.io.PrintStream: void print(java.lang.String)>(" (");

        $r63 = <java.lang.System: java.io.PrintStream out>;

        $r62 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b53 = $r62[i60];

        $i74 = (int) $b53;

        $i54 = $i74 - 1;

        $i55 = neg $i54;

        virtualinvoke $r63.<java.io.PrintStream: void print(int)>($i55);

        $r64 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r64.<java.io.PrintStream: void print(java.lang.String)>(") [max:");

        $r65 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r65.<java.io.PrintStream: void print(int)>(i0);

        $r66 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r66.<java.io.PrintStream: void print(java.lang.String)>("]\tprocess_non_terminal\t");

        $r67 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r67.<java.io.PrintStream: void print(int)>(i60);

        $r68 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r68.<java.io.PrintStream: void print(java.lang.String)>("\t");

        $r73 = <java.lang.System: java.io.PrintStream out>;

        $r71 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] name>;

        $r70 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $r69 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c56 = $r69[i60];

        $i75 = (int) $c56;

        $c57 = $r70[$i75];

        $i76 = (int) $c57;

        $r72 = $r71[$i76];

        virtualinvoke $r73.<java.io.PrintStream: void print(java.lang.String)>($r72);

        $r74 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r74.<java.io.PrintStream: void println()>();

     label03:
        $r56 = <org.eclipse.jdt.internal.compiler.parser.Parser: long[] rules_compliance>;

        $l45 = $r56[i60];

        $r57 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l44 = $r57.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b46 = $l45 cmp $l44;

        $i77 = (int) $b46;

        if $i77 <= 0 goto label04;

        return 0;

     label04:
        $r58 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        c64 = $r58[i60];

        $i47 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i47 <= i0 goto label05;

        $r59 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i51 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i65 = $r59[$i51];

        goto label06;

     label05:
        $i48 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i65 = r0[$i48];

     label06:
        $i78 = (int) c64;

        $i49 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i65, $i78);

        i60 = $i49;

        if $i49 <= 700 goto label02;

        $i50 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if i0 >= $i50 goto label07;

        $i66 = i0;

        goto label08;

     label07:
        $i66 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

     label08:
        i61 = $i66;

        goto label11;

     label09:
        $i2 = i0 - 1;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i2;

        $z0 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z0 == 0 goto label10;

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $i35 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        virtualinvoke $r49.<java.io.PrintStream: void println(int)>($i35);

     label10:
        i61 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        i62 = i3 - 1;

        i63 = i1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i4 = $r2[i3];

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i4);

     label11:
        $z6 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z6 == 0 goto label12;

        $r38 = <java.lang.System: java.io.PrintStream out>;

        $i32 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i33 = $i32 + 1;

        virtualinvoke $r38.<java.io.PrintStream: void print(int)>($i33);

        $r39 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r39.<java.io.PrintStream: void print(java.lang.String)>(" (+1) [max:");

        $r40 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r40.<java.io.PrintStream: void print(int)>(i61);

        $r41 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r41.<java.io.PrintStream: void print(java.lang.String)>("]\tprocess_terminal    \t");

        $r42 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r42.<java.io.PrintStream: void print(int)>(i63);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r43.<java.io.PrintStream: void print(java.lang.String)>("\t");

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r45 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] name>;

        $r44 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $c34 = $r44[i63];

        $i79 = (int) $c34;

        $r46 = $r45[$i79];

        virtualinvoke $r47.<java.io.PrintStream: void print(java.lang.String)>($r46);

        $r48 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r48.<java.io.PrintStream: void println()>();

     label12:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i6 = $i5 + 1;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i6;

        $i7 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stackLength>;

        if $i6 < $i7 goto label13;

        return i62;

     label13:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i8 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r4[$i8] = i60;

        $i9 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int tAction(int,int)>(i60, i63);

        i60 = $i9;

        if $i9 > 700 goto label14;

        $i29 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i30 = $i29 - 1;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i30;

        $z3 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z3 == 0 goto label20;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $i31 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        virtualinvoke $r33.<java.io.PrintStream: void print(int)>($i31);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r34.<java.io.PrintStream: void print(java.lang.String)>(" (-1) [max:");

        $r35 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r35.<java.io.PrintStream: void print(int)>(i61);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void print(java.lang.String)>("]\treduce");

        $r37 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r37.<java.io.PrintStream: void println()>();

        goto label20;

     label14:
        if $i9 < 12827 goto label15;

        if $i9 <= 12828 goto label18;

     label15:
        if i62 != 30 goto label16;

        return i62;

     label16:
        i62 = i62 + 1;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i10 = $r5[i62];

        i63 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>($i10);

        $r9 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] buffer>;

        $i11 = $r7[i62];

        $i12 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int next(int)>($i11);

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: void reset(int)>($i12);

        if $i9 <= 12828 goto label17;

        $i81 = (int) -12828;

        i60 = $i9 + $i81;

        $z2 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z2 == 0 goto label20;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $i28 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        virtualinvoke $r30.<java.io.PrintStream: void print(int)>($i28);

        $r31 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r31.<java.io.PrintStream: void print(java.lang.String)>("\tshift reduce");

        $r32 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r32.<java.io.PrintStream: void println()>();

        goto label20;

     label17:
        $z1 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z1 == 0 goto label11;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("\tshift");

        goto label11;

     label18:
        if $i9 != 12827 goto label19;

        return 30;

     label19:
        return i62;

     label20:
        $i67 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $r76 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b68 = $r76[i60];

        $i82 = (int) $b68;

        $i69 = $i82 - 1;

        $i70 = $i67 - $i69;

        r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop> = $i70;

        $z7 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG_PARSECHECK>;

        if $z7 == 0 goto label21;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $i22 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        virtualinvoke $r15.<java.io.PrintStream: void print(int)>($i22);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void print(java.lang.String)>(" (");

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = <org.eclipse.jdt.internal.compiler.parser.Parser: byte[] rhs>;

        $b23 = $r17[i60];

        $i83 = (int) $b23;

        $i24 = $i83 - 1;

        $i25 = neg $i24;

        virtualinvoke $r18.<java.io.PrintStream: void print(int)>($i25);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void print(java.lang.String)>(") [max:");

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void print(int)>(i61);

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void print(java.lang.String)>("]\tprocess_non_terminal\t");

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void print(int)>(i60);

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void print(java.lang.String)>("\t");

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r26 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] name>;

        $r25 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] non_terminal_index>;

        $r24 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c26 = $r24[i60];

        $i84 = (int) $c26;

        $c27 = $r25[$i84];

        $i85 = (int) $c27;

        $r27 = $r26[$i85];

        virtualinvoke $r28.<java.io.PrintStream: void print(java.lang.String)>($r27);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r29.<java.io.PrintStream: void println()>();

     label21:
        if i60 > 700 goto label22;

        $r13 = <org.eclipse.jdt.internal.compiler.parser.Parser: long[] rules_compliance>;

        $l19 = $r13[i60];

        $r14 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l18 = $r14.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b20 = $l19 cmp $l18;

        $i86 = (int) $b20;

        if $i86 <= 0 goto label22;

        return 0;

     label22:
        $r11 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] lhs>;

        $c21 = $r11[i60];

        $i13 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if $i13 <= i61 goto label23;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] tempStack>;

        $i17 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i71 = $r12[$i17];

        goto label24;

     label23:
        $i14 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        $i71 = r0[$i14];

     label24:
        $i87 = (int) $c21;

        $i15 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.Parser: int ntAction(int,int)>($i71, $i87);

        i60 = $i15;

        if $i15 <= 700 goto label20;

        $i16 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

        if i61 >= $i16 goto label25;

        $i72 = i61;

        goto label26;

     label25:
        $i72 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int tempStackTop>;

     label26:
        i61 = $i72;

        goto label11;
    }

    private void reportError(int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int i0, i1, i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportError(int,int,int,int,int)>(i0, i1, i2, i3, 0);

        return;
    }

    private void reportError(int, int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int i0, i1, i2, i3, i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i4 := @parameter4: int;

        if i0 <= i1 goto label1;

        $i5 = i1;

        goto label2;

     label1:
        $i5 = i0;

     label2:
        if $i5 >= i1 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportSecondaryError(int,int,int,int,int)>(i2, i3, $i5, i1, i4);

        goto label4;

     label3:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: void reportPrimaryError(int,int,int,int)>(i2, i3, i1, i4);

     label4:
        return;
    }

    private void reportPrimaryError(int, int, int, int)
    {
        java.lang.StringBuffer $r85;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        int[] $r19, $r20, $r21, $r22, $r23, $r24, $r31, $r33, $r41, $r49, $r54, $r62, $r67, $r72, $r78, r83;
        int i0, i1, $i2, $i3, $i4, $i5, i7, $i8, $i10, i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, i39, i40, i41, $i42, i44, $i45, $i47, $i49, $i51, $i53, $i55, $i57, $i59, $i61, $i63, $i64, $i65, $i66, $i68, $i70, $i72, $i74;
        java.lang.String $r16, $r26, $r28, $r30, $r80, r81;
        char[] $r6, $r8, $r13, $r14, $r17, $r18, $r34, $r35, r82, $r84;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r10, $r25, $r27, $r37, $r40, $r45, $r48, $r53, $r58, $r61, $r66, $r71, $r76;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String[] $r5, $r15, $r29, $r79;
        char $c6, $c9, $c11, $c12, $c24, $c43;
        org.eclipse.jdt.internal.compiler.parser.RecoveryScanner $r9, $r12, $r32, $r36, $r38, $r39, $r42, $r43, $r44, $r46, $r47, $r50, $r51, $r52, $r55, $r56, $r57, $r59, $r60, $r63, $r64, $r65, $r68, $r69, $r70, $r73, $r74, $r75, $r77;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r1, $r2, $r3, $r4, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i21 := @parameter3: int;

        if i0 < 0 goto label01;

        $r79 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] readableName>;

        r81 = $r79[i0];

        goto label02;

     label01:
        r81 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label02:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>(i1);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int end(int)>(i1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>(i1);

        $r5 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] name>;

        $r6 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] terminal_index>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int kind(int)>(i1);

        $c6 = $r6[$i5];

        $i45 = (int) $c6;

        $r80 = $r5[$i45];

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: char[] name(int)>(i1);

        r82 = $r8;

        if $i4 != 52 goto label03;

        $i35 = lengthof $r8;

        $i36 = $i35 - 1;

        r82 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: char[] displayEscapeCharacters(char[],int,int)>($r8, 1, $i36);

     label03:
        $i47 = (int) -1;

        i37 = $i47;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r9 == null goto label04;

        if i0 < 0 goto label04;

        $r78 = <org.eclipse.jdt.internal.compiler.parser.Parser: int[] reverse_index>;

        i37 = $r78[i0];

     label04:
        tableswitch(i7)
        {
            case 2: goto label05;
            case 3: goto label08;
            case 4: goto label13;
            case 5: goto label18;
            case 6: goto label11;
            case 7: goto label37;
            case 8: goto label40;
            case 9: goto label21;
            case 10: goto label42;
            case 11: goto label36;
            default: goto label42;
        };

     label05:
        $r65 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r65 == null goto label07;

        $i49 = (int) -1;

        if i37 <= $i49 goto label06;

        $r69 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $i51 = (int) -1;

        virtualinvoke $r69.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void insertToken(int,int,int)>(i37, $i51, $i2);

        goto label07;

     label06:
        $i32 = neg i37;

        $r67 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i32);

        if $r67 == null goto label07;

        $r68 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $i53 = (int) -1;

        virtualinvoke $r68.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void insertTokens(int[],int,int)>($r67, $i53, $i2);

     label07:
        $z7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z7 == 0 goto label47;

        $r66 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r66.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorInsertBeforeToken(int,int,int,char[],java.lang.String,java.lang.String)>($i2, $i3, $i4, r82, $r80, r81);

        goto label47;

     label08:
        $r60 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r60 == null goto label10;

        $i55 = (int) -1;

        if i37 <= $i55 goto label09;

        $r64 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $i57 = (int) -1;

        virtualinvoke $r64.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void insertToken(int,int,int)>(i37, $i57, $i3);

        goto label10;

     label09:
        $i31 = neg i37;

        $r62 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i31);

        if $r62 == null goto label10;

        $r63 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        $i59 = (int) -1;

        virtualinvoke $r63.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void insertTokens(int[],int,int)>($r62, $i59, $i3);

     label10:
        $z8 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z8 == 0 goto label47;

        $r61 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r61.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorInsertAfterToken(int,int,int,char[],java.lang.String,java.lang.String)>($i2, $i3, $i4, r82, $r80, r81);

        goto label47;

     label11:
        $r44 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r44 == null goto label12;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void removeTokens(int,int)>($i2, $i3);

     label12:
        $z4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z4 == 0 goto label47;

        $r45 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorDeleteToken(int,int,int,char[],java.lang.String)>($i2, $i3, $i4, r82, $r80);

        goto label47;

     label13:
        $i29 = virtualinvoke r81.<java.lang.String: int length()>();

        if $i29 != 0 goto label15;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r57 == null goto label14;

        $r59 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r59.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void removeTokens(int,int)>($i2, $i3);

     label14:
        $z5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z5 == 0 goto label47;

        $r58 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorReplaceToken(int,int,int,char[],java.lang.String,java.lang.String)>($i2, $i3, $i4, r82, $r80, r81);

        goto label47;

     label15:
        $r52 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r52 == null goto label17;

        $i61 = (int) -1;

        if i37 <= $i61 goto label16;

        $r56 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r56.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int,int,int)>(i37, $i2, $i3);

        goto label17;

     label16:
        $i30 = neg i37;

        $r54 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i30);

        if $r54 == null goto label17;

        $r55 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int[],int,int)>($r54, $i2, $i3);

     label17:
        $z9 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z9 == 0 goto label47;

        $r53 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r53.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorInvalidToken(int,int,int,char[],java.lang.String,java.lang.String)>($i2, $i3, $i4, r82, $r80, r81);

        goto label47;

     label18:
        $r47 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r47 == null goto label20;

        $i63 = (int) -1;

        if i37 <= $i63 goto label19;

        $r51 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int,int,int)>(i37, $i2, $i3);

        goto label20;

     label19:
        $i28 = neg i37;

        $r49 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i28);

        if $r49 == null goto label20;

        $r50 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int[],int,int)>($r49, $i2, $i3);

     label20:
        $z10 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z10 == 0 goto label47;

        $r48 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorReplaceToken(int,int,int,char[],java.lang.String,java.lang.String)>($i2, $i3, $i4, r82, $r80, r81);

        goto label47;

     label21:
        $r85 = new java.lang.StringBuffer;

        specialinvoke $r85.<java.lang.StringBuffer: void <init>()>();

        r83 = (int[]) null;

        i38 = 0;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r12 == null goto label22;

        $r34 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $i25 = lengthof $r34;

        $r35 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_suffix>;

        $i23 = neg i0;

        $c24 = $r35[$i23];

        $i64 = (int) $c24;

        $i26 = $i25 - $i64;

        r83 = newarray (int)[$i26];

     label22:
        $r13 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_suffix>;

        $i8 = neg i0;

        i39 = $r13[$i8];

        goto label32;

     label23:
        $r15 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] readableName>;

        $r14 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c9 = $r14[i39];

        $i65 = (int) $c9;

        $r16 = $r15[$i65];

        virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $i10 = i39 + 1;

        $c11 = $r17[$i10];

        if $c11 == 0 goto label24;

        virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label24:
        if r83 == null goto label31;

        $r19 = <org.eclipse.jdt.internal.compiler.parser.Parser: int[] reverse_index>;

        $r18 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c12 = $r18[i39];

        $i66 = (int) $c12;

        i13 = $r19[$i66];

        $i68 = (int) -1;

        if i13 <= $i68 goto label26;

        i40 = lengthof r83;

        if i38 != i40 goto label25;

        $r24 = r83;

        $i20 = i40 * 2;

        $r23 = newarray (int)[$i20];

        r83 = $r23;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r24, 0, $r23, 0, i40);

     label25:
        $i19 = i38;

        i38 = i38 + 1;

        r83[$i19] = i13;

        goto label31;

     label26:
        $i14 = neg i13;

        $r20 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i14);

        if $r20 == null goto label30;

        i41 = 0;

        goto label29;

     label27:
        i15 = lengthof r83;

        if i38 != i15 goto label28;

        $r22 = r83;

        $i18 = i15 * 2;

        $r21 = newarray (int)[$i18];

        r83 = $r21;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, $r21, 0, i15);

     label28:
        $i16 = i38;

        i38 = i38 + 1;

        $i17 = $r20[i41];

        r83[$i16] = $i17;

        i41 = i41 + 1;

     label29:
        $i42 = lengthof $r20;

        if i41 < $i42 goto label27;

        goto label31;

     label30:
        i38 = 0;

        r83 = (int[]) null;

     label31:
        i39 = i39 + 1;

     label32:
        $r84 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c43 = $r84[i39];

        if $c43 != 0 goto label23;

        if i38 <= 0 goto label34;

        $r31 = newarray (int)[i38];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r83, 0, $r31, 0, i38);

        $i70 = (int) -1;

        i44 = $i70;

        if i21 == 0 goto label33;

        $r33 = <org.eclipse.jdt.internal.compiler.parser.Parser: int[] reverse_index>;

        $i22 = $r33[i21];

        i44 = neg $i22;

     label33:
        $r32 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void insertTokens(int[],int,int)>($r31, i44, $i3);

     label34:
        if i21 == 0 goto label35;

        $z2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z2 == 0 goto label47;

        $r27 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r28 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.String toString()>();

        $r29 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] readableName>;

        $r30 = $r29[i21];

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorInsertToComplete(int,int,java.lang.String,java.lang.String)>($i2, $i3, $r28, $r30);

        goto label47;

     label35:
        $z1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z1 == 0 goto label47;

        $r25 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r26 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorInsertToCompleteScope(int,int,java.lang.String)>($i2, $i3, $r26);

        goto label47;

     label36:
        $z0 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z0 == 0 goto label47;

        $r10 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorUnexpectedEnd(int,int)>($i2, $i3);

        goto label47;

     label37:
        $r39 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r39 == null goto label39;

        $i72 = (int) -1;

        if i37 <= $i72 goto label38;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int,int,int)>(i37, $i2, $i3);

        goto label39;

     label38:
        $i27 = neg i37;

        $r41 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i27);

        if $r41 == null goto label39;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int[],int,int)>($r41, $i2, $i3);

     label39:
        $z11 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z11 == 0 goto label47;

        $r40 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r40.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorMergeTokens(int,int,java.lang.String)>($i2, $i3, r81);

        goto label47;

     label40:
        $r36 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r36 == null goto label41;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void removeTokens(int,int)>($i2, $i3);

     label41:
        $z3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z3 == 0 goto label47;

        $r37 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorMisplacedConstruct(int,int)>($i2, $i3);

        goto label47;

     label42:
        $i33 = virtualinvoke r81.<java.lang.String: int length()>();

        if $i33 != 0 goto label44;

        $r75 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r75 == null goto label43;

        $r77 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r77.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void removeTokens(int,int)>($i2, $i3);

     label43:
        $z6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z6 == 0 goto label47;

        $r76 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r76.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorNoSuggestion(int,int,int,char[],java.lang.String)>($i2, $i3, $i4, r82, $r80);

        goto label47;

     label44:
        $r70 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r70 == null goto label46;

        $i74 = (int) -1;

        if i37 <= $i74 goto label45;

        $r74 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r74.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int,int,int)>(i37, $i2, $i3);

        goto label46;

     label45:
        $i34 = neg i37;

        $r72 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i34);

        if $r72 == null goto label46;

        $r73 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r73.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int[],int,int)>($r72, $i2, $i3);

     label46:
        $z12 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z12 == 0 goto label47;

        $r71 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r71.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorReplaceToken(int,int,int,char[],java.lang.String,java.lang.String)>($i2, $i3, $i4, r82, $r80, r81);

     label47:
        return;
    }

    private void reportSecondaryError(int, int, int, int, int)
    {
        java.lang.StringBuffer $r59;
        java.lang.String $r10, $r20, $r22, $r24, r54;
        char[] $r7, $r8, $r11, $r12, $r28, $r29, $r58;
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r19, $r21, $r31, $r34, $r39, $r42, $r47;
        int[] $r2, $r3, $r13, $r14, $r15, $r16, $r17, $r18, $r25, $r27, $r35, $r43, $r49, r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String[] $r9, $r23, $r53;
        int i0, i1, $i2, $i3, i4, i5, $i6, $i7, $i9, i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, $i32, $i33, i34, i35, i36, i37, i38, $i39, i41, $i43, $i45, $i47, $i48, $i49, $i50, $i52, $i54, $i56, $i58;
        char $c8, $c10, $c11, $c23, $c40;
        org.eclipse.jdt.internal.compiler.parser.RecoveryScanner $r6, $r26, $r30, $r32, $r33, $r36, $r37, $r38, $r40, $r41, $r44, $r45, $r46, $r48, $r56;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r1, $r4, $r50, $r51, $r52, $r55;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 := @parameter3: int;

        i20 := @parameter4: int;

        if i0 < 0 goto label01;

        $r53 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] readableName>;

        r54 = $r53[i0];

        goto label02;

     label01:
        r54 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label02:
        $i43 = (int) -1;

        i30 = $i43;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: boolean isInsideStream(int)>(i1);

        if $z0 == 0 goto label04;

        if i1 != 0 goto label03;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i29 = i1 + 1;

        i30 = virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>($i29);

        goto label10;

     label03:
        $r51 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        i30 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>(i1);

        goto label10;

     label04:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int errorToken>;

        if i1 != $i2 goto label05;

        i30 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int errorTokenStart>;

        goto label09;

     label05:
        i31 = 0;

        goto label08;

     label06:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStack>;

        $i3 = $r2[i31];

        if $i3 != i1 goto label07;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] locationStartStack>;

        i30 = $r3[i31];

     label07:
        i31 = i31 + 1;

     label08:
        $i32 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int stateStackTop>;

        if i31 <= $i32 goto label06;

     label09:
        $i45 = (int) -1;

        if i30 != $i45 goto label10;

        $r50 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        i30 = virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>(i4);

     label10:
        $r55 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i33 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int end(int)>(i4);

        $i47 = (int) -1;

        i34 = $i47;

        $r56 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r56 == null goto label11;

        if i0 < 0 goto label11;

        $r49 = <org.eclipse.jdt.internal.compiler.parser.Parser: int[] reverse_index>;

        i34 = $r49[i0];

     label11:
        tableswitch(i5)
        {
            case 6: goto label32;
            case 7: goto label29;
            case 8: goto label12;
            case 9: goto label14;
            default: goto label34;
        };

     label12:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r30 == null goto label13;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void removeTokens(int,int)>(i30, $i33);

     label13:
        $z3 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z3 == 0 goto label39;

        $r31 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorMisplacedConstruct(int,int)>(i30, $i33);

        goto label39;

     label14:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $i6 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: int start(int)>(i4);

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        r57 = (int[]) null;

        i35 = 0;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r6 == null goto label15;

        $r28 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $i24 = lengthof $r28;

        $r29 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_suffix>;

        $i22 = neg i0;

        $c23 = $r29[$i22];

        $i48 = (int) $c23;

        $i25 = $i24 - $i48;

        r57 = newarray (int)[$i25];

     label15:
        $r7 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_suffix>;

        $i7 = neg i0;

        i36 = $r7[$i7];

        goto label25;

     label16:
        $r9 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] readableName>;

        $r8 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c8 = $r8[i36];

        $i49 = (int) $c8;

        $r10 = $r9[$i49];

        virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $i9 = i36 + 1;

        $c10 = $r11[$i9];

        if $c10 == 0 goto label17;

        virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label17:
        if r57 == null goto label24;

        $r13 = <org.eclipse.jdt.internal.compiler.parser.Parser: int[] reverse_index>;

        $r12 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c11 = $r12[i36];

        $i50 = (int) $c11;

        i12 = $r13[$i50];

        $i52 = (int) -1;

        if i12 <= $i52 goto label19;

        i37 = lengthof r57;

        if i35 != i37 goto label18;

        $r18 = r57;

        $i19 = i37 * 2;

        $r17 = newarray (int)[$i19];

        r57 = $r17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, $r17, 0, i37);

     label18:
        $i18 = i35;

        i35 = i35 + 1;

        r57[$i18] = i12;

        goto label24;

     label19:
        $i13 = neg i12;

        $r14 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i13);

        if $r14 == null goto label23;

        i38 = 0;

        goto label22;

     label20:
        i14 = lengthof r57;

        if i35 != i14 goto label21;

        $r16 = r57;

        $i17 = i14 * 2;

        $r15 = newarray (int)[$i17];

        r57 = $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r15, 0, i14);

     label21:
        $i15 = i35;

        i35 = i35 + 1;

        $i16 = $r14[i38];

        r57[$i15] = $i16;

        i38 = i38 + 1;

     label22:
        $i39 = lengthof $r14;

        if i38 < $i39 goto label20;

        goto label24;

     label23:
        i35 = 0;

        r57 = (int[]) null;

     label24:
        i36 = i36 + 1;

     label25:
        $r58 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] scope_rhs>;

        $c40 = $r58[i36];

        if $c40 != 0 goto label16;

        if i35 <= 0 goto label27;

        $r25 = newarray (int)[i35];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r57, 0, $r25, 0, i35);

        $i54 = (int) -1;

        i41 = $i54;

        if i20 == 0 goto label26;

        $r27 = <org.eclipse.jdt.internal.compiler.parser.Parser: int[] reverse_index>;

        $i21 = $r27[i20];

        i41 = neg $i21;

     label26:
        $r26 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void insertTokens(int[],int,int)>($r25, i41, $i33);

     label27:
        if i20 == 0 goto label28;

        $z2 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z2 == 0 goto label39;

        $r21 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r22 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = <org.eclipse.jdt.internal.compiler.parser.Parser: java.lang.String[] readableName>;

        $r24 = $r23[i20];

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorInsertToComplete(int,int,java.lang.String,java.lang.String)>($i6, $i33, $r22, $r24);

        goto label39;

     label28:
        $z1 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z1 == 0 goto label39;

        $r19 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r20 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorInsertToCompletePhrase(int,int,java.lang.String)>($i6, $i33, $r20);

        goto label39;

     label29:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r33 == null goto label31;

        $i56 = (int) -1;

        if i34 <= $i56 goto label30;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int,int,int)>(i34, i30, $i33);

        goto label31;

     label30:
        $i26 = neg i34;

        $r35 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i26);

        if $r35 == null goto label31;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int[],int,int)>($r35, i30, $i33);

     label31:
        $z6 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z6 == 0 goto label39;

        $r34 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r34.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorMergeTokens(int,int,java.lang.String)>(i30, $i33, r54);

        goto label39;

     label32:
        $r38 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r38 == null goto label33;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r40.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void removeTokens(int,int)>(i30, $i33);

     label33:
        $z4 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z4 == 0 goto label39;

        $r39 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorDeleteTokens(int,int)>(i30, $i33);

        goto label39;

     label34:
        $i27 = virtualinvoke r54.<java.lang.String: int length()>();

        if $i27 != 0 goto label36;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r46 == null goto label35;

        $r48 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void removeTokens(int,int)>(i30, $i33);

     label35:
        $z5 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z5 == 0 goto label39;

        $r47 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorNoSuggestionForTokens(int,int)>(i30, $i33);

        goto label39;

     label36:
        $r41 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        if $r41 == null goto label38;

        $i58 = (int) -1;

        if i34 <= $i58 goto label37;

        $r45 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int,int,int)>(i34, i30, $i33);

        goto label38;

     label37:
        $i28 = neg i34;

        $r43 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int[] getNTermTemplate(int)>($i28);

        if $r43 == null goto label38;

        $r44 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner recoveryScanner>;

        virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: void replaceTokens(int[],int,int)>($r43, i30, $i33);

     label38:
        $z7 = r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean reportProblem>;

        if $z7 == 0 goto label39;

        $r42 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parseErrorReplaceTokens(int,int,java.lang.String)>(i30, $i33, r54);

     label39:
        return;
    }

    private int[] getNTermTemplate(int)
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r5;
        int[] $r4, r6;
        int i0, $i2, $i4, i6, i7, $i8, $i9, $i10;
        char c1, $c3, $c5;
        char[] $r0, $r1, $r2, $r3;

        r5 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        i0 := @parameter0: int;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] recovery_templates_index>;

        c1 = $r0[i0];

        $i8 = (int) c1;

        if $i8 <= 0 goto label3;

        $r1 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] recovery_templates>;

        $i2 = lengthof $r1;

        r6 = newarray (int)[$i2];

        i6 = 0;

        $i9 = (int) c1;

        i7 = $i9;

        goto label2;

     label1:
        $i4 = i6;

        i6 = i6 + 1;

        $r3 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] recovery_templates>;

        $c5 = $r3[i7];

        $i10 = (int) $c5;

        r6[$i4] = $i10;

        i7 = i7 + 1;

     label2:
        $r2 = <org.eclipse.jdt.internal.compiler.parser.Parser: char[] recovery_templates>;

        $c3 = $r2[i7];

        if $c3 != 0 goto label1;

        $r4 = newarray (int)[i6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, $r4, 0, i6);

        return $r4;

     label3:
        return null;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser r1;
        java.lang.StringBuffer $r0;
        java.lang.String $r3, $r4;
        org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream $r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream lexStream>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int NIL> = -1;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int MIN_DISTANCE> = 3;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int MAX_DISTANCE> = 30;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int BUFF_SIZE> = 32;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int BUFF_UBOUND> = 31;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int EOF_CODE> = 11;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int SECONDARY_CODE> = 10;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int SCOPE_CODE> = 9;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int MISPLACED_CODE> = 8;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int MERGE_CODE> = 7;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int DELETION_CODE> = 6;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int SUBSTITUTION_CODE> = 5;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int INVALID_CODE> = 4;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int INSERTION_CODE> = 3;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int BEFORE_CODE> = 2;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: int STACK_INCREMENT> = 256;

        <org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser: boolean DEBUG> = 0;

        return;
    }
}
