public class com.hp.hpl.jena.tdb.index.bplustree.BPlusTree extends java.lang.Object implements java.lang.Iterable, com.hp.hpl.jena.tdb.index.RangeIndex
{
    private static org.slf4j.Logger log;
    private int rootIdx;
    private com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager;
    private com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr;
    private com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams bpTreeParams;

    public static com.hp.hpl.jena.tdb.index.bplustree.BPlusTree create(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams, com.hp.hpl.jena.tdb.base.block.BlockMgr, com.hp.hpl.jena.tdb.base.block.BlockMgr)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr r1, r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r3;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        r2 := @parameter2: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree attach(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r0, r1, r2);

        specialinvoke $r3.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void createIfAbsent()>();

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.index.bplustree.BPlusTree attach(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams, com.hp.hpl.jena.tdb.base.block.BlockMgr, com.hp.hpl.jena.tdb.base.block.BlockMgr)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr r2, r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r0;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        r3 := @parameter2: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        $r0 = new com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void <init>(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r1, r2, r3);

        return $r0;
    }

    public static com.hp.hpl.jena.tdb.index.bplustree.BPlusTree makeMem(int, int, int, int)
    {
        int i0, i1, i2, i3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r0 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree makeMem(java.lang.String,int,int,int,int)>(null, i0, i1, i2, i3);

        return $r0;
    }

    public static com.hp.hpl.jena.tdb.index.bplustree.BPlusTree makeMem(java.lang.String, int, int, int, int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r6, $r11;
        int i0, i1, i2, i3, $i4, i5, i6;
        java.lang.String r2, $r5, $r10;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r12;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7, $r8, $r9;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r13;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r0 = new com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: void <init>(int,int,int)>(i0, i1, i2);

        if i3 <= 0 goto label1;

        i5 = 2 * i3;

        $r13 = virtualinvoke $r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()>();

        i6 = staticinvoke <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPage: int calcBlockSize(com.hp.hpl.jena.tdb.base.record.RecordFactory,int)>($r13, i5);

        goto label2;

     label1:
        i6 = virtualinvoke $r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int getCalcBlockSize()>();

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(nodes)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i4 = virtualinvoke $r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int getCalcBlockSize()>();

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createMem(java.lang.String,int)>($r5, $i4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(records)");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createMem(java.lang.String,int)>($r10, i6);

        $r12 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree create(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r0, $r6, $r11);

        return $r12;
    }

    public static com.hp.hpl.jena.tdb.index.bplustree.BPlusTree addTracking(com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r7;
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r2, $r4, $r5, $r6;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0, $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r3;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr getRecordsMgr()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrTracker: com.hp.hpl.jena.tdb.base.block.BlockMgr track(com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r2);

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrTracker: com.hp.hpl.jena.tdb.base.block.BlockMgr track(com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r4);

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams getParams()>();

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree attach(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r7, $r5, $r6);

        return $r8;
    }

    private void <init>(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams, com.hp.hpl.jena.tdb.base.block.BlockMgr, com.hp.hpl.jena.tdb.base.block.BlockMgr)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr $r4;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams r1;
        com.hp.hpl.jena.tdb.base.block.BlockMgr r3, r6;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r5;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r7;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams;

        r3 := @parameter1: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        r6 := @parameter2: com.hp.hpl.jena.tdb.base.block.BlockMgr;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: int rootIdx> = 0;

        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams bpTreeParams> = r1;

        $r2 = new com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: void <init>(com.hp.hpl.jena.tdb.index.bplustree.BPlusTree,com.hp.hpl.jena.tdb.base.block.BlockMgr)>(r0, r3);

        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager> = $r2;

        $r4 = new com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr;

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()>();

        specialinvoke $r4.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr: void <init>(com.hp.hpl.jena.tdb.base.record.RecordFactory,com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r5, r6);

        $r7 = new com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr;

        specialinvoke $r7.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: void <init>(com.hp.hpl.jena.tdb.index.bplustree.BPlusTree,com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr)>(r0, $r4);

        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr> = $r7;

        return;
    }

    private void createIfAbsent()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r4, $r6;
        int $i0, $i1, $i2, $i4;
        java.lang.InternalError $r10;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1, $r2, $r3, $r7;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r5;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: boolean valid(int)>(0);

        if $z0 != 0 goto label3;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startUpdateBlkMgr()>();

        $r2 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $i0 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: int createEmptyBPT()>();

        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: int rootIdx> = $i0;

        $i1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: int rootIdx>;

        if $i1 == 0 goto label1;

        $r10 = new java.lang.InternalError;

        specialinvoke $r10.<java.lang.InternalError: void <init>()>();

        throw $r10;

     label1:
        $z1 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: boolean CheckingNode>;

        if $z1 == 0 goto label2;

        $r7 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $i2 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: int rootIdx>;

        $i4 = (int) -2;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRead(int,int)>($i2, $i4);

        virtualinvoke $r8.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void checkNodeDeep()>();

        virtualinvoke $r8.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void release()>();

     label2:
        $r3 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        interfaceinvoke $r4.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void sync()>();

        $r5 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        interfaceinvoke $r6.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void sync()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishUpdateBlkMgr()>();

     label3:
        return;
    }

    private com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r2;
        int $i0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $i0 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: int rootIdx>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot(int)>($i0);

        return $r2;
    }

    private void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r1;

        r1 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void release()>();

        return;
    }

    private void setRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        return;
    }

    public com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams getParams()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams bpTreeParams>;

        return $r1;
    }

    public com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr getNodeManager()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        return $r1;
    }

    public com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr getRecordsMgr()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        return $r1;
    }

    public com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams bpTreeParams>;

        $r2 = $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: com.hp.hpl.jena.tdb.base.record.RecordFactory recordFactory>;

        return $r2;
    }

    public com.hp.hpl.jena.tdb.base.record.Record find(com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.base.record.Record r2, $r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r2 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startReadBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.record.Record search(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.base.record.Record)>($r1, r2);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishReadBlkMgr()>();

        return $r3;
    }

    public boolean contains(com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r1, $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.base.record.Record find(com.hp.hpl.jena.tdb.base.record.Record)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.hp.hpl.jena.tdb.base.record.Record minKey()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.base.record.Record $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startReadBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.record.Record minRecord()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishReadBlkMgr()>();

        return $r2;
    }

    public com.hp.hpl.jena.tdb.base.record.Record maxKey()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.base.record.Record $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startReadBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.record.Record maxRecord()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishReadBlkMgr()>();

        return $r2;
    }

    public boolean add(com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r1, $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.base.record.Record addAndReturnOld(com.hp.hpl.jena.tdb.base.record.Record)>(r1);

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.hp.hpl.jena.tdb.base.record.Record addAndReturnOld(com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.base.record.Record r2, $r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r2 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startUpdateBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.record.Record insert(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.base.record.Record)>($r1, r2);

        $z0 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: boolean CheckingTree>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void checkNodeDeep()>();

     label1:
        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishUpdateBlkMgr()>();

        return $r3;
    }

    public boolean delete(com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r1, $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.base.record.Record deleteAndReturnOld(com.hp.hpl.jena.tdb.base.record.Record)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.hp.hpl.jena.tdb.base.record.Record deleteAndReturnOld(com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.base.record.Record r2, $r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r2 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startUpdateBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.record.Record delete(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.base.record.Record)>($r1, r2);

        $z0 = <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: boolean CheckingTree>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void checkNodeDeep()>();

     label1:
        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishUpdateBlkMgr()>();

        return $r3;
    }

    public java.util.Iterator iterator()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        java.util.Iterator $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startReadBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: java.util.Iterator iterator(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishReadBlkMgr()>();

        return $r2;
    }

    public java.util.Iterator iterator(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        java.util.Iterator $r4;
        com.hp.hpl.jena.tdb.base.record.Record r2, r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r2 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r3 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startReadBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: java.util.Iterator iterator(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>($r1, r2, r3);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishReadBlkMgr()>();

        return $r4;
    }

    private static java.util.Iterator iterator(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode, com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr $r4;
        java.util.Iterator $r6;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode r0;
        com.hp.hpl.jena.tdb.base.record.Record r1, r5;
        int $i0;
        org.apache.jena.atlas.iterator.Iter $r7;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r3;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        r5 := @parameter2: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: int recordsPageId(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 >= 0 goto label1;

        $r7 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter nullIter()>();

        return $r7;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree getBPlusTree()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr getRecordsMgr()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr getRecordBufferPageMgr()>();

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.base.recordbuffer.RecordRangeIterator: java.util.Iterator iterator(int,com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageMgr)>($i0, r1, r5, $r4);

        return $r6;
    }

    private static java.util.Iterator iterator(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode r0;
        java.util.Iterator $r1;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: java.util.Iterator iterator(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode,com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, null, null);

        return $r1;
    }

    private void startReadBlkMgr()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: void startRead()>();

        $r2 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: void startRead()>();

        return;
    }

    private void finishReadBlkMgr()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: void finishRead()>();

        $r2 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: void finishRead()>();

        return;
    }

    private void startUpdateBlkMgr()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: void startUpdate()>();

        $r2 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: void startUpdate()>();

        return;
    }

    private void finishUpdateBlkMgr()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: void finishUpdate()>();

        $r2 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: void finishUpdate()>();

        return;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void startReadBlkMgr()>();

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: boolean hasAnyKeys()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void releaseRoot(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void finishReadBlkMgr()>();

        return $z1;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuilder $r1, $r2, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r3;

        r3 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RangeIndex(");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String classShortName(java.lang.Class)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").clear");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r0;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r2, $r4, $r6, $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1, $r7;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r3, $r5;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        if $r2 == null goto label1;

        $r7 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        interfaceinvoke $r8.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void sync()>();

     label1:
        $r3 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        if $r4 == null goto label2;

        $r5 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        interfaceinvoke $r6.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void sync()>();

     label2:
        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r2, $r4, $r6, $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr $r1, $r7;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr $r3, $r5;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        if $r2 == null goto label1;

        $r7 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr nodeManager>;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        interfaceinvoke $r8.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void close()>();

     label1:
        $r3 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        if $r4 == null goto label2;

        $r5 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr recordsMgr>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeRecordsMgr: com.hp.hpl.jena.tdb.base.block.BlockMgr getBlockMgr()>();

        interfaceinvoke $r6.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void close()>();

     label2:
        return;
    }

    public long size()
    {
        long $l0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        java.util.Iterator $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: java.util.Iterator iterator()>();

        $l0 = staticinvoke <org.apache.jena.atlas.iterator.Iter: long count(java.util.Iterator)>($r1);

        return $l0;
    }

    public void check()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void checkNodeDeep()>();

        return;
    }

    public void dump()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void dump()>();

        return;
    }

    public void dump(org.apache.jena.atlas.io.IndentedWriter)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r0;
        org.apache.jena.atlas.io.IndentedWriter r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        r2 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode getRoot()>();

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: void dump(org.apache.jena.atlas.io.IndentedWriter)>(r2);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/index/bplustree/BPlusTree;");

        <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: org.slf4j.Logger log> = $r0;

        return;
    }
}
