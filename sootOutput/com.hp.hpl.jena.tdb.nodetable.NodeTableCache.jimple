public class com.hp.hpl.jena.tdb.nodetable.NodeTableCache extends java.lang.Object implements com.hp.hpl.jena.tdb.nodetable.NodeTable
{
    private org.apache.jena.atlas.lib.Cache node2id_Cache;
    private org.apache.jena.atlas.lib.Cache id2node_Cache;
    private org.apache.jena.atlas.lib.CacheSet notPresent;
    private com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable;
    private java.lang.Object lock;

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.nodetable.NodeTable, int, int, int)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        int i0, i1, i2;
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache $r0;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 > 0 goto label1;

        if i1 > 0 goto label1;

        return r1;

     label1:
        $r0 = new com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable,int,int,int)>(r1, i0, i1, i2);

        return $r0;
    }

    private void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable, int, int, int)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        org.apache.jena.atlas.lib.CacheSet $r3;
        org.apache.jena.atlas.lib.Cache $r4, $r5;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r2;
        int i0, i1, i2;
        java.lang.Object $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r2 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache> = null;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache> = null;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent> = null;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: java.lang.Object lock> = $r1;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable> = r2;

        if i0 <= 0 goto label1;

        $r5 = staticinvoke <org.apache.jena.atlas.lib.CacheFactory: org.apache.jena.atlas.lib.Cache createCache(int)>(i0);

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache> = $r5;

     label1:
        if i1 <= 0 goto label2;

        $r4 = staticinvoke <org.apache.jena.atlas.lib.CacheFactory: org.apache.jena.atlas.lib.Cache createCache(int)>(i1);

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache> = $r4;

     label2:
        if i2 <= 0 goto label3;

        $r3 = staticinvoke <org.apache.jena.atlas.lib.CacheFactory: org.apache.jena.atlas.lib.CacheSet createCacheSet(int)>(i2);

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent> = $r3;

     label3:
        return;
    }

    public com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.tdb.store.NodeId r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.graph.Node _retrieveNodeByNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.store.NodeId _idForNode(com.hp.hpl.jena.graph.Node,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.store.NodeId _idForNode(com.hp.hpl.jena.graph.Node,boolean)>(r1, 1);

        return $r2;
    }

    private com.hp.hpl.jena.graph.Node _retrieveNodeByNodeId(com.hp.hpl.jena.tdb.store.NodeId)
    {
        java.io.PrintStream $r8;
        java.lang.Throwable $r12;
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r1;
        com.hp.hpl.jena.graph.Node $r3, $r6;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r4, $r5;
        com.hp.hpl.jena.tdb.store.NodeId r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.String $r11;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isDoesNotExist(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isAny(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z1 == 0 goto label2;

        return null;

     label2:
        $r2 = r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: java.lang.Object lock>;

        entermonitor $r2;

     label3:
        $r3 = specialinvoke r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.graph.Node cacheLookup(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $r3 == null goto label5;

        exitmonitor $r2;

     label4:
        return $r3;

     label5:
        $r4 = r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        if $r4 != null goto label6;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label6:
        $r5 = r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        specialinvoke r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: void cacheUpdate(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.tdb.store.NodeId)>($r6, r0);

        exitmonitor $r2;

     label7:
        return $r6;

     label8:
        $r12 := @caughtexception;

        exitmonitor $r2;

     label9:
        throw $r12;

        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    private com.hp.hpl.jena.tdb.store.NodeId _idForNode(com.hp.hpl.jena.graph.Node, boolean)
    {
        java.lang.Throwable $r8;
        com.hp.hpl.jena.graph.Node r0, $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r5, $r6;
        com.hp.hpl.jena.tdb.store.NodeId $r4, $r7, r9;
        java.lang.Object $r3;
        boolean z0;

        r2 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        z0 := @parameter1: boolean;

        $r1 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        if r0 != $r1 goto label1;

        $r7 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        return $r7;

     label1:
        $r3 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: java.lang.Object lock>;

        entermonitor $r3;

     label2:
        $r4 = specialinvoke r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.store.NodeId cacheLookup(com.hp.hpl.jena.graph.Node)>(r0);

        if $r4 == null goto label4;

        exitmonitor $r3;

     label3:
        return $r4;

     label4:
        if z0 == 0 goto label5;

        $r6 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        r9 = interfaceinvoke $r6.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)>(r0);

        goto label6;

     label5:
        $r5 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        r9 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>(r0);

     label6:
        specialinvoke r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: void cacheUpdate(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.tdb.store.NodeId)>(r0, r9);

        exitmonitor $r3;

     label7:
        return r9;

     label8:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    private com.hp.hpl.jena.graph.Node cacheLookup(com.hp.hpl.jena.tdb.store.NodeId)
    {
        org.apache.jena.atlas.lib.Cache $r1, $r3;
        com.hp.hpl.jena.tdb.store.NodeId r2;
        java.lang.Object $r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        com.hp.hpl.jena.graph.Node $r5;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r2 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        $r4 = interfaceinvoke $r3.<org.apache.jena.atlas.lib.Cache: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (com.hp.hpl.jena.graph.Node) $r4;

        return $r5;
    }

    private com.hp.hpl.jena.tdb.store.NodeId cacheLookup(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        org.apache.jena.atlas.lib.CacheSet $r1, $r7;
        com.hp.hpl.jena.graph.Node r3;
        org.apache.jena.atlas.lib.Cache $r2, $r4;
        com.hp.hpl.jena.tdb.store.NodeId $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        if $r1 == null goto label1;

        $r7 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        $z0 = interfaceinvoke $r7.<org.apache.jena.atlas.lib.CacheSet: boolean contains(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r4 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        $r5 = interfaceinvoke $r4.<org.apache.jena.atlas.lib.Cache: java.lang.Object get(java.lang.Object)>(r3);

        $r6 = (com.hp.hpl.jena.tdb.store.NodeId) $r5;

        return $r6;
    }

    private void cacheUpdate(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r2;
        org.apache.jena.atlas.lib.CacheSet $r5, $r7, $r8, $r11, $r12;
        com.hp.hpl.jena.graph.Node r6;
        org.apache.jena.atlas.lib.Cache $r3, $r4, $r9, $r10;
        com.hp.hpl.jena.tdb.store.NodeId r0, $r1;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        r6 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isDoesNotExist(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z0 == 0 goto label2;

        $r11 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        if $r11 == null goto label1;

        $r12 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        interfaceinvoke $r12.<org.apache.jena.atlas.lib.CacheSet: void add(java.lang.Object)>(r6);

     label1:
        return;

     label2:
        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        if r0 != $r1 goto label3;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r2, "Attempt to cache NodeIdAny - ignored");

        return;

     label3:
        $r3 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        if $r3 == null goto label4;

        $r10 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        interfaceinvoke $r10.<org.apache.jena.atlas.lib.Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r0);

     label4:
        $r4 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        if $r4 == null goto label5;

        $r9 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        interfaceinvoke $r9.<org.apache.jena.atlas.lib.Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r6);

     label5:
        $r5 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        if $r5 == null goto label6;

        $r7 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        $z1 = interfaceinvoke $r7.<org.apache.jena.atlas.lib.CacheSet: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label6;

        $r8 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        interfaceinvoke $r8.<org.apache.jena.atlas.lib.CacheSet: void remove(java.lang.Object)>(r6);

     label6:
        return;
    }

    public com.hp.hpl.jena.tdb.store.NodeId allocOffset()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId allocOffset()>();

        return $r2;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r7;
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        org.apache.jena.atlas.lib.Cache $r2, $r3, $r5, $r6;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r4;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        if $r2 == null goto label3;

        $r6 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        $z1 = interfaceinvoke $r6.<org.apache.jena.atlas.lib.Cache: boolean isEmpty()>();

        exitmonitor $r1;

     label2:
        return $z1;

     label3:
        $r3 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        if $r3 == null goto label4;

        $r5 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        interfaceinvoke $r5.<org.apache.jena.atlas.lib.Cache: boolean isEmpty()>();

     label4:
        $r4 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        $z0 = interfaceinvoke $r4.<com.hp.hpl.jena.tdb.nodetable.NodeTable: boolean isEmpty()>();

        exitmonitor $r1;

     label5:
        return $z0;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public synchronized void close()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1, $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTable: void close()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache> = null;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache> = null;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent> = null;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable> = null;

        return;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: void sync()>();

        return;
    }

    public java.util.Iterator all()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        java.util.Iterator $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: java.util.Iterator all()>();

        return $r2;
    }

    private void testForConsistency()
    {
        com.hp.hpl.jena.graph.Node r12, r46;
        org.apache.jena.atlas.lib.CacheSet $r14, $r32;
        org.apache.jena.atlas.lib.Cache $r1, $r5, $r10, $r13, $r29, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r3, $r7;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r34, $r35, $r36, $r37, $r40, $r41, $r42, $r43, $r44;
        com.hp.hpl.jena.tdb.store.NodeId r47, r48;
        java.lang.String $r20, $r27, $r38, $r45;
        com.hp.hpl.jena.tdb.TDBException $r15, $r21, $r33, $r39;
        java.util.Iterator $r2, $r4, $r6, $r8;
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r0;
        java.lang.Object $r9, $r11, $r28, $r30;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        $r2 = interfaceinvoke $r1.<org.apache.jena.atlas.lib.Cache: java.util.Iterator keys()>();

        $r3 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.List toList(java.util.Iterator)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r28 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r46 = (com.hp.hpl.jena.graph.Node) $r28;

        $r29 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        $r30 = interfaceinvoke $r29.<org.apache.jena.atlas.lib.Cache: java.lang.Object get(java.lang.Object)>(r46);

        r47 = (com.hp.hpl.jena.tdb.store.NodeId) $r30;

        $r31 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        $z4 = interfaceinvoke $r31.<org.apache.jena.atlas.lib.Cache: boolean containsKey(java.lang.Object)>(r47);

        if $z4 != 0 goto label2;

        $r39 = new com.hp.hpl.jena.tdb.TDBException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent: ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r45);

        throw $r39;

     label2:
        $r32 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        $z5 = interfaceinvoke $r32.<org.apache.jena.atlas.lib.CacheSet: boolean contains(java.lang.Object)>(r46);

        if $z5 == 0 goto label3;

        $r33 = new com.hp.hpl.jena.tdb.TDBException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in notPresent cache (1)");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r38);

        throw $r33;

     label3:
        goto label1;

     label4:
        $r5 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        $r6 = interfaceinvoke $r5.<org.apache.jena.atlas.lib.Cache: java.util.Iterator keys()>();

        $r7 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.List toList(java.util.Iterator)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r48 = (com.hp.hpl.jena.tdb.store.NodeId) $r9;

        $r10 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache id2node_Cache>;

        $r11 = interfaceinvoke $r10.<org.apache.jena.atlas.lib.Cache: java.lang.Object get(java.lang.Object)>(r48);

        r12 = (com.hp.hpl.jena.graph.Node) $r11;

        $r13 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.Cache node2id_Cache>;

        $z2 = interfaceinvoke $r13.<org.apache.jena.atlas.lib.Cache: boolean containsKey(java.lang.Object)>(r12);

        if $z2 != 0 goto label6;

        $r21 = new com.hp.hpl.jena.tdb.TDBException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label6:
        $r14 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: org.apache.jena.atlas.lib.CacheSet notPresent>;

        $z3 = interfaceinvoke $r14.<org.apache.jena.atlas.lib.CacheSet: boolean contains(java.lang.Object)>(r12);

        if $z3 == 0 goto label7;

        $r15 = new com.hp.hpl.jena.tdb.TDBException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in notPresent cache (2)");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label7:
        goto label5;

     label8:
        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableCache r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r2 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableCache;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cache(");

        $r3 = r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable baseTable>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
