public class org.bouncycastle.openssl.PEMReader extends java.io.BufferedReader
{
    private final org.bouncycastle.openssl.PasswordFinder pFinder;
    private final java.lang.String provider;

    public void <init>(java.io.Reader)
    {
        java.io.Reader r1;
        org.bouncycastle.openssl.PEMReader r0;

        r0 := @this: org.bouncycastle.openssl.PEMReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.bouncycastle.openssl.PEMReader: void <init>(java.io.Reader,org.bouncycastle.openssl.PasswordFinder,java.lang.String)>(r1, null, "BC");

        return;
    }

    public void <init>(java.io.Reader, org.bouncycastle.openssl.PasswordFinder)
    {
        java.io.Reader r1;
        org.bouncycastle.openssl.PasswordFinder r2;
        org.bouncycastle.openssl.PEMReader r0;

        r0 := @this: org.bouncycastle.openssl.PEMReader;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: org.bouncycastle.openssl.PasswordFinder;

        specialinvoke r0.<org.bouncycastle.openssl.PEMReader: void <init>(java.io.Reader,org.bouncycastle.openssl.PasswordFinder,java.lang.String)>(r1, r2, "BC");

        return;
    }

    public void <init>(java.io.Reader, org.bouncycastle.openssl.PasswordFinder, java.lang.String)
    {
        org.bouncycastle.openssl.PasswordFinder r2;
        org.bouncycastle.openssl.PEMReader r0;
        java.io.Reader r1;
        java.lang.String r3;

        r0 := @this: org.bouncycastle.openssl.PEMReader;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: org.bouncycastle.openssl.PasswordFinder;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

        r0.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.openssl.PasswordFinder pFinder> = r2;

        r0.<org.bouncycastle.openssl.PEMReader: java.lang.String provider> = r3;

        return;
    }

    public java.lang.Object readObject() throws java.io.IOException
    {
        java.security.KeyPair $r2, $r4, $r5;
        java.security.cert.X509CRL $r7;
        java.lang.Exception $r15, $r23, $r31;
        org.bouncycastle.asn1.cms.ContentInfo $r9;
        java.lang.StringBuilder $r18, $r20, $r26, $r28, $r34, $r36, $r39, $r41, $r43;
        java.lang.String $r1, $r19, $r21, $r27, $r29, $r35, $r37;
        java.io.IOException $r22, $r30, $r38;
        java.security.cert.X509Certificate $r8, $r10;
        org.bouncycastle.jce.spec.ECNamedCurveParameterSpec $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34, $i36, $i38;
        org.bouncycastle.jce.PKCS10CertificationRequest $r11, $r12;
        org.bouncycastle.openssl.PEMReader r0;
        org.bouncycastle.openssl.PEMException $r40, $r42, $r44;
        java.security.PublicKey $r13, $r14;
        org.bouncycastle.x509.X509AttributeCertificate $r6;

        r0 := @this: org.bouncycastle.openssl.PEMReader;

     label01:
        $r1 = virtualinvoke r0.<org.bouncycastle.openssl.PEMReader: java.lang.String readLine()>();

        if $r1 == null goto label26;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN PUBLIC KEY");

        $i14 = (int) -1;

        if $i0 == $i14 goto label02;

        $r14 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.PublicKey readPublicKey(java.lang.String)>("-----END PUBLIC KEY");

        return $r14;

     label02:
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN RSA PUBLIC KEY");

        $i16 = (int) -1;

        if $i1 == $i16 goto label03;

        $r13 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.PublicKey readRSAPublicKey(java.lang.String)>("-----END RSA PUBLIC KEY");

        return $r13;

     label03:
        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN CERTIFICATE REQUEST");

        $i18 = (int) -1;

        if $i2 == $i18 goto label04;

        $r12 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.jce.PKCS10CertificationRequest readCertificateRequest(java.lang.String)>("-----END CERTIFICATE REQUEST");

        return $r12;

     label04:
        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN NEW CERTIFICATE REQUEST");

        $i20 = (int) -1;

        if $i3 == $i20 goto label05;

        $r11 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.jce.PKCS10CertificationRequest readCertificateRequest(java.lang.String)>("-----END NEW CERTIFICATE REQUEST");

        return $r11;

     label05:
        $i4 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN CERTIFICATE");

        $i22 = (int) -1;

        if $i4 == $i22 goto label06;

        $r10 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.cert.X509Certificate readCertificate(java.lang.String)>("-----END CERTIFICATE");

        return $r10;

     label06:
        $i5 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN PKCS7");

        $i24 = (int) -1;

        if $i5 == $i24 goto label07;

        $r9 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.asn1.cms.ContentInfo readPKCS7(java.lang.String)>("-----END PKCS7");

        return $r9;

     label07:
        $i6 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN X509 CERTIFICATE");

        $i26 = (int) -1;

        if $i6 == $i26 goto label08;

        $r8 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.cert.X509Certificate readCertificate(java.lang.String)>("-----END X509 CERTIFICATE");

        return $r8;

     label08:
        $i7 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN X509 CRL");

        $i28 = (int) -1;

        if $i7 == $i28 goto label09;

        $r7 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.cert.X509CRL readCRL(java.lang.String)>("-----END X509 CRL");

        return $r7;

     label09:
        $i8 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN ATTRIBUTE CERTIFICATE");

        $i30 = (int) -1;

        if $i8 == $i30 goto label10;

        $r6 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.x509.X509AttributeCertificate readAttributeCertificate(java.lang.String)>("-----END ATTRIBUTE CERTIFICATE");

        return $r6;

     label10:
        $i9 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN RSA PRIVATE KEY");

        $i32 = (int) -1;

        if $i9 == $i32 goto label15;

     label11:
        $r5 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.KeyPair readKeyPair(java.lang.String,java.lang.String)>("RSA", "-----END RSA PRIVATE KEY");

     label12:
        return $r5;

     label13:
        $r38 := @caughtexception;

        throw $r38;

     label14:
        $r31 := @caughtexception;

        $r40 = new org.bouncycastle.openssl.PEMException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem creating RSA private key: ");

        $r35 = virtualinvoke $r31.<java.lang.Exception: java.lang.String toString()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r37, $r31);

        throw $r40;

     label15:
        $i10 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN DSA PRIVATE KEY");

        $i34 = (int) -1;

        if $i10 == $i34 goto label20;

     label16:
        $r4 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.KeyPair readKeyPair(java.lang.String,java.lang.String)>("DSA", "-----END DSA PRIVATE KEY");

     label17:
        return $r4;

     label18:
        $r30 := @caughtexception;

        throw $r30;

     label19:
        $r23 := @caughtexception;

        $r42 = new org.bouncycastle.openssl.PEMException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem creating DSA private key: ");

        $r27 = virtualinvoke $r23.<java.lang.Exception: java.lang.String toString()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r29, $r23);

        throw $r42;

     label20:
        $i11 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN EC PARAMETERS-----");

        $i36 = (int) -1;

        if $i11 == $i36 goto label21;

        $r3 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.jce.spec.ECNamedCurveParameterSpec readECParameters(java.lang.String)>("-----END EC PARAMETERS-----");

        return $r3;

     label21:
        $i12 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-----BEGIN EC PRIVATE KEY-----");

        $i38 = (int) -1;

        if $i12 == $i38 goto label01;

     label22:
        $r2 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: java.security.KeyPair readKeyPair(java.lang.String,java.lang.String)>("ECDSA", "-----END EC PRIVATE KEY-----");

     label23:
        return $r2;

     label24:
        $r22 := @caughtexception;

        throw $r22;

     label25:
        $r15 := @caughtexception;

        $r44 = new org.bouncycastle.openssl.PEMException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem creating ECDSA private key: ");

        $r19 = virtualinvoke $r15.<java.lang.Exception: java.lang.String toString()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r21, $r15);

        throw $r44;

     label26:
        return null;

        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Exception from label11 to label12 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Exception from label16 to label17 with label19;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Exception from label22 to label23 with label25;
    }

    private byte[] readBytes(java.lang.String) throws java.io.IOException
    {
        byte[] $r4;
        org.bouncycastle.openssl.PEMReader r1;
        java.io.IOException $r14;
        java.lang.StringBuffer $r12;
        int $i0, $i2;
        java.lang.StringBuilder $r8, $r9, $r13;
        java.lang.String $r2, $r3, r7, $r10, $r11;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r7 := @parameter0: java.lang.String;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

     label1:
        $r2 = virtualinvoke r1.<org.bouncycastle.openssl.PEMReader: java.lang.String readLine()>();

        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(r7);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        goto label3;

     label2:
        $r11 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label1;

     label3:
        if $r2 != null goto label4;

        $r14 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r14;

     label4:
        $r3 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = staticinvoke <org.bouncycastle.util.encoders.Base64: byte[] decode(java.lang.String)>($r3);

        return $r4;
    }

    private java.security.PublicKey readRSAPublicKey(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        org.bouncycastle.asn1.ASN1Sequence r5;
        org.bouncycastle.asn1.DERObject $r4;
        org.bouncycastle.asn1.ASN1InputStream $r0;
        java.security.spec.RSAPublicKeySpec $r7;
        java.math.BigInteger $r8, $r9;
        java.lang.String r2, $r10, $r17, $r19, $r24, $r26;
        org.bouncycastle.openssl.PEMReader r1;
        org.bouncycastle.openssl.PEMException $r14;
        java.security.PublicKey $r12;
        java.io.IOException $r21;
        java.lang.Exception $r13;
        java.security.KeyFactory $r11;
        java.lang.StringBuilder $r15, $r16, $r18, $r22, $r23, $r25;
        org.bouncycastle.asn1.x509.RSAPublicKeyStructure $r6;
        java.security.NoSuchProviderException $r20;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.bouncycastle.asn1.ASN1InputStream;

        $r3 = specialinvoke r1.<org.bouncycastle.openssl.PEMReader: byte[] readBytes(java.lang.String)>(r2);

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

        $r4 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        r5 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

        $r6 = new org.bouncycastle.asn1.x509.RSAPublicKeyStructure;

        specialinvoke $r6.<org.bouncycastle.asn1.x509.RSAPublicKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>(r5);

        $r7 = new java.security.spec.RSAPublicKeySpec;

        $r8 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.RSAPublicKeyStructure: java.math.BigInteger getModulus()>();

        $r9 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.RSAPublicKeyStructure: java.math.BigInteger getPublicExponent()>();

        specialinvoke $r7.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r9);

     label1:
        $r10 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>("RSA", $r10);

        $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7);

     label2:
        return $r12;

     label3:
        $r20 := @caughtexception;

        $r21 = new java.io.IOException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t find provider ");

        $r24 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r21;

     label4:
        $r13 := @caughtexception;

        $r14 = new org.bouncycastle.openssl.PEMException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem extracting key: ");

        $r17 = virtualinvoke $r13.<java.lang.Exception: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r19, $r13);

        throw $r14;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private java.security.PublicKey readPublicKey(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        java.security.spec.InvalidKeySpecException $r16;
        java.lang.String[] $r4;
        int $i0, i1;
        java.lang.String r2, $r5, $r6, $r13, $r15;
        org.bouncycastle.openssl.PEMReader r1;
        java.security.PublicKey $r8;
        java.lang.RuntimeException $r10;
        java.security.spec.X509EncodedKeySpec $r0;
        java.security.KeyFactory $r7;
        java.security.NoSuchAlgorithmException $r17;
        java.lang.StringBuilder $r11, $r12, $r14;
        java.security.NoSuchProviderException $r9;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.security.spec.X509EncodedKeySpec;

        $r3 = specialinvoke r1.<org.bouncycastle.openssl.PEMReader: byte[] readBytes(java.lang.String)>(r2);

        specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3);

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "DSA";

        $r4[1] = "RSA";

        i1 = 0;

     label1:
        $i0 = lengthof $r4;

        if i1 >= $i0 goto label8;

     label2:
        $r6 = $r4[i1];

        $r5 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r6, $r5);

        $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0);

     label3:
        return $r8;

     label4:
        $r17 := @caughtexception;

        goto label7;

     label5:
        $r16 := @caughtexception;

        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t find provider ");

        $r13 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return null;

        catch java.security.NoSuchAlgorithmException from label2 to label3 with label4;
        catch java.security.spec.InvalidKeySpecException from label2 to label3 with label5;
        catch java.security.NoSuchProviderException from label2 to label3 with label6;
    }

    private java.security.cert.X509Certificate readCertificate(java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509Certificate $r7;
        byte[] $r3;
        java.security.cert.CertificateFactory $r5;
        org.bouncycastle.openssl.PEMReader r1;
        org.bouncycastle.openssl.PEMException $r9;
        java.lang.Exception $r8;
        java.security.cert.Certificate $r6;
        java.io.ByteArrayInputStream $r0;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String r2, $r4, $r12, $r14;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayInputStream;

        $r3 = specialinvoke r1.<org.bouncycastle.openssl.PEMReader: byte[] readBytes(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

     label1:
        $r4 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", $r4);

        $r6 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r0);

        $r7 = (java.security.cert.X509Certificate) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.bouncycastle.openssl.PEMException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing cert: ");

        $r12 = virtualinvoke $r8.<java.lang.Exception: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r14, $r8);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.security.cert.X509CRL readCRL(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        java.security.cert.CertificateFactory $r5;
        org.bouncycastle.openssl.PEMReader r1;
        java.security.cert.X509CRL $r7;
        org.bouncycastle.openssl.PEMException $r9;
        java.lang.Exception $r8;
        java.io.ByteArrayInputStream $r0;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String r2, $r4, $r12, $r14;
        java.security.cert.CRL $r6;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayInputStream;

        $r3 = specialinvoke r1.<org.bouncycastle.openssl.PEMReader: byte[] readBytes(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

     label1:
        $r4 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", $r4);

        $r6 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>($r0);

        $r7 = (java.security.cert.X509CRL) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.bouncycastle.openssl.PEMException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing cert: ");

        $r12 = virtualinvoke $r8.<java.lang.Exception: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r14, $r8);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private org.bouncycastle.jce.PKCS10CertificationRequest readCertificateRequest(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        org.bouncycastle.jce.PKCS10CertificationRequest $r0;
        org.bouncycastle.openssl.PEMReader r1;
        org.bouncycastle.openssl.PEMException $r5;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String r2, $r8, $r10;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.bouncycastle.jce.PKCS10CertificationRequest;

        $r3 = specialinvoke r1.<org.bouncycastle.openssl.PEMReader: byte[] readBytes(java.lang.String)>(r2);

        specialinvoke $r0.<org.bouncycastle.jce.PKCS10CertificationRequest: void <init>(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.bouncycastle.openssl.PEMException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing certrequest: ");

        $r8 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r10, $r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private org.bouncycastle.x509.X509AttributeCertificate readAttributeCertificate(java.lang.String) throws java.io.IOException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate $r0;
        byte[] $r3;
        org.bouncycastle.openssl.PEMReader r1;
        java.lang.String r2;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.bouncycastle.x509.X509V2AttributeCertificate;

        $r3 = specialinvoke r1.<org.bouncycastle.openssl.PEMReader: byte[] readBytes(java.lang.String)>(r2);

        specialinvoke $r0.<org.bouncycastle.x509.X509V2AttributeCertificate: void <init>(byte[])>($r3);

        return $r0;
    }

    private org.bouncycastle.asn1.cms.ContentInfo readPKCS7(java.lang.String) throws java.io.IOException
    {
        byte[] $r5;
        java.lang.Exception $r18;
        org.bouncycastle.asn1.cms.ContentInfo $r7;
        java.lang.StringBuilder $r11, $r12, $r21, $r23, $r28, $r31;
        org.bouncycastle.asn1.DERObject $r6;
        java.io.ByteArrayOutputStream $r26;
        org.bouncycastle.asn1.ASN1InputStream $r30;
        java.lang.StringBuffer $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        java.lang.String $r3, r10, $r13, $r15, $r16, $r17, $r22, $r24;
        org.bouncycastle.openssl.PEMReader r2;
        org.bouncycastle.openssl.PEMException $r32;
        java.io.IOException $r27, $r29;

        r2 := @this: org.bouncycastle.openssl.PEMReader;

        r10 := @parameter0: java.lang.String;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = new java.io.ByteArrayOutputStream;

        specialinvoke $r26.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r3 = virtualinvoke r2.<org.bouncycastle.openssl.PEMReader: java.lang.String readLine()>();

        if $r3 == null goto label3;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(r10);

        $i9 = (int) -1;

        if $i1 == $i9 goto label2;

        goto label3;

     label2:
        $r15 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $i2 = virtualinvoke $r25.<java.lang.StringBuffer: int length()>();

        $i3 = $i2 / 4;

        $i4 = $i3 * 4;

        $r17 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String substring(int,int)>(0, $i4);

        staticinvoke <org.bouncycastle.util.encoders.Base64: int decode(java.lang.String,java.io.OutputStream)>($r17, $r26);

        $i5 = virtualinvoke $r25.<java.lang.StringBuffer: int length()>();

        $i6 = $i5 / 4;

        $i7 = $i6 * 4;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i7);

        goto label1;

     label3:
        $i0 = virtualinvoke $r25.<java.lang.StringBuffer: int length()>();

        if $i0 == 0 goto label4;

        $r27 = new java.io.IOException;

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>("base64 data appears to be truncated");

        throw $r27;

     label4:
        if $r3 != null goto label5;

        $r29 = new java.io.IOException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r29;

     label5:
        $r30 = new org.bouncycastle.asn1.ASN1InputStream;

        $r5 = virtualinvoke $r26.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r30.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r30.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r7 = staticinvoke <org.bouncycastle.asn1.cms.ContentInfo: org.bouncycastle.asn1.cms.ContentInfo getInstance(java.lang.Object)>($r6);

     label6:
        return $r7;

     label7:
        $r18 := @caughtexception;

        $r32 = new org.bouncycastle.openssl.PEMException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing PKCS7 object: ");

        $r22 = virtualinvoke $r18.<java.lang.Exception: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<org.bouncycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r24, $r18);

        throw $r32;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    private java.security.KeyPair readKeyPair(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        byte[] $r3, $r29, $r31, $r33, $r63, r72;
        java.security.KeyPair $r104;
        org.bouncycastle.asn1.ASN1Sequence $r65;
        java.security.spec.KeySpec r78, r79;
        java.math.BigInteger $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r46, $r47, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56;
        org.bouncycastle.asn1.sec.ECPrivateKeyStructure $r96;
        java.security.spec.X509EncodedKeySpec $r101;
        java.security.PrivateKey $r89;
        org.bouncycastle.openssl.PasswordException $r91, $r92;
        org.bouncycastle.asn1.DERObject $r26;
        java.security.spec.RSAPrivateCrtKeySpec $r95;
        org.bouncycastle.openssl.PasswordFinder $r57, $r58;
        java.lang.StringBuffer $r90;
        java.util.StringTokenizer $r93;
        java.lang.String $r2, r5, $r61, $r62, $r64, r68, $r69, r70, $r71, $r85;
        char[] $r59;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r97;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r99;
        org.bouncycastle.asn1.DERBitString $r28;
        java.security.spec.DSAPrivateKeySpec $r102;
        java.security.spec.RSAPublicKeySpec $r94;
        org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r98;
        org.bouncycastle.asn1.ASN1Object $r4, $r24;
        boolean $z0, $z1, $z2, $z3, z4;
        org.bouncycastle.asn1.DERObjectIdentifier $r23;
        java.security.KeyFactory $r86;
        org.bouncycastle.asn1.DEREncodable $r6, $r7, $r8, $r9, $r10, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r43;
        int $i0, $i2;
        java.security.spec.PKCS8EncodedKeySpec $r100;
        org.bouncycastle.openssl.PEMReader r1;
        java.security.PublicKey $r88;
        org.bouncycastle.asn1.DERInteger r40, r42, r44, r73, r74, r75, r76, r77, r80, r81, r82, r83, r84;
        java.security.spec.DSAPublicKeySpec $r103;

        r1 := @this: org.bouncycastle.openssl.PEMReader;

        r5 := @parameter0: java.lang.String;

        r68 := @parameter1: java.lang.String;

        z4 = 0;

        r70 = null;

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

     label01:
        $r71 = virtualinvoke r1.<org.bouncycastle.openssl.PEMReader: java.lang.String readLine()>();

        if $r71 == null goto label05;

        $z2 = virtualinvoke $r71.<java.lang.String: boolean startsWith(java.lang.String)>("Proc-Type: 4,ENCRYPTED");

        if $z2 == 0 goto label02;

        z4 = 1;

        goto label01;

     label02:
        $z3 = virtualinvoke $r71.<java.lang.String: boolean startsWith(java.lang.String)>("DEK-Info:");

        if $z3 == 0 goto label03;

        r70 = virtualinvoke $r71.<java.lang.String: java.lang.String substring(int)>(10);

        goto label01;

     label03:
        $i0 = virtualinvoke $r71.<java.lang.String: int indexOf(java.lang.String)>(r68);

        $i2 = (int) -1;

        if $i0 == $i2 goto label04;

        goto label05;

     label04:
        $r69 = virtualinvoke $r71.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r69);

        goto label01;

     label05:
        $r2 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = staticinvoke <org.bouncycastle.util.encoders.Base64: byte[] decode(java.lang.String)>($r2);

        r72 = $r3;

        if z4 == 0 goto label08;

        $r57 = r1.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.openssl.PasswordFinder pFinder>;

        if $r57 != null goto label06;

        $r91 = new org.bouncycastle.openssl.PasswordException;

        specialinvoke $r91.<org.bouncycastle.openssl.PasswordException: void <init>(java.lang.String)>("No password finder specified, but a password is required");

        throw $r91;

     label06:
        $r58 = r1.<org.bouncycastle.openssl.PEMReader: org.bouncycastle.openssl.PasswordFinder pFinder>;

        $r59 = interfaceinvoke $r58.<org.bouncycastle.openssl.PasswordFinder: char[] getPassword()>();

        if $r59 != null goto label07;

        $r92 = new org.bouncycastle.openssl.PasswordException;

        specialinvoke $r92.<org.bouncycastle.openssl.PasswordException: void <init>(java.lang.String)>("Password is null, but a password is required");

        throw $r92;

     label07:
        $r93 = new java.util.StringTokenizer;

        specialinvoke $r93.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r70, ",");

        $r61 = virtualinvoke $r93.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r62 = virtualinvoke $r93.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r63 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] decode(java.lang.String)>($r62);

        $r64 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        r72 = staticinvoke <org.bouncycastle.openssl.PEMUtilities: byte[] crypt(boolean,java.lang.String,byte[],char[],java.lang.String,byte[])>(0, $r64, $r3, $r59, $r61, $r63);

     label08:
        $r4 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>(r72);

        $r65 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("RSA");

        if $z0 == 0 goto label09;

        $r34 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(1);

        r73 = (org.bouncycastle.asn1.DERInteger) $r34;

        $r35 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(2);

        r74 = (org.bouncycastle.asn1.DERInteger) $r35;

        $r36 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(3);

        r75 = (org.bouncycastle.asn1.DERInteger) $r36;

        $r37 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(4);

        r76 = (org.bouncycastle.asn1.DERInteger) $r37;

        $r38 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(5);

        r77 = (org.bouncycastle.asn1.DERInteger) $r38;

        $r39 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(6);

        r40 = (org.bouncycastle.asn1.DERInteger) $r39;

        $r41 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(7);

        r42 = (org.bouncycastle.asn1.DERInteger) $r41;

        $r43 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(8);

        r44 = (org.bouncycastle.asn1.DERInteger) $r43;

        $r94 = new java.security.spec.RSAPublicKeySpec;

        $r46 = virtualinvoke r73.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r47 = virtualinvoke r74.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r94.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r46, $r47);

        r78 = $r94;

        $r95 = new java.security.spec.RSAPrivateCrtKeySpec;

        $r49 = virtualinvoke r73.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r50 = virtualinvoke r74.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r51 = virtualinvoke r75.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r52 = virtualinvoke r76.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r53 = virtualinvoke r77.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r54 = virtualinvoke r40.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r55 = virtualinvoke r42.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r56 = virtualinvoke r44.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r95.<java.security.spec.RSAPrivateCrtKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56);

        r79 = $r95;

        goto label11;

     label09:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("ECDSA");

        if $z1 == 0 goto label10;

        $r96 = new org.bouncycastle.asn1.sec.ECPrivateKeyStructure;

        specialinvoke $r96.<org.bouncycastle.asn1.sec.ECPrivateKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r65);

        $r97 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r23 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_ecPublicKey>;

        $r24 = virtualinvoke $r96.<org.bouncycastle.asn1.sec.ECPrivateKeyStructure: org.bouncycastle.asn1.ASN1Object getParameters()>();

        specialinvoke $r97.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r23, $r24);

        $r98 = new org.bouncycastle.asn1.pkcs.PrivateKeyInfo;

        $r26 = virtualinvoke $r96.<org.bouncycastle.asn1.sec.ECPrivateKeyStructure: org.bouncycastle.asn1.DERObject getDERObject()>();

        specialinvoke $r98.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DERObject)>($r97, $r26);

        $r99 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r28 = virtualinvoke $r96.<org.bouncycastle.asn1.sec.ECPrivateKeyStructure: org.bouncycastle.asn1.DERBitString getPublicKey()>();

        $r29 = virtualinvoke $r28.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        specialinvoke $r99.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r97, $r29);

        $r100 = new java.security.spec.PKCS8EncodedKeySpec;

        $r31 = virtualinvoke $r98.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded()>();

        specialinvoke $r100.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r31);

        r79 = $r100;

        $r101 = new java.security.spec.X509EncodedKeySpec;

        $r33 = virtualinvoke $r99.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded()>();

        specialinvoke $r101.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r33);

        r78 = $r101;

        goto label11;

     label10:
        $r6 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(1);

        r80 = (org.bouncycastle.asn1.DERInteger) $r6;

        $r7 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(2);

        r81 = (org.bouncycastle.asn1.DERInteger) $r7;

        $r8 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(3);

        r82 = (org.bouncycastle.asn1.DERInteger) $r8;

        $r9 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(4);

        r83 = (org.bouncycastle.asn1.DERInteger) $r9;

        $r10 = virtualinvoke $r65.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(5);

        r84 = (org.bouncycastle.asn1.DERInteger) $r10;

        $r102 = new java.security.spec.DSAPrivateKeySpec;

        $r12 = virtualinvoke r84.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r13 = virtualinvoke r80.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r14 = virtualinvoke r81.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r15 = virtualinvoke r82.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r102.<java.security.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r12, $r13, $r14, $r15);

        r79 = $r102;

        $r103 = new java.security.spec.DSAPublicKeySpec;

        $r17 = virtualinvoke r83.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r18 = virtualinvoke r80.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r19 = virtualinvoke r81.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r20 = virtualinvoke r82.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r103.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r17, $r18, $r19, $r20);

        r78 = $r103;

     label11:
        $r85 = r1.<org.bouncycastle.openssl.PEMReader: java.lang.String provider>;

        $r86 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(r5, $r85);

        $r104 = new java.security.KeyPair;

        $r88 = virtualinvoke $r86.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r78);

        $r89 = virtualinvoke $r86.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>(r79);

        specialinvoke $r104.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r88, $r89);

        return $r104;
    }

    private org.bouncycastle.jce.spec.ECNamedCurveParameterSpec readECParameters(java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        org.bouncycastle.openssl.PEMReader r0;
        java.lang.String r1, $r5;
        org.bouncycastle.jce.spec.ECNamedCurveParameterSpec $r6;
        org.bouncycastle.asn1.ASN1Object $r3;
        org.bouncycastle.asn1.DERObjectIdentifier r4;

        r0 := @this: org.bouncycastle.openssl.PEMReader;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.bouncycastle.openssl.PEMReader: byte[] readBytes(java.lang.String)>(r1);

        $r3 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r2);

        r4 = (org.bouncycastle.asn1.DERObjectIdentifier) $r3;

        $r5 = virtualinvoke r4.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r6 = staticinvoke <org.bouncycastle.jce.ECNamedCurveTable: org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)>($r5);

        return $r6;
    }
}
