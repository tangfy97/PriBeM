abstract class com.google.common.collect.Maps$ImprovedAbstractMap extends java.util.AbstractMap
{
    private java.util.Set entrySet;
    private java.util.Set keySet;
    private java.util.Collection values;

    void <init>()
    {
        com.google.common.collect.Maps$ImprovedAbstractMap r0;

        r0 := @this: com.google.common.collect.Maps$ImprovedAbstractMap;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        return;
    }

    protected abstract java.util.Set createEntrySet();

    public java.util.Set entrySet()
    {
        java.util.Set $r1, r2;
        com.google.common.collect.Maps$ImprovedAbstractMap r0;

        r0 := @this: com.google.common.collect.Maps$ImprovedAbstractMap;

        r2 = r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet>;

        if r2 != null goto label1;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set createEntrySet()>();

        r2 = $r1;

        r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet> = $r1;

     label1:
        return r2;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r1, r3;
        com.google.common.collect.Maps$ImprovedAbstractMap$1 $r2;
        com.google.common.collect.Maps$ImprovedAbstractMap r0;

        r0 := @this: com.google.common.collect.Maps$ImprovedAbstractMap;

        r3 = r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set keySet>;

        if r3 != null goto label1;

        $r1 = specialinvoke r0.<java.util.AbstractMap: java.util.Set keySet()>();

        $r2 = new com.google.common.collect.Maps$ImprovedAbstractMap$1;

        specialinvoke $r2.<com.google.common.collect.Maps$ImprovedAbstractMap$1: void <init>(com.google.common.collect.Maps$ImprovedAbstractMap,java.util.Set)>(r0, $r1);

        r3 = $r2;

        r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set keySet> = $r2;

     label1:
        return r3;
    }

    public java.util.Collection values()
    {
        java.util.Collection $r1, r3;
        com.google.common.collect.Maps$ImprovedAbstractMap$2 $r2;
        com.google.common.collect.Maps$ImprovedAbstractMap r0;

        r0 := @this: com.google.common.collect.Maps$ImprovedAbstractMap;

        r3 = r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection values>;

        if r3 != null goto label1;

        $r1 = specialinvoke r0.<java.util.AbstractMap: java.util.Collection values()>();

        $r2 = new com.google.common.collect.Maps$ImprovedAbstractMap$2;

        specialinvoke $r2.<com.google.common.collect.Maps$ImprovedAbstractMap$2: void <init>(com.google.common.collect.Maps$ImprovedAbstractMap,java.util.Collection)>(r0, $r1);

        r3 = $r2;

        r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Collection values> = $r2;

     label1:
        return r3;
    }

    public boolean isEmpty()
    {
        java.util.Set $r1;
        com.google.common.collect.Maps$ImprovedAbstractMap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$ImprovedAbstractMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        return $z0;
    }
}
