public class com.sun.lwuit.layouts.GroupLayout extends com.sun.lwuit.layouts.Layout
{
    public static final int NORTH;
    public static final int EAST;
    public static final int SOUTH;
    public static final int WEST;
    private static final int MIN_SIZE;
    private static final int PREF_SIZE;
    private static final int MAX_SIZE;
    private static final int SPECIFIC_SIZE;
    private static final int UNSET;
    public static final int HORIZONTAL;
    public static final int VERTICAL;
    private static final int NO_ALIGNMENT;
    public static final int LEADING;
    public static final int TRAILING;
    public static final int CENTER;
    public static final int BASELINE;
    public static final int DEFAULT_SIZE;
    public static final int PREFERRED_SIZE;
    private boolean autocreatePadding;
    private boolean autocreateContainerPadding;
    private com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup;
    private com.sun.lwuit.layouts.GroupLayout$Group verticalGroup;
    private java.util.Hashtable componentInfos;
    private com.sun.lwuit.Container host;
    private java.util.Vector tmpParallelSet;
    private boolean springsChanged;
    private boolean isValid;
    private boolean hasPreferredPaddingSprings;
    private com.sun.lwuit.layouts.LayoutStyle layoutStyle;
    private boolean honorsVisibility;

    private static void checkSize(int, int, int, boolean)
    {
        int i0, i1, i2;
        java.lang.IllegalArgumentException $r0;
        boolean z0;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void checkResizeType(int,boolean)>(i0, z0);

        if z0 != 0 goto label1;

        if i2 >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pref must be >= 0");

        throw $r0;

     label1:
        if z0 == 0 goto label2;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void checkResizeType(int,boolean)>(i2, 1);

     label2:
        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void checkResizeType(int,boolean)>(i1, z0);

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void checkLessThan(int,int)>(i0, i2);

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void checkLessThan(int,int)>(i2, i1);

        return;
    }

    private static void checkResizeType(int, boolean)
    {
        int i0, $i2, $i4, $i6;
        java.lang.IllegalArgumentException $r1;
        boolean z0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i0 >= 0 goto label3;

        if z0 == 0 goto label1;

        $i2 = (int) -1;

        if i0 == $i2 goto label1;

        $i4 = (int) -2;

        if i0 != $i4 goto label2;

     label1:
        if z0 != 0 goto label3;

        $i6 = (int) -2;

        if i0 == $i6 goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid size");

        throw $r1;

     label3:
        return;
    }

    private static void checkLessThan(int, int)
    {
        int i0, i1;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        if i0 <= i1 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Following is not met: min<=pref<=max");

        throw $r0;

     label1:
        return;
    }

    public void <init>(com.sun.lwuit.Container)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.Form $r5;
        java.lang.IllegalArgumentException $r6;
        com.sun.lwuit.Container r7;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup $r1, $r2;
        java.util.Vector $r4;
        java.util.Hashtable $r3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r7 := @parameter0: com.sun.lwuit.Container;

        specialinvoke r0.<com.sun.lwuit.layouts.Layout: void <init>()>();

        if r7 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Container must be non-null");

        throw $r6;

     label1:
        $z0 = r7 instanceof com.sun.lwuit.Form;

        if $z0 == 0 goto label2;

        $r5 = (com.sun.lwuit.Form) r7;

        r7 = virtualinvoke $r5.<com.sun.lwuit.Form: com.sun.lwuit.Container getContentPane()>();

     label2:
        r0.<com.sun.lwuit.layouts.GroupLayout: boolean honorsVisibility> = 1;

        r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host> = r7;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ParallelGroup createParallelGroup(int,boolean)>(1, 1);

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void setHorizontalGroup(com.sun.lwuit.layouts.GroupLayout$Group)>($r1);

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ParallelGroup createParallelGroup(int,boolean)>(1, 1);

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void setVerticalGroup(com.sun.lwuit.layouts.GroupLayout$Group)>($r2);

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Vector tmpParallelSet> = $r4;

        return;
    }

    public void setHonorsVisibility(boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean z0, $z1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean honorsVisibility>;

        if $z1 == z0 goto label1;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean honorsVisibility> = z0;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged> = 1;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean isValid> = 0;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

     label1:
        return;
    }

    public boolean getHonorsVisibility()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $z0 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean honorsVisibility>;

        return $z0;
    }

    public void setHonorsVisibility(com.sun.lwuit.Component, java.lang.Boolean)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.layouts.GroupLayout r1;
        java.lang.Boolean r3;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r2;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.Component;

        r3 := @parameter1: java.lang.Boolean;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Component must be non-null");

        throw $r4;

     label1:
        $r2 = specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)>(r0);

        virtualinvoke $r2.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: void setHonorsVisibility(java.lang.Boolean)>(r3);

        r1.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged> = 1;

        r1.<com.sun.lwuit.layouts.GroupLayout: boolean isValid> = 0;

        specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

        return;
    }

    public java.lang.String toString()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$Group $r2, $r3, $r5, $r6;
        java.lang.StringBuffer $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $z0 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group,int)>($r5, 1);

        $r6 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group,int)>($r6, 2);

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("HORIZONTAL\n");

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void dump(java.lang.StringBuffer,com.sun.lwuit.layouts.GroupLayout$Spring,java.lang.String,int)>($r1, $r2, "  ", 1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nVERTICAL\n");

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void dump(java.lang.StringBuffer,com.sun.lwuit.layouts.GroupLayout$Spring,java.lang.String,int)>($r1, $r3, "  ", 2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private void dump(java.lang.StringBuffer, com.sun.lwuit.layouts.GroupLayout$Spring, java.lang.String, int)
    {
        java.util.Vector r54;
        com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring r53;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r33, $r34, $r35, $r36, $r38, $r39, $r41, $r42, $r45, $r46, $r47, $r48;
        java.lang.StringBuffer r1;
        java.lang.String $r5, $r8, $r24, $r29, $r37, $r40, $r44, r49, r50, r51;
        com.sun.lwuit.layouts.GroupLayout$Group $r25;
        com.sun.lwuit.layouts.GroupLayout r30;
        com.sun.lwuit.Component $r43;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r52;
        boolean $z0, $z1, $z2, $z3;
        com.sun.lwuit.layouts.GroupLayout$Spring r0, $r32;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Class $r4;
        java.lang.Object $r31;

        r30 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: com.sun.lwuit.layouts.GroupLayout$Spring;

        r49 := @parameter2: java.lang.String;

        i3 := @parameter3: int;

        r50 = "";

        r51 = "";

        $z0 = r0 instanceof com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        if $z0 == 0 goto label1;

        r52 = (com.sun.lwuit.layouts.GroupLayout$ComponentSpring) r0;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $i8 = virtualinvoke r52.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getOrigin()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r50 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = virtualinvoke r52.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component getComponent()>();

        $r44 = virtualinvoke $r43.<com.sun.lwuit.Component: java.lang.String toString()>();

        if $r44 == null goto label1;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z3 = r0 instanceof com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring;

        if $z3 == 0 goto label2;

        r53 = (com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring) r0;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userCreated=");

        $z2 = virtualinvoke r53.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: boolean getUserCreated()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", matches=");

        $r37 = virtualinvoke r53.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: java.lang.String getMatchDescription()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        r51 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size=");

        $i1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getSize()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", alignment=");

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getAlignment()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prefs=[");

        $i4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMinimumSize(int)>(i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i6 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMaximumSize(int)>(i3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $z1 = r0 instanceof com.sun.lwuit.layouts.GroupLayout$Group;

        if $z1 == 0 goto label4;

        $r25 = (com.sun.lwuit.layouts.GroupLayout$Group) r0;

        r54 = $r25.<com.sun.lwuit.layouts.GroupLayout$Group: java.util.Vector springs>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        i9 = 0;

     label3:
        $i7 = virtualinvoke r54.<java.util.Vector: int size()>();

        if i9 >= $i7 goto label4;

        $r31 = virtualinvoke r54.<java.util.Vector: java.lang.Object elementAt(int)>(i9);

        $r32 = (com.sun.lwuit.layouts.GroupLayout$Spring) $r31;

        specialinvoke r30.<com.sun.lwuit.layouts.GroupLayout: void dump(java.lang.StringBuffer,com.sun.lwuit.layouts.GroupLayout$Spring,java.lang.String,int)>(r1, $r32, $r29, i3);

        i9 = i9 + 1;

        goto label3;

     label4:
        return;
    }

    public void setAutocreateGaps(boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean z0, $z1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean autocreatePadding>;

        if $z1 == z0 goto label1;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean autocreatePadding> = z0;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

     label1:
        return;
    }

    public boolean getAutocreateGaps()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $z0 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean autocreatePadding>;

        return $z0;
    }

    public void setAutocreateContainerGaps(boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$Group $r1, $r2, $r3, $r4;
        boolean z0, $z1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean autocreateContainerPadding>;

        if z0 == $z1 goto label1;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean autocreateContainerPadding> = z0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group getHorizontalGroup()>();

        $r2 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group createTopLevelGroup(com.sun.lwuit.layouts.GroupLayout$Group)>($r1);

        r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup> = $r2;

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group getVerticalGroup()>();

        $r4 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group createTopLevelGroup(com.sun.lwuit.layouts.GroupLayout$Group)>($r3);

        r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup> = $r4;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

     label1:
        return;
    }

    public boolean getAutocreateContainerGaps()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $z0 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean autocreateContainerPadding>;

        return $z0;
    }

    public void setHorizontalGroup(com.sun.lwuit.layouts.GroupLayout$Group)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.layouts.GroupLayout$Group r0, $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Group;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Group must be non-null");

        throw $r3;

     label1:
        $r2 = specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group createTopLevelGroup(com.sun.lwuit.layouts.GroupLayout$Group)>(r0);

        r1.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup> = $r2;

        specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

        return;
    }

    public com.sun.lwuit.layouts.GroupLayout$Group getHorizontalGroup()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$Group $r1, $r3, $r6;
        java.util.Vector $r2, $r4;
        byte b1;
        int $i0;
        java.lang.Object $r5;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        b1 = 0;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        $r2 = $r1.<com.sun.lwuit.layouts.GroupLayout$Group: java.util.Vector springs>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 <= 1 goto label1;

        b1 = 1;

     label1:
        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        $r4 = $r3.<com.sun.lwuit.layouts.GroupLayout$Group: java.util.Vector springs>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(b1);

        $r6 = (com.sun.lwuit.layouts.GroupLayout$Group) $r5;

        return $r6;
    }

    public void setVerticalGroup(com.sun.lwuit.layouts.GroupLayout$Group)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.layouts.GroupLayout$Group r0, $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Group;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Group must be non-null");

        throw $r3;

     label1:
        $r2 = specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group createTopLevelGroup(com.sun.lwuit.layouts.GroupLayout$Group)>(r0);

        r1.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup> = $r2;

        specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

        return;
    }

    public com.sun.lwuit.layouts.GroupLayout$Group getVerticalGroup()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$Group $r1, $r3, $r6;
        java.util.Vector $r2, $r4;
        byte b1;
        int $i0;
        java.lang.Object $r5;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        b1 = 0;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        $r2 = $r1.<com.sun.lwuit.layouts.GroupLayout$Group: java.util.Vector springs>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 <= 1 goto label1;

        b1 = 1;

     label1:
        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        $r4 = $r3.<com.sun.lwuit.layouts.GroupLayout$Group: java.util.Vector springs>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(b1);

        $r6 = (com.sun.lwuit.layouts.GroupLayout$Group) $r5;

        return $r6;
    }

    private com.sun.lwuit.layouts.GroupLayout$Group createTopLevelGroup(com.sun.lwuit.layouts.GroupLayout$Group)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring $r3, $r4;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup $r1;
        com.sun.lwuit.layouts.GroupLayout$Group r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r2 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Group;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$SequentialGroup createSequentialGroup()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean getAutocreateContainerGaps()>();

        if $z0 == 0 goto label1;

        $r3 = new com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring;

        specialinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring: void <init>(com.sun.lwuit.layouts.GroupLayout)>(r0);

        virtualinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r3);

        virtualinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.layouts.GroupLayout$Group)>(r2);

        $r4 = new com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring;

        specialinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring: void <init>(com.sun.lwuit.layouts.GroupLayout)>(r0);

        virtualinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r4);

        goto label2;

     label1:
        virtualinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.layouts.GroupLayout$Group)>(r2);

     label2:
        return $r1;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup createSequentialGroup()
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup $r0;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        $r0 = new com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        specialinvoke $r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: void <init>(com.sun.lwuit.layouts.GroupLayout)>(r1);

        return $r0;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup createParallelGroup()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        return $r1;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup createParallelGroup(int)
    {
        int i0;
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ParallelGroup createParallelGroup(int,boolean)>(i0, 1);

        return $r1;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup createParallelGroup(int, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup $r0;
        com.sun.lwuit.layouts.GroupLayout$BaselineGroup $r2;
        int i0;
        boolean z0;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i0 != 3 goto label1;

        $r2 = new com.sun.lwuit.layouts.GroupLayout$BaselineGroup;

        specialinvoke $r2.<com.sun.lwuit.layouts.GroupLayout$BaselineGroup: void <init>(com.sun.lwuit.layouts.GroupLayout,boolean)>(r1, z0);

        return $r2;

     label1:
        $r0 = new com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        specialinvoke $r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: void <init>(com.sun.lwuit.layouts.GroupLayout,int,boolean)>(r1, i0, z0);

        return $r0;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup createBaselineGroup(boolean, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.layouts.GroupLayout$BaselineGroup $r0;
        boolean z0, z1;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r0 = new com.sun.lwuit.layouts.GroupLayout$BaselineGroup;

        specialinvoke $r0.<com.sun.lwuit.layouts.GroupLayout$BaselineGroup: void <init>(com.sun.lwuit.layouts.GroupLayout,boolean,boolean)>(r1, z0, z1);

        return $r0;
    }

    public void linkSize(com.sun.lwuit.Component[])
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.Component[] r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.Component[];

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void linkSize(com.sun.lwuit.Component[],int)>(r1, 3);

        return;
    }

    public void linkSize(com.sun.lwuit.Component[], int)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.Component r2, $r3;
        int i0, $i1, $i2, $i3, i4, $i6;
        boolean z0, z1, $z2, $z4, $z5;
        com.sun.lwuit.Component[] r0;
        java.lang.IllegalArgumentException $r7, $r8, $r9;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.Component[];

        i0 := @parameter1: int;

        if r0 != null goto label01;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Components must be non-null");

        throw $r7;

     label01:
        $i1 = i0 & 1;

        if $i1 != 1 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z0 = $z2;

        $i2 = i0 & 2;

        if $i2 != 2 goto label04;

        $z5 = 1;

        $z4 = 1;

        goto label05;

     label04:
        $z5 = 0;

        $z4 = 0;

     label05:
        z1 = $z4;

        if $z5 != 0 goto label06;

        if z0 != 0 goto label06;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Axis must contain HORIZONTAL or VERTICAL");

        throw $r8;

     label06:
        $i3 = lengthof r0;

        i4 = $i3 - 1;

     label07:
        if i4 < 0 goto label09;

        r2 = r0[i4];

        $r3 = r0[i4];

        if $r3 != null goto label08;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Components must be non-null");

        throw $r9;

     label08:
        specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)>(r2);

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label07;

     label09:
        if z0 == 0 goto label10;

        specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: void linkSize0(com.sun.lwuit.Component[],int)>(r0, 1);

     label10:
        if z1 == 0 goto label11;

        specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: void linkSize0(com.sun.lwuit.Component[],int)>(r0, 2);

     label11:
        specialinvoke r1.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

        return;
    }

    private void linkSize0(com.sun.lwuit.Component[], int)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.Component[] r1;
        com.sun.lwuit.layouts.GroupLayout$LinkInfo $r4;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r3, $r6;
        com.sun.lwuit.Component $r2, $r5;
        int $i0, $i1, i2, $i3, i4, $i6;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.Component[];

        i2 := @parameter1: int;

        $i0 = lengthof r1;

        $i1 = $i0 - 1;

        $r2 = r1[$i1];

        $r3 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)>($r2);

        $r4 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$LinkInfo getLinkInfo(int)>(i2);

        $i3 = lengthof r1;

        i4 = $i3 - 2;

     label1:
        if i4 < 0 goto label2;

        $r5 = r1[i4];

        $r6 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)>($r5);

        virtualinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$LinkInfo: void add(com.sun.lwuit.layouts.GroupLayout$ComponentInfo)>($r6);

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label1;

     label2:
        return;
    }

    public void replace(com.sun.lwuit.Component, com.sun.lwuit.Component)
    {
        com.sun.lwuit.layouts.GroupLayout r3;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r14;
        com.sun.lwuit.Component r0, r2;
        java.util.Hashtable $r4, $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r1, $r11;
        com.sun.lwuit.layouts.GroupLayout$Group $r12, $r13;
        com.sun.lwuit.Container $r6, $r7, $r8, $r10;
        java.lang.Object $r5;

        r3 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.Component;

        r2 := @parameter1: com.sun.lwuit.Component;

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Components must be non-null");

        throw $r1;

     label2:
        $z0 = r3.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged>;

        if $z0 == 0 goto label3;

        $r12 = r3.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        specialinvoke r3.<com.sun.lwuit.layouts.GroupLayout: void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group,int)>($r12, 1);

        $r13 = r3.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        specialinvoke r3.<com.sun.lwuit.layouts.GroupLayout: void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group,int)>($r13, 2);

     label3:
        $r4 = r3.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r0);

        $r14 = (com.sun.lwuit.layouts.GroupLayout$ComponentInfo) $r5;

        if $r14 != null goto label4;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Component must already exist");

        throw $r11;

     label4:
        $r6 = r3.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        virtualinvoke $r6.<com.sun.lwuit.Container: void removeComponent(com.sun.lwuit.Component)>(r0);

        $r7 = virtualinvoke r2.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        $r8 = r3.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        if $r7 == $r8 goto label5;

        $r10 = r3.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        virtualinvoke $r10.<com.sun.lwuit.Container: void addComponent(com.sun.lwuit.Component)>(r2);

     label5:
        virtualinvoke $r14.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: void setComponent(com.sun.lwuit.Component)>(r2);

        $r9 = r3.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r14);

        specialinvoke r3.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

        return;
    }

    public void setLayoutStyle(com.sun.lwuit.layouts.LayoutStyle)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.LayoutStyle r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.layouts.LayoutStyle;

        r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.LayoutStyle layoutStyle> = r1;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void invalidateHost()>();

        return;
    }

    public com.sun.lwuit.layouts.LayoutStyle getLayoutStyle()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.LayoutStyle $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.LayoutStyle layoutStyle>;

        return $r1;
    }

    private com.sun.lwuit.layouts.LayoutStyle getLayoutStyle0()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.LayoutStyle $r1, r2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.LayoutStyle getLayoutStyle()>();

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = staticinvoke <com.sun.lwuit.layouts.LayoutStyle: com.sun.lwuit.layouts.LayoutStyle getSharedInstance()>();

     label1:
        return r2;
    }

    private void invalidateHost()
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.Container $r1, $r2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        virtualinvoke $r1.<com.sun.lwuit.Container: void invalidate()>();

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        virtualinvoke $r2.<com.sun.lwuit.Container: void repaint()>();

        return;
    }

    public void removeLayoutComponent(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.GroupLayout r0;
        java.lang.Object $r3;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo r4;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.Component;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (com.sun.lwuit.layouts.GroupLayout$ComponentInfo) $r3;

        if r4 == null goto label1;

        virtualinvoke r4.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: void dispose()>();

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged> = 1;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean isValid> = 0;

     label1:
        return;
    }

    public com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.geom.Dimension $r4;
        int $i0, $i1;
        com.sun.lwuit.layouts.GroupLayout$Group $r2, $r3;
        com.sun.lwuit.Container r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.Container;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void checkParent(com.sun.lwuit.Container)>(r1);

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void prepare(int)>(1);

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        $i0 = virtualinvoke $r2.<com.sun.lwuit.layouts.GroupLayout$Group: int getPreferredSize(int)>(1);

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        $i1 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$Group: int getPreferredSize(int)>(2);

        $r4 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.geom.Dimension adjustSize(int,int)>($i0, $i1);

        return $r4;
    }

    public void layoutContainer(com.sun.lwuit.Container)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        java.util.Enumeration $r13;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo r7;
        com.sun.lwuit.plaf.Style $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, i9;
        java.util.Hashtable $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.lwuit.layouts.GroupLayout$Group $r8, $r9, $r10, $r11;
        com.sun.lwuit.Container r1;
        java.lang.Object $r6;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.Container;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void prepare(int)>(3);

        $r2 = virtualinvoke r1.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 1);

        $r3 = virtualinvoke r1.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i1 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        $r4 = virtualinvoke r1.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i2 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 3);

        $r5 = virtualinvoke r1.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i3 = virtualinvoke $r5.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i4 = virtualinvoke r1.<com.sun.lwuit.Container: int getWidth()>();

        $i5 = $i4 - $i0;

        i6 = $i5 - $i2;

        $i7 = virtualinvoke r1.<com.sun.lwuit.Container: int getHeight()>();

        $i8 = $i7 - $i1;

        i9 = $i8 - $i3;

        $z0 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean isLeftToRight()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean getAutocreateGaps()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean getAutocreateContainerGaps()>();

        if $z2 != 0 goto label1;

        $z3 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean hasPreferredPaddingSprings>;

        if $z3 == 0 goto label2;

     label1:
        $r8 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void calculateAutopadding(com.sun.lwuit.layouts.GroupLayout$Group,int,int,int,int)>($r8, 1, 3, 0, i6);

        $r9 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void calculateAutopadding(com.sun.lwuit.layouts.GroupLayout$Group,int,int,int,int)>($r9, 2, 3, 0, i9);

     label2:
        $r10 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        virtualinvoke $r10.<com.sun.lwuit.layouts.GroupLayout$Group: void setSize(int,int,int)>(1, 0, i6);

        $r11 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        virtualinvoke $r11.<com.sun.lwuit.layouts.GroupLayout$Group: void setSize(int,int,int)>(2, 0, i9);

        $r12 = r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        $r13 = virtualinvoke $r12.<java.util.Hashtable: java.util.Enumeration elements()>();

     label3:
        $z4 = interfaceinvoke $r13.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label4;

        $r6 = interfaceinvoke $r13.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (com.sun.lwuit.layouts.GroupLayout$ComponentInfo) $r6;

        virtualinvoke r7.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.Component getComponent()>();

        virtualinvoke r7.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: void setBounds(int,int,int,boolean)>($i0, $i1, i6, $z0);

        goto label3;

     label4:
        return;
    }

    private void prepare(int)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        java.util.Enumeration $r8;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo r10;
        int i0;
        java.util.Hashtable $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        com.sun.lwuit.layouts.GroupLayout$Group $r1, $r2, $r3, $r4, $r5, $r6, $r11, $r12;
        java.lang.Object $r9;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        i0 := @parameter0: int;

        z11 = 0;

        $z0 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean isValid>;

        if $z0 != 0 goto label03;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean isValid> = 1;

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        virtualinvoke $r5.<com.sun.lwuit.layouts.GroupLayout$Group: void setSize(int,int,int)>(1, -2147483648, -2147483648);

        $r6 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        virtualinvoke $r6.<com.sun.lwuit.layouts.GroupLayout$Group: void setSize(int,int,int)>(2, -2147483648, -2147483648);

        $r7 = r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        $r8 = virtualinvoke $r7.<java.util.Hashtable: java.util.Enumeration elements()>();

     label01:
        $z9 = interfaceinvoke $r8.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z9 == 0 goto label03;

        $r9 = interfaceinvoke $r8.<java.util.Enumeration: java.lang.Object nextElement()>();

        r10 = (com.sun.lwuit.layouts.GroupLayout$ComponentInfo) $r9;

        $z10 = virtualinvoke r10.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: boolean updateVisibility()>();

        if $z10 == 0 goto label02;

        z11 = 1;

     label02:
        virtualinvoke r10.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: void clearCachedSize()>();

        goto label01;

     label03:
        $z1 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged>;

        if $z1 == 0 goto label04;

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group,int)>($r3, 1);

        $r4 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group,int)>($r4, 2);

     label04:
        $z2 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged>;

        if $z2 != 0 goto label05;

        if z11 == 0 goto label09;

     label05:
        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void checkComponents()>();

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        virtualinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$Group: void removeAutopadding()>();

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        virtualinvoke $r2.<com.sun.lwuit.layouts.GroupLayout$Group: void removeAutopadding()>();

        $z3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean getAutocreateGaps()>();

        if $z3 == 0 goto label06;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void insertAutopadding(boolean)>(1);

        goto label08;

     label06:
        $z4 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean hasPreferredPaddingSprings>;

        if $z4 != 0 goto label07;

        $z8 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean getAutocreateContainerGaps()>();

        if $z8 == 0 goto label08;

     label07:
        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void insertAutopadding(boolean)>(0);

     label08:
        r0.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged> = 0;

     label09:
        if i0 == 3 goto label11;

        $z5 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean getAutocreateGaps()>();

        if $z5 != 0 goto label10;

        $z6 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean getAutocreateContainerGaps()>();

        if $z6 != 0 goto label10;

        $z7 = r0.<com.sun.lwuit.layouts.GroupLayout: boolean hasPreferredPaddingSprings>;

        if $z7 == 0 goto label11;

     label10:
        $r11 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void calculateAutopadding(com.sun.lwuit.layouts.GroupLayout$Group,int,int,int,int)>($r11, 1, i0, 0, 0);

        $r12 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: void calculateAutopadding(com.sun.lwuit.layouts.GroupLayout$Group,int,int,int,int)>($r12, 2, i0, 0, 0);

     label11:
        return;
    }

    private void calculateAutopadding(com.sun.lwuit.layouts.GroupLayout$Group, int, int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        int i0, i1, i2, i3;
        com.sun.lwuit.layouts.GroupLayout$Group r0;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Group;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: void unsetAutopadding()>();

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: int getMinimumSize(int)>(i1);

        goto label4;

     label2:
        i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: int getPreferredSize(int)>(i1);

        goto label4;

     label3:
        i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: int getMaximumSize(int)>(i1);

     label4:
        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: void setSize(int,int,int)>(i1, i2, i3);

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: void calculateAutopadding(int)>(i1);

        return;
    }

    private void checkComponents()
    {
        java.lang.IllegalStateException $r7, $r13;
        com.sun.lwuit.layouts.GroupLayout r0;
        java.util.Enumeration $r2;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo r4;
        com.sun.lwuit.Component $r9, $r15;
        java.lang.String $r12, $r18;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring $r5, $r6;
        java.util.Hashtable $r1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r8, $r10, $r11, $r14, $r16, $r17;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (com.sun.lwuit.layouts.GroupLayout$ComponentInfo) $r3;

        $r5 = r4.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring horizontalSpring>;

        if $r5 != null goto label2;

        $r13 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = staticinvoke <com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.Component access$000(com.sun.lwuit.layouts.GroupLayout$ComponentInfo)>(r4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not attached to a horizontal group");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label2:
        $r6 = r4.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring verticalSpring>;

        if $r6 != null goto label3;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = staticinvoke <com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.Component access$000(com.sun.lwuit.layouts.GroupLayout$ComponentInfo)>(r4);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not attached to a vertical group");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label3:
        goto label1;

     label4:
        return;
    }

    private void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group, int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r3;
        com.sun.lwuit.layouts.GroupLayout r4;
        com.sun.lwuit.layouts.GroupLayout$Group r0, $r5;
        java.util.Vector r1;
        int $i0, i1, i2, $i4;
        java.lang.Object $r2;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring $r6;
        boolean $z0, $z1;

        r4 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Group;

        i1 := @parameter1: int;

        r1 = r0.<com.sun.lwuit.layouts.GroupLayout$Group: java.util.Vector springs>;

        $i0 = virtualinvoke r1.<java.util.Vector: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        $r2 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r3 = (com.sun.lwuit.layouts.GroupLayout$Spring) $r2;

        $z0 = r3 instanceof com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        if $z0 == 0 goto label2;

        $r6 = (com.sun.lwuit.layouts.GroupLayout$ComponentSpring) r3;

        virtualinvoke $r6.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: void installIfNecessary(int)>(i1);

        goto label3;

     label2:
        $z1 = r3 instanceof com.sun.lwuit.layouts.GroupLayout$Group;

        if $z1 == 0 goto label3;

        $r5 = (com.sun.lwuit.layouts.GroupLayout$Group) r3;

        specialinvoke r4.<com.sun.lwuit.layouts.GroupLayout: void registerComponents(com.sun.lwuit.layouts.GroupLayout$Group,int)>($r5, i1);

     label3:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label4:
        return;
    }

    private com.sun.lwuit.geom.Dimension adjustSize(int, int)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.plaf.Style $r2, $r4, $r6, $r8;
        com.sun.lwuit.geom.Dimension $r9;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, $i7, $i8, $i9;
        com.sun.lwuit.Container $r1, $r3, $r5, $r7;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        i4 := @parameter0: int;

        i6 := @parameter1: int;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 1);

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        $r4 = virtualinvoke $r3.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i1 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        $r6 = virtualinvoke $r5.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i2 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 3);

        $r7 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Container: com.sun.lwuit.plaf.Style getStyle()>();

        $i3 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $r9 = new com.sun.lwuit.geom.Dimension;

        $i5 = i4 + $i0;

        $i9 = $i5 + $i2;

        $i7 = i6 + $i1;

        $i8 = $i7 + $i3;

        specialinvoke $r9.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i9, $i8);

        return $r9;
    }

    private void checkParent(com.sun.lwuit.Container)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        java.lang.IllegalArgumentException $r3;
        com.sun.lwuit.Container r0, $r2;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout;

        r0 := @parameter0: com.sun.lwuit.Container;

        $r2 = r1.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        if r0 == $r2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("GroupLayout can only be used with one Container at a time");

        throw $r3;

     label1:
        return;
    }

    private com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r4, r9;
        com.sun.lwuit.Container $r6, $r7, $r8;
        com.sun.lwuit.Component r1;
        java.lang.Object $r3;
        java.util.Hashtable $r2, $r5;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.Component;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (com.sun.lwuit.layouts.GroupLayout$ComponentInfo) $r3;

        if r9 != null goto label1;

        $r4 = new com.sun.lwuit.layouts.GroupLayout$ComponentInfo;

        specialinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: void <init>(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>(r0, r1);

        r9 = $r4;

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Hashtable componentInfos>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r6 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        $r7 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        if $r6 == $r7 goto label1;

        $r8 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        virtualinvoke $r8.<com.sun.lwuit.Container: void addComponent(com.sun.lwuit.Component)>(r1);

     label1:
        return r9;
    }

    private void insertAutopadding(boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$Group $r2, $r7;
        java.util.Vector $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        boolean z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group horizontalGroup>;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>(1);

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>(int)>(1);

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>(int)>(1);

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>(int)>(1);

        virtualinvoke $r2.<com.sun.lwuit.layouts.GroupLayout$Group: void insertAutopadding(int,java.util.Vector,java.util.Vector,java.util.Vector,java.util.Vector,boolean)>(1, $r1, $r3, $r4, $r5, z0);

        $r7 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$Group verticalGroup>;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>(int)>(1);

        $r8 = new java.util.Vector;

        specialinvoke $r8.<java.util.Vector: void <init>(int)>(1);

        $r9 = new java.util.Vector;

        specialinvoke $r9.<java.util.Vector: void <init>(int)>(1);

        $r10 = new java.util.Vector;

        specialinvoke $r10.<java.util.Vector: void <init>(int)>(1);

        virtualinvoke $r7.<com.sun.lwuit.layouts.GroupLayout$Group: void insertAutopadding(int,java.util.Vector,java.util.Vector,java.util.Vector,java.util.Vector,boolean)>(2, $r6, $r8, $r9, $r10, z0);

        return;
    }

    private boolean areParallelSiblings(com.sun.lwuit.Component, com.sun.lwuit.Component, int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r8, r9;
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r2, $r4;
        com.sun.lwuit.Component r1, r3;
        java.util.Vector $r5;
        int i0;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r6, r7;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter0: com.sun.lwuit.Component;

        r3 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        $r2 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)>(r1);

        $r4 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)>(r3);

        if i0 != 1 goto label01;

        r6 = $r2.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring horizontalSpring>;

        r7 = $r4.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring horizontalSpring>;

        goto label02;

     label01:
        r6 = $r2.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring verticalSpring>;

        r7 = $r4.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring verticalSpring>;

     label02:
        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout: java.util.Vector tmpParallelSet>;

        virtualinvoke $r5.<java.util.Vector: void removeAllElements()>();

        r8 = virtualinvoke r6.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout$Spring getParent()>();

     label03:
        if r8 == null goto label04;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>(r8);

        r8 = virtualinvoke r8.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout$Spring getParent()>();

        goto label03;

     label04:
        r9 = virtualinvoke r7.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout$Spring getParent()>();

     label05:
        if r9 == null goto label10;

        $z0 = virtualinvoke $r5.<java.util.Vector: boolean contains(java.lang.Object)>(r9);

        if $z0 == 0 goto label09;

        virtualinvoke $r5.<java.util.Vector: void removeAllElements()>();

     label06:
        if r9 == null goto label08;

        $z1 = r9 instanceof com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        if $z1 == 0 goto label07;

        return 1;

     label07:
        r9 = virtualinvoke r9.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout$Spring getParent()>();

        goto label06;

     label08:
        return 0;

     label09:
        r9 = virtualinvoke r9.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout$Spring getParent()>();

        goto label05;

     label10:
        virtualinvoke $r5.<java.util.Vector: void removeAllElements()>();

        return 0;
    }

    private boolean isLeftToRight()
    {
        com.sun.lwuit.layouts.GroupLayout r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout;

        return 1;
    }

    private static java.util.Vector create(java.util.Vector)
    {
        java.util.Vector r0, $r1;
        int $i0, i1;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.Vector;

        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static void addAll(java.util.Vector, java.util.Vector)
    {
        java.util.Vector r0, r1;
        int $i0, i1;
        java.lang.Object $r2;

        r1 := @parameter0: java.util.Vector;

        r0 := @parameter1: java.util.Vector;

        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static boolean access$102(com.sun.lwuit.layouts.GroupLayout, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean z0;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        z0 := @parameter1: boolean;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean springsChanged> = z0;

        return z0;
    }

    static boolean access$302(com.sun.lwuit.layouts.GroupLayout, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean z0;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        z0 := @parameter1: boolean;

        r0.<com.sun.lwuit.layouts.GroupLayout: boolean hasPreferredPaddingSprings> = z0;

        return z0;
    }

    static java.util.Vector access$400(java.util.Vector)
    {
        java.util.Vector r0, $r1;

        r0 := @parameter0: java.util.Vector;

        $r1 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: java.util.Vector create(java.util.Vector)>(r0);

        return $r1;
    }

    static void access$600(java.util.Vector, java.util.Vector)
    {
        java.util.Vector r0, r1;

        r0 := @parameter0: java.util.Vector;

        r1 := @parameter1: java.util.Vector;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void addAll(java.util.Vector,java.util.Vector)>(r0, r1);

        return;
    }

    static void access$700(int, int, int, boolean)
    {
        int i0, i1, i2;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void checkSize(int,int,int,boolean)>(i0, i1, i2, z0);

        return;
    }

    static com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r2;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter1: com.sun.lwuit.Component;

        $r2 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo getComponentInfo(com.sun.lwuit.Component)>(r1);

        return $r2;
    }

    static com.sun.lwuit.Container access$900(com.sun.lwuit.layouts.GroupLayout)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.Container $r1;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.Container host>;

        return $r1;
    }

    static com.sun.lwuit.layouts.LayoutStyle access$1000(com.sun.lwuit.layouts.GroupLayout)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        com.sun.lwuit.layouts.LayoutStyle $r1;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        $r1 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.LayoutStyle getLayoutStyle0()>();

        return $r1;
    }

    static boolean access$1100(com.sun.lwuit.layouts.GroupLayout)
    {
        com.sun.lwuit.layouts.GroupLayout r0;
        boolean $z0;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        $z0 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean isLeftToRight()>();

        return $z0;
    }

    static boolean access$1200(com.sun.lwuit.layouts.GroupLayout, com.sun.lwuit.Component, com.sun.lwuit.Component, int)
    {
        com.sun.lwuit.Component r1, r2;
        com.sun.lwuit.layouts.GroupLayout r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        r1 := @parameter1: com.sun.lwuit.Component;

        r2 := @parameter2: com.sun.lwuit.Component;

        i0 := @parameter3: int;

        $z0 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout: boolean areParallelSiblings(com.sun.lwuit.Component,com.sun.lwuit.Component,int)>(r1, r2, i0);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.sun.lwuit.layouts.GroupLayout: int PREFERRED_SIZE> = -2;

        <com.sun.lwuit.layouts.GroupLayout: int DEFAULT_SIZE> = -1;

        <com.sun.lwuit.layouts.GroupLayout: int BASELINE> = 3;

        <com.sun.lwuit.layouts.GroupLayout: int CENTER> = 4;

        <com.sun.lwuit.layouts.GroupLayout: int TRAILING> = 2;

        <com.sun.lwuit.layouts.GroupLayout: int LEADING> = 1;

        <com.sun.lwuit.layouts.GroupLayout: int NO_ALIGNMENT> = 0;

        <com.sun.lwuit.layouts.GroupLayout: int VERTICAL> = 2;

        <com.sun.lwuit.layouts.GroupLayout: int HORIZONTAL> = 1;

        <com.sun.lwuit.layouts.GroupLayout: int UNSET> = -2147483648;

        <com.sun.lwuit.layouts.GroupLayout: int SPECIFIC_SIZE> = 3;

        <com.sun.lwuit.layouts.GroupLayout: int MAX_SIZE> = 2;

        <com.sun.lwuit.layouts.GroupLayout: int PREF_SIZE> = 1;

        <com.sun.lwuit.layouts.GroupLayout: int MIN_SIZE> = 0;

        <com.sun.lwuit.layouts.GroupLayout: int WEST> = 7;

        <com.sun.lwuit.layouts.GroupLayout: int SOUTH> = 5;

        <com.sun.lwuit.layouts.GroupLayout: int EAST> = 3;

        <com.sun.lwuit.layouts.GroupLayout: int NORTH> = 1;

        return;
    }
}
