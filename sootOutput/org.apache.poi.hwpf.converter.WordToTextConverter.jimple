public class org.apache.poi.hwpf.converter.WordToTextConverter extends org.apache.poi.hwpf.converter.AbstractWordConverter
{
    private static final org.apache.poi.util.POILogger logger;
    private java.util.concurrent.atomic.AtomicInteger noteCounters;
    private org.w3c.dom.Element notes;
    private boolean outputSummaryInformation;
    private final org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade;

    public static java.lang.String getText(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.lang.Exception
    {
        org.apache.poi.poifs.filesystem.DirectoryNode r0;
        java.lang.String $r2;
        org.apache.poi.hwpf.HWPFDocumentCore $r1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: org.apache.poi.hwpf.HWPFDocumentCore loadDoc(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        $r2 = staticinvoke <org.apache.poi.hwpf.converter.WordToTextConverter: java.lang.String getText(org.apache.poi.hwpf.HWPFDocumentCore)>($r1);

        return $r2;
    }

    public static java.lang.String getText(java.io.File) throws java.lang.Exception
    {
        java.lang.String $r2;
        org.apache.poi.hwpf.HWPFDocumentCore $r1;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: org.apache.poi.hwpf.HWPFDocumentCore loadDoc(java.io.File)>(r0);

        $r2 = staticinvoke <org.apache.poi.hwpf.converter.WordToTextConverter: java.lang.String getText(org.apache.poi.hwpf.HWPFDocumentCore)>($r1);

        return $r2;
    }

    public static java.lang.String getText(org.apache.poi.hwpf.HWPFDocumentCore) throws java.lang.Exception
    {
        org.apache.poi.hwpf.HWPFDocumentCore r4;
        org.w3c.dom.Document $r3;
        javax.xml.parsers.DocumentBuilder $r2;
        org.apache.poi.hwpf.converter.WordToTextConverter $r0;
        javax.xml.parsers.DocumentBuilderFactory $r1;
        java.lang.String $r5;

        r4 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        $r0 = new org.apache.poi.hwpf.converter.WordToTextConverter;

        $r1 = staticinvoke <org.apache.poi.util.XMLHelper: javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r3 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r0.<org.apache.poi.hwpf.converter.WordToTextConverter: void <init>(org.w3c.dom.Document)>($r3);

        virtualinvoke $r0.<org.apache.poi.hwpf.converter.WordToTextConverter: void processDocument(org.apache.poi.hwpf.HWPFDocumentCore)>(r4);

        $r5 = virtualinvoke $r0.<org.apache.poi.hwpf.converter.WordToTextConverter: java.lang.String getText()>();

        return $r5;
    }

    public static void main(java.lang.String[])
    {
        javax.xml.transform.dom.DOMSource $r18;
        javax.xml.transform.Transformer $r21;
        javax.xml.transform.stream.StreamResult $r19;
        java.lang.String[] r0;
        org.w3c.dom.Document $r15;
        int $i0;
        java.lang.String $r4, $r6, $r10, $r12, $r14, $r17;
        java.io.PrintStream $r2, $r8, $r22;
        java.io.FileWriter $r16;
        java.io.File $r13;
        java.lang.Exception $r23;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11;
        javax.xml.transform.TransformerFactory $r20;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 2 goto label1;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Usage: WordToTextConverter <inputFile.doc> <saveTo.txt>");

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting ");

        $r4 = r0[0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saving output to ");

        $r10 = r0[1];

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label2:
        $r13 = new java.io.File;

        $r14 = r0[0];

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        $r15 = staticinvoke <org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Document process(java.io.File)>($r13);

        $r16 = new java.io.FileWriter;

        $r17 = r0[1];

        specialinvoke $r16.<java.io.FileWriter: void <init>(java.lang.String)>($r17);

        $r18 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r18.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r15);

        $r19 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r19.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r16);

        $r20 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r21 = virtualinvoke $r20.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", "UTF-8");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "no");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("method", "text");

        virtualinvoke $r21.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r18, $r19);

        virtualinvoke $r16.<java.io.FileWriter: void close()>();

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static org.w3c.dom.Document process(java.io.File) throws java.lang.Exception
    {
        org.apache.poi.hwpf.HWPFDocumentCore $r1;
        org.w3c.dom.Document $r5, $r6;
        javax.xml.parsers.DocumentBuilder $r4;
        org.apache.poi.hwpf.converter.WordToTextConverter $r2;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: org.apache.poi.hwpf.HWPFDocumentCore loadDoc(java.io.File)>(r0);

        $r2 = new org.apache.poi.hwpf.converter.WordToTextConverter;

        $r3 = staticinvoke <org.apache.poi.util.XMLHelper: javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r2.<org.apache.poi.hwpf.converter.WordToTextConverter: void <init>(org.w3c.dom.Document)>($r5);

        virtualinvoke $r2.<org.apache.poi.hwpf.converter.WordToTextConverter: void processDocument(org.apache.poi.hwpf.HWPFDocumentCore)>($r1);

        $r6 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Document getDocument()>();

        return $r6;
    }

    public void <init>() throws javax.xml.parsers.ParserConfigurationException
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r2;
        org.w3c.dom.Document $r5;
        javax.xml.parsers.DocumentBuilder $r4;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        javax.xml.parsers.DocumentBuilderFactory $r3;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: java.util.concurrent.atomic.AtomicInteger noteCounters> = $r1;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes> = null;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean outputSummaryInformation> = 0;

        $r2 = new org.apache.poi.hwpf.converter.TextDocumentFacade;

        $r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r2.<org.apache.poi.hwpf.converter.TextDocumentFacade: void <init>(org.w3c.dom.Document)>($r5);

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade> = $r2;

        return;
    }

    public void <init>(org.w3c.dom.Document)
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r2;
        org.w3c.dom.Document r3;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r3 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: java.util.concurrent.atomic.AtomicInteger noteCounters> = $r1;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes> = null;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean outputSummaryInformation> = 0;

        $r2 = new org.apache.poi.hwpf.converter.TextDocumentFacade;

        specialinvoke $r2.<org.apache.poi.hwpf.converter.TextDocumentFacade: void <init>(org.w3c.dom.Document)>(r3);

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade> = $r2;

        return;
    }

    public void <init>(org.apache.poi.hwpf.converter.TextDocumentFacade)
    {
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.poi.hwpf.converter.TextDocumentFacade r2;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r2 := @parameter0: org.apache.poi.hwpf.converter.TextDocumentFacade;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: java.util.concurrent.atomic.AtomicInteger noteCounters> = $r1;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes> = null;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean outputSummaryInformation> = 0;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade> = r2;

        return;
    }

    protected void afterProcess()
    {
        org.w3c.dom.Element $r1, $r3, $r4;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r2;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element getBody()>();

        $r4 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes>;

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

     label1:
        return;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r1;
        org.w3c.dom.Document $r2;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Document getDocument()>();

        return $r2;
    }

    public java.lang.String getText() throws java.lang.Exception
    {
        javax.xml.transform.dom.DOMSource $r1;
        javax.xml.transform.Transformer $r6;
        java.io.StringWriter $r0;
        javax.xml.transform.stream.StreamResult $r4;
        org.w3c.dom.Document $r3;
        org.apache.poi.hwpf.converter.WordToTextConverter r2;
        javax.xml.transform.TransformerFactory $r5;
        java.lang.String $r7;

        r2 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new javax.xml.transform.dom.DOMSource;

        $r3 = virtualinvoke r2.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Document getDocument()>();

        specialinvoke $r1.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r3);

        $r4 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r0);

        $r5 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r6 = virtualinvoke $r5.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r6.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", "UTF-8");

        virtualinvoke $r6.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "no");

        virtualinvoke $r6.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("method", "text");

        virtualinvoke $r6.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r1, $r4);

        $r7 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r7;
    }

    public boolean isOutputSummaryInformation()
    {
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        $z0 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean outputSummaryInformation>;

        return $z0;
    }

    protected void outputCharacters(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun, java.lang.String)
    {
        org.w3c.dom.Text $r4;
        org.w3c.dom.Element r0;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r3;
        org.apache.poi.hwpf.usermodel.CharacterRun r5;
        org.apache.poi.hwpf.converter.WordToTextConverter r1;
        java.lang.String r2;

        r1 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r2 := @parameter2: java.lang.String;

        $r3 = r1.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(r2);

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        return;
    }

    protected void processBookmarks(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.util.List)
    {
        org.apache.poi.hwpf.usermodel.Range r2;
        java.util.List r4;
        org.w3c.dom.Element r3;
        org.apache.poi.hwpf.HWPFDocumentCore r1;
        int i0;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r3 := @parameter1: org.w3c.dom.Element;

        r2 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.List;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r1, i0, r2, r3);

        return;
    }

    protected void processDocumentInformation(org.apache.poi.hpsf.SummaryInformation)
    {
        org.apache.poi.hpsf.SummaryInformation r1;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r6, $r8, $r10, $r12;
        java.lang.String $r2, $r3, $r4, $r5, $r7, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hpsf.SummaryInformation;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean isOutputSummaryInformation()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        $z1 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: boolean isNotEmpty(java.lang.String)>($r2);

        if $z1 == 0 goto label1;

        $r12 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r13 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getTitle()>();

        virtualinvoke $r12.<org.apache.poi.hwpf.converter.TextDocumentFacade: void setTitle(java.lang.String)>($r13);

     label1:
        $r3 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        $z2 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: boolean isNotEmpty(java.lang.String)>($r3);

        if $z2 == 0 goto label2;

        $r10 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r11 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getAuthor()>();

        virtualinvoke $r10.<org.apache.poi.hwpf.converter.TextDocumentFacade: void addAuthor(java.lang.String)>($r11);

     label2:
        $r4 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        $z3 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: boolean isNotEmpty(java.lang.String)>($r4);

        if $z3 == 0 goto label3;

        $r8 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r9 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getComments()>();

        virtualinvoke $r8.<org.apache.poi.hwpf.converter.TextDocumentFacade: void addDescription(java.lang.String)>($r9);

     label3:
        $r5 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        $z4 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: boolean isNotEmpty(java.lang.String)>($r5);

        if $z4 == 0 goto label4;

        $r6 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r7 = virtualinvoke r1.<org.apache.poi.hpsf.SummaryInformation: java.lang.String getKeywords()>();

        virtualinvoke $r6.<org.apache.poi.hwpf.converter.TextDocumentFacade: void addKeywords(java.lang.String)>($r7);

     label4:
        return;
    }

    public void processDocumentPart(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.Range r2;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        org.apache.poi.hwpf.HWPFDocumentCore r1;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.Range;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDocumentPart(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Range)>(r1, r2);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: void afterProcess()>();

        return;
    }

    protected void processDrawnObject(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.apache.poi.hwpf.usermodel.OfficeDrawing, java.lang.String, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.HWPFDocument r1;
        org.w3c.dom.Element r5;
        org.apache.poi.hwpf.usermodel.CharacterRun r2;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        java.lang.String r4;
        org.apache.poi.hwpf.usermodel.OfficeDrawing r3;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r3 := @parameter2: org.apache.poi.hwpf.usermodel.OfficeDrawing;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.w3c.dom.Element;

        return;
    }

    protected void processEndnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.Range r3;
        org.apache.poi.hwpf.HWPFDocument r1;
        org.w3c.dom.Element r2;
        int i0;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        i0 := @parameter1: int;

        r2 := @parameter2: org.w3c.dom.Element;

        r3 := @parameter3: org.apache.poi.hwpf.usermodel.Range;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: void processNote(org.apache.poi.hwpf.HWPFDocument,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range)>(r1, r2, r3);

        return;
    }

    protected void processFootnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.Range r3;
        org.apache.poi.hwpf.HWPFDocument r1;
        org.w3c.dom.Element r2;
        int i0;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        i0 := @parameter1: int;

        r2 := @parameter2: org.w3c.dom.Element;

        r3 := @parameter3: org.apache.poi.hwpf.usermodel.Range;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: void processNote(org.apache.poi.hwpf.HWPFDocument,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range)>(r1, r2, r3);

        return;
    }

    protected void processHyperlink(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String)
    {
        org.w3c.dom.Text $r13;
        org.apache.poi.hwpf.HWPFDocumentCore r1;
        org.apache.poi.hwpf.usermodel.Range r2;
        org.w3c.dom.Element r3;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r5;
        int i0;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        java.lang.StringBuilder $r4, $r6, $r9, $r10, $r11;
        java.lang.String r7, $r8, $r12;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r3 := @parameter1: org.w3c.dom.Element;

        r2 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r7 := @parameter4: java.lang.String;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r1, i0, r2, r3);

        $r5 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (\u200b");

        $r8 = virtualinvoke r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\/", "\u200b\\/\u200b");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r12);

        interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        return;
    }

    protected void processImage(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture)
    {
        org.w3c.dom.Element r1;
        org.apache.poi.hwpf.usermodel.Picture r2;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        return;
    }

    protected void processImage(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture, java.lang.String)
    {
        org.w3c.dom.Element r1;
        org.apache.poi.hwpf.usermodel.Picture r2;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        java.lang.String r3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        r3 := @parameter3: java.lang.String;

        return;
    }

    protected void processImageWithoutPicturesManager(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture)
    {
        org.w3c.dom.Element r1;
        org.apache.poi.hwpf.usermodel.Picture r2;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        return;
    }

    protected void processLineBreak(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun)
    {
        org.w3c.dom.Text $r3;
        org.w3c.dom.Element r0;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r2;
        org.apache.poi.hwpf.usermodel.CharacterRun r4;
        org.apache.poi.hwpf.converter.WordToTextConverter r1;

        r1 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r2 = r1.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>("\n");

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        return;
    }

    protected void processNote(org.apache.poi.hwpf.HWPFDocument, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range)
    {
        org.w3c.dom.Text $r10, $r21, $r25;
        org.apache.poi.hwpf.HWPFDocument r22;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r4, $r12, $r16, $r24, $r26;
        int $i0;
        java.lang.String $r9, $r20;
        org.apache.poi.hwpf.usermodel.Range r23;
        org.w3c.dom.Element r2, $r11, $r13, $r14, $r27;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8, $r15, $r17, $r18, $r19;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r22 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r2 := @parameter1: org.w3c.dom.Element;

        r23 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: java.util.concurrent.atomic.AtomicInteger noteCounters>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r4 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u200b[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r4.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r9);

        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        $r11 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes>;

        if $r11 != null goto label1;

        $r26 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r27 = virtualinvoke $r26.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element createBlock()>();

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes> = $r27;

     label1:
        $r12 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r13 = virtualinvoke $r12.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r14 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.w3c.dom.Element notes>;

        interfaceinvoke $r14.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        $r16 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r16.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r20);

        interfaceinvoke $r13.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r21);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r22, -2147483648, r23, $r13);

        $r24 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r25 = virtualinvoke $r24.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>("\n");

        interfaceinvoke $r13.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r25);

        return;
    }

    protected boolean processOle2(org.apache.poi.hwpf.HWPFDocument, org.w3c.dom.Element, org.apache.poi.poifs.filesystem.Entry) throws java.lang.Exception
    {
        org.w3c.dom.Text $r20, $r29;
        org.apache.poi.poifs.filesystem.Entry r0;
        java.lang.reflect.Method $r4, $r9;
        boolean $z0, $z1;
        org.apache.poi.util.POILogger $r31, $r34;
        java.lang.Exception $r30;
        org.apache.poi.poifs.filesystem.DirectoryNode r1, $r21;
        org.apache.poi.hwpf.converter.WordToTextConverter r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r18, $r23, $r25, $r26, $r27, $r36, $r37, $r38;
        org.apache.poi.hwpf.HWPFDocument r40;
        java.lang.Object[] $r5, $r10;
        java.lang.Error $r33;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r15, $r24;
        java.lang.String $r19, $r22, $r28, $r32, $r35, $r39, r41;
        java.lang.Class[] $r3, $r8;
        org.w3c.dom.Element r12;
        java.lang.Class $r2, $r7;
        java.lang.Object $r6, $r11;

        r13 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r40 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r12 := @parameter1: org.w3c.dom.Element;

        r0 := @parameter2: org.apache.poi.poifs.filesystem.Entry;

        $z0 = r0 instanceof org.apache.poi.poifs.filesystem.DirectoryNode;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.poi.poifs.filesystem.DirectoryNode) r0;

        $z1 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("WordDocument");

        if $z1 == 0 goto label2;

        $r21 = (org.apache.poi.poifs.filesystem.DirectoryNode) r0;

        $r22 = staticinvoke <org.apache.poi.hwpf.converter.WordToTextConverter: java.lang.String getText(org.apache.poi.poifs.filesystem.DirectoryNode)>($r21);

        $r24 = r13.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = virtualinvoke $r24.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r28);

        interfaceinvoke r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r29);

        return 1;

     label2:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.poi.extractor.ExtractorFactory");

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Lorg/apache/poi/poifs/filesystem/DirectoryNode;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createExtractor", $r3);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

     label3:
        goto label5;

     label4:
        $r33 := @caughtexception;

        $r34 = <org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.util.POILogger logger>;

        $r35 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "There is an OLE object entry \'", $r35, "\', but there is no text extractor for this object type ", "or text extractor factory is not available: ", $r39);

        return 0;

     label5:
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = newarray (java.lang.Class)[0];

        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getText", $r8);

        $r10 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r10);

        r41 = (java.lang.String) $r11;

        $r15 = r13.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = virtualinvoke $r15.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>($r19);

        interfaceinvoke r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r20);

     label6:
        return 1;

     label7:
        $r30 := @caughtexception;

        $r31 = <org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.util.POILogger logger>;

        $r32 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        virtualinvoke $r31.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Throwable)>(7, "Unable to extract text from OLE entry \'", $r32, "\': ", $r30, $r30);

        return 0;

        catch java.lang.Error from label2 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    protected void processPageBreak(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element)
    {
        org.w3c.dom.Text $r4;
        org.w3c.dom.Element $r2, r5;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r1, $r3;
        org.apache.poi.hwpf.HWPFDocumentCore r6;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r6 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r5 := @parameter1: org.w3c.dom.Element;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element createBlock()>();

        $r3 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>("\n");

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return;
    }

    protected void processPageref(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String)
    {
        org.apache.poi.hwpf.usermodel.Range r2;
        org.w3c.dom.Element r3;
        org.apache.poi.hwpf.HWPFDocumentCore r1;
        int i0;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        java.lang.String r4;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r3 := @parameter1: org.w3c.dom.Element;

        r2 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r1, i0, r2, r3);

        return;
    }

    protected void processParagraph(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, int, org.apache.poi.hwpf.usermodel.Paragraph, java.lang.String)
    {
        org.w3c.dom.Text $r5, $r9;
        org.apache.poi.hwpf.HWPFDocumentCore r6;
        org.apache.poi.hwpf.usermodel.Paragraph r7;
        org.w3c.dom.Element $r2, r10;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r1, $r4, $r8;
        int i0;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        java.lang.String r3;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r6 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r10 := @parameter1: org.w3c.dom.Element;

        i0 := @parameter2: int;

        r7 := @parameter3: org.apache.poi.hwpf.usermodel.Paragraph;

        r3 := @parameter4: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element createParagraph()>();

        $r4 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(r3);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r6, i0, r7, $r2);

        $r8 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>("\n");

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        interfaceinvoke r10.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return;
    }

    protected void processSection(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Section, int)
    {
        org.w3c.dom.Text $r6;
        org.apache.poi.hwpf.HWPFDocumentCore r3;
        org.apache.poi.hwpf.usermodel.Section r4;
        org.w3c.dom.Element $r2, $r8;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r1, $r5, $r7;
        int i0;
        org.apache.poi.hwpf.converter.WordToTextConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r3 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r4 := @parameter1: org.apache.poi.hwpf.usermodel.Section;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element createBlock()>();

        virtualinvoke r0.<org.apache.poi.hwpf.converter.WordToTextConverter: void processParagraphes(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int)>(r3, $r2, r4, -2147483648);

        $r5 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>("\n");

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r7 = r0.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r8 = $r7.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element body>;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return;
    }

    protected void processTable(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Table)
    {
        org.w3c.dom.Text $r6, $r13;
        org.apache.poi.hwpf.HWPFDocumentCore r11;
        org.apache.poi.hwpf.usermodel.TableCell $r8;
        org.apache.poi.hwpf.usermodel.TableRow $r1;
        org.apache.poi.hwpf.converter.TextDocumentFacade $r3, $r5, $r9, $r12;
        int $i0, $i1, $i2, i3, i4;
        org.apache.poi.hwpf.usermodel.Table r0;
        org.w3c.dom.Element $r4, r7, $r10;
        org.apache.poi.hwpf.converter.WordToTextConverter r2;

        r2 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        r11 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r7 := @parameter1: org.w3c.dom.Element;

        r0 := @parameter2: org.apache.poi.hwpf.usermodel.Table;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Table: int numRows()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label5;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Table: org.apache.poi.hwpf.usermodel.TableRow getRow(int)>(i3);

        $r3 = r2.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element createTableRow()>();

        $i1 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.TableRow: int numCells()>();

        i4 = 0;

     label2:
        if i4 >= $i1 goto label4;

        $r8 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.TableCell getCell(int)>(i4);

        $r9 = r2.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r10 = virtualinvoke $r9.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Element createTableCell()>();

        if i4 == 0 goto label3;

        $r12 = r2.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r13 = virtualinvoke $r12.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>("\t");

        interfaceinvoke $r10.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

     label3:
        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Table: int getTableLevel()>();

        virtualinvoke r2.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r11, $i2, $r8, $r10);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        i4 = i4 + 1;

        goto label2;

     label4:
        $r5 = r2.<org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.hwpf.converter.TextDocumentFacade textDocumentFacade>;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.converter.TextDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>("\n");

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    public void setOutputSummaryInformation(boolean)
    {
        org.apache.poi.hwpf.converter.WordToTextConverter r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToTextConverter;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hwpf.converter.WordToTextConverter: boolean outputSummaryInformation> = z0;

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/converter/WordToTextConverter;");

        <org.apache.poi.hwpf.converter.WordToTextConverter: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
