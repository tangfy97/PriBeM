public class org.codehaus.groovy.reflection.ReflectionCache extends java.lang.Object
{
    private static java.util.Map primitiveTypesMap;
    static org.codehaus.groovy.reflection.TripleKeyHashMap mopNames;
    static final java.util.Map CACHED_CLASS_MAP;
    static org.codehaus.groovy.reflection.WeakDoubleKeyHashMap assignableMap;
    private static final org.codehaus.groovy.reflection.CachedClass STRING_CLASS;
    public static final org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS;
    public static final org.codehaus.groovy.reflection.CachedClass OBJECT_ARRAY_CLASS;
    static java.lang.Class class$java$lang$Byte;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Character;
    static java.lang.Class class$java$lang$Double;
    static java.lang.Class class$java$lang$Float;
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$java$lang$Long;
    static java.lang.Class class$java$lang$Short;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class array$Ljava$lang$Object;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Number;
    static java.lang.Class class$java$math$BigDecimal;
    static java.lang.Class class$java$math$BigInteger;
    static java.lang.Class class$groovy$lang$Closure;

    public void <init>()
    {
        org.codehaus.groovy.reflection.ReflectionCache r0;

        r0 := @this: org.codehaus.groovy.reflection.ReflectionCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class autoboxType(java.lang.Class)
    {
        java.util.Map $r1;
        java.lang.Class r0, r3, $r4;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Class) $r2;

        if r3 != null goto label1;

        $r4 = r0;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        return $r4;
    }

    public static java.lang.String getMOPMethodName(org.codehaus.groovy.reflection.CachedClass, java.lang.String, boolean)
    {
        java.lang.Throwable $r13;
        org.codehaus.groovy.reflection.TripleKeyHashMap $r0, $r3;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r11;
        int $i0;
        java.lang.Boolean $r4;
        java.lang.String r2, $r12, $r14, $r16;
        boolean z0;
        org.codehaus.groovy.reflection.TripleKeyHashMap$Entry $r5;
        org.codehaus.groovy.reflection.CachedClass r1;
        java.lang.Object $r6, $r15;

        r1 := @parameter0: org.codehaus.groovy.reflection.CachedClass;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.TripleKeyHashMap mopNames>;

        entermonitor $r0;

     label1:
        $r3 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.TripleKeyHashMap mopNames>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r5 = virtualinvoke $r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.TripleKeyHashMap$Entry getOrPut(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, $r4);

        $r6 = $r5.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object value>;

        if $r6 != null goto label4;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        if z0 == 0 goto label2;

        $r14 = "this$";

        goto label3;

     label2:
        $r14 = "super$";

     label3:
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $i0 = virtualinvoke r1.<org.codehaus.groovy.reflection.CachedClass: int getSuperClassDistance()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object value> = $r12;

     label4:
        $r15 = $r5.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object value>;

        $r16 = (java.lang.String) $r15;

        exitmonitor $r0;

     label5:
        return $r16;

     label6:
        $r13 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r13;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static boolean isArray(java.lang.Class)
    {
        int $i1;
        java.lang.Class r0;
        char $c0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 91 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void setAssignableFrom(java.lang.Class, java.lang.Class)
    {
        java.lang.Throwable $r7;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap $r0, $r3;
        java.lang.Boolean $r6;
        java.lang.Class r1, r2;
        java.lang.Object $r5;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry $r4;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r0 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap assignableMap>;

        entermonitor $r0;

     label1:
        $r3 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap assignableMap>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry getOrPut(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = $r4.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: java.lang.Object value>;

        if $r5 != null goto label2;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r4.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: java.lang.Object value> = $r6;

     label2:
        exitmonitor $r0;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static boolean isAssignableFrom(java.lang.Class, java.lang.Class)
    {
        java.lang.Throwable $r9;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap $r2, $r3;
        java.lang.Boolean $r7, $r8;
        java.lang.Class r0, r1;
        java.lang.Object $r5, $r6;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap assignableMap>;

        entermonitor $r2;

     label2:
        $r3 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap assignableMap>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry getOrPut(java.lang.Object,java.lang.Object)>(r0, r1);

        $r5 = $r4.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: java.lang.Object value>;

        if $r5 != null goto label3;

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r4.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: java.lang.Object value> = $r8;

     label3:
        $r6 = $r4.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: java.lang.Object value>;

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        exitmonitor $r2;

     label4:
        return $z0;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r9;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static boolean arrayContentsEq(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        if r0 != null goto label04;

        if r1 == null goto label01;

        $i4 = lengthof r1;

        if $i4 != 0 goto label02;

     label01:
        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        return $z0;

     label04:
        if r1 != null goto label07;

        $i3 = lengthof r0;

        if $i3 != 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        return $z1;

     label07:
        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label08;

        return 0;

     label08:
        i5 = 0;

     label09:
        $i2 = lengthof r0;

        if i5 >= $i2 goto label11;

        $r3 = r0[i5];

        $r2 = r1[i5];

        if $r3 == $r2 goto label10;

        return 0;

     label10:
        i5 = i5 + 1;

        goto label09;

     label11:
        return 1;
    }

    public static org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)
    {
        org.codehaus.groovy.reflection.stdclasses.FloatCachedClass $r94;
        java.util.Map $r3, $r4, $r12, $r85, $r86;
        org.codehaus.groovy.reflection.stdclasses.IntegerCachedClass $r90;
        org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass $r97, $r103;
        java.lang.Throwable $r59, $r60;
        org.codehaus.groovy.reflection.stdclasses.ByteCachedClass $r99;
        java.lang.String $r46;
        java.lang.ref.SoftReference r63, $r88, $r106;
        org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass $r91;
        org.codehaus.groovy.reflection.stdclasses.ArrayCachedClass $r101;
        org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass $r98;
        org.codehaus.groovy.reflection.stdclasses.LongCachedClass $r93;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.codehaus.groovy.reflection.CachedClass $r14, $r56, $r57, $r58, r64, r84, $r100, $r105;
        org.codehaus.groovy.reflection.stdclasses.NumberCachedClass $r89;
        org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass $r92;
        org.codehaus.groovy.reflection.stdclasses.BooleanCachedClass $r96, $r102;
        org.codehaus.groovy.reflection.stdclasses.CachedClosureClass $r104;
        org.codehaus.groovy.reflection.stdclasses.ShortCachedClass $r95;
        int $i1;
        char $c0;
        java.lang.Class r0, $r1, $r2, $r6, $r7, $r8, $r10, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r47, $r48, $r49, $r61, $r62, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83;
        java.lang.Object $r5, $r13, $r55, $r87;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label01;

        return null;

     label01:
        $r1 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Object>;

        if $r1 != null goto label02;

        $r61 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Object> = $r61;

        goto label03;

     label02:
        $r61 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Object>;

     label03:
        if r0 != $r61 goto label04;

        $r58 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        return $r58;

     label04:
        $r2 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$String>;

        if $r2 != null goto label05;

        $r62 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$String> = $r62;

        goto label06;

     label05:
        $r62 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$String>;

     label06:
        if r0 != $r62 goto label07;

        $r57 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass STRING_CLASS>;

        return $r57;

     label07:
        $r3 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map CACHED_CLASS_MAP>;

        entermonitor $r3;

     label08:
        $r4 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map CACHED_CLASS_MAP>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r63 = (java.lang.ref.SoftReference) $r5;

        exitmonitor $r3;

     label09:
        goto label12;

     label10:
        $r60 := @caughtexception;

        exitmonitor $r3;

     label11:
        throw $r60;

     label12:
        if r63 == null goto label13;

        $r55 = virtualinvoke r63.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r56 = (org.codehaus.groovy.reflection.CachedClass) $r55;

        r64 = $r56;

        if $r56 != null goto label96;

     label13:
        $r6 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Number>;

        if $r6 != null goto label14;

        $r65 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Number");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Number> = $r65;

        goto label15;

     label14:
        $r65 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Number>;

     label15:
        $z0 = virtualinvoke $r65.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label16;

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label76;

     label16:
        $r7 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Number>;

        if $r7 != null goto label17;

        $r66 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Number");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Number> = $r66;

        goto label18;

     label17:
        $r66 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Number>;

     label18:
        if r0 != $r66 goto label19;

        $r89 = new org.codehaus.groovy.reflection.stdclasses.NumberCachedClass;

        specialinvoke $r89.<org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: void <init>(java.lang.Class)>(r0);

        r64 = $r89;

        goto label87;

     label19:
        $r8 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer>;

        if $r8 != null goto label20;

        $r67 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer> = $r67;

        goto label21;

     label20:
        $r67 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer>;

     label21:
        if r0 == $r67 goto label22;

        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r15 goto label27;

     label22:
        $r90 = new org.codehaus.groovy.reflection.stdclasses.IntegerCachedClass;

        $r10 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer>;

        if $r10 != null goto label23;

        $r68 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer> = $r68;

        goto label24;

     label23:
        $r68 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer>;

     label24:
        if r0 != $r68 goto label25;

        $z3 = 1;

        goto label26;

     label25:
        $z3 = 0;

     label26:
        specialinvoke $r90.<org.codehaus.groovy.reflection.stdclasses.IntegerCachedClass: void <init>(java.lang.Class,boolean)>(r0, $z3);

        r64 = $r90;

        goto label87;

     label27:
        $r16 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double>;

        if $r16 != null goto label28;

        $r69 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double> = $r69;

        goto label29;

     label28:
        $r69 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double>;

     label29:
        if r0 == $r69 goto label30;

        $r19 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r19 goto label35;

     label30:
        $r91 = new org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass;

        $r18 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double>;

        if $r18 != null goto label31;

        $r70 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double> = $r70;

        goto label32;

     label31:
        $r70 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double>;

     label32:
        if r0 != $r70 goto label33;

        $z4 = 1;

        goto label34;

     label33:
        $z4 = 0;

     label34:
        specialinvoke $r91.<org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass: void <init>(java.lang.Class,boolean)>(r0, $z4);

        r64 = $r91;

        goto label87;

     label35:
        $r20 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$math$BigDecimal>;

        if $r20 != null goto label36;

        $r71 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.math.BigDecimal");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$math$BigDecimal> = $r71;

        goto label37;

     label36:
        $r71 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$math$BigDecimal>;

     label37:
        if r0 != $r71 goto label38;

        $r92 = new org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass;

        specialinvoke $r92.<org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass: void <init>(java.lang.Class)>(r0);

        r64 = $r92;

        goto label87;

     label38:
        $r21 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long>;

        if $r21 != null goto label39;

        $r72 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long> = $r72;

        goto label40;

     label39:
        $r72 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long>;

     label40:
        if r0 == $r72 goto label41;

        $r24 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r24 goto label46;

     label41:
        $r93 = new org.codehaus.groovy.reflection.stdclasses.LongCachedClass;

        $r23 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long>;

        if $r23 != null goto label42;

        $r73 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long> = $r73;

        goto label43;

     label42:
        $r73 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long>;

     label43:
        if r0 != $r73 goto label44;

        $z5 = 1;

        goto label45;

     label44:
        $z5 = 0;

     label45:
        specialinvoke $r93.<org.codehaus.groovy.reflection.stdclasses.LongCachedClass: void <init>(java.lang.Class,boolean)>(r0, $z5);

        r64 = $r93;

        goto label87;

     label46:
        $r25 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float>;

        if $r25 != null goto label47;

        $r74 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float> = $r74;

        goto label48;

     label47:
        $r74 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float>;

     label48:
        if r0 == $r74 goto label49;

        $r28 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r28 goto label54;

     label49:
        $r94 = new org.codehaus.groovy.reflection.stdclasses.FloatCachedClass;

        $r27 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float>;

        if $r27 != null goto label50;

        $r75 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float> = $r75;

        goto label51;

     label50:
        $r75 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float>;

     label51:
        if r0 != $r75 goto label52;

        $z6 = 1;

        goto label53;

     label52:
        $z6 = 0;

     label53:
        specialinvoke $r94.<org.codehaus.groovy.reflection.stdclasses.FloatCachedClass: void <init>(java.lang.Class,boolean)>(r0, $z6);

        r64 = $r94;

        goto label87;

     label54:
        $r29 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short>;

        if $r29 != null goto label55;

        $r76 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short> = $r76;

        goto label56;

     label55:
        $r76 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short>;

     label56:
        if r0 == $r76 goto label57;

        $r32 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r32 goto label62;

     label57:
        $r95 = new org.codehaus.groovy.reflection.stdclasses.ShortCachedClass;

        $r31 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short>;

        if $r31 != null goto label58;

        $r77 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short> = $r77;

        goto label59;

     label58:
        $r77 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short>;

     label59:
        if r0 != $r77 goto label60;

        $z7 = 1;

        goto label61;

     label60:
        $z7 = 0;

     label61:
        specialinvoke $r95.<org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: void <init>(java.lang.Class,boolean)>(r0, $z7);

        r64 = $r95;

        goto label87;

     label62:
        $r33 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r33 goto label63;

        $r96 = new org.codehaus.groovy.reflection.stdclasses.BooleanCachedClass;

        specialinvoke $r96.<org.codehaus.groovy.reflection.stdclasses.BooleanCachedClass: void <init>(java.lang.Class,boolean)>(r0, 0);

        r64 = $r96;

        goto label87;

     label63:
        $r34 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r34 goto label64;

        $r97 = new org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass;

        specialinvoke $r97.<org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: void <init>(java.lang.Class,boolean)>(r0, 0);

        r64 = $r97;

        goto label87;

     label64:
        $r35 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$math$BigInteger>;

        if $r35 != null goto label65;

        $r78 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.math.BigInteger");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$math$BigInteger> = $r78;

        goto label66;

     label65:
        $r78 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$math$BigInteger>;

     label66:
        if r0 != $r78 goto label67;

        $r98 = new org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass;

        specialinvoke $r98.<org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: void <init>(java.lang.Class)>(r0);

        r64 = $r98;

        goto label87;

     label67:
        $r36 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte>;

        if $r36 != null goto label68;

        $r79 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte> = $r79;

        goto label69;

     label68:
        $r79 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte>;

     label69:
        if r0 == $r79 goto label70;

        $r39 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r39 goto label75;

     label70:
        $r99 = new org.codehaus.groovy.reflection.stdclasses.ByteCachedClass;

        $r38 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte>;

        if $r38 != null goto label71;

        $r80 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte> = $r80;

        goto label72;

     label71:
        $r80 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte>;

     label72:
        if r0 != $r80 goto label73;

        $z8 = 1;

        goto label74;

     label73:
        $z8 = 0;

     label74:
        specialinvoke $r99.<org.codehaus.groovy.reflection.stdclasses.ByteCachedClass: void <init>(java.lang.Class,boolean)>(r0, $z8);

        r64 = $r99;

        goto label87;

     label75:
        $r100 = new org.codehaus.groovy.reflection.CachedClass;

        specialinvoke $r100.<org.codehaus.groovy.reflection.CachedClass: void <init>(java.lang.Class)>(r0);

        r64 = $r100;

        goto label87;

     label76:
        $r46 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $c0 = virtualinvoke $r46.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 91 goto label77;

        $r101 = new org.codehaus.groovy.reflection.stdclasses.ArrayCachedClass;

        specialinvoke $r101.<org.codehaus.groovy.reflection.stdclasses.ArrayCachedClass: void <init>(java.lang.Class)>(r0);

        r64 = $r101;

        goto label87;

     label77:
        $r47 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Boolean>;

        if $r47 != null goto label78;

        $r81 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Boolean> = $r81;

        goto label79;

     label78:
        $r81 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Boolean>;

     label79:
        if r0 != $r81 goto label80;

        $r102 = new org.codehaus.groovy.reflection.stdclasses.BooleanCachedClass;

        specialinvoke $r102.<org.codehaus.groovy.reflection.stdclasses.BooleanCachedClass: void <init>(java.lang.Class,boolean)>(r0, 1);

        r64 = $r102;

        goto label87;

     label80:
        $r48 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Character>;

        if $r48 != null goto label81;

        $r82 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Character> = $r82;

        goto label82;

     label81:
        $r82 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Character>;

     label82:
        if r0 != $r82 goto label83;

        $r103 = new org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass;

        specialinvoke $r103.<org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: void <init>(java.lang.Class,boolean)>(r0, 1);

        r64 = $r103;

        goto label87;

     label83:
        $r49 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$groovy$lang$Closure>;

        if $r49 != null goto label84;

        $r83 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$groovy$lang$Closure> = $r83;

        goto label85;

     label84:
        $r83 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$groovy$lang$Closure>;

     label85:
        $z2 = virtualinvoke $r83.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label86;

        $r104 = new org.codehaus.groovy.reflection.stdclasses.CachedClosureClass;

        specialinvoke $r104.<org.codehaus.groovy.reflection.stdclasses.CachedClosureClass: void <init>(java.lang.Class)>(r0);

        r64 = $r104;

        goto label87;

     label86:
        $r105 = new org.codehaus.groovy.reflection.CachedClass;

        specialinvoke $r105.<org.codehaus.groovy.reflection.CachedClass: void <init>(java.lang.Class)>(r0);

        r64 = $r105;

     label87:
        r84 = null;

        $r85 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map CACHED_CLASS_MAP>;

        entermonitor $r85;

     label88:
        $r86 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map CACHED_CLASS_MAP>;

        $r87 = interfaceinvoke $r86.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r88 = (java.lang.ref.SoftReference) $r87;

        if $r88 == null goto label89;

        $r13 = virtualinvoke $r88.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r14 = (org.codehaus.groovy.reflection.CachedClass) $r13;

        r84 = $r14;

        if $r14 != null goto label90;

     label89:
        $r12 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map CACHED_CLASS_MAP>;

        $r106 = new java.lang.ref.SoftReference;

        specialinvoke $r106.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r64);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r106);

        goto label91;

     label90:
        r64 = $r14;

     label91:
        exitmonitor $r85;

     label92:
        goto label95;

     label93:
        $r59 := @caughtexception;

        exitmonitor $r85;

     label94:
        throw $r59;

     label95:
        if null != r84 goto label96;

        virtualinvoke r64.<org.codehaus.groovy.reflection.CachedClass: void initialize()>();

     label96:
        return r64;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label88 to label92 with label93;
        catch java.lang.Throwable from label93 to label94 with label93;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap $r27;
        java.util.Map $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24;
        org.codehaus.groovy.reflection.CachedClass $r32;
        java.util.HashMap $r0;
        org.codehaus.groovy.reflection.TripleKeyHashMap $r25;
        org.codehaus.groovy.reflection.ReflectionCache$1 $r29;
        java.util.WeakHashMap $r26;
        org.codehaus.groovy.reflection.stdclasses.StringCachedClass $r28;
        java.lang.Class $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap> = $r0;

        $r3 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        $r1 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte>;

        if $r1 != null goto label01;

        $r33 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte> = $r33;

        goto label02;

     label01:
        $r33 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Byte>;

     label02:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r33);

        $r6 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r4 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Boolean>;

        if $r4 != null goto label03;

        $r34 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Boolean> = $r34;

        goto label04;

     label03:
        $r34 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Boolean>;

     label04:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r34);

        $r9 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r8 = <java.lang.Character: java.lang.Class TYPE>;

        $r7 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Character>;

        if $r7 != null goto label05;

        $r35 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Character> = $r35;

        goto label06;

     label05:
        $r35 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Character>;

     label06:
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r35);

        $r12 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r11 = <java.lang.Double: java.lang.Class TYPE>;

        $r10 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double>;

        if $r10 != null goto label07;

        $r36 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double> = $r36;

        goto label08;

     label07:
        $r36 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Double>;

     label08:
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r36);

        $r15 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r14 = <java.lang.Float: java.lang.Class TYPE>;

        $r13 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float>;

        if $r13 != null goto label09;

        $r37 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float> = $r37;

        goto label10;

     label09:
        $r37 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Float>;

     label10:
        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r37);

        $r18 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r17 = <java.lang.Integer: java.lang.Class TYPE>;

        $r16 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer>;

        if $r16 != null goto label11;

        $r38 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer> = $r38;

        goto label12;

     label11:
        $r38 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Integer>;

     label12:
        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r38);

        $r21 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r20 = <java.lang.Long: java.lang.Class TYPE>;

        $r19 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long>;

        if $r19 != null goto label13;

        $r39 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long> = $r39;

        goto label14;

     label13:
        $r39 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Long>;

     label14:
        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r39);

        $r24 = <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map primitiveTypesMap>;

        $r23 = <java.lang.Short: java.lang.Class TYPE>;

        $r22 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short>;

        if $r22 != null goto label15;

        $r40 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short> = $r40;

        goto label16;

     label15:
        $r40 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Short>;

     label16:
        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r40);

        $r25 = new org.codehaus.groovy.reflection.TripleKeyHashMap;

        specialinvoke $r25.<org.codehaus.groovy.reflection.TripleKeyHashMap: void <init>()>();

        <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.TripleKeyHashMap mopNames> = $r25;

        $r26 = new java.util.WeakHashMap;

        specialinvoke $r26.<java.util.WeakHashMap: void <init>()>();

        <org.codehaus.groovy.reflection.ReflectionCache: java.util.Map CACHED_CLASS_MAP> = $r26;

        $r27 = new org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        specialinvoke $r27.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: void <init>()>();

        <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap assignableMap> = $r27;

        $r28 = new org.codehaus.groovy.reflection.stdclasses.StringCachedClass;

        specialinvoke $r28.<org.codehaus.groovy.reflection.stdclasses.StringCachedClass: void <init>()>();

        <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass STRING_CLASS> = $r28;

        $r29 = new org.codehaus.groovy.reflection.ReflectionCache$1;

        $r30 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Object>;

        if $r30 != null goto label17;

        $r41 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Object> = $r41;

        goto label18;

     label17:
        $r41 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$java$lang$Object>;

     label18:
        specialinvoke $r29.<org.codehaus.groovy.reflection.ReflectionCache$1: void <init>(java.lang.Class)>($r41);

        <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS> = $r29;

        $r31 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class array$Ljava$lang$Object>;

        if $r31 != null goto label19;

        $r42 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class class$(java.lang.String)>("[Ljava.lang.Object;");

        <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class array$Ljava$lang$Object> = $r42;

        goto label20;

     label19:
        $r42 = <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class array$Ljava$lang$Object>;

     label20:
        $r32 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>($r42);

        <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_ARRAY_CLASS> = $r32;

        return;
    }
}
