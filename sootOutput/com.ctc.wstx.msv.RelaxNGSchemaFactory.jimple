public class com.ctc.wstx.msv.RelaxNGSchemaFactory extends org.codehaus.stax2.validation.XMLValidationSchemaFactory
{
    protected final javax.xml.parsers.SAXParserFactory mSaxFactory;
    protected final com.ctc.wstx.api.ValidatorConfig mConfig;
    protected final com.sun.msv.reader.GrammarReaderController mDummyController;

    public void <init>()
    {
        com.sun.msv.reader.util.IgnoreController $r5;
        javax.xml.parsers.SAXParserFactory $r2, $r3;
        com.ctc.wstx.api.ValidatorConfig $r4;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r0;
        com.sun.msv.reader.GrammarReaderController $r6;

        r0 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        specialinvoke r0.<org.codehaus.stax2.validation.XMLValidationSchemaFactory: void <init>()>();

        $r5 = new com.sun.msv.reader.util.IgnoreController;

        specialinvoke $r5.<com.sun.msv.reader.util.IgnoreController: void <init>()>();

        $r6 = (com.sun.msv.reader.GrammarReaderController) $r5;

        r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: com.sun.msv.reader.GrammarReaderController mDummyController> = $r6;

        $r2 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: javax.xml.parsers.SAXParserFactory mSaxFactory> = $r2;

        $r3 = r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: javax.xml.parsers.SAXParserFactory mSaxFactory>;

        virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r4 = staticinvoke <com.ctc.wstx.api.ValidatorConfig: com.ctc.wstx.api.ValidatorConfig createDefaults()>();

        r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: com.ctc.wstx.api.ValidatorConfig mConfig> = $r4;

        return;
    }

    public boolean isPropertySupported(java.lang.String)
    {
        com.ctc.wstx.api.ValidatorConfig $r2;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: com.ctc.wstx.api.ValidatorConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.ctc.wstx.api.ValidatorConfig: boolean isPropertySupported(java.lang.String)>(r1);

        return $z0;
    }

    public boolean setProperty(java.lang.String, java.lang.Object)
    {
        com.ctc.wstx.api.ValidatorConfig $r3;
        java.lang.Object r2;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: com.ctc.wstx.api.ValidatorConfig mConfig>;

        $z0 = virtualinvoke $r3.<com.ctc.wstx.api.ValidatorConfig: boolean setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.api.ValidatorConfig $r2;
        java.lang.Object $r3;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: com.ctc.wstx.api.ValidatorConfig mConfig>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.api.ValidatorConfig: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.xml.sax.InputSource $r0;
        org.codehaus.stax2.validation.XMLValidationSchema $r6;
        java.lang.String r2, r3, r4;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r5;
        java.io.InputStream r1;

        r5 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setEncoding(java.lang.String)>(r2);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>(r3);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r4);

        $r6 = virtualinvoke r5.<com.ctc.wstx.msv.RelaxNGSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchema loadSchema(org.xml.sax.InputSource,java.lang.Object)>($r0, r4);

        return $r6;
    }

    public org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.Reader, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.xml.sax.InputSource $r0;
        org.codehaus.stax2.validation.XMLValidationSchema $r5;
        java.io.Reader r1;
        java.lang.String r2, r3;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r4;

        r4 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r1);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>(r2);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r3);

        $r5 = virtualinvoke r4.<com.ctc.wstx.msv.RelaxNGSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchema loadSchema(org.xml.sax.InputSource,java.lang.Object)>($r0, r3);

        return $r5;
    }

    public org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.net.URL) throws javax.xml.stream.XMLStreamException
    {
        org.xml.sax.InputSource $r2;
        java.net.URL r0;
        org.codehaus.stax2.validation.XMLValidationSchema $r5;
        java.io.IOException $r6;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r4;
        com.ctc.wstx.exc.WstxIOException $r7;
        java.lang.String $r3;
        java.io.InputStream $r1;

        r4 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r0 := @parameter0: java.net.URL;

     label1:
        $r1 = staticinvoke <com.ctc.wstx.util.URLUtil: java.io.InputStream optimizedStreamFromURL(java.net.URL)>(r0);

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r1);

        $r3 = virtualinvoke r0.<java.net.URL: java.lang.String toExternalForm()>();

        virtualinvoke $r2.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r3);

        $r5 = virtualinvoke r4.<com.ctc.wstx.msv.RelaxNGSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchema loadSchema(org.xml.sax.InputSource,java.lang.Object)>($r2, r0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r7.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r6);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.File) throws javax.xml.stream.XMLStreamException
    {
        java.net.URL $r2;
        com.ctc.wstx.exc.WstxIOException $r5;
        org.codehaus.stax2.validation.XMLValidationSchema $r3;
        java.io.IOException $r4;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r0;
        java.io.File r1;

        r0 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r1 := @parameter0: java.io.File;

     label1:
        $r2 = virtualinvoke r1.<java.io.File: java.net.URL toURL()>();

        $r3 = virtualinvoke r0.<com.ctc.wstx.msv.RelaxNGSchemaFactory: org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.net.URL)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r5.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected org.codehaus.stax2.validation.XMLValidationSchema loadSchema(org.xml.sax.InputSource, java.lang.Object) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.parsers.SAXParserFactory $r3;
        com.ctc.wstx.msv.RelaxNGSchemaFactory r2;
        java.lang.StringBuffer $r7, $r9, $r10, $r15, $r16, $r17, $r20, $r21;
        javax.xml.stream.XMLStreamException $r22;
        java.lang.String $r11, r12, r18;
        com.ctc.wstx.msv.RelaxNGSchema $r23;
        com.sun.msv.grammar.trex.TREXGrammar $r4;
        org.xml.sax.InputSource r1;
        com.sun.msv.reader.GrammarReaderController $r24;
        java.lang.Object r8;
        com.ctc.wstx.msv.RelaxNGSchemaFactory$MyGrammarController $r19;

        r2 := @this: com.ctc.wstx.msv.RelaxNGSchemaFactory;

        r1 := @parameter0: org.xml.sax.InputSource;

        r8 := @parameter1: java.lang.Object;

        $r19 = new com.ctc.wstx.msv.RelaxNGSchemaFactory$MyGrammarController;

        specialinvoke $r19.<com.ctc.wstx.msv.RelaxNGSchemaFactory$MyGrammarController: void <init>()>();

        $r3 = r2.<com.ctc.wstx.msv.RelaxNGSchemaFactory: javax.xml.parsers.SAXParserFactory mSaxFactory>;

        $r24 = (com.sun.msv.reader.GrammarReaderController) $r19;

        $r4 = staticinvoke <com.sun.msv.reader.trex.ng.RELAXNGReader: com.sun.msv.grammar.trex.TREXGrammar parse(org.xml.sax.InputSource,javax.xml.parsers.SAXParserFactory,com.sun.msv.reader.GrammarReaderController)>(r1, $r3, $r24);

        if $r4 != null goto label2;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to load RelaxNG from \'");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r18 = $r11;

        r12 = $r19.<com.ctc.wstx.msv.RelaxNGSchemaFactory$MyGrammarController: java.lang.String mErrorMsg>;

        if r12 == null goto label1;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r22 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r22.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>(r18);

        throw $r22;

     label2:
        $r23 = new com.ctc.wstx.msv.RelaxNGSchema;

        specialinvoke $r23.<com.ctc.wstx.msv.RelaxNGSchema: void <init>(com.sun.msv.grammar.trex.TREXGrammar)>($r4);

        return $r23;
    }
}
