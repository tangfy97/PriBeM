class org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1 extends java.lang.Object implements org.waveprotocol.wave.model.operation.SilentOperationSink
{
    final org.waveprotocol.wave.model.wave.opbased.OpBasedBlip this$0;

    void <init>(org.waveprotocol.wave.model.wave.opbased.OpBasedBlip)
    {
        org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1 r0;
        org.waveprotocol.wave.model.wave.opbased.OpBasedBlip r1;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.opbased.OpBasedBlip;

        r0.<org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1: org.waveprotocol.wave.model.wave.opbased.OpBasedBlip this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1 r0;
        org.waveprotocol.wave.model.wave.opbased.OpBasedBlip $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r2 = r0.<org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1: org.waveprotocol.wave.model.wave.opbased.OpBasedBlip this$0>;

        staticinvoke <org.waveprotocol.wave.model.wave.opbased.OpBasedBlip: void access$000(org.waveprotocol.wave.model.wave.opbased.OpBasedBlip,org.waveprotocol.wave.model.document.operation.DocOp)>($r2, r1);

        return;
    }

    public volatile void consume(org.waveprotocol.wave.model.operation.Operation)
    {
        org.waveprotocol.wave.model.operation.Operation r1;
        org.waveprotocol.wave.model.document.operation.DocOp $r2;
        org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

        $r2 = (org.waveprotocol.wave.model.document.operation.DocOp) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.wave.opbased.OpBasedBlip$1: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>($r2);

        return;
    }
}
