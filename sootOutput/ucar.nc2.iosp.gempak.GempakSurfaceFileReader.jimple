public class ucar.nc2.iosp.gempak.GempakSurfaceFileReader extends ucar.nc2.iosp.gempak.AbstractGempakStationFileReader
{
    public static final java.lang.String SFTX;
    public static final java.lang.String SFDT;
    public static final java.lang.String SFSP;
    public static final java.lang.String STANDARD;
    public static final java.lang.String CLIMATE;
    public static final java.lang.String SHIP;

    void <init>()
    {
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        specialinvoke r0.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: void <init>()>();

        return;
    }

    public static ucar.nc2.iosp.gempak.GempakSurfaceFileReader getInstance(ucar.unidata.io.RandomAccessFile, boolean) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader $r0;
        boolean z0;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        z0 := @parameter1: boolean;

        $r0 = new ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void <init>()>();

        virtualinvoke $r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void init(ucar.unidata.io.RandomAccessFile,boolean)>(r1, z0);

        return $r0;
    }

    protected boolean init() throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: boolean init(boolean)>(1);

        return $z0;
    }

    protected boolean init(boolean) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakFileReader$DMPart $r12;
        ucar.unidata.io.RandomAccessFile $r4;
        ucar.nc2.iosp.gempak.GempakFileReader$DMLabel $r1, $r2, $r10;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, $r9, $r13, $r14;
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: boolean init(boolean)>(z0);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i0 = $r1.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kftype>;

        if $i0 == 1 goto label2;

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void logError(java.lang.String)>("not a surface data file ");

        return 0;

     label2:
        $r2 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i1 = $r2.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kfsrce>;

        if $i1 != 100 goto label3;

        $r10 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakFileReader$DMLabel dmLabel>;

        $i2 = $r10.<ucar.nc2.iosp.gempak.GempakFileReader$DMLabel: int kprt>;

        if $i2 != 1 goto label3;

        $r14 = "SFTX";

        $r13 = "SFTX";

        goto label4;

     label3:
        $r14 = "SFDT";

        $r13 = "SFDT";

     label4:
        $r12 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakFileReader$DMPart getPart(java.lang.String)>($r13);

        if $r12 != null goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No part named ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void logError(java.lang.String)>($r9);

        return 0;

     label5:
        i3 = $r12.<ucar.nc2.iosp.gempak.GempakFileReader$DMPart: int kparms>;

        $z2 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: boolean readStationsAndTimes(boolean)>(1);

        if $z2 != 0 goto label6;

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void logError(java.lang.String)>("Unable to read stations and times");

        return 0;

     label6:
        $r3 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String subType>;

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("standard");

        if $z3 == 0 goto label7;

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void setBufferSize(int)>(256);

     label7:
        return 1;
    }

    protected java.util.List makeDateList(boolean)
    {
        java.util.List $r2;
        java.lang.String $r1;
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader r0;
        boolean $z0, z1, $z2;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        z1 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ship");

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r2 = specialinvoke r0.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List makeDateList(boolean)>($z2);

        return $r2;
    }

    protected void makeFileSubType()
    {
        ucar.nc2.iosp.gempak.GempakFileReader$Key $r1, $r3;
        java.lang.String r2, $r4;
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader r0;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakFileReader$Key findKey(java.lang.String)>("SLAT");

        r2 = $r1.<ucar.nc2.iosp.gempak.GempakFileReader$Key: java.lang.String type>;

        $r3 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakFileReader$Key findKey(java.lang.String)>("DATE");

        $r4 = $r3.<ucar.nc2.iosp.gempak.GempakFileReader$Key: java.lang.String type>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ROW");

        if $z1 == 0 goto label1;

        r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String subType> = "climate";

        goto label3;

     label1:
        r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String subType> = "standard";

        goto label3;

     label2:
        r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String subType> = "ship";

     label3:
        return;
    }

    public void printOb(int, int)
    {
        ucar.nc2.iosp.gempak.GempakStation r6;
        int[] r20;
        boolean $z0, $z1, $z2;
        java.util.List $r2, $r4, $r9;
        float $f0;
        java.lang.StringBuilder $r7;
        float[] r19;
        ucar.nc2.iosp.gempak.GempakParameter r17;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String $r1, $r8, $r11, $r12, $r14, $r15, $r22;
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader r0;
        double $d0;
        java.io.PrintStream $r3, $r21;
        java.util.Iterator $r10;
        java.io.IOException $r16;
        ucar.nc2.iosp.gempak.GempakFileReader$RData r18;
        java.lang.Object $r5, $r13;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("climate");

        if $z0 == 0 goto label01;

        $i7 = i3;

        goto label02;

     label01:
        $i7 = i0;

     label02:
        $r2 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.util.List getStations()>();

        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label03;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i7 <= $i1 goto label04;

     label03:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\nNo data available");

        return;

     label04:
        $r4 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.util.List getStations()>();

        $i2 = $i7 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2);

        r6 = (ucar.nc2.iosp.gempak.GempakStation) $r5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nStation:\n");

        $r8 = virtualinvoke r6.<ucar.nc2.iosp.gempak.GempakStation: java.lang.String toString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nObs\n\t");

        $r9 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.util.List getParameters(java.lang.String)>("SFDT");

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r13 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r17 = (ucar.nc2.iosp.gempak.GempakParameter) $r13;

        $r14 = virtualinvoke r17.<ucar.nc2.iosp.gempak.GempakParameter: java.lang.String getName()>();

        $r15 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padLeft(java.lang.String,int)>($r14, 7);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        goto label05;

     label06:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label07:
        r18 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakFileReader$RData DM_RDTR(int,int,java.lang.String)>(i3, i0, "SFDT");

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        r18 = null;

     label10:
        if r18 != null goto label11;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Data Available");

        goto label14;

     label11:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        r19 = r18.<ucar.nc2.iosp.gempak.GempakFileReader$RData: float[] data>;

        i8 = 0;

     label12:
        $i4 = lengthof r19;

        if i8 >= $i4 goto label13;

        $f0 = r19[i8];

        $d0 = (double) $f0;

        $r11 = staticinvoke <ucar.unidata.util.Format: java.lang.String formatDouble(double,int,int)>($d0, 7, 1);

        $r12 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padLeft(java.lang.String,int)>($r11, 7);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        i8 = i8 + 1;

        goto label12;

     label13:
        r20 = r18.<ucar.nc2.iosp.gempak.GempakFileReader$RData: int[] header>;

        $i5 = lengthof r20;

        if $i5 <= 0 goto label14;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nOb Time = ");

        $i6 = r20[0];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

     label14:
        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r22 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r22);

        return;

        catch java.io.IOException from label07 to label08 with label09;
    }

    public java.lang.String getSurfaceFileType()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String getFileSubType()>();

        return $r1;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2;
        java.lang.String[] r0;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r1, $r7, $r9, $r10, $r11;
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader $r3;
        java.io.PrintStream $r5, $r12, $r14;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r4, $r6, $r8;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("need to supply a GEMPAK surface file name");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        staticinvoke <ucar.nc2.iosp.gempak.GempakParameters: void addParameters(java.lang.String)>("resources/nj22/tables/gempak/params.tbl");

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("unable to init param tables");

     label4:
        $r1 = r0[0];

        $r2 = staticinvoke <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.unidata.io.RandomAccessFile getFile(java.lang.String)>($r1);

        $r3 = staticinvoke <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: ucar.nc2.iosp.gempak.GempakSurfaceFileReader getInstance(ucar.unidata.io.RandomAccessFile,boolean)>($r2, 1);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type = ");

        $r7 = virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String getSurfaceFileType()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void printFileLabel()>();

        virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void printKeys()>();

        virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void printHeaders()>();

        virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void printParts()>();

        i3 = 1;

        i4 = 1;

        $i1 = lengthof r0;

        if $i1 <= 1 goto label5;

        $r11 = r0[1];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

     label5:
        $i2 = lengthof r0;

        if $i2 <= 2 goto label6;

        $r10 = r0[2];

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

     label6:
        virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void printOb(int,int)>(i3, i4);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String SHIP> = "ship";

        <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String CLIMATE> = "climate";

        <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String STANDARD> = "standard";

        <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String SFSP> = "SFSP";

        <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String SFDT> = "SFDT";

        <ucar.nc2.iosp.gempak.GempakSurfaceFileReader: java.lang.String SFTX> = "SFTX";

        return;
    }
}
