public class org.apache.lucene.queryparser.surround.query.SrndPrefixQuery extends org.apache.lucene.queryparser.surround.query.SimpleTerm
{
    private final org.apache.lucene.util.BytesRef prefixRef;
    private final java.lang.String prefix;
    private final char truncator;

    public void <init>(java.lang.String, boolean, char)
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery r0;
        org.apache.lucene.util.BytesRef $r2;
        char c0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        c0 := @parameter2: char;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.query.SimpleTerm: void <init>(boolean)>(z0);

        r0.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: java.lang.String prefix> = r1;

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r1);

        r0.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: org.apache.lucene.util.BytesRef prefixRef> = $r2;

        r0.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: char truncator> = c0;

        return;
    }

    public java.lang.String getPrefix()
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        $r1 = r0.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: java.lang.String prefix>;

        return $r1;
    }

    public char getSuffixOperator()
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery r0;
        char $c0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        $c0 = r0.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: char truncator>;

        return $c0;
    }

    public org.apache.lucene.index.Term getLucenePrefixTerm(java.lang.String)
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery r2;
        org.apache.lucene.index.Term $r0;
        java.lang.String r1, $r3;

        r2 := @this: org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.lucene.index.Term;

        $r3 = virtualinvoke r2.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: java.lang.String getPrefix()>();

        specialinvoke $r0.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(r1, $r3);

        return $r0;
    }

    public java.lang.String toStringUnquoted()
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: java.lang.String getPrefix()>();

        return $r1;
    }

    protected void suffixToString(java.lang.StringBuilder)
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery r1;
        java.lang.StringBuilder r0;
        char $c0;

        r1 := @this: org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        r0 := @parameter0: java.lang.StringBuilder;

        $c0 = virtualinvoke r1.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: char getSuffixOperator()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return;
    }

    public void visitMatchingTerms(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor) throws java.io.IOException
    {
        org.apache.lucene.queryparser.surround.query.SrndPrefixQuery r5;
        org.apache.lucene.index.Term $r13, $r17, $r20;
        org.apache.lucene.index.TermsEnum $r3;
        java.lang.String r1, $r6, $r14, $r19;
        boolean $z0, $z1, z2;
        org.apache.lucene.index.Terms $r2;
        org.apache.lucene.util.BytesRef $r4, $r10, $r11, $r15, $r16, $r18;
        org.apache.lucene.index.TermsEnum$SeekStatus $r7, $r8, $r9;
        org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor r12;
        org.apache.lucene.index.IndexReader r0;

        r5 := @this: org.apache.lucene.queryparser.surround.query.SrndPrefixQuery;

        r0 := @parameter0: org.apache.lucene.index.IndexReader;

        r1 := @parameter1: java.lang.String;

        r12 := @parameter2: org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor;

        $r2 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.index.Terms getTerms(org.apache.lucene.index.IndexReader,java.lang.String)>(r0, r1);

        if $r2 == null goto label6;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        z2 = 0;

        $r4 = new org.apache.lucene.util.BytesRef;

        $r6 = virtualinvoke r5.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: java.lang.String getPrefix()>();

        specialinvoke $r4.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>($r6);

        $r7 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef)>($r4);

        $r8 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        if $r7 != $r8 goto label1;

        $r20 = virtualinvoke r5.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: org.apache.lucene.index.Term getLucenePrefixTerm(java.lang.String)>(r1);

        interfaceinvoke r12.<org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor: void visitMatchingTerm(org.apache.lucene.index.Term)>($r20);

        goto label4;

     label1:
        $r9 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus NOT_FOUND>;

        if $r7 != $r9 goto label3;

        $r15 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef term()>();

        $r16 = r5.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: org.apache.lucene.util.BytesRef prefixRef>;

        $z1 = staticinvoke <org.apache.lucene.util.StringHelper: boolean startsWith(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r15, $r16);

        if $z1 == 0 goto label2;

        $r17 = new org.apache.lucene.index.Term;

        $r18 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef term()>();

        $r19 = virtualinvoke $r18.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

        specialinvoke $r17.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(r1, $r19);

        interfaceinvoke r12.<org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor: void visitMatchingTerm(org.apache.lucene.index.Term)>($r17);

        goto label4;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 1;

     label4:
        if z2 != 0 goto label6;

     label5:
        $r10 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r10 == null goto label6;

        $r11 = r5.<org.apache.lucene.queryparser.surround.query.SrndPrefixQuery: org.apache.lucene.util.BytesRef prefixRef>;

        $z0 = staticinvoke <org.apache.lucene.util.StringHelper: boolean startsWith(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r10, $r11);

        if $z0 == 0 goto label6;

        $r13 = new org.apache.lucene.index.Term;

        $r14 = virtualinvoke $r10.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

        specialinvoke $r13.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(r1, $r14);

        interfaceinvoke r12.<org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor: void visitMatchingTerm(org.apache.lucene.index.Term)>($r13);

        goto label5;

     label6:
        return;
    }
}
