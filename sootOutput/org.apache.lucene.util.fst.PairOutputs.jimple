public class org.apache.lucene.util.fst.PairOutputs extends org.apache.lucene.util.fst.Outputs
{
    private final org.apache.lucene.util.fst.PairOutputs$Pair NO_OUTPUT;
    private final org.apache.lucene.util.fst.Outputs outputs1;
    private final org.apache.lucene.util.fst.Outputs outputs2;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.util.fst.Outputs, org.apache.lucene.util.fst.Outputs)
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object $r4, $r5;
        org.apache.lucene.util.fst.Outputs r1, r2;
        org.apache.lucene.util.fst.PairOutputs$Pair $r3;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: org.apache.lucene.util.fst.Outputs;

        r2 := @parameter1: org.apache.lucene.util.fst.Outputs;

        specialinvoke r0.<org.apache.lucene.util.fst.Outputs: void <init>()>();

        r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1> = r1;

        r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2> = r2;

        $r3 = new org.apache.lucene.util.fst.PairOutputs$Pair;

        $r4 = virtualinvoke r1.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        $r5 = virtualinvoke r2.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        specialinvoke $r3.<org.apache.lucene.util.fst.PairOutputs$Pair: void <init>(java.lang.Object,java.lang.Object,org.apache.lucene.util.fst.PairOutputs$1)>($r4, $r5, null);

        r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair NO_OUTPUT> = $r3;

        return;
    }

    public org.apache.lucene.util.fst.PairOutputs$Pair newPair(java.lang.Object, java.lang.Object)
    {
        java.lang.AssertionError $r8;
        org.apache.lucene.util.fst.Outputs $r1, $r3, $r5, $r9, $r12, $r13;
        org.apache.lucene.util.fst.PairOutputs$Pair $r7, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object $r2, $r4, $r6, $r10, r14, r15;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r14 := @parameter0: java.lang.Object;

        r15 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        $z0 = virtualinvoke r14.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r13 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        r14 = virtualinvoke $r13.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

     label1:
        $r3 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        $z1 = virtualinvoke r15.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r12 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        r15 = virtualinvoke $r12.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

     label2:
        $r5 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        if r14 != $r6 goto label3;

        $r9 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        if r15 != $r10 goto label3;

        $r11 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair NO_OUTPUT>;

        return $r11;

     label3:
        $r7 = new org.apache.lucene.util.fst.PairOutputs$Pair;

        specialinvoke $r7.<org.apache.lucene.util.fst.PairOutputs$Pair: void <init>(java.lang.Object,java.lang.Object,org.apache.lucene.util.fst.PairOutputs$1)>(r14, r15, null);

        $z2 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $z3 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>($r7);

        if $z3 != 0 goto label4;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        return $r7;
    }

    private boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)
    {
        org.apache.lucene.util.fst.Outputs $r2, $r5, $r9, $r12;
        org.apache.lucene.util.fst.PairOutputs$Pair r0, $r8;
        boolean $z0, $z1;
        org.apache.lucene.util.fst.PairOutputs r1;
        java.lang.Object $r3, $r4, $r6, $r7, $r10, $r11, $r13, $r14;

        r1 := @this: org.apache.lucene.util.fst.PairOutputs;

        r0 := @parameter0: org.apache.lucene.util.fst.PairOutputs$Pair;

        $r3 = r0.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r2 = r1.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r4 = virtualinvoke $r2.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        $r6 = r0.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r5 = r1.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r7 = virtualinvoke $r5.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r13 = r0.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r12 = r1.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r14 = virtualinvoke $r12.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        if $r13 == $r14 goto label1;

        return 0;

     label1:
        if $z1 == 0 goto label2;

        $r10 = r0.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r9 = r1.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r11 = virtualinvoke $r9.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        if $r10 == $r11 goto label2;

        return 0;

     label2:
        if $z0 == 0 goto label4;

        if $z1 == 0 goto label4;

        $r8 = r1.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair NO_OUTPUT>;

        if r0 == $r8 goto label3;

        return 0;

     label3:
        return 1;

     label4:
        return 1;
    }

    public org.apache.lucene.util.fst.PairOutputs$Pair common(org.apache.lucene.util.fst.PairOutputs$Pair, org.apache.lucene.util.fst.PairOutputs$Pair)
    {
        java.lang.AssertionError $r12, $r13;
        org.apache.lucene.util.fst.Outputs $r5, $r9;
        org.apache.lucene.util.fst.PairOutputs$Pair r1, r2, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object $r3, $r4, $r6, $r7, $r8, $r10;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: org.apache.lucene.util.fst.PairOutputs$Pair;

        r2 := @parameter1: org.apache.lucene.util.fst.PairOutputs$Pair;

        $z0 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r1);

        if $z3 != 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $z1 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r2);

        if $z2 != 0 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label2:
        $r5 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r4 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r3 = r2.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.util.fst.Outputs: java.lang.Object common(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r9 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r8 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r7 = r2.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.util.fst.Outputs: java.lang.Object common(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair newPair(java.lang.Object,java.lang.Object)>($r6, $r10);

        return $r11;
    }

    public org.apache.lucene.util.fst.PairOutputs$Pair subtract(org.apache.lucene.util.fst.PairOutputs$Pair, org.apache.lucene.util.fst.PairOutputs$Pair)
    {
        java.lang.AssertionError $r12, $r13;
        org.apache.lucene.util.fst.Outputs $r5, $r9;
        org.apache.lucene.util.fst.PairOutputs$Pair r1, r2, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object $r3, $r4, $r6, $r7, $r8, $r10;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: org.apache.lucene.util.fst.PairOutputs$Pair;

        r2 := @parameter1: org.apache.lucene.util.fst.PairOutputs$Pair;

        $z0 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r1);

        if $z3 != 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $z1 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r2);

        if $z2 != 0 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label2:
        $r5 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r4 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r3 = r2.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.util.fst.Outputs: java.lang.Object subtract(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r9 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r8 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r7 = r2.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.util.fst.Outputs: java.lang.Object subtract(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair newPair(java.lang.Object,java.lang.Object)>($r6, $r10);

        return $r11;
    }

    public org.apache.lucene.util.fst.PairOutputs$Pair add(org.apache.lucene.util.fst.PairOutputs$Pair, org.apache.lucene.util.fst.PairOutputs$Pair)
    {
        java.lang.AssertionError $r12, $r13;
        org.apache.lucene.util.fst.Outputs $r5, $r9;
        org.apache.lucene.util.fst.PairOutputs$Pair r1, r2, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object $r3, $r4, $r6, $r7, $r8, $r10;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: org.apache.lucene.util.fst.PairOutputs$Pair;

        r2 := @parameter1: org.apache.lucene.util.fst.PairOutputs$Pair;

        $z0 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r1);

        if $z3 != 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $z1 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r2);

        if $z2 != 0 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label2:
        $r5 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r4 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r3 = r2.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r9 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r8 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r7 = r2.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r11 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair newPair(java.lang.Object,java.lang.Object)>($r6, $r10);

        return $r11;
    }

    public void write(org.apache.lucene.util.fst.PairOutputs$Pair, org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        org.apache.lucene.store.DataOutput r2;
        java.lang.AssertionError $r7;
        org.apache.lucene.util.fst.Outputs $r4, $r6;
        org.apache.lucene.util.fst.PairOutputs$Pair r1;
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: org.apache.lucene.util.fst.PairOutputs$Pair;

        r2 := @parameter1: org.apache.lucene.store.DataOutput;

        $z0 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r1);

        if $z1 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r4 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r3 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        virtualinvoke $r4.<org.apache.lucene.util.fst.Outputs: void write(java.lang.Object,org.apache.lucene.store.DataOutput)>($r3, r2);

        $r6 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r5 = r1.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        virtualinvoke $r6.<org.apache.lucene.util.fst.Outputs: void write(java.lang.Object,org.apache.lucene.store.DataOutput)>($r5, r2);

        return;
    }

    public org.apache.lucene.util.fst.PairOutputs$Pair read(org.apache.lucene.store.DataInput) throws java.io.IOException
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        org.apache.lucene.store.DataInput r1;
        java.lang.Object $r3, $r5;
        org.apache.lucene.util.fst.Outputs $r2, $r4;
        org.apache.lucene.util.fst.PairOutputs$Pair $r6;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: org.apache.lucene.store.DataInput;

        $r2 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.fst.Outputs: java.lang.Object read(org.apache.lucene.store.DataInput)>(r1);

        $r4 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.util.fst.Outputs: java.lang.Object read(org.apache.lucene.store.DataInput)>(r1);

        $r6 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair newPair(java.lang.Object,java.lang.Object)>($r3, $r5);

        return $r6;
    }

    public org.apache.lucene.util.fst.PairOutputs$Pair getNoOutput()
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        org.apache.lucene.util.fst.PairOutputs$Pair $r1;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        $r1 = r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair NO_OUTPUT>;

        return $r1;
    }

    public java.lang.String outputToString(org.apache.lucene.util.fst.PairOutputs$Pair)
    {
        java.lang.AssertionError $r15;
        org.apache.lucene.util.fst.Outputs $r5, $r10;
        org.apache.lucene.util.fst.PairOutputs$Pair r3;
        java.lang.String $r6, $r11, $r14;
        boolean $z0, $z1;
        org.apache.lucene.util.fst.PairOutputs r2;
        java.lang.StringBuilder $r0, $r1, $r7, $r8, $r12, $r13;
        java.lang.Object $r4, $r9;

        r2 := @this: org.apache.lucene.util.fst.PairOutputs;

        r3 := @parameter0: org.apache.lucene.util.fst.PairOutputs$Pair;

        $z0 = <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r2.<org.apache.lucene.util.fst.PairOutputs: boolean valid(org.apache.lucene.util.fst.PairOutputs$Pair)>(r3);

        if $z1 != 0 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<pair:");

        $r5 = r2.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r4 = r3.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output1>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.util.fst.Outputs: java.lang.String outputToString(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r10 = r2.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r9 = r3.<org.apache.lucene.util.fst.PairOutputs$Pair: java.lang.Object output2>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.util.fst.Outputs: java.lang.String outputToString(java.lang.Object)>($r9);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.util.fst.Outputs $r3, $r6;
        org.apache.lucene.util.fst.PairOutputs r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: org.apache.lucene.util.fst.PairOutputs;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PairOutputs<");

        $r3 = r2.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs1>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = r2.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.Outputs outputs2>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.String outputToString(java.lang.Object)
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.lucene.util.fst.PairOutputs$Pair $r2;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.util.fst.PairOutputs$Pair) r1;

        $r3 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: java.lang.String outputToString(org.apache.lucene.util.fst.PairOutputs$Pair)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getNoOutput()
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        org.apache.lucene.util.fst.PairOutputs$Pair $r1;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        $r1 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair getNoOutput()>();

        return $r1;
    }

    public volatile java.lang.Object read(org.apache.lucene.store.DataInput) throws java.io.IOException
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        org.apache.lucene.store.DataInput r1;
        org.apache.lucene.util.fst.PairOutputs$Pair $r2;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: org.apache.lucene.store.DataInput;

        $r2 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair read(org.apache.lucene.store.DataInput)>(r1);

        return $r2;
    }

    public volatile void write(java.lang.Object, org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        org.apache.lucene.store.DataOutput r2;
        java.lang.Object r1;
        org.apache.lucene.util.fst.PairOutputs$Pair $r3;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.lucene.store.DataOutput;

        $r3 = (org.apache.lucene.util.fst.PairOutputs$Pair) r1;

        virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: void write(org.apache.lucene.util.fst.PairOutputs$Pair,org.apache.lucene.store.DataOutput)>($r3, r2);

        return;
    }

    public volatile java.lang.Object add(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object r1, r2;
        org.apache.lucene.util.fst.PairOutputs$Pair $r3, $r4, $r5;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.util.fst.PairOutputs$Pair) r1;

        $r3 = (org.apache.lucene.util.fst.PairOutputs$Pair) r2;

        $r5 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair add(org.apache.lucene.util.fst.PairOutputs$Pair,org.apache.lucene.util.fst.PairOutputs$Pair)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object subtract(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object r1, r2;
        org.apache.lucene.util.fst.PairOutputs$Pair $r3, $r4, $r5;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.util.fst.PairOutputs$Pair) r1;

        $r3 = (org.apache.lucene.util.fst.PairOutputs$Pair) r2;

        $r5 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair subtract(org.apache.lucene.util.fst.PairOutputs$Pair,org.apache.lucene.util.fst.PairOutputs$Pair)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object common(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.util.fst.PairOutputs r0;
        java.lang.Object r1, r2;
        org.apache.lucene.util.fst.PairOutputs$Pair $r3, $r4, $r5;

        r0 := @this: org.apache.lucene.util.fst.PairOutputs;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.util.fst.PairOutputs$Pair) r1;

        $r3 = (org.apache.lucene.util.fst.PairOutputs$Pair) r2;

        $r5 = virtualinvoke r0.<org.apache.lucene.util.fst.PairOutputs: org.apache.lucene.util.fst.PairOutputs$Pair common(org.apache.lucene.util.fst.PairOutputs$Pair,org.apache.lucene.util.fst.PairOutputs$Pair)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/fst/PairOutputs;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.fst.PairOutputs: boolean $assertionsDisabled> = $z1;

        return;
    }
}
