public class org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore extends org.apache.jempbox.xmp.XMPSchema
{
    public static final java.lang.String NAMESPACE;

    public void <init>(org.apache.jempbox.xmp.XMPMetadata)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        org.apache.jempbox.xmp.XMPMetadata r1;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r1 := @parameter0: org.apache.jempbox.xmp.XMPMetadata;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.apache.jempbox.xmp.XMPMetadata,java.lang.String,java.lang.String)>(r1, "Iptc4xmpCore", "http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/");

        return;
    }

    public void <init>(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        org.w3c.dom.Element r1;
        java.lang.String r2;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.w3c.dom.Element,java.lang.String)>(r1, r2);

        return;
    }

    public void setCiAdrCity(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrCity");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiAdrCity()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrCity");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCiAdrCtry(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrCtry");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiAdrCtry()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrCtry");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCiAdrExtadr(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrExtadr");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiAdrExtadr()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrExtadr");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCiAdrPcode(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrPcode");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiAdrPcode()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrPcode");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCiAdrRegion(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrRegion");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiAdrRegion()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiAdrRegion");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCiEmailWork(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiEmailWork");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiEmailWork()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiEmailWork");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCiTelWork(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiTelWork");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiTelWork()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiTelWork");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCiUrlWork(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiUrlWork");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCiUrlWork()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CiUrlWork");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setLocation(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Location");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getLocation()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Location");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void addScene(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Scene");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void addBagValue(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.util.List getScenes()
    {
        java.util.List $r6;
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Scene");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.util.List getBagList(java.lang.String)>($r5);

        return $r6;
    }

    public void addSubjectCode(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":SubjectCode");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void addBagValue(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.util.List getSubjectCodes()
    {
        java.util.List $r6;
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":SubjectCode");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.util.List getBagList(java.lang.String)>($r5);

        return $r6;
    }

    public void setIntellectualGenre(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":IntellectualGenre");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getIntellectualGenre()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":IntellectualGenre");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setCountryCode(java.lang.String)
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CountryCode");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getCountryCode()
    {
        org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":CountryCode");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.jempbox.xmp.XMPSchemaIptc4xmpCore: java.lang.String NAMESPACE> = "http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/";

        return;
    }
}
