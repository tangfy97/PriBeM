public class org.xmlpull.v1.builder.xpath.jaxen.function.SumFunction extends java.lang.Object implements org.xmlpull.v1.builder.xpath.jaxen.Function
{

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.SumFunction r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.SumFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(org.xmlpull.v1.builder.xpath.jaxen.Context, java.util.List) throws org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException
    {
        java.lang.Double $r5;
        org.xmlpull.v1.builder.xpath.jaxen.function.SumFunction r6;
        org.xmlpull.v1.builder.xpath.jaxen.Context r3;
        java.util.List r0;
        org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException $r1;
        int $i0;
        java.lang.Object $r2;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r4;

        r6 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.SumFunction;

        r3 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = virtualinvoke r3.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r5 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.SumFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r2, $r4);

        return $r5;

     label1:
        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException: void <init>(java.lang.String)>("sum() requires one argument.");

        throw $r1;
    }

    public static java.lang.Double evaluate(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        java.util.Iterator $r5;
        java.lang.Double $r2, $r3, $r7;
        java.util.List $r4;
        java.lang.Object r0, $r6;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r1;
        boolean $z0, $z1;
        double $d0, $d1, d2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        d2 = 0.0;

        $z0 = r0 instanceof java.util.List;

        if $z0 == 0 goto label3;

        $r4 = (java.util.List) r0;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r6, r1);

        $d1 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        d2 = d2 + $d1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r1);

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        d2 = 0.0 + $d0;

     label4:
        $r3 = new java.lang.Double;

        specialinvoke $r3.<java.lang.Double: void <init>(double)>(d2);

        return $r3;
    }
}
