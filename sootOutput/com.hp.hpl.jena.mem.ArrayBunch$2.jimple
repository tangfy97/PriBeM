class com.hp.hpl.jena.mem.ArrayBunch$2 extends com.hp.hpl.jena.util.iterator.NiceIterator
{
    protected final int initialChanges;
    protected int i;
    protected final com.hp.hpl.jena.graph.Triple[] e;
    final com.hp.hpl.jena.mem.HashCommon$NotifyEmpty val$container;
    final com.hp.hpl.jena.mem.ArrayBunch this$0;

    void <init>(com.hp.hpl.jena.mem.ArrayBunch, com.hp.hpl.jena.mem.HashCommon$NotifyEmpty)
    {
        com.hp.hpl.jena.mem.HashCommon$NotifyEmpty r2;
        com.hp.hpl.jena.mem.ArrayBunch$2 r0;
        com.hp.hpl.jena.mem.ArrayBunch r1, $r3, $r4, $r5;
        int $i0, $i1;
        com.hp.hpl.jena.graph.Triple[] $r6;

        r0 := @this: com.hp.hpl.jena.mem.ArrayBunch$2;

        r1 := @parameter0: com.hp.hpl.jena.mem.ArrayBunch;

        r2 := @parameter1: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty;

        r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0> = r1;

        r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty val$container> = r2;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        $r3 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $i0 = $r3.<com.hp.hpl.jena.mem.ArrayBunch: int changes>;

        r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int initialChanges> = $i0;

        $r4 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $i1 = $r4.<com.hp.hpl.jena.mem.ArrayBunch: int size>;

        r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int i> = $i1;

        $r5 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $r6 = $r5.<com.hp.hpl.jena.mem.ArrayBunch: com.hp.hpl.jena.graph.Triple[] elements>;

        r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.graph.Triple[] e> = $r6;

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.mem.ArrayBunch $r1;
        com.hp.hpl.jena.mem.ArrayBunch$2 r0;
        int $i0, $i1, $i2;
        java.util.ConcurrentModificationException $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.mem.ArrayBunch$2;

        $r1 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.ArrayBunch: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int i>;

        if $i2 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public com.hp.hpl.jena.graph.Triple next()
    {
        com.hp.hpl.jena.mem.ArrayBunch$2 r0;
        com.hp.hpl.jena.graph.Triple $r3;
        com.hp.hpl.jena.mem.ArrayBunch $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ConcurrentModificationException $r4;
        com.hp.hpl.jena.graph.Triple[] $r2;

        r0 := @this: com.hp.hpl.jena.mem.ArrayBunch$2;

        $r1 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.ArrayBunch: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

     label1:
        $i2 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int i>;

        if $i2 != 0 goto label2;

        virtualinvoke r0.<com.hp.hpl.jena.mem.ArrayBunch$2: java.lang.Object noElements(java.lang.String)>("no elements left in ArrayBunch iteration");

     label2:
        $r2 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.graph.Triple[] e>;

        $i3 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int i>;

        $i4 = $i3 - 1;

        r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int i> = $i4;

        $r3 = $r2[$i4];

        return $r3;
    }

    public void remove()
    {
        com.hp.hpl.jena.mem.ArrayBunch$2 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.hp.hpl.jena.mem.HashCommon$NotifyEmpty $r8;
        com.hp.hpl.jena.graph.Triple $r4;
        com.hp.hpl.jena.mem.ArrayBunch $r1, $r2, $r7;
        java.util.ConcurrentModificationException $r9;
        com.hp.hpl.jena.graph.Triple[] $r3, $r5, $r6;

        r0 := @this: com.hp.hpl.jena.mem.ArrayBunch$2;

        $r1 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.ArrayBunch: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r9 = new java.util.ConcurrentModificationException;

        specialinvoke $r9.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $i2 = $r2.<com.hp.hpl.jena.mem.ArrayBunch: int size>;

        $i3 = $i2 - 1;

        $r2.<com.hp.hpl.jena.mem.ArrayBunch: int size> = $i3;

        $r5 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.graph.Triple[] e>;

        $i4 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: int i>;

        $r3 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.graph.Triple[] e>;

        $r4 = $r3[$i3];

        $r5[$i4] = $r4;

        $r6 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.graph.Triple[] e>;

        $r6[$i3] = null;

        $r7 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.ArrayBunch this$0>;

        $i5 = $r7.<com.hp.hpl.jena.mem.ArrayBunch: int size>;

        if $i5 != 0 goto label2;

        $r8 = r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty val$container>;

        interfaceinvoke $r8.<com.hp.hpl.jena.mem.HashCommon$NotifyEmpty: void emptied()>();

     label2:
        return;
    }

    public volatile java.lang.Object next()
    {
        com.hp.hpl.jena.mem.ArrayBunch$2 r0;
        com.hp.hpl.jena.graph.Triple $r1;

        r0 := @this: com.hp.hpl.jena.mem.ArrayBunch$2;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.mem.ArrayBunch$2: com.hp.hpl.jena.graph.Triple next()>();

        return $r1;
    }
}
