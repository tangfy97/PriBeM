public class org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor extends org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: void <init>()>();

        return;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode postProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.lang.CharSequence $r2, $r4;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r1;
        org.apache.lucene.queryparser.flexible.core.nodes.MatchAllDocsQueryNode $r6;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        java.lang.String $r3, $r5;
        org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor r7;
        boolean $z0, $z1, $z2;

        r7 := @this: org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $z0 = r0 instanceof org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        if $z0 == 0 goto label1;

        r1 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode) r0;

        $r2 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getField()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getText()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z2 == 0 goto label1;

        $r6 = new org.apache.lucene.queryparser.flexible.core.nodes.MatchAllDocsQueryNode;

        specialinvoke $r6.<org.apache.lucene.queryparser.flexible.core.nodes.MatchAllDocsQueryNode: void <init>()>();

        return $r6;

     label1:
        return r0;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode preProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        return r0;
    }

    protected java.util.List setChildrenOrder(java.util.List) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.util.List r0;
        org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.MatchAllDocsQueryNodeProcessor;

        r0 := @parameter0: java.util.List;

        return r0;
    }
}
