public class org.eclipse.jetty.server.ShutdownMonitor extends java.lang.Object
{
    private boolean DEBUG;
    private int port;
    private java.lang.String key;
    private boolean exitVm;
    private java.net.ServerSocket serverSocket;
    private org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread;

    public static org.eclipse.jetty.server.ShutdownMonitor getInstance()
    {
        org.eclipse.jetty.server.ShutdownMonitor $r0;

        $r0 = <org.eclipse.jetty.server.ShutdownMonitor$Holder: org.eclipse.jetty.server.ShutdownMonitor instance>;

        return $r0;
    }

    private void <init>()
    {
        java.util.Properties $r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $z0 = virtualinvoke $r1.<java.util.Properties: boolean containsKey(java.lang.Object)>("DEBUG");

        r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean DEBUG> = $z0;

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("STOP.PORT", "-1");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<org.eclipse.jetty.server.ShutdownMonitor: int port> = $i0;

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("STOP.KEY", null);

        r0.<org.eclipse.jetty.server.ShutdownMonitor: java.lang.String key> = $r3;

        r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean exitVm> = 1;

        return;
    }

    private void close(java.net.ServerSocket)
    {
        java.net.ServerSocket r0;
        java.io.IOException $r1;
        org.eclipse.jetty.server.ShutdownMonitor r2;

        r2 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        r0 := @parameter0: java.net.ServerSocket;

        if r0 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<java.net.ServerSocket: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void close(java.net.Socket)
    {
        java.net.Socket r0;
        java.io.IOException $r1;
        org.eclipse.jetty.server.ShutdownMonitor r2;

        r2 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        r0 := @parameter0: java.net.Socket;

        if r0 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<java.net.Socket: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private transient void debug(java.lang.String, java.lang.Object[])
    {
        java.io.PrintStream $r2;
        java.lang.Object[] r8;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6;
        java.lang.String r4, $r7;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        r4 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Object[];

        $z0 = r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ShutdownMonitor] ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>($r7, r8);

     label1:
        return;
    }

    private void debug(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        java.io.PrintStream $r2;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter0: java.lang.Throwable;

        $z0 = r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r1.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r2);

     label1:
        return;
    }

    public java.lang.String getKey()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: java.lang.String key>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        $i0 = r0.<org.eclipse.jetty.server.ShutdownMonitor: int port>;

        return $i0;
    }

    public java.net.ServerSocket getServerSocket()
    {
        java.net.ServerSocket $r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: java.net.ServerSocket serverSocket>;

        return $r1;
    }

    public boolean isExitVm()
    {
        org.eclipse.jetty.server.ShutdownMonitor r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        $z0 = r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean exitVm>;

        return $z0;
    }

    public void setDebug(boolean)
    {
        org.eclipse.jetty.server.ShutdownMonitor r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean DEBUG> = z0;

        return;
    }

    public void setExitVm(boolean)
    {
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r3;
        org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread $r1, $r2;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        boolean z0, $z1;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        if $r1 == null goto label2;

        $r2 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        $z1 = virtualinvoke $r2.<org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread: boolean isAlive()>();

        if $z1 == 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ShutdownMonitorThread already started");

        throw $r3;

     label2:
        r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean exitVm> = z0;

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setKey(java.lang.String)
    {
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r4;
        org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread $r1, $r3;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        r2 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        if $r1 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        $z0 = virtualinvoke $r3.<org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread: boolean isAlive()>();

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ShutdownMonitorThread already started");

        throw $r4;

     label2:
        r0.<org.eclipse.jetty.server.ShutdownMonitor: java.lang.String key> = r2;

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setPort(int)
    {
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r3;
        org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread $r1, $r2;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        int i0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        if $r1 == null goto label2;

        $r2 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        $z0 = virtualinvoke $r2.<org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread: boolean isAlive()>();

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ShutdownMonitorThread already started");

        throw $r3;

     label2:
        r0.<org.eclipse.jetty.server.ShutdownMonitor: int port> = i0;

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void start() throws java.lang.Exception
    {
        java.io.PrintStream $r6;
        java.lang.Throwable $r7;
        java.lang.Object[] $r5;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        if $r1 == null goto label3;

        $r3 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        $z0 = virtualinvoke $r3.<org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread: boolean isAlive()>();

        if $z0 == 0 goto label3;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("ShutdownMonitorThread already started", $r5);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 = new org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread;

        specialinvoke $r2.<org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread: void <init>(org.eclipse.jetty.server.ShutdownMonitor)>(r0);

        r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread> = $r2;

        $r4 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r7;

     label7:
        if $r4 == null goto label8;

        virtualinvoke $r4.<org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread: void start()>();

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected boolean isAlive()
    {
        java.lang.Throwable $r3;
        org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread $r1, $r2;
        org.eclipse.jetty.server.ShutdownMonitor r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        if $r1 == null goto label2;

        $r2 = r0.<org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread thread>;

        $z0 = virtualinvoke $r2.<org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread: boolean isAlive()>();

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r3;

     label7:
        return $z1;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.server.ShutdownMonitor r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        java.lang.Integer $r4;

        r1 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r0[0] = $r3;

        $i0 = r1.<org.eclipse.jetty.server.ShutdownMonitor: int port>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s[port=%d]", $r0);

        return $r5;
    }

    void <init>(org.eclipse.jetty.server.ShutdownMonitor$1)
    {
        org.eclipse.jetty.server.ShutdownMonitor r0;
        org.eclipse.jetty.server.ShutdownMonitor$1 r1;

        r0 := @this: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor$1;

        specialinvoke r0.<org.eclipse.jetty.server.ShutdownMonitor: void <init>()>();

        return;
    }

    static java.net.ServerSocket access$100(org.eclipse.jetty.server.ShutdownMonitor)
    {
        java.net.ServerSocket $r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: java.net.ServerSocket serverSocket>;

        return $r1;
    }

    static java.lang.String access$200(org.eclipse.jetty.server.ShutdownMonitor)
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        $r1 = r0.<org.eclipse.jetty.server.ShutdownMonitor: java.lang.String key>;

        return $r1;
    }

    static void access$300(org.eclipse.jetty.server.ShutdownMonitor, java.lang.String, java.lang.Object[])
    {
        java.lang.String r1;
        java.lang.Object[] r2;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        specialinvoke r0.<org.eclipse.jetty.server.ShutdownMonitor: void debug(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static void access$400(org.eclipse.jetty.server.ShutdownMonitor, java.net.Socket)
    {
        java.net.Socket r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter1: java.net.Socket;

        specialinvoke r0.<org.eclipse.jetty.server.ShutdownMonitor: void close(java.net.Socket)>(r1);

        return;
    }

    static void access$500(org.eclipse.jetty.server.ShutdownMonitor, java.net.ServerSocket)
    {
        java.net.ServerSocket r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter1: java.net.ServerSocket;

        specialinvoke r0.<org.eclipse.jetty.server.ShutdownMonitor: void close(java.net.ServerSocket)>(r1);

        return;
    }

    static java.net.ServerSocket access$102(org.eclipse.jetty.server.ShutdownMonitor, java.net.ServerSocket)
    {
        java.net.ServerSocket r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter1: java.net.ServerSocket;

        r0.<org.eclipse.jetty.server.ShutdownMonitor: java.net.ServerSocket serverSocket> = r1;

        return r1;
    }

    static boolean access$600(org.eclipse.jetty.server.ShutdownMonitor)
    {
        org.eclipse.jetty.server.ShutdownMonitor r0;
        boolean $z0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        $z0 = r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean exitVm>;

        return $z0;
    }

    static void access$700(org.eclipse.jetty.server.ShutdownMonitor, java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.eclipse.jetty.server.ShutdownMonitor: void debug(java.lang.Throwable)>(r1);

        return;
    }

    static boolean access$800(org.eclipse.jetty.server.ShutdownMonitor)
    {
        org.eclipse.jetty.server.ShutdownMonitor r0;
        boolean $z0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        $z0 = r0.<org.eclipse.jetty.server.ShutdownMonitor: boolean DEBUG>;

        return $z0;
    }

    static int access$900(org.eclipse.jetty.server.ShutdownMonitor)
    {
        int $i0;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        $i0 = r0.<org.eclipse.jetty.server.ShutdownMonitor: int port>;

        return $i0;
    }

    static int access$902(org.eclipse.jetty.server.ShutdownMonitor, int)
    {
        int i0;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        i0 := @parameter1: int;

        r0.<org.eclipse.jetty.server.ShutdownMonitor: int port> = i0;

        return i0;
    }

    static java.lang.String access$202(org.eclipse.jetty.server.ShutdownMonitor, java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.server.ShutdownMonitor r0;

        r0 := @parameter0: org.eclipse.jetty.server.ShutdownMonitor;

        r1 := @parameter1: java.lang.String;

        r0.<org.eclipse.jetty.server.ShutdownMonitor: java.lang.String key> = r1;

        return r1;
    }
}
