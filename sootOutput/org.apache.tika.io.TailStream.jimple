public class org.apache.tika.io.TailStream extends java.io.FilterInputStream
{
    private static final int SKIP_SIZE;
    private final byte[] tailBuffer;
    private final int tailSize;
    private byte[] markBuffer;
    private long bytesRead;
    private long markBytesRead;
    private int currentIndex;
    private int markIndex;

    public void <init>(java.io.InputStream, int)
    {
        byte[] $r2;
        int i0;
        org.apache.tika.io.TailStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.io.TailStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.tika.io.TailStream: int tailSize> = i0;

        $r2 = newarray (byte)[i0];

        r0.<org.apache.tika.io.TailStream: byte[] tailBuffer> = $r2;

        return;
    }

    public int read() throws java.io.IOException
    {
        byte $b1;
        int $i0, $i3;
        org.apache.tika.io.TailStream r0;

        r0 := @this: org.apache.tika.io.TailStream;

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $b1 = (byte) $i0;

        specialinvoke r0.<org.apache.tika.io.TailStream: void appendByte(byte)>($b1);

     label1:
        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        int $i0;
        org.apache.tika.io.TailStream r0;
        byte[] r1;

        r0 := @this: org.apache.tika.io.TailStream;

        r1 := @parameter0: byte[];

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[])>(r1);

        if $i0 <= 0 goto label1;

        specialinvoke r0.<org.apache.tika.io.TailStream: void appendBuf(byte[],int,int)>(r1, 0, $i0);

     label1:
        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        int i0, i1, $i2;
        org.apache.tika.io.TailStream r0;

        r0 := @this: org.apache.tika.io.TailStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>(r1, i0, i1);

        if $i2 <= 0 goto label1;

        specialinvoke r0.<org.apache.tika.io.TailStream: void appendBuf(byte[],int,int)>(r1, i0, $i2);

     label1:
        return $i2;
    }

    public long skip(long) throws java.io.IOException
    {
        byte[] r0;
        long l0, $l1, $l5, $l6, $l7, $l10, l11, $l13;
        byte $b3, $b4;
        int i2, i8, $i9, i12, $i14, $i16, $i18;
        org.apache.tika.io.TailStream r1;

        r1 := @this: org.apache.tika.io.TailStream;

        l0 := @parameter0: long;

        $l1 = staticinvoke <java.lang.Math: long min(long,long)>(l0, 4096L);

        i2 = (int) $l1;

        r0 = newarray (byte)[i2];

        l11 = 0L;

        i12 = 0;

     label1:
        $b3 = l11 cmp l0;

        $i14 = (int) $b3;

        if $i14 >= 0 goto label3;

        $i16 = (int) -1;

        if i12 == $i16 goto label3;

        $l6 = (long) i2;

        $l5 = l0 - l11;

        $l7 = staticinvoke <java.lang.Math: long min(long,long)>($l6, $l5);

        i8 = (int) $l7;

        $i9 = virtualinvoke r1.<org.apache.tika.io.TailStream: int read(byte[],int,int)>(r0, 0, i8);

        i12 = $i9;

        $i18 = (int) -1;

        if $i9 == $i18 goto label2;

        $l10 = (long) $i9;

        l11 = l11 + $l10;

     label2:
        goto label1;

     label3:
        if i12 >= 0 goto label4;

        $b4 = l11 cmp 0L;

        if $b4 != 0 goto label4;

        $l13 = -1L;

        goto label5;

     label4:
        $l13 = l11;

     label5:
        return $l13;
    }

    public void mark(int)
    {
        byte[] $r1, $r2, $r3;
        long $l3;
        int $i0, $i1, $i2, i4;
        org.apache.tika.io.TailStream r0;

        r0 := @this: org.apache.tika.io.TailStream;

        i4 := @parameter0: int;

        $i0 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        $r1 = newarray (byte)[$i0];

        r0.<org.apache.tika.io.TailStream: byte[] markBuffer> = $r1;

        $r3 = r0.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $r2 = r0.<org.apache.tika.io.TailStream: byte[] markBuffer>;

        $i1 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i1);

        $i2 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        r0.<org.apache.tika.io.TailStream: int markIndex> = $i2;

        $l3 = r0.<org.apache.tika.io.TailStream: long bytesRead>;

        r0.<org.apache.tika.io.TailStream: long markBytesRead> = $l3;

        return;
    }

    public void reset()
    {
        byte[] $r1, $r2, $r3;
        int $i0, $i1;
        org.apache.tika.io.TailStream r0;
        long $l2;

        r0 := @this: org.apache.tika.io.TailStream;

        $r1 = r0.<org.apache.tika.io.TailStream: byte[] markBuffer>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.tika.io.TailStream: byte[] markBuffer>;

        $r2 = r0.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $i0 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $i1 = r0.<org.apache.tika.io.TailStream: int markIndex>;

        r0.<org.apache.tika.io.TailStream: int currentIndex> = $i1;

        $l2 = r0.<org.apache.tika.io.TailStream: long markBytesRead>;

        r0.<org.apache.tika.io.TailStream: long bytesRead> = $l2;

     label1:
        return;
    }

    public byte[] getTail()
    {
        byte[] r1, $r2, $r3;
        long $l1, $l2, $l3;
        int $i0, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.tika.io.TailStream r0;

        r0 := @this: org.apache.tika.io.TailStream;

        $i0 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        $l2 = (long) $i0;

        $l1 = r0.<org.apache.tika.io.TailStream: long bytesRead>;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l1);

        i4 = (int) $l3;

        r1 = newarray (byte)[i4];

        $r2 = r0.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $i7 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        $i5 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        $i6 = i4 - $i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i7, r1, 0, $i6);

        $r3 = r0.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $i8 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        $i10 = i4 - $i8;

        $i9 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, $i10, $i9);

        return r1;
    }

    private void appendByte(byte)
    {
        byte[] $r1;
        long $l5, $l6;
        byte b2;
        int $i0, $i1, $i3, $i4;
        org.apache.tika.io.TailStream r0;

        r0 := @this: org.apache.tika.io.TailStream;

        b2 := @parameter0: byte;

        $r1 = r0.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $i0 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.tika.io.TailStream: int currentIndex> = $i1;

        $r1[$i0] = b2;

        $i4 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        $i3 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        if $i4 < $i3 goto label1;

        r0.<org.apache.tika.io.TailStream: int currentIndex> = 0;

     label1:
        $l5 = r0.<org.apache.tika.io.TailStream: long bytesRead>;

        $l6 = $l5 + 1L;

        r0.<org.apache.tika.io.TailStream: long bytesRead> = $l6;

        return;
    }

    private void appendBuf(byte[], int, int)
    {
        byte[] r1;
        long $l3, $l4, $l5;
        int i0, $i1, i2;
        org.apache.tika.io.TailStream r0;

        r0 := @this: org.apache.tika.io.TailStream;

        r1 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        if i0 < $i1 goto label1;

        specialinvoke r0.<org.apache.tika.io.TailStream: void replaceTailBuffer(byte[],int,int)>(r1, i2, i0);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.tika.io.TailStream: void copyToTailBuffer(byte[],int,int)>(r1, i2, i0);

     label2:
        $l4 = r0.<org.apache.tika.io.TailStream: long bytesRead>;

        $l3 = (long) i0;

        $l5 = $l4 + $l3;

        r0.<org.apache.tika.io.TailStream: long bytesRead> = $l5;

        return;
    }

    private void replaceTailBuffer(byte[], int, int)
    {
        byte[] r0, $r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        org.apache.tika.io.TailStream r1;

        r1 := @this: org.apache.tika.io.TailStream;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = i0 + i1;

        $i2 = r1.<org.apache.tika.io.TailStream: int tailSize>;

        $i5 = $i3 - $i2;

        $r2 = r1.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $i4 = r1.<org.apache.tika.io.TailStream: int tailSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i5, $r2, 0, $i4);

        r1.<org.apache.tika.io.TailStream: int currentIndex> = 0;

        return;
    }

    private void copyToTailBuffer(byte[], int, int)
    {
        byte[] r1, $r2, $r3;
        int $i0, $i1, i2, i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.apache.tika.io.TailStream r0;

        r0 := @this: org.apache.tika.io.TailStream;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i3 := @parameter2: int;

        $i1 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        $i0 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        i2 = $i1 - $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i3);

        $r2 = r0.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $i6 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i5, $r2, $i6, $i4);

        $i8 = i5 + $i4;

        $r3 = r0.<org.apache.tika.io.TailStream: byte[] tailBuffer>;

        $i7 = i3 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i8, $r3, 0, $i7);

        $i9 = r0.<org.apache.tika.io.TailStream: int currentIndex>;

        $i11 = $i9 + i3;

        $i10 = r0.<org.apache.tika.io.TailStream: int tailSize>;

        $i12 = $i11 % $i10;

        r0.<org.apache.tika.io.TailStream: int currentIndex> = $i12;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.tika.io.TailStream: int SKIP_SIZE> = 4096;

        return;
    }
}
