public class org.apache.log4j.lf5.viewer.configure.MRUFileManager extends java.lang.Object
{
    private static final java.lang.String CONFIG_FILE_NAME;
    private static final int DEFAULT_MAX_SIZE;
    private int _maxSize;
    private java.util.LinkedList _mruFileList;

    public void <init>()
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int _maxSize> = 0;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void load()>();

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void setMaxSize(int)>(3);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int _maxSize> = 0;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void load()>();

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void setMaxSize(int)>(i0);

        return;
    }

    public void save()
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r1;
        java.io.FileOutputStream $r4;
        java.io.ObjectOutputStream $r3;
        java.lang.String $r2;
        java.util.LinkedList $r5;
        java.io.File $r0;
        java.lang.Exception $r6;

        r1 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        $r0 = new java.io.File;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String getFilename()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r2);

     label1:
        $r3 = new java.io.ObjectOutputStream;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r3.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r4);

        $r5 = r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        virtualinvoke $r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke $r3.<java.io.ObjectOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int size()
    {
        int $i0;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        $r1 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        return $i0;
    }

    public java.lang.Object getFile(int)
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        int i0, $i1;
        java.lang.Object $r2;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int size()>();

        if i0 >= $i1 goto label1;

        $r1 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object get(int)>(i0);

        return $r2;

     label1:
        return null;
    }

    public java.io.InputStream getInputStream(int) throws java.io.IOException, java.io.FileNotFoundException
    {
        java.net.URL $r2;
        java.io.File $r4;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        int i0, $i1;
        java.lang.Object $r1;
        boolean $z0;
        java.io.InputStream $r3, $r5;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int size()>();

        if i0 >= $i1 goto label2;

        $r1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.Object getFile(int)>(i0);

        $z0 = $r1 instanceof java.io.File;

        if $z0 == 0 goto label1;

        $r4 = (java.io.File) $r1;

        $r5 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.io.InputStream getInputStream(java.io.File)>($r4);

        return $r5;

     label1:
        $r2 = (java.net.URL) $r1;

        $r3 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.io.InputStream getInputStream(java.net.URL)>($r2);

        return $r3;

     label2:
        return null;
    }

    public void set(java.io.File)
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        java.io.File r1;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        r1 := @parameter0: java.io.File;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void setMRU(java.lang.Object)>(r1);

        return;
    }

    public void set(java.net.URL)
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        java.net.URL r1;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        r1 := @parameter0: java.net.URL;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void setMRU(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String[] getMRUFileList()
    {
        java.lang.String[] r1;
        java.io.File $r4;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        $i0 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int size()>();

        r1 = newarray (java.lang.String)[$i1];

        i3 = 0;

     label2:
        $i2 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int size()>();

        if i3 >= $i2 goto label5;

        $r2 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.Object getFile(int)>(i3);

        $z0 = $r2 instanceof java.io.File;

        if $z0 == 0 goto label3;

        $r4 = (java.io.File) $r2;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        r1[i3] = $r5;

        goto label4;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        r1[i3] = $r3;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return r1;
    }

    public void moveToTop(int)
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        int i0;
        java.lang.Object $r3;
        java.util.LinkedList $r1, $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $r1 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $r3 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object remove(int)>(i0);

        virtualinvoke $r2.<java.util.LinkedList: void add(int,java.lang.Object)>(0, $r3);

        return;
    }

    public static void createConfigurationDirectory()
    {
        java.io.File $r2;
        java.lang.StringBuffer $r3, $r4, $r5, $r6;
        java.lang.SecurityException $r8;
        java.lang.String $r0, $r1, $r7;
        boolean $z0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lf5");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke $r2.<java.io.File: boolean mkdir()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    protected java.io.InputStream getInputStream(java.io.File) throws java.io.IOException, java.io.FileNotFoundException
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r3;
        java.io.BufferedInputStream $r0;
        java.io.FileInputStream $r1;
        java.io.File r2;

        r3 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        r2 := @parameter0: java.io.File;

        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        return $r0;
    }

    protected java.io.InputStream getInputStream(java.net.URL) throws java.io.IOException
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r2;
        java.net.URL r0;
        java.io.InputStream $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        return $r1;
    }

    protected void setMRU(java.lang.Object)
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        int $i0, $i1, $i3;
        java.lang.Object r1;
        java.util.LinkedList $r2, $r3;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int indexOf(java.lang.Object)>(r1);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r3 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        virtualinvoke $r3.<java.util.LinkedList: void add(int,java.lang.Object)>(0, r1);

        $i1 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int _maxSize>;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void setMaxSize(int)>($i1);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void moveToTop(int)>($i0);

     label2:
        return;
    }

    protected void load()
    {
        java.io.ObjectInputStream $r4;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r1;
        java.lang.String $r2;
        java.util.LinkedList $r3, $r7, $r8, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r9;
        java.io.FileInputStream $r5;
        java.io.File $r0;
        java.lang.Exception $r11;
        java.lang.Object $r6, $r10;

        r1 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        staticinvoke <org.apache.log4j.lf5.viewer.configure.MRUFileManager: void createConfigurationDirectory()>();

        $r0 = new java.io.File;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String getFilename()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label6;

     label1:
        $r4 = new java.io.ObjectInputStream;

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r4.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5);

        $r6 = virtualinvoke $r4.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r7 = (java.util.LinkedList) $r6;

        r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList> = $r7;

        virtualinvoke $r4.<java.io.ObjectInputStream: void close()>();

        $r8 = r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $r9 = virtualinvoke $r8.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r10 instanceof java.io.File;

        if $z2 != 0 goto label3;

        $z3 = $r10 instanceof java.net.URL;

        if $z3 != 0 goto label3;

        interfaceinvoke $r9.<java.util.Iterator: void remove()>();

     label3:
        goto label2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.util.LinkedList;

        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

        r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList> = $r12;

        goto label7;

     label6:
        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList> = $r3;

     label7:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected java.lang.String getFilename()
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r9;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r0, $r1, $r8;

        r9 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lf5");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("mru_file_manager");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    protected void setMaxSize(int)
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager r0;
        int i0, $i1, $i2, $i3, i4;
        java.util.LinkedList $r1, $r2, $r3;

        r0 := @this: org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $i1 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if i0 >= $i1 goto label2;

        i4 = 0;

     label1:
        $r2 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $i3 = $i2 - i0;

        if i4 >= $i3 goto label2;

        $r3 = r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.util.LinkedList _mruFileList>;

        virtualinvoke $r3.<java.util.LinkedList: java.lang.Object removeLast()>();

        i4 = i4 + 1;

        goto label1;

     label2:
        r0.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int _maxSize> = i0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.lf5.viewer.configure.MRUFileManager: int DEFAULT_MAX_SIZE> = 3;

        <org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String CONFIG_FILE_NAME> = "mru_file_manager";

        return;
    }
}
