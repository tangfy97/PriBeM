public final class org.eclipse.jdt.internal.compiler.util.HashtableOfType extends java.lang.Object
{
    public char[][] keyTable;
    public org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable;
    public int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: void <init>(int)>(3);

        return;
    }

    public void <init>(int)
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r0;
        char[][] $r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r2;
        int i0, $i1, i2;
        float $f0, $f1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int elementSize> = 0;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int threshold> = i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.75F;

        i2 = (int) $f1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int threshold>;

        if $i1 != i2 goto label1;

        i2 = i2 + 1;

     label1:
        $r1 = newarray (char[])[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable> = $r1;

        $r2 = newarray (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable> = $r2;

        return;
    }

    public boolean containsKey(char[])
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r0;
        char[][] $r1, $r3;
        int i0, $i1, i2, $i3, i4;
        char[] r2, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i4 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r4;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        if i4 != i0 goto label3;

        i4 = 0;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        $r4 = $r3[i4];

        if $r4 != null goto label1;

        return 0;
    }

    public org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding get(char[])
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4;
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r0;
        char[][] $r1, $r5;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r3;
        int i0, $i1, i2, $i3, i4;
        char[] r2, $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i4 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r6;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable>;

        $r4 = $r3[i4];

        return $r4;

     label2:
        i4 = i4 + 1;

        if i4 != i0 goto label3;

        i4 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        $r6 = $r5[i4];

        if $r6 != null goto label1;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding put(char[], org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        char[][] $r1, $r5, $r7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r4, $r6;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r0;
        char[] r2, $r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        r2 := @parameter0: char[];

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i7 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r8;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r8, r2);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable>;

        $r4[i7] = r3;

        return r3;

     label2:
        i7 = i7 + 1;

        if i7 != i0 goto label3;

        i7 = 0;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        $r8 = $r7[i7];

        if $r8 != null goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        $r5[i7] = r2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable>;

        $r6[i7] = r3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int elementSize>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int elementSize> = $i5;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int threshold>;

        if $i5 <= $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: void rehash()>();

     label4:
        return r3;
    }

    private void rehash()
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6;
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r1, $r9;
        char[][] $r2, $r3, $r7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r5, $r8;
        int $i0, $i1, $i2, $i3, i4, $i6;
        char[] $r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        $r9 = new org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int elementSize>;

        if $i0 >= 100 goto label1;

        $i3 = 100;

        goto label2;

     label1:
        $i1 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int elementSize>;

        $i3 = $i1 * 2;

     label2:
        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: void <init>(int)>($i3);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        i4 = lengthof $r2;

        goto label4;

     label3:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        $r4 = $r3[i4];

        if $r4 == null goto label4;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable>;

        $r6 = $r5[i4];

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding put(char[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r4, $r6);

     label4:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        if i4 >= 0 goto label3;

        $r7 = $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: char[][] keyTable> = $r7;

        $r8 = $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable> = $r8;

        $i2 = $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int threshold> = $i2;

        return;
    }

    public int size()
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3;
        org.eclipse.jdt.internal.compiler.util.HashtableOfType r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r1, $r2;
        java.lang.StringBuffer $r4, $r7, $r8;
        int i0, i1;
        java.lang.String $r5, $r6, r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        r9 = "";

        i1 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] valueTable>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuffer;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return r9;
    }
}
