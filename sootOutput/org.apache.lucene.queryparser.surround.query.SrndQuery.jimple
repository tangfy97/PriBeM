public abstract class org.apache.lucene.queryparser.surround.query.SrndQuery extends java.lang.Object implements java.lang.Cloneable
{
    private float weight;
    private boolean weighted;
    public static final org.apache.lucene.search.Query theEmptyLcnQuery;

    public void <init>()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: float weight> = 1.0F;

        r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: boolean weighted> = 0;

        return;
    }

    public void setWeight(float)
    {
        float f0;
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        f0 := @parameter0: float;

        r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: float weight> = f0;

        r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: boolean weighted> = 1;

        return;
    }

    public boolean isWeighted()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        $z0 = r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: boolean weighted>;

        return $z0;
    }

    public float getWeight()
    {
        float $f0;
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        $f0 = r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: float weight>;

        return $f0;
    }

    public java.lang.String getWeightString()
    {
        float $f0;
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        $f0 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: float getWeight()>();

        $r1 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        return $r1;
    }

    public java.lang.String getWeightOperator()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        return "^";
    }

    protected void weightToString(java.lang.StringBuilder)
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        r1 := @parameter0: java.lang.StringBuilder;

        $z0 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: boolean isWeighted()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: java.lang.String getWeightOperator()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: java.lang.String getWeightString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label1:
        return;
    }

    public org.apache.lucene.search.Query makeLuceneQueryField(java.lang.String, org.apache.lucene.queryparser.surround.query.BasicQueryFactory)
    {
        org.apache.lucene.search.Query $r3;
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;
        org.apache.lucene.queryparser.surround.query.BasicQueryFactory r2;
        float $f0, $f1, $f2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.queryparser.surround.query.BasicQueryFactory;

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: org.apache.lucene.search.Query makeLuceneQueryFieldNoBoost(java.lang.String,org.apache.lucene.queryparser.surround.query.BasicQueryFactory)>(r1, r2);

        $z0 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: boolean isWeighted()>();

        if $z0 == 0 goto label1;

        $f0 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: float getWeight()>();

        $f1 = virtualinvoke $r3.<org.apache.lucene.search.Query: float getBoost()>();

        $f2 = $f0 * $f1;

        virtualinvoke $r3.<org.apache.lucene.search.Query: void setBoost(float)>($f2);

     label1:
        return $r3;
    }

    public abstract org.apache.lucene.search.Query makeLuceneQueryFieldNoBoost(java.lang.String, org.apache.lucene.queryparser.surround.query.BasicQueryFactory);

    public abstract java.lang.String toString();

    public boolean isFieldsSubQueryAcceptable()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        return 1;
    }

    public org.apache.lucene.queryparser.surround.query.SrndQuery clone()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0, $r2;
        java.lang.Error $r4;
        java.lang.Object $r1;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.lucene.queryparser.surround.query.SrndQuery) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public int hashCode()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0;
        int $i0, $i1, $i2;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r1;
        java.lang.Object r0;
        java.lang.Class $r2, $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r1.<org.apache.lucene.queryparser.surround.query.SrndQuery: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SrndQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.SrndQuery: org.apache.lucene.queryparser.surround.query.SrndQuery clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery$1 $r0;

        $r0 = new org.apache.lucene.queryparser.surround.query.SrndQuery$1;

        specialinvoke $r0.<org.apache.lucene.queryparser.surround.query.SrndQuery$1: void <init>()>();

        <org.apache.lucene.queryparser.surround.query.SrndQuery: org.apache.lucene.search.Query theEmptyLcnQuery> = $r0;

        return;
    }
}
