public class org.apache.commons.configuration.interpol.ConfigurationInterpolator extends org.apache.commons.lang.text.StrLookup
{
    public static final java.lang.String PREFIX_SYSPROPERTIES;
    public static final java.lang.String PREFIX_CONSTANTS;
    private static final char PREFIX_SEPARATOR;
    private static java.util.Map globalLookups;
    private java.util.Map localLookups;
    private org.apache.commons.lang.text.StrLookup defaultLookup;

    public void <init>()
    {
        java.lang.Throwable $r4;
        java.util.Map $r1, $r3;
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r0;
        java.util.HashMap $r2;

        r0 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        specialinvoke r0.<org.apache.commons.lang.text.StrLookup: void <init>()>();

        $r1 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        entermonitor $r1;

     label1:
        $r2 = new java.util.HashMap;

        $r3 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r3);

        r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map localLookups> = $r2;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void registerGlobalLookup(java.lang.String, org.apache.commons.lang.text.StrLookup)
    {
        java.lang.Throwable $r6;
        java.util.Map $r2, $r3;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r4, $r5;
        org.apache.commons.lang.text.StrLookup r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.commons.lang.text.StrLookup;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Prefix for lookup object must not be null!");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lookup object must not be null!");

        throw $r4;

     label2:
        $r2 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        entermonitor $r2;

     label3:
        $r3 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        exitmonitor $r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r6;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean deregisterGlobalLookup(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.util.Map $r0, $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        entermonitor $r0;

     label1:
        $r2 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if $r3 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r0;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void registerLookup(java.lang.String, org.apache.commons.lang.text.StrLookup)
    {
        java.util.Map $r3;
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r2;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r4, $r5;
        org.apache.commons.lang.text.StrLookup r1;

        r2 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.commons.lang.text.StrLookup;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Prefix for lookup object must not be null!");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lookup object must not be null!");

        throw $r4;

     label2:
        $r3 = r2.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map localLookups>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public boolean deregisterLookup(java.lang.String)
    {
        java.util.Map $r2;
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r0;
        java.lang.Object $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map localLookups>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.Set prefixSet()
    {
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r0;
        java.util.Set $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        $r1 = r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map localLookups>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public org.apache.commons.lang.text.StrLookup getDefaultLookup()
    {
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r0;
        org.apache.commons.lang.text.StrLookup $r1;

        r0 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        $r1 = r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: org.apache.commons.lang.text.StrLookup defaultLookup>;

        return $r1;
    }

    public void setDefaultLookup(org.apache.commons.lang.text.StrLookup)
    {
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r0;
        org.apache.commons.lang.text.StrLookup r1;

        r0 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: org.apache.commons.lang.text.StrLookup defaultLookup> = r1;

        return;
    }

    public java.lang.String lookup(java.lang.String)
    {
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r1;
        org.apache.commons.lang.text.StrLookup $r2, $r6;
        int $i0, $i1;
        java.lang.String r0, $r3, $r4, $r5, $r7;

        r1 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label2;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r6 = virtualinvoke r1.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: org.apache.commons.lang.text.StrLookup fetchLookupForPrefix(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<org.apache.commons.lang.text.StrLookup: java.lang.String lookup(java.lang.String)>($r5);

        if $r7 == null goto label2;

        return $r7;

     label2:
        $r2 = virtualinvoke r1.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: org.apache.commons.lang.text.StrLookup fetchNoPrefixLookup()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.lang.text.StrLookup: java.lang.String lookup(java.lang.String)>(r0);

        return $r3;
    }

    protected org.apache.commons.lang.text.StrLookup fetchNoPrefixLookup()
    {
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r0;
        org.apache.commons.lang.text.StrLookup $r1, $r2;

        r0 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: org.apache.commons.lang.text.StrLookup getDefaultLookup()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: org.apache.commons.lang.text.StrLookup getDefaultLookup()>();

        goto label2;

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup noneLookup()>();

     label2:
        return $r2;
    }

    protected org.apache.commons.lang.text.StrLookup fetchLookupForPrefix(java.lang.String)
    {
        java.util.Map $r2;
        org.apache.commons.configuration.interpol.ConfigurationInterpolator r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.commons.lang.text.StrLookup r4;

        r0 := @this: org.apache.commons.configuration.interpol.ConfigurationInterpolator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map localLookups>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.commons.lang.text.StrLookup) $r3;

        if r4 != null goto label1;

        r4 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup noneLookup()>();

     label1:
        return r4;
    }

    static void <clinit>()
    {
        org.apache.commons.configuration.interpol.ConstantLookup $r3;
        java.util.Map $r1, $r4;
        java.util.HashMap $r0;
        org.apache.commons.lang.text.StrLookup $r2;

        <org.apache.commons.configuration.interpol.ConfigurationInterpolator: char PREFIX_SEPARATOR> = 58;

        <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.lang.String PREFIX_CONSTANTS> = "const";

        <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.lang.String PREFIX_SYSPROPERTIES> = "sys";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups> = $r0;

        $r1 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        $r2 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup systemPropertiesLookup()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sys", $r2);

        $r4 = <org.apache.commons.configuration.interpol.ConfigurationInterpolator: java.util.Map globalLookups>;

        $r3 = new org.apache.commons.configuration.interpol.ConstantLookup;

        specialinvoke $r3.<org.apache.commons.configuration.interpol.ConstantLookup: void <init>()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("const", $r3);

        return;
    }
}
