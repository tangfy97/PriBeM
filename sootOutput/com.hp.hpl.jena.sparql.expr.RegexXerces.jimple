public class com.hp.hpl.jena.sparql.expr.RegexXerces extends java.lang.Object implements com.hp.hpl.jena.sparql.expr.RegexEngine
{
    org.apache.xerces.impl.xpath.regex.RegularExpression regexPattern;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression $r3;
        java.lang.String r1, r2;
        com.hp.hpl.jena.sparql.expr.RegexXerces r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.RegexXerces;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.expr.RegexXerces: org.apache.xerces.impl.xpath.regex.RegularExpression makePattern(java.lang.String,java.lang.String)>(r1, r2);

        r0.<com.hp.hpl.jena.sparql.expr.RegexXerces: org.apache.xerces.impl.xpath.regex.RegularExpression regexPattern> = $r3;

        return;
    }

    public boolean match(java.lang.String)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression $r2;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.expr.RegexXerces r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.RegexXerces;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.expr.RegexXerces: org.apache.xerces.impl.xpath.regex.RegularExpression regexPattern>;

        $z0 = virtualinvoke $r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(java.lang.String)>(r1);

        return $z0;
    }

    private org.apache.xerces.impl.xpath.regex.RegularExpression makePattern(java.lang.String, java.lang.String)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression $r0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, r2, $r8;
        org.apache.xerces.impl.xpath.regex.ParseException $r3;
        com.hp.hpl.jena.sparql.expr.ExprException $r4;
        com.hp.hpl.jena.sparql.expr.RegexXerces r9;

        r9 := @this: com.hp.hpl.jena.sparql.expr.RegexXerces;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r0 = new org.apache.xerces.impl.xpath.regex.RegularExpression;

        specialinvoke $r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.hp.hpl.jena.sparql.expr.ExprException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Regex: Pattern exception: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.hp.hpl.jena.sparql.expr.ExprException: void <init>(java.lang.String)>($r8);

        throw $r4;

        catch org.apache.xerces.impl.xpath.regex.ParseException from label1 to label2 with label3;
    }
}
