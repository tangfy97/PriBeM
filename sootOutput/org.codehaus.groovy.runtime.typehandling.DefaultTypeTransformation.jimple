public class org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation extends java.lang.Object
{
    protected static final java.lang.Object[] EMPTY_ARGUMENTS;
    protected static final java.math.BigInteger ONE_NEG;
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$java$lang$Number;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$util$Collection;
    static java.lang.Class class$java$util$HashSet;
    static java.lang.Class class$java$util$ArrayList;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Character;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$java$lang$Byte;
    static java.lang.Class class$java$lang$Short;
    static java.lang.Class class$java$lang$Long;
    static java.lang.Class class$java$lang$Float;
    static java.lang.Class class$java$lang$Double;
    static java.lang.Class class$java$math$BigDecimal;
    static java.lang.Class class$java$math$BigInteger;

    public void <init>()
    {
        org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation r0;

        r0 := @this: org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte byteUnbox(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Number $r1;
        byte $b0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r0);

        $b0 = virtualinvoke $r1.<java.lang.Number: byte byteValue()>();

        return $b0;
    }

    public static char charUnbox(java.lang.Object)
    {
        java.lang.Object r0;
        char $c0;

        r0 := @parameter0: java.lang.Object;

        $c0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r0);

        return $c0;
    }

    public static short shortUnbox(java.lang.Object)
    {
        java.lang.Object r0;
        short $s0;
        java.lang.Number $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r0);

        $s0 = virtualinvoke $r1.<java.lang.Number: short shortValue()>();

        return $s0;
    }

    public static int intUnbox(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;
        java.lang.Number $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.Number: int intValue()>();

        return $i0;
    }

    public static boolean booleanUnbox(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean castToBoolean(java.lang.Object)>(r0);

        return $z0;
    }

    public static long longUnbox(java.lang.Object)
    {
        java.lang.Object r0;
        long $l0;
        java.lang.Number $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r0);

        $l0 = virtualinvoke $r1.<java.lang.Number: long longValue()>();

        return $l0;
    }

    public static float floatUnbox(java.lang.Object)
    {
        float $f0;
        java.lang.Object r0;
        java.lang.Number $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r0);

        $f0 = virtualinvoke $r1.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public static double doubleUnbox(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Number $r1;
        double $d0;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r0);

        $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    public static java.lang.Object box(boolean)
    {
        java.lang.Boolean $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        return $r0;
    }

    public static java.lang.Object box(byte)
    {
        java.lang.Byte $r0;
        byte b0;

        b0 := @parameter0: byte;

        $r0 = new java.lang.Byte;

        specialinvoke $r0.<java.lang.Byte: void <init>(byte)>(b0);

        return $r0;
    }

    public static java.lang.Object box(char)
    {
        char c0;
        java.lang.Character $r0;

        c0 := @parameter0: char;

        $r0 = new java.lang.Character;

        specialinvoke $r0.<java.lang.Character: void <init>(char)>(c0);

        return $r0;
    }

    public static java.lang.Object box(short)
    {
        short s0;
        java.lang.Short $r0;

        s0 := @parameter0: short;

        $r0 = new java.lang.Short;

        specialinvoke $r0.<java.lang.Short: void <init>(short)>(s0);

        return $r0;
    }

    public static java.lang.Object box(int)
    {
        int i0;
        java.lang.Integer $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.IntegerCache: java.lang.Integer integerValue(int)>(i0);

        return $r0;
    }

    public static java.lang.Object box(long)
    {
        long l0;
        java.lang.Long $r0;

        l0 := @parameter0: long;

        $r0 = new java.lang.Long;

        specialinvoke $r0.<java.lang.Long: void <init>(long)>(l0);

        return $r0;
    }

    public static java.lang.Object box(float)
    {
        java.lang.Float $r0;
        float f0;

        f0 := @parameter0: float;

        $r0 = new java.lang.Float;

        specialinvoke $r0.<java.lang.Float: void <init>(float)>(f0);

        return $r0;
    }

    public static java.lang.Object box(double)
    {
        java.lang.Double $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(d0);

        return $r0;
    }

    public static java.lang.Number castToNumber(java.lang.Object)
    {
        java.lang.Integer $r12, $r13;
        java.lang.Character $r8;
        org.codehaus.groovy.runtime.typehandling.GroovyCastException $r14, $r15;
        int $i0, $i3, $i4;
        java.lang.String r3;
        java.lang.Number $r9;
        boolean $z0, $z1, $z2;
        char $c1, $c2;
        java.lang.Object r0;
        java.lang.Class $r2, $r5, $r10, $r11;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label1;

        $r9 = (java.lang.Number) r0;

        return $r9;

     label1:
        $z1 = r0 instanceof java.lang.Character;

        if $z1 == 0 goto label2;

        $r12 = new java.lang.Integer;

        $r8 = (java.lang.Character) r0;

        $c2 = virtualinvoke $r8.<java.lang.Character: char charValue()>();

        $i3 = (int) $c2;

        specialinvoke $r12.<java.lang.Integer: void <init>(int)>($i3);

        return $r12;

     label2:
        $z2 = r0 instanceof java.lang.String;

        if $z2 == 0 goto label6;

        r3 = (java.lang.String) r0;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 1 goto label3;

        $r13 = new java.lang.Integer;

        $c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c1;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>($i4);

        return $r13;

     label3:
        $r14 = new org.codehaus.groovy.runtime.typehandling.GroovyCastException;

        $r5 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Integer>;

        if $r5 != null goto label4;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Integer> = $r10;

        goto label5;

     label4:
        $r10 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Integer>;

     label5:
        specialinvoke $r14.<org.codehaus.groovy.runtime.typehandling.GroovyCastException: void <init>(java.lang.Object,java.lang.Class)>(r3, $r10);

        throw $r14;

     label6:
        $r15 = new org.codehaus.groovy.runtime.typehandling.GroovyCastException;

        $r2 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Number>;

        if $r2 != null goto label7;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Number");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Number> = $r11;

        goto label8;

     label7:
        $r11 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Number>;

     label8:
        specialinvoke $r15.<org.codehaus.groovy.runtime.typehandling.GroovyCastException: void <init>(java.lang.Object,java.lang.Class)>(r0, $r11);

        throw $r15;
    }

    public static boolean castToBoolean(java.lang.Object)
    {
        java.util.Enumeration r7;
        java.util.regex.Matcher r3;
        byte $b0;
        java.lang.Character r10;
        java.util.Map r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.lang.CharSequence r8;
        java.util.Collection r4;
        java.lang.Object[] $r1, r9;
        int $i2, $i3;
        java.lang.Boolean r2;
        java.lang.Number r11;
        double $d0;
        java.util.Iterator r6;
        char $c1;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        return 0;

     label01:
        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label02;

        r2 = (java.lang.Boolean) r0;

        $z15 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z15;

     label02:
        $z1 = r0 instanceof java.util.regex.Matcher;

        if $z1 == 0 goto label03;

        r3 = (java.util.regex.Matcher) r0;

        staticinvoke <org.codehaus.groovy.runtime.RegexSupport: void setLastMatcher(java.util.regex.Matcher)>(r3);

        $z14 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        return $z14;

     label03:
        $z2 = r0 instanceof java.util.Collection;

        if $z2 == 0 goto label06;

        r4 = (java.util.Collection) r0;

        $z13 = interfaceinvoke r4.<java.util.Collection: boolean isEmpty()>();

        if $z13 != 0 goto label04;

        $z16 = 1;

        goto label05;

     label04:
        $z16 = 0;

     label05:
        return $z16;

     label06:
        $z3 = r0 instanceof java.util.Map;

        if $z3 == 0 goto label09;

        r5 = (java.util.Map) r0;

        $z12 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>();

        if $z12 != 0 goto label07;

        $z17 = 1;

        goto label08;

     label07:
        $z17 = 0;

     label08:
        return $z17;

     label09:
        $z4 = r0 instanceof java.util.Iterator;

        if $z4 == 0 goto label10;

        r6 = (java.util.Iterator) r0;

        $z11 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        return $z11;

     label10:
        $z5 = r0 instanceof java.util.Enumeration;

        if $z5 == 0 goto label11;

        r7 = (java.util.Enumeration) r0;

        $z10 = interfaceinvoke r7.<java.util.Enumeration: boolean hasMoreElements()>();

        return $z10;

     label11:
        $z6 = r0 instanceof java.lang.CharSequence;

        if $z6 == 0 goto label14;

        r8 = (java.lang.CharSequence) r0;

        $i3 = interfaceinvoke r8.<java.lang.CharSequence: int length()>();

        if $i3 <= 0 goto label12;

        $z18 = 1;

        goto label13;

     label12:
        $z18 = 0;

     label13:
        return $z18;

     label14:
        $z7 = r0 instanceof java.lang.Object[];

        if $z7 == 0 goto label17;

        $r1 = (java.lang.Object[]) r0;

        r9 = (java.lang.Object[]) $r1;

        $i2 = lengthof r9;

        if $i2 <= 0 goto label15;

        $z19 = 1;

        goto label16;

     label15:
        $z19 = 0;

     label16:
        return $z19;

     label17:
        $z8 = r0 instanceof java.lang.Character;

        if $z8 == 0 goto label20;

        r10 = (java.lang.Character) r0;

        $c1 = virtualinvoke r10.<java.lang.Character: char charValue()>();

        if $c1 == 0 goto label18;

        $z20 = 1;

        goto label19;

     label18:
        $z20 = 0;

     label19:
        return $z20;

     label20:
        $z9 = r0 instanceof java.lang.Number;

        if $z9 == 0 goto label23;

        r11 = (java.lang.Number) r0;

        $d0 = virtualinvoke r11.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label21;

        $z21 = 1;

        goto label22;

     label21:
        $z21 = 0;

     label22:
        return $z21;

     label23:
        return 1;
    }

    public static char castToChar(java.lang.Object)
    {
        char $c1, $c3, $c4;
        org.codehaus.groovy.runtime.typehandling.GroovyCastException $r2;
        java.lang.Character $r4;
        int $i0, $i2;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r1;
        java.lang.Number r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Character;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Character) r0;

        $c4 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        return $c4;

     label1:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        r5 = (java.lang.Number) r0;

        $i2 = virtualinvoke r5.<java.lang.Number: int intValue()>();

        $c3 = (char) $i2;

        return $c3;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 1 goto label3;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        return $c1;

     label3:
        $r2 = new org.codehaus.groovy.runtime.typehandling.GroovyCastException;

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        specialinvoke $r2.<org.codehaus.groovy.runtime.typehandling.GroovyCastException: void <init>(java.lang.Object,java.lang.Class)>($r1, $r3);

        throw $r2;
    }

    public static java.lang.Object castToType(java.lang.Object, java.lang.Class)
    {
        java.lang.Integer $r69;
        byte $b0, $b1, $b6, $b7, $b8, $b14;
        java.lang.Long $r68;
        java.math.BigInteger $r49, $r50, $r53;
        java.lang.Object[] $r12, r117;
        long $l2, $l9;
        short $s4, $s11;
        java.lang.StringBuffer $r23, $r24, $r26, $r27, $r28, $r29, $r58, $r59, $r62, $r63, $r64, $r65, $r88, $r89, $r91, $r92, $r93;
        java.lang.Short $r70;
        java.util.Collection $r100, r102, r118;
        java.util.HashSet $r99;
        org.codehaus.groovy.runtime.typehandling.GroovyCastException $r10, $r87;
        int $i3, $i10, $i12, $i16, $i17, i18;
        java.lang.Object r0, $r11, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r74, $r75, $r78, $r79, $r83;
        java.lang.Class r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r60, $r73, $r77, $r81, $r82, $r95, $r96, $r97, $r98, $r101, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116;
        java.lang.Float $r67;
        java.math.BigDecimal $r48, $r52, $r54;
        java.lang.Character $r71;
        org.codehaus.groovy.runtime.InvokerInvocationException $r85;
        groovy.lang.GroovyRuntimeException $r22, $r57;
        java.lang.Exception $r84, $r86;
        java.lang.Double $r21, $r56;
        java.util.ArrayList $r80;
        java.lang.String $r25, $r30, $r51, $r55, $r61, $r66, $r76, $r90, $r94;
        java.lang.Number $r38;
        java.lang.Byte $r72;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        float $f0, $f1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        char $c5, $c13, $c15;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        if r0 != null goto label01;

        return null;

     label01:
        $r2 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Object>;

        if $r2 != null goto label02;

        $r95 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Object> = $r95;

        goto label03;

     label02:
        $r95 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Object>;

     label03:
        if r1 != $r95 goto label04;

        return r0;

     label04:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r1 != $r3 goto label05;

        return r0;

     label05:
        $z0 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: boolean isArray(java.lang.Class)>(r1);

        if $z0 == 0 goto label06;

        $r83 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object asArray(java.lang.Object,java.lang.Class)>(r0, r1);

        return $r83;

     label06:
        $z1 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>(r1, $r3);

        if $z1 == 0 goto label07;

        return r0;

     label07:
        $r4 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$Collection>;

        if $r4 != null goto label08;

        $r96 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.util.Collection");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$Collection> = $r96;

        goto label09;

     label08:
        $r96 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$Collection>;

     label09:
        $z2 = virtualinvoke $r96.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z2 == 0 goto label25;

        $i16 = virtualinvoke r1.<java.lang.Class: int getModifiers()>();

        $z14 = r0 instanceof java.util.Collection;

        if $z14 == 0 goto label15;

        $r81 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$HashSet>;

        if $r81 != null goto label10;

        $r97 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.util.HashSet");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$HashSet> = $r97;

        goto label11;

     label10:
        $r97 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$HashSet>;

     label11:
        $z18 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r97);

        if $z18 == 0 goto label15;

        $r82 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$HashSet>;

        if $r82 != null goto label12;

        $r98 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.util.HashSet");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$HashSet> = $r98;

        goto label13;

     label12:
        $r98 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$HashSet>;

     label13:
        if r1 == $r98 goto label14;

        $z19 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i16);

        if $z19 != 0 goto label14;

        $z20 = staticinvoke <java.lang.reflect.Modifier: boolean isInterface(int)>($i16);

        if $z20 == 0 goto label15;

     label14:
        $r99 = new java.util.HashSet;

        $r100 = (java.util.Collection) r0;

        specialinvoke $r99.<java.util.HashSet: void <init>(java.util.Collection)>($r100);

        return $r99;

     label15:
        $z21 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z21 == 0 goto label25;

        $r77 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$ArrayList>;

        if $r77 != null goto label16;

        $r101 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.util.ArrayList");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$ArrayList> = $r101;

        goto label17;

     label16:
        $r101 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$util$ArrayList>;

     label17:
        $z15 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r101);

        if $z15 == 0 goto label19;

        $z16 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i16);

        if $z16 != 0 goto label18;

        $z17 = staticinvoke <java.lang.reflect.Modifier: boolean isInterface(int)>($i16);

        if $z17 == 0 goto label19;

     label18:
        $r80 = new java.util.ArrayList;

        specialinvoke $r80.<java.util.ArrayList: void <init>()>();

        r102 = $r80;

        goto label22;

     label19:
        $r78 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();

        r102 = (java.util.Collection) $r78;

     label20:
        goto label22;

     label21:
        $r86 := @caughtexception;

        $r87 = new org.codehaus.groovy.runtime.typehandling.GroovyCastException;

        $r88 = new java.lang.StringBuffer;

        specialinvoke $r88.<java.lang.StringBuffer: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate instance of: ");

        $r90 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r91 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Reason: ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r86);

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r87.<org.codehaus.groovy.runtime.typehandling.GroovyCastException: void <init>(java.lang.String)>($r94);

        throw $r87;

     label22:
        $i17 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        i18 = 0;

     label23:
        if i18 >= $i17 goto label24;

        $r79 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i18);

        interfaceinvoke r102.<java.util.Collection: boolean add(java.lang.Object)>($r79);

        i18 = i18 + 1;

        goto label23;

     label24:
        return r102;

     label25:
        $r5 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label26;

        $r103 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$String> = $r103;

        goto label27;

     label26:
        $r103 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$String>;

     label27:
        if r1 != $r103 goto label28;

        $r76 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r76;

     label28:
        $r6 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Character>;

        if $r6 != null goto label29;

        $r104 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Character> = $r104;

        goto label30;

     label29:
        $r104 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Character>;

     label30:
        if r1 != $r104 goto label31;

        $c15 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r0);

        $r75 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(char)>($c15);

        return $r75;

     label31:
        $r7 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Boolean>;

        if $r7 != null goto label32;

        $r105 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Boolean> = $r105;

        goto label33;

     label32:
        $r105 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Boolean>;

     label33:
        if r1 != $r105 goto label34;

        $z13 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean castToBoolean(java.lang.Object)>(r0);

        $r74 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z13);

        return $r74;

     label34:
        $r8 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Class>;

        if $r8 != null goto label35;

        $r106 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Class> = $r106;

        goto label36;

     label35:
        $r106 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Class>;

     label36:
        if r1 != $r106 goto label37;

        $r73 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class castToClass(java.lang.Object)>(r0);

        return $r73;

     label37:
        $r9 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Number>;

        if $r9 != null goto label38;

        $r107 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Number");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Number> = $r107;

        goto label39;

     label38:
        $r107 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Number>;

     label39:
        $z3 = virtualinvoke $r107.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z3 == 0 goto label72;

        $r38 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r0);

        $r39 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Byte>;

        if $r39 != null goto label40;

        $r108 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Byte> = $r108;

        goto label41;

     label40:
        $r108 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Byte>;

     label41:
        if r1 != $r108 goto label42;

        $r72 = new java.lang.Byte;

        $b14 = virtualinvoke $r38.<java.lang.Number: byte byteValue()>();

        specialinvoke $r72.<java.lang.Byte: void <init>(byte)>($b14);

        return $r72;

     label42:
        $r40 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Character>;

        if $r40 != null goto label43;

        $r109 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Character> = $r109;

        goto label44;

     label43:
        $r109 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Character>;

     label44:
        if r1 != $r109 goto label45;

        $r71 = new java.lang.Character;

        $i12 = virtualinvoke $r38.<java.lang.Number: int intValue()>();

        $c13 = (char) $i12;

        specialinvoke $r71.<java.lang.Character: void <init>(char)>($c13);

        return $r71;

     label45:
        $r41 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Short>;

        if $r41 != null goto label46;

        $r110 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Short> = $r110;

        goto label47;

     label46:
        $r110 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Short>;

     label47:
        if r1 != $r110 goto label48;

        $r70 = new java.lang.Short;

        $s11 = virtualinvoke $r38.<java.lang.Number: short shortValue()>();

        specialinvoke $r70.<java.lang.Short: void <init>(short)>($s11);

        return $r70;

     label48:
        $r42 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Integer>;

        if $r42 != null goto label49;

        $r111 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Integer> = $r111;

        goto label50;

     label49:
        $r111 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Integer>;

     label50:
        if r1 != $r111 goto label51;

        $r69 = new java.lang.Integer;

        $i10 = virtualinvoke $r38.<java.lang.Number: int intValue()>();

        specialinvoke $r69.<java.lang.Integer: void <init>(int)>($i10);

        return $r69;

     label51:
        $r43 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Long>;

        if $r43 != null goto label52;

        $r112 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Long> = $r112;

        goto label53;

     label52:
        $r112 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Long>;

     label53:
        if r1 != $r112 goto label54;

        $r68 = new java.lang.Long;

        $l9 = virtualinvoke $r38.<java.lang.Number: long longValue()>();

        specialinvoke $r68.<java.lang.Long: void <init>(long)>($l9);

        return $r68;

     label54:
        $r44 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Float>;

        if $r44 != null goto label55;

        $r113 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Float> = $r113;

        goto label56;

     label55:
        $r113 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Float>;

     label56:
        if r1 != $r113 goto label57;

        $r67 = new java.lang.Float;

        $f1 = virtualinvoke $r38.<java.lang.Number: float floatValue()>();

        specialinvoke $r67.<java.lang.Float: void <init>(float)>($f1);

        return $r67;

     label57:
        $r45 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Double>;

        if $r45 != null goto label58;

        $r114 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Double> = $r114;

        goto label59;

     label58:
        $r114 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Double>;

     label59:
        if r1 != $r114 goto label62;

        $r56 = new java.lang.Double;

        $d4 = virtualinvoke $r38.<java.lang.Number: double doubleValue()>();

        specialinvoke $r56.<java.lang.Double: void <init>(double)>($d4);

        $z12 = $r38 instanceof java.lang.Double;

        if $z12 != 0 goto label61;

        $d5 = virtualinvoke $r56.<java.lang.Double: double doubleValue()>();

        $b7 = $d5 cmpl #-Infinity;

        if $b7 == 0 goto label60;

        $d6 = virtualinvoke $r56.<java.lang.Double: double doubleValue()>();

        $b8 = $d6 cmpl #Infinity;

        if $b8 != 0 goto label61;

     label60:
        $r57 = new groovy.lang.GroovyRuntimeException;

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Automatic coercion of ");

        $r60 = virtualinvoke $r38.<java.lang.Object: java.lang.Class getClass()>();

        $r61 = virtualinvoke $r60.<java.lang.Class: java.lang.String getName()>();

        $r62 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r38);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to double failed.  Value is out of range.");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r57.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r66);

        throw $r57;

     label61:
        return $r56;

     label62:
        $r46 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$math$BigDecimal>;

        if $r46 != null goto label63;

        $r115 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.math.BigDecimal");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$math$BigDecimal> = $r115;

        goto label64;

     label63:
        $r115 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$math$BigDecimal>;

     label64:
        if r1 != $r115 goto label65;

        $r54 = new java.math.BigDecimal;

        $r55 = virtualinvoke $r38.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r54.<java.math.BigDecimal: void <init>(java.lang.String)>($r55);

        return $r54;

     label65:
        $r47 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$math$BigInteger>;

        if $r47 != null goto label66;

        $r116 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.math.BigInteger");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$math$BigInteger> = $r116;

        goto label67;

     label66:
        $r116 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$math$BigInteger>;

     label67:
        if r1 != $r116 goto label71;

        $z9 = r0 instanceof java.lang.Float;

        if $z9 != 0 goto label68;

        $z10 = r0 instanceof java.lang.Double;

        if $z10 == 0 goto label69;

     label68:
        $r48 = new java.math.BigDecimal;

        $d3 = virtualinvoke $r38.<java.lang.Number: double doubleValue()>();

        specialinvoke $r48.<java.math.BigDecimal: void <init>(double)>($d3);

        $r49 = virtualinvoke $r48.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        return $r49;

     label69:
        $z11 = r0 instanceof java.math.BigDecimal;

        if $z11 == 0 goto label70;

        $r52 = (java.math.BigDecimal) r0;

        $r53 = virtualinvoke $r52.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        return $r53;

     label70:
        $r50 = new java.math.BigInteger;

        $r51 = virtualinvoke $r38.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r50.<java.math.BigInteger: void <init>(java.lang.String)>($r51);

        return $r50;

     label71:
        goto label82;

     label72:
        $z4 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z4 == 0 goto label82;

        $r13 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 != $r13 goto label73;

        $z8 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r0);

        $r37 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z8);

        return $r37;

     label73:
        $r14 = <java.lang.Byte: java.lang.Class TYPE>;

        if r1 != $r14 goto label74;

        $b6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: byte byteUnbox(java.lang.Object)>(r0);

        $r36 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(byte)>($b6);

        return $r36;

     label74:
        $r15 = <java.lang.Character: java.lang.Class TYPE>;

        if r1 != $r15 goto label75;

        $c5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char charUnbox(java.lang.Object)>(r0);

        $r35 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(char)>($c5);

        return $r35;

     label75:
        $r16 = <java.lang.Short: java.lang.Class TYPE>;

        if r1 != $r16 goto label76;

        $s4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: short shortUnbox(java.lang.Object)>(r0);

        $r34 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(short)>($s4);

        return $r34;

     label76:
        $r17 = <java.lang.Integer: java.lang.Class TYPE>;

        if r1 != $r17 goto label77;

        $i3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>(r0);

        $r33 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>($i3);

        return $r33;

     label77:
        $r18 = <java.lang.Long: java.lang.Class TYPE>;

        if r1 != $r18 goto label78;

        $l2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: long longUnbox(java.lang.Object)>(r0);

        $r32 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(long)>($l2);

        return $r32;

     label78:
        $r19 = <java.lang.Float: java.lang.Class TYPE>;

        if r1 != $r19 goto label79;

        $f0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: float floatUnbox(java.lang.Object)>(r0);

        $r31 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(float)>($f0);

        return $r31;

     label79:
        $r20 = <java.lang.Double: java.lang.Class TYPE>;

        if r1 != $r20 goto label82;

        $r21 = new java.lang.Double;

        $d0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: double doubleUnbox(java.lang.Object)>(r0);

        specialinvoke $r21.<java.lang.Double: void <init>(double)>($d0);

        $z7 = r0 instanceof java.lang.Double;

        if $z7 != 0 goto label81;

        $d1 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        $b0 = $d1 cmpl #-Infinity;

        if $b0 == 0 goto label80;

        $d2 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        $b1 = $d2 cmpl #Infinity;

        if $b1 != 0 goto label81;

     label80:
        $r22 = new groovy.lang.GroovyRuntimeException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Automatic coercion of ");

        $r25 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to double failed.  Value is out of range.");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r30);

        throw $r22;

     label81:
        return $r21;

     label82:
        r117 = null;

        $z22 = r0 instanceof java.util.Collection;

        if $z22 == 0 goto label83;

        r118 = (java.util.Collection) r0;

        r117 = interfaceinvoke r118.<java.util.Collection: java.lang.Object[] toArray()>();

        goto label85;

     label83:
        $z5 = r0 instanceof java.lang.Object[];

        if $z5 == 0 goto label84;

        $r12 = (java.lang.Object[]) r0;

        r117 = (java.lang.Object[]) $r12;

        goto label85;

     label84:
        $z6 = r0 instanceof java.util.Map;

        if $z6 == 0 goto label85;

        r117 = newarray (java.lang.Object)[1];

        r117[0] = r0;

     label85:
        if r117 == null goto label90;

     label86:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeConstructorOf(java.lang.Class,java.lang.Object)>(r1, r117);

     label87:
        return $r11;

     label88:
        $r85 := @caughtexception;

        throw $r85;

     label89:
        $r84 := @caughtexception;

     label90:
        $r10 = new org.codehaus.groovy.runtime.typehandling.GroovyCastException;

        specialinvoke $r10.<org.codehaus.groovy.runtime.typehandling.GroovyCastException: void <init>(java.lang.Object,java.lang.Class)>(r0, r1);

        throw $r10;

        catch java.lang.Exception from label19 to label20 with label21;
        catch org.codehaus.groovy.runtime.InvokerInvocationException from label86 to label87 with label88;
        catch java.lang.Exception from label86 to label87 with label89;
    }

    private static java.lang.Class castToClass(java.lang.Object)
    {
        org.codehaus.groovy.runtime.typehandling.GroovyCastException $r4;
        java.lang.Object r0;
        java.lang.Class $r2, $r5, $r6;
        java.lang.String $r1;
        java.lang.Exception $r3;

        r0 := @parameter0: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.codehaus.groovy.runtime.typehandling.GroovyCastException;

        $r5 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Class>;

        if $r5 != null goto label4;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Class> = $r6;

        goto label5;

     label4:
        $r6 = <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Class class$java$lang$Class>;

     label5:
        specialinvoke $r4.<org.codehaus.groovy.runtime.typehandling.GroovyCastException: void <init>(java.lang.Object,java.lang.Class)>(r0, $r6);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.Object asArray(java.lang.Object, java.lang.Class)
    {
        byte $b5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.util.Collection $r3;
        float $f0;
        long $l2;
        short $s1;
        int $i0, $i3, i6;
        double $d0;
        java.util.Iterator $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;
        char $c4;
        java.lang.Class r0, $r2, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.Object r1, $r5, $r15, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label01;

        return r1;

     label01:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.Collection asCollection(java.lang.Object)>(r1);

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, $i0);

        i6 = 0;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label04;

        $r31 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z17 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label03;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        $z18 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r32);

        staticinvoke <java.lang.reflect.Array: void setBoolean(java.lang.Object,int,boolean)>($r5, i6, $z18);

        i6 = i6 + 1;

        goto label02;

     label03:
        goto label27;

     label04:
        $r7 = <java.lang.Byte: java.lang.Class TYPE>;

        $z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label07;

        $r29 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z16 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label06;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        $b5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: byte byteUnbox(java.lang.Object)>($r30);

        staticinvoke <java.lang.reflect.Array: void setByte(java.lang.Object,int,byte)>($r5, i6, $b5);

        i6 = i6 + 1;

        goto label05;

     label06:
        goto label27;

     label07:
        $r8 = <java.lang.Character: java.lang.Class TYPE>;

        $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label10;

        $r27 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z15 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label09;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $c4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char charUnbox(java.lang.Object)>($r28);

        staticinvoke <java.lang.reflect.Array: void setChar(java.lang.Object,int,char)>($r5, i6, $c4);

        i6 = i6 + 1;

        goto label08;

     label09:
        goto label27;

     label10:
        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $z4 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z4 == 0 goto label13;

        $r25 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z14 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label12;

        $r26 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        $d0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: double doubleUnbox(java.lang.Object)>($r26);

        staticinvoke <java.lang.reflect.Array: void setDouble(java.lang.Object,int,double)>($r5, i6, $d0);

        i6 = i6 + 1;

        goto label11;

     label12:
        goto label27;

     label13:
        $r10 = <java.lang.Float: java.lang.Class TYPE>;

        $z5 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z5 == 0 goto label16;

        $r23 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z13 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label15;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        $f0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: float floatUnbox(java.lang.Object)>($r24);

        staticinvoke <java.lang.reflect.Array: void setFloat(java.lang.Object,int,float)>($r5, i6, $f0);

        i6 = i6 + 1;

        goto label14;

     label15:
        goto label27;

     label16:
        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        $z6 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z6 == 0 goto label19;

        $r21 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label17:
        $z12 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label18;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $i3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>($r22);

        staticinvoke <java.lang.reflect.Array: void setInt(java.lang.Object,int,int)>($r5, i6, $i3);

        i6 = i6 + 1;

        goto label17;

     label18:
        goto label27;

     label19:
        $r12 = <java.lang.Long: java.lang.Class TYPE>;

        $z7 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z7 == 0 goto label22;

        $r19 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label20:
        $z11 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label21;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $l2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: long longUnbox(java.lang.Object)>($r20);

        staticinvoke <java.lang.reflect.Array: void setLong(java.lang.Object,int,long)>($r5, i6, $l2);

        i6 = i6 + 1;

        goto label20;

     label21:
        goto label27;

     label22:
        $r13 = <java.lang.Short: java.lang.Class TYPE>;

        $z8 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z8 == 0 goto label25;

        $r17 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label23:
        $z10 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label24;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $s1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: short shortUnbox(java.lang.Object)>($r18);

        staticinvoke <java.lang.reflect.Array: void setShort(java.lang.Object,int,short)>($r5, i6, $s1);

        i6 = i6 + 1;

        goto label23;

     label24:
        goto label27;

     label25:
        $r14 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label26:
        $z9 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label27;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r4);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r5, i6, $r16);

        i6 = i6 + 1;

        goto label26;

     label27:
        return $r5;
    }

    public static java.util.Collection asCollection(java.lang.Object)
    {
        org.codehaus.groovy.runtime.MethodClosure r27;
        java.util.Map r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        groovy.lang.GroovyRuntimeException $r21;
        java.util.Collection $r16, $r18;
        java.util.Set $r17;
        java.util.List $r2, $r6, $r8, $r10, $r12, $r15, $r19;
        org.codehaus.groovy.runtime.IteratorClosureAdapter $r13;
        java.lang.Object[] $r3, $r5, r28;
        java.lang.StringBuffer $r22, $r23, $r24;
        java.lang.String $r9, $r11, $r25;
        java.io.IOException $r20;
        java.io.File $r7;
        java.lang.Object r0, $r4, $r14;
        java.lang.Class $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        $r19 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r19;

     label01:
        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label02;

        $r18 = (java.util.Collection) r0;

        return $r18;

     label02:
        $z1 = r0 instanceof java.util.Map;

        if $z1 == 0 goto label03;

        r26 = (java.util.Map) r0;

        $r17 = interfaceinvoke r26.<java.util.Map: java.util.Set entrySet()>();

        return $r17;

     label03:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label04;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.Collection arrayAsCollection(java.lang.Object)>(r0);

        return $r16;

     label04:
        $z3 = r0 instanceof org.codehaus.groovy.runtime.MethodClosure;

        if $z3 == 0 goto label05;

        r27 = (org.codehaus.groovy.runtime.MethodClosure) r0;

        $r13 = new org.codehaus.groovy.runtime.IteratorClosureAdapter;

        $r14 = virtualinvoke r27.<org.codehaus.groovy.runtime.MethodClosure: java.lang.Object getDelegate()>();

        specialinvoke $r13.<org.codehaus.groovy.runtime.IteratorClosureAdapter: void <init>(java.lang.Object)>($r14);

        virtualinvoke r27.<org.codehaus.groovy.runtime.MethodClosure: java.lang.Object call(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r13.<org.codehaus.groovy.runtime.IteratorClosureAdapter: java.util.List asList()>();

        return $r15;

     label05:
        $z4 = r0 instanceof java.lang.String;

        if $z4 == 0 goto label06;

        $r11 = (java.lang.String) r0;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.String)>($r11);

        return $r12;

     label06:
        $z5 = r0 instanceof groovy.lang.GString;

        if $z5 == 0 goto label07;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r10 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.String)>($r9);

        return $r10;

     label07:
        $z6 = r0 instanceof java.io.File;

        if $z6 == 0 goto label11;

     label08:
        $r7 = (java.io.File) r0;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List readLines(java.io.File)>($r7);

     label09:
        return $r8;

     label10:
        $r20 := @caughtexception;

        $r21 = new groovy.lang.GroovyRuntimeException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading file: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r20);

        throw $r21;

     label11:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean isEnumSubclass(java.lang.Object)>(r0);

        if $z7 == 0 goto label12;

        $r3 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "values", $r3);

        $r5 = (java.lang.Object[]) $r4;

        r28 = (java.lang.Object[]) $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r28);

        return $r6;

     label12:
        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r0);

        return $r2;

        catch java.io.IOException from label08 to label09 with label10;
    }

    public static java.util.Collection arrayAsCollection(java.lang.Object)
    {
        java.lang.Object[] $r3, $r4;
        java.util.List $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.List primitiveArrayToList(java.lang.Object)>(r0);

        return $r6;

     label1:
        $r3 = (java.lang.Object[]) r0;

        $r4 = (java.lang.Object[]) $r3;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        return $r5;
    }

    public static boolean isEnumSubclass(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1, r3;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label3;

        $r1 = (java.lang.Class) r0;

        r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

     label1:
        if r3 == null goto label3;

        $r2 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Enum");

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return 0;
    }

    public static java.util.List primitiveArrayToList(java.lang.Object)
    {
        java.util.ArrayList $r1;
        int $i0, i1;
        java.lang.Object r0, $r2, r6;
        java.lang.Class $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        r6 = $r2;

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getComponentType()>();

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label2;

        r6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.List primitiveArrayToList(java.lang.Object)>($r2);

     label2:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r6);

        i1 = i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static java.lang.Object[] primitiveArrayBox(java.lang.Object)
    {
        java.lang.Object[] $r5, r6;
        int $i0, i1;
        java.lang.Object r0, $r4, $r7;
        java.lang.Class $r1, $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $r3 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class autoboxType(java.lang.Class)>($r2);

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i0);

        $r5 = (java.lang.Object[]) $r4;

        r6 = (java.lang.Object[]) $r5;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        r6[i1] = $r7;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r6;
    }

    public static int compareTo(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int compareToWithEqualityCheck(java.lang.Object,java.lang.Object,boolean)>(r0, r1, 0);

        return $i0;
    }

    private static int compareToWithEqualityCheck(java.lang.Object, java.lang.Object, boolean)
    {
        groovy.lang.GroovyRuntimeException $r30;
        java.lang.StringBuffer $r4, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r29;
        java.lang.String $r6, $r12, $r17, $r22, $r23, $r24, $r25;
        java.lang.Number $r26, $r27;
        java.lang.Comparable $r28;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        int $i0, $i1, $i4, $i7, $i10, $i11, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27;
        char $c2, $c3, $c5, $c6, $c8, $c9, $c12, $c13;
        java.lang.Object r0, r1;
        java.lang.Class $r5, $r11, $r18, $r19, $r20, $r21;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        z1 := @parameter2: boolean;

        if r0 != r1 goto label01;

        return 0;

     label01:
        if r0 != null goto label02;

        $i17 = (int) -1;

        return $i17;

     label02:
        if r1 != null goto label03;

        return 1;

     label03:
        $z0 = r0 instanceof java.lang.Comparable;

        if $z0 == 0 goto label13;

        $z2 = r0 instanceof java.lang.Number;

        if $z2 == 0 goto label06;

        $z16 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean isValidCharacterString(java.lang.Object)>(r1);

        if $z16 == 0 goto label04;

        $c12 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r0);

        $c13 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r1);

        $i18 = (int) $c12;

        $i19 = (int) $c13;

        $i14 = $i18 - $i19;

        return $i14;

     label04:
        $z17 = r1 instanceof java.lang.Character;

        if $z17 != 0 goto label05;

        $z18 = r1 instanceof java.lang.Number;

        if $z18 == 0 goto label11;

     label05:
        $r26 = (java.lang.Number) r0;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Number castToNumber(java.lang.Object)>(r1);

        $i11 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: int compareTo(java.lang.Number,java.lang.Number)>($r26, $r27);

        return $i11;

     label06:
        $z3 = r0 instanceof java.lang.Character;

        if $z3 == 0 goto label08;

        $z14 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean isValidCharacterString(java.lang.Object)>(r1);

        if $z14 == 0 goto label07;

        $c8 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r0);

        $c9 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r1);

        $i20 = (int) $c8;

        $i21 = (int) $c9;

        $i10 = $i20 - $i21;

        return $i10;

     label07:
        $z15 = r1 instanceof java.lang.Number;

        if $z15 == 0 goto label11;

        $c5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r0);

        $c6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r1);

        $i22 = (int) $c5;

        $i23 = (int) $c6;

        $i7 = $i22 - $i23;

        return $i7;

     label08:
        $z4 = r1 instanceof java.lang.Number;

        if $z4 == 0 goto label09;

        $z13 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean isValidCharacterString(java.lang.Object)>(r0);

        if $z13 == 0 goto label11;

        $c2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r0);

        $c3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char castToChar(java.lang.Object)>(r1);

        $i24 = (int) $c2;

        $i25 = (int) $c3;

        $i4 = $i24 - $i25;

        return $i4;

     label09:
        $z5 = r0 instanceof java.lang.String;

        if $z5 == 0 goto label10;

        $z12 = r1 instanceof java.lang.Character;

        if $z12 == 0 goto label10;

        $r24 = (java.lang.String) r0;

        $r25 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r24.<java.lang.String: int compareTo(java.lang.String)>($r25);

        return $i1;

     label10:
        $z6 = r0 instanceof java.lang.String;

        if $z6 == 0 goto label11;

        $z11 = r1 instanceof groovy.lang.GString;

        if $z11 == 0 goto label11;

        $r22 = (java.lang.String) r0;

        $r23 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r22.<java.lang.String: int compareTo(java.lang.String)>($r23);

        return $i0;

     label11:
        if z1 == 0 goto label12;

        $r18 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z7 = virtualinvoke $r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r19);

        if $z7 != 0 goto label12;

        $r20 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z8 = virtualinvoke $r20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);

        if $z8 != 0 goto label12;

        $z9 = r0 instanceof groovy.lang.GString;

        if $z9 == 0 goto label13;

        $z10 = r1 instanceof java.lang.String;

        if $z10 == 0 goto label13;

     label12:
        $r28 = (java.lang.Comparable) r0;

        $i15 = interfaceinvoke $r28.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        return $i15;

     label13:
        if z1 == 0 goto label14;

        $i27 = (int) -1;

        return $i27;

     label14:
        $r30 = new groovy.lang.GroovyRuntimeException;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot compare ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with value \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' and ");

        $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with value \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r30.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r17);

        throw $r30;
    }

    public static boolean compareEqual(java.lang.Object, java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.util.List $r4, $r5, $r8, $r10;
        java.lang.Object[] $r6, $r7, $r9, $r11;
        int $i0;
        java.lang.Boolean $r3;
        java.lang.Class $r0, $r1, $r12, $r13;
        java.lang.Object $r2, r14, r15;

        r14 := @parameter0: java.lang.Object;

        r15 := @parameter1: java.lang.Object;

        if r14 != r15 goto label01;

        return 1;

     label01:
        if r14 == null goto label02;

        if r15 != null goto label03;

     label02:
        return 0;

     label03:
        $z0 = r14 instanceof java.lang.Comparable;

        if $z0 == 0 goto label06;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int compareToWithEqualityCheck(java.lang.Object,java.lang.Object,boolean)>(r14, r15, 1);

        if $i0 != 0 goto label04;

        $z16 = 1;

        goto label05;

     label04:
        $z16 = 0;

     label05:
        return $z16;

     label06:
        $r0 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke r15.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label07;

        $z14 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z14 == 0 goto label07;

        $z15 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareArrayEqual(java.lang.Object,java.lang.Object)>(r14, r15);

        return $z15;

     label07:
        $z2 = virtualinvoke $r0.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label08;

        $r13 = virtualinvoke $r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $z13 = virtualinvoke $r13.<java.lang.Class: boolean isPrimitive()>();

        if $z13 == 0 goto label08;

        r14 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.List primitiveArrayToList(java.lang.Object)>(r14);

     label08:
        $z17 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z17 == 0 goto label09;

        $r12 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $z12 = virtualinvoke $r12.<java.lang.Class: boolean isPrimitive()>();

        if $z12 == 0 goto label09;

        r15 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.util.List primitiveArrayToList(java.lang.Object)>(r15);

     label09:
        $z18 = r14 instanceof java.lang.Object[];

        if $z18 == 0 goto label10;

        $z10 = r15 instanceof java.util.List;

        if $z10 == 0 goto label10;

        $r9 = (java.lang.Object[]) r14;

        $r11 = (java.lang.Object[]) $r9;

        $r10 = (java.util.List) r15;

        $z11 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: boolean equals(java.lang.Object[],java.util.List)>($r11, $r10);

        return $z11;

     label10:
        $z3 = r14 instanceof java.util.List;

        if $z3 == 0 goto label11;

        $z8 = r15 instanceof java.lang.Object[];

        if $z8 == 0 goto label11;

        $r8 = (java.util.List) r14;

        $r6 = (java.lang.Object[]) r15;

        $r7 = (java.lang.Object[]) $r6;

        $z9 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: boolean equals(java.util.List,java.lang.Object[])>($r8, $r7);

        return $z9;

     label11:
        $z4 = r14 instanceof java.util.List;

        if $z4 == 0 goto label12;

        $z6 = r15 instanceof java.util.List;

        if $z6 == 0 goto label12;

        $r5 = (java.util.List) r14;

        $r4 = (java.util.List) r15;

        $z7 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: boolean equals(java.util.List,java.util.List)>($r5, $r4);

        return $z7;

     label12:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r14, "equals", r15);

        $r3 = (java.lang.Boolean) $r2;

        $z5 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z5;
    }

    public static boolean compareArrayEqual(java.lang.Object, java.lang.Object)
    {
        int $i0, $i1, $i2, i3;
        java.lang.Object r0, r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        if r1 != null goto label4;

        return 0;

     label4:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r1);

        if $i0 == $i1 goto label5;

        return 0;

     label5:
        i3 = 0;

     label6:
        $i2 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        if i3 >= $i2 goto label8;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i3);

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r1, i3);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return 1;
    }

    private static boolean isValidCharacterString(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r1 = (java.lang.String) r0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static int[] convertToIntArray(java.lang.Object)
    {
        java.lang.Object[] $r3, r4;
        int[] $r8, r9;
        int $i0, $i1, $i2, i3;
        java.lang.Object r0, $r5, $r6;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.lang.Number $r7;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("[I");

        if $z0 == 0 goto label1;

        $r8 = (int[]) r0;

        r9 = (int[]) $r8;

        goto label5;

     label1:
        $r3 = (java.lang.Object[]) r0;

        r4 = (java.lang.Object[]) $r3;

        $i0 = lengthof r4;

        r9 = newarray (int)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r4;

        if i3 >= $i1 goto label5;

        $r5 = r4[i3];

        if $r5 != null goto label3;

        goto label4;

     label3:
        $r6 = r4[i3];

        $r7 = (java.lang.Number) $r6;

        $i2 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        r9[i3] = $i2;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return r9;
    }

    public static boolean[] convertToBooleanArray(java.lang.Object)
    {
        java.lang.Object[] $r1, r2;
        boolean[] $r6, r7;
        int $i0, $i1, i2;
        java.lang.Boolean $r5;
        java.lang.Object r0, $r3, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof boolean[];

        if $z0 == 0 goto label1;

        $r6 = (boolean[]) r0;

        r7 = (boolean[]) $r6;

        goto label5;

     label1:
        $r1 = (java.lang.Object[]) r0;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        r7 = newarray (boolean)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label5;

        $r3 = r2[i2];

        if $r3 != null goto label3;

        goto label4;

     label3:
        $r4 = r2[i2];

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        r7[i2] = $z1;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return r7;
    }

    public static byte[] convertToByteArray(java.lang.Object)
    {
        byte[] $r6, r7;
        java.lang.Object[] $r1, r2;
        byte $b2;
        int $i0, $i1, i3;
        java.lang.Object r0, $r3, $r4;
        java.lang.Number $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        $r6 = (byte[]) r0;

        r7 = (byte[]) $r6;

        goto label4;

     label1:
        $r1 = (java.lang.Object[]) r0;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        r7 = newarray (byte)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label4;

        $r3 = r2[i3];

        if $r3 == null goto label3;

        $r4 = r2[i3];

        $r5 = (java.lang.Number) $r4;

        $b2 = virtualinvoke $r5.<java.lang.Number: byte byteValue()>();

        r7[i3] = $b2;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return r7;
    }

    public static short[] convertToShortArray(java.lang.Object)
    {
        java.lang.Object[] $r1, r2;
        short $s2;
        int $i0, $i1, i3;
        java.lang.Object r0, $r3;
        short[] $r5, r6;
        java.lang.Number $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof short[];

        if $z0 == 0 goto label1;

        $r5 = (short[]) r0;

        r6 = (short[]) $r5;

        goto label3;

     label1:
        $r1 = (java.lang.Object[]) r0;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        r6 = newarray (short)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label3;

        $r3 = r2[i3];

        $r4 = (java.lang.Number) $r3;

        $s2 = virtualinvoke $r4.<java.lang.Number: short shortValue()>();

        r6[i3] = $s2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r6;
    }

    public static char[] convertToCharArray(java.lang.Object)
    {
        java.lang.Object[] $r1, r2;
        char $c2;
        java.lang.Character $r5;
        int $i0, $i1, i3;
        char[] $r6, r7;
        java.lang.Object r0, $r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof char[];

        if $z0 == 0 goto label1;

        $r6 = (char[]) r0;

        r7 = (char[]) $r6;

        goto label5;

     label1:
        $r1 = (java.lang.Object[]) r0;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        r7 = newarray (char)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label5;

        $r3 = r2[i3];

        if $r3 != null goto label3;

        goto label4;

     label3:
        $r4 = r2[i3];

        $r5 = (java.lang.Character) $r4;

        $c2 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        r7[i3] = $c2;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return r7;
    }

    public static long[] convertToLongArray(java.lang.Object)
    {
        java.lang.Object[] $r1, r2;
        long $l2;
        long[] $r6, r7;
        int $i0, $i1, i3;
        java.lang.Object r0, $r3, $r4;
        java.lang.Number $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof long[];

        if $z0 == 0 goto label1;

        $r6 = (long[]) r0;

        r7 = (long[]) $r6;

        goto label5;

     label1:
        $r1 = (java.lang.Object[]) r0;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        r7 = newarray (long)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label5;

        $r3 = r2[i3];

        if $r3 != null goto label3;

        goto label4;

     label3:
        $r4 = r2[i3];

        $r5 = (java.lang.Number) $r4;

        $l2 = virtualinvoke $r5.<java.lang.Number: long longValue()>();

        r7[i3] = $l2;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return r7;
    }

    public static float[] convertToFloatArray(java.lang.Object)
    {
        java.lang.Object[] $r1, r2;
        float[] $r6, r7;
        int $i0, $i1, i2;
        float $f0;
        java.lang.Object r0, $r3, $r4;
        java.lang.Number $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof float[];

        if $z0 == 0 goto label1;

        $r6 = (float[]) r0;

        r7 = (float[]) $r6;

        goto label5;

     label1:
        $r1 = (java.lang.Object[]) r0;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        r7 = newarray (float)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label5;

        $r3 = r2[i2];

        if $r3 != null goto label3;

        goto label4;

     label3:
        $r4 = r2[i2];

        $r5 = (java.lang.Number) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        r7[i2] = $f0;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return r7;
    }

    public static double[] convertToDoubleArray(java.lang.Object)
    {
        java.lang.Object[] $r1, r2;
        double[] $r6, r7;
        int $i0, $i1, i2;
        java.lang.Object r0, $r3, $r4;
        java.lang.Number $r5;
        boolean $z0;
        double $d0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof double[];

        if $z0 == 0 goto label1;

        $r6 = (double[]) r0;

        r7 = (double[]) $r6;

        goto label5;

     label1:
        $r1 = (java.lang.Object[]) r0;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        r7 = newarray (double)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label5;

        $r3 = r2[i2];

        if $r3 != null goto label3;

        goto label4;

     label3:
        $r4 = r2[i2];

        $r5 = (java.lang.Number) $r4;

        $d0 = virtualinvoke $r5.<java.lang.Number: double doubleValue()>();

        r7[i2] = $d0;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return r7;
    }

    public static java.lang.Object convertToPrimitiveArray(java.lang.Object, java.lang.Class)
    {
        byte[] $r17;
        double[] $r10;
        float[] $r11;
        long[] $r12;
        int[] $r13;
        boolean[] $r16;
        char[] $r14;
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.Object r9;
        short[] $r15;

        r9 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Class;

        $r1 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        $r17 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: byte[] convertToByteArray(java.lang.Object)>(r9);

        return $r17;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r2 goto label2;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean[] convertToBooleanArray(java.lang.Object)>(r9);

        return $r16;

     label2:
        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: short[] convertToShortArray(java.lang.Object)>(r9);

        return $r15;

     label3:
        $r4 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r4 goto label4;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: char[] convertToCharArray(java.lang.Object)>(r9);

        return $r14;

     label4:
        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int[] convertToIntArray(java.lang.Object)>(r9);

        return $r13;

     label5:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r6 goto label6;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: long[] convertToLongArray(java.lang.Object)>(r9);

        return $r12;

     label6:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r7 goto label7;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: float[] convertToFloatArray(java.lang.Object)>(r9);

        return $r11;

     label7:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r8 goto label8;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: double[] convertToDoubleArray(java.lang.Object)>(r9);

        return $r10;

     label8:
        return r9;
    }

    public static java.lang.Character getCharFromSizeOneString(java.lang.Object)
    {
        char $c1;
        java.lang.IllegalArgumentException $r3;
        java.lang.Character $r0, $r2;
        int $i0;
        java.lang.Object r4;
        java.lang.String r1;
        boolean $z0, $z1;

        r4 := @parameter0: java.lang.Object;

        $z0 = r4 instanceof groovy.lang.GString;

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

     label1:
        $z1 = r4 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        r1 = (java.lang.String) r4;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 1 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("String of length 1 expected but got a bigger one");

        throw $r3;

     label2:
        $r2 = new java.lang.Character;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        specialinvoke $r2.<java.lang.Character: void <init>(char)>($c1);

        return $r2;

     label3:
        $r0 = (java.lang.Character) r4;

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r1;
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object[] EMPTY_ARGUMENTS> = $r0;

        $r1 = new java.math.BigInteger;

        specialinvoke $r1.<java.math.BigInteger: void <init>(java.lang.String)>("-1");

        <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.math.BigInteger ONE_NEG> = $r1;

        return;
    }
}
