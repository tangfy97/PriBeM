public class com.hp.hpl.jena.sparql.mgt.Explain extends java.lang.Object
{
    public static boolean MultiLineMode;
    public static final org.slf4j.Logger logExec;
    public static final org.slf4j.Logger logInfo;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.mgt.Explain r0;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.Explain;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void explain(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.util.Context r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.util.Context)>("Query", r0, r1);

        return;
    }

    public static void explain(java.lang.String, com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r4;
        org.slf4j.Logger $r1, $r7;
        org.apache.jena.atlas.io.IndentedLineBuffer $r3;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel $r2;
        java.lang.String $r5, r6;
        boolean $z0;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: com.hp.hpl.jena.query.Query;

        r0 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r2 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel INFO>;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,org.slf4j.Logger,com.hp.hpl.jena.sparql.util.Context)>($r2, $r1, r0);

        if $z0 == 0 goto label1;

        $r3 = new org.apache.jena.atlas.io.IndentedLineBuffer;

        specialinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: void <init>()>();

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: void incIndent()>();

        virtualinvoke r4.<com.hp.hpl.jena.query.Query: void serialize(org.apache.jena.atlas.io.IndentedLineBuffer)>($r3);

        $r5 = virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: java.lang.String asString()>();

        $r7 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String,java.lang.String,boolean)>($r7, r6, $r5, 1);

     label1:
        return;
    }

    public static void explain(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.util.Context r1;
        com.hp.hpl.jena.sparql.algebra.Op r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r1 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.util.Context)>("Algebra", r0, r1);

        return;
    }

    public static void explain(java.lang.String, com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.util.Context)
    {
        org.slf4j.Logger $r1, $r7;
        org.apache.jena.atlas.io.IndentedLineBuffer $r3;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel $r2;
        java.lang.String $r5, r6;
        com.hp.hpl.jena.sparql.algebra.Op r4;
        boolean $z0;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: com.hp.hpl.jena.sparql.algebra.Op;

        r0 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r2 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel FINE>;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,org.slf4j.Logger,com.hp.hpl.jena.sparql.util.Context)>($r2, $r1, r0);

        if $z0 == 0 goto label1;

        $r3 = new org.apache.jena.atlas.io.IndentedLineBuffer;

        specialinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: void <init>()>();

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: void incIndent()>();

        interfaceinvoke r4.<com.hp.hpl.jena.sparql.algebra.Op: void output(org.apache.jena.atlas.io.IndentedWriter)>($r3);

        $r5 = virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: java.lang.String asString()>();

        $r7 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String,java.lang.String,boolean)>($r7, r6, $r5, 1);

     label1:
        return;
    }

    public static void explain(com.hp.hpl.jena.sparql.core.BasicPattern, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.core.BasicPattern r0;
        com.hp.hpl.jena.sparql.util.Context r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.BasicPattern;

        r1 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.sparql.core.BasicPattern,com.hp.hpl.jena.sparql.util.Context)>("BGP", r0, r1);

        return;
    }

    public static void explain(java.lang.String, com.hp.hpl.jena.sparql.core.BasicPattern, com.hp.hpl.jena.sparql.util.Context)
    {
        org.slf4j.Logger $r1, $r5;
        com.hp.hpl.jena.sparql.core.BasicPattern r4;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel $r2;
        java.lang.String r3, $r6;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: com.hp.hpl.jena.sparql.core.BasicPattern;

        r0 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r2 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel ALL>;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,org.slf4j.Logger,com.hp.hpl.jena.sparql.util.Context)>($r2, $r1, r0);

        if $z0 == 0 goto label1;

        $r5 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        $r6 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.BasicPattern: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String,java.lang.String,boolean)>($r5, r3, $r6, 0);

     label1:
        return;
    }

    public static void explain(java.lang.String, com.hp.hpl.jena.sparql.core.QuadPattern, com.hp.hpl.jena.sparql.util.Context)
    {
        org.slf4j.Logger $r1, $r7;
        com.hp.hpl.jena.sparql.core.QuadPattern r4;
        org.apache.jena.atlas.io.IndentedLineBuffer $r3;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel $r2;
        java.lang.String $r5, r6;
        boolean $z0;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: com.hp.hpl.jena.sparql.core.QuadPattern;

        r0 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r2 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel ALL>;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,org.slf4j.Logger,com.hp.hpl.jena.sparql.util.Context)>($r2, $r1, r0);

        if $z0 == 0 goto label1;

        $r3 = new org.apache.jena.atlas.io.IndentedLineBuffer;

        specialinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: void <init>()>();

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: void incIndent()>();

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void formatQuads(org.apache.jena.atlas.io.IndentedLineBuffer,com.hp.hpl.jena.sparql.core.QuadPattern)>($r3, r4);

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: void flush()>();

        $r5 = virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedLineBuffer: java.lang.String toString()>();

        $r7 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String,java.lang.String,boolean)>($r7, r6, $r5, 0);

     label1:
        return;
    }

    private static void formatQuads(org.apache.jena.atlas.io.IndentedLineBuffer, com.hp.hpl.jena.sparql.core.QuadPattern)
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.core.QuadPattern r2;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r1;
        org.apache.jena.atlas.io.IndentedLineBuffer r6;
        com.hp.hpl.jena.graph.Node $r7, $r8, $r9, $r10;
        com.hp.hpl.jena.sparql.core.Quad r5;
        java.lang.Object $r4;
        com.hp.hpl.jena.shared.PrefixMapping $r0;
        boolean $z0, z1;

        r6 := @parameter0: org.apache.jena.atlas.io.IndentedLineBuffer;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.QuadPattern;

        $r0 = <com.hp.hpl.jena.sparql.sse.SSE: com.hp.hpl.jena.shared.PrefixMapping defaultPrefixMapWrite>;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.SSE: com.hp.hpl.jena.sparql.serializer.SerializationContext sCxt(com.hp.hpl.jena.shared.PrefixMapping)>($r0);

        z1 = 1;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.core.QuadPattern: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.sparql.core.Quad) $r4;

        if z1 != 0 goto label2;

        virtualinvoke r6.<org.apache.jena.atlas.io.IndentedLineBuffer: void print(java.lang.String)>(" ");

        goto label3;

     label2:
        z1 = 0;

     label3:
        virtualinvoke r6.<org.apache.jena.atlas.io.IndentedLineBuffer: void print(java.lang.String)>("(");

        $r7 = virtualinvoke r5.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r6, $r7, $r1);

        virtualinvoke r6.<org.apache.jena.atlas.io.IndentedLineBuffer: void print(java.lang.String)>(" ");

        $r8 = virtualinvoke r5.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getSubject()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r6, $r8, $r1);

        virtualinvoke r6.<org.apache.jena.atlas.io.IndentedLineBuffer: void print(java.lang.String)>(" ");

        $r9 = virtualinvoke r5.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getPredicate()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r6, $r9, $r1);

        virtualinvoke r6.<org.apache.jena.atlas.io.IndentedLineBuffer: void print(java.lang.String)>(" ");

        $r10 = virtualinvoke r5.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getObject()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterNode: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r6, $r10, $r1);

        virtualinvoke r6.<org.apache.jena.atlas.io.IndentedLineBuffer: void print(java.lang.String)>(")");

        goto label1;

     label4:
        return;
    }

    private static void _explain(org.slf4j.Logger, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r1, r10, r11;
        boolean $z0, $z1, z2, $z3;
        org.slf4j.Logger r5;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r6, $r7, $r8, $r9;

        r5 := @parameter0: org.slf4j.Logger;

        r1 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

     label1:
        $z0 = virtualinvoke r10.<java.lang.String: boolean endsWith(java.lang.String)>("\n");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r10.<java.lang.String: boolean endsWith(java.lang.String)>("\r");

        if $z1 == 0 goto label3;

     label2:
        r10 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String chop(java.lang.String)>(r10);

        goto label1;

     label3:
        if z2 != 0 goto label4;

        $z3 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z3 == 0 goto label5;

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String)>(r5, r11);

        return;
    }

    private static void _explain(org.slf4j.Logger, java.lang.String)
    {
        org.slf4j.Logger r0;
        java.lang.String r1;

        r0 := @parameter0: org.slf4j.Logger;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.slf4j.Logger: void info(java.lang.String)>(r1);

        return;
    }

    public static void explain(com.hp.hpl.jena.sparql.util.Context, java.lang.String)
    {
        org.slf4j.Logger $r1, $r4;
        java.lang.String r3;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        r3 := @parameter1: java.lang.String;

        $r2 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel INFO>;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logInfo>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,org.slf4j.Logger,com.hp.hpl.jena.sparql.util.Context)>($r2, $r1, r0);

        if $z0 == 0 goto label1;

        $r4 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logInfo>;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String)>($r4, r3);

     label1:
        return;
    }

    public static transient void explain(com.hp.hpl.jena.sparql.util.Context, java.lang.String, java.lang.Object[])
    {
        org.slf4j.Logger $r1, $r6;
        java.lang.Object[] r4;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel $r2;
        java.lang.String r3, $r5;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        $r2 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel INFO>;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logInfo>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,org.slf4j.Logger,com.hp.hpl.jena.sparql.util.Context)>($r2, $r1, r0);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r3, r4);

        $r6 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logInfo>;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String)>($r6, $r5);

     label1:
        return;
    }

    public static boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel, org.slf4j.Logger, com.hp.hpl.jena.sparql.util.Context)
    {
        org.slf4j.Logger r2;
        com.hp.hpl.jena.sparql.util.Context r1;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel r0;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel;

        r2 := @parameter1: org.slf4j.Logger;

        r1 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean _explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,com.hp.hpl.jena.sparql.util.Context)>(r0, r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = interfaceinvoke r2.<org.slf4j.Logger: boolean isInfoEnabled()>();

        return $z1;
    }

    private static boolean _explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel, com.hp.hpl.jena.sparql.util.Context)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.Boolean $r6;
        java.lang.String r12;
        com.hp.hpl.jena.sparql.util.Symbol $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        com.hp.hpl.jena.sparql.util.Context r2;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel r0, $r1, $r5, $r7, $r8, $r9, $r10, r11;
        java.lang.Object $r4;

        r0 := @parameter0: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel;

        r2 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel NONE>;

        if r0 != $r1 goto label01;

        return 0;

     label01:
        $r3 = <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Symbol symLogExec>;

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r3, null);

        if $r4 != null goto label02;

        return 0;

     label02:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: int level()>();

        $r5 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel NONE>;

        $i1 = virtualinvoke $r5.<com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: int level()>();

        if $i0 != $i1 goto label03;

        return 0;

     label03:
        $z0 = $r4 instanceof com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel;

        if $z0 == 0 goto label07;

        r11 = (com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel) $r4;

        $r10 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel NONE>;

        if r11 != $r10 goto label04;

        return 0;

     label04:
        $i2 = virtualinvoke r11.<com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: int level()>();

        $i3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: int level()>();

        if $i2 < $i3 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        return $z11;

     label07:
        $z1 = $r4 instanceof java.lang.String;

        if $z1 == 0 goto label15;

        r12 = (java.lang.String) $r4;

        $z3 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("info");

        if $z3 == 0 goto label08;

        $r9 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel INFO>;

        $z10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: boolean equals(java.lang.Object)>($r9);

        return $z10;

     label08:
        $z4 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("fine");

        if $z4 == 0 goto label12;

        $r7 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel FINE>;

        $z8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: boolean equals(java.lang.Object)>($r7);

        if $z8 != 0 goto label09;

        $r8 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel INFO>;

        $z9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: boolean equals(java.lang.Object)>($r8);

        if $z9 == 0 goto label10;

     label09:
        $z12 = 1;

        goto label11;

     label10:
        $z12 = 0;

     label11:
        return $z12;

     label12:
        $z5 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("all");

        if $z5 == 0 goto label13;

        return 1;

     label13:
        $z6 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z6 == 0 goto label14;

        return 1;

     label14:
        $z7 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z7 == 0 goto label15;

        return 0;

     label15:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z2 = virtualinvoke $r6.<java.lang.Boolean: boolean equals(java.lang.Object)>($r4);

        return $z2;
    }

    public static void explain(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.path.Path r1;
        com.hp.hpl.jena.graph.Node r0, r2;
        com.hp.hpl.jena.sparql.util.Context r3;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.sparql.path.Path;

        r2 := @parameter2: com.hp.hpl.jena.graph.Node;

        r3 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.util.Context)>("Path", r0, r1, r2, r3);

        return;
    }

    public static void explain(java.lang.String, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.graph.Node r4, r10;
        com.hp.hpl.jena.sparql.path.Path r7;
        java.lang.String $r12, r13;
        boolean $z0;
        org.slf4j.Logger $r1, $r14;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r11;

        r13 := @parameter0: java.lang.String;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r7 := @parameter2: com.hp.hpl.jena.sparql.path.Path;

        r10 := @parameter3: com.hp.hpl.jena.graph.Node;

        r0 := @parameter4: com.hp.hpl.jena.sparql.util.Context;

        $r2 = <com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel: com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel ALL>;

        $r1 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: boolean explaining(com.hp.hpl.jena.sparql.mgt.Explain$InfoLevel,org.slf4j.Logger,com.hp.hpl.jena.sparql.util.Context)>($r2, $r1, r0);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec>;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void _explain(org.slf4j.Logger,java.lang.String,java.lang.String,boolean)>($r14, r13, $r12, 0);

     label1:
        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0, $r1;

        <com.hp.hpl.jena.sparql.mgt.Explain: boolean MultiLineMode> = 1;

        $r0 = staticinvoke <com.hp.hpl.jena.query.ARQ: org.slf4j.Logger getExecLogger()>();

        <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logExec> = $r0;

        $r1 = staticinvoke <com.hp.hpl.jena.query.ARQ: org.slf4j.Logger getInfoLogger()>();

        <com.hp.hpl.jena.sparql.mgt.Explain: org.slf4j.Logger logInfo> = $r1;

        return;
    }
}
