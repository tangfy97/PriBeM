public class org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader extends org.apache.lucene.codecs.TermVectorsReader implements java.io.Closeable
{
    static final byte STORE_POSITIONS_WITH_TERMVECTOR;
    static final byte STORE_OFFSET_WITH_TERMVECTOR;
    static final byte STORE_PAYLOAD_WITH_TERMVECTOR;
    static final java.lang.String VECTORS_FIELDS_EXTENSION;
    static final java.lang.String VECTORS_DOCUMENTS_EXTENSION;
    static final java.lang.String VECTORS_INDEX_EXTENSION;
    static final java.lang.String CODEC_NAME_FIELDS;
    static final java.lang.String CODEC_NAME_DOCS;
    static final java.lang.String CODEC_NAME_INDEX;
    static final int VERSION_NO_PAYLOADS;
    static final int VERSION_PAYLOADS;
    static final int VERSION_START;
    static final int VERSION_CURRENT;
    static final long HEADER_LENGTH_FIELDS;
    static final long HEADER_LENGTH_DOCS;
    static final long HEADER_LENGTH_INDEX;
    private org.apache.lucene.index.FieldInfos fieldInfos;
    private org.apache.lucene.store.IndexInput tvx;
    private org.apache.lucene.store.IndexInput tvd;
    private org.apache.lucene.store.IndexInput tvf;
    private int size;
    private int numTotalDocs;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput, int, int)
    {
        org.apache.lucene.store.IndexInput r2, r3, r4;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;
        int i0, i1;
        org.apache.lucene.index.FieldInfos r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        r1 := @parameter0: org.apache.lucene.index.FieldInfos;

        r2 := @parameter1: org.apache.lucene.store.IndexInput;

        r3 := @parameter2: org.apache.lucene.store.IndexInput;

        r4 := @parameter3: org.apache.lucene.store.IndexInput;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        specialinvoke r0.<org.apache.lucene.codecs.TermVectorsReader: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx> = r2;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd> = r3;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf> = r4;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int size> = i0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int numTotalDocs> = i1;

        return;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        byte $b13, $b16, $b19;
        org.apache.lucene.store.Directory r4;
        org.apache.lucene.index.FieldInfos r15;
        org.apache.lucene.store.IOContext r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.index.SegmentInfo r1;
        java.lang.Throwable $r25, $r26, $r27;
        long $l4, $l5, $l6, $l7, $l11, $l12, $l14, $l15, $l17, $l18;
        java.lang.AssertionError $r16, $r17, $r18, $r20, $r22, $r24;
        int $i0, $i1, $i2, $i3, $i8, $i9, $i10;
        java.lang.String r2, $r3, $r8, $r11;
        org.apache.lucene.store.IndexInput $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r19, $r21, $r23;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        r4 := @parameter0: org.apache.lucene.store.Directory;

        r1 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r15 := @parameter2: org.apache.lucene.index.FieldInfos;

        r5 := @parameter3: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.codecs.TermVectorsReader: void <init>()>();

        r2 = r1.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $i0 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

     label01:
        $r3 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r2, "", "tvx");

        $r6 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r3, r5);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx> = $r6;

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $i1 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r7, "Lucene40TermVectorsIndex", 0, 1);

        $r8 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r2, "", "tvd");

        $r9 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r8, r5);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd> = $r9;

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        $i2 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r10, "Lucene40TermVectorsDocs", 0, 1);

        $r11 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r2, "", "tvf");

        $r12 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r11, r5);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf> = $r12;

        $r13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        $i3 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r13, "Lucene40TermVectorsFields", 0, 1);

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $l17 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_INDEX>;

        $r23 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $l18 = virtualinvoke $r23.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $b19 = $l17 cmp $l18;

        if $b19 == 0 goto label02;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label02:
        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $l14 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_DOCS>;

        $r21 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        $l15 = virtualinvoke $r21.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $b16 = $l14 cmp $l15;

        if $b16 == 0 goto label03;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label03:
        $z2 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z2 != 0 goto label04;

        $l11 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_FIELDS>;

        $r19 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        $l12 = virtualinvoke $r19.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $b13 = $l11 cmp $l12;

        if $b13 == 0 goto label04;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label04:
        $z3 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z3 != 0 goto label05;

        if $i1 == $i2 goto label05;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label05:
        $z4 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z4 != 0 goto label06;

        if $i1 == $i3 goto label06;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label06:
        $r14 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $l4 = virtualinvoke $r14.<org.apache.lucene.store.IndexInput: long length()>();

        $l5 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_INDEX>;

        $l6 = $l4 - $l5;

        $l7 = $l6 >> 4;

        $i8 = (int) $l7;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int numTotalDocs> = $i8;

        $i9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int numTotalDocs>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int size> = $i9;

        $z5 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z5 != 0 goto label07;

        if $i0 == 0 goto label07;

        $i10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int numTotalDocs>;

        if $i10 == $i0 goto label07;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label07:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r15;

     label08:
        if 1 != 0 goto label18;

     label09:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: void close()>();

     label10:
        goto label18;

     label11:
        $r27 := @caughtexception;

        goto label18;

     label12:
        $r26 := @caughtexception;

     label13:
        if 0 != 0 goto label17;

     label14:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: void close()>();

     label15:
        goto label17;

     label16:
        $r25 := @caughtexception;

     label17:
        throw $r26;

     label18:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label08 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    org.apache.lucene.store.IndexInput getTvdStream()
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        return $r1;
    }

    org.apache.lucene.store.IndexInput getTvfStream()
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        return $r1;
    }

    void seekTvx(int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;
        int i0;
        long $l1, $l2, $l3, $l4;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $l1 = (long) i0;

        $l3 = $l1 * 16L;

        $l2 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_INDEX>;

        $l4 = $l3 + $l2;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void seek(long)>($l4);

        return;
    }

    final void rawDocs(int[], int[], int, int) throws java.io.IOException
    {
        int[] r8, r9;
        boolean $z0, $z1;
        long $l1, $l2, l9, l10, l12, l13, $l14, $l16;
        java.lang.AssertionError $r10, $r13;
        int i0, i3, $i4, i5, $i6, $i7, $i8, i11, $i15, $i17;
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r11, $r12;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        r8 := @parameter0: int[];

        r9 := @parameter1: int[];

        i0 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        if $r1 != null goto label1;

        staticinvoke <java.util.Arrays: void fill(int[],int)>(r8, 0);

        staticinvoke <java.util.Arrays: void fill(int[],int)>(r9, 0);

        return;

     label1:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: void seekTvx(int)>(i0);

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        virtualinvoke $r3.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $l2 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexInput: void seek(long)>($l2);

        l9 = $l1;

        l10 = $l2;

        i11 = 0;

     label2:
        if i11 >= i3 goto label6;

        $i4 = i0 + i11;

        i5 = $i4 + 1;

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $i8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int numTotalDocs>;

        if i5 <= $i8 goto label3;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label3:
        $i6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int numTotalDocs>;

        if i5 >= $i6 goto label4;

        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        l12 = virtualinvoke $r11.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        l13 = virtualinvoke $r12.<org.apache.lucene.store.IndexInput: long readLong()>();

        goto label5;

     label4:
        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        l12 = virtualinvoke $r6.<org.apache.lucene.store.IndexInput: long length()>();

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        l13 = virtualinvoke $r7.<org.apache.lucene.store.IndexInput: long length()>();

        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $i7 = i3 - 1;

        if i11 == $i7 goto label5;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label5:
        $l14 = l12 - l9;

        $i15 = (int) $l14;

        r8[i11] = $i15;

        $l16 = l13 - l10;

        $i17 = (int) $l16;

        r9[i11] = $i17;

        i11 = i11 + 1;

        l9 = l12;

        l10 = l13;

        goto label2;

     label6:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r2, $r3, $r4;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r1;
        java.io.Closeable[] $r0;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r0 = newarray (java.io.Closeable)[3];

        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        $r0[1] = $r3;

        $r4 = r1.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        $r0[2] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        return;
    }

    int size()
    {
        int $i0;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int size>;

        return $i0;
    }

    public org.apache.lucene.index.Fields get(int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader$TVFields $r2;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;
        int i0, $i1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        if $r1 == null goto label2;

        $r2 = new org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader$TVFields;

        specialinvoke $r2.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader$TVFields: void <init>(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader,int)>(r0, i0);

        $i1 = virtualinvoke $r2.<org.apache.lucene.index.Fields: int size()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        return $r2;

     label2:
        return null;
    }

    public org.apache.lucene.codecs.TermVectorsReader clone()
    {
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r5, $r6, r7, r8, r9;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0, $r10;
        int $i0, $i1;
        org.apache.lucene.index.FieldInfos $r11;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        r7 = null;

        r8 = null;

        r9 = null;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        r7 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        r8 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        r9 = virtualinvoke $r6.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

     label1:
        $r10 = new org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int size>;

        $i1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int numTotalDocs>;

        specialinvoke $r10.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: void <init>(org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput,int,int)>($r11, r7, r8, r9, $i0, $i1);

        return $r10;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.codecs.TermVectorsReader $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.codecs.TermVectorsReader clone()>();

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$000(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader)
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvx>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$100(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader)
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvd>;

        return $r1;
    }

    static org.apache.lucene.index.FieldInfos access$300(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader)
    {
        org.apache.lucene.index.FieldInfos $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$400(org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader)
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: org.apache.lucene.store.IndexInput tvf>;

        return $r1;
    }

    static void <clinit>()
    {
        long $l1, $l3, $l5;
        int $i0, $i2, $i4;
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int VERSION_CURRENT> = 1;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int VERSION_START> = 0;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int VERSION_PAYLOADS> = 1;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: int VERSION_NO_PAYLOADS> = 0;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: java.lang.String CODEC_NAME_INDEX> = "Lucene40TermVectorsIndex";

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: java.lang.String CODEC_NAME_DOCS> = "Lucene40TermVectorsDocs";

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: java.lang.String CODEC_NAME_FIELDS> = "Lucene40TermVectorsFields";

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: java.lang.String VECTORS_INDEX_EXTENSION> = "tvx";

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: java.lang.String VECTORS_DOCUMENTS_EXTENSION> = "tvd";

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: java.lang.String VECTORS_FIELDS_EXTENSION> = "tvf";

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: byte STORE_PAYLOAD_WITH_TERMVECTOR> = 4;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: byte STORE_OFFSET_WITH_TERMVECTOR> = 2;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: byte STORE_POSITIONS_WITH_TERMVECTOR> = 1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: boolean $assertionsDisabled> = $z1;

        $i0 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int headerLength(java.lang.String)>("Lucene40TermVectorsFields");

        $l1 = (long) $i0;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_FIELDS> = $l1;

        $i2 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int headerLength(java.lang.String)>("Lucene40TermVectorsDocs");

        $l3 = (long) $i2;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_DOCS> = $l3;

        $i4 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int headerLength(java.lang.String)>("Lucene40TermVectorsIndex");

        $l5 = (long) $i4;

        <org.apache.lucene.codecs.lucene40.Lucene40TermVectorsReader: long HEADER_LENGTH_INDEX> = $l5;

        return;
    }
}
