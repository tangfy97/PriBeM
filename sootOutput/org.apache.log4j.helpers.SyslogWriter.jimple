public class org.apache.log4j.helpers.SyslogWriter extends java.io.Writer
{
    final int SYSLOG_PORT;
    static java.lang.String syslogHost;
    private java.net.InetAddress address;
    private final int port;
    private java.net.DatagramSocket ds;

    public void <init>(java.lang.String)
    {
        java.net.URL $r28;
        java.lang.NullPointerException $r26;
        java.net.InetAddress $r8;
        boolean $z0;
        org.apache.log4j.helpers.SyslogWriter r0;
        java.net.DatagramSocket $r30;
        java.net.SocketException $r12;
        java.lang.StringBuffer $r4, $r5, $r14, $r15, $r16, $r20, $r21, $r22, $r27, $r29, $r31;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, i8, $i10, $i12, $i13, $i15;
        java.lang.String r1, $r6, $r7, $r10, $r17, $r23, r25;
        java.net.MalformedURLException $r24;
        char $c3;
        java.net.UnknownHostException $r18;

        r0 := @this: org.apache.log4j.helpers.SyslogWriter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.apache.log4j.helpers.SyslogWriter: int SYSLOG_PORT> = 514;

        r0.<org.apache.log4j.helpers.SyslogWriter: int SYSLOG_PORT> = 514;

        <org.apache.log4j.helpers.SyslogWriter: java.lang.String syslogHost> = r1;

        if r1 != null goto label01;

        $r26 = new java.lang.NullPointerException;

        specialinvoke $r26.<java.lang.NullPointerException: void <init>(java.lang.String)>("syslogHost");

        throw $r26;

     label01:
        r25 = r1;

        $i10 = (int) -1;

        i8 = $i10;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("[");

        $i12 = (int) -1;

        if $i0 != $i12 goto label02;

        $i6 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        $i7 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(58);

        if $i6 != $i7 goto label06;

     label02:
        $r28 = new java.net.URL;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("http://");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<java.net.URL: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r28.<java.net.URL: java.lang.String getHost()>();

        if $r7 == null goto label04;

        $r10 = virtualinvoke $r28.<java.net.URL: java.lang.String getHost()>();

        r25 = $r10;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label03;

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i2);

        $i13 = (int) $c3;

        if $i13 != 93 goto label03;

        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        r25 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(1, $i5);

     label03:
        i8 = virtualinvoke $r28.<java.net.URL: int getPort()>();

     label04:
        goto label06;

     label05:
        $r24 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Malformed URL: will attempt to interpret as InetAddress.", $r24);

     label06:
        $i15 = (int) -1;

        if i8 != $i15 goto label07;

        i8 = 514;

     label07:
        r0.<org.apache.log4j.helpers.SyslogWriter: int port> = i8;

     label08:
        $r8 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r25);

        r0.<org.apache.log4j.helpers.SyslogWriter: java.net.InetAddress address> = $r8;

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r25);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". All logging will FAIL.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r23, $r18);

     label11:
        $r30 = new java.net.DatagramSocket;

        specialinvoke $r30.<java.net.DatagramSocket: void <init>()>();

        r0.<org.apache.log4j.helpers.SyslogWriter: java.net.DatagramSocket ds> = $r30;

     label12:
        goto label14;

     label13:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate DatagramSocket to ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r25);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". All logging will FAIL.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r17, $r12);

     label14:
        return;

        catch java.net.MalformedURLException from label02 to label04 with label05;
        catch java.net.UnknownHostException from label08 to label09 with label10;
        catch java.net.SocketException from label11 to label12 with label13;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        org.apache.log4j.helpers.SyslogWriter r0;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.helpers.SyslogWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.apache.log4j.helpers.SyslogWriter: void write(java.lang.String)>($r1);

        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        byte[] $r4;
        org.apache.log4j.helpers.SyslogWriter r0;
        java.net.DatagramSocket $r1, $r7;
        java.net.InetAddress $r2, $r6;
        int $i0, i1;
        java.lang.String r3;
        java.net.DatagramPacket $r5;

        r0 := @this: org.apache.log4j.helpers.SyslogWriter;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.helpers.SyslogWriter: java.net.DatagramSocket ds>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.log4j.helpers.SyslogWriter: java.net.InetAddress address>;

        if $r2 == null goto label2;

        $r4 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>();

        i1 = lengthof $r4;

        if i1 < 1024 goto label1;

        i1 = 1024;

     label1:
        $r5 = new java.net.DatagramPacket;

        $r6 = r0.<org.apache.log4j.helpers.SyslogWriter: java.net.InetAddress address>;

        $i0 = r0.<org.apache.log4j.helpers.SyslogWriter: int port>;

        specialinvoke $r5.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>($r4, i1, $r6, $i0);

        $r7 = r0.<org.apache.log4j.helpers.SyslogWriter: java.net.DatagramSocket ds>;

        virtualinvoke $r7.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>($r5);

     label2:
        return;
    }

    public void flush()
    {
        org.apache.log4j.helpers.SyslogWriter r0;

        r0 := @this: org.apache.log4j.helpers.SyslogWriter;

        return;
    }

    public void close()
    {
        java.net.DatagramSocket $r1, $r2;
        org.apache.log4j.helpers.SyslogWriter r0;

        r0 := @this: org.apache.log4j.helpers.SyslogWriter;

        $r1 = r0.<org.apache.log4j.helpers.SyslogWriter: java.net.DatagramSocket ds>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.log4j.helpers.SyslogWriter: java.net.DatagramSocket ds>;

        virtualinvoke $r2.<java.net.DatagramSocket: void close()>();

     label1:
        return;
    }
}
