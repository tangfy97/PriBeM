class ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple extends java.lang.Object implements ucar.nc2.VariableSimpleIF
{
    java.lang.String name;
    java.lang.String desc;
    java.lang.String units;
    ucar.ma2.DataType dt;
    java.util.List atts;

    void <init>(org.jdom.Element)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.ma2.DataType $r4;
        java.util.List $r6, $r8, $r24;
        ucar.nc2.Attribute $r23, r26;
        java.util.ArrayList $r5;
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.String $r2, $r3, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r27;
        java.util.Iterator $r7, $r9;
        ucar.ma2.Array $r22;
        java.lang.Object $r10, $r20;
        org.jdom.Element r1, r25;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        r1 := @parameter0: org.jdom.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String name> = $r2;

        $r3 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r4 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.String)>($r3);

        r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: ucar.ma2.DataType dt> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.util.List atts> = $r5;

        $r6 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("attribute");

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r20 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.jdom.Element) $r20;

        $r21 = virtualinvoke r25.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r22 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.ma2.Array readAttributeValues(org.jdom.Element)>(r25);

        $r24 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.util.List atts>;

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r21, $r22);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label1;

     label2:
        $r8 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.util.List atts>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r26 = (ucar.nc2.Attribute) $r10;

        $r11 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("units");

        if $z2 == 0 goto label4;

        $r19 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String units> = $r19;

     label4:
        $r12 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("long_name");

        if $z3 == 0 goto label5;

        $r18 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String desc> = $r18;

     label5:
        $r13 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String desc>;

        if $r13 != null goto label6;

        $r16 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("description");

        if $z5 == 0 goto label6;

        $r17 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String desc> = $r17;

     label6:
        $r27 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String desc>;

        if $r27 != null goto label7;

        $r14 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("standard_name");

        if $z4 == 0 goto label7;

        $r15 = virtualinvoke r26.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String desc> = $r15;

     label7:
        goto label3;

     label8:
        return;
    }

    public java.lang.String getName()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        $r1 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getShortName()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        $r1 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        $r1 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String desc>;

        return $r1;
    }

    public java.lang.String getUnitsString()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        $r1 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String units>;

        return $r1;
    }

    public int getRank()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        return 0;
    }

    public int[] getShape()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r1;
        int[] $r0;

        r1 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        $r0 = newarray (int)[0];

        return $r0;
    }

    public java.util.List getDimensions()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        return null;
    }

    public ucar.ma2.DataType getDataType()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        ucar.ma2.DataType $r1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        $r1 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: ucar.ma2.DataType dt>;

        return $r1;
    }

    public java.util.List getAttributes()
    {
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        $r1 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.util.List atts>;

        return $r1;
    }

    public ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)
    {
        java.util.Iterator $r2;
        java.util.List $r1;
        ucar.nc2.Attribute r4;
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.util.List atts>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Attribute) $r3;

        $r5 = virtualinvoke r4.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public int compareTo(ucar.nc2.VariableSimpleIF)
    {
        ucar.nc2.VariableSimpleIF r1;
        int $i0;
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.String $r2, $r3;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        r1 := @parameter0: ucar.nc2.VariableSimpleIF;

        $r2 = r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: java.lang.String name>;

        $r3 = interfaceinvoke r1.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.VariableSimpleIF $r2;
        int $i0;
        ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple r0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.VariableSimpleIF) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.point.writer.FeatureDatasetPointXML$VariableSimple: int compareTo(ucar.nc2.VariableSimpleIF)>($r2);

        return $i0;
    }
}
