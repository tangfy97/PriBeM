class ucar.nc2.iosp.hdf5.H5header$LocalHeap extends java.lang.Object
{
    ucar.nc2.iosp.hdf5.H5header$H5Group group;
    int size;
    long freelistOffset;
    long dataAddress;
    byte[] heap;
    byte version;
    final ucar.nc2.iosp.hdf5.H5header this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5header, ucar.nc2.iosp.hdf5.H5header$H5Group, long) throws java.io.IOException
    {
        byte[] $r10, $r12, $r61;
        byte $b2, $b10, $b13, $b21;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r15, $r17, $r18, $r22, $r24, $r25, $r29, $r31, $r35, $r37, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r52, $r53, $r57, $r59, $r62, $r64, $r66, $r67, $r68, $r69, $r70;
        long l0, $l1, $l3, $l5, $l6, $l7, $l8, $l15, $l16, $l17, $l18, $l20, $l23, $l24, $l25;
        java.lang.String $r16, $r19, $r23, $r26, $r32, $r38, $r49, $r54, $r60, $r63;
        java.lang.IllegalStateException $r65;
        ucar.unidata.io.RandomAccessFile $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r30, $r36, $r58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.nc2.iosp.hdf5.H5header$H5Group r2;
        ucar.nc2.iosp.hdf5.H5header$LocalHeap r0;
        int $i4, $i9, $i11, $i12, $i14, $i19, $i22, $i26, $i27, $i28;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r13, $r20;
        java.io.PrintStream $r27, $r33, $r39, $r55;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$LocalHeap;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r2 := @parameter1: ucar.nc2.iosp.hdf5.H5header$H5Group;

        l0 := @parameter2: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: ucar.nc2.iosp.hdf5.H5header$H5Group group> = r2;

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, l0);

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z0 == 0 goto label1;

        $r55 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-- readLocalHeap position=");

        $r58 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l25 = virtualinvoke $r58.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r60);

     label1:
        $r61 = newarray (byte)[4];

        $r5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r61);

        $r63 = new java.lang.String;

        specialinvoke $r63.<java.lang.String: void <init>(byte[])>($r61);

        $z1 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>("HEAP");

        if $z1 != 0 goto label2;

        $r65 = new java.lang.IllegalStateException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should equal HEAP");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54);

        throw $r65;

     label2:
        $r7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $b2 = virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: byte version> = $b2;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(3);

        $l3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i4 = (int) $l3;

        r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: int size> = $i4;

        $l5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: long freelistOffset> = $l5;

        $l6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: long dataAddress> = $l6;

        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z2 == 0 goto label3;

        $r39 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version=");

        $b21 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: byte version>;

        $i26 = (int) $b21;

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $i22 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: int size>;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freelistOffset=");

        $l23 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: long freelistOffset>;

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l23);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heap starts at dataAddress=");

        $l24 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: long dataAddress>;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l24);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r49);

     label3:
        $z3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1300()>();

        if $z3 == 0 goto label4;

        $r33 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    *now at position=");

        $r36 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l20 = virtualinvoke $r36.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label4:
        $r9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l7 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: long dataAddress>;

        $l8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, $l7);

        virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l8);

        $i9 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: int size>;

        $r10 = newarray (byte)[$i9];

        r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: byte[] heap> = $r10;

        $r11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r12 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: byte[] heap>;

        virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r12);

        $z4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z4 == 0 goto label5;

        $r27 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-- endLocalHeap position=");

        $r30 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l18 = virtualinvoke $r30.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32);

     label5:
        $b10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: byte access$5200(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i27 = (int) $b10;

        $i11 = 2 * $i27;

        $i12 = 8 + $i11;

        $b13 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: byte access$5100(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i28 = (int) $b13;

        $i19 = $i12 + $i28;

        $z5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1700()>();

        if $z5 == 0 goto label6;

        $r20 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker access$1800(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group LocalHeap (");

        $r23 = r2.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $l17 = (long) $i19;

        virtualinvoke $r20.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void addByLen(java.lang.String,long,long)>($r26, l0, $l17);

     label6:
        $z6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1700()>();

        if $z6 == 0 goto label7;

        $r13 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker access$1800(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group LocalHeapData (");

        $r16 = r2.<ucar.nc2.iosp.hdf5.H5header$H5Group: java.lang.String displayName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $l16 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: long dataAddress>;

        $i14 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: int size>;

        $l15 = (long) $i14;

        virtualinvoke $r13.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void addByLen(java.lang.String,long,long)>($r19, $l16, $l15);

     label7:
        return;
    }

    public java.lang.String getString(int)
    {
        byte[] $r1, $r3;
        java.lang.IllegalStateException $r6;
        byte $b2;
        int i0, $i1, i3;
        java.lang.String $r2, $r4, $r7;
        java.io.UnsupportedEncodingException $r5;
        ucar.nc2.iosp.hdf5.H5header$LocalHeap r0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$LocalHeap;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: byte[] heap>;

        $i1 = i0 + i3;

        $b2 = $r1[$i1];

        if $b2 == 0 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.String;

        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header$LocalHeap: byte[] heap>;

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.lang.String access$6900()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r3, i0, i3, $r4);

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r5.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }
}
