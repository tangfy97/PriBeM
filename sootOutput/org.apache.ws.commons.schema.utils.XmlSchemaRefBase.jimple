public abstract class org.apache.ws.commons.schema.utils.XmlSchemaRefBase extends java.lang.Object
{
    protected org.apache.ws.commons.schema.XmlSchema parent;
    protected javax.xml.namespace.QName targetQName;
    private org.apache.ws.commons.schema.utils.XmlSchemaNamed namedTwin;

    public void <init>()
    {
        org.apache.ws.commons.schema.utils.XmlSchemaRefBase r0;

        r0 := @this: org.apache.ws.commons.schema.utils.XmlSchemaRefBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract void forgetTargetObject();

    public void setNamedObject(org.apache.ws.commons.schema.utils.XmlSchemaNamed)
    {
        org.apache.ws.commons.schema.utils.XmlSchemaRefBase r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamed r1;

        r0 := @this: org.apache.ws.commons.schema.utils.XmlSchemaRefBase;

        r1 := @parameter0: org.apache.ws.commons.schema.utils.XmlSchemaNamed;

        r0.<org.apache.ws.commons.schema.utils.XmlSchemaRefBase: org.apache.ws.commons.schema.utils.XmlSchemaNamed namedTwin> = r1;

        return;
    }

    public javax.xml.namespace.QName getTargetQName()
    {
        org.apache.ws.commons.schema.utils.XmlSchemaRefBase r0;
        javax.xml.namespace.QName $r1;

        r0 := @this: org.apache.ws.commons.schema.utils.XmlSchemaRefBase;

        $r1 = r0.<org.apache.ws.commons.schema.utils.XmlSchemaRefBase: javax.xml.namespace.QName targetQName>;

        return $r1;
    }

    public void setTargetQName(javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.utils.XmlSchemaNamed $r2, $r3;
        org.apache.ws.commons.schema.utils.XmlSchemaRefBase r1;
        javax.xml.namespace.QName r0;
        org.apache.ws.commons.schema.XmlSchemaException $r4;
        boolean $z0;

        r1 := @this: org.apache.ws.commons.schema.utils.XmlSchemaRefBase;

        r0 := @parameter0: javax.xml.namespace.QName;

        if r0 == null goto label1;

        $r2 = r1.<org.apache.ws.commons.schema.utils.XmlSchemaRefBase: org.apache.ws.commons.schema.utils.XmlSchemaNamed namedTwin>;

        if $r2 == null goto label1;

        $r3 = r1.<org.apache.ws.commons.schema.utils.XmlSchemaRefBase: org.apache.ws.commons.schema.utils.XmlSchemaNamed namedTwin>;

        $z0 = interfaceinvoke $r3.<org.apache.ws.commons.schema.utils.XmlSchemaNamed: boolean isAnonymous()>();

        if $z0 != 0 goto label1;

        $r4 = new org.apache.ws.commons.schema.XmlSchemaException;

        specialinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String)>("It is invalid to set the ref= name for an item that has a name.");

        throw $r4;

     label1:
        r1.<org.apache.ws.commons.schema.utils.XmlSchemaRefBase: javax.xml.namespace.QName targetQName> = r0;

        virtualinvoke r1.<org.apache.ws.commons.schema.utils.XmlSchemaRefBase: void forgetTargetObject()>();

        return;
    }
}
