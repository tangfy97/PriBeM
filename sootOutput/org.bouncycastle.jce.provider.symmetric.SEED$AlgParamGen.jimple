public class org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen extends org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen r0;

        r0 := @this: org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameterGenerator: void <init>()>();

        return;
    }

    protected void engineInit(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.SecureRandom r3;
        java.security.spec.AlgorithmParameterSpec r2;
        org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen r1;
        java.security.InvalidAlgorithmParameterException $r0;

        r1 := @this: org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen;

        r2 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter1: java.security.SecureRandom;

        $r0 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r0.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("No supported AlgorithmParameterSpec for SEED parameter generation.");

        throw $r0;
    }

    protected java.security.AlgorithmParameters engineGenerateParameters()
    {
        byte[] r0;
        java.lang.RuntimeException $r8;
        java.security.AlgorithmParameters $r4;
        java.lang.Exception $r7;
        java.security.SecureRandom $r2, $r3, $r6;
        javax.crypto.spec.IvParameterSpec $r5;
        java.lang.String $r9;
        org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen r1;

        r1 := @this: org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen;

        r0 = newarray (byte)[16];

        $r2 = r1.<org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen: java.security.SecureRandom random>;

        if $r2 != null goto label1;

        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        r1.<org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen: java.security.SecureRandom random> = $r6;

     label1:
        $r3 = r1.<org.bouncycastle.jce.provider.symmetric.SEED$AlgParamGen: java.security.SecureRandom random>;

        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>(r0);

     label2:
        $r4 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("SEED", "BC");

        $r5 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r0);

        virtualinvoke $r4.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r5);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label5:
        return $r4;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
