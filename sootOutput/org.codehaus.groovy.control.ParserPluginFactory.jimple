public abstract class org.codehaus.groovy.control.ParserPluginFactory extends java.lang.Object
{
    static java.lang.Class class$org$codehaus$groovy$control$ParserPluginFactory;

    public void <init>()
    {
        org.codehaus.groovy.control.ParserPluginFactory r0;

        r0 := @this: org.codehaus.groovy.control.ParserPluginFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.codehaus.groovy.control.ParserPluginFactory newInstance(boolean)
    {
        java.lang.StringBuffer $r5, $r6, $r7;
        java.lang.Thread $r11;
        java.lang.String $r8;
        boolean z0;
        org.codehaus.groovy.antlr.AntlrParserPluginFactory $r0;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r3;
        org.codehaus.groovy.control.ParserPluginFactory $r2;
        java.lang.Object $r1;
        java.lang.ClassNotFoundException $r9, $r10, $r13;
        java.lang.Class $r14, r16, $r17;
        java.lang.ClassLoader $r12, $r15;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label16;

        r16 = null;

     label01:
        r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.codehaus.groovy.antlr.AntlrParserPluginFactory");

     label02:
        goto label12;

     label03:
        $r13 := @caughtexception;

     label04:
        $r14 = <org.codehaus.groovy.control.ParserPluginFactory: java.lang.Class class$org$codehaus$groovy$control$ParserPluginFactory>;

        if $r14 != null goto label05;

        $r17 = staticinvoke <org.codehaus.groovy.control.ParserPluginFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.control.ParserPluginFactory");

        <org.codehaus.groovy.control.ParserPluginFactory: java.lang.Class class$org$codehaus$groovy$control$ParserPluginFactory> = $r17;

        goto label06;

     label05:
        $r17 = <org.codehaus.groovy.control.ParserPluginFactory: java.lang.Class class$org$codehaus$groovy$control$ParserPluginFactory>;

     label06:
        $r15 = virtualinvoke $r17.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r16 = virtualinvoke $r15.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.codehaus.groovy.antlr.AntlrParserPluginFactory");

     label07:
        goto label12;

     label08:
        $r10 := @caughtexception;

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r12 = virtualinvoke $r11.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        if $r12 == null goto label12;

     label09:
        r16 = virtualinvoke $r12.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.codehaus.groovy.antlr.AntlrParserPluginFactory");

     label10:
        goto label12;

     label11:
        $r9 := @caughtexception;

     label12:
        if r16 == null goto label16;

     label13:
        $r1 = virtualinvoke r16.<java.lang.Class: java.lang.Object newInstance()>();

        $r2 = (org.codehaus.groovy.control.ParserPluginFactory) $r1;

     label14:
        return $r2;

     label15:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not create AntlrParserPluginFactory: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r4;

     label16:
        $r0 = new org.codehaus.groovy.antlr.AntlrParserPluginFactory;

        specialinvoke $r0.<org.codehaus.groovy.antlr.AntlrParserPluginFactory: void <init>()>();

        return $r0;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.ClassNotFoundException from label04 to label07 with label08;
        catch java.lang.ClassNotFoundException from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public abstract org.codehaus.groovy.control.ParserPlugin createParserPlugin();

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
