final class com.mycila.inject.jsr250.Jsr250Module extends java.lang.Object implements com.google.inject.Module
{
    private final java.util.Set scopes;
    private final java.util.Set scopeAnnotations;

    void <init>()
    {
        java.util.HashSet $r1, $r2;
        com.mycila.inject.jsr250.Jsr250Module r0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250Module;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.mycila.inject.jsr250.Jsr250Module: java.util.Set scopes> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.mycila.inject.jsr250.Jsr250Module: java.util.Set scopeAnnotations> = $r2;

        return;
    }

    public void configure(com.google.inject.Binder)
    {
        com.mycila.inject.MycilaGuice $r5, $r6, $r7;
        com.google.inject.binder.ScopedBindingBuilder $r2;
        com.google.inject.binder.AnnotatedBindingBuilder $r1, $r3, $r4;
        com.mycila.inject.jsr250.Jsr250Module r9;
        com.google.inject.Binder r0;
        com.mycila.inject.jsr250.Jsr250Module$1 $r8;

        r9 := @this: com.mycila.inject.jsr250.Jsr250Module;

        r0 := @parameter0: com.google.inject.Binder;

        $r1 = interfaceinvoke r0.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/mycila/inject/jsr250/Jsr250Injector;");

        $r2 = interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lcom/mycila/inject/jsr250/Jsr250InjectorImpl;");

        interfaceinvoke $r2.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r3 = interfaceinvoke r0.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/mycila/inject/jsr250/Jsr250KeyProvider;");

        interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r4 = interfaceinvoke r0.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/mycila/inject/jsr250/Jsr250PostConstructHandler;");

        interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r5 = staticinvoke <com.mycila.inject.MycilaGuice: com.mycila.inject.MycilaGuice in(com.google.inject.Binder)>(r0);

        $r6 = virtualinvoke $r5.<com.mycila.inject.MycilaGuice: com.mycila.inject.MycilaGuice bindAnnotationInjector(java.lang.Class,java.lang.Class)>(class "Ljavax/annotation/Resource;", class "Lcom/mycila/inject/jsr250/Jsr250KeyProvider;");

        $r7 = virtualinvoke $r6.<com.mycila.inject.MycilaGuice: com.mycila.inject.MycilaGuice handleMethodAfterInjection(java.lang.Class,java.lang.Class)>(class "Ljavax/annotation/PostConstruct;", class "Lcom/mycila/inject/jsr250/Jsr250PostConstructHandler;");

        $r8 = new com.mycila.inject.jsr250.Jsr250Module$1;

        specialinvoke $r8.<com.mycila.inject.jsr250.Jsr250Module$1: void <init>(com.mycila.inject.jsr250.Jsr250Module)>(r9);

        virtualinvoke $r7.<com.mycila.inject.MycilaGuice: com.mycila.inject.MycilaGuice bind(java.lang.Class,java.lang.Object)>(class "Lcom/mycila/inject/jsr250/Jsr250Destroyer;", $r8);

        return;
    }

    public transient com.mycila.inject.jsr250.Jsr250Module addCloseableScopes(com.google.inject.Scope[])
    {
        com.google.inject.Scope[] r1;
        com.mycila.inject.jsr250.Jsr250Module r0;
        java.util.List $r3;
        java.util.Set $r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250Module;

        r1 := @parameter0: com.google.inject.Scope[];

        $r2 = r0.<com.mycila.inject.jsr250.Jsr250Module: java.util.Set scopes>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        return r0;
    }

    public transient com.mycila.inject.jsr250.Jsr250Module addCloseableScopes(java.lang.Class[])
    {
        com.mycila.inject.jsr250.Jsr250Module r0;
        java.util.List $r3;
        java.lang.Class[] r1;
        java.util.Set $r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250Module;

        r1 := @parameter0: java.lang.Class[];

        $r2 = r0.<com.mycila.inject.jsr250.Jsr250Module: java.util.Set scopeAnnotations>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        return r0;
    }

    static java.util.Set access$100(com.mycila.inject.jsr250.Jsr250Module)
    {
        com.mycila.inject.jsr250.Jsr250Module r0;
        java.util.Set $r1;

        r0 := @parameter0: com.mycila.inject.jsr250.Jsr250Module;

        $r1 = r0.<com.mycila.inject.jsr250.Jsr250Module: java.util.Set scopes>;

        return $r1;
    }

    static java.util.Set access$200(com.mycila.inject.jsr250.Jsr250Module)
    {
        com.mycila.inject.jsr250.Jsr250Module r0;
        java.util.Set $r1;

        r0 := @parameter0: com.mycila.inject.jsr250.Jsr250Module;

        $r1 = r0.<com.mycila.inject.jsr250.Jsr250Module: java.util.Set scopeAnnotations>;

        return $r1;
    }
}
