public class org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper extends javax.swing.tree.DefaultTreeSelectionModel
{
    protected boolean updatingListSelectionModel;
    private final org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0;

    public void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable)
    {
        javax.swing.ListSelectionModel $r2;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper r0;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable r1;
        javax.swing.event.ListSelectionListener $r3;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper;

        r1 := @parameter0: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable;

        specialinvoke r0.<javax.swing.tree.DefaultTreeSelectionModel: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0> = r1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.ListSelectionModel getListSelectionModel()>();

        $r3 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.event.ListSelectionListener createListSelectionListener()>();

        interfaceinvoke $r2.<javax.swing.ListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r3);

        return;
    }

    public javax.swing.ListSelectionModel getListSelectionModel()
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper r0;
        javax.swing.DefaultListSelectionModel $r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        return $r1;
    }

    public void resetRowSelection()
    {
        java.lang.Throwable $r1;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper;

        $z0 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel>;

        if $z0 != 0 goto label5;

        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 1;

     label1:
        specialinvoke r0.<javax.swing.tree.DefaultTreeSelectionModel: void resetRowSelection()>();

     label2:
        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected javax.swing.event.ListSelectionListener createListSelectionListener()
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper r1;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler $r0;

        r1 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper;

        $r0 = new org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler;

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler: void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper)>(r1);

        return $r0;
    }

    protected void updateSelectedPathsFromSelectedRows()
    {
        java.lang.Throwable $r7;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable $r4;
        javax.swing.tree.TreePath $r6;
        javax.swing.DefaultListSelectionModel $r1, $r2, $r3;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer $r5;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper r0;
        int $i0, $i1, i2, $i4, $i6;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper;

        $z0 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel>;

        if $z0 != 0 goto label7;

        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 1;

     label1:
        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        $i0 = virtualinvoke $r1.<javax.swing.DefaultListSelectionModel: int getMinSelectionIndex()>();

        $r2 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        $i1 = virtualinvoke $r2.<javax.swing.DefaultListSelectionModel: int getMaxSelectionIndex()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: void clearSelection()>();

        $i4 = (int) -1;

        if $i0 == $i4 goto label4;

        $i6 = (int) -1;

        if $i1 == $i6 goto label4;

        i2 = $i0;

     label2:
        if i2 > $i1 goto label4;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        $z1 = virtualinvoke $r3.<javax.swing.DefaultListSelectionModel: boolean isSelectedIndex(int)>(i2);

        if $z1 == 0 goto label3;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable this$0>;

        $r5 = $r4.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: javax.swing.tree.TreePath getPathForRow(int)>(i2);

        if $r6 == null goto label3;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: void addSelectionPath(javax.swing.tree.TreePath)>($r6);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        goto label7;

     label5:
        $r7 := @caughtexception;

     label6:
        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
