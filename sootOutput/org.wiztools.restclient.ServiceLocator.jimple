public class org.wiztools.restclient.ServiceLocator extends java.lang.Object
{
    private static final com.google.inject.Injector injector;

    private void <init>()
    {
        org.wiztools.restclient.ServiceLocator r0;

        r0 := @this: org.wiztools.restclient.ServiceLocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object getInstance(java.lang.Class)
    {
        com.google.inject.Injector $r1;
        java.lang.Class r0;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.wiztools.restclient.ServiceLocator: com.google.inject.Injector injector>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        com.google.inject.Stage $r1;
        com.google.inject.Injector $r3;
        com.google.inject.Module $r2;
        com.google.inject.Module[] $r0;

        $r1 = <com.google.inject.Stage: com.google.inject.Stage PRODUCTION>;

        $r0 = newarray (com.google.inject.Module)[1];

        $r2 = staticinvoke <com.mycila.inject.jsr250.Jsr250: com.google.inject.Module newJsr250Module()>();

        $r0[0] = $r2;

        $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Stage,com.google.inject.Module[])>($r1, $r0);

        <org.wiztools.restclient.ServiceLocator: com.google.inject.Injector injector> = $r3;

        return;
    }
}
