public final class org.apache.poi.hslf.record.OEPlaceholderAtom extends org.apache.poi.hslf.record.RecordAtom
{
    public static final int PLACEHOLDER_FULLSIZE;
    public static final int PLACEHOLDER_HALFSIZE;
    public static final int PLACEHOLDER_QUARTSIZE;
    public static final byte None;
    public static final byte MasterTitle;
    public static final byte MasterBody;
    public static final byte MasterCenteredTitle;
    public static final byte MasterSubTitle;
    public static final byte MasterNotesSlideImage;
    public static final byte MasterNotesBody;
    public static final byte MasterDate;
    public static final byte MasterSlideNumber;
    public static final byte MasterFooter;
    public static final byte MasterHeader;
    public static final byte NotesSlideImage;
    public static final byte NotesBody;
    public static final byte Title;
    public static final byte Body;
    public static final byte CenteredTitle;
    public static final byte Subtitle;
    public static final byte VerticalTextTitle;
    public static final byte VerticalTextBody;
    public static final byte Object;
    public static final byte Graph;
    public static final byte Table;
    public static final byte ClipArt;
    public static final byte OrganizationChart;
    public static final byte MediaClip;
    private byte[] _header;
    private int placementId;
    private int placeholderId;
    private int placeholderSize;

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4;
        int $i1;
        long $l0;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header> = $r1;

        $r2 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r2, 0, 0);

        $r3 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header>;

        $l0 = virtualinvoke r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: long getRecordType()>();

        $i1 = (int) $l0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r3, 2, $i1);

        $r4 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r4, 4, 8);

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placementId> = 0;

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderId> = 0;

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderSize> = 0;

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i5 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $r4 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header>;

        $i1 = lengthof $r4;

        i6 = i0 + $i1;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, i6);

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placementId> = $i2;

        i7 = i6 + 4;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getUnsignedByte(byte[],int)>(r2, i7);

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderId> = $i3;

        i8 = i7 + 1;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getUnsignedByte(byte[],int)>(r2, i8);

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderSize> = $i4;

        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.RecordTypes$Type $r0;
        int $i0;
        long $l1;
        org.apache.poi.hslf.record.OEPlaceholderAtom r1;

        r1 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        $r0 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type OEPlaceholderAtom>;

        $i0 = $r0.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l1 = (long) $i0;

        return $l1;
    }

    public int getPlacementId()
    {
        int $i0;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        $i0 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placementId>;

        return $i0;
    }

    public void setPlacementId(int)
    {
        int i0;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placementId> = i0;

        return;
    }

    public int getPlaceholderId()
    {
        int $i0;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        $i0 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderId>;

        return $i0;
    }

    public void setPlaceholderId(byte)
    {
        int $i1;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;
        byte b0;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderId> = $i1;

        return;
    }

    public int getPlaceholderSize()
    {
        int $i0;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        $i0 = r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderSize>;

        return $i0;
    }

    public void setPlaceholderSize(byte)
    {
        int $i1;
        org.apache.poi.hslf.record.OEPlaceholderAtom r0;
        byte b0;

        r0 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        r0.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderSize> = $i1;

        return;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, r3;
        org.apache.poi.hslf.record.OEPlaceholderAtom r1;
        byte $b2, $b4;
        int $i0, $i1, $i3;

        r1 := @this: org.apache.poi.hslf.record.OEPlaceholderAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.OEPlaceholderAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        r3 = newarray (byte)[8];

        $i0 = r1.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placementId>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r3, 0, $i0);

        $i1 = r1.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderId>;

        $b2 = (byte) $i1;

        r3[4] = $b2;

        $i3 = r1.<org.apache.poi.hslf.record.OEPlaceholderAtom: int placeholderSize>;

        $b4 = (byte) $i3;

        r3[5] = $b4;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>(r3);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MediaClip> = 24;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte OrganizationChart> = 23;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte ClipArt> = 22;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte Table> = 21;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte Graph> = 20;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte Object> = 19;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte VerticalTextBody> = 18;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte VerticalTextTitle> = 17;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte Subtitle> = 16;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte CenteredTitle> = 15;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte Body> = 14;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte Title> = 13;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte NotesBody> = 12;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte NotesSlideImage> = 11;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterHeader> = 10;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterFooter> = 9;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterSlideNumber> = 8;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterDate> = 7;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterNotesBody> = 6;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterNotesSlideImage> = 5;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterSubTitle> = 4;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterCenteredTitle> = 3;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterBody> = 2;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte MasterTitle> = 1;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: byte None> = 0;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: int PLACEHOLDER_QUARTSIZE> = 2;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: int PLACEHOLDER_HALFSIZE> = 1;

        <org.apache.poi.hslf.record.OEPlaceholderAtom: int PLACEHOLDER_FULLSIZE> = 0;

        return;
    }
}
