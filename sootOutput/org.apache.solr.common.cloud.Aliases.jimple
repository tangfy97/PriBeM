public class org.apache.solr.common.cloud.Aliases extends java.lang.Object
{
    private java.util.Map aliasMap;

    public void <init>(java.util.Map)
    {
        org.apache.solr.common.cloud.Aliases r0;
        java.util.Map r1;

        r0 := @this: org.apache.solr.common.cloud.Aliases;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.common.cloud.Aliases: java.util.Map aliasMap> = r1;

        return;
    }

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.solr.common.cloud.Aliases r0;

        r0 := @this: org.apache.solr.common.cloud.Aliases;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.solr.common.cloud.Aliases: java.util.Map aliasMap> = $r1;

        return;
    }

    public java.util.Map getCollectionAliasMap()
    {
        org.apache.solr.common.cloud.Aliases r0;
        java.util.Map $r1, r3, $r4;
        java.lang.Object $r2;

        r0 := @this: org.apache.solr.common.cloud.Aliases;

        $r1 = r0.<org.apache.solr.common.cloud.Aliases: java.util.Map aliasMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("collection");

        r3 = (java.util.Map) $r2;

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r3);

        return $r4;
    }

    public java.util.Map getAliasMap()
    {
        org.apache.solr.common.cloud.Aliases r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.solr.common.cloud.Aliases;

        $r1 = r0.<org.apache.solr.common.cloud.Aliases: java.util.Map aliasMap>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public int collectionAliasSize()
    {
        org.apache.solr.common.cloud.Aliases r0;
        java.util.Map $r1, r3;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.solr.common.cloud.Aliases;

        $r1 = r0.<org.apache.solr.common.cloud.Aliases: java.util.Map aliasMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("collection");

        r3 = (java.util.Map) $r2;

        if r3 != null goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke r3.<java.util.Map: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.solr.common.cloud.Aliases r2;
        java.util.Map $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r6;

        r2 := @this: org.apache.solr.common.cloud.Aliases;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aliases [aliasMap=");

        $r3 = r2.<org.apache.solr.common.cloud.Aliases: java.util.Map aliasMap>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String getCollectionAlias(java.lang.String)
    {
        org.apache.solr.common.cloud.Aliases r0;
        java.util.Map $r1, r3;
        java.lang.Object $r2, $r5;
        java.lang.String r4, $r6;

        r0 := @this: org.apache.solr.common.cloud.Aliases;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.solr.common.cloud.Aliases: java.util.Map aliasMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("collection");

        r3 = (java.util.Map) $r2;

        if r3 != null goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }
}
