public class org.jdesktop.swingx.plaf.LookAndFeelUtils extends java.lang.Object
{

    public void <init>()
    {
        org.jdesktop.swingx.plaf.LookAndFeelUtils r0;

        r0 := @this: org.jdesktop.swingx.plaf.LookAndFeelUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI, java.lang.Class)
    {
        java.lang.Class r0;
        javax.swing.plaf.ComponentUI r1;
        boolean $z0;

        r1 := @parameter0: javax.swing.plaf.ComponentUI;

        r0 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        return null;
    }

    public static java.awt.Font getAsNotUIResource(java.awt.Font)
    {
        java.awt.Font r0, $r2;
        java.util.Map $r1;
        boolean $z0;

        r0 := @parameter0: java.awt.Font;

        $z0 = r0 instanceof javax.swing.plaf.UIResource;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.awt.Font: java.util.Map getAttributes()>();

        $r2 = virtualinvoke r0.<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>($r1);

        return $r2;
    }

    public static java.awt.Color getAsNotUIResource(java.awt.Color)
    {
        java.awt.Color r0, $r2;
        float[] $r1;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r0 := @parameter0: java.awt.Color;

        $z0 = r0 instanceof javax.swing.plaf.UIResource;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.awt.Color: float[] getRGBComponents(float[])>(null);

        $r2 = new java.awt.Color;

        $f3 = $r1[0];

        $f2 = $r1[1];

        $f1 = $r1[2];

        $f0 = $r1[3];

        specialinvoke $r2.<java.awt.Color: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r2;
    }
}
