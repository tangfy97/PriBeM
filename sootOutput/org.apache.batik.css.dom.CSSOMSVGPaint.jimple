public class org.apache.batik.css.dom.CSSOMSVGPaint extends org.apache.batik.css.dom.CSSOMSVGColor implements org.w3c.dom.svg.SVGPaint
{

    public void <init>(org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider)
    {
        org.apache.batik.css.dom.CSSOMSVGPaint r0;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGPaint;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider;

        specialinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: void <init>(org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider)>(r1);

        return;
    }

    public void setModificationHandler(org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler)
    {
        org.apache.batik.css.dom.CSSOMSVGPaint r1;
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler r0;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGPaint;

        r0 := @parameter0: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler;

        $z0 = r0 instanceof org.apache.batik.css.dom.CSSOMSVGPaint$PaintModificationHandler;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor: void setModificationHandler(org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler)>(r0);

        return;
    }

    public short getColorType()
    {
        org.apache.batik.css.dom.CSSOMSVGPaint r1;
        org.w3c.dom.DOMException $r0;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGPaint;

        $r0 = new org.w3c.dom.DOMException;

        specialinvoke $r0.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r0;
    }

    public short getPaintType()
    {
        short $s0, $s1, $s2, $s3, $s4;
        int $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.engine.value.Value $r2, $r3, $r4;
        org.apache.batik.css.dom.CSSOMSVGPaint r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGPaint;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $s0 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        $i5 = (int) $s0;

        lookupswitch($i5)
        {
            case 1: goto label01;
            case 2: goto label08;
            default: goto label17;
        };

     label01:
        $s4 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i6 = (int) $s4;

        lookupswitch($i6)
        {
            case 20: goto label06;
            case 21: goto label02;
            case 25: goto label05;
            default: goto label07;
        };

     label02:
        $r6 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z2 == 0 goto label03;

        return 101;

     label03:
        $z3 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("currentcolor");

        if $z3 == 0 goto label04;

        return 102;

     label04:
        return 1;

     label05:
        return 1;

     label06:
        return 107;

     label07:
        goto label17;

     label08:
        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r4 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $s1 = interfaceinvoke $r3.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i7 = (int) $s1;

        lookupswitch($i7)
        {
            case 20: goto label10;
            case 21: goto label09;
            case 25: goto label16;
            default: goto label17;
        };

     label09:
        return 2;

     label10:
        $s2 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        $i8 = (int) $s2;

        if $i8 != 2 goto label11;

        return 106;

     label11:
        $s3 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i9 = (int) $s3;

        lookupswitch($i9)
        {
            case 21: goto label12;
            case 25: goto label15;
            default: goto label16;
        };

     label12:
        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z0 == 0 goto label13;

        return 103;

     label13:
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("currentcolor");

        if $z1 == 0 goto label14;

        return 104;

     label14:
        return 105;

     label15:
        return 105;

     label16:
        return 2;

     label17:
        return 0;
    }

    public java.lang.String getUri()
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1, $r4;
        org.apache.batik.css.engine.value.Value $r2, $r5, $r6;
        org.apache.batik.css.dom.CSSOMSVGPaint r0;
        short $s0;
        int $i1;
        java.lang.InternalError $r9;
        java.lang.String $r3, $r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGPaint;

        $s0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGPaint: short getPaintType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 103: goto label2;
            case 104: goto label2;
            case 105: goto label2;
            case 106: goto label2;
            case 107: goto label1;
            default: goto label3;
        };

     label1:
        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        return $r3;

     label2:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r7 = interfaceinvoke $r6.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        return $r7;

     label3:
        $r9 = new java.lang.InternalError;

        specialinvoke $r9.<java.lang.InternalError: void <init>()>();

        throw $r9;
    }

    public void setUri(java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMSVGPaint r0;
        org.apache.batik.css.dom.CSSOMSVGPaint$PaintModificationHandler $r4;
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r2;
        org.w3c.dom.DOMException $r5;
        java.lang.String r3;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGPaint;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r5;

     label1:
        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        $r4 = (org.apache.batik.css.dom.CSSOMSVGPaint$PaintModificationHandler) $r2;

        interfaceinvoke $r4.<org.apache.batik.css.dom.CSSOMSVGPaint$PaintModificationHandler: void uriChanged(java.lang.String)>(r3);

        return;
    }

    public void setPaint(short, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMSVGPaint$PaintModificationHandler $r6;
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r2;
        org.apache.batik.css.dom.CSSOMSVGPaint r0;
        short s0;
        org.w3c.dom.DOMException $r7;
        java.lang.String r3, r4, r5;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGPaint;

        s0 := @parameter0: short;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r7;

     label1:
        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        $r6 = (org.apache.batik.css.dom.CSSOMSVGPaint$PaintModificationHandler) $r2;

        interfaceinvoke $r6.<org.apache.batik.css.dom.CSSOMSVGPaint$PaintModificationHandler: void paintChanged(short,java.lang.String,java.lang.String,java.lang.String)>(s0, r3, r4, r5);

        return;
    }
}
