public abstract class com.google.inject.AbstractModule extends java.lang.Object implements com.google.inject.Module
{
    com.google.inject.Binder binder;

    public void <init>()
    {
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final synchronized void configure(com.google.inject.Binder)
    {
        java.lang.Throwable $r5;
        com.google.inject.Binder $r1, r2, $r4;
        java.lang.Object $r3;
        com.google.inject.AbstractModule r0;
        boolean $z0;

        r0 := @this: com.google.inject.AbstractModule;

        r2 := @parameter0: com.google.inject.Binder;

        $r1 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Re-entry is not allowed.");

        $r3 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "builder");

        $r4 = (com.google.inject.Binder) $r3;

        r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder> = $r4;

     label3:
        virtualinvoke r0.<com.google.inject.AbstractModule: void configure()>();

     label4:
        r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder> = null;

        goto label7;

     label5:
        $r5 := @caughtexception;

     label6:
        r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder> = null;

        throw $r5;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected abstract void configure();

    protected com.google.inject.Binder binder()
    {
        com.google.inject.Binder $r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        $r1 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        return $r1;
    }

    protected void bindScope(java.lang.Class, com.google.inject.Scope)
    {
        com.google.inject.Binder $r3;
        java.lang.Class r1;
        com.google.inject.Scope r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.inject.Scope;

        $r3 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r3.<com.google.inject.Binder: void bindScope(java.lang.Class,com.google.inject.Scope)>(r1, r2);

        return;
    }

    protected com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key)
    {
        com.google.inject.Binder $r2;
        com.google.inject.binder.LinkedBindingBuilder $r3;
        com.google.inject.Key r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key)>(r1);

        return $r3;
    }

    protected com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral)
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r3;
        com.google.inject.Binder $r2;
        com.google.inject.TypeLiteral r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral)>(r1);

        return $r3;
    }

    protected com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r3;
        com.google.inject.Binder $r2;
        java.lang.Class r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r1);

        return $r3;
    }

    protected com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant()
    {
        com.google.inject.binder.AnnotatedConstantBindingBuilder $r2;
        com.google.inject.Binder $r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        $r1 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant()>();

        return $r2;
    }

    protected void install(com.google.inject.Module)
    {
        com.google.inject.Module r1;
        com.google.inject.Binder $r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.Module;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: void install(com.google.inject.Module)>(r1);

        return;
    }

    protected transient void addError(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        com.google.inject.Binder $r3;
        java.lang.String r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r3.<com.google.inject.Binder: void addError(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    protected void addError(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        com.google.inject.Binder $r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: void addError(java.lang.Throwable)>(r1);

        return;
    }

    protected void addError(com.google.inject.spi.Message)
    {
        com.google.inject.Binder $r2;
        com.google.inject.spi.Message r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.spi.Message;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: void addError(com.google.inject.spi.Message)>(r1);

        return;
    }

    protected void requestInjection(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.inject.Binder $r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: void requestInjection(java.lang.Object)>(r1);

        return;
    }

    protected transient void requestStaticInjection(java.lang.Class[])
    {
        java.lang.Class[] r1;
        com.google.inject.Binder $r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Class[];

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: void requestStaticInjection(java.lang.Class[])>(r1);

        return;
    }

    protected transient void bindInterceptor(com.google.inject.matcher.Matcher, com.google.inject.matcher.Matcher, org.aopalliance.intercept.MethodInterceptor[])
    {
        com.google.inject.Binder $r4;
        com.google.inject.matcher.Matcher r1, r2;
        org.aopalliance.intercept.MethodInterceptor[] r3;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.matcher.Matcher;

        r2 := @parameter1: com.google.inject.matcher.Matcher;

        r3 := @parameter2: org.aopalliance.intercept.MethodInterceptor[];

        $r4 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r4.<com.google.inject.Binder: void bindInterceptor(com.google.inject.matcher.Matcher,com.google.inject.matcher.Matcher,org.aopalliance.intercept.MethodInterceptor[])>(r1, r2, r3);

        return;
    }

    protected void requireBinding(com.google.inject.Key)
    {
        com.google.inject.Key r1;
        com.google.inject.Binder $r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.Provider getProvider(com.google.inject.Key)>(r1);

        return;
    }

    protected void requireBinding(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.inject.Binder $r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.Provider getProvider(java.lang.Class)>(r1);

        return;
    }

    protected com.google.inject.Provider getProvider(com.google.inject.Key)
    {
        com.google.inject.Provider $r3;
        com.google.inject.Binder $r2;
        com.google.inject.Key r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.Provider getProvider(com.google.inject.Key)>(r1);

        return $r3;
    }

    protected com.google.inject.Provider getProvider(java.lang.Class)
    {
        com.google.inject.Provider $r3;
        com.google.inject.Binder $r2;
        java.lang.Class r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.Provider getProvider(java.lang.Class)>(r1);

        return $r3;
    }

    protected void convertToTypes(com.google.inject.matcher.Matcher, com.google.inject.spi.TypeConverter)
    {
        com.google.inject.spi.TypeConverter r2;
        com.google.inject.Binder $r3;
        com.google.inject.matcher.Matcher r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.matcher.Matcher;

        r2 := @parameter1: com.google.inject.spi.TypeConverter;

        $r3 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r3.<com.google.inject.Binder: void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>(r1, r2);

        return;
    }

    protected com.google.inject.Stage currentStage()
    {
        com.google.inject.Stage $r2;
        com.google.inject.Binder $r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        $r1 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Binder: com.google.inject.Stage currentStage()>();

        return $r2;
    }

    protected com.google.inject.MembersInjector getMembersInjector(java.lang.Class)
    {
        com.google.inject.Binder $r2;
        java.lang.Class r1;
        com.google.inject.MembersInjector $r3;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.MembersInjector getMembersInjector(java.lang.Class)>(r1);

        return $r3;
    }

    protected com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral)
    {
        com.google.inject.Binder $r2;
        com.google.inject.MembersInjector $r3;
        com.google.inject.TypeLiteral r1;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral)>(r1);

        return $r3;
    }

    protected void bindListener(com.google.inject.matcher.Matcher, com.google.inject.spi.TypeListener)
    {
        com.google.inject.Binder $r3;
        com.google.inject.matcher.Matcher r1;
        com.google.inject.spi.TypeListener r2;
        com.google.inject.AbstractModule r0;

        r0 := @this: com.google.inject.AbstractModule;

        r1 := @parameter0: com.google.inject.matcher.Matcher;

        r2 := @parameter1: com.google.inject.spi.TypeListener;

        $r3 = r0.<com.google.inject.AbstractModule: com.google.inject.Binder binder>;

        interfaceinvoke $r3.<com.google.inject.Binder: void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener)>(r1, r2);

        return;
    }
}
