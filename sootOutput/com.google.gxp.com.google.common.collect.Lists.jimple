public final class com.google.gxp.com.google.common.collect.Lists extends java.lang.Object
{

    private void <init>()
    {
        com.google.gxp.com.google.common.collect.Lists r0;

        r0 := @this: com.google.gxp.com.google.common.collect.Lists;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.ArrayList newArrayList()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        return $r0;
    }

    public static transient java.util.ArrayList newArrayList(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0, $i1;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: int computeArrayListCapacity(int)>($i0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i1);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, r0);

        return $r1;
    }

    static int computeArrayListCapacity(int)
    {
        long $l1, $l3, $l4, $l5, $l6;
        int i0, $i2, $i7;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $l4 = 5L + $l1;

        $i2 = i0 / 10;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        $l6 = staticinvoke <java.lang.Math: long min(long,long)>($l5, 2147483647L);

        $i7 = (int) $l6;

        return $i7;
    }

    public static java.util.ArrayList newArrayList(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.util.Collection r3;
        java.lang.Iterable r0;
        boolean $z0;
        java.util.ArrayList $r2, $r4;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        r3 = (java.util.Collection) r0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        return $r4;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r1);

        return $r2;
    }

    public static java.util.ArrayList newArrayList(java.util.Iterator)
    {
        java.util.Iterator r1;
        java.lang.Object $r2;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @parameter0: java.util.Iterator;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return $r0;
    }

    public static java.util.ArrayList newArrayListWithExpectedSize(int)
    {
        int i0, $i1;
        java.util.ArrayList $r0;

        i0 := @parameter0: int;

        $r0 = new java.util.ArrayList;

        $i1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: int computeArrayListCapacity(int)>(i0);

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);

        return $r0;
    }

    public static java.util.LinkedList newLinkedList()
    {
        java.util.LinkedList $r0;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        return $r0;
    }

    public static java.util.LinkedList newLinkedList(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.util.LinkedList $r2;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.LinkedList newLinkedList(java.util.Iterator)>($r1);

        return $r2;
    }

    private static java.util.LinkedList newLinkedList(java.util.Iterator)
    {
        java.util.Iterator r1;
        java.lang.Object $r2;
        java.util.LinkedList $r0;
        boolean $z0;

        r1 := @parameter0: java.util.Iterator;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return $r0;
    }

    public static java.util.List sortedCopy(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        return $r1;
    }

    public static java.util.List sortedCopy(java.lang.Iterable, java.util.Comparator)
    {
        java.lang.Object $r3;
        java.util.Comparator r2, $r4;
        java.lang.Iterable r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.util.Comparator;

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(r0);

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.util.Comparator) $r3;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r4);

        return $r1;
    }

    public static java.util.List asList(java.lang.Object, java.lang.Object[])
    {
        java.lang.Object r1;
        java.lang.Object[] r2;
        com.google.gxp.com.google.common.collect.Lists$OnePlusArrayList $r0;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r0 = new com.google.gxp.com.google.common.collect.Lists$OnePlusArrayList;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.Lists$OnePlusArrayList: void <init>(java.lang.Object,java.lang.Object[])>(r1, r2);

        return $r0;
    }

    public static java.util.List asList(java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        com.google.gxp.com.google.common.collect.Lists$TwoPlusArrayList $r0;
        java.lang.Object[] r3;
        java.lang.Object r1, r2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object[];

        $r0 = new com.google.gxp.com.google.common.collect.Lists$TwoPlusArrayList;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.Lists$TwoPlusArrayList: void <init>(java.lang.Object,java.lang.Object,java.lang.Object[])>(r1, r2, r3);

        return $r0;
    }

    public static java.util.List transform(java.util.List, com.google.gxp.com.google.common.base.Function)
    {
        java.util.List r0;
        com.google.gxp.com.google.common.base.Function r1;
        com.google.gxp.com.google.common.collect.Lists$TransformingSequentialList $r4;
        java.util.AbstractList $r2;
        com.google.gxp.com.google.common.collect.Lists$TransformingRandomAccessList $r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: com.google.gxp.com.google.common.base.Function;

        $z0 = r0 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label1;

        $r3 = new com.google.gxp.com.google.common.collect.Lists$TransformingRandomAccessList;

        $r2 = $r3;

        specialinvoke $r3.<com.google.gxp.com.google.common.collect.Lists$TransformingRandomAccessList: void <init>(java.util.List,com.google.gxp.com.google.common.base.Function)>(r0, r1);

        goto label2;

     label1:
        $r4 = new com.google.gxp.com.google.common.collect.Lists$TransformingSequentialList;

        $r2 = $r4;

        specialinvoke $r4.<com.google.gxp.com.google.common.collect.Lists$TransformingSequentialList: void <init>(java.util.List,com.google.gxp.com.google.common.base.Function)>(r0, r1);

     label2:
        return $r2;
    }
}
