public class com.hp.hpl.jena.sparql.sse.builders.BuilderOp extends java.lang.Object
{
    private static com.hp.hpl.jena.sparql.sse.builders.BuilderOp builderOp;
    protected java.util.Map dispatch;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTable;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildBGP;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuadPattern;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuadBlock;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTriple;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuad;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTriplePath;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildFilter;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildJoin;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildSequence;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDisjunction;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildLeftJoin;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDiff;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildMinus;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildUnion;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDatasetNames;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildConditional;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildGraph;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildService;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildProcedure;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildPropertyFunction;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildToList;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildGroupBy;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildOrderBy;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTopN;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildProject;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDistinct;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildReduced;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildAssign;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildExtend;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildSlice;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildNull;
    protected final com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildLabel;

    public static com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp $r1;
        com.hp.hpl.jena.sparql.sse.ItemList $r2;
        com.hp.hpl.jena.sparql.sse.Item r0;
        com.hp.hpl.jena.sparql.algebra.Op $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Attempt to build op structure from a plain node");

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z1 == 0 goto label2;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Attempt to build op structure from a bare symbol");

     label2:
        $z2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged()>();

        if $z2 != 0 goto label3;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Attempt to build op structure from a non-tagged item");

     label3:
        $r1 = <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp builderOp>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r3 = specialinvoke $r1.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList)>($r2);

        return $r3;
    }

    public void <init>()
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$18 $r19;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$19 $r20;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$16 $r17;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$17 $r18;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$14 $r15;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$15 $r16;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12 $r13;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$13 $r14;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$10 $r11;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$11 $r12;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$32 $r33;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$33 $r34;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$30 $r31;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$31 $r32;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$29 $r30;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$27 $r28;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$28 $r29;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$25 $r26;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$26 $r27;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$23 $r24;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$24 $r25;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$21 $r22;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$22 $r23;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$20 $r21;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$7 $r8;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$8 $r9;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$5 $r6;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$6 $r7;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$9 $r10;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$3 $r4;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$4 $r5;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$1 $r2;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$2 $r3;
        java.util.HashMap $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: java.util.Map dispatch> = $r1;

        $r2 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$1;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$1: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTable> = $r2;

        $r3 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$2;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$2: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildBGP> = $r3;

        $r4 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$3;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$3: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuadPattern> = $r4;

        $r5 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$4;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$4: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuadBlock> = $r5;

        $r6 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$5;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$5: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTriple> = $r6;

        $r7 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$6;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$6: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuad> = $r7;

        $r8 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$7;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$7: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTriplePath> = $r8;

        $r9 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$8;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$8: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildFilter> = $r9;

        $r10 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$9;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$9: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildJoin> = $r10;

        $r11 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$10;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$10: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildSequence> = $r11;

        $r12 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$11;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$11: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDisjunction> = $r12;

        $r13 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$12: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildLeftJoin> = $r13;

        $r14 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$13;

        specialinvoke $r14.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$13: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDiff> = $r14;

        $r15 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$14;

        specialinvoke $r15.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$14: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildMinus> = $r15;

        $r16 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$15;

        specialinvoke $r16.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$15: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildUnion> = $r16;

        $r17 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$16;

        specialinvoke $r17.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$16: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDatasetNames> = $r17;

        $r18 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$17;

        specialinvoke $r18.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$17: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildConditional> = $r18;

        $r19 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$18;

        specialinvoke $r19.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$18: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildGraph> = $r19;

        $r20 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$19;

        specialinvoke $r20.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$19: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildService> = $r20;

        $r21 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$20;

        specialinvoke $r21.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$20: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildProcedure> = $r21;

        $r22 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$21;

        specialinvoke $r22.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$21: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildPropertyFunction> = $r22;

        $r23 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$22;

        specialinvoke $r23.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$22: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildToList> = $r23;

        $r24 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$23;

        specialinvoke $r24.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$23: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildGroupBy> = $r24;

        $r25 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$24;

        specialinvoke $r25.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$24: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildOrderBy> = $r25;

        $r26 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$25;

        specialinvoke $r26.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$25: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTopN> = $r26;

        $r27 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$26;

        specialinvoke $r27.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$26: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildProject> = $r27;

        $r28 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$27;

        specialinvoke $r28.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$27: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDistinct> = $r28;

        $r29 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$28;

        specialinvoke $r29.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$28: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildReduced> = $r29;

        $r30 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$29;

        specialinvoke $r30.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$29: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildAssign> = $r30;

        $r31 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$30;

        specialinvoke $r31.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$30: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildExtend> = $r31;

        $r32 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$31;

        specialinvoke $r32.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$31: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildSlice> = $r32;

        $r33 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$32;

        specialinvoke $r33.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$32: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildNull> = $r33;

        $r34 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp$33;

        specialinvoke $r34.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$33: void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderOp)>(r0);

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildLabel> = $r34;

        $r35 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildBGP>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("bgp", $r35);

        $r36 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuadPattern>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("quadpattern", $r36);

        $r37 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuadBlock>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("quadblock", $r37);

        $r38 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTriple>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("triple", $r38);

        $r39 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildQuad>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("quad", $r39);

        $r40 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTriplePath>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("path", $r40);

        $r41 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildFilter>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("filter", $r41);

        $r42 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildGraph>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("graph", $r42);

        $r43 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildService>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("service", $r43);

        $r44 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildProcedure>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("proc", $r44);

        $r45 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildPropertyFunction>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("propfunc", $r45);

        $r46 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildJoin>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("join", $r46);

        $r47 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildSequence>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("sequence", $r47);

        $r48 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDisjunction>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("disjunction", $r48);

        $r49 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildLeftJoin>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("leftjoin", $r49);

        $r50 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDiff>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("diff", $r50);

        $r51 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildMinus>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("minus", $r51);

        $r52 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildUnion>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("union", $r52);

        $r53 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDatasetNames>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("datasetnames", $r53);

        $r54 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildConditional>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("conditional", $r54);

        $r55 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildToList>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("tolist", $r55);

        $r56 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildGroupBy>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("group", $r56);

        $r57 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildOrderBy>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("order", $r57);

        $r58 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTopN>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("top", $r58);

        $r59 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildProject>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("project", $r59);

        $r60 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildDistinct>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("distinct", $r60);

        $r61 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildReduced>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("reduced", $r61);

        $r62 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildAssign>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("assign", $r62);

        $r63 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildExtend>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("extend", $r63);

        $r64 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildAssign>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>(":=", $r64);

        $r65 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildSlice>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("slice", $r65);

        $r66 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildTable>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("table", $r66);

        $r67 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildNull>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("null", $r67);

        $r68 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build buildLabel>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>("label", $r68);

        return;
    }

    public static void add(java.lang.String, com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp $r2;
        java.lang.String r0;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build;

        $r2 = <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp builderOp>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addBuild(java.lang.String,com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)>(r0, r1);

        return;
    }

    public static void remove(java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp builderOp>;

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void removeBuild(java.lang.String)>(r0);

        return;
    }

    public static boolean contains(java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp $r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp builderOp>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: boolean containsBuild(java.lang.String)>(r0);

        return $z0;
    }

    private com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r3;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        com.hp.hpl.jena.sparql.sse.Item $r1;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r2, $r8;
        com.hp.hpl.jena.sparql.algebra.Op $r9;

        r3 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String getSymbol()>();

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build findBuild(java.lang.String)>($r2);

        if $r4 == null goto label1;

        $r9 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build: com.hp.hpl.jena.sparql.algebra.Op make(com.hp.hpl.jena.sparql.sse.ItemList)>(r0);

        return $r9;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized algebra operation: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>($r1, $r8);

        return null;
    }

    public static com.hp.hpl.jena.sparql.core.BasicPattern buildBGP(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.ItemList $r1;
        com.hp.hpl.jena.sparql.core.BasicPattern $r2;
        com.hp.hpl.jena.sparql.sse.Item r0;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>("bgp");

        if $z0 != 0 goto label1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Not a basic graph pattern");

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z1 != 0 goto label2;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Not a list for a basic graph pattern");

     label2:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.core.BasicPattern buildBGP(com.hp.hpl.jena.sparql.sse.ItemList)>($r1);

        return $r2;
    }

    private static com.hp.hpl.jena.sparql.core.BasicPattern buildBGP(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r1, $r3;
        com.hp.hpl.jena.sparql.core.BasicPattern $r0;
        com.hp.hpl.jena.sparql.sse.Item $r2;
        com.hp.hpl.jena.graph.Triple $r4;
        int $i0, i1;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $r0 = new com.hp.hpl.jena.sparql.core.BasicPattern;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.BasicPattern: void <init>()>();

        i1 = 1;

     label1:
        $i0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(i1);

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z0 != 0 goto label2;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>($r2, "Not a triple structure");

     label2:
        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderGraph: com.hp.hpl.jena.graph.Triple buildTriple(com.hp.hpl.jena.sparql.sse.ItemList)>($r3);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.core.BasicPattern: void add(com.hp.hpl.jena.graph.Triple)>($r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    protected com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList, int)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        com.hp.hpl.jena.sparql.sse.ItemList r1, $r3;
        int i0;
        com.hp.hpl.jena.sparql.sse.Item $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(i0);

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r4 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList)>($r3);

        return $r4;
    }

    protected void addBuild(java.lang.String, com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        java.util.Map $r3;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: java.util.Map dispatch>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected void removeBuild(java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: java.util.Map dispatch>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    protected boolean containsBuild(java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build findBuild(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build findBuild(java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build $r9;
        java.util.Map $r1, $r7;
        java.lang.Object $r4, $r8;
        java.lang.String r5, r6;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: java.util.Map dispatch>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: java.util.Map dispatch>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r9 = (com.hp.hpl.jena.sparql.sse.builders.BuilderOp$Build) $r8;

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    private final void addOps(com.hp.hpl.jena.sparql.algebra.op.OpN, com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int $i0, i1;
        com.hp.hpl.jena.sparql.algebra.op.OpN r3;
        com.hp.hpl.jena.sparql.algebra.Op $r2;

        r1 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r3 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpN;

        r0 := @parameter1: com.hp.hpl.jena.sparql.sse.ItemList;

        i1 = 1;

     label1:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList,int)>(r0, i1);

        virtualinvoke r3.<com.hp.hpl.jena.sparql.algebra.op.OpN: void add(com.hp.hpl.jena.sparql.algebra.Op)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static final com.hp.hpl.jena.sparql.pfunction.PropFuncArg readPropFuncArg(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg $r1, $r3;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.sse.Item r0;
        com.hp.hpl.jena.graph.Node $r4;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z0 == 0 goto label1;

        $r3 = new com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderNode: com.hp.hpl.jena.graph.Node buildNode(com.hp.hpl.jena.sparql.sse.Item)>(r0);

        specialinvoke $r3.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: void <init>(com.hp.hpl.jena.graph.Node)>($r4);

        return $r3;

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z1 == 0 goto label2;

        $r1 = new com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderNode: java.util.List buildNodeList(com.hp.hpl.jena.sparql.sse.Item)>(r0);

        specialinvoke $r1.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: void <init>(java.util.List)>($r2);

        return $r1;

     label2:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, "Expected a property function argument (node or list of nodes");

        return null;
    }

    com.hp.hpl.jena.query.SortCondition scBuilder(com.hp.hpl.jena.sparql.sse.Item)
    {
        byte b0, b1, b2;
        com.hp.hpl.jena.sparql.expr.Expr $r8;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r6;
        com.hp.hpl.jena.sparql.sse.ItemList $r0, $r1;
        com.hp.hpl.jena.query.SortCondition $r2, $r3;
        com.hp.hpl.jena.sparql.sse.Item r7;
        com.hp.hpl.jena.sparql.core.Var $r5;
        com.hp.hpl.jena.sparql.expr.ExprVar $r4;

        r6 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r7 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        b0 = -2;

        b2 = -2;

        b1 = -2;

        $z0 = virtualinvoke r7.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>("asc");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r7.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>("desc");

        if $z2 == 0 goto label4;

     label1:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void checkList(com.hp.hpl.jena.sparql.sse.Item)>(r7);

        $r0 = virtualinvoke r7.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void checkLength(int,com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(2, $r0, "Direction corrupt");

        $z1 = virtualinvoke r7.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>("asc");

        if $z1 == 0 goto label2;

        b0 = 1;

        b2 = 1;

        b1 = 1;

        goto label3;

     label2:
        b0 = -1;

        b2 = -1;

        b1 = -1;

     label3:
        $r1 = virtualinvoke r7.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        r7 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(1);

     label4:
        $r8 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderExpr: com.hp.hpl.jena.sparql.expr.Expr buildExpr(com.hp.hpl.jena.sparql.sse.Item)>(r7);

        $z3 = interfaceinvoke $r8.<com.hp.hpl.jena.sparql.expr.Expr: boolean isVariable()>();

        if $z3 == 0 goto label5;

        $r3 = new com.hp.hpl.jena.query.SortCondition;

        $r4 = interfaceinvoke $r8.<com.hp.hpl.jena.sparql.expr.Expr: com.hp.hpl.jena.sparql.expr.ExprVar getExprVar()>();

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.expr.ExprVar: com.hp.hpl.jena.sparql.core.Var asVar()>();

        specialinvoke $r3.<com.hp.hpl.jena.query.SortCondition: void <init>(com.hp.hpl.jena.sparql.core.Var,int)>($r5, b2);

        return $r3;

     label5:
        $r2 = new com.hp.hpl.jena.query.SortCondition;

        specialinvoke $r2.<com.hp.hpl.jena.query.SortCondition: void <init>(com.hp.hpl.jena.sparql.expr.Expr,int)>($r8, b1);

        return $r2;
    }

    static com.hp.hpl.jena.sparql.core.BasicPattern access$000(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.core.BasicPattern $r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.core.BasicPattern buildBGP(com.hp.hpl.jena.sparql.sse.ItemList)>(r0);

        return $r1;
    }

    static com.hp.hpl.jena.sparql.algebra.Op access$100(com.hp.hpl.jena.sparql.sse.builders.BuilderOp, com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        com.hp.hpl.jena.sparql.sse.ItemList r1;
        com.hp.hpl.jena.sparql.algebra.Op $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r1 := @parameter1: com.hp.hpl.jena.sparql.sse.ItemList;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.algebra.Op build(com.hp.hpl.jena.sparql.sse.ItemList)>(r1);

        return $r2;
    }

    static void access$200(com.hp.hpl.jena.sparql.sse.builders.BuilderOp, com.hp.hpl.jena.sparql.algebra.op.OpN, com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpN r1;
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp r0;
        com.hp.hpl.jena.sparql.sse.ItemList r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        r1 := @parameter1: com.hp.hpl.jena.sparql.algebra.op.OpN;

        r2 := @parameter2: com.hp.hpl.jena.sparql.sse.ItemList;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void addOps(com.hp.hpl.jena.sparql.algebra.op.OpN,com.hp.hpl.jena.sparql.sse.ItemList)>(r1, r2);

        return;
    }

    static com.hp.hpl.jena.sparql.pfunction.PropFuncArg access$300(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg $r1;
        com.hp.hpl.jena.sparql.sse.Item r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.pfunction.PropFuncArg readPropFuncArg(com.hp.hpl.jena.sparql.sse.Item)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderOp $r0;

        $r0 = new com.hp.hpl.jena.sparql.sse.builders.BuilderOp;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderOp: void <init>()>();

        <com.hp.hpl.jena.sparql.sse.builders.BuilderOp: com.hp.hpl.jena.sparql.sse.builders.BuilderOp builderOp> = $r0;

        return;
    }
}
