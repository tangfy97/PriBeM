public class org.apache.jena.riot.adapters.RDFReaderRIOT_ARP extends java.lang.Object implements com.hp.hpl.jena.rdf.model.RDFReader
{
    static com.hp.hpl.jena.util.FileManager fileMgr;
    com.hp.hpl.jena.rdf.arp.JenaReader reader;
    private static final boolean isWindows;

    public void <init>()
    {
        com.hp.hpl.jena.rdf.arp.JenaReader $r1;
        org.apache.jena.riot.adapters.RDFReaderRIOT_ARP r0;

        r0 := @this: org.apache.jena.riot.adapters.RDFReaderRIOT_ARP;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.rdf.arp.JenaReader;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.arp.JenaReader: void <init>()>();

        r0.<org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.rdf.arp.JenaReader reader> = $r1;

        return;
    }

    public void read(com.hp.hpl.jena.rdf.model.Model, java.io.Reader, java.lang.String)
    {
        org.apache.jena.riot.adapters.RDFReaderRIOT_ARP r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.rdf.arp.JenaReader $r4;
        java.io.Reader r2;
        java.lang.String r3;

        r0 := @this: org.apache.jena.riot.adapters.RDFReaderRIOT_ARP;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: java.io.Reader;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.rdf.arp.JenaReader reader>;

        virtualinvoke $r4.<com.hp.hpl.jena.rdf.arp.JenaReader: void read(com.hp.hpl.jena.rdf.model.Model,java.io.Reader,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void read(com.hp.hpl.jena.rdf.model.Model, java.io.InputStream, java.lang.String)
    {
        org.apache.jena.riot.adapters.RDFReaderRIOT_ARP r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.rdf.arp.JenaReader $r4;
        java.lang.String r3;
        java.io.InputStream r2;

        r0 := @this: org.apache.jena.riot.adapters.RDFReaderRIOT_ARP;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.rdf.arp.JenaReader reader>;

        virtualinvoke $r4.<com.hp.hpl.jena.rdf.arp.JenaReader: void read(com.hp.hpl.jena.rdf.model.Model,java.io.InputStream,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void read(com.hp.hpl.jena.rdf.model.Model, java.lang.String)
    {
        org.apache.jena.riot.adapters.RDFReaderRIOT_ARP r1;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.rdf.arp.JenaReader $r3;
        java.lang.String $r0, r4;

        r1 := @this: org.apache.jena.riot.adapters.RDFReaderRIOT_ARP;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: java.lang.String fixupURL(java.lang.String)>(r4);

        $r3 = r1.<org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.rdf.arp.JenaReader reader>;

        virtualinvoke $r3.<com.hp.hpl.jena.rdf.arp.JenaReader: void read(com.hp.hpl.jena.rdf.model.Model,java.lang.String)>(r2, $r0);

        return;
    }

    private static java.lang.String fixupURL(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String getScheme(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: boolean isWindowsDrive(java.lang.String)>($r1);

        if $z1 != 0 goto label1;

        return r0;

     label1:
        $r2 = staticinvoke <org.apache.jena.riot.system.IRILib: java.lang.String filenameToIRI(java.lang.String)>(r0);

        return $r2;
    }

    private static boolean isWindowsDrive(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = <org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: boolean isWindows>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.Object setProperty(java.lang.String, java.lang.Object)
    {
        org.apache.jena.riot.adapters.RDFReaderRIOT_ARP r0;
        com.hp.hpl.jena.rdf.arp.JenaReader $r3;
        java.lang.Object r2, $r4;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.adapters.RDFReaderRIOT_ARP;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.rdf.arp.JenaReader reader>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.rdf.arp.JenaReader: java.lang.Object setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.RDFErrorHandler setErrorHandler(com.hp.hpl.jena.rdf.model.RDFErrorHandler)
    {
        org.apache.jena.riot.adapters.RDFReaderRIOT_ARP r0;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler r1, $r3;
        com.hp.hpl.jena.rdf.arp.JenaReader $r2;

        r0 := @this: org.apache.jena.riot.adapters.RDFReaderRIOT_ARP;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFErrorHandler;

        $r2 = r0.<org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.rdf.arp.JenaReader reader>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.JenaReader: com.hp.hpl.jena.rdf.model.RDFErrorHandler setErrorHandler(com.hp.hpl.jena.rdf.model.RDFErrorHandler)>(r1);

        return $r3;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.util.FileManager $r1, $r2, $r3;
        int $i1;
        char $c0;
        boolean $z0;

        $r3 = new com.hp.hpl.jena.util.FileManager;

        specialinvoke $r3.<com.hp.hpl.jena.util.FileManager: void <init>()>();

        <org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.util.FileManager fileMgr> = $r3;

        $r1 = <org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.util.FileManager fileMgr>;

        virtualinvoke $r1.<com.hp.hpl.jena.util.FileManager: void addLocatorFile()>();

        $r2 = <org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: com.hp.hpl.jena.util.FileManager fileMgr>;

        virtualinvoke $r2.<com.hp.hpl.jena.util.FileManager: void addLocatorURL()>();

        $c0 = <java.io.File: char separatorChar>;

        $i1 = (int) $c0;

        if $i1 != 92 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <org.apache.jena.riot.adapters.RDFReaderRIOT_ARP: boolean isWindows> = $z0;

        return;
    }
}
