public class org.apache.log4j.net.ZeroConfSupport extends java.lang.Object
{
    private static java.lang.Object jmDNS;
    java.lang.Object serviceInfo;
    private static java.lang.Class jmDNSClass;
    private static java.lang.Class serviceInfoClass;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$util$Hashtable;
    static java.lang.Class class$java$util$Map;

    public void <init>(java.lang.String, int, java.lang.String, java.util.Map)
    {
        org.apache.log4j.net.ZeroConfSupport r0;
        java.lang.NoSuchMethodException $r7;
        java.util.Map r4;
        int i0;
        java.lang.Class $r1;
        java.lang.Object $r5, $r6;
        java.lang.String r2, r3;
        boolean z0;

        r0 := @this: org.apache.log4j.net.ZeroConfSupport;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        z0 = 0;

     label1:
        $r1 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class jmDNSClass>;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("create", null);

        z0 = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        if z0 == 0 goto label5;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("using JmDNS version 3 to construct serviceInfo instance");

        $r6 = specialinvoke r0.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object buildServiceInfoVersion3(java.lang.String,int,java.lang.String,java.util.Map)>(r2, i0, r3, r4);

        r0.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object serviceInfo> = $r6;

        goto label6;

     label5:
        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("using JmDNS version 1.0 to construct serviceInfo instance");

        $r5 = specialinvoke r0.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object buildServiceInfoVersion1(java.lang.String,int,java.lang.String,java.util.Map)>(r2, i0, r3, r4);

        r0.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object serviceInfo> = $r5;

     label6:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public void <init>(java.lang.String, int, java.lang.String)
    {
        org.apache.log4j.net.ZeroConfSupport r0;
        int i0;
        java.util.HashMap $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.log4j.net.ZeroConfSupport;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<org.apache.log4j.net.ZeroConfSupport: void <init>(java.lang.String,int,java.lang.String,java.util.Map)>(r1, i0, r2, $r3);

        return;
    }

    private static java.lang.Object createJmDNSVersion1()
    {
        java.lang.IllegalAccessException $r2;
        java.lang.InstantiationException $r3;
        java.lang.Class $r0;
        java.lang.Object $r1;

     label1:
        $r0 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class jmDNSClass>;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to instantiate JMDNS", $r3);

        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to instantiate JMDNS", $r2);

     label5:
        return null;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    private static java.lang.Object createJmDNSVersion3()
    {
        java.lang.IllegalAccessException $r5;
        java.lang.NoSuchMethodException $r4;
        java.lang.Class $r0;
        java.lang.Object $r2;
        java.lang.reflect.Method $r1;
        java.lang.reflect.InvocationTargetException $r3;

     label1:
        $r0 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class jmDNSClass>;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("create", null);

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to instantiate jmdns class", $r5);

        goto label6;

     label4:
        $r4 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to access constructor", $r4);

        goto label6;

     label5:
        $r3 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to call constructor", $r3);

     label6:
        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    private java.lang.Object buildServiceInfoVersion1(java.lang.String, int, java.lang.String, java.util.Map)
    {
        java.lang.Object[] $r20;
        java.lang.NoSuchMethodException $r23;
        java.lang.reflect.Constructor $r9;
        java.lang.Integer $r12, $r13, $r14;
        java.lang.StringBuffer $r16, $r17, $r18;
        java.util.Map r1;
        int i0;
        java.lang.InstantiationException $r22;
        java.lang.String r10, r11, $r19;
        java.util.Hashtable $r0;
        java.lang.IllegalAccessException $r24;
        org.apache.log4j.net.ZeroConfSupport r25;
        java.lang.Class[] r26;
        java.lang.reflect.InvocationTargetException $r21;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r27, $r28, $r29;
        java.lang.Object $r15;

        r25 := @this: org.apache.log4j.net.ZeroConfSupport;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r11 := @parameter2: java.lang.String;

        r1 := @parameter3: java.util.Map;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>(java.util.Map)>(r1);

     label01:
        r26 = newarray (java.lang.Class)[6];

        $r2 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

        if $r2 != null goto label02;

        $r27 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String> = $r27;

        goto label03;

     label02:
        $r27 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

     label03:
        r26[0] = $r27;

        $r3 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label04;

        $r28 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String> = $r28;

        goto label05;

     label04:
        $r28 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

     label05:
        r26[1] = $r28;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        r26[2] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        r26[3] = $r5;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        r26[4] = $r6;

        $r7 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Hashtable>;

        if $r7 != null goto label06;

        $r29 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$(java.lang.String)>("java.util.Hashtable");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Hashtable> = $r29;

        goto label07;

     label06:
        $r29 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Hashtable>;

     label07:
        r26[5] = $r29;

        $r8 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class serviceInfoClass>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r26);

        $r20 = newarray (java.lang.Object)[6];

        $r20[0] = r10;

        $r20[1] = r11;

        $r12 = new java.lang.Integer;

        specialinvoke $r12.<java.lang.Integer: void <init>(int)>(i0);

        $r20[2] = $r12;

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(0);

        $r20[3] = $r13;

        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>(0);

        $r20[4] = $r14;

        $r20[5] = $r0;

        $r15 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r20);

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("created serviceinfo: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r19);

     label08:
        return $r15;

     label09:
        $r24 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to construct ServiceInfo instance", $r24);

        goto label13;

     label10:
        $r23 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to get ServiceInfo constructor", $r23);

        goto label13;

     label11:
        $r22 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to construct ServiceInfo instance", $r22);

        goto label13;

     label12:
        $r21 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to construct ServiceInfo instance", $r21);

     label13:
        return null;

        catch java.lang.IllegalAccessException from label01 to label08 with label09;
        catch java.lang.NoSuchMethodException from label01 to label08 with label10;
        catch java.lang.InstantiationException from label01 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label01 to label08 with label12;
    }

    private java.lang.Object buildServiceInfoVersion3(java.lang.String, int, java.lang.String, java.util.Map)
    {
        java.lang.Object[] $r19;
        java.lang.NoSuchMethodException $r21;
        java.lang.Integer $r10, $r11, $r12;
        java.lang.StringBuffer $r15, $r16, $r17;
        java.util.Map r13;
        int i0;
        java.lang.String r8, r9, $r18;
        java.lang.reflect.Method $r7;
        java.lang.IllegalAccessException $r22;
        org.apache.log4j.net.ZeroConfSupport r23;
        java.lang.Class[] r24;
        java.lang.reflect.InvocationTargetException $r20;
        java.lang.Class $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r25, $r26, $r27;
        java.lang.Object $r14;

        r23 := @this: org.apache.log4j.net.ZeroConfSupport;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r9 := @parameter2: java.lang.String;

        r13 := @parameter3: java.util.Map;

     label01:
        r24 = newarray (java.lang.Class)[6];

        $r0 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

        if $r0 != null goto label02;

        $r25 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String> = $r25;

        goto label03;

     label02:
        $r25 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

     label03:
        r24[0] = $r25;

        $r1 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

        if $r1 != null goto label04;

        $r26 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String> = $r26;

        goto label05;

     label04:
        $r26 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>;

     label05:
        r24[1] = $r26;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        r24[2] = $r2;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        r24[3] = $r3;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        r24[4] = $r4;

        $r5 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Map>;

        if $r5 != null goto label06;

        $r27 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Map> = $r27;

        goto label07;

     label06:
        $r27 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Map>;

     label07:
        r24[5] = $r27;

        $r6 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class serviceInfoClass>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("create", r24);

        $r19 = newarray (java.lang.Object)[6];

        $r19[0] = r8;

        $r19[1] = r9;

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i0);

        $r19[2] = $r10;

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(0);

        $r19[3] = $r11;

        $r12 = new java.lang.Integer;

        specialinvoke $r12.<java.lang.Integer: void <init>(int)>(0);

        $r19[4] = $r12;

        $r19[5] = r13;

        $r14 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r19);

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("created serviceinfo: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r14);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r18);

     label08:
        return $r14;

     label09:
        $r22 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to invoke create method", $r22);

        goto label12;

     label10:
        $r21 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to find create method", $r21);

        goto label12;

     label11:
        $r20 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to invoke create method", $r20);

     label12:
        return null;

        catch java.lang.IllegalAccessException from label01 to label08 with label09;
        catch java.lang.NoSuchMethodException from label01 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label08 with label11;
    }

    public void advertise()
    {
        java.lang.Object[] $r4;
        java.lang.NoSuchMethodException $r14;
        java.lang.StringBuffer $r8, $r9, $r11;
        java.lang.String $r12;
        java.lang.reflect.Method $r3;
        org.apache.log4j.net.ZeroConfSupport r5;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r0;
        java.lang.reflect.InvocationTargetException $r13;
        java.lang.Class $r1, $r2;
        java.lang.Object $r6, $r7, $r10;

        r5 := @this: org.apache.log4j.net.ZeroConfSupport;

     label1:
        $r2 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class jmDNSClass>;

        $r0 = newarray (java.lang.Class)[1];

        $r1 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class serviceInfoClass>;

        $r0[0] = $r1;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("registerService", $r0);

        $r7 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Object jmDNS>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = r5.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object serviceInfo>;

        $r4[0] = $r6;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r4);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("registered serviceInfo: ");

        $r10 = r5.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object serviceInfo>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r12);

     label2:
        goto label6;

     label3:
        $r15 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to invoke registerService method", $r15);

        goto label6;

     label4:
        $r14 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("No registerService method", $r14);

        goto label6;

     label5:
        $r13 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to invoke registerService method", $r13);

     label6:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public void unadvertise()
    {
        java.lang.Object[] $r4;
        java.lang.NoSuchMethodException $r14;
        java.lang.StringBuffer $r8, $r9, $r11;
        java.lang.String $r12;
        java.lang.reflect.Method $r3;
        org.apache.log4j.net.ZeroConfSupport r5;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r0;
        java.lang.reflect.InvocationTargetException $r13;
        java.lang.Class $r1, $r2;
        java.lang.Object $r6, $r7, $r10;

        r5 := @this: org.apache.log4j.net.ZeroConfSupport;

     label1:
        $r2 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class jmDNSClass>;

        $r0 = newarray (java.lang.Class)[1];

        $r1 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class serviceInfoClass>;

        $r0[0] = $r1;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("unregisterService", $r0);

        $r7 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Object jmDNS>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = r5.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object serviceInfo>;

        $r4[0] = $r6;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r4);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unregistered serviceInfo: ");

        $r10 = r5.<org.apache.log4j.net.ZeroConfSupport: java.lang.Object serviceInfo>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r12);

     label2:
        goto label6;

     label3:
        $r15 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to invoke unregisterService method", $r15);

        goto label6;

     label4:
        $r14 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("No unregisterService method", $r14);

        goto label6;

     label5:
        $r13 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Unable to invoke unregisterService method", $r13);

     label6:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    private static java.lang.Object initializeJMDNS()
    {
        java.lang.NoSuchMethodException $r5;
        java.lang.Class $r0, $r1, $r2;
        java.lang.Object $r3, $r4;
        java.lang.ClassNotFoundException $r6;
        boolean z0;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.jmdns.JmDNS");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class jmDNSClass> = $r0;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.jmdns.ServiceInfo");

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Class serviceInfoClass> = $r1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("JmDNS or serviceInfo class not found", $r6);

     label4:
        z0 = 0;

     label5:
        $r2 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Class jmDNSClass>;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("create", null);

        z0 = 1;

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

     label8:
        if z0 == 0 goto label9;

        $r4 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Object createJmDNSVersion3()>();

        return $r4;

     label9:
        $r3 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Object createJmDNSVersion1()>();

        return $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    public static java.lang.Object getJMDNSInstance()
    {
        java.lang.Object $r0;

        $r0 = <org.apache.log4j.net.ZeroConfSupport: java.lang.Object jmDNS>;

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = staticinvoke <org.apache.log4j.net.ZeroConfSupport: java.lang.Object initializeJMDNS()>();

        <org.apache.log4j.net.ZeroConfSupport: java.lang.Object jmDNS> = $r0;

        return;
    }
}
