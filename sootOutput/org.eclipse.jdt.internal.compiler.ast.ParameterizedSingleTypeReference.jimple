public class org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference extends org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
{
    public org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments;

    public void <init>(char[], org.eclipse.jdt.internal.compiler.ast.TypeReference[], int, long)
    {
        int i0, $i2;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r0;
        char[] r1;
        long l1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r1 := @parameter0: char[];

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference[];

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>(r1, i0, l1);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int sourceEnd>;

        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int originalSourceEnd> = $i2;

        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments> = r2;

        return;
    }

    public void checkBounds(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r10;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r9;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, $r2, $r3, $r4, $r5;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding r6;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r0;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r10 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $z0 = $r3 instanceof org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding;

        if $z0 == 0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        r6 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding) $r5;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding genericType()>();

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables()>();

        r9 = r6.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] arguments>;

        if r9 == null goto label2;

        if $r8 == null goto label2;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: void boundCheck(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.ast.TypeReference[])>(r10, $r11);

     label2:
        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.TypeReference copyDims(int)
    {
        long $l2, $l4, $l5, $l6;
        int i0, $i1, $i3;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference $r0, r1;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        i0 := @parameter0: int;

        $r0 = new org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: char[] token>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int sourceStart>;

        $l2 = (long) $i1;

        $l5 = $l2 << 32;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int sourceEnd>;

        $l4 = (long) $i3;

        $l6 = $l5 + $l4;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: void <init>(char[],org.eclipse.jdt.internal.compiler.ast.TypeReference[],int,long)>($r3, $r2, i0, $l6);

        return $r0;
    }

    public char[][] getParameterizedTypeName()
    {
        char[][] $r7, $r9;
        java.lang.StringBuffer $r0, $r3;
        int $i0, i1, $i2, i3, $i4, i5, i6, i7;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r6;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        char[] $r2, $r8, r10, r11;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(5);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: char[] token>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        i5 = 0;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        i6 = lengthof $r4;

        goto label3;

     label1:
        if i5 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r6 = $r5[i5];

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r7, 46);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

        i5 = i5 + 1;

     label3:
        if i5 < i6 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        r11 = newarray (char)[$i0];

        virtualinvoke $r0.<java.lang.StringBuffer: void getChars(int,int,char[],int)>(0, $i0, r11, 0);

        i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        if i1 <= 0 goto label6;

        $i2 = i1 * 2;

        r10 = newarray (char)[$i2];

        i7 = 0;

        goto label5;

     label4:
        i3 = i7 * 2;

        r10[i3] = 91;

        $i4 = i3 + 1;

        r10[$i4] = 93;

        i7 = i7 + 1;

     label5:
        if i7 < i1 goto label4;

        r11 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[])>(r11, r10);

     label6:
        $r9 = newarray (char[])[1];

        $r9[0] = r11;

        return $r9;
    }

    protected org.eclipse.jdt.internal.compiler.lookup.TypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r0;
        org.eclipse.jdt.internal.compiler.lookup.Scope r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        return null;
    }

    private org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, boolean)
    {
        byte $b9, $b12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r8, $r30, $r31, $r35, $r36, $r37, $r38, $r39, $r47, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r64, r65, r68;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r7, $r9, $r15, $r40, $r41;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r60, r62, r63;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r21;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope $r10, $r42;
        long $l8, $l10, $l11;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r11, $r24, $r25, $r26, $r27, $r43;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r18, $r45, $r46, $r49, $r66;
        org.eclipse.jdt.internal.compiler.lookup.Scope r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r12, $r13;
        char[] $r3, $r34;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r14, $r17, $r20, $r22, $r23, $r32, $r33;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding $r67;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, z13, z15, z16, z18, $z19, $z20, $z21, $z22, z23, z24;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, $i22, i23, $i24;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r6, $r16, $r29, $r44, $r48, r58, r59, $r61;
        org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding $r19;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r28;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r58 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        z3 := @parameter2: boolean;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int bits>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label04;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r52 == null goto label04;

        $r53 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z10 = virtualinvoke $r53.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z10 == 0 goto label01;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r57;

     label01:
        $r54 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i20 = virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int problemId()>();

        tableswitch($i20)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label03;
            case 5: goto label02;
            default: goto label03;
        };

     label02:
        $r55 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r56 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding closestMatch()>();

        return $r56;

     label03:
        return null;

     label04:
        z11 = 0;

        z24 = 0;

        z23 = 0;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int bits>;

        $i3 = $i2 | 262144;

        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int bits> = $i3;

        if r58 != null goto label17;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: char[] token>;

        $r35 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.TypeBinding getType(char[])>($r34);

        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r35;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z7 = virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z7 == 0 goto label05;

        $r51 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        r59 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r51;

        goto label14;

     label05:
        z11 = 1;

        z24 = 1;

        z23 = 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: void reportInvalidType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r2);

        $r37 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i17 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int problemId()>();

        tableswitch($i17)
        {
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label07;
            case 5: goto label06;
            default: goto label07;
        };

     label06:
        $r38 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r39 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding closestMatch()>();

        $z8 = $r39 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z8 == 0 goto label07;

        r59 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r39;

        goto label14;

     label07:
        $i18 = r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: int kind>;

        if $i18 != 3 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        z13 = $z12;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $i19 = lengthof $r40;

        i21 = 0;

        goto label13;

     label10:
        $r41 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        r60 = $r41[i21];

        if z13 == 0 goto label11;

        $r43 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r2;

        virtualinvoke r60.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r43);

        goto label12;

     label11:
        $r42 = (org.eclipse.jdt.internal.compiler.lookup.BlockScope) r2;

        virtualinvoke r60.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>($r42, z3);

     label12:
        i21 = i21 + 1;

     label13:
        if i21 < $i19 goto label10;

        return null;

     label14:
        $r44 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        r58 = $r44;

        if $r44 == null goto label20;

        $z9 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isStatic()>();

        if $z9 == 0 goto label15;

        $r49 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r50 = virtualinvoke $r49.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding convertToRawType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>($r44, 0);

        $r61 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r50;

        goto label16;

     label15:
        $r45 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r61 = virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding convertToParameterizedType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r44);

     label16:
        r58 = $r61;

        $r46 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r47 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r48 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r47;

        r59 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding createParameterizedType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r48, null, $r61);

        goto label20;

     label17:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: char[] token>;

        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getMemberType(char[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r3, r58);

        r59 = $r4;

        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r4;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z0 != 0 goto label18;

        $r33 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidEnclosingType(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r0, $r4, r58);

        return null;

     label18:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: boolean isTypeUseDeprecated(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r4, r2);

        if $z1 == 0 goto label19;

        $r32 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void deprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r4, r0);

     label19:
        $r6 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        if $r6 == null goto label20;

        $r30 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r31 = virtualinvoke r58.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        if $r30 == $r31 goto label20;

        r58 = $r6;

     label20:
        $i22 = r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: int kind>;

        if $i22 != 3 goto label21;

        $z20 = 1;

        $z19 = 1;

        goto label22;

     label21:
        $z20 = 0;

        $z19 = 0;

     label22:
        z15 = $z19;

        r62 = null;

        if $z20 == 0 goto label23;

        $r26 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r2;

        r62 = $r26.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeReference superTypeReference>;

        $r27 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r2;

        $r27.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeReference superTypeReference> = null;

     label23:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $i16 = lengthof $r7;

        $r28 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[$i16];

        z16 = 0;

        $r8 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r29 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r8;

        i23 = 0;

        goto label29;

     label24:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        r63 = $r9[i23];

        if z15 == 0 goto label25;

        $r11 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r2;

        $r64 = virtualinvoke r63.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeArgument(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r11, $r29, i23);

        goto label26;

     label25:
        $r10 = (org.eclipse.jdt.internal.compiler.lookup.BlockScope) r2;

        $r64 = virtualinvoke r63.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeArgument(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r10, $r29, i23);

     label26:
        if $r64 != null goto label27;

        z16 = 1;

        goto label28;

     label27:
        $r28[i23] = $r64;

     label28:
        i23 = i23 + 1;

     label29:
        if i23 < $i16 goto label24;

        if z16 == 0 goto label30;

        return null;

     label30:
        if z15 == 0 goto label31;

        $r24 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r2;

        $r24.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeReference superTypeReference> = r62;

        $r25 = (org.eclipse.jdt.internal.compiler.lookup.ClassScope) r2;

        $z6 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: boolean detectHierarchyCycle(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.TypeReference)>($r29, r0);

        if $z6 == 0 goto label31;

        return null;

     label31:
        $r12 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables()>();

        $r13 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r12 != $r13 goto label38;

        $r21 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l8 = $r21.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b9 = $l8 cmp 3211264L;

        $i24 = (int) $b9;

        if $i24 < 0 goto label32;

        $z22 = 1;

        $z21 = 1;

        goto label33;

     label32:
        $z22 = 0;

        $z21 = 0;

     label33:
        z18 = $z21;

        $l10 = $r29.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l11 = $l10 & 128L;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label34;

        if $z22 == 0 goto label34;

        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r59;

        $r23 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void nonGenericTypeCannotBeParameterized(int,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])>(0, r0, r59, $r28);

        return null;

     label34:
        if z18 != 0 goto label40;

        r65 = r59;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        if $i13 <= 0 goto label36;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        if $i14 <= 255 goto label35;

        $r22 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void tooManyDimensions(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r0);

     label35:
        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        r65 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding createArrayType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>(r65, $i15);

     label36:
        if z24 == 0 goto label37;

        return r65;

     label37:
        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r65;

        return r65;

     label38:
        $i4 = lengthof $r12;

        if $i16 == $i4 goto label39;

        $r20 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void incorrectArityForParameterizedType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])>(r0, r59, $r28);

        return null;

     label39:
        $z2 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isStatic()>();

        if $z2 != 0 goto label40;

        $r16 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        if $r16 == null goto label40;

        $z5 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isRawType()>();

        if $z5 == 0 goto label40;

        $r17 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r18 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding createRawType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r29, $r16);

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void rawMemberTypeCannotBeParameterized(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])>(r0, $r19, $r28);

        return null;

     label40:
        $r66 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r67 = virtualinvoke $r66.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding createParameterizedType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r29, $r28, r58);

        if z3 == 0 goto label41;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        virtualinvoke $r67.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: void boundCheck(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.ast.TypeReference[])>(r2, $r15);

     label41:
        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: boolean isTypeUseDeprecated(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r67, r2);

        if $z4 == 0 goto label42;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: void reportDeprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r67, r2);

     label42:
        r68 = $r67;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        if $i5 <= 0 goto label44;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        if $i6 <= 255 goto label43;

        $r14 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void tooManyDimensions(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r0);

     label43:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        r68 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding createArrayType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r67, $i7);

     label44:
        if z23 == 0 goto label45;

        return r68;

     label45:
        r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r68;

        return r68;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r3, $r4, $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5, $r7;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        char[] $r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        i7 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: char[] token>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $i0 = lengthof $r3;

        i1 = $i0 - 1;

        i8 = 0;

        goto label2;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r5 = $r4[i8];

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r0);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        i8 = i8 + 1;

     label2:
        if i8 < i1 goto label1;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r7 = $r6[i1];

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r0);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int bits>;

        $i3 = $i2 & 16384;

        if $i3 == 0 goto label5;

        i9 = 0;

        goto label4;

     label3:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        i9 = i9 + 1;

     label4:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        $i6 = $i5 - 1;

        if i9 < $i6 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        goto label8;

     label5:
        i10 = 0;

        goto label7;

     label6:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        i10 = i10 + 1;

     label7:
        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int dimensions>;

        if i10 < $i4 goto label6;

     label8:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r0;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r1, null, z0);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $r2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r1, null, 0);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeEnclosing(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r1, r2, 1);

        return $r3;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r3, $r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label3;

        i1 = 0;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        i0 = lengthof $r3;

        goto label2;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r5 = $r4[i1];

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r3, $r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        if $z0 == 0 goto label3;

        i1 = 0;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        i0 = lengthof $r3;

        goto label2;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r5 = $r4[i1];

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }
}
