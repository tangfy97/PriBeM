public class com.sun.xml.txw2.output.IndentingXMLFilter extends org.xml.sax.helpers.XMLFilterImpl implements org.xml.sax.ext.LexicalHandler
{
    private org.xml.sax.ext.LexicalHandler lexical;
    private static final char[] NEWLINE;
    private static final java.lang.Object SEEN_NOTHING;
    private static final java.lang.Object SEEN_ELEMENT;
    private static final java.lang.Object SEEN_DATA;
    private java.lang.Object state;
    private java.util.Stack stateStack;
    private java.lang.String indentStep;
    private int depth;

    public void <init>()
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.Object $r1;
        java.util.Stack $r2;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        $r1 = <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_NOTHING>;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object state> = $r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.util.Stack stateStack> = $r2;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.String indentStep> = "";

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth> = 0;

        return;
    }

    public void <init>(org.xml.sax.ContentHandler)
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.Object $r1;
        org.xml.sax.ContentHandler r3;
        java.util.Stack $r2;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r3 := @parameter0: org.xml.sax.ContentHandler;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        $r1 = <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_NOTHING>;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object state> = $r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.util.Stack stateStack> = $r2;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.String indentStep> = "";

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth> = 0;

        virtualinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

        return;
    }

    public void <init>(org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler)
    {
        org.xml.sax.ext.LexicalHandler r4;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.Object $r1;
        org.xml.sax.ContentHandler r3;
        java.util.Stack $r2;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r3 := @parameter0: org.xml.sax.ContentHandler;

        r4 := @parameter1: org.xml.sax.ext.LexicalHandler;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        $r1 = <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_NOTHING>;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object state> = $r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.util.Stack stateStack> = $r2;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.String indentStep> = "";

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth> = 0;

        virtualinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

        virtualinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>(r4);

        return;
    }

    public org.xml.sax.ext.LexicalHandler getLexicalHandler()
    {
        org.xml.sax.ext.LexicalHandler $r1;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        return $r1;
    }

    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler)
    {
        org.xml.sax.ext.LexicalHandler r1;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical> = r1;

        return;
    }

    public int getIndentStep()
    {
        int $i0;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.String $r1;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.String indentStep>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public void setIndentStep(int)
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r1;
        int i0, $i2;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r1 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        i0 := @parameter0: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label1:
        if i0 <= 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $i2 = (int) -1;

        i0 = i0 + $i2;

        goto label1;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.sun.xml.txw2.output.IndentingXMLFilter: void setIndentStep(java.lang.String)>($r2);

        return;
    }

    public void setIndentStep(java.lang.String)
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.String r1;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r1 := @parameter0: java.lang.String;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.String indentStep> = r1;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.util.Stack $r2;
        int $i0, $i1, $i2;
        org.xml.sax.Attributes r7;
        java.lang.Object $r1, $r3;
        java.lang.String r4, r5, r6;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r7 := @parameter3: org.xml.sax.Attributes;

        $r2 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.util.Stack stateStack>;

        $r1 = <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_ELEMENT>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        $r3 = <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_NOTHING>;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object state> = $r3;

        $i0 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth>;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void writeNewLine()>();

     label1:
        specialinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void doIndent()>();

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r4, r5, r6, r7);

        $i1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth>;

        $i2 = $i1 + 1;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth> = $i2;

        return;
    }

    private void writeNewLine() throws org.xml.sax.SAXException
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        int $i0;
        char[] $r1, $r2;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        $r2 = <com.sun.xml.txw2.output.IndentingXMLFilter: char[] NEWLINE>;

        $r1 = <com.sun.xml.txw2.output.IndentingXMLFilter: char[] NEWLINE>;

        $i0 = lengthof $r1;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void characters(char[],int,int)>($r2, 0, $i0);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.util.Stack $r6;
        int $i0, $i1;
        java.lang.Object $r1, $r2, $r7;
        java.lang.String r3, r4, r5;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $i0 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth>;

        $i1 = $i0 - 1;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth> = $i1;

        $r2 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object state>;

        $r1 = <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_ELEMENT>;

        if $r2 != $r1 goto label1;

        specialinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void writeNewLine()>();

        specialinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void doIndent()>();

     label1:
        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r3, r4, r5);

        $r6 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.util.Stack stateStack>;

        $r7 = virtualinvoke $r6.<java.util.Stack: java.lang.Object pop()>();

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object state> = $r7;

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        int i0, i1;
        char[] r2;
        java.lang.Object $r1;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_DATA>;

        r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object state> = $r1;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void characters(char[],int,int)>(r2, i0, i1);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r3;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        int $i0, i1, i2;
        char[] r2;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r2 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i0 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth>;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void writeNewLine()>();

     label1:
        specialinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void doIndent()>();

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 == null goto label2;

        $r3 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r3.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(r2, i1, i2);

     label2:
        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r5;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.String r2, r3, r4;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 == null goto label1;

        $r5 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r5.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4);

     label1:
        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r2;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

     label1:
        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r3;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.String r2;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 == null goto label1;

        $r3 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r3.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>(r2);

     label1:
        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r3;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        java.lang.String r2;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 == null goto label1;

        $r3 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r3.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>(r2);

     label1:
        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r2;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

     label1:
        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r2;
        com.sun.xml.txw2.output.IndentingXMLFilter r0;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: org.xml.sax.ext.LexicalHandler lexical>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

     label1:
        return;
    }

    private void doIndent() throws org.xml.sax.SAXException
    {
        com.sun.xml.txw2.output.IndentingXMLFilter r0;
        int $i0, $i1, $i2, i3;
        char[] $r2;
        java.lang.String $r1;

        r0 := @this: com.sun.xml.txw2.output.IndentingXMLFilter;

        $i0 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth>;

        if $i0 <= 0 goto label2;

        $r1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.String indentStep>;

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        i3 = 0;

     label1:
        $i1 = r0.<com.sun.xml.txw2.output.IndentingXMLFilter: int depth>;

        if i3 >= $i1 goto label2;

        $i2 = lengthof $r2;

        virtualinvoke r0.<com.sun.xml.txw2.output.IndentingXMLFilter: void characters(char[],int,int)>($r2, 0, $i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        char[] $r0;
        java.lang.Object $r1, $r2, $r3;

        $r0 = newarray (char)[1];

        $r0[0] = 10;

        <com.sun.xml.txw2.output.IndentingXMLFilter: char[] NEWLINE> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_NOTHING> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_ELEMENT> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <com.sun.xml.txw2.output.IndentingXMLFilter: java.lang.Object SEEN_DATA> = $r3;

        return;
    }
}
