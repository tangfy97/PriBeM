class org.bouncycastle.cms.KEKRecipientInfoGenerator extends java.lang.Object implements org.bouncycastle.cms.RecipientInfoGenerator
{
    private javax.crypto.SecretKey wrapKey;
    private org.bouncycastle.asn1.cms.KEKIdentifier secKeyId;
    private org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncAlg;

    void <init>()
    {
        org.bouncycastle.cms.KEKRecipientInfoGenerator r0;

        r0 := @this: org.bouncycastle.cms.KEKRecipientInfoGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void setWrapKey(javax.crypto.SecretKey)
    {
        javax.crypto.SecretKey r1;
        org.bouncycastle.cms.KEKRecipientInfoGenerator r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;

        r0 := @this: org.bouncycastle.cms.KEKRecipientInfoGenerator;

        r1 := @parameter0: javax.crypto.SecretKey;

        r0.<org.bouncycastle.cms.KEKRecipientInfoGenerator: javax.crypto.SecretKey wrapKey> = r1;

        $r2 = staticinvoke <org.bouncycastle.cms.KEKRecipientInfoGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(javax.crypto.SecretKey)>(r1);

        r0.<org.bouncycastle.cms.KEKRecipientInfoGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncAlg> = $r2;

        return;
    }

    void setKEKIdentifier(org.bouncycastle.asn1.cms.KEKIdentifier)
    {
        org.bouncycastle.asn1.cms.KEKIdentifier r1;
        org.bouncycastle.cms.KEKRecipientInfoGenerator r0;

        r0 := @this: org.bouncycastle.cms.KEKRecipientInfoGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.cms.KEKIdentifier;

        r0.<org.bouncycastle.cms.KEKRecipientInfoGenerator: org.bouncycastle.asn1.cms.KEKIdentifier secKeyId> = r1;

        return;
    }

    public org.bouncycastle.asn1.cms.RecipientInfo generate(javax.crypto.SecretKey, java.security.SecureRandom, java.security.Provider) throws java.security.GeneralSecurityException
    {
        byte[] $r11;
        org.bouncycastle.asn1.DEROctetString $r9;
        javax.crypto.Cipher $r6;
        org.bouncycastle.cms.CMSEnvelopedHelper $r2;
        java.security.SecureRandom r7;
        org.bouncycastle.asn1.cms.KEKRecipientInfo $r13;
        org.bouncycastle.asn1.cms.RecipientInfo $r12;
        java.lang.String $r4;
        org.bouncycastle.cms.KEKRecipientInfoGenerator r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r3;
        org.bouncycastle.asn1.cms.KEKIdentifier $r15;
        java.security.Provider r5;
        javax.crypto.SecretKey $r8, r10;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r1, $r14;

        r0 := @this: org.bouncycastle.cms.KEKRecipientInfoGenerator;

        r10 := @parameter0: javax.crypto.SecretKey;

        r7 := @parameter1: java.security.SecureRandom;

        r5 := @parameter2: java.security.Provider;

        $r2 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r1 = r0.<org.bouncycastle.cms.KEKRecipientInfoGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncAlg>;

        $r3 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r6 = virtualinvoke $r2.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.Cipher createAsymmetricCipher(java.lang.String,java.security.Provider)>($r4, r5);

        $r8 = r0.<org.bouncycastle.cms.KEKRecipientInfoGenerator: javax.crypto.SecretKey wrapKey>;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(3, $r8, r7);

        $r9 = new org.bouncycastle.asn1.DEROctetString;

        $r11 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r10);

        specialinvoke $r9.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r11);

        $r12 = new org.bouncycastle.asn1.cms.RecipientInfo;

        $r13 = new org.bouncycastle.asn1.cms.KEKRecipientInfo;

        $r15 = r0.<org.bouncycastle.cms.KEKRecipientInfoGenerator: org.bouncycastle.asn1.cms.KEKIdentifier secKeyId>;

        $r14 = r0.<org.bouncycastle.cms.KEKRecipientInfoGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncAlg>;

        specialinvoke $r13.<org.bouncycastle.asn1.cms.KEKRecipientInfo: void <init>(org.bouncycastle.asn1.cms.KEKIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString)>($r15, $r14, $r9);

        specialinvoke $r12.<org.bouncycastle.asn1.cms.RecipientInfo: void <init>(org.bouncycastle.asn1.cms.KEKRecipientInfo)>($r13);

        return $r12;
    }

    private static org.bouncycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(javax.crypto.SecretKey)
    {
        byte[] $r3, $r7;
        org.bouncycastle.asn1.DERNull $r14;
        int $i0, $i1, i2, i3;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.asn1.DERObjectIdentifier $r6, $r10, $r13, r15, r17;
        java.lang.IllegalArgumentException $r2, $r4, $r8;
        org.bouncycastle.asn1.DERInteger $r11;
        javax.crypto.SecretKey r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r5, $r9, $r12, $r16, $r18;

        r0 := @parameter0: javax.crypto.SecretKey;

        $r1 = interfaceinvoke r0.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("DES");

        if $z0 == 0 goto label01;

        $r12 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r13 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r13.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>("1.2.840.113549.1.9.16.3.6");

        $r14 = new org.bouncycastle.asn1.DERNull;

        specialinvoke $r14.<org.bouncycastle.asn1.DERNull: void <init>()>();

        specialinvoke $r12.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r13, $r14);

        return $r12;

     label01:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("RC2");

        if $z1 == 0 goto label02;

        $r9 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r10 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r10.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>("1.2.840.113549.1.9.16.3.7");

        $r11 = new org.bouncycastle.asn1.DERInteger;

        specialinvoke $r11.<org.bouncycastle.asn1.DERInteger: void <init>(int)>(58);

        specialinvoke $r9.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r10, $r11);

        return $r9;

     label02:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("AES");

        if $z2 == 0 goto label07;

        $r7 = interfaceinvoke r0.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $i1 = lengthof $r7;

        i2 = $i1 * 8;

        if i2 != 128 goto label03;

        r15 = <org.bouncycastle.asn1.nist.NISTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_aes128_wrap>;

        goto label06;

     label03:
        if i2 != 192 goto label04;

        r15 = <org.bouncycastle.asn1.nist.NISTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_aes192_wrap>;

        goto label06;

     label04:
        if i2 != 256 goto label05;

        r15 = <org.bouncycastle.asn1.nist.NISTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_aes256_wrap>;

        goto label06;

     label05:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal keysize in AES");

        throw $r8;

     label06:
        $r16 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        specialinvoke $r16.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier)>(r15);

        return $r16;

     label07:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("SEED");

        if $z3 == 0 goto label08;

        $r5 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r6 = <org.bouncycastle.asn1.kisa.KISAObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_npki_app_cmsSeed_wrap>;

        specialinvoke $r5.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier)>($r6);

        return $r5;

     label08:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("Camellia");

        if $z4 == 0 goto label13;

        $r3 = interfaceinvoke r0.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $i0 = lengthof $r3;

        i3 = $i0 * 8;

        if i3 != 128 goto label09;

        r17 = <org.bouncycastle.asn1.ntt.NTTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_camellia128_wrap>;

        goto label12;

     label09:
        if i3 != 192 goto label10;

        r17 = <org.bouncycastle.asn1.ntt.NTTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_camellia192_wrap>;

        goto label12;

     label10:
        if i3 != 256 goto label11;

        r17 = <org.bouncycastle.asn1.ntt.NTTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_camellia256_wrap>;

        goto label12;

     label11:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal keysize in Camellia");

        throw $r4;

     label12:
        $r18 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        specialinvoke $r18.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier)>(r17);

        return $r18;

     label13:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown algorithm");

        throw $r2;
    }
}
