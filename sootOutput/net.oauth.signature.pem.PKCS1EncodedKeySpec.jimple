public class net.oauth.signature.pem.PKCS1EncodedKeySpec extends java.lang.Object
{
    private java.security.spec.RSAPrivateCrtKeySpec keySpec;

    public void <init>(byte[]) throws java.io.IOException
    {
        byte[] r1;
        net.oauth.signature.pem.PKCS1EncodedKeySpec r0;

        r0 := @this: net.oauth.signature.pem.PKCS1EncodedKeySpec;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<net.oauth.signature.pem.PKCS1EncodedKeySpec: void decode(byte[])>(r1);

        return;
    }

    public java.security.spec.RSAPrivateCrtKeySpec getKeySpec()
    {
        java.security.spec.RSAPrivateCrtKeySpec $r1;
        net.oauth.signature.pem.PKCS1EncodedKeySpec r0;

        r0 := @this: net.oauth.signature.pem.PKCS1EncodedKeySpec;

        $r1 = r0.<net.oauth.signature.pem.PKCS1EncodedKeySpec: java.security.spec.RSAPrivateCrtKeySpec keySpec>;

        return $r1;
    }

    private void decode(byte[]) throws java.io.IOException
    {
        byte[] r1;
        net.oauth.signature.pem.DerParser $r0, $r3;
        java.security.spec.RSAPrivateCrtKeySpec $r21;
        int $i0;
        java.math.BigInteger $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        net.oauth.signature.pem.Asn1Object $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        java.io.IOException $r22;
        net.oauth.signature.pem.PKCS1EncodedKeySpec r20;

        r20 := @this: net.oauth.signature.pem.PKCS1EncodedKeySpec;

        r1 := @parameter0: byte[];

        $r0 = new net.oauth.signature.pem.DerParser;

        specialinvoke $r0.<net.oauth.signature.pem.DerParser: void <init>(byte[])>(r1);

        $r2 = virtualinvoke $r0.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $i0 = virtualinvoke $r2.<net.oauth.signature.pem.Asn1Object: int getType()>();

        if $i0 == 16 goto label1;

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("Invalid DER: not a sequence");

        throw $r22;

     label1:
        $r3 = virtualinvoke $r2.<net.oauth.signature.pem.Asn1Object: net.oauth.signature.pem.DerParser getParser()>();

        virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r4 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r5 = virtualinvoke $r4.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r6 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r7 = virtualinvoke $r6.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r8 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r9 = virtualinvoke $r8.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r10 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r11 = virtualinvoke $r10.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r12 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r13 = virtualinvoke $r12.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r14 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r15 = virtualinvoke $r14.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r16 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r17 = virtualinvoke $r16.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r18 = virtualinvoke $r3.<net.oauth.signature.pem.DerParser: net.oauth.signature.pem.Asn1Object read()>();

        $r19 = virtualinvoke $r18.<net.oauth.signature.pem.Asn1Object: java.math.BigInteger getInteger()>();

        $r21 = new java.security.spec.RSAPrivateCrtKeySpec;

        specialinvoke $r21.<java.security.spec.RSAPrivateCrtKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19);

        r20.<net.oauth.signature.pem.PKCS1EncodedKeySpec: java.security.spec.RSAPrivateCrtKeySpec keySpec> = $r21;

        return;
    }
}
