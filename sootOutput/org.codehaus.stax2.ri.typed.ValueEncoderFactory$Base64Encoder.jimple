final class org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder extends org.codehaus.stax2.ri.typed.AsciiValueEncoder
{
    static final char PAD_CHAR;
    static final byte PAD_BYTE;
    static final byte LF_CHAR;
    static final byte LF_BYTE;
    final org.codehaus.stax2.typed.Base64Variant _variant;
    final byte[] _input;
    int _inputPtr;
    final int _inputEnd;
    int _chunksBeforeLf;

    protected void <init>(org.codehaus.stax2.typed.Base64Variant, byte[], int, int)
    {
        byte[] r2;
        org.codehaus.stax2.typed.Base64Variant r1, $r3;
        int i0, i1, $i2, $i3;
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder r0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder;

        r1 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.codehaus.stax2.ri.typed.AsciiValueEncoder: void <init>()>();

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant> = r1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input> = r2;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = i0;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputEnd> = i1;

        $r3 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i2 = virtualinvoke $r3.<org.codehaus.stax2.typed.Base64Variant: int getMaxLineLength()>();

        $i3 = $i2 >> 2;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _chunksBeforeLf> = $i3;

        return;
    }

    public boolean isCompleted()
    {
        int $i0, $i1;
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder r0;
        boolean $z0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder;

        $i1 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i0 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputEnd>;

        if $i1 < $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int encodeMore(char[], int, int)
    {
        byte[] $r1, $r4, $r5, $r6, $r7;
        org.codehaus.stax2.typed.Base64Variant $r3, $r8, $r9;
        byte $b7, $b10, $b15, $b18, $b23;
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder r0;
        short $s11, $s19, $s24, $s41, $s43, $s46;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i12, $i13, $i14, $i16, $i17, $i20, $i21, $i22, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i34, i35, i36, i37, $i39, $i40, $i42, $i44, $i45, $i47;
        char[] r2;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder;

        r2 := @parameter0: char[];

        i30 := @parameter1: int;

        i31 := @parameter2: int;

        $i0 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputEnd>;

        i1 = $i0 - 3;

        $i39 = (int) -5;

        i32 = i31 + $i39;

     label1:
        $i2 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        if $i2 > i1 goto label4;

        if i30 <= i32 goto label2;

        return i30;

     label2:
        $r5 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i13 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i14;

        $b15 = $r5[$i13];

        $i40 = (int) $b15;

        i33 = $i40 << 8;

        $r6 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i16 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i17;

        $b18 = $r6[$i16];

        $s41 = (short) $b18;

        $s19 = $s41 & 255;

        $i42 = (int) $s19;

        i34 = i33 | $i42;

        $i22 = i34 << 8;

        $r7 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i20 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i21 = $i20 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i21;

        $b23 = $r7[$i20];

        $s43 = (short) $b23;

        $s24 = $s43 & 255;

        $i44 = (int) $s24;

        i35 = $i22 | $i44;

        $r8 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i25 = virtualinvoke $r8.<org.codehaus.stax2.typed.Base64Variant: int encodeBase64Chunk(int,char[],int)>(i35, r2, i30);

        i30 = $i25;

        $i26 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _chunksBeforeLf>;

        $i27 = $i26 - 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _chunksBeforeLf> = $i27;

        if $i27 > 0 goto label3;

        i30 = $i25 + 1;

        r2[$i25] = 10;

        $r9 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i28 = virtualinvoke $r9.<org.codehaus.stax2.typed.Base64Variant: int getMaxLineLength()>();

        $i29 = $i28 >> 2;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _chunksBeforeLf> = $i29;

     label3:
        goto label1;

     label4:
        $i4 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputEnd>;

        $i3 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        i36 = $i4 - $i3;

        if i36 <= 0 goto label6;

        if i30 > i32 goto label6;

        $r1 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i5 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i6;

        $b7 = $r1[$i5];

        $i45 = (int) $b7;

        i37 = $i45 << 16;

        if i36 != 2 goto label5;

        $r4 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i8 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i9 = $i8 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i9;

        $b10 = $r4[$i8];

        $s46 = (short) $b10;

        $s11 = $s46 & 255;

        $i47 = (int) $s11;

        $i12 = $i47 << 8;

        i37 = i37 | $i12;

     label5:
        $r3 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        i30 = virtualinvoke $r3.<org.codehaus.stax2.typed.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(i37, i36, r2, i30);

     label6:
        return i30;
    }

    public int encodeMore(byte[], int, int)
    {
        byte[] $r1, r2, $r4, $r5, $r6, $r7;
        org.codehaus.stax2.typed.Base64Variant $r3, $r8, $r9;
        byte $b7, $b10, $b15, $b18, $b23;
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder r0;
        short $s11, $s19, $s24, $s41, $s43, $s46;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i12, $i13, $i14, $i16, $i17, $i20, $i21, $i22, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i34, i35, i36, i37, $i39, $i40, $i42, $i44, $i45, $i47;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder;

        r2 := @parameter0: byte[];

        i30 := @parameter1: int;

        i31 := @parameter2: int;

        $i0 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputEnd>;

        i1 = $i0 - 3;

        $i39 = (int) -5;

        i32 = i31 + $i39;

     label1:
        $i2 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        if $i2 > i1 goto label4;

        if i30 <= i32 goto label2;

        return i30;

     label2:
        $r5 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i13 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i14;

        $b15 = $r5[$i13];

        $i40 = (int) $b15;

        i33 = $i40 << 8;

        $r6 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i16 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i17;

        $b18 = $r6[$i16];

        $s41 = (short) $b18;

        $s19 = $s41 & 255;

        $i42 = (int) $s19;

        i34 = i33 | $i42;

        $i22 = i34 << 8;

        $r7 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i20 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i21 = $i20 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i21;

        $b23 = $r7[$i20];

        $s43 = (short) $b23;

        $s24 = $s43 & 255;

        $i44 = (int) $s24;

        i35 = $i22 | $i44;

        $r8 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i25 = virtualinvoke $r8.<org.codehaus.stax2.typed.Base64Variant: int encodeBase64Chunk(int,byte[],int)>(i35, r2, i30);

        i30 = $i25;

        $i26 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _chunksBeforeLf>;

        $i27 = $i26 - 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _chunksBeforeLf> = $i27;

        if $i27 > 0 goto label3;

        i30 = $i25 + 1;

        r2[$i25] = 10;

        $r9 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        $i28 = virtualinvoke $r9.<org.codehaus.stax2.typed.Base64Variant: int getMaxLineLength()>();

        $i29 = $i28 >> 2;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _chunksBeforeLf> = $i29;

     label3:
        goto label1;

     label4:
        $i4 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputEnd>;

        $i3 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        i36 = $i4 - $i3;

        if i36 <= 0 goto label6;

        if i30 > i32 goto label6;

        $r1 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i5 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i6;

        $b7 = $r1[$i5];

        $i45 = (int) $b7;

        i37 = $i45 << 16;

        if i36 != 2 goto label5;

        $r4 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte[] _input>;

        $i8 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr>;

        $i9 = $i8 + 1;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: int _inputPtr> = $i9;

        $b10 = $r4[$i8];

        $s46 = (short) $b10;

        $s11 = $s46 & 255;

        $i47 = (int) $s11;

        $i12 = $i47 << 8;

        i37 = i37 | $i12;

     label5:
        $r3 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: org.codehaus.stax2.typed.Base64Variant _variant>;

        i30 = virtualinvoke $r3.<org.codehaus.stax2.typed.Base64Variant: int encodeBase64Partial(int,int,byte[],int)>(i37, i36, r2, i30);

     label6:
        return i30;
    }

    public static void <clinit>()
    {
        <org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte LF_BYTE> = 10;

        <org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte LF_CHAR> = 10;

        <org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: byte PAD_BYTE> = 61;

        <org.codehaus.stax2.ri.typed.ValueEncoderFactory$Base64Encoder: char PAD_CHAR> = 61;

        return;
    }
}
