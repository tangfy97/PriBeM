final class org.apache.poi.ss.formula.functions.LookupUtils extends java.lang.Object
{

    void <init>()
    {
        org.apache.poi.ss.formula.functions.LookupUtils r0;

        r0 := @this: org.apache.poi.ss.formula.functions.LookupUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createRowVector(org.apache.poi.ss.formula.TwoDEval, int)
    {
        org.apache.poi.ss.formula.TwoDEval r1;
        int i0;
        org.apache.poi.ss.formula.functions.LookupUtils$RowVector $r0;

        r1 := @parameter0: org.apache.poi.ss.formula.TwoDEval;

        i0 := @parameter1: int;

        $r0 = new org.apache.poi.ss.formula.functions.LookupUtils$RowVector;

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$RowVector: void <init>(org.apache.poi.ss.formula.TwoDEval,int)>(r1, i0);

        return $r0;
    }

    public static org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createColumnVector(org.apache.poi.ss.formula.TwoDEval, int)
    {
        org.apache.poi.ss.formula.TwoDEval r1;
        int i0;
        org.apache.poi.ss.formula.functions.LookupUtils$ColumnVector $r0;

        r1 := @parameter0: org.apache.poi.ss.formula.TwoDEval;

        i0 := @parameter1: int;

        $r0 = new org.apache.poi.ss.formula.functions.LookupUtils$ColumnVector;

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$ColumnVector: void <init>(org.apache.poi.ss.formula.TwoDEval,int)>(r1, i0);

        return $r0;
    }

    public static org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createVector(org.apache.poi.ss.formula.TwoDEval)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector $r1, $r2;
        org.apache.poi.ss.formula.TwoDEval r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.ss.formula.TwoDEval;

        $z0 = interfaceinvoke r0.<org.apache.poi.ss.formula.TwoDEval: boolean isColumn()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createColumnVector(org.apache.poi.ss.formula.TwoDEval,int)>(r0, 0);

        return $r2;

     label1:
        $z1 = interfaceinvoke r0.<org.apache.poi.ss.formula.TwoDEval: boolean isRow()>();

        if $z1 == 0 goto label2;

        $r1 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createRowVector(org.apache.poi.ss.formula.TwoDEval,int)>(r0, 0);

        return $r1;

     label2:
        return null;
    }

    public static org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createVector(org.apache.poi.ss.formula.eval.RefEval)
    {
        org.apache.poi.ss.formula.eval.RefEval r1;
        org.apache.poi.ss.formula.functions.LookupUtils$SheetVector $r0;

        r1 := @parameter0: org.apache.poi.ss.formula.eval.RefEval;

        $r0 = new org.apache.poi.ss.formula.functions.LookupUtils$SheetVector;

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$SheetVector: void <init>(org.apache.poi.ss.formula.eval.RefEval)>(r1);

        return $r0;
    }

    public static int resolveRowOrColIndexArg(org.apache.poi.ss.formula.eval.ValueEval, int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        java.lang.Double $r5;
        short $s2;
        int i0, i1, $i3, $i4, $i5;
        org.apache.poi.ss.formula.eval.EvaluationException $r2, $r6, $r8, $r9;
        java.lang.String $r4;
        boolean $z0;
        org.apache.poi.ss.formula.eval.StringEval r3;
        java.lang.IllegalArgumentException $r10;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r1;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("argument must not be null");

        throw $r10;

     label1:
        $s2 = (short) i1;

        $i5 = (int) $s2;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, $i5);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.EvaluationException invalidRef()>();

        throw $r9;

     label4:
        $z0 = $r1 instanceof org.apache.poi.ss.formula.eval.StringEval;

        if $z0 == 0 goto label5;

        r3 = (org.apache.poi.ss.formula.eval.StringEval) $r1;

        $r4 = virtualinvoke r3.<org.apache.poi.ss.formula.eval.StringEval: java.lang.String getStringValue()>();

        $r5 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: java.lang.Double parseDouble(java.lang.String)>($r4);

        if $r5 != null goto label5;

        $r6 = staticinvoke <org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.EvaluationException invalidRef()>();

        throw $r6;

     label5:
        $i3 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: int coerceValueToInt(org.apache.poi.ss.formula.eval.ValueEval)>($r1);

        if $i3 >= 1 goto label6;

        $r2 = staticinvoke <org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.EvaluationException invalidValue()>();

        throw $r2;

     label6:
        $i4 = $i3 - 1;

        return $i4;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label2 with label3;
    }

    public static org.apache.poi.ss.formula.TwoDEval resolveTableArrayArg(org.apache.poi.ss.formula.eval.ValueEval) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.RefEval r2;
        org.apache.poi.ss.formula.eval.ValueEval r0;
        org.apache.poi.ss.formula.eval.AreaEval $r3;
        org.apache.poi.ss.formula.TwoDEval $r4;
        org.apache.poi.ss.formula.eval.EvaluationException $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        $z0 = r0 instanceof org.apache.poi.ss.formula.TwoDEval;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.poi.ss.formula.TwoDEval) r0;

        return $r4;

     label1:
        $z1 = r0 instanceof org.apache.poi.ss.formula.eval.RefEval;

        if $z1 == 0 goto label2;

        r2 = (org.apache.poi.ss.formula.eval.RefEval) r0;

        $r3 = interfaceinvoke r2.<org.apache.poi.ss.formula.eval.RefEval: org.apache.poi.ss.formula.eval.AreaEval offset(int,int,int,int)>(0, 0, 0, 0);

        return $r3;

     label2:
        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.EvaluationException invalidValue()>();

        throw $r1;
    }

    public static boolean resolveRangeLookupArg(org.apache.poi.ss.formula.eval.ValueEval, int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.NumericValueEval r16;
        byte $b2;
        int i0, i1, $i3;
        java.lang.Boolean $r12;
        java.lang.String $r6, $r9, $r11;
        org.apache.poi.ss.formula.eval.EvaluationException $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        double $d0;
        org.apache.poi.ss.formula.eval.BoolEval r15;
        org.apache.poi.ss.formula.eval.StringEval $r10;
        java.lang.RuntimeException $r2;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r1;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        java.lang.Class $r5;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, i1);

        $z0 = $r1 instanceof org.apache.poi.ss.formula.eval.BlankEval;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = $r1 instanceof org.apache.poi.ss.formula.eval.BoolEval;

        if $z1 == 0 goto label2;

        r15 = (org.apache.poi.ss.formula.eval.BoolEval) $r1;

        $z5 = virtualinvoke r15.<org.apache.poi.ss.formula.eval.BoolEval: boolean getBooleanValue()>();

        return $z5;

     label2:
        $z2 = $r1 instanceof org.apache.poi.ss.formula.eval.StringEval;

        if $z2 == 0 goto label5;

        $r10 = (org.apache.poi.ss.formula.eval.StringEval) $r1;

        $r11 = virtualinvoke $r10.<org.apache.poi.ss.formula.eval.StringEval: java.lang.String getStringValue()>();

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i3 >= 1 goto label3;

        $r14 = staticinvoke <org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.EvaluationException invalidValue()>();

        throw $r14;

     label3:
        $r12 = staticinvoke <org.apache.poi.ss.formula.functions.Countif: java.lang.Boolean parseBoolean(java.lang.String)>($r11);

        if $r12 == null goto label4;

        $z4 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        return $z4;

     label4:
        $r13 = staticinvoke <org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.EvaluationException invalidValue()>();

        throw $r13;

     label5:
        $z3 = $r1 instanceof org.apache.poi.ss.formula.eval.NumericValueEval;

        if $z3 == 0 goto label8;

        r16 = (org.apache.poi.ss.formula.eval.NumericValueEval) $r1;

        $d0 = interfaceinvoke r16.<org.apache.poi.ss.formula.eval.NumericValueEval: double getNumberValue()>();

        $b2 = 0.0 cmpl $d0;

        if $b2 == 0 goto label6;

        $z6 = 1;

        goto label7;

     label6:
        $z6 = 0;

     label7:
        return $z6;

     label8:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected eval type (");

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r2;
    }

    public static int lookupIndexOfValue(org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.functions.LookupUtils$ValueVector, boolean) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector r2;
        org.apache.poi.ss.formula.eval.ErrorEval $r4;
        org.apache.poi.ss.formula.eval.ValueEval r0;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer $r1;
        int i0;
        org.apache.poi.ss.formula.eval.EvaluationException $r3;
        boolean z0;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        r2 := @parameter1: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer createLookupComparer(org.apache.poi.ss.formula.eval.ValueEval,boolean,boolean)>(r0, z0, 0);

        if z0 == 0 goto label1;

        i0 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: int performBinarySearch(org.apache.poi.ss.formula.functions.LookupUtils$ValueVector,org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer)>(r2, $r1);

        goto label2;

     label1:
        i0 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: int lookupIndexOfExactValue(org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer,org.apache.poi.ss.formula.functions.LookupUtils$ValueVector)>($r1, r2);

     label2:
        if i0 >= 0 goto label3;

        $r3 = new org.apache.poi.ss.formula.eval.EvaluationException;

        $r4 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval NA>;

        specialinvoke $r3.<org.apache.poi.ss.formula.eval.EvaluationException: void <init>(org.apache.poi.ss.formula.eval.ErrorEval)>($r4);

        throw $r3;

     label3:
        return i0;
    }

    private static int lookupIndexOfExactValue(org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer, org.apache.poi.ss.formula.functions.LookupUtils$ValueVector)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector r0;
        org.apache.poi.ss.formula.functions.LookupUtils$CompareResult $r3;
        org.apache.poi.ss.formula.eval.ValueEval $r2;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer r1;
        int $i0, i1, $i3;
        boolean $z0;

        r1 := @parameter0: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer;

        r0 := @parameter1: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector;

        $i0 = interfaceinvoke r0.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: int getSize()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r2 = interfaceinvoke r0.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: org.apache.poi.ss.formula.eval.ValueEval getItem(int)>(i1);

        $r3 = interfaceinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer: org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareTo(org.apache.poi.ss.formula.eval.ValueEval)>($r2);

        $z0 = virtualinvoke $r3.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isEqual()>();

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    private static int performBinarySearch(org.apache.poi.ss.formula.functions.LookupUtils$ValueVector, org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes $r0;
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector r1;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0, $z1, $z2;
        org.apache.poi.ss.formula.functions.LookupUtils$CompareResult $r4, r6;
        org.apache.poi.ss.formula.eval.ValueEval $r3, $r5;

        r1 := @parameter0: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector;

        r2 := @parameter1: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer;

        $r0 = new org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes;

        $i0 = interfaceinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: int getSize()>();

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: void <init>(int)>($i0);

     label1:
        $i5 = virtualinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: int getMidIx()>();

        i6 = $i5;

        if $i5 >= 0 goto label2;

        $i4 = virtualinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: int getLowIx()>();

        return $i4;

     label2:
        $r3 = interfaceinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: org.apache.poi.ss.formula.eval.ValueEval getItem(int)>($i5);

        $r4 = interfaceinvoke r2.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer: org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareTo(org.apache.poi.ss.formula.eval.ValueEval)>($r3);

        r6 = $r4;

        $z0 = virtualinvoke $r4.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isTypeMismatch()>();

        if $z0 == 0 goto label4;

        $i3 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: int handleMidValueTypeMismatch(org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer,org.apache.poi.ss.formula.functions.LookupUtils$ValueVector,org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes,int)>(r2, r1, $r0, $i5);

        if $i3 >= 0 goto label3;

        goto label1;

     label3:
        i6 = $i3;

        $r5 = interfaceinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: org.apache.poi.ss.formula.eval.ValueEval getItem(int)>($i3);

        r6 = interfaceinvoke r2.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer: org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareTo(org.apache.poi.ss.formula.eval.ValueEval)>($r5);

     label4:
        $z1 = virtualinvoke r6.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isEqual()>();

        if $z1 == 0 goto label5;

        $i1 = virtualinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: int getHighIx()>();

        $i2 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: int findLastIndexInRunOfEqualValues(org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer,org.apache.poi.ss.formula.functions.LookupUtils$ValueVector,int,int)>(r2, r1, i6, $i1);

        return $i2;

     label5:
        $z2 = virtualinvoke r6.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isLessThan()>();

        virtualinvoke $r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: void narrowSearch(int,boolean)>(i6, $z2);

        goto label1;
    }

    private static int handleMidValueTypeMismatch(org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer, org.apache.poi.ss.formula.functions.LookupUtils$ValueVector, org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes, int)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes r0;
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector r2;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer r1;
        int i0, $i1, $i2, i3, $i5, $i7, $i9;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.ss.formula.functions.LookupUtils$CompareResult $r4;
        org.apache.poi.ss.formula.eval.ValueEval $r3;

        r1 := @parameter0: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer;

        r2 := @parameter1: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector;

        r0 := @parameter2: org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes;

        i0 := @parameter3: int;

        i3 = i0;

        $i1 = virtualinvoke r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: int getHighIx()>();

     label1:
        i3 = i3 + 1;

        if i3 != $i1 goto label2;

        virtualinvoke r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: void narrowSearch(int,boolean)>(i0, 1);

        $i5 = (int) -1;

        return $i5;

     label2:
        $r3 = interfaceinvoke r2.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: org.apache.poi.ss.formula.eval.ValueEval getItem(int)>(i3);

        $r4 = interfaceinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer: org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareTo(org.apache.poi.ss.formula.eval.ValueEval)>($r3);

        $z0 = virtualinvoke $r4.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isLessThan()>();

        if $z0 == 0 goto label3;

        $i2 = $i1 - 1;

        if i3 != $i2 goto label3;

        virtualinvoke r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: void narrowSearch(int,boolean)>(i0, 1);

        $i7 = (int) -1;

        return $i7;

     label3:
        $z1 = virtualinvoke $r4.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isTypeMismatch()>();

        if $z1 == 0 goto label4;

        goto label1;

     label4:
        $z2 = virtualinvoke $r4.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isEqual()>();

        if $z2 == 0 goto label5;

        return i3;

     label5:
        $z3 = virtualinvoke $r4.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isLessThan()>();

        virtualinvoke r0.<org.apache.poi.ss.formula.functions.LookupUtils$BinarySearchIndexes: void narrowSearch(int,boolean)>(i3, $z3);

        $i9 = (int) -1;

        return $i9;
    }

    private static int findLastIndexInRunOfEqualValues(org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer, org.apache.poi.ss.formula.functions.LookupUtils$ValueVector, int, int)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector r1;
        org.apache.poi.ss.formula.functions.LookupUtils$CompareResult $r3;
        org.apache.poi.ss.formula.eval.ValueEval $r2;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer r0;
        int i0, i1, $i2, $i3, i4;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer;

        r1 := @parameter1: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i4 = i0 + 1;

     label1:
        if i4 >= i1 goto label3;

        $r2 = interfaceinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: org.apache.poi.ss.formula.eval.ValueEval getItem(int)>(i4);

        $r3 = interfaceinvoke r0.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer: org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareTo(org.apache.poi.ss.formula.eval.ValueEval)>($r2);

        $z0 = virtualinvoke $r3.<org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: boolean isEqual()>();

        if $z0 != 0 goto label2;

        $i3 = i4 - 1;

        return $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i2 = i1 - 1;

        return $i2;
    }

    public static org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer createLookupComparer(org.apache.poi.ss.formula.eval.ValueEval, boolean, boolean)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$StringLookupComparer $r14;
        org.apache.poi.ss.formula.eval.BlankEval $r1;
        java.lang.String $r6, $r9;
        boolean $z0, $z1, $z2, z3, z4;
        org.apache.poi.ss.formula.eval.BoolEval $r11;
        org.apache.poi.ss.formula.functions.LookupUtils$NumberLookupComparer $r12, $r16;
        org.apache.poi.ss.formula.eval.StringEval $r15;
        java.lang.IllegalArgumentException $r2;
        org.apache.poi.ss.formula.eval.ValueEval r0;
        org.apache.poi.ss.formula.eval.NumberEval $r13, $r17;
        org.apache.poi.ss.formula.functions.LookupUtils$BooleanLookupComparer $r10;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        java.lang.Class $r5;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        z3 := @parameter1: boolean;

        z4 := @parameter2: boolean;

        $r1 = <org.apache.poi.ss.formula.eval.BlankEval: org.apache.poi.ss.formula.eval.BlankEval instance>;

        if r0 != $r1 goto label1;

        $r16 = new org.apache.poi.ss.formula.functions.LookupUtils$NumberLookupComparer;

        $r17 = <org.apache.poi.ss.formula.eval.NumberEval: org.apache.poi.ss.formula.eval.NumberEval ZERO>;

        specialinvoke $r16.<org.apache.poi.ss.formula.functions.LookupUtils$NumberLookupComparer: void <init>(org.apache.poi.ss.formula.eval.NumberEval)>($r17);

        return $r16;

     label1:
        $z0 = r0 instanceof org.apache.poi.ss.formula.eval.StringEval;

        if $z0 == 0 goto label2;

        $r14 = new org.apache.poi.ss.formula.functions.LookupUtils$StringLookupComparer;

        $r15 = (org.apache.poi.ss.formula.eval.StringEval) r0;

        specialinvoke $r14.<org.apache.poi.ss.formula.functions.LookupUtils$StringLookupComparer: void <init>(org.apache.poi.ss.formula.eval.StringEval,boolean,boolean)>($r15, z3, z4);

        return $r14;

     label2:
        $z1 = r0 instanceof org.apache.poi.ss.formula.eval.NumberEval;

        if $z1 == 0 goto label3;

        $r12 = new org.apache.poi.ss.formula.functions.LookupUtils$NumberLookupComparer;

        $r13 = (org.apache.poi.ss.formula.eval.NumberEval) r0;

        specialinvoke $r12.<org.apache.poi.ss.formula.functions.LookupUtils$NumberLookupComparer: void <init>(org.apache.poi.ss.formula.eval.NumberEval)>($r13);

        return $r12;

     label3:
        $z2 = r0 instanceof org.apache.poi.ss.formula.eval.BoolEval;

        if $z2 == 0 goto label4;

        $r10 = new org.apache.poi.ss.formula.functions.LookupUtils$BooleanLookupComparer;

        $r11 = (org.apache.poi.ss.formula.eval.BoolEval) r0;

        specialinvoke $r10.<org.apache.poi.ss.formula.functions.LookupUtils$BooleanLookupComparer: void <init>(org.apache.poi.ss.formula.eval.BoolEval)>($r11);

        return $r10;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad lookup value type (");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r2;
    }
}
