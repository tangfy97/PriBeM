public class org.codehaus.jackson.map.introspect.POJOPropertiesCollector extends java.lang.Object
{
    protected final org.codehaus.jackson.map.MapperConfig _config;
    protected final boolean _forSerialization;
    protected final org.codehaus.jackson.type.JavaType _type;
    protected final org.codehaus.jackson.map.introspect.AnnotatedClass _classDef;
    protected final org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker;
    protected final org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector;
    protected final java.util.LinkedHashMap _properties;
    protected java.util.LinkedList _creatorProperties;
    protected java.util.LinkedList _anyGetters;
    protected java.util.LinkedList _anySetters;
    protected java.util.LinkedList _jsonValueGetters;
    protected java.util.Set _ignoredPropertyNames;
    protected java.util.Set _ignoredPropertyNamesForDeser;
    protected java.util.LinkedHashMap _injectables;

    protected void <init>(org.codehaus.jackson.map.MapperConfig, boolean, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.AnnotatedClass)
    {
        java.util.LinkedHashMap $r1;
        org.codehaus.jackson.map.introspect.AnnotatedClass r4;
        org.codehaus.jackson.type.JavaType r3;
        boolean z0, $z1;
        org.codehaus.jackson.map.MapperConfig r2, $r6, $r10, $r12;
        org.codehaus.jackson.map.AnnotationIntrospector $r5, $r7, $r13;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r8, $r9, $r11;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r2 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        z0 := @parameter1: boolean;

        r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        r4 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedClass;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties> = $r1;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties> = null;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters> = null;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters> = null;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters> = null;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config> = r2;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: boolean _forSerialization> = z0;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.type.JavaType _type> = r3;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef> = r4;

        $z1 = virtualinvoke r2.<org.codehaus.jackson.map.MapperConfig: boolean isAnnotationProcessingEnabled()>();

        if $z1 == 0 goto label1;

        $r12 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        goto label2;

     label1:
        $r13 = null;

     label2:
        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector> = $r13;

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector>;

        if $r5 != null goto label3;

        $r10 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker> = $r11;

        goto label4;

     label3:
        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector>;

        $r6 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r8 = virtualinvoke $r6.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        $r9 = virtualinvoke $r7.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>(r4, $r8);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker> = $r9;

     label4:
        return;
    }

    public org.codehaus.jackson.map.MapperConfig getConfig()
    {
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        org.codehaus.jackson.map.MapperConfig $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        return $r1;
    }

    public org.codehaus.jackson.type.JavaType getType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.type.JavaType _type>;

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedClass getClassDef()
    {
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        return $r1;
    }

    public org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()
    {
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector>;

        return $r1;
    }

    public java.util.List getProperties()
    {
        java.util.LinkedHashMap $r2;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r1;
        java.util.Collection $r3;
        java.util.ArrayList $r0;

        r1 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.util.Collection values()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r0;
    }

    public java.util.Map getInjectables()
    {
        java.util.LinkedHashMap $r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _injectables>;

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod getJsonValueMethod()
    {
        int $i0;
        java.lang.String $r16;
        java.util.LinkedList $r1, $r2, $r3, $r8, $r12;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r5;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r4, $r9, $r13;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r14, $r15;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters>;

        if $r1 == null goto label2;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 <= 1 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple value properties defined (");

        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters>;

        $r9 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object get(int)>(0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r12 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters>;

        $r13 = virtualinvoke $r12.<java.util.LinkedList: java.lang.Object get(int)>(1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void reportProblem(java.lang.String)>($r16);

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object get(int)>(0);

        $r5 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r4;

        return $r5;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod getAnyGetterMethod()
    {
        int $i0;
        java.lang.String $r16;
        java.util.LinkedList $r1, $r2, $r3, $r8, $r12;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r5;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r4, $r9, $r13;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r14, $r15;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters>;

        if $r1 == null goto label2;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 <= 1 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple \'any-getters\' defined (");

        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters>;

        $r9 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object get(int)>(0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r12 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters>;

        $r13 = virtualinvoke $r12.<java.util.LinkedList: java.lang.Object get(int)>(1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void reportProblem(java.lang.String)>($r16);

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r5 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r4;

        return $r5;

     label2:
        return null;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod getAnySetterMethod()
    {
        int $i0;
        java.lang.String $r16;
        java.util.LinkedList $r1, $r2, $r3, $r8, $r12;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r5;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r4, $r9, $r13;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r14, $r15;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters>;

        if $r1 == null goto label2;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 <= 1 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple \'any-setters\' defined (");

        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters>;

        $r9 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object get(int)>(0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r12 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters>;

        $r13 = virtualinvoke $r12.<java.util.LinkedList: java.lang.Object get(int)>(1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void reportProblem(java.lang.String)>($r16);

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r5 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r4;

        return $r5;

     label2:
        return null;
    }

    public java.util.Set getIgnoredPropertyNames()
    {
        java.util.Set $r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set _ignoredPropertyNames>;

        return $r1;
    }

    public java.util.Set getIgnoredPropertyNamesForDeser()
    {
        java.util.Set $r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set _ignoredPropertyNamesForDeser>;

        return $r1;
    }

    protected java.util.Map getPropertyMap()
    {
        java.util.LinkedHashMap $r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.POJOPropertiesCollector collect()
    {
        org.codehaus.jackson.map.PropertyNamingStrategy $r3;
        java.util.LinkedHashMap $r1, $r4, $r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r6, $r9;
        java.util.Collection $r5, $r8;
        org.codehaus.jackson.map.MapperConfig $r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r12, r13;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r10, $r11;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        virtualinvoke $r1.<java.util.LinkedHashMap: void clear()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _addFields()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _addMethods()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _addCreators()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _addInjectables()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _removeUnwantedProperties()>();

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _renameProperties()>();

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy()>();

        if $r3 == null goto label1;

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _renameUsing(org.codehaus.jackson.map.PropertyNamingStrategy)>($r3);

     label1:
        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r5 = virtualinvoke $r4.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r11;

        virtualinvoke r12.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void trimByVisibility()>();

        goto label2;

     label3:
        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r8 = virtualinvoke $r7.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r10;

        $z1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: boolean _forSerialization>;

        virtualinvoke r13.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void mergeAnnotations(boolean)>($z1);

        goto label4;

     label5:
        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _sortProperties()>();

        return r0;
    }

    protected void _sortProperties()
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r3, $r5;
        boolean $z0, $z1, $z2, z3, $z4;
        java.util.Collection $r9, $r21;
        org.codehaus.jackson.map.AnnotationIntrospector $r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r24, r33, r35, r36;
        java.lang.String[] $r6;
        java.util.LinkedHashMap $r7, $r8, $r11, $r13, $r14, $r20, $r31;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Boolean $r4;
        java.lang.String $r18, $r25, $r27, r34;
        java.util.LinkedList $r12, $r15, $r29;
        java.util.Iterator $r10, $r16, $r22;
        org.codehaus.jackson.map.MapperConfig $r1, $r30;
        java.util.AbstractMap r32;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.util.TreeMap $r28;
        java.lang.Object $r17, $r19, $r23, $r26;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r3);

        if $r4 != null goto label01;

        $r30 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        z3 = virtualinvoke $r30.<org.codehaus.jackson.map.MapperConfig: boolean shouldSortPropertiesAlphabetically()>();

        goto label02;

     label01:
        z3 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label02:
        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r5);

        if z3 != 0 goto label03;

        $r29 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties>;

        if $r29 != null goto label03;

        if $r6 != null goto label03;

        return;

     label03:
        $r31 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $i2 = virtualinvoke $r31.<java.util.LinkedHashMap: int size()>();

        if z3 == 0 goto label04;

        $r28 = new java.util.TreeMap;

        specialinvoke $r28.<java.util.TreeMap: void <init>()>();

        r32 = $r28;

        goto label05;

     label04:
        $r7 = new java.util.LinkedHashMap;

        $i0 = $i2 + $i2;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        r32 = $r7;

     label05:
        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r9 = virtualinvoke $r8.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r26 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r26;

        $r27 = virtualinvoke r33.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        interfaceinvoke r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r33);

        goto label06;

     label07:
        $r11 = new java.util.LinkedHashMap;

        $i1 = $i2 + $i2;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>(int)>($i1);

        if $r6 == null goto label13;

        i3 = lengthof $r6;

        i4 = 0;

     label08:
        if i4 >= i3 goto label13;

        r34 = $r6[i4];

        $r19 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);

        r35 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r19;

        if r35 != null goto label11;

        $r20 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r21 = virtualinvoke $r20.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r22 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r23;

        $r25 = virtualinvoke r24.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getInternalName()>();

        $z2 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z2 == 0 goto label10;

        r35 = r24;

        r34 = virtualinvoke r24.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        goto label11;

     label10:
        goto label09;

     label11:
        if r35 == null goto label12;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, r35);

     label12:
        i4 = i4 + 1;

        goto label08;

     label13:
        $r12 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties>;

        if $r12 == null goto label15;

        $r15 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties>;

        $r16 = virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r17;

        $r18 = virtualinvoke r36.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r36);

        goto label14;

     label15:
        interfaceinvoke $r11.<java.util.Map: void putAll(java.util.Map)>(r32);

        $r13 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        virtualinvoke $r13.<java.util.LinkedHashMap: void clear()>();

        $r14 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        virtualinvoke $r14.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r11);

        return;
    }

    protected void _addFields()
    {
        java.lang.Iterable $r3;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r2;
        java.lang.String $r7, r9, $r10;
        boolean $z0, $z1, $z2, $z3, z5, $z6, $z7, $z8;
        java.util.Iterator $r4;
        org.codehaus.jackson.map.AnnotationIntrospector r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder $r11;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r8;
        java.lang.Object $r5;
        org.codehaus.jackson.map.introspect.AnnotatedField r6;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector>;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable fields()>();

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r5;

        $r7 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getName()>();

        if r1 != null goto label02;

        r9 = null;

        goto label04;

     label02:
        $z1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: boolean _forSerialization>;

        if $z1 == 0 goto label03;

        r9 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>(r6);

        goto label04;

     label03:
        r9 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>(r6);

     label04:
        $r10 = "";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z3 == 0 goto label05;

        r9 = $r7;

     label05:
        if r9 == null goto label06;

        $z8 = 1;

        $z7 = 1;

        goto label07;

     label06:
        $z8 = 0;

        $z7 = 0;

     label07:
        z5 = $z8;

        if $z7 != 0 goto label08;

        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        z5 = interfaceinvoke $r8.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField)>(r6);

     label08:
        if r1 == null goto label09;

        $z2 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r6);

        if $z2 == 0 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String)>($r7);

        virtualinvoke $r11.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void addField(org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String,boolean,boolean)>(r6, r9, z5, $z6);

        goto label01;

     label11:
        return;
    }

    protected void _addCreators()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r22;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r2, $r5;
        int $i0, $i1, i2, i3;
        java.lang.String $r11, $r18;
        java.util.LinkedList $r9, $r13, $r14, $r16, $r20, $r21;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r7;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r23;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r10, $r17;
        org.codehaus.jackson.map.AnnotationIntrospector r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder $r12, $r19;
        java.util.List $r3, $r6;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r8, $r15;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector>;

        if r1 != null goto label01;

        return;

     label01:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.util.List getConstructors()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.codehaus.jackson.map.introspect.AnnotatedConstructor) $r15;

        $r16 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties>;

        if $r16 != null goto label03;

        $r21 = new java.util.LinkedList;

        specialinvoke $r21.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties> = $r21;

     label03:
        i2 = 0;

        $i1 = virtualinvoke r22.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: int getParameterCount()>();

     label04:
        if i2 >= $i1 goto label06;

        $r17 = virtualinvoke r22.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(i2);

        $r18 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r17);

        if $r18 == null goto label05;

        $r19 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String)>($r18);

        virtualinvoke $r19.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void addCtor(org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String,boolean,boolean)>($r17, $r18, 1, 0);

        $r20 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties>;

        virtualinvoke $r20.<java.util.LinkedList: boolean add(java.lang.Object)>($r19);

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        goto label02;

     label07:
        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.util.List getStaticMethods()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r8;

        $r9 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties>;

        if $r9 != null goto label09;

        $r14 = new java.util.LinkedList;

        specialinvoke $r14.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties> = $r14;

     label09:
        i3 = 0;

        $i0 = virtualinvoke r23.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

     label10:
        if i3 >= $i0 goto label12;

        $r10 = virtualinvoke r23.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(i3);

        $r11 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r10);

        if $r11 == null goto label11;

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String)>($r11);

        virtualinvoke $r12.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void addCtor(org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String,boolean,boolean)>($r10, $r11, 1, 0);

        $r13 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _creatorProperties>;

        virtualinvoke $r13.<java.util.LinkedList: boolean add(java.lang.Object)>($r12);

     label11:
        i3 = i3 + 1;

        goto label10;

     label12:
        goto label08;

     label13:
        return;
    }

    protected void _addMethods()
    {
        org.codehaus.jackson.map.introspect.AnnotatedClass $r2;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, $z7;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r6;
        org.codehaus.jackson.map.AnnotationIntrospector r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder $r11, $r15;
        java.lang.Iterable $r3;
        int $i0, $i1, $i2;
        java.lang.String $r10, $r12, $r14, $r16, $r17, $r19, $r20, $r28, r29, r30, $r31, r32, r33;
        java.util.LinkedList $r7, $r8, $r9, $r22, $r23, $r24, $r25, $r26, $r27;
        java.util.Iterator $r4;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r13, $r18, $r21;
        java.lang.Object $r5;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector>;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable memberMethods()>();

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label29;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r5;

        $i0 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

        if $i0 != 0 goto label16;

        if r1 == null goto label05;

        $z1 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        if $z1 == 0 goto label03;

        $r25 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters>;

        if $r25 != null goto label02;

        $r27 = new java.util.LinkedList;

        specialinvoke $r27.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters> = $r27;

     label02:
        $r26 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anyGetters>;

        virtualinvoke $r26.<java.util.LinkedList: boolean add(java.lang.Object)>(r6);

        goto label01;

     label03:
        $z2 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        if $z2 == 0 goto label05;

        $r22 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters>;

        if $r22 != null goto label04;

        $r24 = new java.util.LinkedList;

        specialinvoke $r24.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters> = $r24;

     label04:
        $r23 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _jsonValueGetters>;

        virtualinvoke $r23.<java.util.LinkedList: boolean add(java.lang.Object)>(r6);

        goto label01;

     label05:
        if r1 != null goto label06;

        $r28 = null;

        goto label07;

     label06:
        $r28 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

     label07:
        r29 = $r28;

        if $r28 != null goto label10;

        $r16 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r17 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String okNameForRegularGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>(r6, $r16);

        r30 = $r17;

        if $r17 != null goto label09;

        $r19 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r20 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>(r6, $r19);

        r30 = $r20;

        if $r20 != null goto label08;

        goto label01;

     label08:
        $r21 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        z4 = interfaceinvoke $r21.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        goto label13;

     label09:
        $r18 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        z4 = interfaceinvoke $r18.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        goto label13;

     label10:
        $r14 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String okNameForGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        r30 = $r14;

        if $r14 != null goto label11;

        r30 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

     label11:
        $i2 = virtualinvoke r29.<java.lang.String: int length()>();

        if $i2 != 0 goto label12;

        r29 = r30;

     label12:
        z4 = 1;

     label13:
        if r1 != null goto label14;

        $z5 = 0;

        goto label15;

     label14:
        $z5 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r6);

     label15:
        $r15 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String)>(r30);

        virtualinvoke $r15.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void addGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean)>(r6, r29, z4, $z5);

        goto label28;

     label16:
        if $i0 != 1 goto label26;

        if r1 != null goto label17;

        $r31 = null;

        goto label18;

     label17:
        $r31 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

     label18:
        r32 = $r31;

        if $r31 != null goto label20;

        $r12 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        r33 = $r12;

        if $r12 != null goto label19;

        goto label01;

     label19:
        $r13 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        z6 = interfaceinvoke $r13.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        goto label23;

     label20:
        $r10 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        r33 = $r10;

        if $r10 != null goto label21;

        r33 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

     label21:
        $i1 = virtualinvoke r32.<java.lang.String: int length()>();

        if $i1 != 0 goto label22;

        r32 = r33;

     label22:
        z6 = 1;

     label23:
        if r1 != null goto label24;

        $z7 = 0;

        goto label25;

     label24:
        $z7 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r6);

     label25:
        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String)>(r33);

        virtualinvoke $r11.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void addSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean)>(r6, r32, z6, $z7);

        goto label28;

     label26:
        if $i0 != 2 goto label28;

        if r1 == null goto label28;

        $z0 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r6);

        if $z0 == 0 goto label28;

        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters>;

        if $r7 != null goto label27;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters> = $r9;

     label27:
        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedList _anySetters>;

        virtualinvoke $r8.<java.util.LinkedList: boolean add(java.lang.Object)>(r6);

     label28:
        goto label01;

     label29:
        return;
    }

    protected void _addInjectables()
    {
        java.lang.Iterable $r3, $r6;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r2, $r5;
        int $i0;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r7;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r13;
        org.codehaus.jackson.map.AnnotationIntrospector r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r8, $r9, $r10, $r11;
        org.codehaus.jackson.map.introspect.AnnotatedField r12;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable fields()>();

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r10;

        $r11 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r12);

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _doAddInjectable(java.lang.Object,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r11, r12);

        goto label2;

     label3:
        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable memberMethods()>();

        $r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r8;

        $i0 = virtualinvoke r13.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

        if $i0 == 1 goto label5;

        goto label4;

     label5:
        $r9 = virtualinvoke r1.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r13);

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _doAddInjectable(java.lang.Object,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r9, r13);

        goto label4;

     label6:
        return;
    }

    protected void _doAddInjectable(java.lang.Object, org.codehaus.jackson.map.introspect.AnnotatedMember)
    {
        java.util.LinkedHashMap $r2, $r4, $r16;
        org.codehaus.jackson.map.introspect.AnnotatedMember r3, $r17;
        java.lang.String $r10, $r15, $r18;
        java.lang.IllegalArgumentException $r7;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r1;
        java.lang.Object r0, $r5;
        java.lang.Class $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r14;

        r1 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMember;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _injectables>;

        if $r2 != null goto label2;

        $r16 = new java.util.LinkedHashMap;

        specialinvoke $r16.<java.util.LinkedHashMap: void <init>()>();

        r1.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _injectables> = $r16;

     label2:
        $r4 = r1.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _injectables>;

        $r5 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);

        $r17 = (org.codehaus.jackson.map.introspect.AnnotatedMember) $r5;

        if $r17 == null goto label5;

        if r0 != null goto label3;

        $r18 = "[null]";

        goto label4;

     label3:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate injectable value with id \'");

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (of type ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r7;

     label5:
        return;
    }

    protected void _removeUnwantedProperties()
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r7;
        java.util.LinkedHashMap $r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r6;

        $z0 = virtualinvoke r7.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean anyVisible()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        $z1 = virtualinvoke r7.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean anyIgnorals()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: void _addIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder)>(r7);

        $z2 = virtualinvoke r7.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean anyExplicitNames()>();

        if $z2 != 0 goto label3;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label1;

     label3:
        virtualinvoke r7.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void removeIgnored()>();

     label4:
        virtualinvoke r7.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void removeNonVisible()>();

        goto label1;

     label5:
        return;
    }

    private void _addIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder)
    {
        java.util.Set $r3, $r4, $r5, $r6;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $z0 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: boolean _forSerialization>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set _ignoredPropertyNames>;

        $r4 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set addToSet(java.util.Set,java.lang.String)>($r3, $r2);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set _ignoredPropertyNames> = $r4;

        $z1 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean anyDeserializeIgnorals()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set _ignoredPropertyNamesForDeser>;

        $r6 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set addToSet(java.util.Set,java.lang.String)>($r5, $r2);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.Set _ignoredPropertyNamesForDeser> = $r6;

     label2:
        return;
    }

    protected void _renameProperties()
    {
        java.util.LinkedHashMap $r1, $r7, $r10;
        java.lang.String $r6, $r13;
        java.util.LinkedList $r15, r16;
        boolean $z0, $z1;
        java.util.Map$Entry r17;
        java.util.Iterator $r3, $r4;
        java.util.Set $r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r9, $r14, r18, r19;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r5, $r8, $r11, $r12;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        r16 = null;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        r18 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r12;

        $r13 = virtualinvoke r18.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String findNewName()>();

        if $r13 == null goto label3;

        if r16 != null goto label2;

        $r15 = new java.util.LinkedList;

        specialinvoke $r15.<java.util.LinkedList: void <init>()>();

        r16 = $r15;

     label2:
        $r14 = virtualinvoke r18.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder withName(java.lang.String)>($r13);

        virtualinvoke r16.<java.util.LinkedList: boolean add(java.lang.Object)>($r14);

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

     label3:
        goto label1;

     label4:
        if r16 == null goto label8;

        $r4 = virtualinvoke r16.<java.util.LinkedList: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r5;

        $r6 = virtualinvoke r19.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r8 = virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r6);

        r9 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r8;

        if r9 != null goto label6;

        $r10 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r19);

        goto label7;

     label6:
        virtualinvoke r9.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void addAll(org.codehaus.jackson.map.introspect.POJOPropertyBuilder)>(r19);

     label7:
        goto label5;

     label8:
        return;
    }

    protected void _renameUsing(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder[] $r4, r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r2;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r15, $r21, $r25;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder $r12, r26;
        java.lang.Object[] $r5;
        org.codehaus.jackson.map.PropertyNamingStrategy r13;
        java.util.LinkedHashMap $r1, $r3, $r7, $r9, $r11;
        int $i0, i1, i2;
        java.lang.String $r8, r27, $r28;
        org.codehaus.jackson.map.MapperConfig $r14, $r16, $r18, $r20, $r22, $r24;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r19;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r10;
        org.codehaus.jackson.map.introspect.AnnotatedField $r17, $r23;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r13 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $i0 = virtualinvoke $r3.<java.util.LinkedHashMap: int size()>();

        $r4 = newarray (org.codehaus.jackson.map.introspect.POJOPropertyBuilder)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r6 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder[]) $r5;

        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        virtualinvoke $r7.<java.util.LinkedHashMap: void clear()>();

        i1 = lengthof r6;

        i2 = 0;

     label01:
        if i2 >= i1 goto label11;

        r26 = r6[i2];

        $r8 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        r27 = $r8;

        $z0 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: boolean _forSerialization>;

        if $z0 == 0 goto label03;

        $z5 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean hasGetter()>();

        if $z5 == 0 goto label02;

        $r24 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r25 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter()>();

        r27 = virtualinvoke r13.<org.codehaus.jackson.map.PropertyNamingStrategy: java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r24, $r25, $r8);

        goto label07;

     label02:
        $z6 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean hasField()>();

        if $z6 == 0 goto label07;

        $r22 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r23 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedField getField()>();

        r27 = virtualinvoke r13.<org.codehaus.jackson.map.PropertyNamingStrategy: java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String)>($r22, $r23, $r8);

        goto label07;

     label03:
        $z1 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean hasSetter()>();

        if $z1 == 0 goto label04;

        $r20 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r21 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter()>();

        r27 = virtualinvoke r13.<org.codehaus.jackson.map.PropertyNamingStrategy: java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r20, $r21, $r8);

        goto label07;

     label04:
        $z2 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean hasConstructorParameter()>();

        if $z2 == 0 goto label05;

        $r18 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r19 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter()>();

        r27 = virtualinvoke r13.<org.codehaus.jackson.map.PropertyNamingStrategy: java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String)>($r18, $r19, $r8);

        goto label07;

     label05:
        $z3 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean hasField()>();

        if $z3 == 0 goto label06;

        $r16 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r17 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedField getField()>();

        r27 = virtualinvoke r13.<org.codehaus.jackson.map.PropertyNamingStrategy: java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String)>($r16, $r17, $r8);

        goto label07;

     label06:
        $z4 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean hasGetter()>();

        if $z4 == 0 goto label07;

        $r14 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.MapperConfig _config>;

        $r15 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter()>();

        r27 = virtualinvoke r13.<org.codehaus.jackson.map.PropertyNamingStrategy: java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r14, $r15, $r8);

     label07:
        $r28 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $z7 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z7 != 0 goto label08;

        r26 = virtualinvoke r26.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder withName(java.lang.String)>(r27);

     label08:
        $r9 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r10 = virtualinvoke $r9.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r27);

        $r12 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r10;

        if $r12 != null goto label09;

        $r11 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        virtualinvoke $r11.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r27, r26);

        goto label10;

     label09:
        virtualinvoke $r12.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void addAll(org.codehaus.jackson.map.introspect.POJOPropertyBuilder)>(r26);

     label10:
        i2 = i2 + 1;

        goto label01;

     label11:
        return;
    }

    protected void reportProblem(java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r3;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r4;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8;
        java.lang.String r7, $r9;

        r3 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r7 := @parameter0: java.lang.String;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem with definition of ");

        $r4 = r3.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: org.codehaus.jackson.map.introspect.AnnotatedClass _classDef>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r0;
    }

    protected org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String)
    {
        java.util.LinkedHashMap $r2, $r5;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder $r4, r6;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) $r3;

        if r6 != null goto label1;

        $r4 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        specialinvoke $r4.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void <init>(java.lang.String)>(r1);

        r6 = $r4;

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertiesCollector: java.util.LinkedHashMap _properties>;

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return r6;
    }

    private java.util.Set addToSet(java.util.Set, java.lang.String)
    {
        java.util.HashSet $r1;
        org.codehaus.jackson.map.introspect.POJOPropertiesCollector r2;
        java.util.Set r3;
        java.lang.String r0;

        r2 := @this: org.codehaus.jackson.map.introspect.POJOPropertiesCollector;

        r3 := @parameter0: java.util.Set;

        r0 := @parameter1: java.lang.String;

        if r3 != null goto label1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r3 = $r1;

     label1:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r0);

        return r3;
    }
}
