public class com.hp.hpl.jena.sparql.syntax.ElementNotExists extends com.hp.hpl.jena.sparql.syntax.Element1
{

    public void <init>(com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.Element r1;
        com.hp.hpl.jena.sparql.syntax.ElementNotExists r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementNotExists;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.Element1: void <init>(com.hp.hpl.jena.sparql.syntax.Element)>(r1);

        return;
    }

    public int hashCode()
    {
        int $i0, $i1;
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        com.hp.hpl.jena.sparql.syntax.ElementNotExists r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementNotExists;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementNotExists: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.syntax.Element: int hashCode()>();

        $i1 = $i0 ^ 167;

        return $i1;
    }

    public boolean equalTo(com.hp.hpl.jena.sparql.syntax.Element, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r5;
        com.hp.hpl.jena.sparql.syntax.Element r0, $r3, $r4;
        com.hp.hpl.jena.sparql.syntax.ElementNotExists r1, r2;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.syntax.ElementNotExists;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        r5 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementNotExists;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r1 = (com.hp.hpl.jena.sparql.syntax.ElementNotExists) r0;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.ElementNotExists: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementNotExists: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        $z1 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.syntax.Element: boolean equalTo(com.hp.hpl.jena.sparql.syntax.Element,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r4, r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor r0;
        com.hp.hpl.jena.sparql.syntax.ElementNotExists r1;

        r1 := @this: com.hp.hpl.jena.sparql.syntax.ElementNotExists;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementNotExists)>(r1);

        return;
    }
}
