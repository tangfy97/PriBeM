public abstract class org.apache.xmlbeans.impl.values.JavaLongHolder extends org.apache.xmlbeans.impl.values.XmlObjectBase
{
    private long _value;
    private static final java.math.BigInteger _max;
    private static final java.math.BigInteger _min;

    public void <init>()
    {
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase: void <init>()>();

        return;
    }

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r0;
        org.apache.xmlbeans.impl.values.JavaLongHolder r1;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        $r0 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_LONG>;

        return $r0;
    }

    protected java.lang.String compute_text(org.apache.xmlbeans.impl.values.NamespaceManager)
    {
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;
        long $l0;
        org.apache.xmlbeans.impl.values.NamespaceManager r2;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        r2 := @parameter0: org.apache.xmlbeans.impl.values.NamespaceManager;

        $l0 = r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        return $r1;
    }

    protected void set_text(java.lang.String)
    {
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r3;
        java.lang.Object[] $r4;
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;
        long $l0;
        java.lang.String r1;
        java.lang.Exception $r2;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        r1 := @parameter0: java.lang.String;

     label1:
        $l0 = staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: long lexLong(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: void set_long(long)>($l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        specialinvoke $r3.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>(java.lang.String,java.lang.Object[])>("long", $r4);

        throw $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void set_nil()
    {
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value> = 0L;

        return;
    }

    public java.math.BigDecimal getBigDecimalValue()
    {
        java.math.BigDecimal $r1;
        long $l0;
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: void check_dated()>();

        $l0 = r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l0);

        return $r1;
    }

    public java.math.BigInteger getBigIntegerValue()
    {
        long $l0;
        java.math.BigInteger $r1;
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: void check_dated()>();

        $l0 = r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        return $r1;
    }

    public long getLongValue()
    {
        long $l0;
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: void check_dated()>();

        $l0 = r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        return $l0;
    }

    protected void set_BigDecimal(java.math.BigDecimal)
    {
        java.math.BigDecimal r1;
        java.math.BigInteger $r2;
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        r1 := @parameter0: java.math.BigDecimal;

        $r2 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: void set_BigInteger(java.math.BigInteger)>($r2);

        return;
    }

    protected void set_BigInteger(java.math.BigInteger)
    {
        long $l2;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r2;
        org.apache.xmlbeans.impl.values.JavaLongHolder r4;
        int $i0, $i1;
        java.math.BigInteger r0, $r1, $r3;

        r4 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        r0 := @parameter0: java.math.BigInteger;

        $r1 = <org.apache.xmlbeans.impl.values.JavaLongHolder: java.math.BigInteger _max>;

        $i0 = virtualinvoke r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r1);

        if $i0 > 0 goto label1;

        $r3 = <org.apache.xmlbeans.impl.values.JavaLongHolder: java.math.BigInteger _min>;

        $i1 = virtualinvoke r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        if $i1 >= 0 goto label2;

     label1:
        $r2 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r2.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r2;

     label2:
        $l2 = virtualinvoke r0.<java.math.BigInteger: long longValue()>();

        r4.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value> = $l2;

        return;
    }

    protected void set_long(long)
    {
        long l0;
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        l0 := @parameter0: long;

        r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value> = l0;

        return;
    }

    protected int compare_to(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4, $r5;
        long $l1, $l2, $l4, $l5;
        byte $b3, $b6, $b9;
        int $i0, $i7, $i8, $i10;
        org.apache.xmlbeans.XmlObject r0;
        org.apache.xmlbeans.SchemaType $r2;
        org.apache.xmlbeans.SimpleValue $r1;
        org.apache.xmlbeans.impl.values.JavaLongHolder r3;

        r3 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = (org.apache.xmlbeans.SimpleValue) r0;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.SchemaType instanceType()>();

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        if $i0 <= 64 goto label1;

        $i7 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: int compareTo(java.lang.Object)>(r3);

        $i8 = neg $i7;

        return $i8;

     label1:
        $l1 = r3.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $l2 = virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: long longValue()>();

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label2;

        $b9 = 0;

        goto label4;

     label2:
        $l4 = r3.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $l5 = virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: long longValue()>();

        $b6 = $l4 cmp $l5;

        $i10 = (int) $b6;

        if $i10 >= 0 goto label3;

        $b9 = -1;

        goto label4;

     label3:
        $b9 = 1;

     label4:
        return $b9;
    }

    protected boolean equal_to(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        long $l1, $l2;
        byte $b3;
        org.apache.xmlbeans.impl.values.JavaLongHolder r3;
        int $i0;
        org.apache.xmlbeans.XmlObject r0;
        org.apache.xmlbeans.SchemaType $r2;
        org.apache.xmlbeans.SimpleValue $r1;
        boolean $z0, $z1;

        r3 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = (org.apache.xmlbeans.SimpleValue) r0;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.SchemaType instanceType()>();

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        if $i0 <= 64 goto label1;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: boolean valueEquals(org.apache.xmlbeans.XmlObject)>(r3);

        return $z0;

     label1:
        $l1 = r3.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $l2 = virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: long longValue()>();

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected int value_hash_code()
    {
        org.apache.xmlbeans.impl.values.JavaLongHolder r0;
        int $i5;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaLongHolder;

        $l0 = r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $l1 = $l0 >> 32;

        $l3 = $l1 * 19L;

        $l2 = r0.<org.apache.xmlbeans.impl.values.JavaLongHolder: long _value>;

        $l4 = $l3 + $l2;

        $i5 = (int) $l4;

        return $i5;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r0, $r1;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L);

        <org.apache.xmlbeans.impl.values.JavaLongHolder: java.math.BigInteger _max> = $r0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-9223372036854775808L);

        <org.apache.xmlbeans.impl.values.JavaLongHolder: java.math.BigInteger _min> = $r1;

        return;
    }
}
