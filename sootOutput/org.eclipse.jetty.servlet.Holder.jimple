public class org.eclipse.jetty.servlet.Holder extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.util.component.Dumpable
{
    private final org.eclipse.jetty.servlet.Holder$Source _source;
    private static final org.eclipse.jetty.util.log.Logger LOG;
    protected transient java.lang.Class _class;
    protected final java.util.Map _initParams;
    protected java.lang.String _className;
    protected java.lang.String _displayName;
    protected boolean _extInstance;
    protected boolean _asyncSupported;
    protected java.lang.String _name;
    protected org.eclipse.jetty.servlet.ServletHandler _servletHandler;

    protected void <init>(org.eclipse.jetty.servlet.Holder$Source)
    {
        java.util.HashMap $r1;
        org.eclipse.jetty.servlet.Holder r0;
        org.eclipse.jetty.servlet.Holder$Source r2;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r2 := @parameter0: org.eclipse.jetty.servlet.Holder$Source;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(3);

        r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams> = $r1;

        r0.<org.eclipse.jetty.servlet.Holder: boolean _asyncSupported> = 1;

        r0.<org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.servlet.Holder$Source _source> = r2;

        return;
    }

    public org.eclipse.jetty.servlet.Holder$Source getSource()
    {
        org.eclipse.jetty.servlet.Holder r0;
        org.eclipse.jetty.servlet.Holder$Source $r1;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.servlet.Holder$Source _source>;

        return $r1;
    }

    public boolean isInstance()
    {
        org.eclipse.jetty.servlet.Holder r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $z0 = r0.<org.eclipse.jetty.servlet.Holder: boolean _extInstance>;

        return $z0;
    }

    public void doStart() throws java.lang.Exception
    {
        java.lang.Object[] $r6;
        java.lang.String $r3, $r9, $r13, $r15, $r16, $r20;
        boolean $z0, $z1;
        java.lang.Exception $r17;
        org.eclipse.jetty.servlet.Holder r0;
        javax.servlet.UnavailableException $r10, $r19;
        java.lang.Class $r1, $r2, $r4, $r7;
        java.lang.StringBuilder $r11, $r12, $r14;
        org.eclipse.jetty.util.log.Logger $r5, $r8, $r18;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class>;

        if $r1 != null goto label2;

        $r9 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _className>;

        if $r9 == null goto label1;

        $r16 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _className>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

     label1:
        $r10 = new javax.servlet.UnavailableException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class for Servlet or Filter for ");

        $r13 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _name>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label2:
        $r2 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class>;

        if $r2 != null goto label6;

     label3:
        $r3 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _className>;

        $r4 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>(class "Lorg/eclipse/jetty/servlet/Holder;", $r3);

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class> = $r4;

        $r5 = <org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r8 = <org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.util.log.Logger LOG>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class>;

        $r6[0] = $r7;

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Holding {}", $r6);

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        $r18 = <org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r18.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r17);

        $r19 = new javax.servlet.UnavailableException;

        $r20 = virtualinvoke $r17.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r19.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.servlet.Holder r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $z0 = r0.<org.eclipse.jetty.servlet.Holder: boolean _extInstance>;

        if $z0 != 0 goto label1;

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class> = null;

     label1:
        return;
    }

    public java.lang.String getClassName()
    {
        java.lang.String $r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _className>;

        return $r1;
    }

    public java.lang.Class getHeldClass()
    {
        java.lang.Class $r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class>;

        return $r1;
    }

    public java.lang.String getDisplayName()
    {
        java.lang.String $r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _displayName>;

        return $r1;
    }

    public java.lang.String getInitParameter(java.lang.String)
    {
        org.eclipse.jetty.servlet.Holder r0;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        java.lang.String r2, $r5;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.util.Enumeration getInitParameterNames()
    {
        java.util.List $r5;
        org.eclipse.jetty.servlet.Holder r0;
        java.util.Enumeration $r4, $r6;
        java.util.Map $r1, $r2;
        java.util.Set $r3;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        if $r1 != null goto label1;

        $r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r6 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r5);

        return $r6;

     label1:
        $r2 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r3);

        return $r4;
    }

    public java.util.Map getInitParameters()
    {
        org.eclipse.jetty.servlet.Holder r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _name>;

        return $r1;
    }

    public org.eclipse.jetty.servlet.ServletHandler getServletHandler()
    {
        org.eclipse.jetty.servlet.ServletHandler $r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        return $r1;
    }

    public void destroyInstance(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void setClassName(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _className> = r1;

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class> = null;

        return;
    }

    public void setHeldClass(java.lang.Class)
    {
        org.eclipse.jetty.servlet.Holder r0;
        int $i0;
        java.lang.Class r1;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        java.lang.String $r2, $r3, $r5, $r9;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.Class;

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.Class _class> = r1;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _className> = $r2;

        $r3 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _name>;

        if $r3 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _name> = $r9;

     label1:
        return;
    }

    public void setDisplayName(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _displayName> = r1;

        return;
    }

    public void setInitParameter(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.servlet.Holder r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void setInitParameters(java.util.Map)
    {
        org.eclipse.jetty.servlet.Holder r0;
        java.util.Map $r1, r2, $r3;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r2 := @parameter0: java.util.Map;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r3 = r0.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r2);

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _name> = r1;

        return;
    }

    public void setServletHandler(org.eclipse.jetty.servlet.ServletHandler)
    {
        org.eclipse.jetty.servlet.ServletHandler r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        r1 := @parameter0: org.eclipse.jetty.servlet.ServletHandler;

        r0.<org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.servlet.ServletHandler _servletHandler> = r1;

        return;
    }

    public void setAsyncSupported(boolean)
    {
        org.eclipse.jetty.servlet.Holder r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.servlet.Holder: boolean _asyncSupported> = z0;

        return;
    }

    public boolean isAsyncSupported()
    {
        org.eclipse.jetty.servlet.Holder r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $z0 = r0.<org.eclipse.jetty.servlet.Holder: boolean _asyncSupported>;

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: java.lang.String _name>;

        return $r1;
    }

    protected void illegalStateIfContextStarted()
    {
        java.lang.IllegalStateException $r6;
        org.eclipse.jetty.servlet.ServletHandler $r1, $r2;
        org.eclipse.jetty.server.handler.ContextHandler $r5;
        org.eclipse.jetty.servlet.Holder r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context r4;
        javax.servlet.ServletContext $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = r0.<org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        r4 = (org.eclipse.jetty.server.handler.ContextHandler$Context) $r3;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        $z0 = virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Started");

        throw $r6;

     label1:
        return;
    }

    public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        java.lang.Appendable r0, $r3, $r4, $r6, $r7, $r9;
        java.util.Set $r13;
        org.eclipse.jetty.servlet.Holder r1;
        java.util.Map $r12;
        java.util.Collection[] $r11;
        java.lang.String $r2, $r5, $r8, r10;

        r1 := @this: org.eclipse.jetty.servlet.Holder;

        r0 := @parameter0: java.lang.Appendable;

        r10 := @parameter1: java.lang.String;

        $r2 = r1.<org.eclipse.jetty.servlet.Holder: java.lang.String _name>;

        $r3 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        $r4 = interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("==");

        $r5 = r1.<org.eclipse.jetty.servlet.Holder: java.lang.String _className>;

        $r6 = interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r5);

        $r7 = interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(" - ");

        $r8 = staticinvoke <org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle)>(r1);

        $r9 = interfaceinvoke $r7.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r8);

        interfaceinvoke $r9.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\n");

        $r11 = newarray (java.util.Collection)[1];

        $r12 = r1.<org.eclipse.jetty.servlet.Holder: java.util.Map _initParams>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        $r11[0] = $r13;

        staticinvoke <org.eclipse.jetty.util.component.AggregateLifeCycle: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r0, r10, $r11);

        return;
    }

    public java.lang.String dump()
    {
        java.lang.String $r1;
        org.eclipse.jetty.servlet.Holder r0;

        r0 := @this: org.eclipse.jetty.servlet.Holder;

        $r1 = staticinvoke <org.eclipse.jetty.util.component.AggregateLifeCycle: java.lang.String dump(org.eclipse.jetty.util.component.Dumpable)>(r0);

        return $r1;
    }

    static org.eclipse.jetty.util.log.Logger access$000()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/servlet/Holder;");

        <org.eclipse.jetty.servlet.Holder: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
