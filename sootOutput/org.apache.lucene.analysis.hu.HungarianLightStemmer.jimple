public class org.apache.lucene.analysis.hu.HungarianLightStemmer extends java.lang.Object
{

    public void <init>()
    {
        org.apache.lucene.analysis.hu.HungarianLightStemmer r0;

        r0 := @this: org.apache.lucene.analysis.hu.HungarianLightStemmer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int stem(char[], int)
    {
        org.apache.lucene.analysis.hu.HungarianLightStemmer r0;
        char $c4;
        int $i0, $i1, $i2, $i3, i5, i6, $i7;
        char[] r1;

        r0 := @this: org.apache.lucene.analysis.hu.HungarianLightStemmer;

        r1 := @parameter0: char[];

        i5 := @parameter1: int;

        i6 = 0;

     label1:
        if i6 >= i5 goto label8;

        $c4 = r1[i6];

        $i7 = (int) $c4;

        lookupswitch($i7)
        {
            case 225: goto label2;
            case 233: goto label3;
            case 235: goto label3;
            case 237: goto label4;
            case 243: goto label5;
            case 245: goto label5;
            case 246: goto label5;
            case 250: goto label6;
            case 251: goto label6;
            case 252: goto label6;
            case 337: goto label5;
            case 361: goto label6;
            case 369: goto label6;
            default: goto label7;
        };

     label2:
        r1[i6] = 97;

        goto label7;

     label3:
        r1[i6] = 101;

        goto label7;

     label4:
        r1[i6] = 105;

        goto label7;

     label5:
        r1[i6] = 111;

        goto label7;

     label6:
        r1[i6] = 117;

     label7:
        i6 = i6 + 1;

        goto label1;

     label8:
        $i0 = specialinvoke r0.<org.apache.lucene.analysis.hu.HungarianLightStemmer: int removeCase(char[],int)>(r1, i5);

        $i1 = specialinvoke r0.<org.apache.lucene.analysis.hu.HungarianLightStemmer: int removePossessive(char[],int)>(r1, $i0);

        $i2 = specialinvoke r0.<org.apache.lucene.analysis.hu.HungarianLightStemmer: int removePlural(char[],int)>(r1, $i1);

        $i3 = specialinvoke r0.<org.apache.lucene.analysis.hu.HungarianLightStemmer: int normalize(char[],int)>(r1, $i2);

        return $i3;
    }

    private int removeCase(char[], int)
    {
        char[] r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        int i0, $i1, $i3, $i5, $i6, $i7, $i10, $i12, $i13, $i14, $i16, $i17, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        org.apache.lucene.analysis.hu.HungarianLightStemmer r1;
        char $c2, $c4, $c8, $c9, $c11, $c15, $c18, $c19;

        r1 := @this: org.apache.lucene.analysis.hu.HungarianLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 6 goto label01;

        $z32 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "kent");

        if $z32 == 0 goto label01;

        $i21 = i0 - 4;

        return $i21;

     label01:
        if i0 <= 5 goto label05;

        $z15 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "nak");

        if $z15 != 0 goto label02;

        $z16 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "nek");

        if $z16 != 0 goto label02;

        $z17 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "val");

        if $z17 != 0 goto label02;

        $z18 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "vel");

        if $z18 != 0 goto label02;

        $z19 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ert");

        if $z19 != 0 goto label02;

        $z20 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "rol");

        if $z20 != 0 goto label02;

        $z21 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ban");

        if $z21 != 0 goto label02;

        $z22 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ben");

        if $z22 != 0 goto label02;

        $z23 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "bol");

        if $z23 != 0 goto label02;

        $z24 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "nal");

        if $z24 != 0 goto label02;

        $z25 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "nel");

        if $z25 != 0 goto label02;

        $z26 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "hoz");

        if $z26 != 0 goto label02;

        $z27 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "hez");

        if $z27 != 0 goto label02;

        $z28 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "tol");

        if $z28 == 0 goto label03;

     label02:
        $i22 = i0 - 3;

        return $i22;

     label03:
        $z29 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "al");

        if $z29 != 0 goto label04;

        $z31 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "el");

        if $z31 == 0 goto label05;

     label04:
        $i14 = i0 - 3;

        $c15 = r0[$i14];

        $z30 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c15);

        if $z30 != 0 goto label05;

        $i16 = i0 - 3;

        $c19 = r0[$i16];

        $i17 = i0 - 4;

        $c18 = r0[$i17];

        $i24 = (int) $c19;

        $i25 = (int) $c18;

        if $i24 != $i25 goto label05;

        $i20 = i0 - 3;

        return $i20;

     label05:
        if i0 <= 4 goto label12;

        $z0 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "at");

        if $z0 != 0 goto label06;

        $z1 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "et");

        if $z1 != 0 goto label06;

        $z2 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ot");

        if $z2 != 0 goto label06;

        $z3 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "va");

        if $z3 != 0 goto label06;

        $z4 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ve");

        if $z4 != 0 goto label06;

        $z5 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ra");

        if $z5 != 0 goto label06;

        $z6 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "re");

        if $z6 != 0 goto label06;

        $z7 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ba");

        if $z7 != 0 goto label06;

        $z8 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "be");

        if $z8 != 0 goto label06;

        $z9 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ul");

        if $z9 != 0 goto label06;

        $z10 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ig");

        if $z10 == 0 goto label07;

     label06:
        $i23 = i0 - 2;

        return $i23;

     label07:
        $z11 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "on");

        if $z11 != 0 goto label08;

        $z14 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "en");

        if $z14 == 0 goto label09;

     label08:
        $i1 = i0 - 3;

        $c2 = r0[$i1];

        $z12 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c2);

        if $z12 != 0 goto label09;

        $i13 = i0 - 2;

        return $i13;

     label09:
        $i3 = i0 - 1;

        $c4 = r0[$i3];

        $i26 = (int) $c4;

        lookupswitch($i26)
        {
            case 97: goto label11;
            case 101: goto label11;
            case 110: goto label10;
            case 116: goto label10;
            default: goto label12;
        };

     label10:
        $i5 = i0 - 1;

        return $i5;

     label11:
        $i6 = i0 - 2;

        $c9 = r0[$i6];

        $i7 = i0 - 3;

        $c8 = r0[$i7];

        $i27 = (int) $c9;

        $i28 = (int) $c8;

        if $i27 != $i28 goto label12;

        $i10 = i0 - 2;

        $c11 = r0[$i10];

        $z13 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c11);

        if $z13 != 0 goto label12;

        $i12 = i0 - 2;

        return $i12;

     label12:
        return i0;
    }

    private int removePossessive(char[], int)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        int i0, $i1, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i14, $i16, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        org.apache.lucene.analysis.hu.HungarianLightStemmer r1;
        char $c2, $c5, $c8, $c11, $c13, $c15, $c17, $c21;
        char[] r0;

        r1 := @this: org.apache.lucene.analysis.hu.HungarianLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 6 goto label04;

        $i20 = i0 - 5;

        $c21 = r0[$i20];

        $z24 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c21);

        if $z24 != 0 goto label02;

        $z27 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "atok");

        if $z27 != 0 goto label01;

        $z28 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "otok");

        if $z28 != 0 goto label01;

        $z29 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "etek");

        if $z29 == 0 goto label02;

     label01:
        $i23 = i0 - 4;

        return $i23;

     label02:
        $z25 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "itek");

        if $z25 != 0 goto label03;

        $z26 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "itok");

        if $z26 == 0 goto label04;

     label03:
        $i22 = i0 - 4;

        return $i22;

     label04:
        if i0 <= 5 goto label08;

        $i14 = i0 - 4;

        $c15 = r0[$i14];

        $z17 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c15);

        if $z17 != 0 goto label06;

        $z21 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "unk");

        if $z21 != 0 goto label05;

        $z22 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "tok");

        if $z22 != 0 goto label05;

        $z23 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "tek");

        if $z23 == 0 goto label06;

     label05:
        $i24 = i0 - 3;

        return $i24;

     label06:
        $i16 = i0 - 4;

        $c17 = r0[$i16];

        $z18 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c17);

        if $z18 == 0 goto label07;

        $z20 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "juk");

        if $z20 == 0 goto label07;

        $i19 = i0 - 3;

        return $i19;

     label07:
        $z19 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ink");

        if $z19 == 0 goto label08;

        $i18 = i0 - 3;

        return $i18;

     label08:
        if i0 <= 4 goto label14;

        $i10 = i0 - 3;

        $c11 = r0[$i10];

        $z2 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c11);

        if $z2 != 0 goto label10;

        $z10 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "am");

        if $z10 != 0 goto label09;

        $z11 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "em");

        if $z11 != 0 goto label09;

        $z12 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "om");

        if $z12 != 0 goto label09;

        $z13 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ad");

        if $z13 != 0 goto label09;

        $z14 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ed");

        if $z14 != 0 goto label09;

        $z15 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "od");

        if $z15 != 0 goto label09;

        $z16 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "uk");

        if $z16 == 0 goto label10;

     label09:
        $i25 = i0 - 2;

        return $i25;

     label10:
        $i12 = i0 - 3;

        $c13 = r0[$i12];

        $z3 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c13);

        if $z3 == 0 goto label12;

        $z7 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "nk");

        if $z7 != 0 goto label11;

        $z8 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ja");

        if $z8 != 0 goto label11;

        $z9 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "je");

        if $z9 == 0 goto label12;

     label11:
        $i26 = i0 - 2;

        return $i26;

     label12:
        $z4 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "im");

        if $z4 != 0 goto label13;

        $z5 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "id");

        if $z5 != 0 goto label13;

        $z6 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,java.lang.String)>(r0, i0, "ik");

        if $z6 == 0 goto label14;

     label13:
        $i27 = i0 - 2;

        return $i27;

     label14:
        if i0 <= 3 goto label18;

        $i1 = i0 - 1;

        $c2 = r0[$i1];

        $i28 = (int) $c2;

        tableswitch($i28)
        {
            case 97: goto label15;
            case 98: goto label18;
            case 99: goto label18;
            case 100: goto label16;
            case 101: goto label15;
            case 102: goto label18;
            case 103: goto label18;
            case 104: goto label18;
            case 105: goto label17;
            case 106: goto label18;
            case 107: goto label18;
            case 108: goto label18;
            case 109: goto label16;
            default: goto label18;
        };

     label15:
        $i7 = i0 - 2;

        $c8 = r0[$i7];

        $z1 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c8);

        if $z1 != 0 goto label18;

        $i9 = i0 - 1;

        return $i9;

     label16:
        $i4 = i0 - 2;

        $c5 = r0[$i4];

        $z0 = specialinvoke r1.<org.apache.lucene.analysis.hu.HungarianLightStemmer: boolean isVowel(char)>($c5);

        if $z0 == 0 goto label18;

        $i6 = i0 - 1;

        return $i6;

     label17:
        $i3 = i0 - 1;

        return $i3;

     label18:
        return i0;
    }

    private int removePlural(char[], int)
    {
        org.apache.lucene.analysis.hu.HungarianLightStemmer r1;
        char $c2, $c4;
        int i0, $i1, $i3, $i5, $i6, $i7, $i8;
        char[] r0;

        r1 := @this: org.apache.lucene.analysis.hu.HungarianLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 3 goto label3;

        $i1 = i0 - 1;

        $c2 = r0[$i1];

        $i7 = (int) $c2;

        if $i7 != 107 goto label3;

        $i3 = i0 - 2;

        $c4 = r0[$i3];

        $i8 = (int) $c4;

        lookupswitch($i8)
        {
            case 97: goto label1;
            case 101: goto label1;
            case 111: goto label1;
            default: goto label2;
        };

     label1:
        if i0 <= 4 goto label2;

        $i6 = i0 - 2;

        return $i6;

     label2:
        $i5 = i0 - 1;

        return $i5;

     label3:
        return i0;
    }

    private int normalize(char[], int)
    {
        int i0, $i1, $i3, $i4;
        org.apache.lucene.analysis.hu.HungarianLightStemmer r1;
        char[] r0;
        char $c2;

        r1 := @this: org.apache.lucene.analysis.hu.HungarianLightStemmer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        if i0 <= 3 goto label2;

        $i1 = i0 - 1;

        $c2 = r0[$i1];

        $i4 = (int) $c2;

        lookupswitch($i4)
        {
            case 97: goto label1;
            case 101: goto label1;
            case 105: goto label1;
            case 111: goto label1;
            default: goto label2;
        };

     label1:
        $i3 = i0 - 1;

        return $i3;

     label2:
        return i0;
    }

    private boolean isVowel(char)
    {
        org.apache.lucene.analysis.hu.HungarianLightStemmer r0;
        int $i1;
        char c0;

        r0 := @this: org.apache.lucene.analysis.hu.HungarianLightStemmer;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 97: goto label1;
            case 101: goto label1;
            case 105: goto label1;
            case 111: goto label1;
            case 117: goto label1;
            case 121: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }
}
