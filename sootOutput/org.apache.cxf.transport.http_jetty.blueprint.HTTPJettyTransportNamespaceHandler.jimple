public class org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler extends java.lang.Object implements org.apache.aries.blueprint.NamespaceHandler
{
    public static final java.lang.String JETTY_TRANSPORT;
    private static final java.lang.String JETTY_ENGINE;
    private static final java.lang.String JETTY_ENGINE_FACTORY;
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.net.URL getSchemaLocation(java.lang.String)
    {
        java.net.URL $r5;
        org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler r2;
        java.lang.Class $r3;
        java.lang.String r0, $r1;
        java.lang.ClassLoader $r4;
        boolean $z0;

        r2 := @this: org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://cxf.apache.org/transports/http-jetty/configuration";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("schemas/configuration/http-jetty.xsd");

        return $r5;

     label1:
        return null;
    }

    public java.util.Set getManagedClasses()
    {
        org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler;

        return null;
    }

    public org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext)
    {
        org.osgi.service.blueprint.reflect.Metadata $r9, $r11;
        org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler r22;
        java.util.logging.Level $r0;
        org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineParser $r10;
        java.lang.String $r3, $r4, $r5, $r6, $r15, $r18, $r21;
        boolean $z0, $z1, $z2;
        java.util.logging.Logger $r1, $r13;
        org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser $r7;
        org.w3c.dom.Element r2;
        org.apache.aries.blueprint.ParserContext r8;
        java.lang.StringBuilder $r12, $r14, $r16, $r17, $r19, $r20;

        r22 := @this: org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler;

        r2 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: org.apache.aries.blueprint.ParserContext;

        $r1 = <org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler: java.util.logging.Logger LOG>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r13 = <org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler: java.util.logging.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing element {{");

        $r15 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}{");

        $r18 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void fine(java.lang.String)>($r21);

     label1:
        $r3 = "engine";

        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r10 = new org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineParser;

        specialinvoke $r10.<org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineParser: void <init>()>();

        $r11 = virtualinvoke $r10.<org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineParser: org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)>(r2, r8);

        return $r11;

     label2:
        $r5 = "engine-factory";

        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        $r7 = new org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser;

        specialinvoke $r7.<org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser: void <init>()>();

        $r9 = virtualinvoke $r7.<org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser: org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)>(r2, r8);

        return $r9;

     label3:
        return null;
    }

    public org.osgi.service.blueprint.reflect.ComponentMetadata decorate(org.w3c.dom.Node, org.osgi.service.blueprint.reflect.ComponentMetadata, org.apache.aries.blueprint.ParserContext)
    {
        org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler r9;
        java.util.logging.Logger $r1;
        org.osgi.service.blueprint.reflect.ComponentMetadata r6;
        org.w3c.dom.Node r3;
        org.apache.aries.blueprint.ParserContext r10;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7;
        java.lang.String $r8;

        r9 := @this: org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler;

        r3 := @parameter0: org.w3c.dom.Node;

        r6 := @parameter1: org.osgi.service.blueprint.reflect.ComponentMetadata;

        r10 := @parameter2: org.apache.aries.blueprint.ParserContext;

        $r1 = <org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler: java.util.logging.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decorating node ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void info(java.lang.String)>($r8);

        return r6;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler: java.lang.String JETTY_ENGINE_FACTORY> = "engine-factory";

        <org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler: java.lang.String JETTY_ENGINE> = "engine";

        <org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler: java.lang.String JETTY_TRANSPORT> = "http://cxf.apache.org/transports/http-jetty/configuration";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/transport/http_jetty/blueprint/HTTPJettyTransportNamespaceHandler;");

        <org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
