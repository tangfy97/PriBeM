class org.waveprotocol.box.server.waveserver.WaveServerImpl$1 extends java.lang.Object implements org.waveprotocol.wave.federation.WaveletFederationListener
{
    final java.lang.String val$domain;
    final org.waveprotocol.box.server.waveserver.WaveServerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.WaveServerImpl, java.lang.String)
    {
        org.waveprotocol.box.server.waveserver.WaveServerImpl$1 r0;
        java.lang.String r2;
        org.waveprotocol.box.server.waveserver.WaveServerImpl r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveServerImpl;

        r2 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: java.lang.String val$domain> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void waveletDeltaUpdate(org.waveprotocol.wave.model.id.WaveletName, java.util.List, org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback)
    {
        org.waveprotocol.box.server.waveserver.CertificateManager $r10;
        com.google.common.util.concurrent.ListenableFuture $r11;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$1 r1;
        org.waveprotocol.wave.util.logging.Log $r16;
        java.lang.String $r7, $r20;
        org.waveprotocol.box.server.waveserver.WaveServerImpl $r3, $r4, $r6, $r9, $r14;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.wave.federation.WaveletFederationProvider $r8;
        java.util.concurrent.Executor $r15;
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError $r21;
        org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback r13;
        java.util.List r0;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainer $r5;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1 $r12;
        java.lang.StringBuilder $r17, $r18, $r19;

        r1 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$1;

        r2 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        r0 := @parameter1: java.util.List;

        r13 := @parameter2: org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z2);

        $r3 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0>;

        $z1 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: boolean access$000(org.waveprotocol.box.server.waveserver.WaveServerImpl,org.waveprotocol.wave.model.id.WaveletName)>($r3, r2);

        if $z1 == 0 goto label3;

        $r16 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote tried to update local wavelet ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String)>($r20);

        $r21 = staticinvoke <org.waveprotocol.wave.federation.FederationErrors: org.waveprotocol.wave.federation.FederationErrorProto$FederationError badRequest(java.lang.String)>("Received update to local wavelet");

        interfaceinvoke r13.<org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback: void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)>($r21);

        return;

     label3:
        $r4 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0>;

        $r5 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.box.server.waveserver.RemoteWaveletContainer access$200(org.waveprotocol.box.server.waveserver.WaveServerImpl,org.waveprotocol.wave.model.id.WaveletName)>($r4, r2);

        $r7 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: java.lang.String val$domain>;

        $r6 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0>;

        $r8 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.federation.WaveletFederationProvider access$300(org.waveprotocol.box.server.waveserver.WaveServerImpl)>($r6);

        $r9 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0>;

        $r10 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.box.server.waveserver.CertificateManager access$400(org.waveprotocol.box.server.waveserver.WaveServerImpl)>($r9);

        $r11 = interfaceinvoke $r5.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainer: com.google.common.util.concurrent.ListenableFuture update(java.util.List,java.lang.String,org.waveprotocol.wave.federation.WaveletFederationProvider,org.waveprotocol.box.server.waveserver.CertificateManager)>(r0, $r7, $r8, $r10);

        $r12 = new org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1;

        specialinvoke $r12.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: void <init>(org.waveprotocol.box.server.waveserver.WaveServerImpl$1,com.google.common.util.concurrent.ListenableFuture,org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback,org.waveprotocol.wave.model.id.WaveletName)>(r1, $r11, r13, r2);

        $r14 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0>;

        $r15 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: java.util.concurrent.Executor access$500(org.waveprotocol.box.server.waveserver.WaveServerImpl)>($r14);

        interfaceinvoke $r11.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r12, $r15);

        return;
    }

    public void waveletCommitUpdate(org.waveprotocol.wave.model.id.WaveletName, org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion, org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback)
    {
        org.waveprotocol.box.server.waveserver.WaveServerImpl$1 r1;
        org.waveprotocol.wave.model.version.HashedVersion $r12;
        org.waveprotocol.wave.util.logging.Log $r6, $r13, $r20;
        java.lang.String $r10, $r17, $r25;
        org.waveprotocol.box.server.waveserver.WaveServerImpl $r3, $r4;
        boolean $z0;
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError $r18, $r26;
        org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback r11;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainer $r5;
        org.waveprotocol.box.server.waveserver.WaveletStateException $r19;
        java.lang.StringBuilder $r7, $r8, $r9, $r14, $r15, $r16, $r21, $r22, $r23, $r24;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion r0;

        r1 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$1;

        r2 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        r0 := @parameter1: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion;

        r11 := @parameter2: org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0>;

        $z0 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: boolean access$000(org.waveprotocol.box.server.waveserver.WaveServerImpl,org.waveprotocol.wave.model.id.WaveletName)>($r3, r2);

        if $z0 == 0 goto label1;

        $r13 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got commit update for local wavelet ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String)>($r17);

        $r18 = staticinvoke <org.waveprotocol.wave.federation.FederationErrors: org.waveprotocol.wave.federation.FederationErrorProto$FederationError badRequest(java.lang.String)>("Received comit update to local wavelet");

        interfaceinvoke r11.<org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback: void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)>($r18);

        return;

     label1:
        $r4 = r1.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0>;

        $r5 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.box.server.waveserver.RemoteWaveletContainer access$600(org.waveprotocol.box.server.waveserver.WaveServerImpl,org.waveprotocol.wave.model.id.WaveletName)>($r4, r2);

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        $r20 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to access wavelet ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for commit update");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r25, $r19);

        $r26 = staticinvoke <org.waveprotocol.wave.federation.FederationErrors: org.waveprotocol.wave.federation.FederationErrorProto$FederationError internalServerError(java.lang.String)>("Storage access failure");

        interfaceinvoke r11.<org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback: void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)>($r26);

        return;

     label4:
        if $r5 == null goto label5;

        $r12 = staticinvoke <org.waveprotocol.box.server.common.CoreWaveletOperationSerializer: org.waveprotocol.wave.model.version.HashedVersion deserialize(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>(r0);

        interfaceinvoke $r5.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainer: void commit(org.waveprotocol.wave.model.version.HashedVersion)>($r12);

        goto label6;

     label5:
        $r6 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got commit update for missing wavelet ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r10);

     label6:
        interfaceinvoke r11.<org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback: void onSuccess()>();

        return;

        catch org.waveprotocol.box.server.waveserver.WaveletStateException from label1 to label2 with label3;
    }
}
