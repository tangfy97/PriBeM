public class ucar.nc2.dt.point.UnidataStationObsDataset extends ucar.nc2.dt.point.StationObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private static org.slf4j.Logger log;
    private ucar.nc2.Variable latVar;
    private ucar.nc2.Variable lonVar;
    private ucar.nc2.Variable altVar;
    private ucar.nc2.Variable timeVar;
    private ucar.nc2.Variable timeNominalVar;
    private ucar.nc2.Variable lastVar;
    private ucar.nc2.Variable prevVar;
    private ucar.nc2.Variable firstVar;
    private ucar.nc2.Variable nextVar;
    private ucar.nc2.Variable numChildrenVar;
    private ucar.nc2.Variable stationIndexVar;
    private ucar.nc2.Variable stationIdVar;
    private ucar.nc2.Variable stationDescVar;
    private ucar.nc2.Variable numStationsVar;
    private boolean isForwardLinkedList;
    private boolean isBackwardLinkedList;
    private boolean isContiguousList;
    private ucar.nc2.Structure recordVar;
    private ucar.nc2.dt.point.RecordDatasetHelper recordHelper;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        java.util.StringTokenizer $r5;
        ucar.nc2.Variable $r6;
        java.lang.String $r1, $r3, $r4, $r7, $r8, $r9, $r11;
        ucar.nc2.constants.FeatureType $r2, $r10;
        boolean $z0, $z1, $z2, $z3, z4;
        ucar.nc2.NetcdfFile r0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "cdm_data_type", "");

        $r2 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r3 = virtualinvoke $r2.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "cdm_datatype", "");

        $r10 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r11 = virtualinvoke $r10.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z3 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", null);

        if $r4 != null goto label2;

        return 0;

     label2:
        z4 = 0;

        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, ",");

     label3:
        $z1 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label5;

        $r7 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Unidata Observation Dataset v1.0");

        if $z2 == 0 goto label4;

        z4 = 1;

     label4:
        goto label3;

     label5:
        if z4 != 0 goto label6;

        return 0;

     label6:
        $r6 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "parent_index");

        if $r6 != null goto label7;

        return 0;

     label7:
        return 1;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.point.UnidataStationObsDataset: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsDataset $r0, r2;
        ucar.nc2.util.CancelTask r3;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.point.UnidataStationObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.constants.AxisType $r2, $r4, $r6, $r8;
        java.lang.StringBuffer $r26;
        java.lang.String $r23, $r30, $r34, $r36, $r50, $r51, $r59, $r61, $r63, $r85, $r86;
        ucar.nc2.units.DateUnit $r43, $r53, $r56;
        ucar.unidata.geoloc.LatLonRect $r46, $r47;
        ucar.nc2.dataset.StructureDS $r41;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.lang.IllegalStateException $r64, $r69, $r70, $r71, $r72, $r77, $r78, $r79;
        java.util.Date $r44, $r45, $r48, $r49, $r54, $r57;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r27;
        int $i0, $i1;
        ucar.nc2.Variable $r3, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r24, $r25, $r28, $r31, $r32, $r33, $r35, $r37, $r38, $r39, $r52, $r55, $r58, $r60, $r62, $r65, $r66, $r67, $r68, $r73, $r74, $r75, $r76, $r80, $r81, $r82, $r83, $r84;
        double $d0, $d1;
        ucar.nc2.dt.point.RecordDatasetHelper $r21, $r29, $r40, $r42;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r3 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r2);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable latVar> = $r3;

        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r5 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r4);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lonVar> = $r5;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r7 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r6);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable altVar> = $r7;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r9 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r8);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeVar> = $r9;

        $r10 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable latVar>;

        if $r10 != null goto label01;

        $r79 = new java.lang.IllegalStateException;

        specialinvoke $r79.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing latitude variable");

        throw $r79;

     label01:
        $r11 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lonVar>;

        if $r11 != null goto label02;

        $r78 = new java.lang.IllegalStateException;

        specialinvoke $r78.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing longitude coordinate variable");

        throw $r78;

     label02:
        $r12 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeVar>;

        if $r12 != null goto label03;

        $r77 = new java.lang.IllegalStateException;

        specialinvoke $r77.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing time coordinate variable");

        throw $r77;

     label03:
        $r13 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "time_nominal");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar> = $r13;

        $r14 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "lastChild");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lastVar> = $r14;

        $r15 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "prevChild");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable prevVar> = $r15;

        $r16 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "firstChild");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable firstVar> = $r16;

        $r17 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "nextChild");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable nextVar> = $r17;

        $r18 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "numChildren");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numChildrenVar> = $r18;

        $r19 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "parent_index");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIndexVar> = $r19;

        $r20 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable firstVar>;

        if $r20 == null goto label04;

        $r76 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable nextVar>;

        if $r76 == null goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isForwardLinkedList> = $z3;

        $r80 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lastVar>;

        if $r80 == null goto label06;

        $r75 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable prevVar>;

        if $r75 == null goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isBackwardLinkedList> = $z4;

        $z5 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isForwardLinkedList>;

        if $z5 != 0 goto label08;

        $z2 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isBackwardLinkedList>;

        if $z2 != 0 goto label08;

        $r73 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable firstVar>;

        if $r73 == null goto label08;

        $r74 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numChildrenVar>;

        if $r74 == null goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isContiguousList> = $z6;

        $z7 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isForwardLinkedList>;

        if $z7 != 0 goto label13;

        $z0 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isBackwardLinkedList>;

        if $z0 != 0 goto label13;

        $z1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isContiguousList>;

        if $z1 != 0 goto label13;

        $r65 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable firstVar>;

        if $r65 == null goto label10;

        $r72 = new java.lang.IllegalStateException;

        specialinvoke $r72.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing nextVar (linked list) or numChildrenVar (contiguous list) variable");

        throw $r72;

     label10:
        $r66 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lastVar>;

        if $r66 == null goto label11;

        $r71 = new java.lang.IllegalStateException;

        specialinvoke $r71.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing prevVar (linked list) variable");

        throw $r71;

     label11:
        $r67 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable nextVar>;

        if $r67 == null goto label12;

        $r70 = new java.lang.IllegalStateException;

        specialinvoke $r70.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing firstVar (linked list) variable");

        throw $r70;

     label12:
        $r68 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable prevVar>;

        if $r68 == null goto label13;

        $r69 = new java.lang.IllegalStateException;

        specialinvoke $r69.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing lastVar (linked list) variable");

        throw $r69;

     label13:
        $r81 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "station_id");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIdVar> = $r81;

        $r82 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "station_description");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationDescVar> = $r82;

        $r83 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "number_stations");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numStationsVar> = $r83;

        $r84 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIdVar>;

        if $r84 != null goto label14;

        $r64 = new java.lang.IllegalStateException;

        specialinvoke $r64.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing station id variable");

        throw $r64;

     label14:
        $r21 = new ucar.nc2.dt.point.RecordDatasetHelper;

        $r22 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeVar>;

        $r23 = virtualinvoke $r22.<ucar.nc2.Variable: java.lang.String getName()>();

        $r24 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar>;

        if $r24 != null goto label15;

        $r85 = null;

        goto label16;

     label15:
        $r25 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar>;

        $r85 = virtualinvoke $r25.<ucar.nc2.Variable: java.lang.String getName()>();

     label16:
        $r27 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.List dataVariables>;

        $r26 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.lang.StringBuffer parseInfo>;

        specialinvoke $r21.<ucar.nc2.dt.point.RecordDatasetHelper: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,java.util.List,java.lang.StringBuffer)>(r1, $r23, $r85, $r27, $r26);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper> = $r21;

        $r29 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r28 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIndexVar>;

        $r30 = virtualinvoke $r28.<ucar.nc2.Variable: java.lang.String getName()>();

        $r31 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationDescVar>;

        if $r31 != null goto label17;

        $r86 = null;

        goto label18;

     label17:
        $r32 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationDescVar>;

        $r86 = virtualinvoke $r32.<ucar.nc2.Variable: java.lang.String getName()>();

     label18:
        virtualinvoke $r29.<ucar.nc2.dt.point.RecordDatasetHelper: void setStationInfo(java.lang.String,java.lang.String)>($r30, $r86);

        $r33 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIndexVar>;

        $r34 = virtualinvoke $r33.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void removeDataVariable(java.lang.String)>($r34);

        $r35 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeVar>;

        $r36 = virtualinvoke $r35.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void removeDataVariable(java.lang.String)>($r36);

        $r37 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar>;

        if $r37 == null goto label19;

        $r62 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar>;

        $r63 = virtualinvoke $r62.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void removeDataVariable(java.lang.String)>($r63);

     label19:
        $r38 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable prevVar>;

        if $r38 == null goto label20;

        $r60 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable prevVar>;

        $r61 = virtualinvoke $r60.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void removeDataVariable(java.lang.String)>($r61);

     label20:
        $r39 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable nextVar>;

        if $r39 == null goto label21;

        $r58 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable nextVar>;

        $r59 = virtualinvoke $r58.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void removeDataVariable(java.lang.String)>($r59);

     label21:
        $r40 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r41 = $r40.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Structure recordVar> = $r41;

        $r42 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r43 = $r42.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.units.DateUnit timeUnit> = $r43;

        specialinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void readStations()>();

        $r44 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: java.util.Date getStartDate(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.Date startDate> = $r44;

        $r45 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: java.util.Date getEndDate(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.Date endDate> = $r45;

        $r46 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.unidata.geoloc.LatLonRect boundingBox> = $r46;

        $r47 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.unidata.geoloc.LatLonRect boundingBox>;

        if null != $r47 goto label22;

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: void setBoundingBox()>();

     label22:
        $r48 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.Date startDate>;

        if null != $r48 goto label23;

        $r55 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("minimum_time_observation");

        $i1 = virtualinvoke $r55.<ucar.nc2.Variable: int readScalarInt()>();

        $r56 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d1 = (double) $i1;

        $r57 = virtualinvoke $r56.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d1);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.Date startDate> = $r57;

     label23:
        $r49 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.Date endDate>;

        if null != $r49 goto label24;

        $r52 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("maximum_time_observation");

        $i0 = virtualinvoke $r52.<ucar.nc2.Variable: int readScalarInt()>();

        $r53 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = (double) $i0;

        $r54 = virtualinvoke $r53.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.Date endDate> = $r54;

     label24:
        $r50 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "title", "");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.lang.String title> = $r50;

        $r51 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "description", "");

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.lang.String desc> = $r51;

        return;
    }

    private void readStations() throws java.io.IOException
    {
        java.lang.Integer $r47;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        java.util.Map $r46;
        boolean $z0, $z1, $z2;
        java.util.List $r44;
        float $f0, $f1, $f2;
        java.util.HashMap $r48;
        ucar.ma2.ArrayChar $r23, r32;
        int $i0, i1, i2, $i3, $i4, $i6;
        ucar.nc2.Variable $r1, $r3, $r4, $r6, $r8, $r10, $r12, $r15, $r20, $r21, $r25, $r26, $r27, $r28, $r29, $r30, $r43;
        java.lang.String $r24, r36, $r37, r38, $r39, $r41, $r42;
        double $d0, $d1, $d2;
        ucar.ma2.Array $r2, $r5, $r7, r9, r11, $r31, $r33, $r34, r35;
        ucar.nc2.dt.point.RecordDatasetHelper $r18, $r45;
        ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl $r49;
        ucar.ma2.Index $r16;
        ucar.nc2.Dimension $r14;
        java.lang.Object $r19, $r22;
        ucar.nc2.dataset.NetcdfDataset $r13;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIdVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r32 = null;

        $r3 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationDescVar>;

        if $r3 == null goto label01;

        $r30 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationDescVar>;

        $r31 = virtualinvoke $r30.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r32 = (ucar.ma2.ArrayChar) $r31;

     label01:
        $r4 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable latVar>;

        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r6 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lonVar>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r8 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable altVar>;

        if $r8 == null goto label02;

        $r29 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable altVar>;

        $r33 = virtualinvoke $r29.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        goto label03;

     label02:
        $r33 = null;

     label03:
        r9 = $r33;

        $z0 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isForwardLinkedList>;

        if $z0 != 0 goto label04;

        $z2 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isContiguousList>;

        if $z2 == 0 goto label05;

     label04:
        $r10 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable firstVar>;

        $r34 = virtualinvoke $r10.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        goto label06;

     label05:
        $r28 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lastVar>;

        $r34 = virtualinvoke $r28.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label06:
        r11 = $r34;

        r35 = null;

        $r12 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numChildrenVar>;

        if $r12 == null goto label07;

        $r27 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numChildrenVar>;

        r35 = virtualinvoke $r27.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label07:
        $r13 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r14 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Dimension findDimension(ucar.nc2.NetcdfFile,java.lang.String)>($r13, "station");

        $r15 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numStationsVar>;

        if $r15 == null goto label08;

        $r26 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numStationsVar>;

        i1 = virtualinvoke $r26.<ucar.nc2.Variable: int readScalarInt()>();

        goto label09;

     label08:
        i1 = virtualinvoke $r14.<ucar.nc2.Dimension: int getLength()>();

     label09:
        $r16 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r18 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r48 = new java.util.HashMap;

        $i0 = 2 * i1;

        specialinvoke $r48.<java.util.HashMap: void <init>(int)>($i0);

        $r18.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash> = $r48;

        i2 = 0;

     label10:
        if i2 >= i1 goto label21;

        virtualinvoke $r16.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i2);

        $z1 = $r2 instanceof ucar.ma2.ArrayChar;

        if $z1 == 0 goto label13;

        $r23 = (ucar.ma2.ArrayChar) $r2;

        $r24 = virtualinvoke $r23.<ucar.ma2.ArrayChar: java.lang.String getString(int)>(i2);

        r36 = virtualinvoke $r24.<java.lang.String: java.lang.String trim()>();

        $r25 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationDescVar>;

        if $r25 == null goto label11;

        $r37 = virtualinvoke r32.<ucar.ma2.ArrayChar: java.lang.String getString(int)>(i2);

        goto label12;

     label11:
        $r37 = null;

     label12:
        r38 = $r37;

        if $r37 == null goto label16;

        r38 = virtualinvoke $r37.<java.lang.String: java.lang.String trim()>();

        goto label16;

     label13:
        $r19 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r16);

        r36 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        $r20 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationDescVar>;

        if $r20 == null goto label14;

        $r22 = virtualinvoke r32.<ucar.ma2.ArrayChar: java.lang.Object getObject(ucar.ma2.Index)>($r16);

        $r39 = (java.lang.String) $r22;

        goto label15;

     label14:
        $r39 = null;

     label15:
        r38 = $r39;

     label16:
        $r49 = new ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl;

        $r41 = r36;

        $r42 = r38;

        $f1 = virtualinvoke $r5.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r16);

        $d0 = (double) $f1;

        $f2 = virtualinvoke $r7.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r16);

        $d1 = (double) $f2;

        $r43 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable altVar>;

        if $r43 == null goto label17;

        $f0 = virtualinvoke r9.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r16);

        $d2 = (double) $f0;

        goto label18;

     label17:
        $d2 = #NaN;

     label18:
        $i3 = virtualinvoke r11.<ucar.ma2.Array: int getInt(ucar.ma2.Index)>($r16);

        $r21 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable numChildrenVar>;

        if $r21 == null goto label19;

        $i4 = virtualinvoke r35.<ucar.ma2.Array: int getInt(ucar.ma2.Index)>($r16);

        goto label20;

     label19:
        $i6 = (int) -1;

        $i4 = $i6;

     label20:
        specialinvoke $r49.<ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl: void <init>(ucar.nc2.dt.point.UnidataStationObsDataset,java.lang.String,java.lang.String,double,double,double,int,int,ucar.nc2.dt.point.UnidataStationObsDataset$1)>(r0, $r41, $r42, $d0, $d1, $d2, $i3, $i4, null);

        $r44 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.List stations>;

        interfaceinvoke $r44.<java.util.List: boolean add(java.lang.Object)>($r49);

        $r45 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r46 = $r45.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r49);

        i2 = i2 + 1;

        goto label10;

     label21:
        return;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.dt.point.StationDatasetHelper $r1;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.StationDatasetHelper stationHelper>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.StationDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.unidata.geoloc.LatLonRect boundingBox> = $r2;

        return;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r1;
        ucar.nc2.util.CancelTask r3;
        int $i0, i1;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs $r2;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r3 := @parameter0: ucar.nc2.util.CancelTask;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i0 = virtualinvoke r1.<ucar.nc2.dt.point.UnidataStationObsDataset: int getDataCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = virtualinvoke r1.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs makeObs(int,boolean,ucar.ma2.StructureData)>(i1, 0, null);

        if $r2 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        if r3 == null goto label3;

        $z0 = interfaceinvoke r3.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return $r0;
    }

    public int getDataCount()
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    public java.util.List getData(ucar.unidata.geoloc.Station, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl $r1;
        java.util.List $r2;
        ucar.nc2.dt.point.UnidataStationObsDataset r3;
        ucar.nc2.util.CancelTask r4;
        ucar.unidata.geoloc.Station r0;

        r3 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = (ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl: java.util.List getObservations()>();

        return $r2;
    }

    public void checkLinks(java.lang.StringBuffer) throws java.io.IOException
    {
        java.lang.Integer $r23, $r26;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r14, $r15, $r18, $r20, $r21;
        java.util.HashSet $r11;
        java.lang.StringBuffer r1, $r27, $r28, $r29, $r30;
        int $i0, $i1, i2, i3, i4;
        ucar.nc2.Variable $r2, $r4, $r6;
        java.lang.String $r16, $r22;
        java.io.PrintStream $r13, $r17, $r19;
        ucar.ma2.IndexIterator $r10;
        ucar.ma2.Array $r3, $r5, $r7;
        ucar.ma2.Index $r8, $r9, $r24, $r25;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r1 := @parameter0: java.lang.StringBuffer;

        i2 = 0;

        $z0 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isBackwardLinkedList>;

        if $z0 == 0 goto label6;

        $r2 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable lastVar>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r4 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable prevVar>;

        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r6 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIndexVar>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r8 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r9 = virtualinvoke $r7.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i3 = 0;

        $r10 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z1 = interfaceinvoke $r10.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>(int)>(500);

        i4 = interfaceinvoke $r10.<ucar.ma2.IndexIterator: int getIntNext()>();

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Station ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>($r16);

     label2:
        if i4 < 0 goto label5;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void print(java.lang.String)>($r22);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r23);

        $r24 = virtualinvoke $r9.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $i0 = virtualinvoke $r7.<ucar.ma2.Array: int getInt(ucar.ma2.Index)>($r24);

        if $i0 == i3 goto label3;

        $r29 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("recno ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" has bad station index\n");

        i2 = i2 + 1;

        if i2 <= 10 goto label3;

        return;

     label3:
        $r25 = virtualinvoke $r8.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $i1 = virtualinvoke $r5.<ucar.ma2.Array: int getInt(ucar.ma2.Index)>($r25);

        i4 = $i1;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r26);

        if $z2 == 0 goto label4;

        $r27 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("stn ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" has circular links\n");

        i2 = i2 + 1;

        if i2 <= 10 goto label5;

        return;

     label4:
        goto label2;

     label5:
        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println()>();

        i3 = i3 + 1;

        goto label1;

     label6:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("done");

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r4;
        java.lang.String[] r9;
        ucar.nc2.dt.point.UnidataStationObsDataset $r10;
        java.lang.StringBuffer $r11;
        int $i1;
        java.lang.StringBuilder $r5, $r7, $r12;
        java.lang.String $r6, $r8;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r9 := @parameter0: java.lang.String[];

        $r10 = new ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String)>("C:/data/199707010000.LAKEOUT_DOMAIN2");

        specialinvoke $r10.<ucar.nc2.dt.point.UnidataStationObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r1);

        $r11 = new java.lang.StringBuffer;

        $i1 = (int) 50000;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(int)>($i1);

        virtualinvoke $r10.<ucar.nc2.dt.point.UnidataStationObsDataset: void checkLinks(java.lang.StringBuffer)>($r11);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;
    }

    protected ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs makeObs(int, boolean, ucar.ma2.StructureData) throws java.io.IOException
    {
        ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs $r13, $r15;
        ucar.ma2.StructureData r47;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        java.text.ParseException $r31;
        boolean z0;
        java.util.List $r6, $r7;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r32, $r34, $r35, $r40, $r42, $r43;
        ucar.unidata.geoloc.Station r9;
        ucar.nc2.Structure $r20;
        java.lang.StringBuffer $r3, $r4, $r5, $r17, $r18, $r19;
        int i0, $i1, $i2, $i3, $i4, $i5;
        ucar.nc2.Variable $r1, $r10, $r11, $r12;
        java.lang.String $r2, $r30, $r36, $r38, $r44, $r46;
        double $d0, $d1;
        org.slf4j.Logger $r23, $r33, $r41;
        java.io.IOException $r37, $r45;
        ucar.nc2.dt.point.RecordDatasetHelper $r14, $r16;
        ucar.ma2.InvalidRangeException $r39;
        java.lang.Object $r8;
        ucar.nc2.dataset.NetcdfDataset $r21;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r47 := @parameter2: ucar.ma2.StructureData;

     label01:
        $i1 = virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: int getDataCount()>();

        if i0 <= $i1 goto label02;

        $i4 = virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: int getDataCount()>();

        $r21 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        virtualinvoke $r21.<ucar.nc2.dataset.NetcdfDataset: boolean syncExtend()>();

        $r23 = <ucar.nc2.dt.point.UnidataStationObsDataset: org.slf4j.Logger log>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UnidataStationObsDataset.makeObs recno=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; after sync= ");

        $i5 = virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: int getDataCount()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String)>($r30);

     label02:
        if null != r47 goto label03;

        $r20 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Structure recordVar>;

        r47 = virtualinvoke $r20.<ucar.nc2.Structure: ucar.ma2.StructureData readStructure(int)>(i0);

     label03:
        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable stationIndexVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $i2 = virtualinvoke r47.<ucar.ma2.StructureData: int getScalarInt(java.lang.String)>($r2);

        if $i2 < 0 goto label04;

        $r6 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.List stations>;

        $i3 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i2 < $i3 goto label06;

     label04:
        $r3 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.lang.StringBuffer parseInfo>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cant find station at index = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label05:
        return null;

     label06:
        $r7 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.util.List stations>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        r9 = (ucar.unidata.geoloc.Station) $r8;

        if r9 != null goto label08;

        $r17 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: java.lang.StringBuffer parseInfo>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cant find station at index = ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label07:
        return null;

     label08:
        $r10 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeVar>;

        $d0 = virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: double getTime(ucar.nc2.Variable,ucar.ma2.StructureData)>($r10, r47);

        $r11 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar>;

        if $r11 != null goto label09;

        $d1 = $d0;

        goto label10;

     label09:
        $r12 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar>;

        $d1 = virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsDataset: double getTime(ucar.nc2.Variable,ucar.ma2.StructureData)>($r12, r47);

     label10:
        if z0 == 0 goto label12;

        $r15 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs;

        $r16 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r15.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,double,double,ucar.ma2.StructureData)>($r16, r9, $d0, $d1, r47);

     label11:
        return $r15;

     label12:
        $r13 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs;

        $r14 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r13.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,double,double,int)>($r14, r9, $d0, $d1, i0);

     label13:
        return $r13;

     label14:
        $r39 := @caughtexception;

        $r41 = <ucar.nc2.dt.point.UnidataStationObsDataset: org.slf4j.Logger log>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UnidataStationObsDataset.makeObs recno=");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r41.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r44, $r39);

        $r45 = new java.io.IOException;

        $r46 = virtualinvoke $r39.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r45.<java.io.IOException: void <init>(java.lang.String)>($r46);

        throw $r45;

     label15:
        $r31 := @caughtexception;

        $r33 = <ucar.nc2.dt.point.UnidataStationObsDataset: org.slf4j.Logger log>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UnidataStationObsDataset.makeObs recno=");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r36, $r31);

        $r37 = new java.io.IOException;

        $r38 = virtualinvoke $r31.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>($r38);

        throw $r37;

        catch ucar.ma2.InvalidRangeException from label01 to label05 with label14;
        catch ucar.ma2.InvalidRangeException from label06 to label07 with label14;
        catch ucar.ma2.InvalidRangeException from label08 to label11 with label14;
        catch ucar.ma2.InvalidRangeException from label12 to label13 with label14;
        catch java.text.ParseException from label01 to label05 with label15;
        catch java.text.ParseException from label06 to label07 with label15;
        catch java.text.ParseException from label08 to label11 with label15;
        catch java.text.ParseException from label12 to label13 with label15;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl $r1;
        ucar.nc2.dt.point.UnidataStationObsDataset r3;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.DataIterator $r2;

        r3 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        $r1 = (ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl: ucar.nc2.dt.DataIterator iterator()>();

        return $r2;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station, java.util.Date, java.util.Date)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl $r3;
        ucar.nc2.dt.point.UnidataStationObsDataset r5;
        java.util.Date r1, r2;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.DataIterator $r4;

        r5 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r1 := @parameter1: java.util.Date;

        r2 := @parameter2: java.util.Date;

        $r3 = (ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl) r0;

        $r4 = virtualinvoke $r3.<ucar.nc2.dt.point.UnidataStationObsDataset$UnidataStationImpl: ucar.nc2.dt.DataIterator iterator(java.util.Date,java.util.Date)>(r1, r2);

        return $r4;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r1;
        ucar.nc2.dataset.StructureDS $r3;
        ucar.nc2.dt.point.UnidataStationObsDataset$StationDatatypeIterator $r0;
        int i0;
        ucar.nc2.dt.point.RecordDatasetHelper $r2;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsDataset;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.point.UnidataStationObsDataset$StationDatatypeIterator;

        $r2 = r1.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r3 = $r2.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        specialinvoke $r0.<ucar.nc2.dt.point.UnidataStationObsDataset$StationDatatypeIterator: void <init>(ucar.nc2.dt.point.UnidataStationObsDataset,ucar.nc2.Structure,int)>(r1, $r3, i0);

        return $r0;
    }

    static boolean access$100(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $z0 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isForwardLinkedList>;

        return $z0;
    }

    static ucar.nc2.Variable access$200(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable nextVar>;

        return $r1;
    }

    static ucar.nc2.Variable access$300(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable prevVar>;

        return $r1;
    }

    static ucar.nc2.dataset.NetcdfDataset access$400(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        return $r1;
    }

    static org.slf4j.Logger access$500()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.dt.point.UnidataStationObsDataset: org.slf4j.Logger log>;

        return $r0;
    }

    static ucar.nc2.Structure access$600(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        ucar.nc2.Structure $r1;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Structure recordVar>;

        return $r1;
    }

    static boolean access$700(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $z0 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: boolean isContiguousList>;

        return $z0;
    }

    static ucar.nc2.Variable access$800(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeVar>;

        return $r1;
    }

    static ucar.nc2.Variable access$900(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dt.point.UnidataStationObsDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.Variable timeNominalVar>;

        return $r1;
    }

    static ucar.nc2.dt.point.RecordDatasetHelper access$1000(ucar.nc2.dt.point.UnidataStationObsDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsDataset r0;
        ucar.nc2.dt.point.RecordDatasetHelper $r1;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dt/point/UnidataStationObsDataset;");

        <ucar.nc2.dt.point.UnidataStationObsDataset: org.slf4j.Logger log> = $r0;

        return;
    }
}
