public class org.sat4j.minisat.uip.DecisionUIP extends java.lang.Object implements org.sat4j.minisat.core.AssertingClauseGenerator, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.sat4j.minisat.uip.DecisionUIP r0;

        r0 := @this: org.sat4j.minisat.uip.DecisionUIP;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void initAnalyze()
    {
        org.sat4j.minisat.uip.DecisionUIP r0;

        r0 := @this: org.sat4j.minisat.uip.DecisionUIP;

        return;
    }

    public void onCurrentDecisionLevelLiteral(int)
    {
        int i0;
        org.sat4j.minisat.uip.DecisionUIP r0;

        r0 := @this: org.sat4j.minisat.uip.DecisionUIP;

        i0 := @parameter0: int;

        return;
    }

    public boolean clauseNonAssertive(org.sat4j.specs.IConstr)
    {
        org.sat4j.minisat.uip.DecisionUIP r1;
        org.sat4j.specs.IConstr r0;
        boolean $z0;

        r1 := @this: org.sat4j.minisat.uip.DecisionUIP;

        r0 := @parameter0: org.sat4j.specs.IConstr;

        if r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.uip.DecisionUIP r0;

        r0 := @this: org.sat4j.minisat.uip.DecisionUIP;

        return "Stops conflict analysis at the last decision variable";
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.uip.DecisionUIP: long serialVersionUID> = 1L;

        return;
    }
}
