public class org.apache.zookeeper.proto.MultiHeader extends java.lang.Object implements org.apache.jute.Record
{
    private int type;
    private boolean done;
    private int err;

    public void <init>()
    {
        org.apache.zookeeper.proto.MultiHeader r0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(int, boolean, int)
    {
        int i0, i1;
        org.apache.zookeeper.proto.MultiHeader r0;
        boolean z0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.proto.MultiHeader: int type> = i0;

        r0.<org.apache.zookeeper.proto.MultiHeader: boolean done> = z0;

        r0.<org.apache.zookeeper.proto.MultiHeader: int err> = i1;

        return;
    }

    public int getType()
    {
        int $i0;
        org.apache.zookeeper.proto.MultiHeader r0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        $i0 = r0.<org.apache.zookeeper.proto.MultiHeader: int type>;

        return $i0;
    }

    public void setType(int)
    {
        int i0;
        org.apache.zookeeper.proto.MultiHeader r0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.proto.MultiHeader: int type> = i0;

        return;
    }

    public boolean getDone()
    {
        org.apache.zookeeper.proto.MultiHeader r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        $z0 = r0.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        return $z0;
    }

    public void setDone(boolean)
    {
        org.apache.zookeeper.proto.MultiHeader r0;
        boolean z0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        z0 := @parameter0: boolean;

        r0.<org.apache.zookeeper.proto.MultiHeader: boolean done> = z0;

        return;
    }

    public int getErr()
    {
        int $i0;
        org.apache.zookeeper.proto.MultiHeader r0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        $i0 = r0.<org.apache.zookeeper.proto.MultiHeader: int err>;

        return $i0;
    }

    public void setErr(int)
    {
        int i0;
        org.apache.zookeeper.proto.MultiHeader r0;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.proto.MultiHeader: int err> = i0;

        return;
    }

    public void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.OutputArchive r0;
        int $i0, $i1;
        java.lang.String r2;
        org.apache.zookeeper.proto.MultiHeader r1;
        boolean $z0;

        r1 := @this: org.apache.zookeeper.proto.MultiHeader;

        r0 := @parameter0: org.apache.jute.OutputArchive;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        $i0 = r1.<org.apache.zookeeper.proto.MultiHeader: int type>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeInt(int,java.lang.String)>($i0, "type");

        $z0 = r1.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeBool(boolean,java.lang.String)>($z0, "done");

        $i1 = r1.<org.apache.zookeeper.proto.MultiHeader: int err>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeInt(int,java.lang.String)>($i1, "err");

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        return;
    }

    public void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.InputArchive r0;
        int $i0, $i1;
        java.lang.String r1;
        org.apache.zookeeper.proto.MultiHeader r2;
        boolean $z0;

        r2 := @this: org.apache.zookeeper.proto.MultiHeader;

        r0 := @parameter0: org.apache.jute.InputArchive;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void startRecord(java.lang.String)>(r1);

        $i0 = interfaceinvoke r0.<org.apache.jute.InputArchive: int readInt(java.lang.String)>("type");

        r2.<org.apache.zookeeper.proto.MultiHeader: int type> = $i0;

        $z0 = interfaceinvoke r0.<org.apache.jute.InputArchive: boolean readBool(java.lang.String)>("done");

        r2.<org.apache.zookeeper.proto.MultiHeader: boolean done> = $z0;

        $i1 = interfaceinvoke r0.<org.apache.jute.InputArchive: int readInt(java.lang.String)>("err");

        r2.<org.apache.zookeeper.proto.MultiHeader: int err> = $i1;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void endRecord(java.lang.String)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r5;
        byte[] $r4;
        org.apache.jute.CsvOutputArchive $r1;
        java.io.ByteArrayOutputStream $r0;
        int $i0, $i1;
        java.lang.String $r3;
        org.apache.zookeeper.proto.MultiHeader r2;
        boolean $z0;

        r2 := @this: org.apache.zookeeper.proto.MultiHeader;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.apache.jute.CsvOutputArchive;

        specialinvoke $r1.<org.apache.jute.CsvOutputArchive: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $i0 = r2.<org.apache.zookeeper.proto.MultiHeader: int type>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeInt(int,java.lang.String)>($i0, "type");

        $z0 = r2.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeBool(boolean,java.lang.String)>($z0, "done");

        $i1 = r2.<org.apache.zookeeper.proto.MultiHeader: int err>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeInt(int,java.lang.String)>($i1, "err");

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $r3 = new java.lang.String;

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        return "ERROR";

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.jute.BinaryOutputArchive $r0;
        java.io.DataOutput r1;
        org.apache.zookeeper.proto.MultiHeader r2;

        r2 := @this: org.apache.zookeeper.proto.MultiHeader;

        r1 := @parameter0: java.io.DataOutput;

        $r0 = new org.apache.jute.BinaryOutputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryOutputArchive: void <init>(java.io.DataOutput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.proto.MultiHeader: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r0, "");

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r1;
        org.apache.zookeeper.proto.MultiHeader r2;
        org.apache.jute.BinaryInputArchive $r0;

        r2 := @this: org.apache.zookeeper.proto.MultiHeader;

        r1 := @parameter0: java.io.DataInput;

        $r0 = new org.apache.jute.BinaryInputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryInputArchive: void <init>(java.io.DataInput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.proto.MultiHeader: void deserialize(org.apache.jute.InputArchive,java.lang.String)>($r0, "");

        return;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        java.lang.ClassCastException $r3;
        byte $b11, $b12, $b13, $b14, $b15, $b16, $b17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object r0;
        org.apache.zookeeper.proto.MultiHeader r1, r2;

        r2 := @this: org.apache.zookeeper.proto.MultiHeader;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.proto.MultiHeader;

        if $z0 != 0 goto label01;

        $r3 = new java.lang.ClassCastException;

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>("Comparing different types of records.");

        throw $r3;

     label01:
        r1 = (org.apache.zookeeper.proto.MultiHeader) r0;

        $i1 = r2.<org.apache.zookeeper.proto.MultiHeader: int type>;

        $i0 = r1.<org.apache.zookeeper.proto.MultiHeader: int type>;

        if $i1 != $i0 goto label02;

        $b12 = 0;

        $b11 = 0;

        goto label04;

     label02:
        $i3 = r2.<org.apache.zookeeper.proto.MultiHeader: int type>;

        $i2 = r1.<org.apache.zookeeper.proto.MultiHeader: int type>;

        if $i3 >= $i2 goto label03;

        $b12 = -1;

        $b11 = -1;

        goto label04;

     label03:
        $b12 = 1;

        $b11 = 1;

     label04:
        if $b11 == 0 goto label05;

        return $b12;

     label05:
        $z2 = r2.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        $z1 = r1.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        if $z2 != $z1 goto label06;

        $b17 = 0;

        $b16 = 0;

        goto label08;

     label06:
        $z3 = r2.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        if $z3 == 0 goto label07;

        $b17 = 1;

        $b16 = 1;

        goto label08;

     label07:
        $b17 = -1;

        $b16 = -1;

     label08:
        if $b16 == 0 goto label09;

        return $b17;

     label09:
        $i5 = r2.<org.apache.zookeeper.proto.MultiHeader: int err>;

        $i4 = r1.<org.apache.zookeeper.proto.MultiHeader: int err>;

        if $i5 != $i4 goto label10;

        $b15 = 0;

        $b14 = 0;

        $b13 = 0;

        goto label12;

     label10:
        $i7 = r2.<org.apache.zookeeper.proto.MultiHeader: int err>;

        $i6 = r1.<org.apache.zookeeper.proto.MultiHeader: int err>;

        if $i7 >= $i6 goto label11;

        $b15 = -1;

        $b14 = -1;

        $b13 = -1;

        goto label12;

     label11:
        $b15 = 1;

        $b14 = 1;

        $b13 = 1;

     label12:
        if $b14 == 0 goto label13;

        return $b15;

     label13:
        return $b13;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.Object r0;
        org.apache.zookeeper.proto.MultiHeader r1, r2;

        r1 := @this: org.apache.zookeeper.proto.MultiHeader;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.proto.MultiHeader;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        if r0 != r1 goto label02;

        return 1;

     label02:
        r2 = (org.apache.zookeeper.proto.MultiHeader) r0;

        $i1 = r1.<org.apache.zookeeper.proto.MultiHeader: int type>;

        $i0 = r2.<org.apache.zookeeper.proto.MultiHeader: int type>;

        if $i1 != $i0 goto label03;

        $z10 = 1;

        $z9 = 1;

        goto label04;

     label03:
        $z10 = 0;

        $z9 = 0;

     label04:
        if $z10 != 0 goto label05;

        return $z9;

     label05:
        $z2 = r1.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        $z1 = r2.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        if $z2 != $z1 goto label06;

        $z12 = 1;

        $z11 = 1;

        goto label07;

     label06:
        $z12 = 0;

        $z11 = 0;

     label07:
        if $z11 != 0 goto label08;

        return $z12;

     label08:
        $i3 = r1.<org.apache.zookeeper.proto.MultiHeader: int err>;

        $i2 = r2.<org.apache.zookeeper.proto.MultiHeader: int err>;

        if $i3 != $i2 goto label09;

        $z8 = 1;

        $z7 = 1;

        $z6 = 1;

        goto label10;

     label09:
        $z8 = 0;

        $z7 = 0;

        $z6 = 0;

     label10:
        if $z6 != 0 goto label11;

        return $z7;

     label11:
        return $z8;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        org.apache.zookeeper.proto.MultiHeader r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.zookeeper.proto.MultiHeader;

        i5 = r0.<org.apache.zookeeper.proto.MultiHeader: int type>;

        i6 = 629 + i5;

        $z0 = r0.<org.apache.zookeeper.proto.MultiHeader: boolean done>;

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        $i0 = 37 * i6;

        $i2 = $i0 + $z1;

        $i3 = r0.<org.apache.zookeeper.proto.MultiHeader: int err>;

        $i1 = 37 * $i2;

        $i4 = $i1 + $i3;

        return $i4;
    }

    public static java.lang.String signature()
    {
        return "LMultiHeader(izi)";
    }
}
