public final class org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaUtil r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEqual(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta, org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)
    {
        byte $b2;
        int $i0, $i1;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta r0, r2;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0, $d1;
        org.waveprotocol.wave.federation.ProtocolSignedDelta $r1, $r3;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        r2 := @parameter1: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolSignedDelta getSignedOriginalDelta()>();

        $r3 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolSignedDelta getSignedOriginalDelta()>();

        $z0 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignedDeltaUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolSignedDelta,org.waveprotocol.wave.federation.ProtocolSignedDelta)>($r1, $r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: boolean hasHashedVersionAppliedAt()>();

        $z2 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: boolean hasHashedVersionAppliedAt()>();

        if $z1 == $z2 goto label2;

        return 0;

     label2:
        $z3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: boolean hasHashedVersionAppliedAt()>();

        if $z3 == 0 goto label3;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAppliedAt()>();

        $r5 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAppliedAt()>();

        $z4 = staticinvoke <org.waveprotocol.wave.federation.ProtocolHashedVersionUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolHashedVersion,org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r4, $r5);

        if $z4 != 0 goto label3;

        return 0;

     label3:
        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: int getOperationsApplied()>();

        $i1 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: int getOperationsApplied()>();

        if $i0 == $i1 goto label4;

        return 0;

     label4:
        $d0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: double getApplicationTimestamp()>();

        $d1 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: double getApplicationTimestamp()>();

        $b2 = $d0 cmpl $d1;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public static boolean areAllEqual(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r3;
        java.util.List r0, r1;
        int $i0, $i1;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta $r5, $r7;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta) $r4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta) $r6;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta,org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)>($r5, $r7);

        if $z1 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static int getHashCode(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)
    {
        java.lang.Double $r3;
        java.lang.Integer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r4;
        boolean $z0;
        double $d0;
        org.waveprotocol.wave.federation.ProtocolSignedDelta $r1;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolSignedDelta getSignedOriginalDelta()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i10 = 31 + $i0;

        $i1 = 31 * i10;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: boolean hasHashedVersionAppliedAt()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAppliedAt()>();

        $i11 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i11 = 0;

     label2:
        $i7 = $i1 + $i11;

        $i2 = 31 * $i7;

        $i3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: int getOperationsApplied()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $i4 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>();

        $i8 = $i2 + $i4;

        $i5 = 31 * $i8;

        $d0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta: double getApplicationTimestamp()>();

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $i6 = virtualinvoke $r3.<java.lang.Double: int hashCode()>();

        $i9 = $i5 + $i6;

        return $i9;
    }
}
