public class org.apache.velocity.app.VelocityEngine extends java.lang.Object implements org.apache.velocity.runtime.RuntimeConstants
{
    private org.apache.velocity.runtime.RuntimeInstance ri;

    public void <init>()
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.velocity.runtime.RuntimeInstance;

        specialinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void <init>()>();

        r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri> = $r1;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.velocity.app.VelocityEngine r0;
        org.apache.velocity.runtime.RuntimeInstance $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.velocity.runtime.RuntimeInstance;

        specialinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void <init>()>();

        r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri> = $r1;

        $r3 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r3.<org.apache.velocity.runtime.RuntimeInstance: void setProperties(java.lang.String)>(r2);

        return;
    }

    public void <init>(java.util.Properties)
    {
        java.util.Properties r2;
        org.apache.velocity.app.VelocityEngine r0;
        org.apache.velocity.runtime.RuntimeInstance $r1, $r3;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r2 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.velocity.runtime.RuntimeInstance;

        specialinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void <init>()>();

        r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri> = $r1;

        $r3 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r3.<org.apache.velocity.runtime.RuntimeInstance: void setProperties(java.util.Properties)>(r2);

        return;
    }

    public void init()
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        $r1 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void init()>();

        return;
    }

    public void init(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void init(java.lang.String)>(r1);

        return;
    }

    public void init(java.util.Properties)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.util.Properties r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.util.Properties;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void init(java.util.Properties)>(r1);

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.apache.velocity.app.VelocityEngine r0;
        java.lang.Object r2;
        org.apache.velocity.runtime.RuntimeInstance $r3;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r3.<org.apache.velocity.runtime.RuntimeInstance: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        org.apache.velocity.app.VelocityEngine r0;
        java.lang.Object r2;
        org.apache.velocity.runtime.RuntimeInstance $r3;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r3.<org.apache.velocity.runtime.RuntimeInstance: void addProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void clearProperty(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void clearProperty(java.lang.String)>(r1);

        return;
    }

    public void setExtendedProperties(org.apache.commons.collections.ExtendedProperties)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        org.apache.velocity.app.VelocityEngine r0;
        org.apache.commons.collections.ExtendedProperties r1;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void setConfiguration(org.apache.commons.collections.ExtendedProperties)>(r1);

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.velocity.app.VelocityEngine r0;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public boolean evaluate(org.apache.velocity.context.Context, java.io.Writer, java.lang.String, java.lang.String) throws org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException, org.apache.velocity.exception.ResourceNotFoundException
    {
        org.apache.velocity.context.Context r1;
        org.apache.velocity.app.VelocityEngine r0;
        java.io.Writer r2;
        org.apache.velocity.runtime.RuntimeInstance $r5;
        java.lang.String r3, r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: org.apache.velocity.context.Context;

        r2 := @parameter1: java.io.Writer;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r5.<org.apache.velocity.runtime.RuntimeInstance: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return $z0;
    }

    public boolean evaluate(org.apache.velocity.context.Context, java.io.Writer, java.lang.String, java.io.InputStream) throws org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException, org.apache.velocity.exception.ResourceNotFoundException, java.io.IOException
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        org.apache.velocity.context.Context r6;
        org.apache.velocity.app.VelocityEngine r0;
        java.lang.StringBuffer $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r2, r8, $r15, r17;
        boolean $z0;
        org.apache.velocity.exception.ParseErrorException $r16;
        java.io.InputStreamReader $r4;
        java.io.Writer r7;
        java.io.BufferedReader $r3;
        java.io.UnsupportedEncodingException $r9;
        java.io.InputStream r5;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r6 := @parameter0: org.apache.velocity.context.Context;

        r7 := @parameter1: java.io.Writer;

        r8 := @parameter2: java.lang.String;

        r5 := @parameter3: java.io.InputStream;

        r17 = null;

     label1:
        $r1 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getString(java.lang.String,java.lang.String)>("input.encoding", "ISO-8859-1");

        r17 = $r2;

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r5, $r2);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported input encoding : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for template ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = new org.apache.velocity.exception.ParseErrorException;

        specialinvoke $r16.<org.apache.velocity.exception.ParseErrorException: void <init>(java.lang.String)>($r15);

        throw $r16;

     label4:
        $z0 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.io.Reader)>(r6, r7, r8, $r3);

        return $z0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public boolean evaluate(org.apache.velocity.context.Context, java.io.Writer, java.lang.String, java.io.Reader) throws org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException, org.apache.velocity.exception.ResourceNotFoundException
    {
        org.apache.velocity.context.Context r1;
        org.apache.velocity.app.VelocityEngine r0;
        java.io.Writer r2;
        org.apache.velocity.runtime.RuntimeInstance $r5;
        java.lang.String r3;
        java.io.Reader r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: org.apache.velocity.context.Context;

        r2 := @parameter1: java.io.Writer;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.io.Reader;

        $r5 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r5.<org.apache.velocity.runtime.RuntimeInstance: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.io.Reader)>(r1, r2, r3, r4);

        return $z0;
    }

    public boolean invokeVelocimacro(java.lang.String, java.lang.String, java.lang.String[], org.apache.velocity.context.Context, java.io.Writer)
    {
        java.lang.String[] r3;
        org.apache.velocity.runtime.RuntimeInstance $r6;
        org.apache.velocity.context.Context r4;
        org.apache.velocity.app.VelocityEngine r0;
        java.io.Writer r5;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: org.apache.velocity.context.Context;

        r5 := @parameter4: java.io.Writer;

        $r6 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r6.<org.apache.velocity.runtime.RuntimeInstance: boolean invokeVelocimacro(java.lang.String,java.lang.String,java.lang.String[],org.apache.velocity.context.Context,java.io.Writer)>(r1, r2, r3, r4, r5);

        return $z0;
    }

    public boolean mergeTemplate(java.lang.String, org.apache.velocity.context.Context, java.io.Writer) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.context.Context r4;
        org.apache.velocity.app.VelocityEngine r0;
        java.io.Writer r5;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.velocity.context.Context;

        r5 := @parameter2: java.io.Writer;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getString(java.lang.String,java.lang.String)>("input.encoding", "ISO-8859-1");

        $z0 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: boolean mergeTemplate(java.lang.String,java.lang.String,org.apache.velocity.context.Context,java.io.Writer)>(r1, $r3, r4, r5);

        return $z0;
    }

    public boolean mergeTemplate(java.lang.String, java.lang.String, org.apache.velocity.context.Context, java.io.Writer) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.runtime.RuntimeInstance $r3;
        org.apache.velocity.Template $r4;
        org.apache.velocity.runtime.log.Log $r12;
        org.apache.velocity.context.Context r5;
        org.apache.velocity.app.VelocityEngine r0;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        java.io.Writer r6;
        java.lang.String r1, r2, $r11;
        org.apache.velocity.exception.ResourceNotFoundException $r13;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.velocity.context.Context;

        r6 := @parameter3: java.io.Writer;

        $r3 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r4 = virtualinvoke $r3.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.Template getTemplate(java.lang.String,java.lang.String)>(r1, r2);

        if $r4 != null goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VelocityEngine.mergeTemplate() was unable to load template \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r12.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r11);

        $r13 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r13.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label1:
        virtualinvoke $r4.<org.apache.velocity.Template: void merge(org.apache.velocity.context.Context,java.io.Writer)>(r5, r6);

        return 1;
    }

    public org.apache.velocity.Template getTemplate(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.app.VelocityEngine r0;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r1;
        org.apache.velocity.Template $r3;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.Template getTemplate(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.velocity.Template getTemplate(java.lang.String, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.app.VelocityEngine r0;
        org.apache.velocity.runtime.RuntimeInstance $r3;
        java.lang.String r1, r2;
        org.apache.velocity.Template $r4;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r4 = virtualinvoke $r3.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.Template getTemplate(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public boolean resourceExists(java.lang.String)
    {
        org.apache.velocity.app.VelocityEngine r0;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getLoaderNameForResource(java.lang.String)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean templateExists(java.lang.String)
    {
        java.lang.String r1;
        org.apache.velocity.app.VelocityEngine r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: boolean resourceExists(java.lang.String)>(r1);

        return $z0;
    }

    public org.apache.velocity.runtime.log.Log getLog()
    {
        org.apache.velocity.runtime.log.Log $r2;
        org.apache.velocity.runtime.RuntimeInstance $r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        $r1 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        return $r2;
    }

    public void warn(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        java.lang.Object r2;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void warn(java.lang.Object)>(r2);

        return;
    }

    public void info(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        java.lang.Object r2;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void info(java.lang.Object)>(r2);

        return;
    }

    public void error(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        java.lang.Object r2;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>(r2);

        return;
    }

    public void debug(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        java.lang.Object r2;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>(r2);

        return;
    }

    public void setApplicationAttribute(java.lang.Object, java.lang.Object)
    {
        org.apache.velocity.app.VelocityEngine r0;
        java.lang.Object r1, r2;
        org.apache.velocity.runtime.RuntimeInstance $r3;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r3.<org.apache.velocity.runtime.RuntimeInstance: java.lang.Object setApplicationAttribute(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getApplicationAttribute(java.lang.Object)
    {
        org.apache.velocity.app.VelocityEngine r0;
        java.lang.Object r1, $r3;
        org.apache.velocity.runtime.RuntimeInstance $r2;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: java.lang.Object getApplicationAttribute(java.lang.Object)>(r1);

        return $r3;
    }

    public void removeDirective(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void removeDirective(java.lang.String)>(r1);

        return;
    }

    public void loadDirective(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r1;
        org.apache.velocity.app.VelocityEngine r0;

        r0 := @this: org.apache.velocity.app.VelocityEngine;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.app.VelocityEngine: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void loadDirective(java.lang.String)>(r1);

        return;
    }
}
