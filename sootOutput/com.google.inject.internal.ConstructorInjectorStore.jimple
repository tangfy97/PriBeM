final class com.google.inject.internal.ConstructorInjectorStore extends java.lang.Object
{
    private final com.google.inject.internal.InjectorImpl injector;
    private final com.google.inject.internal.FailableCache cache;

    void <init>(com.google.inject.internal.InjectorImpl)
    {
        com.google.inject.internal.ConstructorInjectorStore$1 $r1;
        com.google.inject.internal.InjectorImpl r2;
        com.google.inject.internal.ConstructorInjectorStore r0;

        r0 := @this: com.google.inject.internal.ConstructorInjectorStore;

        r2 := @parameter0: com.google.inject.internal.InjectorImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.inject.internal.ConstructorInjectorStore$1;

        specialinvoke $r1.<com.google.inject.internal.ConstructorInjectorStore$1: void <init>(com.google.inject.internal.ConstructorInjectorStore)>(r0);

        r0.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.FailableCache cache> = $r1;

        r0.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.InjectorImpl injector> = r2;

        return;
    }

    public com.google.inject.internal.ConstructorInjector get(com.google.inject.spi.InjectionPoint, com.google.inject.internal.Errors) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.Errors r2;
        com.google.inject.internal.ConstructorInjector $r5;
        com.google.inject.spi.InjectionPoint r1;
        com.google.inject.internal.ConstructorInjectorStore r0;
        java.lang.Object $r4;
        com.google.inject.internal.FailableCache $r3;

        r0 := @this: com.google.inject.internal.ConstructorInjectorStore;

        r1 := @parameter0: com.google.inject.spi.InjectionPoint;

        r2 := @parameter1: com.google.inject.internal.Errors;

        $r3 = r0.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.FailableCache cache>;

        $r4 = virtualinvoke $r3.<com.google.inject.internal.FailableCache: java.lang.Object get(java.lang.Object,com.google.inject.internal.Errors)>(r1, r2);

        $r5 = (com.google.inject.internal.ConstructorInjector) $r4;

        return $r5;
    }

    boolean remove(com.google.inject.spi.InjectionPoint)
    {
        com.google.inject.spi.InjectionPoint r1;
        com.google.inject.internal.ConstructorInjectorStore r0;
        com.google.inject.internal.FailableCache $r2;
        boolean $z0;

        r0 := @this: com.google.inject.internal.ConstructorInjectorStore;

        r1 := @parameter0: com.google.inject.spi.InjectionPoint;

        $r2 = r0.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.FailableCache cache>;

        $z0 = virtualinvoke $r2.<com.google.inject.internal.FailableCache: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    private com.google.inject.internal.ConstructorInjector createConstructor(com.google.inject.spi.InjectionPoint, com.google.inject.internal.Errors) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.ConstructorInjector $r17;
        com.google.inject.internal.ConstructorInjectorStore r1;
        com.google.inject.internal.MembersInjectorImpl $r9;
        com.google.inject.internal.ConstructionProxy $r19;
        com.google.inject.internal.MembersInjectorStore $r7;
        java.lang.Iterable $r15;
        com.google.inject.internal.util.$ImmutableSet $r18;
        int $i0;
        com.google.inject.internal.State $r11;
        boolean $z0;
        com.google.inject.internal.util.$ImmutableList $r12, $r13, $r14, $r20;
        com.google.inject.internal.Errors r0;
        java.util.List $r4;
        com.google.inject.internal.InjectorImpl $r3, $r6, $r10;
        com.google.inject.spi.InjectionPoint r2;
        com.google.inject.internal.ProxyFactory $r16;
        com.google.inject.internal.SingleParameterInjector[] $r5;
        com.google.inject.TypeLiteral $r8;

        r1 := @this: com.google.inject.internal.ConstructorInjectorStore;

        r2 := @parameter0: com.google.inject.spi.InjectionPoint;

        r0 := @parameter1: com.google.inject.internal.Errors;

        $i0 = virtualinvoke r0.<com.google.inject.internal.Errors: int size()>();

        $r3 = r1.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.InjectorImpl injector>;

        $r4 = virtualinvoke r2.<com.google.inject.spi.InjectionPoint: java.util.List getDependencies()>();

        $r5 = virtualinvoke $r3.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.SingleParameterInjector[] getParametersInjectors(java.util.List,com.google.inject.internal.Errors)>($r4, r0);

        $r6 = r1.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.InjectorImpl injector>;

        $r7 = $r6.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.MembersInjectorStore membersInjectorStore>;

        $r8 = virtualinvoke r2.<com.google.inject.spi.InjectionPoint: com.google.inject.TypeLiteral getDeclaringType()>();

        $r9 = virtualinvoke $r7.<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.MembersInjectorImpl get(com.google.inject.TypeLiteral,com.google.inject.internal.Errors)>($r8, r0);

        $r10 = r1.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.InjectorImpl injector>;

        $r11 = $r10.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r12 = interfaceinvoke $r11.<com.google.inject.internal.State: com.google.inject.internal.util.$ImmutableList getMethodAspects()>();

        $r13 = virtualinvoke $r9.<com.google.inject.internal.MembersInjectorImpl: com.google.inject.internal.util.$ImmutableList getAddedAspects()>();

        $z0 = virtualinvoke $r13.<com.google.inject.internal.util.$ImmutableList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r20 = $r12;

        goto label2;

     label1:
        $r14 = virtualinvoke $r9.<com.google.inject.internal.MembersInjectorImpl: com.google.inject.internal.util.$ImmutableList getAddedAspects()>();

        $r15 = staticinvoke <com.google.inject.internal.util.$Iterables: java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable)>($r12, $r14);

        $r20 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOf(java.lang.Iterable)>($r15);

     label2:
        $r16 = new com.google.inject.internal.ProxyFactory;

        specialinvoke $r16.<com.google.inject.internal.ProxyFactory: void <init>(com.google.inject.spi.InjectionPoint,java.lang.Iterable)>(r2, $r20);

        virtualinvoke r0.<com.google.inject.internal.Errors: void throwIfNewErrors(int)>($i0);

        $r17 = new com.google.inject.internal.ConstructorInjector;

        $r18 = virtualinvoke $r9.<com.google.inject.internal.MembersInjectorImpl: com.google.inject.internal.util.$ImmutableSet getInjectionPoints()>();

        $r19 = interfaceinvoke $r16.<com.google.inject.internal.ConstructionProxyFactory: com.google.inject.internal.ConstructionProxy create()>();

        specialinvoke $r17.<com.google.inject.internal.ConstructorInjector: void <init>(java.util.Set,com.google.inject.internal.ConstructionProxy,com.google.inject.internal.SingleParameterInjector[],com.google.inject.internal.MembersInjectorImpl)>($r18, $r19, $r5, $r9);

        return $r17;
    }

    static com.google.inject.internal.ConstructorInjector access$000(com.google.inject.internal.ConstructorInjectorStore, com.google.inject.spi.InjectionPoint, com.google.inject.internal.Errors) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.Errors r2;
        com.google.inject.internal.ConstructorInjector $r3;
        com.google.inject.spi.InjectionPoint r1;
        com.google.inject.internal.ConstructorInjectorStore r0;

        r0 := @parameter0: com.google.inject.internal.ConstructorInjectorStore;

        r1 := @parameter1: com.google.inject.spi.InjectionPoint;

        r2 := @parameter2: com.google.inject.internal.Errors;

        $r3 = specialinvoke r0.<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.ConstructorInjector createConstructor(com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>(r1, r2);

        return $r3;
    }
}
