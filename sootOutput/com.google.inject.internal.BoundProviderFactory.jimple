final class com.google.inject.internal.BoundProviderFactory extends java.lang.Object implements com.google.inject.internal.InternalFactory, com.google.inject.internal.CreationListener
{
    private final com.google.inject.internal.InjectorImpl injector;
    final com.google.inject.Key providerKey;
    final java.lang.Object source;
    private com.google.inject.internal.InternalFactory providerFactory;

    void <init>(com.google.inject.internal.InjectorImpl, com.google.inject.Key, java.lang.Object)
    {
        com.google.inject.internal.BoundProviderFactory r0;
        com.google.inject.internal.InjectorImpl r1;
        com.google.inject.Key r2;
        java.lang.Object r3;

        r0 := @this: com.google.inject.internal.BoundProviderFactory;

        r1 := @parameter0: com.google.inject.internal.InjectorImpl;

        r2 := @parameter1: com.google.inject.Key;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.internal.InjectorImpl injector> = r1;

        r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.Key providerKey> = r2;

        r0.<com.google.inject.internal.BoundProviderFactory: java.lang.Object source> = r3;

        return;
    }

    public void notify(com.google.inject.internal.Errors)
    {
        com.google.inject.internal.BoundProviderFactory r0;
        com.google.inject.Key $r4;
        com.google.inject.internal.InjectorImpl$JitLimitation $r6;
        com.google.inject.internal.Errors r1, $r5, $r9;
        com.google.inject.internal.InjectorImpl $r3;
        com.google.inject.internal.ErrorsException $r8;
        com.google.inject.internal.InternalFactory $r7;
        java.lang.Object $r2;

        r0 := @this: com.google.inject.internal.BoundProviderFactory;

        r1 := @parameter0: com.google.inject.internal.Errors;

     label1:
        $r3 = r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.internal.InjectorImpl injector>;

        $r4 = r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.Key providerKey>;

        $r2 = r0.<com.google.inject.internal.BoundProviderFactory: java.lang.Object source>;

        $r5 = virtualinvoke r1.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>($r2);

        $r6 = <com.google.inject.internal.InjectorImpl$JitLimitation: com.google.inject.internal.InjectorImpl$JitLimitation NEW_OR_EXISTING_JIT>;

        $r7 = virtualinvoke $r3.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.InternalFactory getInternalFactory(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>($r4, $r5, $r6);

        r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.internal.InternalFactory providerFactory> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<com.google.inject.internal.ErrorsException: com.google.inject.internal.Errors getErrors()>();

        virtualinvoke r1.<com.google.inject.internal.Errors: com.google.inject.internal.Errors merge(com.google.inject.internal.Errors)>($r9);

     label4:
        return;

        catch com.google.inject.internal.ErrorsException from label1 to label2 with label3;
    }

    public java.lang.Object get(com.google.inject.internal.Errors, com.google.inject.internal.InternalContext, com.google.inject.spi.Dependency, boolean) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.BoundProviderFactory r0;
        javax.inject.Provider r7;
        com.google.inject.internal.InternalContext r3;
        com.google.inject.Key $r1;
        com.google.inject.internal.ErrorsException $r13;
        boolean z0;
        com.google.inject.spi.Dependency r4;
        java.lang.RuntimeException $r11;
        com.google.inject.internal.Errors $r2, $r12, r14;
        com.google.inject.internal.InternalFactory $r5;
        java.lang.Object $r6, $r8, $r9, $r10;

        r0 := @this: com.google.inject.internal.BoundProviderFactory;

        r14 := @parameter0: com.google.inject.internal.Errors;

        r3 := @parameter1: com.google.inject.internal.InternalContext;

        r4 := @parameter2: com.google.inject.spi.Dependency;

        z0 := @parameter3: boolean;

        $r1 = r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.Key providerKey>;

        $r2 = virtualinvoke r14.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>($r1);

        $r5 = r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.internal.InternalFactory providerFactory>;

        $r6 = interfaceinvoke $r5.<com.google.inject.internal.InternalFactory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>($r2, r3, r4, 1);

        r7 = (javax.inject.Provider) $r6;

     label1:
        $r8 = interfaceinvoke r7.<javax.inject.Provider: java.lang.Object get()>();

        $r9 = r0.<com.google.inject.internal.BoundProviderFactory: java.lang.Object source>;

        $r10 = virtualinvoke $r2.<com.google.inject.internal.Errors: java.lang.Object checkForNull(java.lang.Object,java.lang.Object,com.google.inject.spi.Dependency)>($r8, $r9, r4);

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r2.<com.google.inject.internal.Errors: com.google.inject.internal.Errors errorInProvider(java.lang.RuntimeException)>($r11);

        $r13 = virtualinvoke $r12.<com.google.inject.internal.Errors: com.google.inject.internal.ErrorsException toException()>();

        throw $r13;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.google.inject.internal.BoundProviderFactory r0;
        com.google.inject.Key $r1;
        java.lang.String $r2;

        r0 := @this: com.google.inject.internal.BoundProviderFactory;

        $r1 = r0.<com.google.inject.internal.BoundProviderFactory: com.google.inject.Key providerKey>;

        $r2 = virtualinvoke $r1.<com.google.inject.Key: java.lang.String toString()>();

        return $r2;
    }
}
