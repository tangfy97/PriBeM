public class org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator extends org.apache.lucene.util.ByteBlockPool$Allocator
{
    private final org.apache.lucene.util.Counter bytesUsed;

    public void <init>(org.apache.lucene.util.Counter)
    {
        int $i1;
        org.apache.lucene.util.Counter r1;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator r0;

        r0 := @this: org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        r1 := @parameter0: org.apache.lucene.util.Counter;

        $i1 = (int) 32768;

        specialinvoke r0.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: void <init>(int,org.apache.lucene.util.Counter)>($i1, r1);

        return;
    }

    public void <init>(int, org.apache.lucene.util.Counter)
    {
        int i0;
        org.apache.lucene.util.Counter r1;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator r0;

        r0 := @this: org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.util.Counter;

        specialinvoke r0.<org.apache.lucene.util.ByteBlockPool$Allocator: void <init>(int)>(i0);

        r0.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: org.apache.lucene.util.Counter bytesUsed> = r1;

        return;
    }

    public byte[] getByteBlock()
    {
        byte[] $r2;
        org.apache.lucene.util.Counter $r1;
        int $i0, $i2;
        long $l1;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator r0;

        r0 := @this: org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        $r1 = r0.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: org.apache.lucene.util.Counter bytesUsed>;

        $i0 = r0.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: int blockSize>;

        $l1 = (long) $i0;

        virtualinvoke $r1.<org.apache.lucene.util.Counter: long addAndGet(long)>($l1);

        $i2 = r0.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: int blockSize>;

        $r2 = newarray (byte)[$i2];

        return $r2;
    }

    public void recycleByteBlocks(byte[][], int, int)
    {
        long $l6;
        byte[][] r2;
        org.apache.lucene.util.Counter $r1;
        int i0, i1, $i2, $i3, $i4, $i5, i7;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator r0;

        r0 := @this: org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        r2 := @parameter0: byte[][];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: org.apache.lucene.util.Counter bytesUsed>;

        $i3 = i0 - i1;

        $i2 = r0.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: int blockSize>;

        $i4 = $i3 * $i2;

        $i5 = neg $i4;

        $l6 = (long) $i5;

        virtualinvoke $r1.<org.apache.lucene.util.Counter: long addAndGet(long)>($l6);

        i7 = i1;

     label1:
        if i7 >= i0 goto label2;

        r2[i7] = null;

        i7 = i7 + 1;

        goto label1;

     label2:
        return;
    }
}
