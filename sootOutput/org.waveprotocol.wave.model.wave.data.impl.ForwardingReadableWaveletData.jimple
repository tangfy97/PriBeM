public abstract class org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.ReadableWaveletData
{

    public void <init>()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate();

    public long getCreationTime()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        long $l0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $l0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: long getCreationTime()>();

        return $l0;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getCreator()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.wave.ParticipantId getCreator()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getHashedVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.version.HashedVersion getHashedVersion()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r3;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)>(r2);

        return $r3;
    }

    public java.util.Set getDocumentIds()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        java.util.Set $r2;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: java.util.Set getDocumentIds()>();

        return $r2;
    }

    public long getLastModifiedTime()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        long $l0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $l0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: long getLastModifiedTime()>();

        return $l0;
    }

    public java.util.Set getParticipants()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        java.util.Set $r2;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: java.util.Set getParticipants()>();

        return $r2;
    }

    public long getVersion()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        long $l0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $l0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: long getVersion()>();

        return $l0;
    }

    public org.waveprotocol.wave.model.id.WaveId getWaveId()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        org.waveprotocol.wave.model.id.WaveId $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.id.WaveletId getWaveletId()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        org.waveprotocol.wave.model.id.WaveletId $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        return $r2;
    }
}
