public class org.apache.lucene.queryparser.xml.builders.SpanOrBuilder extends org.apache.lucene.queryparser.xml.builders.SpanBuilderBase
{
    private final org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder factory;

    public void <init>(org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)
    {
        org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder r1;
        org.apache.lucene.queryparser.xml.builders.SpanOrBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.SpanOrBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder;

        specialinvoke r0.<org.apache.lucene.queryparser.xml.builders.SpanBuilderBase: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.builders.SpanOrBuilder: org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder factory> = r1;

        return;
    }

    public org.apache.lucene.search.spans.SpanQuery getSpanQuery(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        java.lang.Object[] $r3;
        org.apache.lucene.queryparser.xml.builders.SpanOrBuilder r5;
        org.apache.lucene.search.spans.SpanQuery[] $r2, r10;
        java.util.ArrayList $r0;
        short $s1;
        org.w3c.dom.Element r1, $r6;
        org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder $r7;
        org.w3c.dom.Node r9;
        int $i0;
        float $f0;
        org.apache.lucene.search.spans.SpanOrQuery $r4;
        org.apache.lucene.search.spans.SpanQuery $r8;

        r5 := @this: org.apache.lucene.queryparser.xml.builders.SpanOrBuilder;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r9 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r9 == null goto label3;

        $s1 = interfaceinvoke r9.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label2;

        $r7 = r5.<org.apache.lucene.queryparser.xml.builders.SpanOrBuilder: org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder factory>;

        $r6 = (org.w3c.dom.Element) r9;

        $r8 = interfaceinvoke $r7.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder: org.apache.lucene.search.spans.SpanQuery getSpanQuery(org.w3c.dom.Element)>($r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        r9 = interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = newarray (org.apache.lucene.search.spans.SpanQuery)[$i0];

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r10 = (org.apache.lucene.search.spans.SpanQuery[]) $r3;

        $r4 = new org.apache.lucene.search.spans.SpanOrQuery;

        specialinvoke $r4.<org.apache.lucene.search.spans.SpanOrQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[])>(r10);

        $f0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: float getAttribute(org.w3c.dom.Element,java.lang.String,float)>(r1, "boost", 1.0F);

        virtualinvoke $r4.<org.apache.lucene.search.spans.SpanOrQuery: void setBoost(float)>($f0);

        return $r4;
    }
}
