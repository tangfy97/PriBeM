public class org.apache.cxf.service.invoker.PooledFactory extends java.lang.Object implements org.apache.cxf.service.invoker.Factory
{
    java.util.concurrent.BlockingQueue pool;
    org.apache.cxf.service.invoker.Factory factory;
    int count;
    int max;
    boolean createMore;

    public void <init>(java.lang.Class, int)
    {
        org.apache.cxf.service.invoker.PooledFactory r0;
        org.apache.cxf.service.invoker.PerRequestFactory $r1;
        int i0;
        java.lang.Class r2;

        r0 := @this: org.apache.cxf.service.invoker.PooledFactory;

        r2 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r1 = new org.apache.cxf.service.invoker.PerRequestFactory;

        specialinvoke $r1.<org.apache.cxf.service.invoker.PerRequestFactory: void <init>(java.lang.Class)>(r2);

        specialinvoke r0.<org.apache.cxf.service.invoker.PooledFactory: void <init>(org.apache.cxf.service.invoker.Factory,int,boolean)>($r1, i0, 0);

        return;
    }

    public void <init>(org.apache.cxf.service.invoker.Factory, int)
    {
        org.apache.cxf.service.invoker.PooledFactory r0;
        int i0;
        org.apache.cxf.service.invoker.Factory r1;

        r0 := @this: org.apache.cxf.service.invoker.PooledFactory;

        r1 := @parameter0: org.apache.cxf.service.invoker.Factory;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.cxf.service.invoker.PooledFactory: void <init>(org.apache.cxf.service.invoker.Factory,int,boolean)>(r1, i0, 0);

        return;
    }

    public void <init>(org.apache.cxf.service.invoker.Factory, int, boolean)
    {
        org.apache.cxf.service.invoker.PooledFactory r0;
        java.util.concurrent.ArrayBlockingQueue $r2;
        int i0;
        org.apache.cxf.service.invoker.Factory r1;
        boolean z0;

        r0 := @this: org.apache.cxf.service.invoker.PooledFactory;

        r1 := @parameter0: org.apache.cxf.service.invoker.Factory;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.service.invoker.PooledFactory: org.apache.cxf.service.invoker.Factory factory> = r1;

        if i0 >= 1 goto label1;

        i0 = 16;

     label1:
        $r2 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(i0, 1);

        r0.<org.apache.cxf.service.invoker.PooledFactory: java.util.concurrent.BlockingQueue pool> = $r2;

        r0.<org.apache.cxf.service.invoker.PooledFactory: int max> = i0;

        r0.<org.apache.cxf.service.invoker.PooledFactory: int count> = 0;

        r0.<org.apache.cxf.service.invoker.PooledFactory: boolean createMore> = z0;

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.cxf.service.invoker.PooledFactory r0;
        java.util.concurrent.ArrayBlockingQueue $r1;
        java.util.Collection r2;
        int $i0;
        java.util.concurrent.BlockingQueue $r3;

        r0 := @this: org.apache.cxf.service.invoker.PooledFactory;

        r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ArrayBlockingQueue;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        specialinvoke $r1.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>($i0, 1);

        r0.<org.apache.cxf.service.invoker.PooledFactory: java.util.concurrent.BlockingQueue pool> = $r1;

        $r3 = r0.<org.apache.cxf.service.invoker.PooledFactory: java.util.concurrent.BlockingQueue pool>;

        interfaceinvoke $r3.<java.util.concurrent.BlockingQueue: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    public java.lang.Object create(org.apache.cxf.message.Exchange) throws java.lang.Throwable
    {
        java.util.concurrent.BlockingQueue $r2, $r4;
        org.apache.cxf.message.Exchange r6;
        org.apache.cxf.service.invoker.Factory $r1;
        org.apache.cxf.service.invoker.PooledFactory r0;
        int $i0, $i1;
        java.lang.Object $r3, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.invoker.PooledFactory;

        r6 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = r0.<org.apache.cxf.service.invoker.PooledFactory: org.apache.cxf.service.invoker.Factory factory>;

        if $r1 == null goto label1;

        $i1 = r0.<org.apache.cxf.service.invoker.PooledFactory: int count>;

        $i0 = r0.<org.apache.cxf.service.invoker.PooledFactory: int max>;

        if $i1 < $i0 goto label2;

        $z0 = r0.<org.apache.cxf.service.invoker.PooledFactory: boolean createMore>;

        if $z0 != 0 goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.service.invoker.PooledFactory: java.util.concurrent.BlockingQueue pool>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        return $r3;

     label2:
        $r4 = r0.<org.apache.cxf.service.invoker.PooledFactory: java.util.concurrent.BlockingQueue pool>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.BlockingQueue: java.lang.Object poll()>();

        if $r5 != null goto label3;

        $r7 = virtualinvoke r0.<org.apache.cxf.service.invoker.PooledFactory: java.lang.Object createObject(org.apache.cxf.message.Exchange)>(r6);

        return $r7;

     label3:
        return $r5;
    }

    protected synchronized java.lang.Object createObject(org.apache.cxf.message.Exchange) throws java.lang.Throwable
    {
        java.util.concurrent.BlockingQueue $r2;
        org.apache.cxf.message.Exchange r4;
        org.apache.cxf.service.invoker.Factory $r1, $r5;
        org.apache.cxf.service.invoker.PooledFactory r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3, $r6;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.invoker.PooledFactory;

        r4 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = r0.<org.apache.cxf.service.invoker.PooledFactory: org.apache.cxf.service.invoker.Factory factory>;

        if $r1 == null goto label1;

        $i1 = r0.<org.apache.cxf.service.invoker.PooledFactory: int count>;

        $i0 = r0.<org.apache.cxf.service.invoker.PooledFactory: int max>;

        if $i1 < $i0 goto label2;

        $z0 = r0.<org.apache.cxf.service.invoker.PooledFactory: boolean createMore>;

        if $z0 != 0 goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.service.invoker.PooledFactory: java.util.concurrent.BlockingQueue pool>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        return $r3;

     label2:
        $i2 = r0.<org.apache.cxf.service.invoker.PooledFactory: int count>;

        $i3 = $i2 + 1;

        r0.<org.apache.cxf.service.invoker.PooledFactory: int count> = $i3;

        $r5 = r0.<org.apache.cxf.service.invoker.PooledFactory: org.apache.cxf.service.invoker.Factory factory>;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.service.invoker.Factory: java.lang.Object create(org.apache.cxf.message.Exchange)>(r4);

        return $r6;
    }

    public void release(org.apache.cxf.message.Exchange, java.lang.Object)
    {
        org.apache.cxf.service.invoker.PooledFactory r0;
        java.lang.Object r1;
        java.util.concurrent.BlockingQueue $r2;
        org.apache.cxf.message.Exchange r3;

        r0 := @this: org.apache.cxf.service.invoker.PooledFactory;

        r3 := @parameter0: org.apache.cxf.message.Exchange;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.cxf.service.invoker.PooledFactory: java.util.concurrent.BlockingQueue pool>;

        interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: boolean offer(java.lang.Object)>(r1);

        return;
    }
}
