public class javax.xml.bind.util.ValidationEventCollector extends java.lang.Object implements javax.xml.bind.ValidationEventHandler
{
    private final java.util.List events;

    public void <init>()
    {
        javax.xml.bind.util.ValidationEventCollector r0;
        java.util.ArrayList $r1;

        r0 := @this: javax.xml.bind.util.ValidationEventCollector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<javax.xml.bind.util.ValidationEventCollector: java.util.List events> = $r1;

        return;
    }

    public javax.xml.bind.ValidationEvent[] getEvents()
    {
        java.util.List $r1, $r2;
        javax.xml.bind.util.ValidationEventCollector r0;
        java.lang.Object[] $r4;
        int $i0;
        javax.xml.bind.ValidationEvent[] $r3, $r5;

        r0 := @this: javax.xml.bind.util.ValidationEventCollector;

        $r2 = r0.<javax.xml.bind.util.ValidationEventCollector: java.util.List events>;

        $r1 = r0.<javax.xml.bind.util.ValidationEventCollector: java.util.List events>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (javax.xml.bind.ValidationEvent)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (javax.xml.bind.ValidationEvent[]) $r4;

        return $r5;
    }

    public void reset()
    {
        java.util.List $r1;
        javax.xml.bind.util.ValidationEventCollector r0;

        r0 := @this: javax.xml.bind.util.ValidationEventCollector;

        $r1 = r0.<javax.xml.bind.util.ValidationEventCollector: java.util.List events>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public boolean hasEvents()
    {
        java.util.List $r1;
        javax.xml.bind.util.ValidationEventCollector r0;
        boolean $z0, $z1;

        r0 := @this: javax.xml.bind.util.ValidationEventCollector;

        $r1 = r0.<javax.xml.bind.util.ValidationEventCollector: java.util.List events>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean handleEvent(javax.xml.bind.ValidationEvent)
    {
        java.lang.Integer $r3;
        javax.xml.bind.ValidationEvent r1;
        java.util.List $r2;
        javax.xml.bind.util.ValidationEventCollector r0;
        int $i0, $i1;
        java.lang.String $r4;
        boolean z0;

        r0 := @this: javax.xml.bind.util.ValidationEventCollector;

        r1 := @parameter0: javax.xml.bind.ValidationEvent;

        $r2 = r0.<javax.xml.bind.util.ValidationEventCollector: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        z0 = 1;

        $i0 = interfaceinvoke r1.<javax.xml.bind.ValidationEvent: int getSeverity()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        z0 = 1;

        goto label5;

     label2:
        z0 = 1;

        goto label5;

     label3:
        z0 = 0;

        goto label5;

     label4:
        $i1 = interfaceinvoke r1.<javax.xml.bind.ValidationEvent: int getSeverity()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <javax.xml.bind.util.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("ValidationEventCollector.UnrecognizedSeverity", $r3);

        staticinvoke <javax.xml.bind.util.ValidationEventCollector: void _assert(boolean,java.lang.String)>(0, $r4);

     label5:
        return z0;
    }

    private static void _assert(boolean, java.lang.String)
    {
        java.lang.InternalError $r0;
        java.lang.String r1;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        if z0 != 0 goto label1;

        $r0 = new java.lang.InternalError;

        specialinvoke $r0.<java.lang.InternalError: void <init>(java.lang.String)>(r1);

        throw $r0;

     label1:
        return;
    }
}
