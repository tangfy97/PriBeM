public class org.waveprotocol.wave.client.editor.content.misc.AnnotationHelper extends java.lang.Object
{
    private static final int POSITIONS_TO_LOOK_BACK;

    private void <init>()
    {
        org.waveprotocol.wave.client.editor.content.misc.AnnotationHelper r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.misc.AnnotationHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.model.document.util.Range getRangePrecedingElement(org.waveprotocol.wave.model.document.MutableDocument, java.lang.Object, java.lang.String)
    {
        int $i0;
        org.waveprotocol.wave.model.document.util.Range $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.MutableDocument r0;
        java.lang.String r2;

        r0 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: int getLocation(java.lang.Object)>(r1);

        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: int getLocation(java.lang.Object)>(r1);

        $r3 = staticinvoke <org.waveprotocol.wave.client.editor.content.misc.AnnotationHelper: org.waveprotocol.wave.model.document.util.Range getRangePrecedingLocation(org.waveprotocol.wave.model.document.MutableDocument,int,java.lang.String)>(r0, $i0, r2);

        return $r3;
    }

    public static org.waveprotocol.wave.model.document.util.Range getRangePrecedingLocation(org.waveprotocol.wave.model.document.MutableDocument, int, java.lang.String)
    {
        org.waveprotocol.wave.model.document.MutableDocument r0;
        int $i0, $i1, i2, i3, $i5, $i7;
        org.waveprotocol.wave.model.document.util.Range $r6;
        java.lang.Object $r3;
        java.lang.String r1, $r4, r5;

        r0 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        i2 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r5 = null;

        i3 = 3;

     label1:
        if i2 <= 0 goto label2;

        $i1 = i2 - 1;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getAnnotation(int,java.lang.String)>($i1, r1);

        $r4 = (java.lang.String) $r3;

        r5 = $r4;

        if $r4 != null goto label2;

        if i3 < 0 goto label2;

        $i5 = (int) -1;

        i2 = i2 + $i5;

        $i7 = (int) -1;

        i3 = i3 + $i7;

        goto label1;

     label2:
        if r5 != null goto label3;

        return null;

     label3:
        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: int lastAnnotationChange(int,int,java.lang.String,java.lang.Object)>(0, i2, r1, r5);

        $r6 = new org.waveprotocol.wave.model.document.util.Range;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.util.Range: void <init>(int,int)>($i0, i2);

        return $r6;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.client.editor.content.misc.AnnotationHelper: int POSITIONS_TO_LOOK_BACK> = 3;

        return;
    }
}
