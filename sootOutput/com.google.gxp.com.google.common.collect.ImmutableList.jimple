public abstract class com.google.gxp.com.google.common.collect.ImmutableList extends com.google.gxp.com.google.common.collect.ImmutableCollection implements java.util.List, java.util.RandomAccess
{
    private static final com.google.gxp.com.google.common.collect.ImmutableList EMPTY_IMMUTABLE_LIST;

    public static com.google.gxp.com.google.common.collect.ImmutableList of()
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r0;

        $r0 = <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList EMPTY_IMMUTABLE_LIST>;

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object)
    {
        java.lang.Object[] $r1, $r3;
        java.lang.Object r2;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.gxp.com.google.common.collect.ImmutableList$1)>($r3, null);

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r4;
        java.lang.Object r2, r3;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.gxp.com.google.common.collect.ImmutableList$1)>($r4, null);

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r5;
        java.lang.Object r2, r3, r4;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.gxp.com.google.common.collect.ImmutableList$1)>($r5, null);

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r6;
        java.lang.Object r2, r3, r4, r5;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r1[3] = r5;

        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.gxp.com.google.common.collect.ImmutableList$1)>($r6, null);

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r7;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r0;
        java.lang.Object r2, r3, r4, r5, r6;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        r6 := @parameter4: java.lang.Object;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[5];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r1[3] = r5;

        $r1[4] = r6;

        $r7 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.gxp.com.google.common.collect.ImmutableList$1)>($r7, null);

        return $r0;
    }

    public static transient com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object[])
    {
        java.lang.Object[] r0, $r1;
        int $i0;
        com.google.gxp.com.google.common.collect.ImmutableList $r2;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r3;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList of()>();

        goto label2;

     label1:
        $r3 = new com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        $r2 = $r3;

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>(r0);

        specialinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.gxp.com.google.common.collect.ImmutableList$1)>($r1, null);

     label2:
        return $r2;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)
    {
        java.util.Collection $r1;
        com.google.gxp.com.google.common.collect.ImmutableList $r2, r3;
        java.lang.Iterable r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof com.google.gxp.com.google.common.collect.ImmutableList;

        if $z0 == 0 goto label1;

        r3 = (com.google.gxp.com.google.common.collect.ImmutableList) r0;

        return r3;

     label1:
        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Collections2: java.util.Collection toCollection(java.lang.Iterable)>(r0);

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOfInternal(java.util.Collection)>($r1);

        return $r2;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.util.Iterator)
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r2;
        java.util.Iterator r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>(r0);

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOfInternal(java.util.Collection)>($r1);

        return $r2;
    }

    private static com.google.gxp.com.google.common.collect.ImmutableList copyOfInternal(java.util.Collection)
    {
        java.lang.Object[] $r1;
        java.util.Collection r0;
        int $i0;
        com.google.gxp.com.google.common.collect.ImmutableList $r2;
        com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList $r3;

        r0 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList of()>();

        goto label2;

     label1:
        $r3 = new com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList;

        $r2 = $r3;

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Iterable,int)>(r0, $i0);

        specialinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.gxp.com.google.common.collect.ImmutableList$1)>($r1, null);

     label2:
        return $r2;
    }

    private void <init>()
    {
        com.google.gxp.com.google.common.collect.ImmutableList r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableCollection: void <init>()>();

        return;
    }

    public abstract int indexOf(java.lang.Object);

    public abstract int lastIndexOf(java.lang.Object);

    public abstract com.google.gxp.com.google.common.collect.ImmutableList subList(int, int);

    public final boolean addAll(int, java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r2;
        int i0;
        com.google.gxp.com.google.common.collect.ImmutableList r1;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final java.lang.Object set(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        int i0;
        com.google.gxp.com.google.common.collect.ImmutableList r1;
        java.lang.Object r2;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final void add(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        int i0;
        com.google.gxp.com.google.common.collect.ImmutableList r1;
        java.lang.Object r2;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final java.lang.Object remove(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        com.google.gxp.com.google.common.collect.ImmutableList r1;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private static transient java.lang.Object[] copyIntoArray(java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        java.lang.NullPointerException $r3;
        int $i0, i1, $i2, i3, i4;
        java.lang.Object r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Object)[$i0];

        i3 = 0;

        i1 = lengthof r0;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        r2 = r0[i4];

        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at index ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $i2 = i3;

        i3 = i3 + 1;

        r1[$i2] = r2;

        i4 = i4 + 1;

        goto label1;

     label3:
        return r1;
    }

    private static java.lang.Object[] copyIntoArray(java.lang.Iterable, int)
    {
        java.lang.Object[] r0;
        java.util.Iterator $r2;
        java.lang.Iterable r1;
        java.lang.NullPointerException $r4;
        int i0, $i1, i2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r1 := @parameter0: java.lang.Iterable;

        i0 := @parameter1: int;

        r0 = newarray (java.lang.Object)[i0];

        i2 = 0;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at index ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        $i1 = i2;

        i2 = i2 + 1;

        r0[$i1] = $r3;

        goto label1;

     label3:
        return r0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException
    {
        java.io.ObjectInputStream r2;
        java.io.InvalidObjectException $r0;
        com.google.gxp.com.google.common.collect.ImmutableList r1;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        r2 := @parameter0: java.io.ObjectInputStream;

        $r0 = new java.io.InvalidObjectException;

        specialinvoke $r0.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Use SerializedForm");

        throw $r0;
    }

    java.lang.Object writeReplace()
    {
        com.google.gxp.com.google.common.collect.ImmutableList r1;
        java.lang.Object[] $r2;
        com.google.gxp.com.google.common.collect.ImmutableList$SerializedForm $r0;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableList$SerializedForm;

        $r2 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object[] toArray()>();

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableList$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r0;
    }

    public volatile java.util.List subList(int, int)
    {
        int i0, i1;
        com.google.gxp.com.google.common.collect.ImmutableList r0, $r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList subList(int,int)>(i0, i1);

        return $r1;
    }

    void <init>(com.google.gxp.com.google.common.collect.ImmutableList$1)
    {
        com.google.gxp.com.google.common.collect.ImmutableList r0;
        com.google.gxp.com.google.common.collect.ImmutableList$1 r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableList;

        r1 := @parameter0: com.google.gxp.com.google.common.collect.ImmutableList$1;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableList: void <init>()>();

        return;
    }

    static com.google.gxp.com.google.common.collect.ImmutableList access$300()
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r0;

        $r0 = <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList EMPTY_IMMUTABLE_LIST>;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.gxp.com.google.common.collect.ImmutableList$EmptyImmutableList $r0;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableList$EmptyImmutableList;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableList$EmptyImmutableList: void <init>(com.google.gxp.com.google.common.collect.ImmutableList$1)>(null);

        <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList EMPTY_IMMUTABLE_LIST> = $r0;

        return;
    }
}
