final class org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart extends org.apache.lucene.util.BytesRefHash$DirectBytesStartArray
{
    float[] boost;
    org.apache.lucene.index.TermContext[] termState;
    static final boolean $assertionsDisabled;

    public void <init>(int)
    {
        int i0;
        org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart r0;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: void <init>(int)>(i0);

        return;
    }

    public int[] init()
    {
        float[] $r2, $r6;
        java.lang.AssertionError $r5;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart r0;
        org.apache.lucene.index.TermContext[] $r3, $r4;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart;

        $r1 = specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] init()>();

        $i0 = lengthof $r1;

        $i1 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i0, 4);

        $r2 = newarray (float)[$i1];

        r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost> = $r2;

        $i3 = lengthof $r1;

        $i2 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i4 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i3, $i2);

        $r3 = newarray (org.apache.lucene.index.TermContext)[$i4];

        r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState> = $r3;

        $z0 = <org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r4 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i6 = lengthof $r4;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label1;

        $r6 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost>;

        $i8 = lengthof $r6;

        $i7 = lengthof $r1;

        if $i8 >= $i7 goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        return $r1;
    }

    public int[] grow()
    {
        float[] $r2, $r3, $r7;
        java.lang.AssertionError $r6;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0;
        org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart r0;
        org.apache.lucene.index.TermContext[] $r4, $r5, r8, $r9, $r10;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart;

        $r1 = specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] grow()>();

        $r2 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <org.apache.lucene.util.ArrayUtil: float[] grow(float[],int)>($r2, $i0);

        r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost> = $r3;

        $r4 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i2 = lengthof $r4;

        $i1 = lengthof $r1;

        if $i2 >= $i1 goto label1;

        $i8 = lengthof $r1;

        $i7 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i9 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i8, $i7);

        r8 = newarray (org.apache.lucene.index.TermContext)[$i9];

        $r10 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState>;

        $r9 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i10 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r8, 0, $i10);

        r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState> = r8;

     label1:
        $z0 = <org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r5 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i4 = lengthof $r5;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        $r7 = r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost>;

        $i6 = lengthof $r7;

        $i5 = lengthof $r1;

        if $i6 >= $i5 goto label3;

     label2:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        return $r1;
    }

    public int[] clear()
    {
        int[] $r1;
        org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart r0;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart;

        r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost> = null;

        r0.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState> = null;

        $r1 = specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] clear()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/ScoringRewrite;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: boolean $assertionsDisabled> = $z1;

        return;
    }
}
