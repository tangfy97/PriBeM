class com.jhlabs.image.OctTreeQuantizer$OctTreeNode extends java.lang.Object
{
    int children;
    int level;
    com.jhlabs.image.OctTreeQuantizer$OctTreeNode parent;
    com.jhlabs.image.OctTreeQuantizer$OctTreeNode[] leaf;
    boolean isLeaf;
    int count;
    int totalRed;
    int totalGreen;
    int totalBlue;
    int index;
    private final com.jhlabs.image.OctTreeQuantizer this$0;

    void <init>(com.jhlabs.image.OctTreeQuantizer)
    {
        com.jhlabs.image.OctTreeQuantizer$OctTreeNode[] $r2;
        com.jhlabs.image.OctTreeQuantizer r1;
        com.jhlabs.image.OctTreeQuantizer$OctTreeNode r0;

        r0 := @this: com.jhlabs.image.OctTreeQuantizer$OctTreeNode;

        r1 := @parameter0: com.jhlabs.image.OctTreeQuantizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: com.jhlabs.image.OctTreeQuantizer this$0> = r1;

        $r2 = newarray (com.jhlabs.image.OctTreeQuantizer$OctTreeNode)[8];

        r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: com.jhlabs.image.OctTreeQuantizer$OctTreeNode[] leaf> = $r2;

        return;
    }

    public void list(java.io.PrintStream, int)
    {
        com.jhlabs.image.OctTreeQuantizer$OctTreeNode r0, $r14, $r17;
        com.jhlabs.image.OctTreeQuantizer$OctTreeNode[] $r13, $r15;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r18, $r20, $r21, $r22;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        java.lang.String $r12, $r23;
        java.io.PrintStream $r2, r16, $r19, $r24;

        r0 := @this: com.jhlabs.image.OctTreeQuantizer$OctTreeNode;

        r16 := @parameter0: java.io.PrintStream;

        i0 := @parameter1: int;

        i16 = 0;

     label1:
        if i16 >= i0 goto label2;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r24.<java.io.PrintStream: void print(char)>(32);

        i16 = i16 + 1;

        goto label1;

     label2:
        $i1 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int count>;

        if $i1 != 0 goto label3;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $i14 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int index>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i14);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": count=");

        $i15 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int count>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i15);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        goto label4;

     label3:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i2 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int index>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": count=");

        $i3 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int count>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" red=");

        $i5 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int totalRed>;

        $i4 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int count>;

        $i6 = $i5 / $i4;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" green=");

        $i8 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int totalGreen>;

        $i7 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int count>;

        $i9 = $i8 / $i7;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" blue=");

        $i11 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int totalBlue>;

        $i10 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: int count>;

        $i12 = $i11 / $i10;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label4:
        i17 = 0;

     label5:
        if i17 >= 8 goto label7;

        $r13 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: com.jhlabs.image.OctTreeQuantizer$OctTreeNode[] leaf>;

        $r14 = $r13[i17];

        if $r14 == null goto label6;

        $r15 = r0.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: com.jhlabs.image.OctTreeQuantizer$OctTreeNode[] leaf>;

        $r17 = $r15[i17];

        $i13 = i0 + 2;

        virtualinvoke $r17.<com.jhlabs.image.OctTreeQuantizer$OctTreeNode: void list(java.io.PrintStream,int)>(r16, $i13);

     label6:
        i17 = i17 + 1;

        goto label5;

     label7:
        return;
    }
}
