class com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement extends java.lang.Object
{
    int varCount;
    com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars;
    com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj;
    com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred;
    com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj;
    int pattern;
    final com.hp.hpl.jena.graph.impl.GraphMatcher this$0;

    void <init>(com.hp.hpl.jena.graph.impl.GraphMatcher, com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.Node $r4, $r6, $r8;
        byte b10;
        int[] r34;
        java.util.Map $r2;
        boolean $z0, $z1;
        java.util.Collection $r17;
        com.hp.hpl.jena.graph.Triple r3;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement r0;
        java.lang.StringBuilder $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i11, $i13, $i15;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] $r13;
        java.lang.String $r32;
        java.io.PrintStream $r20;
        java.util.Iterator $r18;
        com.hp.hpl.jena.graph.impl.GraphMatcher r1;
        java.lang.Object $r33;
        com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource $r5, $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r22, $r25, $r28;

        r0 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.GraphMatcher;

        r3 := @parameter1: com.hp.hpl.jena.graph.Triple;

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Map createHashedMap()>();

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int pattern> = 0;

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $r5 = staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource access$200(com.hp.hpl.jena.graph.impl.GraphMatcher,com.hp.hpl.jena.graph.Node)>(r1, $r4);

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj> = $r5;

        $r6 = virtualinvoke r3.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r7 = staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource access$200(com.hp.hpl.jena.graph.impl.GraphMatcher,com.hp.hpl.jena.graph.Node)>(r1, $r6);

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred> = $r7;

        $r8 = virtualinvoke r3.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        $r9 = staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource access$200(com.hp.hpl.jena.graph.impl.GraphMatcher,com.hp.hpl.jena.graph.Node)>(r1, $r8);

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj> = $r9;

        $r10 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj>;

        staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: void count(java.util.Map,com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource,int)>($r2, $r10, 0);

        $r11 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred>;

        staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: void count(java.util.Map,com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource,int)>($r2, $r11, 2);

        $r12 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj>;

        staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: void count(java.util.Map,com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource,int)>($r2, $r12, 4);

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int varCount> = $i0;

        $i1 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int varCount>;

        $r13 = newarray (com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource)[$i1];

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars> = $r13;

        $r14 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj>;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: void add(com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource)>($r14);

        $r15 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred>;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: void add(com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource)>($r15);

        $r16 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj>;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: void add(com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource)>($r16);

        $r17 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r18 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r33 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r34 = (int[]) $r33;

        i9 = 2;

     label2:
        $i4 = r34[i9];

        $i13 = (int) -1;

        if $i4 != $i13 goto label3;

        $i15 = (int) -1;

        i9 = i9 + $i15;

        goto label2;

     label3:
        if i9 != 0 goto label4;

        b10 = 1;

        goto label5;

     label4:
        b10 = 2;

     label5:
        i11 = 0;

     label6:
        if i11 > i9 goto label7;

        $i7 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int pattern>;

        $i5 = r34[i11];

        $i6 = b10 << $i5;

        $i8 = $i7 | $i6;

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int pattern> = $i8;

        i11 = i11 + 1;

        goto label6;

     label7:
        goto label1;

     label8:
        $i2 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int pattern>;

        $z1 = staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: boolean access$300(int)>($i2);

        if $z1 != 0 goto label9;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s: ");

        $r22 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p: ");

        $r25 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" o: ");

        $r28 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pattern: ");

        $i3 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int pattern>;

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r32);

        staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: void access$400()>();

     label9:
        return;
    }

    private void add(com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource)
    {
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource $r4, $r5, $r8;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement r1;
        int $i0, i1;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] $r2, $r3, $r6, $r7;
        com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource r0;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource;

        $z0 = r0 instanceof com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource;

        if $z0 == 0 goto label5;

        i1 = 0;

     label1:
        $r2 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label4;

        $r3 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars>;

        $r4 = $r3[i1];

        if $r4 == null goto label2;

        $r7 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars>;

        $r8 = $r7[i1];

        if $r8 != r0 goto label3;

     label2:
        $r6 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars>;

        $r5 = (com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource) r0;

        $r6[i1] = $r5;

        return;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: void access$400()>();

     label5:
        return;
    }

    int varPos(com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource)
    {
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource r0, $r4;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement r1;
        int $i0, $i1, $i2, i3;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] $r2, $r3;

        r1 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource;

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $r2 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars>;

        $i0 = lengthof $r2;

        if i3 >= $i0 goto label4;

        $r3 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource[] vars>;

        $r4 = $r3[i3];

        if $r4 != r0 goto label3;

        $i1 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int pattern>;

        $i2 = staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: int access$500(int,int)>(i3, $i1);

        return $i2;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: void access$400()>();

        return 0;
    }

    int myHashCode(com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource r1;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement r0;
        com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource $r2, $r3, $r4;

        r0 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int varPos(com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource)>(r1);

        i10 = $i0;

        $i1 = $i0 & 3;

        if $i1 != 0 goto label1;

        $r4 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj>;

        $i8 = interfaceinvoke $r4.<com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource: int myHashCodeFromStatement()>();

        $i9 = $i8 * 257;

        i10 = $i0 ^ $i9;

     label1:
        $i2 = $i0 & 12;

        if $i2 != 0 goto label2;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred>;

        $i6 = interfaceinvoke $r3.<com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource: int myHashCodeFromStatement()>();

        $i7 = $i6 * 63;

        i10 = i10 ^ $i7;

     label2:
        $i3 = $i0 & 48;

        if $i3 != 0 goto label3;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj>;

        $i4 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource: int myHashCodeFromStatement()>();

        $i5 = $i4 * 65;

        i10 = i10 ^ $i5;

     label3:
        return i10;
    }

    boolean contextualEquals(com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource, com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement, com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource)
    {
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource r1, r3;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement r0, r2;
        com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource;

        r2 := @parameter1: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement;

        r3 := @parameter2: com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int varPos(com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource)>(r1);

        $i1 = virtualinvoke r2.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: int varPos(com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource)>(r3);

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $i2 = $i0 & 3;

        if $i2 != 0 goto label2;

        $r9 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj>;

        $r8 = r2.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource subj>;

        $z2 = interfaceinvoke $r9.<com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource: boolean mightBeEqual(com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource)>($r8);

        if $z2 == 0 goto label5;

     label2:
        $i3 = $i0 & 12;

        if $i3 != 0 goto label3;

        $r7 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred>;

        $r6 = r2.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource pred>;

        $z1 = interfaceinvoke $r7.<com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource: boolean mightBeEqual(com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource)>($r6);

        if $z1 == 0 goto label5;

     label3:
        $i4 = $i0 & 48;

        if $i4 != 0 goto label4;

        $r5 = r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj>;

        $r4 = r2.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonStatement: com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource obj>;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource: boolean mightBeEqual(com.hp.hpl.jena.graph.impl.GraphMatcher$SomeResource)>($r4);

        if $z0 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }
}
