public final enum class org.apache.solr.common.params.FacetParams$FacetDateOther extends java.lang.Enum
{
    public static final enum org.apache.solr.common.params.FacetParams$FacetDateOther BEFORE;
    public static final enum org.apache.solr.common.params.FacetParams$FacetDateOther AFTER;
    public static final enum org.apache.solr.common.params.FacetParams$FacetDateOther BETWEEN;
    public static final enum org.apache.solr.common.params.FacetParams$FacetDateOther ALL;
    public static final enum org.apache.solr.common.params.FacetParams$FacetDateOther NONE;
    private static final org.apache.solr.common.params.FacetParams$FacetDateOther[] $VALUES;

    public static org.apache.solr.common.params.FacetParams$FacetDateOther[] values()
    {
        java.lang.Object $r1;
        org.apache.solr.common.params.FacetParams$FacetDateOther[] $r0, $r2;

        $r0 = <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.solr.common.params.FacetParams$FacetDateOther[]) $r1;

        return $r2;
    }

    public static org.apache.solr.common.params.FacetParams$FacetDateOther valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.solr.common.params.FacetParams$FacetDateOther $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/solr/common/params/FacetParams$FacetDateOther;", r0);

        $r2 = (org.apache.solr.common.params.FacetParams$FacetDateOther) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.apache.solr.common.params.FacetParams$FacetDateOther r0;

        r0 := @this: org.apache.solr.common.params.FacetParams$FacetDateOther;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.lang.String toString()
    {
        java.util.Locale $r2;
        java.lang.String $r1, $r3;
        org.apache.solr.common.params.FacetParams$FacetDateOther r0;

        r0 := @this: org.apache.solr.common.params.FacetParams$FacetDateOther;

        $r1 = specialinvoke r0.<java.lang.Enum: java.lang.String toString()>();

        $r2 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        return $r3;
    }

    public static org.apache.solr.common.params.FacetParams$FacetDateOther get(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        org.apache.solr.common.SolrException$ErrorCode $r7;
        org.apache.solr.common.params.FacetParams$FacetDateOther $r3;
        org.apache.solr.common.SolrException $r5;
        java.util.Locale $r1;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String r0, $r2, $r10;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $r3 = staticinvoke <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther valueOf(java.lang.String)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.solr.common.SolrException;

        $r7 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid type of \'other\' range facet information");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String,java.lang.Throwable)>($r7, $r10, $r4);

        throw $r5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.solr.common.params.FacetParams$FacetDateOther $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        org.apache.solr.common.params.FacetParams$FacetDateOther[] $r5;

        $r0 = new org.apache.solr.common.params.FacetParams$FacetDateOther;

        specialinvoke $r0.<org.apache.solr.common.params.FacetParams$FacetDateOther: void <init>(java.lang.String,int)>("BEFORE", 0);

        <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther BEFORE> = $r0;

        $r1 = new org.apache.solr.common.params.FacetParams$FacetDateOther;

        specialinvoke $r1.<org.apache.solr.common.params.FacetParams$FacetDateOther: void <init>(java.lang.String,int)>("AFTER", 1);

        <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther AFTER> = $r1;

        $r2 = new org.apache.solr.common.params.FacetParams$FacetDateOther;

        specialinvoke $r2.<org.apache.solr.common.params.FacetParams$FacetDateOther: void <init>(java.lang.String,int)>("BETWEEN", 2);

        <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther BETWEEN> = $r2;

        $r3 = new org.apache.solr.common.params.FacetParams$FacetDateOther;

        specialinvoke $r3.<org.apache.solr.common.params.FacetParams$FacetDateOther: void <init>(java.lang.String,int)>("ALL", 3);

        <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther ALL> = $r3;

        $r4 = new org.apache.solr.common.params.FacetParams$FacetDateOther;

        specialinvoke $r4.<org.apache.solr.common.params.FacetParams$FacetDateOther: void <init>(java.lang.String,int)>("NONE", 4);

        <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther NONE> = $r4;

        $r5 = newarray (org.apache.solr.common.params.FacetParams$FacetDateOther)[5];

        $r6 = <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther BEFORE>;

        $r5[0] = $r6;

        $r7 = <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther AFTER>;

        $r5[1] = $r7;

        $r8 = <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther BETWEEN>;

        $r5[2] = $r8;

        $r9 = <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther ALL>;

        $r5[3] = $r9;

        $r10 = <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther NONE>;

        $r5[4] = $r10;

        <org.apache.solr.common.params.FacetParams$FacetDateOther: org.apache.solr.common.params.FacetParams$FacetDateOther[] $VALUES> = $r5;

        return;
    }
}
