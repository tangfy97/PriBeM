public class ucar.nc2.iosp.nexrad2.Level2VolumeScan extends java.lang.Object
{
    public static final java.lang.String ARCHIVE2;
    public static final java.lang.String AR2V0001;
    public static final java.lang.String AR2V0002;
    public static final java.lang.String AR2V0003;
    public static final java.lang.String AR2V0004;
    public static final java.lang.String AR2V0006;
    private static org.slf4j.Logger log;
    ucar.unidata.io.RandomAccessFile raf;
    private java.lang.String dataFormat;
    private int title_julianDay;
    private int title_msecs;
    private java.lang.String stationId;
    private ucar.nc2.iosp.nexrad2.NexradStationDB$Station station;
    private ucar.nc2.iosp.nexrad2.Level2Record first;
    private ucar.nc2.iosp.nexrad2.Level2Record last;
    private int vcp;
    private int max_radials;
    private int min_radials;
    private int max_radials_hr;
    private int min_radials_hr;
    private int dopplarResolution;
    private boolean hasDifferentDopplarResolutions;
    private boolean hasHighResolutionData;
    private boolean hasHighResolutionREF;
    private boolean hasHighResolutionVEL;
    private boolean hasHighResolutionSW;
    private boolean hasHighResolutionZDR;
    private boolean hasHighResolutionPHI;
    private boolean hasHighResolutionRHO;
    private java.util.List reflectivityGroups;
    private java.util.List dopplerGroups;
    private java.util.List reflectivityHighResGroups;
    private java.util.List velocityHighResGroups;
    private java.util.List spectrumHighResGroups;
    private java.util.List diffReflectHighResGroups;
    private java.util.List diffPhaseHighResGroups;
    private java.util.List coefficientHighResGroups;
    private boolean showMessages;
    private boolean showData;
    private boolean debugScans;
    private boolean debugGroups2;
    private boolean debugRadials;
    private boolean debugStats;
    private boolean runCheck;
    private int MAX_RADIAL;
    private int[] radial;

    void <init>(ucar.unidata.io.RandomAccessFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        byte $b4, $b5, $b7, $b9, $b25;
        java.lang.StringBuilder $r32, $r33, $r34, $r35, $r40, $r41, $r49, $r51, $r65, $r67, $r72, $r74, $r75, $r77, $r81, $r84, $r109, $r110, $r111, $r112, $r115, $r124;
        long $l14, $l24, l27;
        short $s8, $s10;
        java.nio.channels.FileLock r94;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i6, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i26, i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        java.io.PrintStream $r20, $r21, $r31;
        org.slf4j.Logger $r3, $r15, $r46, $r48, $r71, $r80;
        java.io.FileInputStream r93, $r113;
        java.nio.channels.FileChannel $r54;
        java.nio.channels.OverlappingFileLockException $r88;
        ucar.nc2.util.CancelTask r19;
        java.lang.Throwable $r86;
        java.util.ArrayList $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123;
        java.lang.String $r7, $r13, $r14, $r16, $r17, $r36, $r39, $r42, $r45, $r50, $r52, $r56, $r57, $r58, $r59, $r60, $r61, $r63, $r66, $r68, $r73, $r76, $r78, $r83, $r85, $r89, $r92;
        java.io.File $r43;
        ucar.unidata.io.RandomAccessFile r2, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r38, $r44, $r82, $r90, $r91, r95, $r96, $r97, $r98, $r107, $r114;
        ucar.nc2.iosp.nexrad2.Level2Record $r18, $r108;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r62, $r69;
        java.lang.InterruptedException $r87;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r19 := @parameter1: ucar.nc2.util.CancelTask;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat> = null;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int vcp> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials> = 2147483647;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials_hr> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials_hr> = 2147483647;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean showMessages> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean showData> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugScans> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugGroups2> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugRadials> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugStats> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean runCheck> = 0;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int MAX_RADIAL> = 721;

        $i0 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int MAX_RADIAL>;

        $r1 = newarray (int)[$i0];

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int[] radial> = $r1;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf> = r2;

        $r3 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r80 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Level2VolumeScan on ");

        $r82 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r83 = virtualinvoke $r82.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r80.<org.slf4j.Logger: void debug(java.lang.String)>($r85);

     label01:
        $r4 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        $r5 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

        $r6 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r7 = virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(8);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat> = $r7;

        $r8 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(1);

        $r9 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(3);

        $r10 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $i1 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int title_julianDay> = $i1;

        $r11 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $i2 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int title_msecs> = $i2;

        $r12 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r13 = virtualinvoke $r12.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(4);

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId> = $r14;

        $r15 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r15.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label02;

        $r71 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataFormat= ");

        $r73 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat>;

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stationId= ");

        $r76 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r71.<org.slf4j.Logger: void debug(java.lang.String)>($r78);

     label02:
        $r16 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        $i3 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i3 != 0 goto label03;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId> = null;

     label03:
        $r17 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        if $r17 == null goto label05;

        $r60 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        $z21 = virtualinvoke $r60.<java.lang.String: boolean startsWith(java.lang.String)>("K");

        if $z21 != 0 goto label04;

        $r63 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        $i26 = virtualinvoke $r63.<java.lang.String: int length()>();

        if $i26 != 4 goto label04;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("K");

        $r66 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69 = staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: ucar.nc2.iosp.nexrad2.NexradStationDB$Station get(java.lang.String)>($r68);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station> = $r69;

        goto label05;

     label04:
        $r61 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        $r62 = staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: ucar.nc2.iosp.nexrad2.NexradStationDB$Station get(java.lang.String)>($r61);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station> = $r62;

     label05:
        $r89 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat>;

        $z22 = virtualinvoke $r89.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0001");

        if $z22 != 0 goto label06;

        $r57 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat>;

        $z18 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0003");

        if $z18 != 0 goto label06;

        $r58 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat>;

        $z19 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0004");

        if $z19 != 0 goto label06;

        $r59 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat>;

        $z20 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0006");

        if $z20 == 0 goto label25;

     label06:
        $r90 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r90.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(4);

        $r91 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r92 = virtualinvoke $r91.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(2);

        $z23 = virtualinvoke $r92.<java.lang.String: boolean equals(java.lang.Object)>("BZ");

        if $z23 == 0 goto label24;

        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        $r38 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r39 = virtualinvoke $r38.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r40 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".uncompress");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = staticinvoke <ucar.nc2.util.DiskCache: java.io.File getFileStandardPolicy(java.lang.String)>($r42);

        $z16 = virtualinvoke $r43.<java.io.File: boolean exists()>();

        if $z16 == 0 goto label22;

        $l24 = virtualinvoke $r43.<java.io.File: long length()>();

        $b25 = $l24 cmp 0L;

        $i30 = (int) $b25;

        if $i30 <= 0 goto label22;

        r93 = null;

        r94 = null;

     label07:
        $r113 = new java.io.FileInputStream;

        specialinvoke $r113.<java.io.FileInputStream: void <init>(java.io.File)>($r43);

        r93 = $r113;

     label08:
        $r54 = virtualinvoke $r113.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        r94 = virtualinvoke $r54.<java.nio.channels.FileChannel: java.nio.channels.FileLock lock(long,long,boolean)>(0L, 1L, 1);

     label09:
        goto label15;

     label10:
        $r88 := @caughtexception;

     label11:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label12:
        goto label14;

     label13:
        $r87 := @caughtexception;

        goto label15;

     label14:
        goto label08;

     label15:
        if r94 == null goto label16;

        virtualinvoke r94.<java.nio.channels.FileLock: void release()>();

     label16:
        if $r113 == null goto label21;

        virtualinvoke $r113.<java.io.FileInputStream: void close()>();

        goto label21;

     label17:
        $r86 := @caughtexception;

     label18:
        if r94 == null goto label19;

        virtualinvoke r94.<java.nio.channels.FileLock: void release()>();

     label19:
        if r93 == null goto label20;

        virtualinvoke r93.<java.io.FileInputStream: void close()>();

     label20:
        throw $r86;

     label21:
        $r114 = new ucar.unidata.io.RandomAccessFile;

        $r56 = virtualinvoke $r43.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r114.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r56, "r");

        r95 = $r114;

        goto label23;

     label22:
        $r44 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r45 = virtualinvoke $r43.<java.io.File: java.lang.String getPath()>();

        r95 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile uncompress(ucar.unidata.io.RandomAccessFile,java.lang.String)>($r44, $r45);

        $r46 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $z17 = interfaceinvoke $r46.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z17 == 0 goto label23;

        $r48 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("made uncompressed file= ");

        $r50 = virtualinvoke $r43.<java.io.File: java.lang.String getPath()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<org.slf4j.Logger: void debug(java.lang.String)>($r52);

     label23:
        $r96 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r96.<ucar.unidata.io.RandomAccessFile: void close()>();

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf> = r95;

        $r97 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r97.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

     label24:
        $r98 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r98.<ucar.unidata.io.RandomAccessFile: void seek(long)>(24L);

     label25:
        $r116 = new java.util.ArrayList;

        specialinvoke $r116.<java.util.ArrayList: void <init>()>();

        $r117 = new java.util.ArrayList;

        specialinvoke $r117.<java.util.ArrayList: void <init>()>();

        $r118 = new java.util.ArrayList;

        specialinvoke $r118.<java.util.ArrayList: void <init>()>();

        $r119 = new java.util.ArrayList;

        specialinvoke $r119.<java.util.ArrayList: void <init>()>();

        $r120 = new java.util.ArrayList;

        specialinvoke $r120.<java.util.ArrayList: void <init>()>();

        $r121 = new java.util.ArrayList;

        specialinvoke $r121.<java.util.ArrayList: void <init>()>();

        $r122 = new java.util.ArrayList;

        specialinvoke $r122.<java.util.ArrayList: void <init>()>();

        $r123 = new java.util.ArrayList;

        specialinvoke $r123.<java.util.ArrayList: void <init>()>();

        l27 = 0L;

        i28 = 0;

     label26:
        $r107 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $i29 = i28;

        i28 = i28 + 1;

        $r108 = staticinvoke <ucar.nc2.iosp.nexrad2.Level2Record: ucar.nc2.iosp.nexrad2.Level2Record factory(ucar.unidata.io.RandomAccessFile,int,long)>($r107, $i29, l27);

        if $r108 != null goto label27;

        goto label43;

     label27:
        $z2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean showData>;

        if $z2 == 0 goto label28;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r108.<ucar.nc2.iosp.nexrad2.Level2Record: void dump2(java.io.PrintStream)>($r21);

     label28:
        $b4 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: byte message_type>;

        $i31 = (int) $b4;

        if $i31 != 31 goto label29;

        $s10 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: short message_size>;

        $i32 = (int) $s10;

        $i11 = $i32 * 2;

        $i12 = $i11 + 12;

        $i13 = $i12 - 2432;

        $l14 = (long) $i13;

        l27 = l27 + $l14;

     label29:
        $b5 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: byte message_type>;

        if $b5 == 1 goto label30;

        $b9 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: byte message_type>;

        $i33 = (int) $b9;

        if $i33 == 31 goto label30;

        $z14 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean showMessages>;

        if $z14 == 0 goto label26;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r108.<ucar.nc2.iosp.nexrad2.Level2Record: void dumpMessage(java.io.PrintStream)>($r20);

        goto label26;

     label30:
        $i6 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int vcp>;

        if $i6 != 0 goto label31;

        $s8 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: short vcp>;

        $i34 = (int) $s8;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int vcp> = $i34;

     label31:
        $r18 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.Level2Record first>;

        if $r18 != null goto label32;

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.Level2Record first> = $r108;

     label32:
        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.Level2Record last> = $r108;

        $z3 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean runCheck>;

        if $z3 == 0 goto label33;

        $z13 = virtualinvoke $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean checkOk()>();

        if $z13 != 0 goto label33;

        goto label26;

     label33:
        $z4 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasReflectData>;

        if $z4 == 0 goto label34;

        interfaceinvoke $r116.<java.util.List: boolean add(java.lang.Object)>($r108);

     label34:
        $z5 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasDopplerData>;

        if $z5 == 0 goto label35;

        interfaceinvoke $r117.<java.util.List: boolean add(java.lang.Object)>($r108);

     label35:
        $b7 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: byte message_type>;

        $i35 = (int) $b7;

        if $i35 != 31 goto label41;

        $z7 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResREFData>;

        if $z7 == 0 goto label36;

        interfaceinvoke $r118.<java.util.List: boolean add(java.lang.Object)>($r108);

     label36:
        $z8 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResVELData>;

        if $z8 == 0 goto label37;

        interfaceinvoke $r119.<java.util.List: boolean add(java.lang.Object)>($r108);

     label37:
        $z9 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResSWData>;

        if $z9 == 0 goto label38;

        interfaceinvoke $r120.<java.util.List: boolean add(java.lang.Object)>($r108);

     label38:
        $z10 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResZDRData>;

        if $z10 == 0 goto label39;

        interfaceinvoke $r121.<java.util.List: boolean add(java.lang.Object)>($r108);

     label39:
        $z11 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResPHIData>;

        if $z11 == 0 goto label40;

        interfaceinvoke $r122.<java.util.List: boolean add(java.lang.Object)>($r108);

     label40:
        $z12 = $r108.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResRHOData>;

        if $z12 == 0 goto label41;

        interfaceinvoke $r123.<java.util.List: boolean add(java.lang.Object)>($r108);

     label41:
        if r19 == null goto label42;

        $z6 = interfaceinvoke r19.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z6 == 0 goto label42;

        return;

     label42:
        goto label26;

     label43:
        $z15 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugRadials>;

        if $z15 == 0 goto label44;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reflect ok= ");

        $i22 = interfaceinvoke $r116.<java.util.List: int size()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doppler ok= ");

        $i23 = interfaceinvoke $r117.<java.util.List: int size()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r36);

     label44:
        $i15 = interfaceinvoke $r118.<java.util.List: int size()>();

        if $i15 != 0 goto label45;

        $r28 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("reflect", $r116, 600);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List reflectivityGroups> = $r28;

        $r29 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("doppler", $r117, 600);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List dopplerGroups> = $r29;

     label45:
        $i16 = interfaceinvoke $r118.<java.util.List: int size()>();

        if $i16 <= 0 goto label46;

        $r27 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("reflect_HR", $r118, 720);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List reflectivityHighResGroups> = $r27;

     label46:
        $i17 = interfaceinvoke $r119.<java.util.List: int size()>();

        if $i17 <= 0 goto label47;

        $r26 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("velocity_HR", $r119, 720);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List velocityHighResGroups> = $r26;

     label47:
        $i18 = interfaceinvoke $r120.<java.util.List: int size()>();

        if $i18 <= 0 goto label48;

        $r25 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("spectrum_HR", $r120, 720);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List spectrumHighResGroups> = $r25;

     label48:
        $i19 = interfaceinvoke $r121.<java.util.List: int size()>();

        if $i19 <= 0 goto label49;

        $r24 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("diffReflect_HR", $r121, 720);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List diffReflectHighResGroups> = $r24;

     label49:
        $i20 = interfaceinvoke $r122.<java.util.List: int size()>();

        if $i20 <= 0 goto label50;

        $r23 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("diffPhase_HR", $r122, 720);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List diffPhaseHighResGroups> = $r23;

     label50:
        $i21 = interfaceinvoke $r123.<java.util.List: int size()>();

        if $i21 <= 0 goto label51;

        $r22 = specialinvoke r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List sortScans(java.lang.String,java.util.List,int)>("coefficient_HR", $r123, 720);

        r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List coefficientHighResGroups> = $r22;

     label51:
        return;

        catch java.nio.channels.OverlappingFileLockException from label08 to label09 with label10;
        catch java.lang.InterruptedException from label11 to label12 with label13;
        catch java.lang.Throwable from label07 to label15 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private java.util.List sortScans(java.lang.String, java.util.List, int)
    {
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r21, $r23, $r24;
        java.util.ArrayList $r3, $r31, r35, r37;
        short $s29, $s30;
        java.lang.String r7, $r16, $r25;
        ucar.nc2.iosp.nexrad2.Level2Record r20, r33, r36, r38;
        java.lang.Short $r29, $r32;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r6;
        java.util.Collection $r4;
        java.util.List r1, r34;
        java.util.HashMap $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i31, i32, i33;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan$GroupComparator $r5;
        java.io.PrintStream $r8, $r10, $r22;
        java.util.Iterator $r2;
        java.lang.Object $r17, $r18, $r19, $r26, $r27, $r28, $r30;

        r6 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(i0);

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r28 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r33 = (ucar.nc2.iosp.nexrad2.Level2Record) $r28;

        $s29 = r33.<ucar.nc2.iosp.nexrad2.Level2Record: short elevation_num>;

        $r29 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s29);

        $r30 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29);

        r34 = (java.util.List) $r30;

        if null != r34 goto label02;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r34 = $r31;

        $s30 = r33.<ucar.nc2.iosp.nexrad2.Level2Record: short elevation_num>;

        $r32 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s30);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r31);

     label02:
        interfaceinvoke r34.<java.util.List: boolean add(java.lang.Object)>(r33);

        goto label01;

     label03:
        $r3 = new java.util.ArrayList;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = new ucar.nc2.iosp.nexrad2.Level2VolumeScan$GroupComparator;

        specialinvoke $r5.<ucar.nc2.iosp.nexrad2.Level2VolumeScan$GroupComparator: void <init>(ucar.nc2.iosp.nexrad2.Level2VolumeScan,ucar.nc2.iosp.nexrad2.Level2VolumeScan$1)>(r6, null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, $r5);

        i31 = 0;

     label04:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i31 >= $i1 goto label10;

        $r26 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i31);

        r35 = (java.util.ArrayList) $r26;

        $r27 = virtualinvoke r35.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r36 = (ucar.nc2.iosp.nexrad2.Level2Record) $r27;

        $z3 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean runCheck>;

        if $z3 == 0 goto label05;

        specialinvoke r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean testScan(java.lang.String,java.util.ArrayList)>(r7, r35);

     label05:
        $i8 = virtualinvoke r36.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateCount(int)>(5);

        if $i8 > 500 goto label06;

        $i22 = virtualinvoke r36.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateCount(int)>(6);

        if $i22 <= 1000 goto label08;

     label06:
        $i9 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        if $i9 > 360 goto label07;

        $i16 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials>;

        $i17 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i17);

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials> = $i18;

        $i19 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials>;

        $i20 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i20);

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials> = $i21;

        goto label09;

     label07:
        $i10 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials_hr>;

        $i11 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i11);

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials_hr> = $i12;

        $i13 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials_hr>;

        $i14 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials_hr> = $i15;

        goto label09;

     label08:
        $i23 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials>;

        $i24 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        $i25 = staticinvoke <java.lang.Math: int max(int,int)>($i23, $i24);

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials> = $i25;

        $i26 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials>;

        $i27 = virtualinvoke r35.<java.util.ArrayList: int size()>();

        $i28 = staticinvoke <java.lang.Math: int min(int,int)>($i26, $i27);

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials> = $i28;

     label09:
        i31 = i31 + 1;

        goto label04;

     label10:
        $z1 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugRadials>;

        if $z1 == 0 goto label15;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min_radials= ");

        $i2 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max_radials= ");

        $i3 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16);

        i32 = 0;

     label11:
        $i4 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i32 >= $i4 goto label15;

        $r17 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i32);

        r37 = (java.util.ArrayList) $r17;

        $r18 = virtualinvoke r37.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r38 = (ucar.nc2.iosp.nexrad2.Level2Record) $r18;

        i33 = 1;

     label12:
        $i5 = virtualinvoke r37.<java.util.ArrayList: int size()>();

        if i33 >= $i5 goto label14;

        $r19 = virtualinvoke r37.<java.util.ArrayList: java.lang.Object get(int)>(i33);

        r20 = (ucar.nc2.iosp.nexrad2.Level2Record) $r19;

        $i7 = r20.<ucar.nc2.iosp.nexrad2.Level2Record: int data_msecs>;

        $i6 = r38.<ucar.nc2.iosp.nexrad2.Level2Record: int data_msecs>;

        if $i7 >= $i6 goto label13;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of order ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label13:
        r38 = r20;

        i33 = i33 + 1;

        goto label12;

     label14:
        i32 = i32 + 1;

        goto label11;

     label15:
        specialinvoke r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean testVariable(java.lang.String,java.util.List)>(r7, $r3);

        $z2 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugScans>;

        if $z2 == 0 goto label16;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------");

     label16:
        return $r3;
    }

    public int getMaxRadials(int)
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        int i0, $i1, $i2;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials>;

        return $i2;

     label1:
        if i0 != 1 goto label2;

        $i1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int max_radials_hr>;

        return $i1;

     label2:
        return 0;
    }

    public int getMinRadials(int)
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        int i0, $i1, $i2;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials>;

        return $i2;

     label1:
        if i0 != 1 goto label2;

        $i1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int min_radials_hr>;

        return $i1;

     label2:
        return 0;
    }

    public int getDopplarResolution()
    {
        int $i0;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int dopplarResolution>;

        return $i0;
    }

    public boolean hasDifferentDopplarResolutions()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $z0 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasDifferentDopplarResolutions>;

        return $z0;
    }

    public boolean hasHighResolutions(int)
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $z6 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionData>;

        return $z6;

     label1:
        if i0 != 1 goto label2;

        $z5 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionREF>;

        return $z5;

     label2:
        if i0 != 2 goto label3;

        $z4 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionVEL>;

        return $z4;

     label3:
        if i0 != 3 goto label4;

        $z3 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionSW>;

        return $z3;

     label4:
        if i0 != 4 goto label5;

        $z2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionZDR>;

        return $z2;

     label5:
        if i0 != 5 goto label6;

        $z1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionPHI>;

        return $z1;

     label6:
        if i0 != 6 goto label7;

        $z0 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionRHO>;

        return $z0;

     label7:
        return 0;
    }

    private boolean testScan(java.lang.String, java.util.ArrayList)
    {
        byte b0, $b25;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r85, $r86, $r87, $r88, $r89, $r90;
        short $s10, $s11, $s12, $s13, $s15, $s16, $s20, $s21, $s22, $s26;
        int[] $r4, $r5, $r21, $r22, $r71;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i14, $i17, $i18, $i19, $i23, $i24, i27, $i28, i29, i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        java.io.PrintStream $r73;
        org.slf4j.Logger $r6, $r10, $r24, $r36, $r48, $r60;
        java.lang.Object $r2, $r7;
        java.util.ArrayList r1;
        java.lang.String r0, $r12, $r20, $r26, $r34, $r38, $r46, $r50, $r58, $r62, $r70, $r84;
        ucar.unidata.io.RandomAccessFile $r11, $r25, $r37, $r49, $r61;
        ucar.nc2.iosp.nexrad2.Level2Record r8, $r72;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r3;

        r3 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.ArrayList;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("reflect");

        if $z0 == 0 goto label01;

        $b25 = 1;

        goto label02;

     label01:
        $b25 = 2;

     label02:
        b0 = $b25;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r72 = (ucar.nc2.iosp.nexrad2.Level2Record) $r2;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $z1 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugScans>;

        if $z1 == 0 goto label05;

        $z2 = $r72.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasDopplerData>;

        if $z2 == 0 goto label03;

        $z3 = $r72.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasReflectData>;

        if $z3 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        $r73 = <java.lang.System: java.io.PrintStream out>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" radials resolution= ");

        $s26 = $r72.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $i31 = (int) $s26;

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has both = ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r84);

     label05:
        z5 = 1;

        i27 = 0;

     label06:
        $i28 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int MAX_RADIAL>;

        if i27 >= $i28 goto label07;

        $r71 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int[] radial>;

        $r71[i27] = 0;

        i27 = i27 + 1;

        goto label06;

     label07:
        i29 = 0;

     label08:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i29 >= $i2 goto label16;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r8 = (ucar.nc2.iosp.nexrad2.Level2Record) $r7;

        $i6 = virtualinvoke r8.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>(b0);

        $i7 = virtualinvoke $r72.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>(b0);

        if $i6 == $i7 goto label09;

        $r60 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r61 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r62 = virtualinvoke $r61.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r63 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" different gate size (");

        $i24 = virtualinvoke r8.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>(b0);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in record ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r60.<org.slf4j.Logger: void warn(java.lang.String)>($r70);

        z5 = 0;

     label09:
        $i8 = virtualinvoke r8.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>(b0);

        $i9 = virtualinvoke $r72.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>(b0);

        if $i8 == $i9 goto label10;

        $r48 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r49 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r50 = virtualinvoke $r49.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r51 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" different gate start (");

        $i23 = virtualinvoke r8.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>(b0);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in record ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<org.slf4j.Logger: void warn(java.lang.String)>($r58);

        z5 = 0;

     label10:
        $s11 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $s10 = $r72.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $i32 = (int) $s11;

        $i33 = (int) $s10;

        if $i32 == $i33 goto label11;

        $r36 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r37 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r38 = virtualinvoke $r37.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r39 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" different resolution (");

        $s22 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $i34 = (int) $s22;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in record ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r36.<org.slf4j.Logger: void warn(java.lang.String)>($r46);

        z5 = 0;

     label11:
        $s12 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short radial_num>;

        $i35 = (int) $s12;

        if $i35 < 0 goto label12;

        $s15 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short radial_num>;

        $i14 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int MAX_RADIAL>;

        $i36 = (int) $s15;

        if $i36 < $i14 goto label13;

     label12:
        $r10 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r11 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r12 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r13 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" radial out of range= ");

        $s13 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short radial_num>;

        $i37 = (int) $s13;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in record ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r20);

        goto label15;

     label13:
        $r21 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int[] radial>;

        $s16 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short radial_num>;

        $i38 = (int) $s16;

        $i17 = $r21[$i38];

        if $i17 <= 0 goto label14;

        $r24 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r25 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r26 = virtualinvoke $r25.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r27 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duplicate radial = ");

        $s21 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short radial_num>;

        $i39 = (int) $s21;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in record ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String)>($r34);

        z5 = 0;

     label14:
        $r22 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int[] radial>;

        $s20 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: short radial_num>;

        $i18 = r8.<ucar.nc2.iosp.nexrad2.Level2Record: int recno>;

        $i19 = $i18 + 1;

        $i40 = (int) $s20;

        $r22[$i40] = $i19;

        virtualinvoke r8.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

        virtualinvoke r8.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

        virtualinvoke r8.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

     label15:
        i29 = i29 + 1;

        goto label08;

     label16:
        i30 = 1;

     label17:
        $r4 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int[] radial>;

        $i3 = lengthof $r4;

        if i30 >= $i3 goto label19;

        $r5 = r3.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int[] radial>;

        $i4 = $r5[i30];

        if 0 != $i4 goto label18;

        $i5 = i30 - 1;

        if $i1 == $i5 goto label19;

        $r6 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>(" missing radial(s)");

        z5 = 0;

        goto label19;

     label18:
        i30 = i30 + 1;

        goto label17;

     label19:
        return z5;
    }

    private boolean testVariable(java.lang.String, java.util.List)
    {
        byte b0, $b26, $b27, $b28, $b29, $b30, $b31;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r34, $r35, $r36, $r37, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r69, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r81, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r90;
        short $s2, $s3, $s6, $s7, $s10, $s11, $s12, $s13, $s14, $s15;
        int $i1, $i4, $i5, $i8, $i9, $i16, $i17, $i18, i20, $i21, $i22, $i23, $i24, $i25, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        java.io.PrintStream $r12, $r33, $r68;
        org.slf4j.Logger $r19, $r40, $r54, $r80;
        java.lang.Object $r2, $r4, $r7, $r9;
        java.lang.String r0, $r17, $r31, $r38, $r52, $r66, $r70, $r78, $r83;
        ucar.nc2.iosp.nexrad2.Level2Record r5, r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r6;
        java.util.List r1, r3, r8;
        float $f0, $f1, $f2, $f3, $f4;

        r6 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("reflect");

        if $z0 == 0 goto label01;

        $b31 = 1;

        $b30 = 1;

        $b29 = 1;

        $b28 = 1;

        $b27 = 1;

        goto label02;

     label01:
        $b31 = 2;

        $b30 = 2;

        $b29 = 2;

        $b28 = 2;

        $b27 = 2;

     label02:
        b0 = $b31;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 0 goto label03;

        $r80 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" No data for = ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r80.<org.slf4j.Logger: void warn(java.lang.String)>($r83);

        return 0;

     label03:
        z10 = 1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (java.util.List) $r2;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (ucar.nc2.iosp.nexrad2.Level2Record) $r4;

        $s2 = r5.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $i32 = (int) $s2;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int dopplarResolution> = $i32;

        $z1 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugGroups2>;

        if $z1 == 0 goto label04;

        $r68 = <java.lang.System: java.io.PrintStream out>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group ");

        $r70 = staticinvoke <ucar.nc2.iosp.nexrad2.Level2Record: java.lang.String getDatatypeName(int)>($b28);

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ngates = ");

        $i16 = virtualinvoke r5.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateCount(int)>($b27);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start = ");

        $i17 = virtualinvoke r5.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>($b30);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size = ");

        $i18 = virtualinvoke r5.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>($b29);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r78);

     label04:
        i20 = 1;

     label05:
        $i21 = interfaceinvoke r1.<java.util.List: int size()>();

        if i20 >= $i21 goto label17;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i20);

        r8 = (java.util.List) $r7;

        $r9 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        r10 = (ucar.nc2.iosp.nexrad2.Level2Record) $r9;

        if b0 != 2 goto label06;

        $s12 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $s11 = r5.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $i33 = (int) $s12;

        $i34 = (int) $s11;

        if $i33 == $i34 goto label06;

        $r54 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scan ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" diff resolutions = ");

        $s13 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $i35 = (int) $s13;

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $s14 = r5.<ucar.nc2.iosp.nexrad2.Level2Record: short resolution>;

        $i36 = (int) $s14;

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev= ");

        $s15 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: short elevation_num>;

        $i37 = (int) $s15;

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f4 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r54.<org.slf4j.Logger: void warn(java.lang.String)>($r66);

        z10 = 0;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasDifferentDopplarResolutions> = 1;

     label06:
        $i22 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>(b0);

        $i23 = virtualinvoke r5.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>(b0);

        if $i22 == $i23 goto label07;

        $r40 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scan ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" diff gates size = ");

        $i8 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>(b0);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i9 = virtualinvoke r5.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateSize(int)>(b0);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev= ");

        $s10 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: short elevation_num>;

        $i38 = (int) $s10;

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f3 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<org.slf4j.Logger: void warn(java.lang.String)>($r52);

        z10 = 0;

        goto label08;

     label07:
        $z2 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugGroups2>;

        if $z2 == 0 goto label08;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ok gates size elev= ");

        $s7 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: short elevation_num>;

        $i39 = (int) $s7;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f2 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label08:
        $i24 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>(b0);

        $i25 = virtualinvoke r5.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>(b0);

        if $i24 == $i25 goto label09;

        $r19 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scan ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" diff gates start = ");

        $i4 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>(b0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = virtualinvoke r5.<ucar.nc2.iosp.nexrad2.Level2Record: int getGateStart(int)>(b0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev= ");

        $s6 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: short elevation_num>;

        $i40 = (int) $s6;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f1 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>($r31);

        z10 = 0;

        goto label10;

     label09:
        $z3 = r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean debugGroups2>;

        if $z3 == 0 goto label10;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ok gates start elev= ");

        $s3 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: short elevation_num>;

        $i41 = (int) $s3;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f0 = virtualinvoke r10.<ucar.nc2.iosp.nexrad2.Level2Record: float getElevation()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label10:
        $b26 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: byte message_type>;

        $i42 = (int) $b26;

        if $i42 != 31 goto label16;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionData> = 1;

        $z4 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResREFData>;

        if $z4 == 0 goto label11;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionREF> = 1;

     label11:
        $z5 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResVELData>;

        if $z5 == 0 goto label12;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionVEL> = 1;

     label12:
        $z6 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResSWData>;

        if $z6 == 0 goto label13;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionSW> = 1;

     label13:
        $z7 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResZDRData>;

        if $z7 == 0 goto label14;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionZDR> = 1;

     label14:
        $z8 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResPHIData>;

        if $z8 == 0 goto label15;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionPHI> = 1;

     label15:
        $z9 = r10.<ucar.nc2.iosp.nexrad2.Level2Record: boolean hasHighResRHOData>;

        if $z9 == 0 goto label16;

        r6.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: boolean hasHighResolutionRHO> = 1;

     label16:
        i20 = i20 + 1;

        goto label05;

     label17:
        return z10;
    }

    public java.util.List getReflectivityGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List reflectivityGroups>;

        return $r1;
    }

    public java.util.List getVelocityGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List dopplerGroups>;

        return $r1;
    }

    public java.util.List getHighResVelocityGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List velocityHighResGroups>;

        return $r1;
    }

    public java.util.List getHighResReflectivityGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List reflectivityHighResGroups>;

        return $r1;
    }

    public java.util.List getHighResSpectrumGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List spectrumHighResGroups>;

        return $r1;
    }

    public java.util.List getHighResDiffReflectGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List diffReflectHighResGroups>;

        return $r1;
    }

    public java.util.List getHighResDiffPhaseGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List diffPhaseHighResGroups>;

        return $r1;
    }

    public java.util.List getHighResCoeffocientGroups()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.util.List coefficientHighResGroups>;

        return $r1;
    }

    public java.lang.String getDataFormat()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String dataFormat>;

        return $r1;
    }

    public int getTitleJulianDays()
    {
        int $i0;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int title_julianDay>;

        return $i0;
    }

    public int getTitleMsecs()
    {
        int $i0;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int title_msecs>;

        return $i0;
    }

    public int getVCP()
    {
        int $i0;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: int vcp>;

        return $i0;
    }

    public java.lang.String getStationId()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String stationId>;

        return $r1;
    }

    public java.lang.String getStationName()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $r3 = "unknown";

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $r3 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String name>;

     label2:
        return $r3;
    }

    public double getStationLatitude()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $d0 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lat>;

     label2:
        return $d0;
    }

    public double getStationLongitude()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $d0 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lon>;

     label2:
        return $d0;
    }

    public double getStationElevation()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $d0 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double elev>;

     label2:
        return $d0;
    }

    public java.util.Date getStartDate()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.Level2Record $r1;
        java.util.Date $r2;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.Level2Record first>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.nexrad2.Level2Record: java.util.Date getDate()>();

        return $r2;
    }

    public java.util.Date getEndDate()
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.Level2Record $r1;
        java.util.Date $r2;

        r0 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: ucar.nc2.iosp.nexrad2.Level2Record last>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.nexrad2.Level2Record: java.util.Date getDate()>();

        return $r2;
    }

    private ucar.unidata.io.RandomAccessFile uncompress(ucar.unidata.io.RandomAccessFile, java.lang.String) throws java.io.IOException
    {
        java.io.RandomAccessFile $r2;
        byte[] r6, r54, r55, $r56, r58;
        java.nio.channels.OverlappingFileLockException $r51;
        java.lang.Exception $r37;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r22, $r23, $r27, $r28, $r29, $r30, $r31, $r32, $r43, $r44, $r61, $r62, $r64, $r66;
        java.lang.Throwable $r36;
        long $l2, $l8, $l9;
        java.lang.String r1, $r18, $r24, $r33, $r45;
        java.io.IOException $r40;
        java.lang.RuntimeException $r67;
        java.io.File $r65;
        ucar.unidata.io.RandomAccessFile r5, r53, $r59;
        java.nio.channels.FileLock $r4;
        java.io.ByteArrayInputStream $r63;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        ucar.nc2.iosp.nexrad2.Level2VolumeScan r52;
        java.io.EOFException $r48;
        float $f0;
        ucar.unidata.io.bzip2.BZip2ReadException $r46;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, i10, $i11, i12, $i13, $i15, $i17, $i19, $i21;
        double $d0, $d1;
        org.slf4j.Logger $r8, $r9, $r11, $r19, $r21, $r26, $r34, $r35, $r42, $r47, $r49;
        java.lang.InterruptedException $r50;
        ucar.unidata.io.bzip2.CBZip2InputStream $r60;
        java.nio.channels.FileChannel $r3;

        r52 := @this: ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        r5 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r1 := @parameter1: java.lang.String;

        $r59 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r59.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, "rw");

        r53 = $r59;

     label01:
        $r2 = virtualinvoke $r59.<ucar.unidata.io.RandomAccessFile: java.io.RandomAccessFile getRandomAccessFile()>();

        $r3 = virtualinvoke $r2.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        $r4 = virtualinvoke $r3.<java.nio.channels.FileChannel: java.nio.channels.FileLock lock(long,long,boolean)>(0L, 1L, 0);

     label02:
        goto label08;

     label03:
        $r51 := @caughtexception;

     label04:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label05:
        goto label07;

     label06:
        $r50 := @caughtexception;

     label07:
        goto label01;

     label08:
        virtualinvoke r5.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        r54 = newarray (byte)[24];

        virtualinvoke r5.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r54);

        virtualinvoke $r59.<ucar.unidata.io.RandomAccessFile: void write(byte[])>(r54);

        z6 = 0;

        $i15 = (int) 40000;

        r6 = newarray (byte)[$i15];

        $i17 = (int) 40000;

        r55 = newarray (byte)[$i17];

     label09:
        $r60 = new ucar.unidata.io.bzip2.CBZip2InputStream;

        specialinvoke $r60.<ucar.unidata.io.bzip2.CBZip2InputStream: void <init>()>();

     label10:
        if z6 != 0 goto label26;

     label11:
        $i0 = virtualinvoke r5.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        i10 = $i0;

        $i19 = (int) -1;

        if $i0 != $i19 goto label13;

        $r34 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r34.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label12;

        $r35 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String)>("  done: numCompBytes=-1 ");

     label12:
        goto label26;

     label13:
        goto label15;

     label14:
        $r48 := @caughtexception;

        $r49 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r49.<org.slf4j.Logger: void warn(java.lang.String)>("  got EOFException ");

        goto label26;

     label15:
        $r8 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label16;

        $r26 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reading compressed bytes ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" input starts at ");

        $l8 = virtualinvoke r5.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; output starts at ");

        $l9 = virtualinvoke $r59.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String)>($r33);

     label16:
        if $i0 >= 0 goto label18;

        $r19 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label17;

        $r21 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last block?");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String)>($r24);

     label17:
        i10 = neg $i0;

        z6 = 1;

     label18:
        $r56 = newarray (byte)[i10];

        virtualinvoke r5.<ucar.unidata.io.RandomAccessFile: void readFully(byte[])>($r56);

        $r63 = new java.io.ByteArrayInputStream;

        $i11 = i10 - 2;

        specialinvoke $r63.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r56, 2, $i11);

        virtualinvoke $r60.<ucar.unidata.io.bzip2.CBZip2InputStream: void setStream(java.io.InputStream)>($r63);

        i12 = 0;

     label19:
        $i13 = virtualinvoke $r60.<ucar.unidata.io.bzip2.CBZip2InputStream: int read(byte[])>(r6);

        $i21 = (int) -1;

        if $i13 == $i21 goto label21;

        $i4 = i12 + $i13;

        $i3 = lengthof r55;

        if $i4 <= $i3 goto label20;

        r58 = r55;

        $i5 = lengthof r55;

        $i6 = $i5 * 2;

        r55 = newarray (byte)[$i6];

        $i7 = lengthof r58;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r58, 0, r55, 0, $i7);

     label20:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r55, i12, $i13);

        i12 = i12 + $i13;

        goto label19;

     label21:
        $i1 = lengthof r55;

        if $i1 < 0 goto label22;

        virtualinvoke $r59.<ucar.unidata.io.RandomAccessFile: void write(byte[],int,int)>(r55, 0, i12);

     label22:
        goto label24;

     label23:
        $r46 := @caughtexception;

        $r47 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r47.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Nexrad2IOSP.uncompress ", $r46);

     label24:
        $d0 = (double) i12;

        $d1 = $d0 / 2432.0;

        $f0 = (float) $d1;

        $r9 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label25;

        $r11 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  unpacked ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num bytes ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records; ouput ends at ");

        $l2 = virtualinvoke $r59.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r18);

     label25:
        goto label10;

     label26:
        goto label31;

     label27:
        $r37 := @caughtexception;

        if $r59 == null goto label28;

        virtualinvoke $r59.<ucar.unidata.io.RandomAccessFile: void close()>();

     label28:
        r53 = null;

        $r65 = new java.io.File;

        specialinvoke $r65.<java.io.File: void <init>(java.lang.String)>(r1);

        $z4 = virtualinvoke $r65.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label29;

        $z5 = virtualinvoke $r65.<java.io.File: boolean delete()>();

        if $z5 != 0 goto label29;

        $r42 = <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to delete uncompressed file (IOException)");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r42.<org.slf4j.Logger: void warn(java.lang.String)>($r45);

     label29:
        $z7 = $r37 instanceof java.io.IOException;

        if $z7 == 0 goto label30;

        $r40 = (java.io.IOException) $r37;

        throw $r40;

     label30:
        $r67 = new java.lang.RuntimeException;

        specialinvoke $r67.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r37);

        throw $r67;

     label31:
        if null == $r59 goto label32;

        virtualinvoke $r59.<ucar.unidata.io.RandomAccessFile: void flush()>();

     label32:
        if $r4 == null goto label37;

        virtualinvoke $r4.<java.nio.channels.FileLock: void release()>();

        goto label37;

     label33:
        $r36 := @caughtexception;

     label34:
        if null == r53 goto label35;

        virtualinvoke r53.<ucar.unidata.io.RandomAccessFile: void flush()>();

     label35:
        if $r4 == null goto label36;

        virtualinvoke $r4.<java.nio.channels.FileLock: void release()>();

     label36:
        throw $r36;

     label37:
        return $r59;

        catch java.nio.channels.OverlappingFileLockException from label01 to label02 with label03;
        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.io.EOFException from label11 to label12 with label14;
        catch ucar.unidata.io.bzip2.BZip2ReadException from label19 to label22 with label23;
        catch java.lang.Exception from label09 to label26 with label27;
        catch java.lang.Throwable from label08 to label31 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
    }

    static void bdiff(java.lang.String) throws java.io.IOException
    {
        int $i0, $i1, i2, i3;
        java.lang.String r2, $r5, $r10, $r18, $r23;
        java.io.PrintStream $r12, $r19;
        java.io.FileInputStream $r0, $r6;
        java.lang.StringBuilder $r1, $r3, $r4, $r7, $r8, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.FileInputStream;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>($r5);

        $r6 = new java.io.FileInputStream;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp2");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>($r10);

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        if $i0 >= 0 goto label2;

        goto label5;

     label2:
        if $i1 >= 0 goto label3;

        goto label5;

     label3:
        if $i0 == $i1 goto label4;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in1=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in2= ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r18);

        i3 = i3 + 1;

        if i3 <= 130 goto label4;

        goto label5;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("total read = ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        return;
    }

    public static long testValid(java.lang.String) throws java.io.IOException
    {
        byte[] r2;
        ucar.unidata.io.RandomAccessFile $r31;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7;
        java.io.EOFException $r28, $r29;
        java.lang.StringBuilder $r6, $r7, $r11, $r12, $r13, $r17, $r18, $r24, $r25, $r33, $r35, $r36, $r37;
        long $l0;
        int $i1, i2, $i4, $i6;
        java.lang.String r1, $r8, $r14, $r19, $r26, $r32, $r34;
        java.io.PrintStream $r5, $r10, $r16, $r20, $r23, $r27, $r30;

        r1 := @parameter0: java.lang.String;

        z4 = 0;

        z7 = 0;

        z6 = 0;

        $r31 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r31.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, "r");

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        r2 = newarray (byte)[8];

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r2);

        $r32 = new java.lang.String;

        specialinvoke $r32.<java.lang.String: void <init>(byte[])>(r2);

        $z0 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("ARCHIVE2");

        if $z0 != 0 goto label01;

        $z3 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0001");

        if $z3 == 0 goto label02;

     label01:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--Good header= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void seek(long)>(24L);

        goto label03;

     label02:
        $r27 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("--No header ");

        z4 = 1;

        z7 = 1;

        z6 = 1;

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

     label03:
        z5 = 0;

     label04:
        if z5 != 0 goto label13;

        if z7 == 0 goto label07;

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r2);

        $r34 = new java.lang.String;

        specialinvoke $r34.<java.lang.String: void <init>(byte[])>(r2);

        $z1 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("ARCHIVE2");

        if $z1 != 0 goto label05;

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0001");

        if $z2 == 0 goto label06;

     label05:
        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  found header= ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(16);

        z4 = 0;

        z7 = 0;

        z6 = 0;

        goto label07;

     label06:
        $i4 = (int) -8;

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>($i4);

     label07:
        $i1 = virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        i2 = $i1;

        $i6 = (int) -1;

        if $i1 != $i6 goto label09;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("\n--done: numCompBytes=-1 ");

     label08:
        goto label13;

     label09:
        goto label11;

     label10:
        $r29 := @caughtexception;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("\n--got EOFException ");

        goto label13;

     label11:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void print(java.lang.String)>($r14);

        if $i1 >= 0 goto label12;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n--last block ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        i2 = neg $i1;

        if z6 != 0 goto label12;

        z5 = 1;

     label12:
        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(i2);

        goto label04;

     label13:
        goto label15;

     label14:
        $r28 := @caughtexception;

        virtualinvoke $r28.<java.io.EOFException: void printStackTrace()>();

     label15:
        $l0 = virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        return $l0;

        catch java.io.EOFException from label07 to label08 with label10;
        catch java.io.EOFException from label04 to label13 with label14;
    }

    public static void main2(java.lang.String[]) throws java.io.IOException
    {
        byte $b4;
        boolean $z0;
        java.lang.StringBuilder $r4, $r7, $r8, $r9, $r12, $r14, $r15, $r20, $r22, $r23;
        java.lang.Throwable $r19;
        long $l1, $l2, $l3;
        java.lang.String[] r25;
        int $i0, i5;
        java.lang.String $r3, $r6, $r10, $r11, $r16, $r18, $r24;
        java.io.PrintStream $r5, $r13, $r17, $r21, $r26;
        java.io.File $r0, r2;
        java.io.File[] $r1;

        r25 := @parameter0: java.lang.String[];

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("C:/data/bad/radar2/");

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        i5 = 0;

     label1:
        $i0 = lengthof $r1;

        if i5 >= $i0 goto label9;

        r2 = $r1[i5];

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".ar2v");

        if $z0 != 0 goto label2;

        goto label8;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l1 = virtualinvoke r2.<java.io.File: long length()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $l2 = staticinvoke <ucar.nc2.iosp.nexrad2.Level2VolumeScan: long testValid(java.lang.String)>($r11);

        $l3 = virtualinvoke r2.<java.io.File: long length()>();

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label6;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("OK");

     label3:
        $r18 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>($r18);

     label4:
        goto label7;

     label5:
        $r19 := @caughtexception;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR=  ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

        goto label7;

     label6:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT pos=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label7:
        $r26 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r26.<java.io.PrintStream: void println()>();

     label8:
        i5 = i5 + 1;

        goto label1;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.nc2.iosp.nexrad2.Level2VolumeScan $r1;
        ucar.unidata.io.RandomAccessFile $r0;
        java.lang.String[] r2;

        r2 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: void init()>();

        $r0 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r0.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>("/upc/share/testdata/radar/nexrad/level2/Level2_KFTG_20060818_1814.ar2v.uncompress.missingradials", "r");

        $r1 = new ucar.nc2.iosp.nexrad2.Level2VolumeScan;

        specialinvoke $r1.<ucar.nc2.iosp.nexrad2.Level2VolumeScan: void <init>(ucar.unidata.io.RandomAccessFile,ucar.nc2.util.CancelTask)>($r0, null);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String AR2V0006> = "AR2V0006";

        <ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String AR2V0004> = "AR2V0004";

        <ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String AR2V0003> = "AR2V0003";

        <ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String AR2V0002> = "AR2V0002";

        <ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String AR2V0001> = "AR2V0001";

        <ucar.nc2.iosp.nexrad2.Level2VolumeScan: java.lang.String ARCHIVE2> = "ARCHIVE2";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/nexrad2/Level2VolumeScan;");

        <ucar.nc2.iosp.nexrad2.Level2VolumeScan: org.slf4j.Logger log> = $r0;

        return;
    }
}
