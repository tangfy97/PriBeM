public class org.eclipse.jdt.internal.compiler.ast.ReturnStatement extends org.eclipse.jdt.internal.compiler.ast.Statement
{
    public org.eclipse.jdt.internal.compiler.ast.Expression expression;
    public org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines;
    public org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable;
    public int initStateIndex;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r0;
        int i0, i1, $i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        $i3 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int initStateIndex> = $i3;

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceStart> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceEnd> = i1;

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression> = r1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r17;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r12, $r13, $r22;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r3;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r7, $r8, $r11, $r29;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r4, r31, $r33;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.eclipse.jdt.internal.compiler.ast.TryStatement r20;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r30;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r19;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] $r6, $r14, $r15, $r16, $r23, $r24, $r25, $r26, $r27, $r28;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r9;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r5, $r18, $r21, $r34;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r30 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r1 == null goto label01;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r30 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r2, r4, r30);

     label01:
        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i0 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r30);

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int initStateIndex> = $i0;

        r31 = r4;

        i13 = 0;

        z6 = 0;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: boolean needValueStore()>();

     label02:
        $r32 = virtualinvoke r31.<org.eclipse.jdt.internal.compiler.flow.FlowContext: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement subroutine()>();

        if $r32 == null goto label05;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        if $r23 != null goto label03;

        $r28 = newarray (org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement)[5];

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines> = $r28;

     label03:
        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        $i8 = lengthof $r24;

        if i13 != $i8 goto label04;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        $i12 = i13 * 2;

        $r26 = newarray (org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement)[$i12];

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines> = $r26;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r27, 0, $r26, 0, i13);

     label04:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        $i9 = i13;

        i13 = i13 + 1;

        $r25[$i9] = $r32;

        $z5 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: boolean isSubRoutineEscaping()>();

        if $z5 == 0 goto label05;

        z6 = 0;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits>;

        $i11 = $i10 | 536870912;

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits> = $i11;

        goto label10;

     label05:
        $r5 = virtualinvoke r30.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        virtualinvoke r31.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordReturnFrom(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r5);

        $z1 = r31 instanceof org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext;

        if $z1 == 0 goto label08;

        r19 = r31.<org.eclipse.jdt.internal.compiler.flow.FlowContext: org.eclipse.jdt.internal.compiler.ast.ASTNode associatedNode>;

        $z3 = r19 instanceof org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        if $z3 == 0 goto label06;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits>;

        $i7 = $i6 | 1073741824;

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits> = $i7;

        goto label09;

     label06:
        $z4 = r19 instanceof org.eclipse.jdt.internal.compiler.ast.TryStatement;

        if $z4 == 0 goto label09;

        r20 = (org.eclipse.jdt.internal.compiler.ast.TryStatement) r19;

        $r21 = r20.<org.eclipse.jdt.internal.compiler.ast.TryStatement: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo subRoutineInits>;

        virtualinvoke r30.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r21);

        if $z0 == 0 goto label09;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        if $r22 != null goto label07;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: void prepareSaveValueLocation(org.eclipse.jdt.internal.compiler.ast.TryStatement)>(r20);

     label07:
        z6 = 1;

        goto label09;

     label08:
        $z2 = r31 instanceof org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        if $z2 == 0 goto label09;

        $r17 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotReturnInInitializer(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r0);

        $r18 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        return $r18;

     label09:
        $r33 = r31.<org.eclipse.jdt.internal.compiler.flow.FlowContext: org.eclipse.jdt.internal.compiler.flow.FlowContext parent>;

        r31 = $r33;

        if $r33 != null goto label02;

     label10:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        if $r6 == null goto label11;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        $i5 = lengthof $r14;

        if i13 == $i5 goto label11;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        $r15 = newarray (org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement)[i13];

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines> = $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r15, 0, i13);

     label11:
        if z6 == 0 goto label12;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        if $r12 == null goto label13;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        $r13.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag> = 1;

        goto label13;

     label12:
        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable> = null;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits>;

        $i2 = $i1 & 1073741824;

        if $i2 != 0 goto label13;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r7 == null goto label13;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r10 = $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r9 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        if $r10 != $r9 goto label13;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i3 = $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i4 = $i3 | 16;

        $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i4;

     label13:
        $r34 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        return $r34;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r3, $r7, $r9, $r10, $r17, $r21;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4, $r8, $r11, $r12, $r19;
        boolean $z0, $z1, $z2, z3;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r6;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r0;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement r16;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i12, $i14;
        org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] $r2, $r5, $r14, $r15, $r18;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        java.lang.Object r13, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label01;

        return;

     label01:
        i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        z3 = 0;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: boolean needValueStore()>();

        if $z0 == 0 goto label02;

        z3 = 1;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: boolean needValue()>();

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r1, $z2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: void generateStoreSaveValueIfNecessary(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

     label02:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        if $r2 == null goto label08;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r11 != null goto label03;

        $r20 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        goto label04;

     label03:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r20 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.Object reusableJSRTarget()>();

     label04:
        r13 = $r20;

        i10 = 0;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        $i9 = lengthof $r14;

        goto label07;

     label05:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        r16 = $r15[i10];

        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int initStateIndex>;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        $z1 = virtualinvoke r16.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: boolean generateSubRoutineInvocation(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,java.lang.Object,int,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r6, r1, r13, $i7, $r17);

        if $z1 == 0 goto label06;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i8);

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: void reenterAllExceptionHandlers(org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[],int,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r18, i10, r1);

        return;

     label06:
        i10 = i10 + 1;

     label07:
        if i10 < $i9 goto label05;

     label08:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        if $r3 == null goto label09;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r9);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r10);

     label09:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r4 == null goto label10;

        if z3 != 0 goto label10;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r1, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: void generateStoreSaveValueIfNecessary(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        if $r21 == null goto label11;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r7);

     label11:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int initStateIndex>;

        $i12 = (int) -1;

        if $i3 == $i12 goto label12;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int initStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r6, $i5);

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int initStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r6, $i6);

     label12:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i4);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[] subroutines>;

        $i14 = (int) -1;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: void reenterAllExceptionHandlers(org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement[],int,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r5, $i14, r1);

        return;
    }

    public void generateReturnBytecode(org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>($r2);

        return;
    }

    public void generateStoreSaveValueIfNecessary(org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r1, $r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        if $r1 == null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void store(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,boolean)>($r3, 0);

     label1:
        return;
    }

    private boolean needValueStore()
    {
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r2, $r5, $r6;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r1 == null goto label2;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r4 = $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r3 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r4 == $r3 goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i0 = $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label2;

     label1:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z0 = $r5 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean needValue()
    {
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable>;

        if $r1 != null goto label1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits>;

        $i1 = $i0 & 1073741824;

        if $i1 != 0 goto label1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int bits>;

        $i3 = $i2 & 536870912;

        if $i3 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public void prepareSaveValueLocation(org.eclipse.jdt.internal.compiler.ast.TryStatement)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.TryStatement r1;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TryStatement;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TryStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding secretReturnValue>;

        r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding saveValueVariable> = $r2;

        return;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r5;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r2;
        java.lang.StringBuffer r0, $r1, $r4;
        int i0;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.ReturnStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return ");

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r3 == null goto label1;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r0);

     label1:
        $r4 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        return $r4;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r29;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r16, $r23, $r30, $r31, $r35;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r1;
        org.eclipse.jdt.internal.compiler.ast.Expression $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r24, $r26, $r32, $r33;
        byte $b5, $b8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, $r8, $r28, $r34, $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r38;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r25;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r4;
        long $l4, $l6, $l7;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r2, $r36;
        int $i0, $i1, $i2, $i3, $i9;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r27;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r9, $r40;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r37;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r15, $r22;

        r4 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        if $z0 == 0 goto label02;

        $r36 = $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r37 = (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration) $r36;

        $r38 = $r37.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r38 != null goto label01;

        $r39 = null;

        goto label03;

     label01:
        $r39 = $r38.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        goto label03;

     label02:
        $r39 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

     label03:
        r3 = $r39;

        $r40 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r39 != $r40 goto label06;

        $r32 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r32 != null goto label04;

        return;

     label04:
        $r33 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0);

        if $r34 == null goto label05;

        $r35 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void attemptToReturnNonVoidExpression(org.eclipse.jdt.internal.compiler.ast.ReturnStatement,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r4, $r34);

     label05:
        return;

     label06:
        $r5 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r5 != null goto label08;

        if $r39 == null goto label07;

        $r31 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void shouldReturn(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r39, r4);

     label07:
        return;

     label08:
        $r6 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: void setExpectedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r39);

        $r7 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0);

        if $r8 != null goto label09;

        return;

     label09:
        $r9 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r8 != $r9 goto label10;

        $r30 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void attemptToReturnVoidValue(org.eclipse.jdt.internal.compiler.ast.ReturnStatement)>(r4);

        return;

     label10:
        if $r39 != null goto label11;

        return;

     label11:
        if $r39 == $r8 goto label12;

        $r29 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope compilationUnitScope()>();

        virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: void recordTypeConversion(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r39, $r8);

     label12:
        $r10 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z1 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean isConstantValueOfTypeAssignableToType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8, r3);

        if $z1 != 0 goto label13;

        $z4 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        if $z4 == 0 goto label16;

     label13:
        $r11 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r3, $r8);

        $z2 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean needsUncheckedConversion(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        if $z2 == 0 goto label14;

        $r16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r17 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unsafeTypeConversion(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r17, $r8, r3);

     label14:
        $r12 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z3 = $r12 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z3 == 0 goto label15;

        $r13 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i0 = $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i1 = $i0 & 16416;

        if $i1 != 0 goto label15;

        $r14 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r15 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r14;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.CastExpression: void checkNeedForAssignedCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.CastExpression)>(r0, r3, $r15);

     label15:
        return;

     label16:
        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isBoxingCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8, r3);

        if $z5 != 0 goto label17;

        $z7 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z7 == 0 goto label19;

        $r25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l4 = $r25.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b5 = $l4 cmp 3211264L;

        $i9 = (int) $b5;

        if $i9 < 0 goto label19;

        $z8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z8 != 0 goto label19;

        $r26 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r27 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        $z9 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean isConstantValueOfTypeAssignableToType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8, $r28);

        if $z9 == 0 goto label19;

     label17:
        $r18 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r3, $r8);

        $r19 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z6 = $r19 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z6 == 0 goto label18;

        $r20 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i2 = $r20.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i3 = $i2 & 16416;

        if $i3 != 0 goto label18;

        $r21 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r22 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r21;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.CastExpression: void checkNeedForAssignedCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.CastExpression)>(r0, r3, $r22);

     label18:
        return;

     label19:
        $l6 = r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l7 = $l6 & 128L;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label20;

        $r23 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r24 = r4.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r8, r3, $r24, null);

     label20:
        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.ReturnStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r3 == null goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.ReturnStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
