public class com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler extends java.lang.Object implements com.hp.hpl.jena.graph.BulkUpdateHandler
{
    protected com.hp.hpl.jena.graph.BulkUpdateHandler base;
    protected com.hp.hpl.jena.graph.GraphEventManager manager;
    protected com.hp.hpl.jena.graph.impl.GraphWithPerform graph;

    public void <init>(com.hp.hpl.jena.graph.impl.GraphWithPerform, com.hp.hpl.jena.graph.BulkUpdateHandler)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r3;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler r2;
        com.hp.hpl.jena.graph.impl.GraphWithPerform r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.GraphWithPerform;

        r2 := @parameter1: com.hp.hpl.jena.graph.BulkUpdateHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph> = r1;

        r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base> = r2;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.graph.impl.GraphWithPerform: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager> = $r3;

        return;
    }

    public void add(com.hp.hpl.jena.graph.Triple[])
    {
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.Triple[] r1;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple[];

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void add(com.hp.hpl.jena.graph.Triple[])>(r1);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyAddArray(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple[])>($r3, r1);

        return;
    }

    public void add(java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void add(java.util.List)>(r1);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyAddList(com.hp.hpl.jena.graph.Graph,java.util.List)>($r3, r1);

        return;
    }

    public void add(java.util.Iterator)
    {
        java.util.List $r1;
        java.util.Iterator r0;
        com.hp.hpl.jena.graph.GraphEventManager $r5;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r2;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r3;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r4;

        r2 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <com.hp.hpl.jena.util.IteratorCollection: java.util.List iteratorToList(java.util.Iterator)>(r0);

        $r3 = r2.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.BulkUpdateHandler: void add(java.util.List)>($r1);

        $r5 = r2.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r4 = r2.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r5.<com.hp.hpl.jena.graph.GraphEventManager: void notifyAddIterator(com.hp.hpl.jena.graph.Graph,java.util.List)>($r4, $r1);

        return;
    }

    public void add(com.hp.hpl.jena.graph.Graph, boolean)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.Graph r1;
        boolean z0;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void add(com.hp.hpl.jena.graph.Graph,boolean)>(r1, z0);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyAddGraph(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>($r3, r1);

        return;
    }

    public void add(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void add(com.hp.hpl.jena.graph.Graph)>(r1);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyAddGraph(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>($r3, r1);

        return;
    }

    public void delete(com.hp.hpl.jena.graph.Triple[])
    {
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.Triple[] r1;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple[];

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void delete(com.hp.hpl.jena.graph.Triple[])>(r1);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyDeleteArray(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple[])>($r3, r1);

        return;
    }

    public void delete(java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void delete(java.util.List)>(r1);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyDeleteList(com.hp.hpl.jena.graph.Graph,java.util.List)>($r3, r1);

        return;
    }

    public void delete(java.util.Iterator)
    {
        java.util.List $r1;
        java.util.Iterator r0;
        com.hp.hpl.jena.graph.GraphEventManager $r5;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r2;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r3;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r4;

        r2 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <com.hp.hpl.jena.util.IteratorCollection: java.util.List iteratorToList(java.util.Iterator)>(r0);

        $r3 = r2.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.BulkUpdateHandler: void delete(java.util.List)>($r1);

        $r5 = r2.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r4 = r2.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r5.<com.hp.hpl.jena.graph.GraphEventManager: void notifyDeleteIterator(com.hp.hpl.jena.graph.Graph,java.util.List)>($r4, $r1);

        return;
    }

    public void delete(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void delete(com.hp.hpl.jena.graph.Graph)>(r1);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyDeleteGraph(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>($r3, r1);

        return;
    }

    public void delete(com.hp.hpl.jena.graph.Graph, boolean)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r2;
        com.hp.hpl.jena.graph.Graph r1;
        boolean z0;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.BulkUpdateHandler: void delete(com.hp.hpl.jena.graph.Graph,boolean)>(r1, z0);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyDeleteGraph(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>($r3, r1);

        return;
    }

    public void removeAll()
    {
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r1;
        com.hp.hpl.jena.graph.GraphEvents $r2;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.BulkUpdateHandler: void removeAll()>();

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        $r2 = <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents removeAll>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyEvent(com.hp.hpl.jena.graph.Graph,java.lang.Object)>($r3, $r2);

        return;
    }

    public void remove(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r5;
        com.hp.hpl.jena.graph.GraphEvents $r7;
        com.hp.hpl.jena.graph.Node r1, r2, r3;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r6;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r4;

        r0 := @this: com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r4 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.BulkUpdateHandler base>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.BulkUpdateHandler: void remove(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        $r5 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r6 = r0.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        $r7 = staticinvoke <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents remove(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        interfaceinvoke $r5.<com.hp.hpl.jena.graph.GraphEventManager: void notifyEvent(com.hp.hpl.jena.graph.Graph,java.lang.Object)>($r6, $r7);

        return;
    }
}
