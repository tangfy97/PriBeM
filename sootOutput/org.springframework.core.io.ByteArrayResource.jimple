public class org.springframework.core.io.ByteArrayResource extends org.springframework.core.io.AbstractResource
{
    private final byte[] byteArray;
    private final java.lang.String description;

    public void <init>(byte[])
    {
        byte[] r1;
        org.springframework.core.io.ByteArrayResource r0;

        r0 := @this: org.springframework.core.io.ByteArrayResource;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.springframework.core.io.ByteArrayResource: void <init>(byte[],java.lang.String)>(r1, "resource loaded from byte array");

        return;
    }

    public void <init>(byte[], java.lang.String)
    {
        byte[] r1;
        java.lang.String r2, $r4;
        java.lang.IllegalArgumentException $r3;
        org.springframework.core.io.ByteArrayResource r0;

        r0 := @this: org.springframework.core.io.ByteArrayResource;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.springframework.core.io.AbstractResource: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Byte array must not be null");

        throw $r3;

     label1:
        r0.<org.springframework.core.io.ByteArrayResource: byte[] byteArray> = r1;

        if r2 == null goto label2;

        $r4 = r2;

        goto label3;

     label2:
        $r4 = "";

     label3:
        r0.<org.springframework.core.io.ByteArrayResource: java.lang.String description> = $r4;

        return;
    }

    public final byte[] getByteArray()
    {
        byte[] $r1;
        org.springframework.core.io.ByteArrayResource r0;

        r0 := @this: org.springframework.core.io.ByteArrayResource;

        $r1 = r0.<org.springframework.core.io.ByteArrayResource: byte[] byteArray>;

        return $r1;
    }

    public boolean exists()
    {
        org.springframework.core.io.ByteArrayResource r0;

        r0 := @this: org.springframework.core.io.ByteArrayResource;

        return 1;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r0;
        org.springframework.core.io.ByteArrayResource r1;

        r1 := @this: org.springframework.core.io.ByteArrayResource;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = r1.<org.springframework.core.io.ByteArrayResource: byte[] byteArray>;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r0;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        org.springframework.core.io.ByteArrayResource r0;

        r0 := @this: org.springframework.core.io.ByteArrayResource;

        $r1 = r0.<org.springframework.core.io.ByteArrayResource: java.lang.String description>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r3, $r4;
        java.lang.Object r0;
        org.springframework.core.io.ByteArrayResource r1, $r2;
        boolean $z0, $z1;

        r1 := @this: org.springframework.core.io.ByteArrayResource;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label2;

        $z0 = r0 instanceof org.springframework.core.io.ByteArrayResource;

        if $z0 == 0 goto label1;

        $r2 = (org.springframework.core.io.ByteArrayResource) r0;

        $r4 = $r2.<org.springframework.core.io.ByteArrayResource: byte[] byteArray>;

        $r3 = r1.<org.springframework.core.io.ByteArrayResource: byte[] byteArray>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        byte[] $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r0;
        org.springframework.core.io.ByteArrayResource r1;

        r1 := @this: org.springframework.core.io.ByteArrayResource;

        $r0 = class "[B";

        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        $i2 = $i0 * 29;

        $r2 = r1.<org.springframework.core.io.ByteArrayResource: byte[] byteArray>;

        $i1 = lengthof $r2;

        $i3 = $i2 * $i1;

        return $i3;
    }
}
