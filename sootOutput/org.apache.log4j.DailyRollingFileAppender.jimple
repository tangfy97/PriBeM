public class org.apache.log4j.DailyRollingFileAppender extends org.apache.log4j.FileAppender
{
    static final int TOP_OF_TROUBLE;
    static final int TOP_OF_MINUTE;
    static final int TOP_OF_HOUR;
    static final int HALF_DAY;
    static final int TOP_OF_DAY;
    static final int TOP_OF_WEEK;
    static final int TOP_OF_MONTH;
    private java.lang.String datePattern;
    private java.lang.String scheduledFilename;
    private long nextCheck;
    java.util.Date now;
    java.text.SimpleDateFormat sdf;
    org.apache.log4j.RollingCalendar rc;
    int checkPeriod;
    static final java.util.TimeZone gmtTimeZone;

    public void <init>()
    {
        org.apache.log4j.DailyRollingFileAppender r0;
        org.apache.log4j.RollingCalendar $r4;
        java.util.Date $r3;
        int $i3;
        long $l0, $l1;

        r0 := @this: org.apache.log4j.DailyRollingFileAppender;

        specialinvoke r0.<org.apache.log4j.FileAppender: void <init>()>();

        r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern> = "\'.\'yyyy-MM-dd";

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l0 - 1L;

        r0.<org.apache.log4j.DailyRollingFileAppender: long nextCheck> = $l1;

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        r0.<org.apache.log4j.DailyRollingFileAppender: java.util.Date now> = $r3;

        $r4 = new org.apache.log4j.RollingCalendar;

        specialinvoke $r4.<org.apache.log4j.RollingCalendar: void <init>()>();

        r0.<org.apache.log4j.DailyRollingFileAppender: org.apache.log4j.RollingCalendar rc> = $r4;

        $i3 = (int) -1;

        r0.<org.apache.log4j.DailyRollingFileAppender: int checkPeriod> = $i3;

        return;
    }

    public void <init>(org.apache.log4j.Layout, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.util.Date $r6;
        long $l0, $l1;
        org.apache.log4j.DailyRollingFileAppender r0;
        org.apache.log4j.RollingCalendar $r7;
        int $i3;
        org.apache.log4j.Layout r1;
        java.lang.String r2, r5;

        r0 := @this: org.apache.log4j.DailyRollingFileAppender;

        r1 := @parameter0: org.apache.log4j.Layout;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.log4j.FileAppender: void <init>(org.apache.log4j.Layout,java.lang.String,boolean)>(r1, r2, 1);

        r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern> = "\'.\'yyyy-MM-dd";

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l0 - 1L;

        r0.<org.apache.log4j.DailyRollingFileAppender: long nextCheck> = $l1;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        r0.<org.apache.log4j.DailyRollingFileAppender: java.util.Date now> = $r6;

        $r7 = new org.apache.log4j.RollingCalendar;

        specialinvoke $r7.<org.apache.log4j.RollingCalendar: void <init>()>();

        r0.<org.apache.log4j.DailyRollingFileAppender: org.apache.log4j.RollingCalendar rc> = $r7;

        $i3 = (int) -1;

        r0.<org.apache.log4j.DailyRollingFileAppender: int checkPeriod> = $i3;

        r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern> = r5;

        virtualinvoke r0.<org.apache.log4j.DailyRollingFileAppender: void activateOptions()>();

        return;
    }

    public void setDatePattern(java.lang.String)
    {
        org.apache.log4j.DailyRollingFileAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.DailyRollingFileAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern> = r1;

        return;
    }

    public java.lang.String getDatePattern()
    {
        org.apache.log4j.DailyRollingFileAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.DailyRollingFileAppender;

        $r1 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern>;

        return $r1;
    }

    public void activateOptions()
    {
        java.util.Date $r9, $r18;
        java.text.SimpleDateFormat $r10, $r19;
        long $l0, $l2;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r15, $r17, $r21;
        int $i1;
        java.lang.String $r1, $r4, $r7, $r8, $r11, $r14, $r16, $r20, $r22;
        java.io.File $r13;
        org.apache.log4j.DailyRollingFileAppender r0;
        org.apache.log4j.RollingCalendar $r12;

        r0 := @this: org.apache.log4j.DailyRollingFileAppender;

        specialinvoke r0.<org.apache.log4j.FileAppender: void activateOptions()>();

        $r1 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        if $r8 == null goto label1;

        $r9 = r0.<org.apache.log4j.DailyRollingFileAppender: java.util.Date now>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r9.<java.util.Date: void setTime(long)>($l0);

        $r10 = new java.text.SimpleDateFormat;

        $r11 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern>;

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r11);

        r0.<org.apache.log4j.DailyRollingFileAppender: java.text.SimpleDateFormat sdf> = $r10;

        $i1 = virtualinvoke r0.<org.apache.log4j.DailyRollingFileAppender: int computeCheckPeriod()>();

        virtualinvoke r0.<org.apache.log4j.DailyRollingFileAppender: void printPeriodicity(int)>($i1);

        $r12 = r0.<org.apache.log4j.DailyRollingFileAppender: org.apache.log4j.RollingCalendar rc>;

        virtualinvoke $r12.<org.apache.log4j.RollingCalendar: void setType(int)>($i1);

        $r13 = new java.io.File;

        $r14 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r19 = r0.<org.apache.log4j.DailyRollingFileAppender: java.text.SimpleDateFormat sdf>;

        $r18 = new java.util.Date;

        $l2 = virtualinvoke $r13.<java.io.File: long lastModified()>();

        specialinvoke $r18.<java.util.Date: void <init>(long)>($l2);

        $r20 = virtualinvoke $r19.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r18);

        $r21 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String scheduledFilename> = $r22;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Either File or DatePattern options are not set for appender [");

        $r4 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r7);

     label2:
        return;
    }

    void printPeriodicity(int)
    {
        org.apache.log4j.DailyRollingFileAppender r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r40, $r41;
        int i0;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42;

        r2 := @this: org.apache.log4j.DailyRollingFileAppender;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appender [");

        $r33 = r2.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] to be rolled every minute.");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r36);

        goto label8;

     label2:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appender [");

        $r27 = r2.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] to be rolled on top of every hour.");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r30);

        goto label8;

     label3:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appender [");

        $r21 = r2.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] to be rolled at midday and midnight.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r24);

        goto label8;

     label4:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appender [");

        $r15 = r2.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] to be rolled at midnight.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r18);

        goto label8;

     label5:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appender [");

        $r9 = r2.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] to be rolled at start of week.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r12);

        goto label8;

     label6:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Appender [");

        $r3 = r2.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] to be rolled at start of every month.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r6);

        goto label8;

     label7:
        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown periodicity for appender [");

        $r39 = r2.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r42);

     label8:
        return;
    }

    int computeCheckPeriod()
    {
        java.util.Date $r13, $r15;
        java.text.SimpleDateFormat $r14;
        long $l0;
        java.util.Locale $r2;
        int i1, $i3;
        java.lang.String $r5, $r7, $r9, $r11;
        boolean $z0;
        java.util.TimeZone $r1, $r8;
        org.apache.log4j.DailyRollingFileAppender r4;
        org.apache.log4j.RollingCalendar $r12;

        r4 := @this: org.apache.log4j.DailyRollingFileAppender;

        $r12 = new org.apache.log4j.RollingCalendar;

        $r1 = <org.apache.log4j.DailyRollingFileAppender: java.util.TimeZone gmtTimeZone>;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r12.<org.apache.log4j.RollingCalendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        $r13 = new java.util.Date;

        specialinvoke $r13.<java.util.Date: void <init>(long)>(0L);

        $r5 = r4.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern>;

        if $r5 == null goto label3;

        i1 = 0;

     label1:
        if i1 > 5 goto label3;

        $r14 = new java.text.SimpleDateFormat;

        $r7 = r4.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern>;

        specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r7);

        $r8 = <org.apache.log4j.DailyRollingFileAppender: java.util.TimeZone gmtTimeZone>;

        virtualinvoke $r14.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r8);

        $r9 = virtualinvoke $r14.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r13);

        virtualinvoke $r12.<org.apache.log4j.RollingCalendar: void setType(int)>(i1);

        $r15 = new java.util.Date;

        $l0 = virtualinvoke $r12.<org.apache.log4j.RollingCalendar: long getNextCheckMillis(java.util.Date)>($r13);

        specialinvoke $r15.<java.util.Date: void <init>(long)>($l0);

        $r11 = virtualinvoke $r14.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r15);

        if $r9 == null goto label2;

        if $r11 == null goto label2;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    void rollOver() throws java.io.IOException
    {
        java.util.Date $r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.log4j.DailyRollingFileAppender r0;
        java.text.SimpleDateFormat $r6;
        java.lang.StringBuffer $r2, $r4, $r8, $r15, $r16, $r18, $r19, $r21, $r22, $r25, $r27, $r28, $r30, $r34, $r36, $r38, $r39;
        int $i0;
        java.lang.String $r1, $r3, $r7, $r9, $r10, $r12, $r14, $r17, $r20, $r23, $r24, $r26, $r29, $r31, $r37, $r40;
        org.apache.log4j.spi.ErrorHandler $r32, $r35;
        java.io.IOException $r33;
        java.io.File $r11, $r13;

        r0 := @this: org.apache.log4j.DailyRollingFileAppender;

        $r1 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String datePattern>;

        if $r1 != null goto label1;

        $r32 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        interfaceinvoke $r32.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String)>("Missing DatePattern option in rollOver().");

        return;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = r0.<org.apache.log4j.DailyRollingFileAppender: java.text.SimpleDateFormat sdf>;

        $r5 = r0.<org.apache.log4j.DailyRollingFileAppender: java.util.Date now>;

        $r7 = virtualinvoke $r6.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r5);

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String scheduledFilename>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke r0.<org.apache.log4j.FileAppender: void closeFile()>();

        $r11 = new java.io.File;

        $r12 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String scheduledFilename>;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12);

        $z1 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        virtualinvoke $r11.<java.io.File: boolean delete()>();

     label3:
        $r13 = new java.io.File;

        $r14 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);

        $z2 = virtualinvoke $r13.<java.io.File: boolean renameTo(java.io.File)>($r11);

        if $z2 == 0 goto label4;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r29 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String scheduledFilename>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r31);

        goto label5;

     label4:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to rename [");

        $r17 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] to [");

        $r20 = r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String scheduledFilename>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r23);

     label5:
        $r24 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $z3 = r0.<org.apache.log4j.FileAppender: boolean bufferedIO>;

        $i0 = r0.<org.apache.log4j.FileAppender: int bufferSize>;

        virtualinvoke r0.<org.apache.log4j.FileAppender: void setFile(java.lang.String,boolean,boolean,int)>($r24, 1, $z3, $i0);

     label6:
        goto label8;

     label7:
        $r33 := @caughtexception;

        $r35 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("setFile(");

        $r37 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", true) call failed.");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r35.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String)>($r40);

     label8:
        r0.<org.apache.log4j.DailyRollingFileAppender: java.lang.String scheduledFilename> = $r9;

        return;

        catch java.io.IOException from label5 to label6 with label7;
    }

    protected void subAppend(org.apache.log4j.spi.LoggingEvent)
    {
        java.util.Date $r2, $r3;
        org.apache.log4j.spi.LoggingEvent r1;
        long $l0, $l1, $l3;
        java.io.IOException $r5;
        org.apache.log4j.DailyRollingFileAppender r0;
        byte $b2;
        org.apache.log4j.RollingCalendar $r4;
        java.lang.Thread $r6;
        int $i4;
        boolean $z0;

        r0 := @this: org.apache.log4j.DailyRollingFileAppender;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<org.apache.log4j.DailyRollingFileAppender: long nextCheck>;

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 < 0 goto label5;

        $r2 = r0.<org.apache.log4j.DailyRollingFileAppender: java.util.Date now>;

        virtualinvoke $r2.<java.util.Date: void setTime(long)>($l0);

        $r4 = r0.<org.apache.log4j.DailyRollingFileAppender: org.apache.log4j.RollingCalendar rc>;

        $r3 = r0.<org.apache.log4j.DailyRollingFileAppender: java.util.Date now>;

        $l3 = virtualinvoke $r4.<org.apache.log4j.RollingCalendar: long getNextCheckMillis(java.util.Date)>($r3);

        r0.<org.apache.log4j.DailyRollingFileAppender: long nextCheck> = $l3;

     label1:
        virtualinvoke r0.<org.apache.log4j.DailyRollingFileAppender: void rollOver()>();

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $z0 = $r5 instanceof java.io.InterruptedIOException;

        if $z0 == 0 goto label4;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void interrupt()>();

     label4:
        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("rollOver() failed.", $r5);

     label5:
        specialinvoke r0.<org.apache.log4j.WriterAppender: void subAppend(org.apache.log4j.spi.LoggingEvent)>(r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.TimeZone $r0;

        <org.apache.log4j.DailyRollingFileAppender: int TOP_OF_MONTH> = 5;

        <org.apache.log4j.DailyRollingFileAppender: int TOP_OF_WEEK> = 4;

        <org.apache.log4j.DailyRollingFileAppender: int TOP_OF_DAY> = 3;

        <org.apache.log4j.DailyRollingFileAppender: int HALF_DAY> = 2;

        <org.apache.log4j.DailyRollingFileAppender: int TOP_OF_HOUR> = 1;

        <org.apache.log4j.DailyRollingFileAppender: int TOP_OF_MINUTE> = 0;

        <org.apache.log4j.DailyRollingFileAppender: int TOP_OF_TROUBLE> = -1;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <org.apache.log4j.DailyRollingFileAppender: java.util.TimeZone gmtTimeZone> = $r0;

        return;
    }
}
