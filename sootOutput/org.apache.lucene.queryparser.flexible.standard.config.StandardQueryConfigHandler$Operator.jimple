public final enum class org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator extends java.lang.Enum
{
    public static final enum org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator AND;
    public static final enum org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator OR;
    private static final org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator[] $VALUES;

    public static org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator[] values()
    {
        java.lang.Object $r1;
        org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator[] $r0, $r2;

        $r0 = <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator[]) $r1;

        return $r2;
    }

    public static org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler$Operator;", r0);

        $r2 = (org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator $r0, $r1, $r3, $r4;
        org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator[] $r2;

        $r0 = new org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator;

        specialinvoke $r0.<org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: void <init>(java.lang.String,int)>("AND", 0);

        <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator AND> = $r0;

        $r1 = new org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator;

        specialinvoke $r1.<org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: void <init>(java.lang.String,int)>("OR", 1);

        <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator OR> = $r1;

        $r2 = newarray (org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator)[2];

        $r3 = <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator AND>;

        $r2[0] = $r3;

        $r4 = <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator OR>;

        $r2[1] = $r4;

        <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator: org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator[] $VALUES> = $r2;

        return;
    }
}
