public class com.hp.hpl.jena.sparql.util.Timer extends java.lang.Object
{
    protected long timeFinish;
    protected boolean inTimer;
    protected long timeStart;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.util.Timer r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.Timer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.util.Timer: long timeFinish> = -1L;

        r0.<com.hp.hpl.jena.sparql.util.Timer: boolean inTimer> = 0;

        r0.<com.hp.hpl.jena.sparql.util.Timer: long timeStart> = 0L;

        return;
    }

    public void startTimer()
    {
        com.hp.hpl.jena.sparql.util.Timer r0;
        long $l0;
        com.hp.hpl.jena.sparql.ARQException $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.util.Timer;

        $z0 = r0.<com.hp.hpl.jena.sparql.util.Timer: boolean inTimer>;

        if $z0 == 0 goto label1;

        $r1 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Already in timer");

        throw $r1;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.hp.hpl.jena.sparql.util.Timer: long timeStart> = $l0;

        r0.<com.hp.hpl.jena.sparql.util.Timer: long timeFinish> = -1L;

        r0.<com.hp.hpl.jena.sparql.util.Timer: boolean inTimer> = 1;

        return;
    }

    public long endTimer()
    {
        com.hp.hpl.jena.sparql.util.Timer r0;
        long $l0, $l1;
        com.hp.hpl.jena.sparql.ARQException $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.util.Timer;

        $z0 = r0.<com.hp.hpl.jena.sparql.util.Timer: boolean inTimer>;

        if $z0 != 0 goto label1;

        $r1 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Not in timer");

        throw $r1;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.hp.hpl.jena.sparql.util.Timer: long timeFinish> = $l0;

        r0.<com.hp.hpl.jena.sparql.util.Timer: boolean inTimer> = 0;

        $l1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Timer: long getTimeInterval()>();

        return $l1;
    }

    public long readTimer()
    {
        com.hp.hpl.jena.sparql.util.Timer r0;
        long $l0, $l1, $l2;
        com.hp.hpl.jena.sparql.ARQException $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.util.Timer;

        $z0 = r0.<com.hp.hpl.jena.sparql.util.Timer: boolean inTimer>;

        if $z0 != 0 goto label1;

        $r1 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Not in timer");

        throw $r1;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<com.hp.hpl.jena.sparql.util.Timer: long timeStart>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public long getTimeInterval()
    {
        com.hp.hpl.jena.sparql.util.Timer r0;
        long $l0, $l2, $l3, $l4;
        byte $b1;
        com.hp.hpl.jena.sparql.ARQException $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.util.Timer;

        $z0 = r0.<com.hp.hpl.jena.sparql.util.Timer: boolean inTimer>;

        if $z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Still timing");

        throw $r2;

     label1:
        $l0 = r0.<com.hp.hpl.jena.sparql.util.Timer: long timeFinish>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        $r1 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("No valid interval");

        throw $r1;

     label2:
        $l3 = r0.<com.hp.hpl.jena.sparql.util.Timer: long timeFinish>;

        $l2 = r0.<com.hp.hpl.jena.sparql.util.Timer: long timeStart>;

        $l4 = $l3 - $l2;

        return $l4;
    }

    public static java.lang.String timeStr(long)
    {
        java.lang.Object[] $r0;
        java.lang.Double $r1;
        long l0;
        java.lang.String $r2;
        double $d0, $d1;

        l0 := @parameter0: long;

        $r0 = newarray (java.lang.Object)[1];

        $d0 = (double) l0;

        $d1 = $d0 / 1000.0;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.3f", $r0);

        return $r2;
    }

    protected java.lang.String timeStr(long, long)
    {
        com.hp.hpl.jena.sparql.util.Timer r1;
        long l0, l1, $l2;
        java.lang.String $r0;

        r1 := @this: com.hp.hpl.jena.sparql.util.Timer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = l0 - l1;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.util.Timer: java.lang.String timeStr(long)>($l2);

        return $r0;
    }
}
