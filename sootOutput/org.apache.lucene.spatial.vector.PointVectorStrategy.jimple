public class org.apache.lucene.spatial.vector.PointVectorStrategy extends org.apache.lucene.spatial.SpatialStrategy
{
    public static final java.lang.String SUFFIX_X;
    public static final java.lang.String SUFFIX_Y;
    private final java.lang.String fieldNameX;
    private final java.lang.String fieldNameY;
    public int precisionStep;

    public void <init>(com.spatial4j.core.context.SpatialContext, java.lang.String)
    {
        com.spatial4j.core.context.SpatialContext r1;
        org.apache.lucene.spatial.vector.PointVectorStrategy r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        java.lang.String r2, $r6, $r10;

        r0 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r1 := @parameter0: com.spatial4j.core.context.SpatialContext;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.spatial.SpatialStrategy: void <init>(com.spatial4j.core.context.SpatialContext,java.lang.String)>(r1, r2);

        r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: int precisionStep> = 8;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__x");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameX> = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__y");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameY> = $r10;

        return;
    }

    public void setPrecisionStep(int)
    {
        int i0, $i1, $i2;
        org.apache.lucene.spatial.vector.PointVectorStrategy r0;

        r0 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: int precisionStep> = i0;

        $i1 = r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: int precisionStep>;

        if $i1 <= 0 goto label1;

        $i2 = r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: int precisionStep>;

        if $i2 < 64 goto label2;

     label1:
        r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: int precisionStep> = 2147483647;

     label2:
        return;
    }

    java.lang.String getFieldNameX()
    {
        java.lang.String $r1;
        org.apache.lucene.spatial.vector.PointVectorStrategy r0;

        r0 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        $r1 = r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameX>;

        return $r1;
    }

    java.lang.String getFieldNameY()
    {
        java.lang.String $r1;
        org.apache.lucene.spatial.vector.PointVectorStrategy r0;

        r0 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        $r1 = r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameY>;

        return $r1;
    }

    public org.apache.lucene.document.Field[] createIndexableFields(com.spatial4j.core.shape.Shape)
    {
        java.lang.UnsupportedOperationException $r1;
        org.apache.lucene.document.Field[] $r8;
        org.apache.lucene.spatial.vector.PointVectorStrategy r6;
        com.spatial4j.core.shape.Shape r0;
        com.spatial4j.core.shape.Point $r7;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r6 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $z0 = r0 instanceof com.spatial4j.core.shape.Point;

        if $z0 == 0 goto label1;

        $r7 = (com.spatial4j.core.shape.Point) r0;

        $r8 = virtualinvoke r6.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.document.Field[] createIndexableFields(com.spatial4j.core.shape.Point)>($r7);

        return $r8;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only index Point, not ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public org.apache.lucene.document.Field[] createIndexableFields(com.spatial4j.core.shape.Point)
    {
        org.apache.lucene.document.FieldType $r0, $r1;
        org.apache.lucene.document.Field[] r3;
        org.apache.lucene.spatial.vector.PointVectorStrategy r2;
        org.apache.lucene.document.DoubleField $r4, $r7;
        int $i0;
        com.spatial4j.core.shape.Point r5;
        java.lang.String $r6, $r8;
        double $d0, $d1;

        r2 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r5 := @parameter0: com.spatial4j.core.shape.Point;

        $r0 = new org.apache.lucene.document.FieldType;

        $r1 = <org.apache.lucene.document.DoubleField: org.apache.lucene.document.FieldType TYPE_NOT_STORED>;

        specialinvoke $r0.<org.apache.lucene.document.FieldType: void <init>(org.apache.lucene.document.FieldType)>($r1);

        $i0 = r2.<org.apache.lucene.spatial.vector.PointVectorStrategy: int precisionStep>;

        virtualinvoke $r0.<org.apache.lucene.document.FieldType: void setNumericPrecisionStep(int)>($i0);

        r3 = newarray (org.apache.lucene.document.Field)[2];

        $r4 = new org.apache.lucene.document.DoubleField;

        $r6 = r2.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameX>;

        $d0 = interfaceinvoke r5.<com.spatial4j.core.shape.Point: double getX()>();

        specialinvoke $r4.<org.apache.lucene.document.DoubleField: void <init>(java.lang.String,double,org.apache.lucene.document.FieldType)>($r6, $d0, $r0);

        r3[0] = $r4;

        $r7 = new org.apache.lucene.document.DoubleField;

        $r8 = r2.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameY>;

        $d1 = interfaceinvoke r5.<com.spatial4j.core.shape.Point: double getY()>();

        specialinvoke $r7.<org.apache.lucene.document.DoubleField: void <init>(java.lang.String,double,org.apache.lucene.document.FieldType)>($r8, $d1, $r0);

        r3[1] = $r7;

        return r3;
    }

    public org.apache.lucene.queries.function.ValueSource makeDistanceValueSource(com.spatial4j.core.shape.Point)
    {
        com.spatial4j.core.shape.Point r2;
        org.apache.lucene.spatial.vector.DistanceValueSource $r0;
        org.apache.lucene.spatial.vector.PointVectorStrategy r1;

        r1 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r2 := @parameter0: com.spatial4j.core.shape.Point;

        $r0 = new org.apache.lucene.spatial.vector.DistanceValueSource;

        specialinvoke $r0.<org.apache.lucene.spatial.vector.DistanceValueSource: void <init>(org.apache.lucene.spatial.vector.PointVectorStrategy,com.spatial4j.core.shape.Point)>(r1, r2);

        return $r0;
    }

    public org.apache.lucene.search.Filter makeFilter(org.apache.lucene.spatial.query.SpatialArgs)
    {
        org.apache.lucene.search.Filter $r3;
        org.apache.lucene.search.Query $r5;
        org.apache.lucene.search.QueryWrapperFilter $r4;
        org.apache.lucene.spatial.query.SpatialArgs r1;
        org.apache.lucene.search.ConstantScoreQuery $r2;
        org.apache.lucene.spatial.vector.PointVectorStrategy r0;

        r0 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r1 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r2 = virtualinvoke r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.ConstantScoreQuery makeQuery(org.apache.lucene.spatial.query.SpatialArgs)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.ConstantScoreQuery: org.apache.lucene.search.Filter getFilter()>();

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = new org.apache.lucene.search.QueryWrapperFilter;

        $r5 = virtualinvoke $r2.<org.apache.lucene.search.ConstantScoreQuery: org.apache.lucene.search.Query getQuery()>();

        specialinvoke $r4.<org.apache.lucene.search.QueryWrapperFilter: void <init>(org.apache.lucene.search.Query)>($r5);

        return $r4;
    }

    public org.apache.lucene.search.ConstantScoreQuery makeQuery(org.apache.lucene.spatial.query.SpatialArgs)
    {
        org.apache.lucene.search.Query $r17, $r22;
        org.apache.lucene.spatial.query.UnsupportedSpatialOperation $r23;
        org.apache.lucene.spatial.vector.PointVectorStrategy r16;
        com.spatial4j.core.shape.Shape $r5;
        org.apache.lucene.spatial.query.SpatialArgs r0;
        org.apache.lucene.search.ConstantScoreQuery $r20, $r21;
        com.spatial4j.core.shape.Point $r18;
        java.lang.String $r12;
        boolean $z0, $z1, $z2;
        double $d0;
        java.lang.UnsupportedOperationException $r6;
        com.spatial4j.core.shape.Rectangle $r13, r25;
        org.apache.lucene.spatial.query.SpatialOperation[] $r2;
        org.apache.lucene.spatial.util.ValueSourceFilter $r14;
        org.apache.lucene.queries.function.ValueSource $r19;
        org.apache.lucene.search.QueryWrapperFilter $r15;
        com.spatial4j.core.shape.Circle r26;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.Class $r9;
        org.apache.lucene.spatial.query.SpatialOperation $r1, $r3, $r4, $r24;

        r16 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r0 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation getOperation()>();

        $r2 = newarray (org.apache.lucene.spatial.query.SpatialOperation)[2];

        $r3 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Intersects>;

        $r2[0] = $r3;

        $r4 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsWithin>;

        $r2[1] = $r4;

        $z0 = staticinvoke <org.apache.lucene.spatial.query.SpatialOperation: boolean is(org.apache.lucene.spatial.query.SpatialOperation,org.apache.lucene.spatial.query.SpatialOperation[])>($r1, $r2);

        if $z0 != 0 goto label1;

        $r23 = new org.apache.lucene.spatial.query.UnsupportedSpatialOperation;

        $r24 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation getOperation()>();

        specialinvoke $r23.<org.apache.lucene.spatial.query.UnsupportedSpatialOperation: void <init>(org.apache.lucene.spatial.query.SpatialOperation)>($r24);

        throw $r23;

     label1:
        $r5 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape getShape()>();

        $z1 = $r5 instanceof com.spatial4j.core.shape.Rectangle;

        if $z1 == 0 goto label2;

        r25 = (com.spatial4j.core.shape.Rectangle) $r5;

        $r21 = new org.apache.lucene.search.ConstantScoreQuery;

        $r22 = specialinvoke r16.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.Query makeWithin(com.spatial4j.core.shape.Rectangle)>(r25);

        specialinvoke $r21.<org.apache.lucene.search.ConstantScoreQuery: void <init>(org.apache.lucene.search.Query)>($r22);

        return $r21;

     label2:
        $z2 = $r5 instanceof com.spatial4j.core.shape.Circle;

        if $z2 == 0 goto label3;

        r26 = (com.spatial4j.core.shape.Circle) $r5;

        $r13 = interfaceinvoke r26.<com.spatial4j.core.shape.Circle: com.spatial4j.core.shape.Rectangle getBoundingBox()>();

        $r14 = new org.apache.lucene.spatial.util.ValueSourceFilter;

        $r15 = new org.apache.lucene.search.QueryWrapperFilter;

        $r17 = specialinvoke r16.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.Query makeWithin(com.spatial4j.core.shape.Rectangle)>($r13);

        specialinvoke $r15.<org.apache.lucene.search.QueryWrapperFilter: void <init>(org.apache.lucene.search.Query)>($r17);

        $r18 = interfaceinvoke r26.<com.spatial4j.core.shape.Circle: com.spatial4j.core.shape.Point getCenter()>();

        $r19 = virtualinvoke r16.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.queries.function.ValueSource makeDistanceValueSource(com.spatial4j.core.shape.Point)>($r18);

        $d0 = interfaceinvoke r26.<com.spatial4j.core.shape.Circle: double getRadius()>();

        specialinvoke $r14.<org.apache.lucene.spatial.util.ValueSourceFilter: void <init>(org.apache.lucene.search.Filter,org.apache.lucene.queries.function.ValueSource,double,double)>($r15, $r19, 0.0, $d0);

        $r20 = new org.apache.lucene.search.ConstantScoreQuery;

        specialinvoke $r20.<org.apache.lucene.search.ConstantScoreQuery: void <init>(org.apache.lucene.search.Filter)>($r14);

        return $r20;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only Rectangles and Circles are currently supported, found [");

        $r9 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r12);

        throw $r6;
    }

    public org.apache.lucene.search.Query makeQueryDistanceScore(org.apache.lucene.spatial.query.SpatialArgs)
    {
        org.apache.lucene.search.Query $r20, r38;
        org.apache.lucene.spatial.query.UnsupportedSpatialOperation $r18;
        com.spatial4j.core.shape.Shape $r1, $r21, $r22;
        org.apache.lucene.spatial.query.SpatialArgs r0;
        com.spatial4j.core.shape.Point $r12, $r23;
        org.apache.lucene.search.BooleanClause$Occur $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.spatial.util.CachingDoubleValueSource $r17;
        com.spatial4j.core.shape.Rectangle $r2;
        org.apache.lucene.spatial.util.ValueSourceFilter $r25;
        org.apache.lucene.search.MatchAllDocsQuery $r28;
        org.apache.lucene.search.QueryWrapperFilter $r26;
        java.lang.StringBuilder $r31, $r32, $r34, $r35;
        org.apache.lucene.queries.function.FunctionQuery $r13;
        org.apache.lucene.spatial.vector.PointVectorStrategy r11;
        java.lang.String $r36;
        double $d0;
        org.apache.lucene.search.FilteredQuery $r27;
        java.lang.UnsupportedOperationException $r29, $r30;
        org.apache.lucene.spatial.query.SpatialOperation[] $r4, $r7;
        org.apache.lucene.queries.function.ValueSource $r24, r37, r40;
        com.spatial4j.core.shape.Circle r39;
        org.apache.lucene.search.BooleanQuery $r14;
        java.lang.Class $r33;
        org.apache.lucene.spatial.query.SpatialOperation $r3, $r5, $r6, $r8, $r9, $r10, $r19;

        r11 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r0 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape getShape()>();

        $z0 = $r1 instanceof com.spatial4j.core.shape.Rectangle;

        if $z0 != 0 goto label1;

        $z5 = $r1 instanceof com.spatial4j.core.shape.Circle;

        if $z5 != 0 goto label1;

        $r30 = new java.lang.UnsupportedOperationException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only Rectangles and Circles are currently supported, found [");

        $r33 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r36);

        throw $r30;

     label1:
        $r2 = interfaceinvoke $r1.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Rectangle getBoundingBox()>();

        $z1 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: boolean getCrossesDateLine()>();

        if $z1 == 0 goto label2;

        $r29 = new java.lang.UnsupportedOperationException;

        specialinvoke $r29.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Crossing dateline not yet supported");

        throw $r29;

     label2:
        r37 = null;

        r38 = null;

        $r3 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation getOperation()>();

        $r4 = newarray (org.apache.lucene.spatial.query.SpatialOperation)[2];

        $r5 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation BBoxWithin>;

        $r4[0] = $r5;

        $r6 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation BBoxIntersects>;

        $r4[1] = $r6;

        $z2 = staticinvoke <org.apache.lucene.spatial.query.SpatialOperation: boolean is(org.apache.lucene.spatial.query.SpatialOperation,org.apache.lucene.spatial.query.SpatialOperation[])>($r3, $r4);

        if $z2 == 0 goto label3;

        r38 = specialinvoke r11.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.Query makeWithin(com.spatial4j.core.shape.Rectangle)>($r2);

        goto label5;

     label3:
        $r7 = newarray (org.apache.lucene.spatial.query.SpatialOperation)[2];

        $r8 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Intersects>;

        $r7[0] = $r8;

        $r9 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsWithin>;

        $r7[1] = $r9;

        $z3 = staticinvoke <org.apache.lucene.spatial.query.SpatialOperation: boolean is(org.apache.lucene.spatial.query.SpatialOperation,org.apache.lucene.spatial.query.SpatialOperation[])>($r3, $r7);

        if $z3 == 0 goto label4;

        $r20 = specialinvoke r11.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.Query makeWithin(com.spatial4j.core.shape.Rectangle)>($r2);

        r38 = $r20;

        $r21 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape getShape()>();

        $z4 = $r21 instanceof com.spatial4j.core.shape.Circle;

        if $z4 == 0 goto label5;

        $r22 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape getShape()>();

        r39 = (com.spatial4j.core.shape.Circle) $r22;

        $r23 = interfaceinvoke $r1.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Point getCenter()>();

        $r24 = virtualinvoke r11.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.queries.function.ValueSource makeDistanceValueSource(com.spatial4j.core.shape.Point)>($r23);

        r37 = $r24;

        $r25 = new org.apache.lucene.spatial.util.ValueSourceFilter;

        $r26 = new org.apache.lucene.search.QueryWrapperFilter;

        specialinvoke $r26.<org.apache.lucene.search.QueryWrapperFilter: void <init>(org.apache.lucene.search.Query)>($r20);

        $d0 = interfaceinvoke r39.<com.spatial4j.core.shape.Circle: double getRadius()>();

        specialinvoke $r25.<org.apache.lucene.spatial.util.ValueSourceFilter: void <init>(org.apache.lucene.search.Filter,org.apache.lucene.queries.function.ValueSource,double,double)>($r26, $r24, 0.0, $d0);

        $r27 = new org.apache.lucene.search.FilteredQuery;

        $r28 = new org.apache.lucene.search.MatchAllDocsQuery;

        specialinvoke $r28.<org.apache.lucene.search.MatchAllDocsQuery: void <init>()>();

        specialinvoke $r27.<org.apache.lucene.search.FilteredQuery: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>($r28, $r25);

        r38 = $r27;

        goto label5;

     label4:
        $r10 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsDisjointTo>;

        if $r3 != $r10 goto label5;

        r38 = specialinvoke r11.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.Query makeDisjoint(com.spatial4j.core.shape.Rectangle)>($r2);

     label5:
        if r38 != null goto label6;

        $r18 = new org.apache.lucene.spatial.query.UnsupportedSpatialOperation;

        $r19 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation getOperation()>();

        specialinvoke $r18.<org.apache.lucene.spatial.query.UnsupportedSpatialOperation: void <init>(org.apache.lucene.spatial.query.SpatialOperation)>($r19);

        throw $r18;

     label6:
        if r37 == null goto label7;

        $r17 = new org.apache.lucene.spatial.util.CachingDoubleValueSource;

        specialinvoke $r17.<org.apache.lucene.spatial.util.CachingDoubleValueSource: void <init>(org.apache.lucene.queries.function.ValueSource)>(r37);

        r40 = $r17;

        goto label8;

     label7:
        $r12 = interfaceinvoke $r1.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Point getCenter()>();

        r40 = virtualinvoke r11.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.queries.function.ValueSource makeDistanceValueSource(com.spatial4j.core.shape.Point)>($r12);

     label8:
        $r13 = new org.apache.lucene.queries.function.FunctionQuery;

        specialinvoke $r13.<org.apache.lucene.queries.function.FunctionQuery: void <init>(org.apache.lucene.queries.function.ValueSource)>(r40);

        $r14 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r14.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $r15 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        virtualinvoke $r14.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(r38, $r15);

        $r16 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        virtualinvoke $r14.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r13, $r16);

        return $r14;
    }

    private org.apache.lucene.search.Query makeWithin(com.spatial4j.core.shape.Rectangle)
    {
        org.apache.lucene.search.NumericRangeQuery $r7, $r11, $r14, $r18;
        java.lang.Double $r5, $r6, $r9, $r10, $r13, $r17;
        org.apache.lucene.spatial.vector.PointVectorStrategy r3;
        java.lang.String $r4, $r8, $r12, $r16;
        org.apache.lucene.search.BooleanClause$Occur r1, $r15, $r19;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        com.spatial4j.core.shape.Rectangle r2;
        org.apache.lucene.search.BooleanQuery $r0;

        r3 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r2 := @parameter0: com.spatial4j.core.shape.Rectangle;

        $r0 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r0.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        r1 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        $z0 = interfaceinvoke r2.<com.spatial4j.core.shape.Rectangle: boolean getCrossesDateLine()>();

        if $z0 == 0 goto label1;

        $r12 = r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameX>;

        $d4 = interfaceinvoke r2.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r14 = specialinvoke r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.NumericRangeQuery rangeQuery(java.lang.String,java.lang.Double,java.lang.Double)>($r12, null, $r13);

        $r15 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r14, $r15);

        $r16 = r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameX>;

        $d5 = interfaceinvoke r2.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r18 = specialinvoke r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.NumericRangeQuery rangeQuery(java.lang.String,java.lang.Double,java.lang.Double)>($r16, $r17, null);

        $r19 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r18, $r19);

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void setMinimumNumberShouldMatch(int)>(1);

        goto label2;

     label1:
        $r4 = r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameX>;

        $d0 = interfaceinvoke r2.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d1 = interfaceinvoke r2.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r7 = specialinvoke r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.NumericRangeQuery rangeQuery(java.lang.String,java.lang.Double,java.lang.Double)>($r4, $r5, $r6);

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r7, r1);

     label2:
        $r8 = r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameY>;

        $d2 = interfaceinvoke r2.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $d3 = interfaceinvoke r2.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r11 = specialinvoke r3.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.NumericRangeQuery rangeQuery(java.lang.String,java.lang.Double,java.lang.Double)>($r8, $r9, $r10);

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r11, r1);

        return $r0;
    }

    private org.apache.lucene.search.NumericRangeQuery rangeQuery(java.lang.String, java.lang.Double, java.lang.Double)
    {
        org.apache.lucene.search.NumericRangeQuery $r4;
        java.lang.Double r2, r3;
        int $i0;
        java.lang.String r0;
        org.apache.lucene.spatial.vector.PointVectorStrategy r1;

        r1 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        $i0 = r1.<org.apache.lucene.spatial.vector.PointVectorStrategy: int precisionStep>;

        $r4 = staticinvoke <org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newDoubleRange(java.lang.String,int,java.lang.Double,java.lang.Double,boolean,boolean)>(r0, $i0, r2, r3, 1, 1);

        return $r4;
    }

    private org.apache.lucene.search.Query makeDisjoint(com.spatial4j.core.shape.Rectangle)
    {
        org.apache.lucene.search.NumericRangeQuery $r5, $r9;
        java.lang.Double $r3, $r4, $r7, $r8;
        org.apache.lucene.spatial.vector.PointVectorStrategy r1;
        java.lang.String $r2, $r6;
        org.apache.lucene.search.BooleanClause$Occur $r11, $r12;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        java.lang.UnsupportedOperationException $r13;
        com.spatial4j.core.shape.Rectangle r0;
        org.apache.lucene.search.BooleanQuery $r10;

        r1 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r0 := @parameter0: com.spatial4j.core.shape.Rectangle;

        $z0 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: boolean getCrossesDateLine()>();

        if $z0 == 0 goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("makeDisjoint doesn\'t handle dateline cross");

        throw $r13;

     label1:
        $r2 = r1.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameX>;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d1 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r5 = specialinvoke r1.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.NumericRangeQuery rangeQuery(java.lang.String,java.lang.Double,java.lang.Double)>($r2, $r3, $r4);

        $r6 = r1.<org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String fieldNameY>;

        $d2 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $d3 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r9 = specialinvoke r1.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.NumericRangeQuery rangeQuery(java.lang.String,java.lang.Double,java.lang.Double)>($r6, $r7, $r8);

        $r10 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r10.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $r11 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;

        virtualinvoke $r10.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r5, $r11);

        $r12 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;

        virtualinvoke $r10.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r9, $r12);

        return $r10;
    }

    public volatile org.apache.lucene.search.Query makeQuery(org.apache.lucene.spatial.query.SpatialArgs)
    {
        org.apache.lucene.spatial.query.SpatialArgs r1;
        org.apache.lucene.search.ConstantScoreQuery $r2;
        org.apache.lucene.spatial.vector.PointVectorStrategy r0;

        r0 := @this: org.apache.lucene.spatial.vector.PointVectorStrategy;

        r1 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r2 = virtualinvoke r0.<org.apache.lucene.spatial.vector.PointVectorStrategy: org.apache.lucene.search.ConstantScoreQuery makeQuery(org.apache.lucene.spatial.query.SpatialArgs)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String SUFFIX_Y> = "__y";

        <org.apache.lucene.spatial.vector.PointVectorStrategy: java.lang.String SUFFIX_X> = "__x";

        return;
    }
}
