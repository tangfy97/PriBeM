public final class org.apache.poi.ss.formula.functions.Indirect extends java.lang.Object implements org.apache.poi.ss.formula.functions.FreeRefFunction
{
    public static final org.apache.poi.ss.formula.functions.FreeRefFunction instance;

    private void <init>()
    {
        org.apache.poi.ss.formula.functions.Indirect r0;

        r0 := @this: org.apache.poi.ss.formula.functions.Indirect;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(org.apache.poi.ss.formula.eval.ValueEval[], org.apache.poi.ss.formula.OperationEvaluationContext)
    {
        org.apache.poi.ss.formula.functions.Indirect r11;
        org.apache.poi.ss.formula.eval.ErrorEval $r7, $r8, $r10;
        org.apache.poi.ss.formula.eval.ValueEval[] r0;
        org.apache.poi.ss.formula.OperationEvaluationContext r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;
        org.apache.poi.ss.formula.eval.EvaluationException $r9;
        boolean z0;
        org.apache.poi.ss.formula.eval.ValueEval $r2, $r3, $r5, $r6;

        r11 := @this: org.apache.poi.ss.formula.functions.Indirect;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval[];

        r1 := @parameter1: org.apache.poi.ss.formula.OperationEvaluationContext;

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r8 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

        return $r8;

     label1:
        $r2 = r0[0];

        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.OperationEvaluationContext: int getRowIndex()>();

        $i2 = virtualinvoke r1.<org.apache.poi.ss.formula.OperationEvaluationContext: int getColumnIndex()>();

        $r3 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r2, $i1, $i2);

        $r4 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: java.lang.String coerceValueToString(org.apache.poi.ss.formula.eval.ValueEval)>($r3);

        $i3 = lengthof r0;

        lookupswitch($i3)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        z0 = 1;

        goto label6;

     label3:
        $r5 = r0[1];

        z0 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: boolean evaluateBooleanArg(org.apache.poi.ss.formula.eval.ValueEval,org.apache.poi.ss.formula.OperationEvaluationContext)>($r5, r1);

        goto label6;

     label4:
        $r7 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

     label5:
        return $r7;

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r10;

     label8:
        $r6 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: org.apache.poi.ss.formula.eval.ValueEval evaluateIndirect(org.apache.poi.ss.formula.OperationEvaluationContext,java.lang.String,boolean)>(r1, $r4, z0);

        return $r6;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label5 with label7;
    }

    private static boolean evaluateBooleanArg(org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.OperationEvaluationContext) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.MissingArgEval $r4;
        org.apache.poi.ss.formula.eval.BlankEval $r3;
        org.apache.poi.ss.formula.OperationEvaluationContext r1;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r2;
        int $i0, $i1;
        java.lang.Boolean $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        r1 := @parameter1: org.apache.poi.ss.formula.OperationEvaluationContext;

        $i0 = virtualinvoke r1.<org.apache.poi.ss.formula.OperationEvaluationContext: int getRowIndex()>();

        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.OperationEvaluationContext: int getColumnIndex()>();

        $r2 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, $i0, $i1);

        $r3 = <org.apache.poi.ss.formula.eval.BlankEval: org.apache.poi.ss.formula.eval.BlankEval instance>;

        if $r2 == $r3 goto label1;

        $r4 = <org.apache.poi.ss.formula.eval.MissingArgEval: org.apache.poi.ss.formula.eval.MissingArgEval instance>;

        if $r2 != $r4 goto label2;

     label1:
        return 0;

     label2:
        $r5 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: java.lang.Boolean coerceValueToBoolean(org.apache.poi.ss.formula.eval.ValueEval,boolean)>($r2, 0);

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private static org.apache.poi.ss.formula.eval.ValueEval evaluateIndirect(org.apache.poi.ss.formula.OperationEvaluationContext, java.lang.String, boolean)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r7;
        java.lang.String[] $r2;
        org.apache.poi.ss.formula.OperationEvaluationContext r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0, $r3, $r4, r8, r9, r10, r11, r12;
        boolean z0;
        java.lang.CharSequence $r1;
        org.apache.poi.ss.formula.eval.ValueEval $r6;

        r5 := @parameter0: org.apache.poi.ss.formula.OperationEvaluationContext;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(33);

        if $i0 >= 0 goto label1;

        r8 = null;

        r9 = null;

        r10 = r0;

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        $r2 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: java.lang.String[] parseWorkbookAndSheetName(java.lang.CharSequence)>($r1);

        if $r2 != null goto label2;

        $r7 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval REF_INVALID>;

        return $r7;

     label2:
        r8 = $r2[0];

        r9 = $r2[1];

        $i1 = $i0 + 1;

        r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label3:
        $i2 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(58);

        if $i2 >= 0 goto label4;

        r11 = virtualinvoke r10.<java.lang.String: java.lang.String trim()>();

        r12 = null;

        goto label5;

     label4:
        $r3 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        r11 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i3 = $i2 + 1;

        $r4 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i3);

        r12 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

     label5:
        $r6 = virtualinvoke r5.<org.apache.poi.ss.formula.OperationEvaluationContext: org.apache.poi.ss.formula.eval.ValueEval getDynamicReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r8, r9, r11, r12, z0);

        return $r6;
    }

    private static java.lang.String[] parseWorkbookAndSheetName(java.lang.CharSequence)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.CharSequence r0, $r4, $r5, $r9, $r13;
        java.lang.String[] $r1, $r6, $r11;
        int $i0, i1, $i3, $i4, $i5, $i8, i9, $i10, $i11, $i12, $i13;
        java.lang.String $r2, $r3, $r7, $r8, $r10, $r12, $r14, r15;
        char $c2, $c6, $c7;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i1 = $i0 - 1;

        if i1 >= 0 goto label01;

        return null;

     label01:
        $z0 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: boolean canTrim(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label02;

        return null;

     label02:
        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z1 == 0 goto label03;

        return null;

     label03:
        $i10 = (int) $c2;

        if $i10 != 39 goto label12;

        $c6 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i1);

        $i11 = (int) $c6;

        if $i11 == 39 goto label04;

        return null;

     label04:
        $c7 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(1);

        $z4 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c7);

        if $z4 == 0 goto label05;

        return null;

     label05:
        $i12 = (int) $c7;

        if $i12 != 91 goto label09;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $i8 = virtualinvoke $r12.<java.lang.String: int lastIndexOf(int)>(93);

        if $i8 >= 0 goto label06;

        return null;

     label06:
        $r13 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(2, $i8);

        $r14 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: java.lang.String unescapeString(java.lang.CharSequence)>($r13);

        r15 = $r14;

        if $r14 == null goto label07;

        $z5 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: boolean canTrim(java.lang.CharSequence)>($r14);

        if $z5 == 0 goto label08;

     label07:
        return null;

     label08:
        i9 = $i8 + 1;

        goto label10;

     label09:
        r15 = null;

        i9 = 1;

     label10:
        $r9 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i9, i1);

        $r10 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: java.lang.String unescapeString(java.lang.CharSequence)>($r9);

        if $r10 != null goto label11;

        return null;

     label11:
        $r11 = newarray (java.lang.String)[2];

        $r11[0] = r15;

        $r11[1] = $r10;

        return $r11;

     label12:
        $i13 = (int) $c2;

        if $i13 != 91 goto label16;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $i3 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(93);

        if $i3 >= 0 goto label13;

        return null;

     label13:
        $r4 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(1, $i3);

        $z2 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: boolean canTrim(java.lang.CharSequence)>($r4);

        if $z2 == 0 goto label14;

        return null;

     label14:
        $i4 = $i3 + 1;

        $i5 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $r5 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i4, $i5);

        $z3 = staticinvoke <org.apache.poi.ss.formula.functions.Indirect: boolean canTrim(java.lang.CharSequence)>($r5);

        if $z3 == 0 goto label15;

        return null;

     label15:
        $r6 = newarray (java.lang.String)[2];

        $r7 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r6[0] = $r7;

        $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r6[1] = $r8;

        return $r6;

     label16:
        $r1 = newarray (java.lang.String)[2];

        $r1[0] = null;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r1[1] = $r2;

        return $r1;
    }

    private static java.lang.String unescapeString(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        char $c1, $c2, c4;
        int $i0, i3, $i5, $i6;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        i3 = 0;

     label1:
        if i3 >= $i0 goto label4;

        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);

        c4 = $c1;

        $i5 = (int) $c1;

        if $i5 != 39 goto label3;

        i3 = i3 + 1;

        if i3 < $i0 goto label2;

        return null;

     label2:
        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);

        c4 = $c2;

        $i6 = (int) $c2;

        if $i6 == 39 goto label3;

        return null;

     label3:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static boolean canTrim(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int $i0, i1;
        char $c2, $c3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i1 = $i0 - 1;

        if i1 >= 0 goto label1;

        return 0;

     label1:
        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i1);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.functions.Indirect $r0;

        $r0 = new org.apache.poi.ss.formula.functions.Indirect;

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.Indirect: void <init>()>();

        <org.apache.poi.ss.formula.functions.Indirect: org.apache.poi.ss.formula.functions.FreeRefFunction instance> = $r0;

        return;
    }
}
