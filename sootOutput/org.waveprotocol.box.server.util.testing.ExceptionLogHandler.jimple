public class org.waveprotocol.box.server.util.testing.ExceptionLogHandler extends java.util.logging.Handler
{
    private final int fatalLevel;

    public void <init>(java.util.logging.Level)
    {
        int $i0;
        org.waveprotocol.box.server.util.testing.ExceptionLogHandler r0;
        java.util.logging.Level r1;

        r0 := @this: org.waveprotocol.box.server.util.testing.ExceptionLogHandler;

        r1 := @parameter0: java.util.logging.Level;

        specialinvoke r0.<java.util.logging.Handler: void <init>()>();

        $i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();

        r0.<org.waveprotocol.box.server.util.testing.ExceptionLogHandler: int fatalLevel> = $i0;

        return;
    }

    public void publish(java.util.logging.LogRecord)
    {
        java.lang.Throwable $r11;
        org.waveprotocol.box.server.util.testing.ExceptionLogHandler r2;
        java.lang.RuntimeException $r3;
        java.util.logging.LogRecord r0;
        java.util.logging.Level $r1, $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r2 := @this: org.waveprotocol.box.server.util.testing.ExceptionLogHandler;

        r0 := @parameter0: java.util.logging.LogRecord;

        $r1 = virtualinvoke r0.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $i0 = virtualinvoke $r1.<java.util.logging.Level: int intValue()>();

        $i1 = r2.<org.waveprotocol.box.server.util.testing.ExceptionLogHandler: int fatalLevel>;

        if $i0 < $i1 goto label1;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke r0.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r0.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r11);

        throw $r3;

     label1:
        return;
    }

    public void flush()
    {
        org.waveprotocol.box.server.util.testing.ExceptionLogHandler r0;

        r0 := @this: org.waveprotocol.box.server.util.testing.ExceptionLogHandler;

        return;
    }

    public void close()
    {
        org.waveprotocol.box.server.util.testing.ExceptionLogHandler r0;

        r0 := @this: org.waveprotocol.box.server.util.testing.ExceptionLogHandler;

        return;
    }
}
