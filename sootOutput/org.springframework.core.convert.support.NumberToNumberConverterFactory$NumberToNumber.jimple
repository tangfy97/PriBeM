final class org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{
    private final java.lang.Class targetType;

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber r0;

        r0 := @this: org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Class targetType> = r1;

        return;
    }

    public java.lang.Number convert(java.lang.Number)
    {
        org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber r1;
        java.lang.Class $r2;
        java.lang.Number r0, $r3;

        r1 := @this: org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber;

        r0 := @parameter0: java.lang.Number;

        $r2 = r1.<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Class targetType>;

        $r3 = staticinvoke <org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>(r0, $r2);

        return $r3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber r0;
        java.lang.Object r1;
        java.lang.Number $r2, $r3;

        r0 := @this: org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Number convert(java.lang.Number)>($r2);

        return $r3;
    }
}
