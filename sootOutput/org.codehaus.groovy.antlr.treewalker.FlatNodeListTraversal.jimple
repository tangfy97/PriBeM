public class org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal extends org.codehaus.groovy.antlr.treewalker.TraversalHelper
{

    public void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)
    {
        org.codehaus.groovy.antlr.treewalker.Visitor r1;
        org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal r0;

        r0 := @this: org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal;

        r1 := @parameter0: org.codehaus.groovy.antlr.treewalker.Visitor;

        specialinvoke r0.<org.codehaus.groovy.antlr.treewalker.TraversalHelper: void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)>(r1);

        return;
    }

    public groovyjarjarantlr.collections.AST process(groovyjarjarantlr.collections.AST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r1, r8;
        java.util.Iterator $r6;
        org.codehaus.groovy.antlr.treewalker.NodeCollector $r2;
        org.codehaus.groovy.antlr.treewalker.PreOrderTraversal $r3;
        java.util.List $r4;
        org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal r5;
        java.lang.Object $r7;
        groovyjarjarantlr.collections.AST r0;
        boolean $z0;

        r5 := @this: org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal;

        r0 := @parameter0: groovyjarjarantlr.collections.AST;

        r1 = (org.codehaus.groovy.antlr.GroovySourceAST) r0;

        $r2 = new org.codehaus.groovy.antlr.treewalker.NodeCollector;

        specialinvoke $r2.<org.codehaus.groovy.antlr.treewalker.NodeCollector: void <init>()>();

        $r3 = new org.codehaus.groovy.antlr.treewalker.PreOrderTraversal;

        specialinvoke $r3.<org.codehaus.groovy.antlr.treewalker.PreOrderTraversal: void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)>($r2);

        interfaceinvoke $r3.<org.codehaus.groovy.antlr.AntlrASTProcessor: groovyjarjarantlr.collections.AST process(groovyjarjarantlr.collections.AST)>(r0);

        $r4 = virtualinvoke $r2.<org.codehaus.groovy.antlr.treewalker.NodeCollector: java.util.List getNodes()>();

        virtualinvoke r5.<org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal: void setUp(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        $r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.codehaus.groovy.antlr.GroovySourceAST) $r7;

        virtualinvoke r5.<org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal: void accept(org.codehaus.groovy.antlr.GroovySourceAST)>(r8);

        goto label1;

     label2:
        virtualinvoke r5.<org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal: void tearDown(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        return null;
    }

    protected void accept(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r1;
        org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal r0;

        r0 := @this: org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        virtualinvoke r0.<org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal: void openingVisit(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        virtualinvoke r0.<org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal: void closingVisit(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        return;
    }
}
