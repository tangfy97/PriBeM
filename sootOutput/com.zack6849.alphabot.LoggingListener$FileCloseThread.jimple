class com.zack6849.alphabot.LoggingListener$FileCloseThread extends java.lang.Object implements java.lang.Runnable
{

    private void <init>()
    {
        com.zack6849.alphabot.LoggingListener$FileCloseThread r0;

        r0 := @this: com.zack6849.alphabot.LoggingListener$FileCloseThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.util.Iterator $r2;
        java.io.BufferedWriter r4;
        java.util.Collection $r1;
        java.util.HashMap $r0;
        java.lang.Exception $r5;
        com.zack6849.alphabot.LoggingListener$FileCloseThread r6;
        java.lang.Object $r3;
        boolean $z0;

        r6 := @this: com.zack6849.alphabot.LoggingListener$FileCloseThread;

        $r0 = <com.zack6849.alphabot.LoggingListener: java.util.HashMap fileWriterMap>;

        $r1 = virtualinvoke $r0.<java.util.HashMap: java.util.Collection values()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.io.BufferedWriter) $r3;

     label2:
        virtualinvoke r4.<java.io.BufferedWriter: void close()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    void <init>(com.zack6849.alphabot.LoggingListener$1)
    {
        com.zack6849.alphabot.LoggingListener$FileCloseThread r0;
        com.zack6849.alphabot.LoggingListener$1 r1;

        r0 := @this: com.zack6849.alphabot.LoggingListener$FileCloseThread;

        r1 := @parameter0: com.zack6849.alphabot.LoggingListener$1;

        specialinvoke r0.<com.zack6849.alphabot.LoggingListener$FileCloseThread: void <init>()>();

        return;
    }
}
