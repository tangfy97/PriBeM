public class com.google.gxp.base.dynamic.ImplGxpTemplate extends com.google.gxp.base.GxpTemplate
{
    private static java.util.regex.Pattern PARAM_PATTERN;

    public void <init>()
    {
        com.google.gxp.base.dynamic.ImplGxpTemplate r0;

        r0 := @this: com.google.gxp.base.dynamic.ImplGxpTemplate;

        specialinvoke r0.<com.google.gxp.base.GxpTemplate: void <init>()>();

        return;
    }

    protected static transient java.lang.String formatGxpMessage(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r8;
        java.util.regex.Matcher $r3;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r1, $r4, $r5, $r6, $r7, $r9, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0;
        java.util.regex.Pattern $r2;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.google.gxp.base.dynamic.ImplGxpTemplate: java.util.regex.Pattern PARAM_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        i5 = 0;

     label1:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find(int)>(i5);

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r3.<java.util.regex.Matcher: int start()>();

        if $i1 == i5 goto label2;

        $i4 = virtualinvoke $r3.<java.util.regex.Matcher: int start()>();

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i5, $i4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label2:
        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("%");

        if $z1 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        goto label4;

     label3:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $i3 = $i2 - 1;

        $r9 = r8[$i3];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label4:
        i5 = virtualinvoke $r3.<java.util.regex.Matcher: int end()>();

        goto label1;

     label5:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= i5 goto label6;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label6:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("%[1-9%]");

        <com.google.gxp.base.dynamic.ImplGxpTemplate: java.util.regex.Pattern PARAM_PATTERN> = $r0;

        return;
    }
}
