public class org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier extends java.lang.Object implements org.bouncycastle.crypto.modes.gcm.GCMMultiplier
{
    private final int[][][] M;

    public void <init>()
    {
        int[][][] $r1;
        org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier r0;

        r0 := @this: org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newmultiarray (int)[32][16][];

        r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M> = $r1;

        return;
    }

    public void init(byte[])
    {
        byte[] r8;
        int[][] $r3, $r6, $r9, $r12, $r15, $r18, $r20, $r23, $r26, $r29, $r32, $r34, $r37, $r39, $r42;
        int[] $r2, $r5, $r10, $r13, $r17, $r21, r24, $r27, $r30, $r35, $r40, r43, r44, r45, r46;
        int[][][] $r1, $r4, $r7, $r11, $r14, $r16, $r19, $r22, $r25, $r28, $r31, $r33, $r36, $r38, $r41;
        org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;

        r0 := @this: org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier;

        r8 := @parameter0: byte[];

        $r1 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r3 = $r1[0];

        $r2 = newarray (int)[4];

        $r3[0] = $r2;

        $r4 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r6 = $r4[1];

        $r5 = newarray (int)[4];

        $r6[0] = $r5;

        $r7 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r9 = $r7[1];

        $r10 = staticinvoke <org.bouncycastle.crypto.modes.gcm.GCMUtil: int[] asInts(byte[])>(r8);

        $r9[8] = $r10;

        i4 = 4;

     label01:
        if i4 < 1 goto label02;

        r43 = newarray (int)[4];

        $r38 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r39 = $r38[1];

        $i3 = i4 + i4;

        $r40 = $r39[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r40, 0, r43, 0, 4);

        staticinvoke <org.bouncycastle.crypto.modes.gcm.GCMUtil: void multiplyP(int[])>(r43);

        $r41 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r42 = $r41[1];

        $r42[i4] = r43;

        i4 = i4 >> 1;

        goto label01;

     label02:
        r44 = newarray (int)[4];

        $r11 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r12 = $r11[1];

        $r13 = $r12[1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r44, 0, 4);

        staticinvoke <org.bouncycastle.crypto.modes.gcm.GCMUtil: void multiplyP(int[])>(r44);

        $r14 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r15 = $r14[0];

        $r15[8] = r44;

        i5 = 4;

     label03:
        if i5 < 1 goto label04;

        r45 = newarray (int)[4];

        $r33 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r34 = $r33[0];

        $i2 = i5 + i5;

        $r35 = $r34[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r35, 0, r45, 0, 4);

        staticinvoke <org.bouncycastle.crypto.modes.gcm.GCMUtil: void multiplyP(int[])>(r45);

        $r36 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r37 = $r36[0];

        $r37[i5] = r45;

        i5 = i5 >> 1;

        goto label03;

     label04:
        i6 = 0;

     label05:
        i7 = 2;

     label06:
        if i7 >= 16 goto label09;

        i8 = 1;

     label07:
        if i8 >= i7 goto label08;

        r24 = newarray (int)[4];

        $r25 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r26 = $r25[i6];

        $r27 = $r26[i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r27, 0, r24, 0, 4);

        $r28 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r29 = $r28[i6];

        $r30 = $r29[i8];

        staticinvoke <org.bouncycastle.crypto.modes.gcm.GCMUtil: void xor(int[],int[])>(r24, $r30);

        $r31 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r32 = $r31[i6];

        $i1 = i7 + i8;

        $r32[$i1] = r24;

        i8 = i8 + 1;

        goto label07;

     label08:
        i7 = i7 + i7;

        goto label06;

     label09:
        i6 = i6 + 1;

        if i6 != 32 goto label10;

        return;

     label10:
        if i6 <= 1 goto label05;

        $r16 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r18 = $r16[i6];

        $r17 = newarray (int)[4];

        $r18[0] = $r17;

        i9 = 8;

     label11:
        if i9 <= 0 goto label12;

        r46 = newarray (int)[4];

        $r19 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $i0 = i6 - 2;

        $r20 = $r19[$i0];

        $r21 = $r20[i9];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, r46, 0, 4);

        staticinvoke <org.bouncycastle.crypto.modes.gcm.GCMUtil: void multiplyP8(int[])>(r46);

        $r22 = r0.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $r23 = $r22[i6];

        $r23[i9] = r46;

        i9 = i9 >> 1;

        goto label11;

     label12:
        goto label05;
    }

    public void multiplyH(byte[])
    {
        byte[] r1;
        int[][] $r4, $r6;
        byte $b5, $b6, $b21;
        int[] r0, r7, r8;
        int[][][] $r3, $r5;
        org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier r2;
        short $s22, $s38;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, $i37, $i39, $i41;

        r2 := @this: org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier;

        r1 := @parameter0: byte[];

        r0 = newarray (int)[4];

        i36 = 15;

     label1:
        if i36 < 0 goto label2;

        $r3 = r2.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $i4 = i36 + i36;

        $r4 = $r3[$i4];

        $b5 = r1[i36];

        $b6 = $b5 & 15;

        $i37 = (int) $b6;

        r7 = $r4[$i37];

        $i8 = r0[0];

        $i7 = r7[0];

        $i9 = $i8 ^ $i7;

        r0[0] = $i9;

        $i11 = r0[1];

        $i10 = r7[1];

        $i12 = $i11 ^ $i10;

        r0[1] = $i12;

        $i14 = r0[2];

        $i13 = r7[2];

        $i15 = $i14 ^ $i13;

        r0[2] = $i15;

        $i17 = r0[3];

        $i16 = r7[3];

        $i18 = $i17 ^ $i16;

        r0[3] = $i18;

        $r5 = r2.<org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier: int[][][] M>;

        $i19 = i36 + i36;

        $i20 = $i19 + 1;

        $r6 = $r5[$i20];

        $b21 = r1[i36];

        $s38 = (short) $b21;

        $s22 = $s38 & 240;

        $i39 = (int) $s22;

        $i23 = $i39 >>> 4;

        r8 = $r6[$i23];

        $i25 = r0[0];

        $i24 = r8[0];

        $i26 = $i25 ^ $i24;

        r0[0] = $i26;

        $i28 = r0[1];

        $i27 = r8[1];

        $i29 = $i28 ^ $i27;

        r0[1] = $i29;

        $i31 = r0[2];

        $i30 = r8[2];

        $i32 = $i31 ^ $i30;

        r0[2] = $i32;

        $i34 = r0[3];

        $i33 = r8[3];

        $i35 = $i34 ^ $i33;

        r0[3] = $i35;

        $i41 = (int) -1;

        i36 = i36 + $i41;

        goto label1;

     label2:
        $i0 = r0[0];

        staticinvoke <org.bouncycastle.crypto.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 0);

        $i1 = r0[1];

        staticinvoke <org.bouncycastle.crypto.util.Pack: void intToBigEndian(int,byte[],int)>($i1, r1, 4);

        $i2 = r0[2];

        staticinvoke <org.bouncycastle.crypto.util.Pack: void intToBigEndian(int,byte[],int)>($i2, r1, 8);

        $i3 = r0[3];

        staticinvoke <org.bouncycastle.crypto.util.Pack: void intToBigEndian(int,byte[],int)>($i3, r1, 12);

        return;
    }
}
