public interface  org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSinkFactory extends java.lang.Object
{
    public static final org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSinkFactory PASS_THROUGH;

    public abstract org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSink create(org.waveprotocol.wave.model.id.WaveletId, org.waveprotocol.wave.concurrencycontrol.wave.FlushingOperationSink, org.waveprotocol.wave.model.operation.SilentOperationSink);

    static void <clinit>()
    {
        org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSinkFactory$1 $r0;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSinkFactory$1;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSinkFactory$1: void <init>()>();

        <org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSinkFactory: org.waveprotocol.wave.concurrencycontrol.wave.DuplexOpSinkFactory PASS_THROUGH> = $r0;

        return;
    }
}
