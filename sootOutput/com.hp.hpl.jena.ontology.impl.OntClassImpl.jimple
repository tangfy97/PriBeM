public class com.hp.hpl.jena.ontology.impl.OntClassImpl extends com.hp.hpl.jena.ontology.impl.OntResourceImpl implements com.hp.hpl.jena.ontology.OntClass
{
    private static final java.lang.String[] IGNORE_NAMESPACES;
    public static com.hp.hpl.jena.enhanced.Implementation factory;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void setSuperClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "SUB_CLASS_OF", r3);

        return;
    }

    public void addSuperClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "SUB_CLASS_OF", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntClass getSuperClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.OntClass $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode objectAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "SUB_CLASS_OF", class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r4 = (com.hp.hpl.jena.ontology.OntClass) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperClasses()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r8;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter $r6;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7, $r9;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDirectPropertyValues(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class,com.hp.hpl.jena.rdf.model.Property,boolean,boolean)>($r2, "SUB_CLASS_OF", class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, z0, 0);

        $r6 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter;

        specialinvoke $r6.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter: void <init>(com.hp.hpl.jena.ontology.impl.OntResourceImpl,java.lang.Object)>(r0, r0);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        $r8 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r8.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r9 = interfaceinvoke $r7.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r8);

        return $r9;
    }

    public boolean hasSuperClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasSuperClass(com.hp.hpl.jena.rdf.model.Resource,boolean)>(r1, 0);

        return $z0;
    }

    public boolean hasSuperClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.ontology.OntClass $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.OntClass getSuperClass()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasSuperClass(com.hp.hpl.jena.rdf.model.Resource, boolean)
    {
        com.hp.hpl.jena.reasoner.InfGraph r14;
        com.hp.hpl.jena.enhanced.EnhGraph $r1, $r2, $r7, $r11;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r5, $r6, $r13;
        com.hp.hpl.jena.ontology.OntModel r8;
        com.hp.hpl.jena.graph.Graph $r9, $r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.hp.hpl.jena.reasoner.Reasoner $r4;
        com.hp.hpl.jena.ontology.Profile $r12;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $z7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r13, "SUB_CLASS_OF", r3);

        return $z7;

     label1:
        r14 = null;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $z1 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        r14 = (com.hp.hpl.jena.reasoner.InfGraph) $r11;

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $z2 = $r2 instanceof com.hp.hpl.jena.ontology.OntModel;

        if $z2 == 0 goto label3;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        r8 = (com.hp.hpl.jena.ontology.OntModel) $r7;

        $r9 = interfaceinvoke r8.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z6 = $r9 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z6 == 0 goto label3;

        $r10 = interfaceinvoke r8.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.graph.Graph getGraph()>();

        r14 = (com.hp.hpl.jena.reasoner.InfGraph) $r10;

     label3:
        if r14 == null goto label4;

        $r4 = interfaceinvoke r14.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        $r5 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property directSubClassOf>;

        $z4 = interfaceinvoke $r4.<com.hp.hpl.jena.reasoner.Reasoner: boolean supportsProperty(com.hp.hpl.jena.rdf.model.Property)>($r5);

        if $z4 == 0 goto label4;

        $r6 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property directSubClassOf>;

        $z5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r6, "direct sub-class", r3);

        return $z5;

     label4:
        $z3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasSuperClassDirect(com.hp.hpl.jena.rdf.model.Resource)>(r3);

        return $z3;
    }

    public void removeSuperClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "SUB_CLASS_OF", r3);

        return;
    }

    public void setSubClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r8;
        com.hp.hpl.jena.ontology.Profile $r1, $r4;
        com.hp.hpl.jena.rdf.model.Resource r7;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.StmtIterator $r6;
        com.hp.hpl.jena.rdf.model.Property $r2, $r5;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.OntClass $r9;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "SUB_CLASS_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r6 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r5, r0);

     label1:
        $z0 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: java.lang.Object removeNext()>();

        goto label1;

     label2:
        $r8 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r9 = (com.hp.hpl.jena.ontology.OntClass) $r8;

        interfaceinvoke $r9.<com.hp.hpl.jena.ontology.OntClass: void addSuperClass(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        return;
    }

    public void addSubClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.OntClass $r3;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r3 = (com.hp.hpl.jena.ontology.OntClass) $r1;

        interfaceinvoke $r3.<com.hp.hpl.jena.ontology.OntClass: void addSuperClass(com.hp.hpl.jena.rdf.model.Resource)>(r2);

        return;
    }

    public com.hp.hpl.jena.ontology.OntClass getSubClass()
    {
        java.lang.Throwable $r10;
        com.hp.hpl.jena.rdf.model.RDFNode $r9;
        com.hp.hpl.jena.ontology.Profile $r1, $r4;
        com.hp.hpl.jena.rdf.model.Statement $r7;
        com.hp.hpl.jena.rdf.model.Resource $r8;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.StmtIterator $r6;
        com.hp.hpl.jena.rdf.model.Property $r2, $r5;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.OntClass r11;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "SUB_CLASS_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r6 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r5, r0);

     label1:
        $z0 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        r11 = (com.hp.hpl.jena.ontology.OntClass) $r9;

     label2:
        interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return r11;

     label3:
        interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return null;

     label4:
        $r10 := @caughtexception;

     label5:
        interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSubClasses()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSubClasses(boolean)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSubClasses(boolean)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r8;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter $r6;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7, $r9;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDirectPropertyValues(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class,com.hp.hpl.jena.rdf.model.Property,boolean,boolean)>($r2, "SUB_CLASS_OF", class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, z0, 1);

        $r6 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter;

        specialinvoke $r6.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter: void <init>(com.hp.hpl.jena.ontology.impl.OntResourceImpl,java.lang.Object)>(r0, r0);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        $r8 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r8.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r9 = interfaceinvoke $r7.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r8);

        return $r9;
    }

    public boolean hasSubClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasSubClass(com.hp.hpl.jena.rdf.model.Resource,boolean)>(r1, 0);

        return $z0;
    }

    public boolean hasSubClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.ontology.OntClass $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.OntClass getSubClass()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasSubClass(com.hp.hpl.jena.rdf.model.Resource, boolean)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r6;
        com.hp.hpl.jena.rdf.model.Resource r5;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Model $r1, $r2, $r3, $r4;
        com.hp.hpl.jena.ontology.OntClass $r7;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r5 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        z1 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.ontology.OntModel;

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        if $r2 == null goto label1;

        $r4 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $z2 = $r4 instanceof com.hp.hpl.jena.ontology.OntModel;

        if $z2 != 0 goto label2;

     label1:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        r5 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)>($r3);

     label2:
        $r6 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r7 = (com.hp.hpl.jena.ontology.OntClass) $r6;

        $z3 = interfaceinvoke $r7.<com.hp.hpl.jena.ontology.OntClass: boolean hasSuperClass(com.hp.hpl.jena.rdf.model.Resource,boolean)>(r0, z1);

        return $z3;
    }

    public void removeSubClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.OntClass $r3;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r3 = (com.hp.hpl.jena.ontology.OntClass) $r1;

        interfaceinvoke $r3.<com.hp.hpl.jena.ontology.OntClass: void removeSuperClass(com.hp.hpl.jena.rdf.model.Resource)>(r2);

        return;
    }

    public void setEquivalentClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_CLASS", r3);

        return;
    }

    public void addEquivalentClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_CLASS", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntClass getEquivalentClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.OntClass $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_CLASS()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode objectAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "EQUIVALENT_CLASS", class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r4 = (com.hp.hpl.jena.ontology.OntClass) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listEquivalentClasses()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3, $r5;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_CLASS()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "EQUIVALENT_CLASS", class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r4 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r4.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r4);

        return $r5;
    }

    public boolean hasEquivalentClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_CLASS()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_CLASS", r3);

        return $z0;
    }

    public void removeEquivalentClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_CLASS", r3);

        return;
    }

    public void setDisjointWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DISJOINT_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DISJOINT_WITH", r3);

        return;
    }

    public void addDisjointWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DISJOINT_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DISJOINT_WITH", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntClass getDisjointWith()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.OntClass $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DISJOINT_WITH()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode objectAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "DISJOINT_WITH", class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r4 = (com.hp.hpl.jena.ontology.OntClass) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDisjointWith()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3, $r5;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DISJOINT_WITH()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "DISJOINT_WITH", class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r4 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r4.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r4);

        return $r5;
    }

    public boolean isDisjointWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DISJOINT_WITH()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DISJOINT_WITH", r3);

        return $z0;
    }

    public void removeDisjointWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DISJOINT_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DISJOINT_WITH", r3);

        return;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaredProperties()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)
    {
        java.util.ArrayList $r15;
        java.util.HashSet $r14;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r1;
        com.hp.hpl.jena.rdf.model.Property r9;
        int $i0, i1, $i3;
        boolean $z0, z1, $z2;
        java.util.Iterator $r4;
        com.hp.hpl.jena.rdf.model.RDFNode $r13;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$AsMapper $r16;
        com.hp.hpl.jena.rdf.model.Statement $r11;
        com.hp.hpl.jena.rdf.model.Resource $r12;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r5, $r7;
        java.lang.Object $r8, $r10;

        r1 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        z1 := @parameter0: boolean;

        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAllProperties()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.hp.hpl.jena.rdf.model.Statement) $r10;

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/Property;");

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r15.<java.util.List: boolean addAll(java.util.Collection)>($r14);

        $i0 = interfaceinvoke $r15.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label3:
        if i1 < 0 goto label5;

        $r8 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i1);

        r9 = (com.hp.hpl.jena.rdf.model.Property) $r8;

        $z2 = virtualinvoke r1.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasDeclaredProperty(com.hp.hpl.jena.rdf.model.Property,boolean)>(r9, z1);

        if $z2 != 0 goto label4;

        interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>(i1);

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label3;

     label5:
        $r4 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

        $r5 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r4);

        $r16 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$AsMapper;

        specialinvoke $r16.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$AsMapper: void <init>(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r16);

        return $r7;
    }

    public boolean hasDeclaredProperty(com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property r1;
        boolean z0, $z1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean testDomain(com.hp.hpl.jena.rdf.model.Property,boolean)>(r1, z0);

        return $z1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listInstances()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listInstances(boolean)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listInstances(boolean)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl$2 $r6;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r8;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper $r4;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7, $r9;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.rdf.model.Model $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r2 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r2, r0);

        $r4 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper;

        specialinvoke $r4.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper: void <init>(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/Individual;");

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r4);

        $r6 = new com.hp.hpl.jena.ontology.impl.OntClassImpl$2;

        specialinvoke $r6.<com.hp.hpl.jena.ontology.impl.OntClassImpl$2: void <init>(com.hp.hpl.jena.ontology.impl.OntClassImpl,boolean)>(r0, z0);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        $r8 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r8.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r9 = interfaceinvoke $r7.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r8);

        return $r9;
    }

    public com.hp.hpl.jena.ontology.Individual createIndividual()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.ontology.OntModel $r2;
        com.hp.hpl.jena.ontology.Individual $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r2 = (com.hp.hpl.jena.ontology.OntModel) $r1;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.ontology.Individual createIndividual(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        return $r3;
    }

    public com.hp.hpl.jena.ontology.Individual createIndividual(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Model $r1;
        java.lang.String r2;
        com.hp.hpl.jena.ontology.OntModel $r3;
        com.hp.hpl.jena.ontology.Individual $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r3 = (com.hp.hpl.jena.ontology.OntModel) $r1;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.ontology.Individual createIndividual(java.lang.String,com.hp.hpl.jena.rdf.model.Resource)>(r2, r0);

        return $r4;
    }

    public void dropIndividual(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r2, $r3, r0);

        return;
    }

    public boolean isHierarchyRoot()
    {
        java.lang.Throwable $r9;
        com.hp.hpl.jena.ontology.Profile $r1, $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, r5, $r7, $r8;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource NOTHING()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)>(1);

     label2:
        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.rdf.model.Resource) $r4;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource THING()>();

        $z2 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label4;

        $r8 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Resource>;

        $z3 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r8);

        if $z3 != 0 goto label4;

        $z4 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>(r0);

        if $z4 != 0 goto label4;

     label3:
        interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        return 0;

     label4:
        goto label2;

     label5:
        interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        goto label8;

     label6:
        $r9 := @caughtexception;

     label7:
        interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        throw $r9;

     label8:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public com.hp.hpl.jena.ontology.EnumeratedClass asEnumeratedClass()
    {
        com.hp.hpl.jena.ontology.EnumeratedClass $r2;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/EnumeratedClass;");

        $r2 = (com.hp.hpl.jena.ontology.EnumeratedClass) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.UnionClass asUnionClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.UnionClass $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/UnionClass;");

        $r2 = (com.hp.hpl.jena.ontology.UnionClass) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.IntersectionClass asIntersectionClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.ontology.IntersectionClass $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/IntersectionClass;");

        $r2 = (com.hp.hpl.jena.ontology.IntersectionClass) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.ComplementClass asComplementClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.ontology.ComplementClass $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/ComplementClass;");

        $r2 = (com.hp.hpl.jena.ontology.ComplementClass) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.Restriction asRestriction()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.ontology.Restriction $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/Restriction;");

        $r2 = (com.hp.hpl.jena.ontology.Restriction) $r1;

        return $r2;
    }

    public boolean isEnumeratedClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "ONE_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r4);

        return $z0;
    }

    public boolean isUnionClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property UNION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "UNION_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property UNION_OF()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r4);

        return $z0;
    }

    public boolean isIntersectionClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "INTERSECTION_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r4);

        return $z0;
    }

    public boolean isComplementClass()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "COMPLEMENT_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r4);

        return $z0;
    }

    public boolean isRestriction()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r7;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r4);

        if $z0 != 0 goto label1;

        $r5 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r5, $r7);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public com.hp.hpl.jena.ontology.EnumeratedClass convertToEnumeratedClass(com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.ontology.EnumeratedClass $r5;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.RDFList r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "ONE_OF", r3);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/EnumeratedClass;");

        $r5 = (com.hp.hpl.jena.ontology.EnumeratedClass) $r4;

        return $r5;
    }

    public com.hp.hpl.jena.ontology.IntersectionClass convertToIntersectionClass(com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.ontology.IntersectionClass $r5;
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.RDFList r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INTERSECTION_OF", r3);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/IntersectionClass;");

        $r5 = (com.hp.hpl.jena.ontology.IntersectionClass) $r4;

        return $r5;
    }

    public com.hp.hpl.jena.ontology.UnionClass convertToUnionClass(com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.RDFList r3;
        com.hp.hpl.jena.ontology.UnionClass $r5;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property UNION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "UNION_OF", r3);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/UnionClass;");

        $r5 = (com.hp.hpl.jena.ontology.UnionClass) $r4;

        return $r5;
    }

    public com.hp.hpl.jena.ontology.ComplementClass convertToComplementClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.ComplementClass $r5;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "COMPLEMENT_OF", r3);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/ComplementClass;");

        $r5 = (com.hp.hpl.jena.ontology.ComplementClass) $r4;

        return $r5;
    }

    public com.hp.hpl.jena.ontology.Restriction convertToRestriction(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r6;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r9;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r4, r5;
        com.hp.hpl.jena.ontology.Restriction $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r5 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasRDFType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,boolean)>($r2, "RESTRICTION", 0);

        if $z0 != 0 goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setRDFType(com.hp.hpl.jena.rdf.model.Resource)>($r9);

     label1:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r4, "ON_PROPERTY", r5);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/Restriction;");

        $r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        return $r7;
    }

    protected boolean hasSuperClassDirect(com.hp.hpl.jena.rdf.model.Resource)
    {
        java.lang.Throwable $r8;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.rdf.model.Resource r6;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r6 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDirectPropertyValues(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class,com.hp.hpl.jena.rdf.model.Property,boolean,boolean)>($r2, "subClassOf", class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, 1, 0);

     label1:
        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r6.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label1;

     label2:
        interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        return 1;

     label3:
        interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        throw $r8;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected boolean testDomain(com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        java.lang.String[] $r2, $r13;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r7;
        com.hp.hpl.jena.rdf.model.Property r0, $r6;
        int $i0, i1;
        java.lang.String $r1, $r14;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10;
        com.hp.hpl.jena.ontology.Profile $r5, $r10;
        com.hp.hpl.jena.rdf.model.Statement $r8;
        com.hp.hpl.jena.rdf.model.Resource $r9, $r11, $r12;
        com.hp.hpl.jena.rdf.model.Model $r4;

        r3 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        z1 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getNameSpace()>();

        i1 = 0;

     label01:
        $r2 = <com.hp.hpl.jena.ontology.impl.OntClassImpl: java.lang.String[] IGNORE_NAMESPACES>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label03;

        $r13 = <com.hp.hpl.jena.ontology.impl.OntClassImpl: java.lang.String[] IGNORE_NAMESPACES>;

        $r14 = $r13[i1];

        $z7 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z7 == 0 goto label02;

        return 0;

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        z8 = 1;

        z9 = 0;

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r5 = virtualinvoke r3.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DOMAIN()>();

        $r7 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, $r6, null);

     label04:
        $z0 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource()>();

        $r10 = virtualinvoke r3.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource THING()>();

        $z3 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r11);

        if $z3 != 0 goto label06;

        $r12 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Resource>;

        $z4 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label06;

        z8 = 0;

        $z5 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>(r3);

        if $z5 == 0 goto label05;

        z9 = 1;

        goto label06;

     label05:
        $z6 = virtualinvoke r3.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean canProveSuperClass(com.hp.hpl.jena.rdf.model.Resource)>($r9);

        if $z6 != 0 goto label06;

        return 0;

     label06:
        goto label04;

     label07:
        if z1 == 0 goto label11;

        if z9 != 0 goto label08;

        if z8 == 0 goto label09;

        $z2 = virtualinvoke r3.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean isHierarchyRoot()>();

        if $z2 == 0 goto label09;

     label08:
        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        return $z10;

     label11:
        return 1;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator listAllProperties()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.StmtIterator $r7, $r18, $r21, $r24, $r27, $r30, $r33, $r36;
        com.hp.hpl.jena.rdf.model.Property $r4, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r40;
        com.hp.hpl.jena.ontology.OntModel r2;
        boolean $z0;
        com.hp.hpl.jena.reasoner.Reasoner $r8, $r37;
        com.hp.hpl.jena.ontology.Profile $r3, $r5;
        com.hp.hpl.jena.rdf.model.Resource $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r39;
        com.hp.hpl.jena.util.iterator.ExtendedIterator r41;
        com.hp.hpl.jena.rdf.model.Model $r1, $r38;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        r2 = (com.hp.hpl.jena.ontology.OntModel) $r1;

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource PROPERTY()>();

        $r7 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r4, $r6);

        r41 = $r7;

        $r8 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        if $r8 == null goto label1;

        $r37 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        $r38 = interfaceinvoke $r37.<com.hp.hpl.jena.reasoner.Reasoner: com.hp.hpl.jena.rdf.model.Model getReasonerCapabilities()>();

        $r40 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property supportsP>;

        $r39 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource ObjectProperty>;

        $z0 = interfaceinvoke $r38.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r40, $r39);

        if $z0 == 0 goto label1;

        return $r7;

     label1:
        $r9 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        if $r9 == null goto label2;

        $r34 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r35 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        $r36 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r34, $r35);

        r41 = interfaceinvoke $r7.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r36);

     label2:
        $r10 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        if $r10 == null goto label3;

        $r31 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r32 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        $r33 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r31, $r32);

        r41 = interfaceinvoke r41.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r33);

     label3:
        $r11 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        if $r11 == null goto label4;

        $r28 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r29 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        $r30 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r28, $r29);

        r41 = interfaceinvoke r41.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r30);

     label4:
        $r12 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        if $r12 == null goto label5;

        $r25 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r26 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        $r27 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r25, $r26);

        r41 = interfaceinvoke r41.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r27);

     label5:
        $r13 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        if $r13 == null goto label6;

        $r22 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r23 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        $r24 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r22, $r23);

        r41 = interfaceinvoke r41.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r24);

     label6:
        $r14 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        if $r14 == null goto label7;

        $r19 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r20 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        $r21 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r19, $r20);

        r41 = interfaceinvoke r41.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r21);

     label7:
        $r15 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ANNOTATION_PROPERTY()>();

        if $r15 == null goto label8;

        $r16 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r17 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ANNOTATION_PROPERTY()>();

        $r18 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r16, $r17);

        r41 = interfaceinvoke r41.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r18);

     label8:
        return r41;
    }

    protected boolean canProveSuperClass(com.hp.hpl.jena.rdf.model.Resource)
    {
        java.util.ArrayList $r5;
        java.util.HashSet $r4;
        com.hp.hpl.jena.ontology.impl.OntClassImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r13, $r14;
        com.hp.hpl.jena.ontology.OntClass r7;
        com.hp.hpl.jena.ontology.OntModel r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.hp.hpl.jena.reasoner.Reasoner $r3, $r11;
        com.hp.hpl.jena.rdf.model.Resource r8;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r9;
        com.hp.hpl.jena.rdf.model.Model $r1, $r12;
        java.lang.Object $r6, $r10;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntClassImpl;

        r8 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        r2 = (com.hp.hpl.jena.ontology.OntModel) $r1;

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        if $r3 == null goto label1;

        $r11 = interfaceinvoke r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.reasoner.Reasoner: com.hp.hpl.jena.rdf.model.Model getReasonerCapabilities()>();

        $r14 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property supportsP>;

        $r13 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property subClassOf>;

        $z3 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r14, $r13);

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntClassImpl: boolean hasSuperClass(com.hp.hpl.jena.rdf.model.Resource)>(r8);

        return $z4;

     label1:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

     label2:
        $z5 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z5 != 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(0);

        r7 = (com.hp.hpl.jena.ontology.OntClass) $r6;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r7);

        if $z0 != 0 goto label5;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r7);

        $z1 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $r9 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperClasses()>();

     label4:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label4;

     label5:
        goto label2;

     label6:
        return 0;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.impl.OntClassImpl$1 $r3;
        java.lang.String[] $r0;
        java.lang.String $r1, $r2;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "http://www.w3.org/2002/07/owl#";

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        $r0[1] = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.vocabulary.RDFS: java.lang.String getURI()>();

        $r0[2] = $r2;

        $r0[3] = "urn:x-hp-jena:rubrik/";

        <com.hp.hpl.jena.ontology.impl.OntClassImpl: java.lang.String[] IGNORE_NAMESPACES> = $r0;

        $r3 = new com.hp.hpl.jena.ontology.impl.OntClassImpl$1;

        specialinvoke $r3.<com.hp.hpl.jena.ontology.impl.OntClassImpl$1: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.OntClassImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r3;

        return;
    }
}
