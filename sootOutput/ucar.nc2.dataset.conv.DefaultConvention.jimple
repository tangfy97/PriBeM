public class ucar.nc2.dataset.conv.DefaultConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    protected ucar.nc2.dataset.ProjectionCT projCT;

    public void <init>()
    {
        ucar.nc2.dataset.conv.DefaultConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT projCT> = null;

        r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String conventionName> = "Default";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.dataset.conv.DefaultConvention r0;
        ucar.nc2.util.CancelTask r16;
        ucar.nc2.constants.AxisType $r6, $r8;
        java.lang.String $r7, $r9, $r15;
        ucar.nc2.dataset.VariableDS $r5;
        ucar.nc2.dataset.ProjectionCT $r2, $r3, $r4;
        ucar.nc2.Attribute $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r16 := @parameter1: ucar.nc2.util.CancelTask;

        $r2 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT makeProjectionCT(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r2;

        $r3 = r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r3 == null goto label1;

        $r4 = r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r1, $r4);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r5);

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        $r7 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findCoordinateName(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r6);

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        $r9 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findCoordinateName(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r8);

        if $r7 == null goto label1;

        if $r9 == null goto label1;

        $r10 = new ucar.nc2.Attribute;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", $r15);

        virtualinvoke $r5.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

     label1:
        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    protected void findCoordinateAxes(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.constants.AxisType $r9, $r16, $r26, $r34;
        java.lang.Object[] $r18, $r27, $r42;
        ucar.nc2.dataset.conv.DefaultConvention r0;
        java.lang.String $r21, $r25, $r30, $r36, $r38, $r40, $r45;
        ucar.nc2.dataset.VariableEnhanced $r15, $r33;
        ucar.nc2.Dimension $r41;
        ucar.nc2.dataset.NetcdfDataset r5;
        java.util.Formatter $r20, $r29, $r44;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.List $r1, $r3, $r7, $r11, $r22;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess r46, r48, r49, r50, r52;
        java.util.HashMap $r6;
        int $i0;
        ucar.nc2.Variable $r14, $r19, $r28, $r32, $r37, $r43, r47, r51, r53;
        java.util.Iterator $r2, $r4, $r8, $r12, $r23;
        java.lang.Object $r10, $r13, $r17, $r24, $r31, $r35, $r39;

        r0 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r5 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.List varList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z9 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label06;

        $r39 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r46 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r39;

        $z7 = r46.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateVariable>;

        if $z7 == 0 goto label02;

        goto label01;

     label02:
        r47 = r46.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $z8 = r47 instanceof ucar.nc2.dataset.VariableDS;

        if $z8 != 0 goto label03;

        goto label01;

     label03:
        $r40 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r47);

        $i0 = virtualinvoke $r40.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

        goto label01;

     label04:
        $r41 = virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r40);

        if null == $r41 goto label05;

        r46.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateAxis> = 1;

        $r44 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.Formatter parseInfo>;

        $r42 = newarray (java.lang.Object)[2];

        $r43 = r46.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r45 = virtualinvoke $r43.<ucar.nc2.Variable: java.lang.String getName()>();

        $r42[0] = $r45;

        $r42[1] = $r40;

        virtualinvoke $r44.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" Coordinate Axis added (alias) = %s for dimension %s\n", $r42);

     label05:
        goto label01;

     label06:
        $r3 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.List varList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r35 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r48 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r35;

        $r36 = r48.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: java.lang.String coordAxes>;

        if $r36 != null goto label08;

        $r37 = r48.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r38 = virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r37, "coordinates", null);

        if $r38 == null goto label08;

        r48.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: java.lang.String coordinates> = $r38;

     label08:
        goto label07;

     label09:
        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void findCoordinateAxes(ucar.nc2.dataset.NetcdfDataset)>(r5);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r7 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.List varList>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r31 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r49 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r31;

        $z6 = r49.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateAxis>;

        if $z6 == 0 goto label11;

        $r32 = r49.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r33 = (ucar.nc2.dataset.VariableEnhanced) $r32;

        $r34 = virtualinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r5, $r33);

        if $r34 == null goto label11;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r49);

     label11:
        goto label10;

     label12:
        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r10 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        if $r10 != null goto label16;

        $r22 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.List varList>;

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z10 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label16;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r50 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r24;

        r51 = r50.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $z4 = r51 instanceof ucar.nc2.dataset.VariableDS;

        if $z4 != 0 goto label14;

        goto label13;

     label14:
        $r25 = virtualinvoke r51.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $z5 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isDateUnit(java.lang.String)>($r25);

        if $z5 == 0 goto label15;

        r50.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateAxis> = 1;

        $r26 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r50);

        $r29 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.Formatter parseInfo>;

        $r27 = newarray (java.lang.Object)[2];

        $r28 = r50.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r30 = virtualinvoke $r28.<ucar.nc2.Variable: java.lang.String getName()>();

        $r27[0] = $r30;

        $r27[1] = $r25;

        virtualinvoke $r29.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" Time Coordinate Axis added (unit) = %s from unit %s\n", $r27);

     label15:
        goto label13;

     label16:
        $r11 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.List varList>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z11 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label21;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r52 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r13;

        $z2 = r52.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateVariable>;

        if $z2 == 0 goto label18;

        goto label17;

     label18:
        r53 = r52.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $z3 = r53 instanceof ucar.nc2.dataset.VariableDS;

        if $z3 != 0 goto label19;

        goto label17;

     label19:
        $r14 = r52.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r15 = (ucar.nc2.dataset.VariableEnhanced) $r14;

        $r16 = virtualinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r5, $r15);

        if $r16 == null goto label20;

        $r17 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        if $r17 != null goto label20;

        r52.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateAxis> = 1;

        $r20 = r0.<ucar.nc2.dataset.conv.DefaultConvention: java.util.Formatter parseInfo>;

        $r18 = newarray (java.lang.Object)[2];

        $r19 = r52.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r21 = virtualinvoke $r19.<ucar.nc2.Variable: java.lang.String getName()>();

        $r18[0] = $r21;

        $r18[1] = $r16;

        virtualinvoke $r20.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" Coordinate Axis added (Default forced) = %s for axis %s\n", $r18);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r52);

     label20:
        goto label17;

     label21:
        return;
    }

    private java.lang.String findCoordinateName(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType)
    {
        java.util.Iterator $r2;
        ucar.nc2.dataset.conv.DefaultConvention r7;
        java.util.List $r1;
        ucar.nc2.dataset.VariableEnhanced r5;
        ucar.nc2.constants.AxisType r6, $r8;
        java.lang.Object $r3;
        ucar.nc2.Variable r4;
        java.lang.String $r9;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r7 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter1: ucar.nc2.constants.AxisType;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        r5 = (ucar.nc2.dataset.VariableEnhanced) r4;

        $r8 = virtualinvoke r7.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r0, r5);

        if r6 != $r8 goto label2;

        $r9 = interfaceinvoke r5.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getName()>();

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r1, $r3, $r6;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess $r5;
        ucar.nc2.dataset.conv.DefaultConvention r0;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.ProjectionCT: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.CoordSysBuilder$VarProcess findVarProcess(java.lang.String)>($r4);

        if $r5 == null goto label1;

        $r6 = r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.dataset.CoordinateTransform ct> = $r6;

     label1:
        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r2);

        return;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.constants.AxisType $r3, $r8, $r11, $r16, $r18, $r22, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        ucar.nc2.dataset.conv.DefaultConvention r0;
        ucar.nc2.Variable r4;
        java.lang.String $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r19, r20, r21;
        ucar.nc2.dataset.VariableEnhanced r2;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        $r3 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: ucar.nc2.constants.AxisType getAxisTypeCoards(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r1, r2);

        if $r3 == null goto label01;

        return $r3;

     label01:
        r4 = (ucar.nc2.Variable) r2;

        $r5 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r6 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        r20 = $r6;

        if $r6 != null goto label02;

        r20 = "";

     label02:
        $r7 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.String getDescription()>();

        r21 = $r7;

        if $r7 != null goto label03;

        r21 = "";

     label03:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 != 0 goto label04;

        $r9 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z1 == 0 goto label05;

     label04:
        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r8;

     label05:
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("longitude");

        if $z3 != 0 goto label06;

        $r10 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z4 == 0 goto label07;

     label06:
        $r22 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r22;

     label07:
        $z5 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z5 != 0 goto label08;

        $r12 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z6 == 0 goto label09;

     label08:
        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r11;

     label09:
        $z7 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z7 != 0 goto label10;

        $z8 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("latitude");

        if $z8 != 0 goto label10;

        $r13 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z9 == 0 goto label11;

     label10:
        $r23 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r23;

     label11:
        $z10 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lev");

        if $z10 != 0 goto label12;

        $r14 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lev");

        if $z11 != 0 goto label12;

        $z12 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("level");

        if $z12 != 0 goto label12;

        $r15 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z13 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("level");

        if $z13 == 0 goto label13;

     label12:
        $r24 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r24;

     label13:
        $z14 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z");

        if $z14 != 0 goto label14;

        $r19 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z17 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z");

        if $z17 != 0 goto label14;

        $z18 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("altitude");

        if $z18 != 0 goto label14;

        $z19 = virtualinvoke r21.<java.lang.String: boolean contains(java.lang.CharSequence)>("altitude");

        if $z19 != 0 goto label14;

        $z20 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("depth");

        if $z20 != 0 goto label14;

        $z21 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("elev");

        if $z21 != 0 goto label14;

        $z22 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("elevation");

        if $z22 == 0 goto label15;

     label14:
        if r20 == null goto label15;

        $z16 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", r20);

        if $z16 == 0 goto label15;

        $r18 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r18;

     label15:
        $z23 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z23 != 0 goto label16;

        $r17 = specialinvoke r0.<ucar.nc2.dataset.conv.DefaultConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r1, r4);

        $z15 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z15 == 0 goto label17;

     label16:
        $r16 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r16;

     label17:
        return null;
    }

    private java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        ucar.nc2.dataset.conv.DefaultConvention r3;
        ucar.nc2.Variable r1;
        java.lang.String $r2, r4;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "coord_axis", null);

        r4 = $r2;

        if $r2 != null goto label1;

        r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "coord_alias", "");

     label1:
        return r4;
    }

    private ucar.nc2.constants.AxisType getAxisTypeCoards(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.DefaultConvention r9;
        ucar.nc2.constants.AxisType $r5, $r6, $r7, $r8, $r10, $r11, $r12;
        ucar.nc2.Variable $r3;
        java.lang.String $r1, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.dataset.NetcdfDataset r2;

        r9 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        $r1 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getUnitsString()>();

        if $r1 != null goto label01;

        return null;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degrees_east");

        if $z0 != 0 goto label02;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degrees_E");

        if $z1 != 0 goto label02;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degreesE");

        if $z2 != 0 goto label02;

        $z3 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degree_east");

        if $z3 != 0 goto label02;

        $z4 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degree_E");

        if $z4 != 0 goto label02;

        $z5 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degreeE");

        if $z5 == 0 goto label03;

     label02:
        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r10;

     label03:
        $z6 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degrees_north");

        if $z6 != 0 goto label04;

        $z7 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degrees_N");

        if $z7 != 0 goto label04;

        $z8 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degreesN");

        if $z8 != 0 goto label04;

        $z9 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degree_north");

        if $z9 != 0 goto label04;

        $z10 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degree_N");

        if $z10 != 0 goto label04;

        $z11 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("degreeN");

        if $z11 == 0 goto label05;

     label04:
        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r11;

     label05:
        $z12 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isDateUnit(java.lang.String)>($r1);

        if $z12 == 0 goto label06;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r8;

     label06:
        $z13 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("mbar", $r1);

        if $z13 == 0 goto label07;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        return $r7;

     label07:
        $z14 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("level");

        if $z14 != 0 goto label08;

        $z15 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("layer");

        if $z15 != 0 goto label08;

        $z16 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sigma_level");

        if $z16 == 0 goto label09;

     label08:
        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r12;

     label09:
        $r3 = (ucar.nc2.Variable) r0;

        $r4 = virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r3, "positive", null);

        if $r4 == null goto label11;

        $z17 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r1);

        if $z17 == 0 goto label10;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r6;

     label10:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r5;

     label11:
        return null;
    }

    private ucar.nc2.dataset.ProjectionCT makeProjectionCT(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.unidata.geoloc.ProjectionImpl r26;
        java.util.Formatter $r8, $r13, $r15, $r20;
        ucar.unidata.geoloc.projection.TransverseMercator $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.unidata.geoloc.projection.Stereographic $r6;
        java.lang.Object[] $r7, $r12, $r14, $r21;
        java.lang.Double $r22, $r23, $r24, $r25;
        ucar.nc2.dataset.conv.DefaultConvention r5;
        double[] r3;
        java.util.StringTokenizer $r4, $r17;
        int $i0, $i1, i2;
        java.lang.String $r1, $r2, $r11, $r18, r19, $r28;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        ucar.nc2.dataset.ProjectionCT $r27;
        java.lang.NumberFormatException $r16;
        ucar.unidata.geoloc.projection.LambertConformal $r10;
        ucar.nc2.dataset.NetcdfDataset r0;

        r5 := @this: ucar.nc2.dataset.conv.DefaultConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "projection", null);

        if null != $r1 goto label01;

        $r15 = r5.<ucar.nc2.dataset.conv.DefaultConvention: java.util.Formatter parseInfo>;

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Default Conventions error: NO projection name found \n", $r14);

        return null;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "projection_params", null);

        r19 = $r2;

        if null != $r2 goto label02;

        r19 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "proj_params", null);

     label02:
        if null != r19 goto label03;

        $r13 = r5.<ucar.nc2.dataset.conv.DefaultConvention: java.util.Formatter parseInfo>;

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke $r13.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Default Conventions error: NO projection parameters found \n", $r12);

        return null;

     label03:
        i2 = 0;

        r3 = newarray (double)[4];

     label04:
        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r19, " ,");

     label05:
        $z0 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label06;

        if i2 >= 4 goto label06;

        $i0 = i2;

        i2 = i2 + 1;

        $r11 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d10 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        r3[$i0] = $d10;

        goto label05;

     label06:
        goto label09;

     label07:
        $r16 := @caughtexception;

        $r17 = new java.util.StringTokenizer;

        specialinvoke $r17.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r19, " ,");

     label08:
        $z4 = virtualinvoke $r17.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label09;

        if i2 >= 4 goto label09;

        virtualinvoke $r17.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = i2;

        i2 = i2 + 1;

        $r18 = virtualinvoke $r17.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d11 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r18);

        r3[$i1] = $d11;

        goto label08;

     label09:
        $r20 = r5.<ucar.nc2.dataset.conv.DefaultConvention: java.util.Formatter parseInfo>;

        $r21 = newarray (java.lang.Object)[5];

        $r21[0] = $r1;

        $d12 = r3[0];

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        $r21[1] = $r22;

        $d13 = r3[1];

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        $r21[2] = $r23;

        $d14 = r3[2];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        $r21[3] = $r24;

        $d15 = r3[3];

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        $r21[4] = $r25;

        virtualinvoke $r20.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Default Conventions projection %s params = %f %f %f %f\n", $r21);

        $z5 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LambertConformal");

        if $z5 == 0 goto label10;

        $r10 = new ucar.unidata.geoloc.projection.LambertConformal;

        $d9 = r3[0];

        $d8 = r3[1];

        $d7 = r3[2];

        $d6 = r3[3];

        specialinvoke $r10.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d9, $d8, $d7, $d6);

        r26 = $r10;

        goto label14;

     label10:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TransverseMercator");

        if $z1 == 0 goto label11;

        $r9 = new ucar.unidata.geoloc.projection.TransverseMercator;

        $d5 = r3[0];

        $d4 = r3[1];

        $d3 = r3[2];

        specialinvoke $r9.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double)>($d5, $d4, $d3);

        r26 = $r9;

        goto label14;

     label11:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Stereographic");

        if $z2 != 0 goto label12;

        $z3 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Oblique_Stereographic");

        if $z3 == 0 goto label13;

     label12:
        $r6 = new ucar.unidata.geoloc.projection.Stereographic;

        $d2 = r3[0];

        $d1 = r3[1];

        $d0 = r3[2];

        specialinvoke $r6.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>($d2, $d1, $d0);

        r26 = $r6;

        goto label14;

     label13:
        $r8 = r5.<ucar.nc2.dataset.conv.DefaultConvention: java.util.Formatter parseInfo>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r1;

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Default Conventions error: Unknown projection %s\n", $r7);

        return null;

     label14:
        $r27 = new ucar.nc2.dataset.ProjectionCT;

        $r28 = virtualinvoke r26.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String getClassName()>();

        specialinvoke $r27.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>($r28, "FGDC", r26);

        return $r27;

        catch java.lang.NumberFormatException from label04 to label06 with label07;
    }
}
