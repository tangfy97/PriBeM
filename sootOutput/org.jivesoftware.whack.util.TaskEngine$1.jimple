class org.jivesoftware.whack.util.TaskEngine$1 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    final java.util.concurrent.atomic.AtomicInteger threadNumber;
    final org.jivesoftware.whack.util.TaskEngine this$0;

    void <init>(org.jivesoftware.whack.util.TaskEngine)
    {
        org.jivesoftware.whack.util.TaskEngine r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        org.jivesoftware.whack.util.TaskEngine$1 r0;

        r0 := @this: org.jivesoftware.whack.util.TaskEngine$1;

        r1 := @parameter0: org.jivesoftware.whack.util.TaskEngine;

        r0.<org.jivesoftware.whack.util.TaskEngine$1: org.jivesoftware.whack.util.TaskEngine this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<org.jivesoftware.whack.util.TaskEngine$1: java.util.concurrent.atomic.AtomicInteger threadNumber> = $r2;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        java.lang.ThreadGroup $r2;
        java.lang.Runnable r3;
        org.jivesoftware.whack.util.TaskEngine$1 r6;
        java.util.concurrent.atomic.AtomicInteger $r7;
        java.lang.Thread $r0, $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.String $r9;

        r6 := @this: org.jivesoftware.whack.util.TaskEngine$1;

        r3 := @parameter0: java.lang.Runnable;

        $r0 = new java.lang.Thread;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pool-whack");

        $r7 = r6.<org.jivesoftware.whack.util.TaskEngine$1: java.util.concurrent.atomic.AtomicInteger threadNumber>;

        $i0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>($r2, r3, $r9, 0L);

        virtualinvoke $r0.<java.lang.Thread: void setDaemon(boolean)>(1);

        $i1 = virtualinvoke $r0.<java.lang.Thread: int getPriority()>();

        if $i1 == 5 goto label1;

        virtualinvoke $r0.<java.lang.Thread: void setPriority(int)>(5);

     label1:
        return $r0;
    }
}
