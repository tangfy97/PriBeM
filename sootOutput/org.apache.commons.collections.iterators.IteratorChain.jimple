public class org.apache.commons.collections.iterators.IteratorChain extends java.lang.Object implements java.util.Iterator
{
    protected final java.util.List iteratorChain;
    protected int currentIteratorIndex;
    protected java.util.Iterator currentIterator;
    protected java.util.Iterator lastUsedIterator;
    protected boolean isLocked;

    public void <init>()
    {
        org.apache.commons.collections.iterators.IteratorChain r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain> = $r1;

        r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex> = 0;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked> = 0;

        return;
    }

    public void <init>(java.util.Iterator)
    {
        java.util.Iterator r2;
        org.apache.commons.collections.iterators.IteratorChain r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        r2 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain> = $r1;

        r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex> = 0;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked> = 0;

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void addIterator(java.util.Iterator)>(r2);

        return;
    }

    public void <init>(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r2, r3;
        org.apache.commons.collections.iterators.IteratorChain r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        r2 := @parameter0: java.util.Iterator;

        r3 := @parameter1: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain> = $r1;

        r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex> = 0;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked> = 0;

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void addIterator(java.util.Iterator)>(r2);

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void addIterator(java.util.Iterator)>(r3);

        return;
    }

    public void <init>(java.util.Iterator[])
    {
        java.util.Iterator $r3;
        java.util.Iterator[] r2;
        int $i0, i1;
        org.apache.commons.collections.iterators.IteratorChain r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        r2 := @parameter0: java.util.Iterator[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain> = $r1;

        r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex> = 0;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked> = 0;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void addIterator(java.util.Iterator)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(java.util.Collection)
    {
        java.util.Iterator $r3, r5;
        java.util.Collection r2;
        java.lang.Object $r4;
        org.apache.commons.collections.iterators.IteratorChain r0;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain> = $r1;

        r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex> = 0;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = null;

        r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked> = 0;

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Iterator) $r4;

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void addIterator(java.util.Iterator)>(r5);

        goto label1;

     label2:
        return;
    }

    public void addIterator(java.util.Iterator)
    {
        java.util.List $r2;
        java.util.Iterator r1;
        org.apache.commons.collections.iterators.IteratorChain r0;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void checkLocked()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void setIterator(int, java.util.Iterator) throws java.lang.IndexOutOfBoundsException
    {
        java.util.List $r2;
        java.util.Iterator r1;
        int i0;
        org.apache.commons.collections.iterators.IteratorChain r0;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Iterator;

        specialinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void checkLocked()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public java.util.List getIterators()
    {
        java.util.List $r1, $r2;
        org.apache.commons.collections.iterators.IteratorChain r0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        $r1 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        $r2 = staticinvoke <org.apache.commons.collections.list.UnmodifiableList: java.util.List decorate(java.util.List)>($r1);

        return $r2;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        org.apache.commons.collections.iterators.IteratorChain r0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        $r1 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public boolean isLocked()
    {
        org.apache.commons.collections.iterators.IteratorChain r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        $z0 = r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked>;

        return $z0;
    }

    private void checkLocked()
    {
        java.lang.UnsupportedOperationException $r1;
        org.apache.commons.collections.iterators.IteratorChain r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        $z0 = r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked>;

        if $z0 != 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("IteratorChain cannot be changed after the first use of a method from the Iterator interface");

        throw $r1;

     label1:
        return;
    }

    private void lockChain()
    {
        org.apache.commons.collections.iterators.IteratorChain r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        $z0 = r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked>;

        if $z0 != 0 goto label1;

        r0.<org.apache.commons.collections.iterators.IteratorChain: boolean isLocked> = 1;

     label1:
        return;
    }

    protected void updateCurrentIterator()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        java.util.Iterator $r1, $r5, $r9, $r10, $r11, $r12;
        java.util.List $r2, $r3, $r6, $r7;
        java.lang.Object $r4, $r8;
        org.apache.commons.collections.iterators.IteratorChain r0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        $r1 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        if $r1 != null goto label3;

        $r6 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r11 = <org.apache.commons.collections.iterators.EmptyIterator: java.util.Iterator INSTANCE>;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = $r11;

        goto label2;

     label1:
        $r7 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.util.Iterator) $r8;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = $r9;

     label2:
        $r10 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = $r10;

     label3:
        $r12 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label4;

        $i0 = r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex>;

        $r2 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label4;

        $i3 = r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex>;

        $i4 = $i3 + 1;

        r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex> = $i4;

        $r3 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.List iteratorChain>;

        $i5 = r0.<org.apache.commons.collections.iterators.IteratorChain: int currentIteratorIndex>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i5);

        $r5 = (java.util.Iterator) $r4;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator> = $r5;

        goto label3;

     label4:
        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1, $r2;
        org.apache.commons.collections.iterators.IteratorChain r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void lockChain()>();

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void updateCurrentIterator()>();

        $r1 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = $r1;

        $r2 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Iterator $r1, $r2;
        java.lang.Object $r3;
        org.apache.commons.collections.iterators.IteratorChain r0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void lockChain()>();

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void updateCurrentIterator()>();

        $r1 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator> = $r1;

        $r2 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        return $r3;
    }

    public void remove()
    {
        java.util.Iterator $r1, $r2;
        org.apache.commons.collections.iterators.IteratorChain r0;

        r0 := @this: org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void lockChain()>();

        $r1 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator currentIterator>;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.apache.commons.collections.iterators.IteratorChain: void updateCurrentIterator()>();

     label1:
        $r2 = r0.<org.apache.commons.collections.iterators.IteratorChain: java.util.Iterator lastUsedIterator>;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        return;
    }
}
