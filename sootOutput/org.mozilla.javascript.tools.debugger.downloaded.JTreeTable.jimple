public class org.mozilla.javascript.tools.debugger.downloaded.JTreeTable extends javax.swing.JTable
{
    protected org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree;
    static java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel;

    public void <init>(org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel)
    {
        javax.swing.ListSelectionModel $r7;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable r0;
        org.mozilla.javascript.tools.debugger.downloaded.TreeTableModelAdapter $r3;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer $r1, $r4, $r6, $r9, $r13;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper $r5;
        int $i0;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellEditor $r11;
        org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel r2;
        java.awt.Dimension $r12;
        java.lang.Class $r8, $r10, $r14, $r15;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable;

        r2 := @parameter0: org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel;

        specialinvoke r0.<javax.swing.JTable: void <init>()>();

        $r1 = new org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer;

        specialinvoke $r1.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable,javax.swing.tree.TreeModel)>(r0, r2);

        r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree> = $r1;

        $r3 = new org.mozilla.javascript.tools.debugger.downloaded.TreeTableModelAdapter;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        specialinvoke $r3.<org.mozilla.javascript.tools.debugger.downloaded.TreeTableModelAdapter: void <init>(org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel,javax.swing.JTree)>(r2, $r4);

        specialinvoke r0.<javax.swing.JTable: void setModel(javax.swing.table.TableModel)>($r3);

        $r5 = new org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper;

        specialinvoke $r5.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable)>(r0);

        $r6 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke $r6.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void setSelectionModel(javax.swing.tree.TreeSelectionModel)>($r5);

        $r7 = virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.ListSelectionModel getListSelectionModel()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setSelectionModel(javax.swing.ListSelectionModel)>($r7);

        $r8 = <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

        if $r8 != null goto label1;

        $r14 = staticinvoke <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel");

        <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel> = $r14;

        goto label2;

     label1:
        $r14 = <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

     label2:
        $r9 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer)>($r14, $r9);

        $r10 = <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

        if $r10 != null goto label3;

        $r15 = staticinvoke <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel");

        <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel> = $r15;

        goto label4;

     label3:
        $r15 = <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

     label4:
        $r11 = new org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellEditor;

        specialinvoke $r11.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellEditor: void <init>(org.mozilla.javascript.tools.debugger.downloaded.JTreeTable)>(r0);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setDefaultEditor(java.lang.Class,javax.swing.table.TableCellEditor)>($r15, $r11);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setShowGrid(boolean)>(0);

        $r12 = new java.awt.Dimension;

        specialinvoke $r12.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setIntercellSpacing(java.awt.Dimension)>($r12);

        $r13 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        $i0 = virtualinvoke $r13.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: int getRowHeight()>();

        if $i0 >= 1 goto label5;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: void setRowHeight(int)>(18);

     label5:
        return;
    }

    public void updateUI()
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable r0;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer $r1, $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable;

        specialinvoke r0.<javax.swing.JTable: void updateUI()>();

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        virtualinvoke $r2.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void updateUI()>();

     label1:
        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>(r0, "Tree.background", "Tree.foreground", "Tree.font");

        return;
    }

    public int getEditingRow()
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable r0;
        int $i0, $i1, $i3;
        java.lang.Class $r1, $r2, $r3;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable;

        $i0 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: int editingColumn>;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class getColumnClass(int)>($i0);

        $r2 = <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.tools.debugger.downloaded.TreeTableModel");

        <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel> = $r3;

        goto label2;

     label1:
        $r3 = <org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: java.lang.Class class$org$mozilla$javascript$tools$debugger$downloaded$TreeTableModel>;

     label2:
        if $r1 != $r3 goto label3;

        $i3 = (int) -1;

        $i1 = $i3;

        goto label4;

     label3:
        $i1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: int editingRow>;

     label4:
        return $i1;
    }

    public void setRowHeight(int)
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable r0;
        int i0, $i1, $i2;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer $r1, $r2, $r3;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.swing.JTable: void setRowHeight(int)>(i0);

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        $i1 = virtualinvoke $r2.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: int getRowHeight()>();

        if $i1 == i0 goto label1;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        $i2 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: int getRowHeight()>();

        virtualinvoke $r3.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer: void setRowHeight(int)>($i2);

     label1:
        return;
    }

    public javax.swing.JTree getTree()
    {
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable r0;
        org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer $r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.JTreeTable: org.mozilla.javascript.tools.debugger.downloaded.JTreeTable$TreeTableCellRenderer tree>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
