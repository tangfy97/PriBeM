public class com.spatial4j.core.shape.MultiShape extends java.lang.Object implements com.spatial4j.core.shape.Shape
{
    private final java.util.Collection geoms;
    private final com.spatial4j.core.shape.Rectangle bbox;

    public void <init>(java.util.Collection, com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.shape.Shape r6;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, d4, d5, d6, d7;
        java.util.Iterator $r2;
        com.spatial4j.core.shape.Rectangle $r4, $r7;
        java.util.Collection r1;
        com.spatial4j.core.context.SpatialContext r3;
        java.lang.IllegalArgumentException $r8;
        com.spatial4j.core.shape.MultiShape r0;
        java.lang.Object $r5;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        r1 := @parameter0: java.util.Collection;

        r3 := @parameter1: com.spatial4j.core.context.SpatialContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("must be given at least 1 shape");

        throw $r8;

     label1:
        r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms> = r1;

        d4 = #Infinity;

        d5 = #Infinity;

        d6 = #-Infinity;

        d7 = #-Infinity;

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.spatial4j.core.shape.Shape) $r5;

        $r7 = interfaceinvoke r6.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Rectangle getBoundingBox()>();

        $d0 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        d4 = staticinvoke <java.lang.Math: double min(double,double)>(d4, $d0);

        $d1 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        d5 = staticinvoke <java.lang.Math: double min(double,double)>(d5, $d1);

        $d2 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        d6 = staticinvoke <java.lang.Math: double max(double,double)>(d6, $d2);

        $d3 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        d7 = staticinvoke <java.lang.Math: double max(double,double)>(d7, $d3);

        goto label2;

     label3:
        $r4 = virtualinvoke r3.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(double,double,double,double)>(d4, d6, d5, d7);

        r0.<com.spatial4j.core.shape.MultiShape: com.spatial4j.core.shape.Rectangle bbox> = $r4;

        return;
    }

    public com.spatial4j.core.shape.Rectangle getBoundingBox()
    {
        com.spatial4j.core.shape.MultiShape r0;
        com.spatial4j.core.shape.Rectangle $r1;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        $r1 = r0.<com.spatial4j.core.shape.MultiShape: com.spatial4j.core.shape.Rectangle bbox>;

        return $r1;
    }

    public com.spatial4j.core.shape.Point getCenter()
    {
        com.spatial4j.core.shape.Point $r2;
        com.spatial4j.core.shape.MultiShape r0;
        com.spatial4j.core.shape.Rectangle $r1;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        $r1 = r0.<com.spatial4j.core.shape.MultiShape: com.spatial4j.core.shape.Rectangle bbox>;

        $r2 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.Point getCenter()>();

        return $r2;
    }

    public boolean hasArea()
    {
        com.spatial4j.core.shape.Shape r4;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        java.lang.Object $r3;
        com.spatial4j.core.shape.MultiShape r0;
        boolean $z0, $z1;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        $r1 = r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.spatial4j.core.shape.Shape) $r3;

        $z1 = interfaceinvoke r4.<com.spatial4j.core.shape.Shape: boolean hasArea()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r7, r8;
        com.spatial4j.core.shape.SpatialRelation $r3, $r4, $r5, $r9, $r10, $r11, $r12;
        boolean $z0, z1, z2, z3, z4, z5, z6;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        com.spatial4j.core.shape.MultiShape r0;
        java.lang.Object $r6;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        r8 := @parameter0: com.spatial4j.core.shape.Shape;

        z1 = 1;

        z6 = 1;

        z5 = 1;

        z2 = 1;

        z4 = 1;

        z3 = 1;

        $r1 = r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.spatial4j.core.shape.Shape) $r6;

        $r9 = interfaceinvoke r7.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r8);

        $r10 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        if $r9 == $r10 goto label2;

        z1 = 0;

        z6 = 0;

        z5 = 0;

     label2:
        $r11 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        if $r9 == $r11 goto label3;

        z2 = 0;

        z4 = 0;

        z3 = 0;

     label3:
        if z4 != 0 goto label4;

        if z5 != 0 goto label4;

        $r12 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r12;

     label4:
        goto label1;

     label5:
        if z6 == 0 goto label6;

        $r5 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        return $r5;

     label6:
        if z3 == 0 goto label7;

        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r4;

     label7:
        $r3 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r3;
    }

    public double getArea(com.spatial4j.core.context.SpatialContext)
    {
        java.util.Iterator $r2;
        java.util.Collection $r1;
        com.spatial4j.core.context.SpatialContext r5;
        com.spatial4j.core.shape.MultiShape r0;
        com.spatial4j.core.shape.Shape r4;
        java.lang.Object $r3;
        boolean $z0;
        double $d0, d1;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        r5 := @parameter0: com.spatial4j.core.context.SpatialContext;

        d1 = 0.0;

        $r1 = r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.spatial4j.core.shape.Shape) $r3;

        $d0 = interfaceinvoke r4.<com.spatial4j.core.shape.Shape: double getArea(com.spatial4j.core.context.SpatialContext)>(r5);

        d1 = d1 + $d0;

        goto label1;

     label2:
        return d1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collection $r5, $r6, $r7, $r8;
        com.spatial4j.core.shape.MultiShape r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.spatial4j.core.shape.MultiShape) r1;

        $r5 = r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        if $r5 == null goto label4;

        $r8 = r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        $r7 = r4.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        $z0 = interfaceinvoke $r8.<java.util.Collection: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label6;

        goto label5;

     label4:
        $r6 = r4.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        if $r6 == null goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        java.util.Collection $r1, $r2;
        int $i0;
        com.spatial4j.core.shape.MultiShape r0;

        r0 := @this: com.spatial4j.core.shape.MultiShape;

        $r1 = r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        if $r1 == null goto label1;

        $r2 = r0.<com.spatial4j.core.shape.MultiShape: java.util.Collection geoms>;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }
}
