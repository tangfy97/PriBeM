public class org.apache.http.impl.cookie.RFC2109VersionHandler extends org.apache.http.impl.cookie.AbstractCookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2109VersionHandler r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2109VersionHandler;

        specialinvoke r0.<org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()>();

        return;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.cookie.SetCookie r0;
        org.apache.http.cookie.MalformedCookieException $r3, $r4, $r7;
        int $i0, $i1;
        java.lang.String r1, $r2, $r10, $r12;
        java.lang.NumberFormatException $r6;
        java.lang.IllegalArgumentException $r5;
        org.apache.http.impl.cookie.RFC2109VersionHandler r13;
        java.lang.StringBuilder $r8, $r9, $r11;

        r13 := @this: org.apache.http.impl.cookie.RFC2109VersionHandler;

        r0 := @parameter0: org.apache.http.cookie.SetCookie;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r4.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for version attribute");

        throw $r4;

     label2:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $r3 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r3.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Blank value for version attribute");

        throw $r3;

     label3:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        interfaceinvoke r0.<org.apache.http.cookie.SetCookie: void setVersion(int)>($i1);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.apache.http.cookie.MalformedCookieException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid version: ");

        $r10 = virtualinvoke $r6.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.cookie.CookieOrigin r4;
        org.apache.http.cookie.CookieRestrictionViolationException $r1;
        int $i0;
        org.apache.http.impl.cookie.RFC2109VersionHandler r3;
        org.apache.http.cookie.Cookie r0;
        java.lang.IllegalArgumentException $r2;

        r3 := @this: org.apache.http.impl.cookie.RFC2109VersionHandler;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r4 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r2;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.http.cookie.Cookie: int getVersion()>();

        if $i0 >= 0 goto label2;

        $r1 = new org.apache.http.cookie.CookieRestrictionViolationException;

        specialinvoke $r1.<org.apache.http.cookie.CookieRestrictionViolationException: void <init>(java.lang.String)>("Cookie version may not be negative");

        throw $r1;

     label2:
        return;
    }
}
