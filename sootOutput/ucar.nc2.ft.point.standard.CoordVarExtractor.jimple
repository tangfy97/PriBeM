public abstract class ucar.nc2.ft.point.standard.CoordVarExtractor extends java.lang.Object
{
    protected java.lang.String axisName;
    protected int nestingLevel;

    protected void <init>(java.lang.String, int)
    {
        int i0;
        ucar.nc2.ft.point.standard.CoordVarExtractor r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.ft.point.standard.CoordVarExtractor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: java.lang.String axisName> = r1;

        r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: int nestingLevel> = i0;

        return;
    }

    public abstract double getCoordValue(ucar.ma2.StructureData);

    public abstract long getCoordValueLong(ucar.ma2.StructureData);

    public abstract java.lang.String getCoordValueString(ucar.ma2.StructureData);

    public abstract java.lang.String getUnitsString();

    public abstract boolean isString();

    public abstract boolean isInt();

    public double getCoordValue(ucar.ma2.StructureData[])
    {
        ucar.ma2.StructureData $r2;
        ucar.nc2.ft.point.standard.CoordVarExtractor r0;
        ucar.ma2.StructureData[] r1;
        int $i0;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.standard.CoordVarExtractor;

        r1 := @parameter0: ucar.ma2.StructureData[];

        $i0 = r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: int nestingLevel>;

        $r2 = r1[$i0];

        $d0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: double getCoordValue(ucar.ma2.StructureData)>($r2);

        return $d0;
    }

    public java.lang.String getCoordValueString(ucar.ma2.StructureData[])
    {
        ucar.ma2.StructureData $r2;
        ucar.nc2.ft.point.standard.CoordVarExtractor r0;
        ucar.ma2.StructureData[] r1;
        int $i0;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.ft.point.standard.CoordVarExtractor;

        r1 := @parameter0: ucar.ma2.StructureData[];

        $i0 = r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: int nestingLevel>;

        $r2 = r1[$i0];

        $r3 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: java.lang.String getCoordValueString(ucar.ma2.StructureData)>($r2);

        return $r3;
    }

    public java.lang.String getCoordValueAsString(ucar.ma2.StructureData)
    {
        long $l0;
        ucar.ma2.StructureData r1;
        ucar.nc2.ft.point.standard.CoordVarExtractor r0;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.standard.CoordVarExtractor;

        r1 := @parameter0: ucar.ma2.StructureData;

        $z0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: boolean isString()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: java.lang.String getCoordValueString(ucar.ma2.StructureData)>(r1);

        return $r4;

     label1:
        $z1 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: boolean isInt()>();

        if $z1 == 0 goto label2;

        $l0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: long getCoordValueLong(ucar.ma2.StructureData)>(r1);

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        return $r3;

     label2:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: double getCoordValue(ucar.ma2.StructureData)>(r1);

        $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r2;
    }

    protected abstract boolean isMissing(ucar.ma2.StructureData);

    public boolean isMissing(ucar.ma2.StructureData[])
    {
        ucar.ma2.StructureData $r2;
        ucar.nc2.ft.point.standard.CoordVarExtractor r0;
        ucar.ma2.StructureData[] r1;
        int $i0;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.standard.CoordVarExtractor;

        r1 := @parameter0: ucar.ma2.StructureData[];

        $i0 = r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: int nestingLevel>;

        $r2 = r1[$i0];

        $z0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: boolean isMissing(ucar.ma2.StructureData)>($r2);

        return $z0;
    }

    public java.lang.String toString()
    {
        ucar.nc2.ft.point.standard.CoordVarExtractor r1;
        int $i0;
        java.lang.StringBuilder $r0, $r3, $r4, $r5;
        java.lang.String $r2, $r6;

        r1 := @this: ucar.nc2.ft.point.standard.CoordVarExtractor;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.ft.point.standard.CoordVarExtractor: java.lang.String axisName>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nestingLevel= ");

        $i0 = r1.<ucar.nc2.ft.point.standard.CoordVarExtractor: int nestingLevel>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
