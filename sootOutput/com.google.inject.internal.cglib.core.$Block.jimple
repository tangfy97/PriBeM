public class com.google.inject.internal.cglib.core.$Block extends java.lang.Object
{
    private com.google.inject.internal.cglib.core.$CodeEmitter e;
    private com.google.inject.internal.asm.$Label start;
    private com.google.inject.internal.asm.$Label end;

    public void <init>(com.google.inject.internal.cglib.core.$CodeEmitter)
    {
        com.google.inject.internal.asm.$Label $r2;
        com.google.inject.internal.cglib.core.$Block r0;
        com.google.inject.internal.cglib.core.$CodeEmitter r1;

        r0 := @this: com.google.inject.internal.cglib.core.$Block;

        r1 := @parameter0: com.google.inject.internal.cglib.core.$CodeEmitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.cglib.core.$CodeEmitter e> = r1;

        $r2 = virtualinvoke r1.<com.google.inject.internal.cglib.core.$CodeEmitter: com.google.inject.internal.asm.$Label mark()>();

        r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.asm.$Label start> = $r2;

        return;
    }

    public com.google.inject.internal.cglib.core.$CodeEmitter getCodeEmitter()
    {
        com.google.inject.internal.cglib.core.$Block r0;
        com.google.inject.internal.cglib.core.$CodeEmitter $r1;

        r0 := @this: com.google.inject.internal.cglib.core.$Block;

        $r1 = r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.cglib.core.$CodeEmitter e>;

        return $r1;
    }

    public void end()
    {
        java.lang.IllegalStateException $r4;
        com.google.inject.internal.cglib.core.$Block r0;
        com.google.inject.internal.cglib.core.$CodeEmitter $r2;
        com.google.inject.internal.asm.$Label $r1, $r3;

        r0 := @this: com.google.inject.internal.cglib.core.$Block;

        $r1 = r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.asm.$Label end>;

        if $r1 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("end of label already set");

        throw $r4;

     label1:
        $r2 = r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.cglib.core.$CodeEmitter e>;

        $r3 = virtualinvoke $r2.<com.google.inject.internal.cglib.core.$CodeEmitter: com.google.inject.internal.asm.$Label mark()>();

        r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.asm.$Label end> = $r3;

        return;
    }

    public com.google.inject.internal.asm.$Label getStart()
    {
        com.google.inject.internal.asm.$Label $r1;
        com.google.inject.internal.cglib.core.$Block r0;

        r0 := @this: com.google.inject.internal.cglib.core.$Block;

        $r1 = r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.asm.$Label start>;

        return $r1;
    }

    public com.google.inject.internal.asm.$Label getEnd()
    {
        com.google.inject.internal.asm.$Label $r1;
        com.google.inject.internal.cglib.core.$Block r0;

        r0 := @this: com.google.inject.internal.cglib.core.$Block;

        $r1 = r0.<com.google.inject.internal.cglib.core.$Block: com.google.inject.internal.asm.$Label end>;

        return $r1;
    }
}
