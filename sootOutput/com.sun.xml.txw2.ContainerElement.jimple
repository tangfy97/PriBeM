final class com.sun.xml.txw2.ContainerElement extends java.lang.Object implements java.lang.reflect.InvocationHandler, com.sun.xml.txw2.TypedXmlWriter
{
    final com.sun.xml.txw2.Document document;
    com.sun.xml.txw2.StartTag startTag;
    final com.sun.xml.txw2.EndTag endTag;
    private final java.lang.String nsUri;
    private com.sun.xml.txw2.Content tail;
    private com.sun.xml.txw2.ContainerElement prevOpen;
    private com.sun.xml.txw2.ContainerElement nextOpen;
    private final com.sun.xml.txw2.ContainerElement parent;
    private com.sun.xml.txw2.ContainerElement lastOpenChild;
    private boolean blocked;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.txw2.Document, com.sun.xml.txw2.ContainerElement, java.lang.String, java.lang.String)
    {
        com.sun.xml.txw2.Document r3;
        com.sun.xml.txw2.StartTag $r5, $r7, $r8;
        java.lang.String r4, r6;
        com.sun.xml.txw2.ContainerElement r0, r2;
        com.sun.xml.txw2.EndTag $r1;
        boolean $z0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r3 := @parameter0: com.sun.xml.txw2.Document;

        r2 := @parameter1: com.sun.xml.txw2.ContainerElement;

        r4 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.sun.xml.txw2.EndTag;

        specialinvoke $r1.<com.sun.xml.txw2.EndTag: void <init>()>();

        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.EndTag endTag> = $r1;

        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement parent> = r2;

        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document> = r3;

        r0.<com.sun.xml.txw2.ContainerElement: java.lang.String nsUri> = r4;

        $r5 = new com.sun.xml.txw2.StartTag;

        specialinvoke $r5.<com.sun.xml.txw2.StartTag: void <init>(com.sun.xml.txw2.ContainerElement,java.lang.String,java.lang.String)>(r0, r4, r6);

        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag> = $r5;

        $r7 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Content tail> = $r7;

        $z0 = specialinvoke r0.<com.sun.xml.txw2.ContainerElement: boolean isRoot()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        virtualinvoke r3.<com.sun.xml.txw2.Document: void setFirstContent(com.sun.xml.txw2.Content)>($r8);

     label1:
        return;
    }

    private boolean isRoot()
    {
        com.sun.xml.txw2.ContainerElement r0, $r1;
        boolean $z0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        $r1 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement parent>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isCommitted()
    {
        com.sun.xml.txw2.Content $r1;
        com.sun.xml.txw2.ContainerElement r0;
        boolean $z0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        $r1 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Content tail>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sun.xml.txw2.Document getDocument()
    {
        com.sun.xml.txw2.Document $r1;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        $r1 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        return $r1;
    }

    boolean isBlocked()
    {
        com.sun.xml.txw2.ContainerElement r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        $z0 = r0.<com.sun.xml.txw2.ContainerElement: boolean blocked>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.sun.xml.txw2.ContainerElement: boolean isCommitted()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void block()
    {
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r0.<com.sun.xml.txw2.ContainerElement: boolean blocked> = 1;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Throwable $r18;
        java.lang.Object[] r3;
        com.sun.xml.txw2.IllegalAnnotationException $r13, $r15;
        java.lang.String $r14, $r16;
        java.lang.reflect.Method r0;
        com.sun.xml.txw2.ContainerElement r2;
        com.sun.xml.txw2.'annotation'.XmlValue r8;
        com.sun.xml.txw2.'annotation'.XmlElement r10;
        java.lang.reflect.InvocationTargetException $r17;
        java.lang.'annotation'.Annotation $r6, $r7, $r9;
        java.lang.Class $r1, $r5;
        java.lang.Object $r4, $r11, r12;
        com.sun.xml.txw2.'annotation'.XmlAttribute r19;

        r2 := @this: com.sun.xml.txw2.ContainerElement;

        r12 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if $r1 == class "Lcom/sun/xml/txw2/TypedXmlWriter;" goto label1;

        $r5 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if $r5 != class "Ljava/lang/Object;" goto label4;

     label1:
        $r4 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, r3);

     label2:
        return $r4;

     label3:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        throw $r18;

     label4:
        $r6 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/sun/xml/txw2/annotation/XmlAttribute;");

        r19 = (com.sun.xml.txw2.'annotation'.XmlAttribute) $r6;

        $r7 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/sun/xml/txw2/annotation/XmlValue;");

        r8 = (com.sun.xml.txw2.'annotation'.XmlValue) $r7;

        $r9 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/sun/xml/txw2/annotation/XmlElement;");

        r10 = (com.sun.xml.txw2.'annotation'.XmlElement) $r9;

        if r19 == null goto label7;

        if r8 != null goto label5;

        if r10 == null goto label6;

     label5:
        $r15 = new com.sun.xml.txw2.IllegalAnnotationException;

        $r16 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String toString()>();

        specialinvoke $r15.<com.sun.xml.txw2.IllegalAnnotationException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label6:
        specialinvoke r2.<com.sun.xml.txw2.ContainerElement: void addAttribute(com.sun.xml.txw2.'annotation'.XmlAttribute,java.lang.reflect.Method,java.lang.Object[])>(r19, r0, r3);

        return r12;

     label7:
        if r8 == null goto label9;

        if r10 == null goto label8;

        $r13 = new com.sun.xml.txw2.IllegalAnnotationException;

        $r14 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String toString()>();

        specialinvoke $r13.<com.sun.xml.txw2.IllegalAnnotationException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label8:
        virtualinvoke r2.<com.sun.xml.txw2.ContainerElement: void _pcdata(java.lang.Object)>(r3);

        return r12;

     label9:
        $r11 = specialinvoke r2.<com.sun.xml.txw2.ContainerElement: java.lang.Object addElement(com.sun.xml.txw2.'annotation'.XmlElement,java.lang.reflect.Method,java.lang.Object[])>(r10, r0, r3);

        return $r11;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private void addAttribute(com.sun.xml.txw2.'annotation'.XmlAttribute, java.lang.reflect.Method, java.lang.Object[])
    {
        java.lang.Object[] r4;
        java.lang.AssertionError $r6;
        int $i0;
        java.lang.String $r2, $r3, r7;
        com.sun.xml.txw2.ContainerElement r0;
        java.lang.reflect.Method r5;
        com.sun.xml.txw2.'annotation'.XmlAttribute r1;
        boolean $z0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: com.sun.xml.txw2.'annotation'.XmlAttribute;

        r5 := @parameter1: java.lang.reflect.Method;

        r4 := @parameter2: java.lang.Object[];

        $z0 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void checkStartTag()>();

        r7 = interfaceinvoke r1.<com.sun.xml.txw2.'annotation'.XmlAttribute: java.lang.String value()>();

        $r2 = interfaceinvoke r1.<com.sun.xml.txw2.'annotation'.XmlAttribute: java.lang.String value()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        r7 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

     label2:
        $r3 = interfaceinvoke r1.<com.sun.xml.txw2.'annotation'.XmlAttribute: java.lang.String ns()>();

        virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: void _attribute(java.lang.String,java.lang.String,java.lang.Object)>($r3, r7, r4);

        return;
    }

    private void checkStartTag()
    {
        java.lang.IllegalStateException $r2;
        com.sun.xml.txw2.ContainerElement r0;
        com.sun.xml.txw2.StartTag $r1;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        $r1 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("start tag has already been written");

        throw $r2;

     label1:
        return;
    }

    private java.lang.Object addElement(com.sun.xml.txw2.'annotation'.XmlElement, java.lang.reflect.Method, java.lang.Object[])
    {
        com.sun.xml.txw2.IllegalSignatureException $r4;
        java.lang.reflect.Method r0;
        com.sun.xml.txw2.ContainerElement r9;
        boolean $z0, $z1, $z2, $z3, z4;
        com.sun.xml.txw2.Pcdata $r17;
        com.sun.xml.txw2.'annotation'.XmlElement r2, r27;
        com.sun.xml.txw2.StartTag $r12;
        java.lang.'annotation'.Annotation $r11, $r22;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.Object[] r14;
        com.sun.xml.txw2.TypedXmlWriter $r10;
        com.sun.xml.txw2.Document $r13, $r18, $r20;
        com.sun.xml.txw2.Text r29;
        int $i0, $i1, i2;
        java.lang.String $r8, $r24, r25, r26;
        com.sun.xml.txw2.EndTag $r15;
        java.lang.Package $r23;
        java.lang.Class $r1, $r3, $r21, $r28;
        java.lang.Object r16;
        com.sun.xml.txw2.Cdata $r19;

        r9 := @this: com.sun.xml.txw2.ContainerElement;

        r2 := @parameter0: com.sun.xml.txw2.'annotation'.XmlElement;

        r0 := @parameter1: java.lang.reflect.Method;

        r14 := @parameter2: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        r25 = "##default";

        r26 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        if r2 == null goto label02;

        $r24 = interfaceinvoke r2.<com.sun.xml.txw2.'annotation'.XmlElement: java.lang.String value()>();

        $i1 = virtualinvoke $r24.<java.lang.String: int length()>();

        if $i1 == 0 goto label01;

        r26 = interfaceinvoke r2.<com.sun.xml.txw2.'annotation'.XmlElement: java.lang.String value()>();

     label01:
        r25 = interfaceinvoke r2.<com.sun.xml.txw2.'annotation'.XmlElement: java.lang.String ns()>();

     label02:
        $z2 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("##default");

        if $z2 == 0 goto label04;

        $r21 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/sun/xml/txw2/annotation/XmlElement;");

        r27 = (com.sun.xml.txw2.'annotation'.XmlElement) $r22;

        if r27 == null goto label03;

        r25 = interfaceinvoke r27.<com.sun.xml.txw2.'annotation'.XmlElement: java.lang.String ns()>();

     label03:
        $z1 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("##default");

        if $z1 == 0 goto label04;

        $r23 = virtualinvoke $r21.<java.lang.Class: java.lang.Package getPackage()>();

        r25 = specialinvoke r9.<com.sun.xml.txw2.ContainerElement: java.lang.String getNamespace(java.lang.Package)>($r23);

     label04:
        $r28 = <java.lang.Void: java.lang.Class TYPE>;

        if $r1 != $r28 goto label11;

        $r11 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/sun/xml/txw2/annotation/XmlCDATA;");

        if $r11 == null goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z4 = $z3;

        $r12 = new com.sun.xml.txw2.StartTag;

        $r13 = r9.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        specialinvoke $r12.<com.sun.xml.txw2.StartTag: void <init>(com.sun.xml.txw2.Document,java.lang.String,java.lang.String)>($r13, r25, r26);

        specialinvoke r9.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r12);

        $i0 = lengthof r14;

        i2 = 0;

     label07:
        if i2 >= $i0 goto label10;

        r16 = r14[i2];

        if z4 == 0 goto label08;

        $r19 = new com.sun.xml.txw2.Cdata;

        $r20 = r9.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        specialinvoke $r19.<com.sun.xml.txw2.Cdata: void <init>(com.sun.xml.txw2.Document,com.sun.xml.txw2.NamespaceResolver,java.lang.Object)>($r20, $r12, r16);

        r29 = $r19;

        goto label09;

     label08:
        $r17 = new com.sun.xml.txw2.Pcdata;

        $r18 = r9.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        specialinvoke $r17.<com.sun.xml.txw2.Pcdata: void <init>(com.sun.xml.txw2.Document,com.sun.xml.txw2.NamespaceResolver,java.lang.Object)>($r18, $r12, r16);

        r29 = $r17;

     label09:
        specialinvoke r9.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>(r29);

        i2 = i2 + 1;

        goto label07;

     label10:
        $r15 = new com.sun.xml.txw2.EndTag;

        specialinvoke $r15.<com.sun.xml.txw2.EndTag: void <init>()>();

        specialinvoke r9.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r15);

        return null;

     label11:
        $r3 = class "Lcom/sun/xml/txw2/TypedXmlWriter;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label12;

        $r10 = virtualinvoke r9.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.TypedXmlWriter _element(java.lang.String,java.lang.String,java.lang.Class)>(r25, r26, $r1);

        return $r10;

     label12:
        $r4 = new com.sun.xml.txw2.IllegalSignatureException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal return type: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.sun.xml.txw2.IllegalSignatureException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    private java.lang.String getNamespace(java.lang.Package)
    {
        java.lang.Package r0;
        java.lang.'annotation'.Annotation $r1;
        com.sun.xml.txw2.'annotation'.XmlNamespace r2;
        java.lang.String r4;
        com.sun.xml.txw2.ContainerElement r3;

        r3 := @this: com.sun.xml.txw2.ContainerElement;

        r0 := @parameter0: java.lang.Package;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = virtualinvoke r0.<java.lang.Package: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/sun/xml/txw2/annotation/XmlNamespace;");

        r2 = (com.sun.xml.txw2.'annotation'.XmlNamespace) $r1;

        if r2 == null goto label2;

        r4 = interfaceinvoke r2.<com.sun.xml.txw2.'annotation'.XmlNamespace: java.lang.String value()>();

        goto label3;

     label2:
        r4 = "";

     label3:
        return r4;
    }

    private void addChild(com.sun.xml.txw2.Content)
    {
        com.sun.xml.txw2.Content r1, $r3;
        com.sun.xml.txw2.Document $r2;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: com.sun.xml.txw2.Content;

        $r3 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Content tail>;

        $r2 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        virtualinvoke $r3.<com.sun.xml.txw2.Content: void setNext(com.sun.xml.txw2.Document,com.sun.xml.txw2.Content)>($r2, r1);

        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Content tail> = r1;

        return;
    }

    public void commit()
    {
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: void commit(boolean)>(1);

        return;
    }

    public void commit(boolean)
    {
        com.sun.xml.txw2.Document $r1;
        com.sun.xml.txw2.ContainerElement r0;
        boolean z0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void _commit(boolean)>(z0);

        $r1 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        virtualinvoke $r1.<com.sun.xml.txw2.Document: void flush()>();

        return;
    }

    private void _commit(boolean)
    {
        com.sun.xml.txw2.ContainerElement r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r21, r23, $r24, $r25;
        boolean $z0, $z1, z2, $z3, $z4, $z5;
        java.lang.AssertionError $r11, $r14, $r18;
        com.sun.xml.txw2.EndTag $r1;
        com.sun.xml.txw2.EndDocument $r22;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        z2 := @parameter0: boolean;

        $z0 = specialinvoke r0.<com.sun.xml.txw2.ContainerElement: boolean isCommitted()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r1 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.EndTag endTag>;

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r1);

        $z1 = specialinvoke r0.<com.sun.xml.txw2.ContainerElement: boolean isRoot()>();

        if $z1 == 0 goto label02;

        $r22 = new com.sun.xml.txw2.EndDocument;

        specialinvoke $r22.<com.sun.xml.txw2.EndDocument: void <init>()>();

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r22);

     label02:
        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Content tail> = null;

        if z2 == 0 goto label06;

        r23 = r0;

     label03:
        if r23 == null goto label06;

     label04:
        $r20 = r23.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        if $r20 == null goto label05;

        $r21 = r23.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        specialinvoke $r21.<com.sun.xml.txw2.ContainerElement: void _commit(boolean)>(0);

        goto label04;

     label05:
        r23 = r23.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement parent>;

        goto label03;

     label06:
        $r24 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        if $r24 == null goto label07;

        $r19 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        specialinvoke $r19.<com.sun.xml.txw2.ContainerElement: void _commit(boolean)>(0);

        goto label06;

     label07:
        $r2 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement parent>;

        if $r2 == null goto label13;

        $r3 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement parent>;

        $r4 = $r3.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        if $r4 != r0 goto label09;

        $z5 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z5 != 0 goto label08;

        $r17 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen>;

        if $r17 == null goto label08;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>("this must be the last one");

        throw $r18;

     label08:
        $r16 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement parent>;

        $r15 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        $r16.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild> = $r15;

        goto label11;

     label09:
        $z3 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z3 != 0 goto label10;

        $r12 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen>;

        $r13 = $r12.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        if $r13 == r0 goto label10;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label10:
        $r6 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen>;

        $r5 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        $r6.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen> = $r5;

     label11:
        $r25 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        if $r25 == null goto label13;

        $z4 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z4 != 0 goto label12;

        $r9 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        $r10 = $r9.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen>;

        if $r10 == r0 goto label12;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label12:
        $r8 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        $r7 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen>;

        $r8.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen> = $r7;

     label13:
        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen> = null;

        r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen> = null;

        return;
    }

    public void _attribute(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: void _attribute(java.lang.String,java.lang.String,java.lang.Object)>("", r1, r2);

        return;
    }

    public void _attribute(java.lang.String, java.lang.String, java.lang.Object)
    {
        java.lang.Object r3;
        java.lang.String r1, r2;
        com.sun.xml.txw2.ContainerElement r0;
        com.sun.xml.txw2.StartTag $r4;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void checkStartTag()>();

        $r4 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        virtualinvoke $r4.<com.sun.xml.txw2.StartTag: void addAttribute(java.lang.String,java.lang.String,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void _attribute(javax.xml.namespace.QName, java.lang.Object)
    {
        java.lang.Object r4;
        javax.xml.namespace.QName r1;
        java.lang.String $r2, $r3;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: void _attribute(java.lang.String,java.lang.String,java.lang.Object)>($r2, $r3, r4);

        return;
    }

    public void _namespace(java.lang.String)
    {
        java.lang.String r1;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: void _namespace(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void _namespace(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2;
        java.lang.IllegalArgumentException $r4;
        com.sun.xml.txw2.ContainerElement r1;
        com.sun.xml.txw2.StartTag $r3;

        r1 := @this: com.sun.xml.txw2.ContainerElement;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        specialinvoke r1.<com.sun.xml.txw2.ContainerElement: void checkStartTag()>();

        $r3 = r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        virtualinvoke $r3.<com.sun.xml.txw2.StartTag: com.sun.xml.txw2.NamespaceDecl addNamespaceDecl(java.lang.String,java.lang.String,boolean)>(r2, r0, 0);

        return;
    }

    public void _namespace(java.lang.String, boolean)
    {
        java.lang.String r1;
        com.sun.xml.txw2.ContainerElement r0;
        com.sun.xml.txw2.StartTag $r2;
        boolean z0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void checkStartTag()>();

        $r2 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        virtualinvoke $r2.<com.sun.xml.txw2.StartTag: com.sun.xml.txw2.NamespaceDecl addNamespaceDecl(java.lang.String,java.lang.String,boolean)>(r1, null, z0);

        return;
    }

    public void _pcdata(java.lang.Object)
    {
        com.sun.xml.txw2.Pcdata $r1;
        java.lang.Object r2;
        com.sun.xml.txw2.Document $r4;
        com.sun.xml.txw2.ContainerElement r0;
        com.sun.xml.txw2.StartTag $r3;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r2 := @parameter0: java.lang.Object;

        $r1 = new com.sun.xml.txw2.Pcdata;

        $r4 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        $r3 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        specialinvoke $r1.<com.sun.xml.txw2.Pcdata: void <init>(com.sun.xml.txw2.Document,com.sun.xml.txw2.NamespaceResolver,java.lang.Object)>($r4, $r3, r2);

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r1);

        return;
    }

    public void _cdata(java.lang.Object)
    {
        java.lang.Object r2;
        com.sun.xml.txw2.Document $r4;
        com.sun.xml.txw2.ContainerElement r0;
        com.sun.xml.txw2.StartTag $r3;
        com.sun.xml.txw2.Cdata $r1;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r2 := @parameter0: java.lang.Object;

        $r1 = new com.sun.xml.txw2.Cdata;

        $r4 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        $r3 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        specialinvoke $r1.<com.sun.xml.txw2.Cdata: void <init>(com.sun.xml.txw2.Document,com.sun.xml.txw2.NamespaceResolver,java.lang.Object)>($r4, $r3, r2);

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r1);

        return;
    }

    public void _comment(java.lang.Object) throws java.lang.UnsupportedOperationException
    {
        com.sun.xml.txw2.Comment $r1;
        java.lang.Object r2;
        com.sun.xml.txw2.Document $r4;
        com.sun.xml.txw2.ContainerElement r0;
        com.sun.xml.txw2.StartTag $r3;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r2 := @parameter0: java.lang.Object;

        $r1 = new com.sun.xml.txw2.Comment;

        $r4 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        $r3 = r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        specialinvoke $r1.<com.sun.xml.txw2.Comment: void <init>(com.sun.xml.txw2.Document,com.sun.xml.txw2.NamespaceResolver,java.lang.Object)>($r4, $r3, r2);

        specialinvoke r0.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r1);

        return;
    }

    public com.sun.xml.txw2.TypedXmlWriter _element(java.lang.String, java.lang.Class)
    {
        com.sun.xml.txw2.TypedXmlWriter $r4;
        java.lang.Class r2;
        java.lang.String r1, $r3;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<com.sun.xml.txw2.ContainerElement: java.lang.String nsUri>;

        $r4 = virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.TypedXmlWriter _element(java.lang.String,java.lang.String,java.lang.Class)>($r3, r1, r2);

        return $r4;
    }

    public com.sun.xml.txw2.TypedXmlWriter _element(javax.xml.namespace.QName, java.lang.Class)
    {
        com.sun.xml.txw2.TypedXmlWriter $r5;
        java.lang.Class r4;
        javax.xml.namespace.QName r1;
        java.lang.String $r2, $r3;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r5 = virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.TypedXmlWriter _element(java.lang.String,java.lang.String,java.lang.Class)>($r2, $r3, r4);

        return $r5;
    }

    public com.sun.xml.txw2.TypedXmlWriter _element(java.lang.Class)
    {
        com.sun.xml.txw2.TypedXmlWriter $r3;
        java.lang.Class r1;
        javax.xml.namespace.QName $r2;
        com.sun.xml.txw2.ContainerElement r0;

        r0 := @this: com.sun.xml.txw2.ContainerElement;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.sun.xml.txw2.TXW: javax.xml.namespace.QName getTagName(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.TypedXmlWriter _element(javax.xml.namespace.QName,java.lang.Class)>($r2, r1);

        return $r3;
    }

    public com.sun.xml.txw2.TypedXmlWriter _cast(java.lang.Class)
    {
        com.sun.xml.txw2.TypedXmlWriter $r6;
        java.lang.Class[] $r2;
        java.lang.Class r0;
        java.lang.Object $r4, $r5;
        java.lang.ClassLoader $r1;
        com.sun.xml.txw2.ContainerElement r3;

        r3 := @this: com.sun.xml.txw2.ContainerElement;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = r0;

        $r4 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r1, $r2, r3);

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        $r6 = (com.sun.xml.txw2.TypedXmlWriter) $r5;

        return $r6;
    }

    public com.sun.xml.txw2.TypedXmlWriter _element(java.lang.String, java.lang.String, java.lang.Class)
    {
        com.sun.xml.txw2.TypedXmlWriter $r21;
        com.sun.xml.txw2.Document $r4;
        java.lang.AssertionError $r13, $r15, $r17, $r20;
        java.lang.String r2, r3;
        com.sun.xml.txw2.ContainerElement $r0, r1, $r7, $r9, $r10, $r11, $r12, $r14, $r16, $r18, $r19;
        com.sun.xml.txw2.EndTag $r6;
        boolean $z0, $z1, $z2, $z3;
        com.sun.xml.txw2.StartTag $r5;
        java.lang.Class r8;

        r1 := @this: com.sun.xml.txw2.ContainerElement;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.Class;

        $r0 = new com.sun.xml.txw2.ContainerElement;

        $r4 = r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Document document>;

        specialinvoke $r0.<com.sun.xml.txw2.ContainerElement: void <init>(com.sun.xml.txw2.Document,com.sun.xml.txw2.ContainerElement,java.lang.String,java.lang.String)>($r4, r1, r2, r3);

        $r5 = $r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.StartTag startTag>;

        specialinvoke r1.<com.sun.xml.txw2.ContainerElement: void addChild(com.sun.xml.txw2.Content)>($r5);

        $r6 = $r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.EndTag endTag>;

        r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.Content tail> = $r6;

        $r7 = r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        if $r7 == null goto label5;

        $z0 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r18 = r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        $r19 = $r18.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement parent>;

        if $r19 == r1 goto label1;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label1:
        $z1 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r16 = $r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen>;

        if $r16 == null goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label2:
        $z2 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r14 = $r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen>;

        if $r14 == null goto label3;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label3:
        $r9 = r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        $r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement prevOpen> = $r9;

        $z3 = <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $r11 = r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        $r12 = $r11.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen>;

        if $r12 == null goto label4;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label4:
        $r10 = r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild>;

        $r10.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement nextOpen> = $r0;

     label5:
        r1.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.ContainerElement lastOpenChild> = $r0;

        $r21 = virtualinvoke $r0.<com.sun.xml.txw2.ContainerElement: com.sun.xml.txw2.TypedXmlWriter _cast(java.lang.Class)>(r8);

        return $r21;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/txw2/ContainerElement;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.txw2.ContainerElement: boolean $assertionsDisabled> = $z1;

        return;
    }
}
