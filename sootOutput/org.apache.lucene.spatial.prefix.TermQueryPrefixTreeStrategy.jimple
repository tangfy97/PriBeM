public class org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy extends org.apache.lucene.spatial.prefix.PrefixTreeStrategy
{

    public void <init>(org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree, java.lang.String)
    {
        org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy r0;
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree r1;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.PrefixTreeStrategy: void <init>(org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree,java.lang.String,boolean)>(r1, r2, 0);

        return;
    }

    public org.apache.lucene.search.Filter makeFilter(org.apache.lucene.spatial.query.SpatialArgs)
    {
        org.apache.lucene.spatial.query.UnsupportedSpatialOperation $r17;
        org.apache.lucene.spatial.prefix.tree.Cell r14;
        com.spatial4j.core.shape.Shape $r3;
        org.apache.lucene.queries.TermsFilter $r11;
        org.apache.lucene.spatial.query.SpatialArgs r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r12, $r16;
        double $d0, $d1;
        boolean $z0;
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree $r6, $r7;
        java.util.Iterator $r10;
        org.apache.lucene.util.BytesRef $r15;
        com.spatial4j.core.context.SpatialContext $r5;
        java.util.List $r8;
        org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy r4;
        org.apache.lucene.util.BytesRef[] r9;
        java.lang.Object $r13;
        org.apache.lucene.spatial.query.SpatialOperation $r1, $r2;

        r4 := @this: org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy;

        r0 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation getOperation()>();

        $r2 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Intersects>;

        if $r1 == $r2 goto label1;

        $r17 = new org.apache.lucene.spatial.query.UnsupportedSpatialOperation;

        specialinvoke $r17.<org.apache.lucene.spatial.query.UnsupportedSpatialOperation: void <init>(org.apache.lucene.spatial.query.SpatialOperation)>($r1);

        throw $r17;

     label1:
        $r3 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape getShape()>();

        $r6 = r4.<org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $r5 = r4.<org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy: com.spatial4j.core.context.SpatialContext ctx>;

        $d0 = r4.<org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy: double distErrPct>;

        $d1 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: double resolveDistErr(com.spatial4j.core.context.SpatialContext,double)>($r5, $d0);

        $i0 = virtualinvoke $r6.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: int getLevelForDistance(double)>($d1);

        $r7 = r4.<org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: java.util.List getCells(com.spatial4j.core.shape.Shape,int,boolean,boolean)>($r3, $i0, 0, 1);

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        r9 = newarray (org.apache.lucene.util.BytesRef)[$i1];

        i3 = 0;

        $r10 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.lucene.spatial.prefix.tree.Cell) $r13;

        $i2 = i3;

        i3 = i3 + 1;

        $r15 = new org.apache.lucene.util.BytesRef;

        $r16 = virtualinvoke r14.<org.apache.lucene.spatial.prefix.tree.Cell: java.lang.String getTokenString()>();

        specialinvoke $r15.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>($r16);

        r9[$i2] = $r15;

        goto label2;

     label3:
        $r11 = new org.apache.lucene.queries.TermsFilter;

        $r12 = virtualinvoke r4.<org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy: java.lang.String getFieldName()>();

        specialinvoke $r11.<org.apache.lucene.queries.TermsFilter: void <init>(java.lang.String,org.apache.lucene.util.BytesRef[])>($r12, r9);

        return $r11;
    }
}
