public class org.apache.jena.iri.impl.IDNP extends java.lang.Object
{

    public void <init>()
    {
        org.apache.jena.iri.impl.IDNP r0;

        r0 := @this: org.apache.jena.iri.impl.IDNP;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toASCII(java.lang.String, int)
    {
        int i0, $i1, $i2;
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $i2 = i0 ^ 2;

        $r2 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r0, $i2);

        $r3 = staticinvoke <org.apache.jena.iri.impl.IDNP: java.lang.String check(java.lang.String)>($r2);

        return $r3;

     label1:
        $r1 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r0, i0);

        return $r1;
    }

    private static java.lang.String check(java.lang.String)
    {
        int i0, i1;
        java.lang.String[] $r1;
        java.lang.String r0, r2;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        staticinvoke <org.apache.jena.iri.impl.IDNP: void checkPart(java.lang.String)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static void checkPart(java.lang.String)
    {
        int $i1, $i2, $i4, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r0;
        char $c0, $c3, $c5;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i7 = (int) $c0;

        if $i7 == 45 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i8 = (int) $c3;

        if $i8 != 45 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Has leading or trailing hyphen");

        throw $r3;

     label2:
        i6 = 0;

     label3:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i4 goto label8;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i9 = (int) $c5;

        if $i9 == 45 goto label7;

        $i10 = (int) $c5;

        if $i10 < 48 goto label4;

        $i11 = (int) $c5;

        if $i11 <= 57 goto label7;

     label4:
        $i12 = (int) $c5;

        if $i12 < 97 goto label5;

        $i13 = (int) $c5;

        if $i13 <= 122 goto label7;

     label5:
        $i14 = (int) $c5;

        if $i14 < 65 goto label6;

        $i15 = (int) $c5;

        if $i15 <= 90 goto label7;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Contains non-LDH characters");

        throw $r4;

     label7:
        i6 = i6 + 1;

        goto label3;

     label8:
        return;
    }
}
