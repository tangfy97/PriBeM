public class com.mongodb.gridfs.GridFSDBFile extends com.mongodb.gridfs.GridFSFile
{

    public void <init>()
    {
        com.mongodb.gridfs.GridFSDBFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSDBFile;

        specialinvoke r0.<com.mongodb.gridfs.GridFSFile: void <init>()>();

        return;
    }

    public java.io.InputStream getInputStream()
    {
        com.mongodb.gridfs.GridFSDBFile$MyInputStream $r0;
        com.mongodb.gridfs.GridFSDBFile r1;

        r1 := @this: com.mongodb.gridfs.GridFSDBFile;

        $r0 = new com.mongodb.gridfs.GridFSDBFile$MyInputStream;

        specialinvoke $r0.<com.mongodb.gridfs.GridFSDBFile$MyInputStream: void <init>(com.mongodb.gridfs.GridFSDBFile)>(r1);

        return $r0;
    }

    public long writeTo(java.lang.String) throws java.io.IOException
    {
        com.mongodb.gridfs.GridFSDBFile r0;
        long $l0;
        java.lang.String r2;
        java.io.File $r1;

        r0 := @this: com.mongodb.gridfs.GridFSDBFile;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        $l0 = virtualinvoke r0.<com.mongodb.gridfs.GridFSDBFile: long writeTo(java.io.File)>($r1);

        return $l0;
    }

    public long writeTo(java.io.File) throws java.io.IOException
    {
        com.mongodb.gridfs.GridFSDBFile r0;
        java.io.FileOutputStream $r1;
        long $l0;
        java.io.File r2;

        r0 := @this: com.mongodb.gridfs.GridFSDBFile;

        r2 := @parameter0: java.io.File;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        $l0 = virtualinvoke r0.<com.mongodb.gridfs.GridFSDBFile: long writeTo(java.io.OutputStream)>($r1);

        return $l0;
    }

    public long writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2;
        com.mongodb.gridfs.GridFSDBFile r0;
        int $i0, i2;
        long $l1;

        r0 := @this: com.mongodb.gridfs.GridFSDBFile;

        r1 := @parameter0: java.io.OutputStream;

        $i0 = virtualinvoke r0.<com.mongodb.gridfs.GridFSDBFile: int numChunks()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.mongodb.gridfs.GridFSDBFile: byte[] getChunk(int)>(i2);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        $l1 = r0.<com.mongodb.gridfs.GridFSDBFile: long _length>;

        return $l1;
    }

    byte[] getChunk(int)
    {
        byte[] $r11, $r12;
        java.lang.Integer $r6;
        com.mongodb.DBObject $r8, $r9;
        int i0;
        java.lang.String $r20;
        com.mongodb.BasicDBObjectBuilder $r5, $r7;
        com.mongodb.MongoException $r13;
        com.mongodb.gridfs.GridFSDBFile r0;
        com.mongodb.DBCollection $r4;
        java.lang.RuntimeException $r21;
        com.mongodb.gridfs.GridFS $r1, $r2;
        java.lang.Object $r3, $r10, $r16;
        java.lang.StringBuilder $r14, $r15, $r17, $r18, $r19;

        r0 := @this: com.mongodb.gridfs.GridFSDBFile;

        i0 := @parameter0: int;

        $r1 = r0.<com.mongodb.gridfs.GridFSDBFile: com.mongodb.gridfs.GridFS _fs>;

        if $r1 != null goto label1;

        $r21 = new java.lang.RuntimeException;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>("no gridfs!");

        throw $r21;

     label1:
        $r2 = r0.<com.mongodb.gridfs.GridFSDBFile: com.mongodb.gridfs.GridFS _fs>;

        $r4 = $r2.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _chunkCollection>;

        $r3 = r0.<com.mongodb.gridfs.GridFSDBFile: java.lang.Object _id>;

        $r5 = staticinvoke <com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder start(java.lang.String,java.lang.Object)>("files_id", $r3);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object)>("n", $r6);

        $r8 = virtualinvoke $r7.<com.mongodb.BasicDBObjectBuilder: com.mongodb.DBObject get()>();

        $r9 = virtualinvoke $r4.<com.mongodb.DBCollection: com.mongodb.DBObject findOne(com.mongodb.DBObject)>($r8);

        if $r9 != null goto label2;

        $r13 = new com.mongodb.MongoException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t find a chunk!  file id: ");

        $r16 = r0.<com.mongodb.gridfs.GridFSDBFile: java.lang.Object _id>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.mongodb.MongoException: void <init>(java.lang.String)>($r20);

        throw $r13;

     label2:
        $r10 = interfaceinvoke $r9.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("data");

        $r11 = (byte[]) $r10;

        $r12 = (byte[]) $r11;

        return $r12;
    }

    void remove()
    {
        com.mongodb.gridfs.GridFSDBFile r0;
        com.mongodb.BasicDBObject $r2, $r6;
        com.mongodb.DBCollection $r4, $r8;
        com.mongodb.gridfs.GridFS $r1, $r5;
        java.lang.Object $r3, $r7;

        r0 := @this: com.mongodb.gridfs.GridFSDBFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSDBFile: com.mongodb.gridfs.GridFS _fs>;

        $r4 = $r1.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _filesCollection>;

        $r2 = new com.mongodb.BasicDBObject;

        $r3 = r0.<com.mongodb.gridfs.GridFSDBFile: java.lang.Object _id>;

        specialinvoke $r2.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("_id", $r3);

        virtualinvoke $r4.<com.mongodb.DBCollection: com.mongodb.WriteResult remove(com.mongodb.DBObject)>($r2);

        $r5 = r0.<com.mongodb.gridfs.GridFSDBFile: com.mongodb.gridfs.GridFS _fs>;

        $r8 = $r5.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _chunkCollection>;

        $r6 = new com.mongodb.BasicDBObject;

        $r7 = r0.<com.mongodb.gridfs.GridFSDBFile: java.lang.Object _id>;

        specialinvoke $r6.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("files_id", $r7);

        virtualinvoke $r8.<com.mongodb.DBCollection: com.mongodb.WriteResult remove(com.mongodb.DBObject)>($r6);

        return;
    }
}
