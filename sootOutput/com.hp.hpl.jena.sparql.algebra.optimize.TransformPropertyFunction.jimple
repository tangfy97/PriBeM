public class com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction extends com.hp.hpl.jena.sparql.algebra.TransformCopy
{
    private final com.hp.hpl.jena.sparql.util.Context context;
    private final boolean doingMagicProperties;
    private final com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry registry;

    public void <init>(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction r0;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry $r3;
        com.hp.hpl.jena.sparql.util.Context r1;
        com.hp.hpl.jena.sparql.util.Symbol $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction;

        r1 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.TransformCopy: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: com.hp.hpl.jena.sparql.util.Context context> = r1;

        $r2 = <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Symbol enablePropertyFunctions>;

        $z0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.util.Context: boolean isTrue(com.hp.hpl.jena.sparql.util.Symbol)>($r2);

        r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: boolean doingMagicProperties> = $z0;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry chooseRegistry(com.hp.hpl.jena.sparql.util.Context)>(r1);

        r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry registry> = $r3;

        return;
    }

    public com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpTriple)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpTriple r1;
        com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction r0;
        com.hp.hpl.jena.sparql.algebra.op.OpBGP $r2, $r4;
        com.hp.hpl.jena.sparql.algebra.Op $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpTriple;

        $z0 = r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: boolean doingMagicProperties>;

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpTriple: com.hp.hpl.jena.sparql.algebra.op.OpBGP asBGP()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpBGP)>($r2);

        $z1 = $r3 instanceof com.hp.hpl.jena.sparql.algebra.op.OpBGP;

        if $z1 != 0 goto label2;

        return $r3;

     label2:
        $r4 = (com.hp.hpl.jena.sparql.algebra.op.OpBGP) $r3;

        $z2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpTriple: boolean equivalent(com.hp.hpl.jena.sparql.algebra.op.OpBGP)>($r4);

        if $z2 == 0 goto label3;

        return r1;

     label3:
        return $r3;
    }

    public com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpBGP)
    {
        com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction r0;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry $r3;
        com.hp.hpl.jena.sparql.algebra.op.OpBGP r1;
        com.hp.hpl.jena.sparql.util.Context $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpBGP;

        $z0 = r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: boolean doingMagicProperties>;

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry registry>;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPropertyFunction: com.hp.hpl.jena.sparql.util.Context context>;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.algebra.PropertyFunctionGenerator: com.hp.hpl.jena.sparql.algebra.Op buildPropertyFunctions(com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry,com.hp.hpl.jena.sparql.algebra.op.OpBGP,com.hp.hpl.jena.sparql.util.Context)>($r3, r1, $r2);

        return $r4;
    }
}
