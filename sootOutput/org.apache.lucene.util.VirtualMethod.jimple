public final class org.apache.lucene.util.VirtualMethod extends java.lang.Object
{
    private static final java.util.Set singletonSet;
    private final java.lang.Class baseClass;
    private final java.lang.String method;
    private final java.lang.Class[] parameters;
    private final org.apache.lucene.util.WeakIdentityMap cache;

    public transient void <init>(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        java.lang.NoSuchMethodException $r8;
        org.apache.lucene.util.WeakIdentityMap $r1;
        org.apache.lucene.util.VirtualMethod r0;
        java.lang.String r3, $r11, $r14, $r16;
        java.lang.reflect.Method $r6;
        boolean $z0;
        java.lang.UnsupportedOperationException $r7;
        java.lang.Class[] r4;
        java.util.Set $r5;
        java.lang.IllegalArgumentException $r9;
        java.lang.Class r2;
        java.lang.StringBuilder $r10, $r12, $r13, $r15;

        r0 := @this: org.apache.lucene.util.VirtualMethod;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.lucene.util.WeakIdentityMap: org.apache.lucene.util.WeakIdentityMap newConcurrentHashMap(boolean)>(0);

        r0.<org.apache.lucene.util.VirtualMethod: org.apache.lucene.util.WeakIdentityMap cache> = $r1;

        r0.<org.apache.lucene.util.VirtualMethod: java.lang.Class baseClass> = r2;

        r0.<org.apache.lucene.util.VirtualMethod: java.lang.String method> = r3;

        r0.<org.apache.lucene.util.VirtualMethod: java.lang.Class[] parameters> = r4;

     label1:
        $r5 = <org.apache.lucene.util.VirtualMethod: java.util.Set singletonSet>;

        $r6 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r3, r4);

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("VirtualMethod instances must be singletons and therefore assigned to static final members in the same class, they use as baseClass ctor param.");

        throw $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no such method: ");

        $r14 = virtualinvoke $r8.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label4:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public int getImplementationDistance(java.lang.Class)
    {
        org.apache.lucene.util.WeakIdentityMap $r2, $r4;
        java.lang.Integer $r5, r6;
        org.apache.lucene.util.VirtualMethod r0;
        int $i0, $i1;
        java.lang.Class r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.lucene.util.VirtualMethod;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.lucene.util.VirtualMethod: org.apache.lucene.util.WeakIdentityMap cache>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.lang.Integer) $r3;

        if r6 != null goto label1;

        $r4 = r0.<org.apache.lucene.util.VirtualMethod: org.apache.lucene.util.WeakIdentityMap cache>;

        $i1 = specialinvoke r0.<org.apache.lucene.util.VirtualMethod: int reflectImplementationDistance(java.lang.Class)>(r1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r6 = $r5;

        virtualinvoke $r4.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        $i0 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public boolean isOverriddenAsOf(java.lang.Class)
    {
        org.apache.lucene.util.VirtualMethod r0;
        int $i0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.VirtualMethod;

        r1 := @parameter0: java.lang.Class;

        $i0 = virtualinvoke r0.<org.apache.lucene.util.VirtualMethod: int getImplementationDistance(java.lang.Class)>(r1);

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int reflectImplementationDistance(java.lang.Class)
    {
        java.lang.NoSuchMethodException $r15;
        org.apache.lucene.util.VirtualMethod r0;
        int i0;
        java.lang.String $r5, $r8, $r12, $r14;
        boolean $z0, z1, z2, z3;
        java.lang.Class[] $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.Class r1, $r2, $r3, $r11, r16;
        java.lang.StringBuilder $r7, $r9, $r10, $r13;

        r0 := @this: org.apache.lucene.util.VirtualMethod;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.lucene.util.VirtualMethod: java.lang.Class baseClass>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a subclass of ");

        $r11 = r0.<org.apache.lucene.util.VirtualMethod: java.lang.Class baseClass>;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label1:
        z1 = 0;

        z3 = 0;

        z2 = 0;

        i0 = 0;

        r16 = r1;

     label2:
        $r3 = r0.<org.apache.lucene.util.VirtualMethod: java.lang.Class baseClass>;

        if r16 == $r3 goto label8;

        if r16 == null goto label8;

        if z2 != 0 goto label6;

     label3:
        $r5 = r0.<org.apache.lucene.util.VirtualMethod: java.lang.String method>;

        $r4 = r0.<org.apache.lucene.util.VirtualMethod: java.lang.Class[] parameters>;

        virtualinvoke r16.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r5, $r4);

        z1 = 1;

        z3 = 1;

        z2 = 1;

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

     label6:
        if z3 == 0 goto label7;

        i0 = i0 + 1;

     label7:
        r16 = virtualinvoke r16.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label2;

     label8:
        return i0;

        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    public static int compareImplementationDistance(java.lang.Class, org.apache.lucene.util.VirtualMethod, org.apache.lucene.util.VirtualMethod)
    {
        java.lang.Integer $r2, $r4;
        org.apache.lucene.util.VirtualMethod r0, r3;
        int $i0, $i1, $i2;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: org.apache.lucene.util.VirtualMethod;

        r3 := @parameter2: org.apache.lucene.util.VirtualMethod;

        $i0 = virtualinvoke r0.<org.apache.lucene.util.VirtualMethod: int getImplementationDistance(java.lang.Class)>(r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = virtualinvoke r3.<org.apache.lucene.util.VirtualMethod: int getImplementationDistance(java.lang.Class)>(r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = virtualinvoke $r2.<java.lang.Integer: int compareTo(java.lang.Integer)>($r4);

        return $i2;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.Set $r1;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r0);

        <org.apache.lucene.util.VirtualMethod: java.util.Set singletonSet> = $r1;

        return;
    }
}
