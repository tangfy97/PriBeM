public class org.apache.batik.svggen.font.table.HheaTable extends java.lang.Object implements org.apache.batik.svggen.font.table.Table
{
    private int version;
    private short ascender;
    private short descender;
    private short lineGap;
    private short advanceWidthMax;
    private short minLeftSideBearing;
    private short minRightSideBearing;
    private short xMaxExtent;
    private short caretSlopeRise;
    private short caretSlopeRun;
    private short metricDataFormat;
    private int numberOfHMetrics;

    protected void <init>(org.apache.batik.svggen.font.table.DirectoryEntry, java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        long $l1;
        org.apache.batik.svggen.font.table.HheaTable r0;
        short $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12;
        int $i0, $i2, $i13, i14;
        org.apache.batik.svggen.font.table.DirectoryEntry r2;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        r2 := @parameter0: org.apache.batik.svggen.font.table.DirectoryEntry;

        r1 := @parameter1: java.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r2.<org.apache.batik.svggen.font.table.DirectoryEntry: int getOffset()>();

        $l1 = (long) $i0;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l1);

        $i2 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: int version> = $i2;

        $s3 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short ascender> = $s3;

        $s4 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short descender> = $s4;

        $s5 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short lineGap> = $s5;

        $s6 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short advanceWidthMax> = $s6;

        $s7 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short minLeftSideBearing> = $s7;

        $s8 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short minRightSideBearing> = $s8;

        $s9 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short xMaxExtent> = $s9;

        $s10 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short caretSlopeRise> = $s10;

        $s11 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short caretSlopeRun> = $s11;

        i14 = 0;

        goto label2;

     label1:
        virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        i14 = i14 + 1;

     label2:
        if i14 < 5 goto label1;

        $s12 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: short metricDataFormat> = $s12;

        $i13 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.HheaTable: int numberOfHMetrics> = $i13;

        return;
    }

    public short getAdvanceWidthMax()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short advanceWidthMax>;

        return $s0;
    }

    public short getAscender()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short ascender>;

        return $s0;
    }

    public short getCaretSlopeRise()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short caretSlopeRise>;

        return $s0;
    }

    public short getCaretSlopeRun()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short caretSlopeRun>;

        return $s0;
    }

    public short getDescender()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short descender>;

        return $s0;
    }

    public short getLineGap()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short lineGap>;

        return $s0;
    }

    public short getMetricDataFormat()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short metricDataFormat>;

        return $s0;
    }

    public short getMinLeftSideBearing()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short minLeftSideBearing>;

        return $s0;
    }

    public short getMinRightSideBearing()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short minRightSideBearing>;

        return $s0;
    }

    public int getNumberOfHMetrics()
    {
        int $i0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $i0 = r0.<org.apache.batik.svggen.font.table.HheaTable: int numberOfHMetrics>;

        return $i0;
    }

    public int getType()
    {
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        return 1751672161;
    }

    public short getXMaxExtent()
    {
        short $s0;
        org.apache.batik.svggen.font.table.HheaTable r0;

        r0 := @this: org.apache.batik.svggen.font.table.HheaTable;

        $s0 = r0.<org.apache.batik.svggen.font.table.HheaTable: short xMaxExtent>;

        return $s0;
    }
}
