class org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringMap$ProcV
{
    final org.waveprotocol.wave.model.util.StringMap val$b0;
    final org.waveprotocol.wave.model.util.StringMap val$a1;
    final org.waveprotocol.wave.model.util.StringMap val$d0;
    final org.waveprotocol.wave.model.util.StringMap val$e0;
    final org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree this$0;

    void <init>(org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree, org.waveprotocol.wave.model.util.StringMap, org.waveprotocol.wave.model.util.StringMap, org.waveprotocol.wave.model.util.StringMap, org.waveprotocol.wave.model.util.StringMap)
    {
        org.waveprotocol.wave.model.util.StringMap r2, r3, r4, r5;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2 r0;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree;

        r2 := @parameter1: org.waveprotocol.wave.model.util.StringMap;

        r3 := @parameter2: org.waveprotocol.wave.model.util.StringMap;

        r4 := @parameter3: org.waveprotocol.wave.model.util.StringMap;

        r5 := @parameter4: org.waveprotocol.wave.model.util.StringMap;

        r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree this$0> = r1;

        r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$b0> = r2;

        r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$a1> = r3;

        r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$d0> = r4;

        r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$e0> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.util.StringMap $r2, $r4, $r5, $r7, $r8, $r9;
        java.lang.Object r3, $r6;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2 r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$b0>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringMap: boolean containsKey(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$b0>;

        $r6 = interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object getExisting(java.lang.String)>(r1);

        $z1 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r6, r3);

        if $z1 == 0 goto label1;

        $r7 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$b0>;

        interfaceinvoke $r7.<org.waveprotocol.wave.model.util.StringMap: void remove(java.lang.String)>(r1);

        $r8 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$a1>;

        interfaceinvoke $r8.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r1, r3);

        goto label2;

     label1:
        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$d0>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r1, r3);

     label2:
        $r9 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$2: org.waveprotocol.wave.model.util.StringMap val$e0>;

        interfaceinvoke $r9.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r1, r3);

        return;
    }
}
