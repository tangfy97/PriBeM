public class com.jhlabs.image.ScaleFilter extends com.jhlabs.image.AbstractBufferedImageOp
{
    private int width;
    private int height;

    public void <init>()
    {
        com.jhlabs.image.ScaleFilter r0;

        r0 := @this: com.jhlabs.image.ScaleFilter;

        specialinvoke r0.<com.jhlabs.image.ScaleFilter: void <init>(int,int)>(32, 32);

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        com.jhlabs.image.ScaleFilter r0;

        r0 := @this: com.jhlabs.image.ScaleFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.ScaleFilter: int width> = i0;

        r0.<com.jhlabs.image.ScaleFilter: int height> = i1;

        return;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        com.jhlabs.image.ScaleFilter r2;
        java.awt.image.BufferedImage r0, $r4, r6;
        java.awt.image.ColorModel $r3;
        java.awt.Graphics2D $r1;
        int $i0, $i1, $i2, $i3;
        java.awt.image.WritableRaster $r5;
        boolean $z0;

        r2 := @this: com.jhlabs.image.ScaleFilter;

        r0 := @parameter0: java.awt.image.BufferedImage;

        r6 := @parameter1: java.awt.image.BufferedImage;

        $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        if r6 != null goto label1;

        $r3 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r4 = new java.awt.image.BufferedImage;

        $r5 = virtualinvoke $r3.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i0, $i1);

        $z0 = virtualinvoke $r3.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r3, $r5, $z0, null);

        r6 = $r4;

     label1:
        virtualinvoke r0.<java.awt.Image: java.awt.Image getScaledInstance(int,int,int)>($i0, $i1, 16);

        $r1 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $i3 = r2.<com.jhlabs.image.ScaleFilter: int width>;

        $i2 = r2.<com.jhlabs.image.ScaleFilter: int height>;

        virtualinvoke $r1.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>(r0, 0, 0, $i3, $i2, null);

        virtualinvoke $r1.<java.awt.Graphics: void dispose()>();

        return r6;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.ScaleFilter r0;

        r0 := @this: com.jhlabs.image.ScaleFilter;

        return "Distort/Scale";
    }
}
