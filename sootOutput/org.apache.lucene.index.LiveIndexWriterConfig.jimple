public class org.apache.lucene.index.LiveIndexWriterConfig extends java.lang.Object
{
    private final org.apache.lucene.analysis.Analyzer analyzer;
    private volatile int maxBufferedDocs;
    private volatile double ramBufferSizeMB;
    private volatile int maxBufferedDeleteTerms;
    private volatile int readerTermsIndexDivisor;
    private volatile org.apache.lucene.index.IndexWriter$IndexReaderWarmer mergedSegmentWarmer;
    private volatile int termIndexInterval;
    protected volatile org.apache.lucene.index.IndexDeletionPolicy delPolicy;
    protected volatile org.apache.lucene.index.IndexCommit commit;
    protected volatile org.apache.lucene.index.IndexWriterConfig$OpenMode openMode;
    protected volatile org.apache.lucene.search.similarities.Similarity similarity;
    protected volatile org.apache.lucene.index.MergeScheduler mergeScheduler;
    protected volatile long writeLockTimeout;
    protected volatile org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain indexingChain;
    protected volatile org.apache.lucene.codecs.Codec codec;
    protected volatile org.apache.lucene.util.InfoStream infoStream;
    protected volatile org.apache.lucene.index.MergePolicy mergePolicy;
    protected volatile org.apache.lucene.index.DocumentsWriterPerThreadPool indexerThreadPool;
    protected volatile boolean readerPooling;
    protected volatile org.apache.lucene.index.FlushPolicy flushPolicy;
    protected volatile int perThreadHardLimitMB;
    protected final org.apache.lucene.util.Version matchVersion;

    void <init>(org.apache.lucene.analysis.Analyzer, org.apache.lucene.util.Version)
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool $r20;
        long $l0;
        org.apache.lucene.index.ConcurrentMergeScheduler $r16;
        java.lang.NullPointerException $r17;
        org.apache.lucene.index.IndexWriterConfig$OpenMode $r4;
        org.apache.lucene.search.similarities.Similarity $r5;
        int $i2, $i4;
        org.apache.lucene.index.TieredMergePolicy $r18;
        org.apache.lucene.index.FlushByRamOrCountsPolicy $r19;
        org.apache.lucene.analysis.Analyzer r1;
        org.apache.lucene.util.Version r2;
        org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain $r7;
        org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy $r15;
        org.apache.lucene.util.InfoStream $r10;
        org.apache.lucene.codecs.Codec $r8, $r9;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        r2 := @parameter1: org.apache.lucene.util.Version;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.Version matchVersion> = r2;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: double ramBufferSizeMB> = 16.0;

        $i2 = (int) -1;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDocs> = $i2;

        $i4 = (int) -1;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDeleteTerms> = $i4;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int readerTermsIndexDivisor> = 1;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriter$IndexReaderWarmer mergedSegmentWarmer> = null;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int termIndexInterval> = 32;

        $r15 = new org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy;

        specialinvoke $r15.<org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy: void <init>()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexDeletionPolicy delPolicy> = $r15;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexCommit commit> = null;

        $r4 = <org.apache.lucene.index.IndexWriterConfig$OpenMode: org.apache.lucene.index.IndexWriterConfig$OpenMode CREATE_OR_APPEND>;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriterConfig$OpenMode openMode> = $r4;

        $r5 = staticinvoke <org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity getDefaultSimilarity()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.search.similarities.Similarity similarity> = $r5;

        $r16 = new org.apache.lucene.index.ConcurrentMergeScheduler;

        specialinvoke $r16.<org.apache.lucene.index.ConcurrentMergeScheduler: void <init>()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergeScheduler mergeScheduler> = $r16;

        $l0 = <org.apache.lucene.index.IndexWriterConfig: long WRITE_LOCK_TIMEOUT>;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: long writeLockTimeout> = $l0;

        $r7 = <org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain defaultIndexingChain>;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain indexingChain> = $r7;

        $r8 = staticinvoke <org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.Codec getDefault()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.codecs.Codec codec> = $r8;

        $r9 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.codecs.Codec codec>;

        if $r9 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>()>();

        throw $r17;

     label1:
        $r10 = staticinvoke <org.apache.lucene.util.InfoStream: org.apache.lucene.util.InfoStream getDefault()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.InfoStream infoStream> = $r10;

        $r18 = new org.apache.lucene.index.TieredMergePolicy;

        specialinvoke $r18.<org.apache.lucene.index.TieredMergePolicy: void <init>()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergePolicy mergePolicy> = $r18;

        $r19 = new org.apache.lucene.index.FlushByRamOrCountsPolicy;

        specialinvoke $r19.<org.apache.lucene.index.FlushByRamOrCountsPolicy: void <init>()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.FlushPolicy flushPolicy> = $r19;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: boolean readerPooling> = 0;

        $r20 = new org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool;

        specialinvoke $r20.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: void <init>(int)>(8);

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThreadPool indexerThreadPool> = $r20;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int perThreadHardLimitMB> = 1945;

        return;
    }

    void <init>(org.apache.lucene.index.IndexWriterConfig)
    {
        org.apache.lucene.index.IndexCommit $r6;
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        long $l4;
        org.apache.lucene.index.IndexWriter$IndexReaderWarmer $r2;
        org.apache.lucene.index.MergeScheduler $r9;
        org.apache.lucene.index.IndexWriterConfig$OpenMode $r7;
        org.apache.lucene.index.MergePolicy $r13;
        org.apache.lucene.search.similarities.Similarity $r8;
        int $i0, $i1, $i2, $i3, $i5;
        org.apache.lucene.index.IndexDeletionPolicy $r5;
        double $d0;
        boolean $z0;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r14;
        org.apache.lucene.analysis.Analyzer $r4;
        org.apache.lucene.util.Version $r3;
        org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain $r10;
        org.apache.lucene.util.InfoStream $r12;
        org.apache.lucene.codecs.Codec $r11;
        org.apache.lucene.index.FlushPolicy $r15;
        org.apache.lucene.index.IndexWriterConfig r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        r1 := @parameter0: org.apache.lucene.index.IndexWriterConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: int getMaxBufferedDeleteTerms()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDeleteTerms> = $i0;

        $i1 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: int getMaxBufferedDocs()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDocs> = $i1;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexWriter$IndexReaderWarmer getMergedSegmentWarmer()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriter$IndexReaderWarmer mergedSegmentWarmer> = $r2;

        $d0 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: double getRAMBufferSizeMB()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: double ramBufferSizeMB> = $d0;

        $i2 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: int getReaderTermsIndexDivisor()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int readerTermsIndexDivisor> = $i2;

        $i3 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: int getTermIndexInterval()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int termIndexInterval> = $i3;

        $r3 = r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.util.Version matchVersion>;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.Version matchVersion> = $r3;

        $r4 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.analysis.Analyzer analyzer> = $r4;

        $r5 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexDeletionPolicy getIndexDeletionPolicy()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexDeletionPolicy delPolicy> = $r5;

        $r6 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexCommit getIndexCommit()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexCommit commit> = $r6;

        $r7 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexWriterConfig$OpenMode getOpenMode()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriterConfig$OpenMode openMode> = $r7;

        $r8 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.search.similarities.Similarity similarity> = $r8;

        $r9 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.MergeScheduler getMergeScheduler()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergeScheduler mergeScheduler> = $r9;

        $l4 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: long getWriteLockTimeout()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: long writeLockTimeout> = $l4;

        $r10 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain getIndexingChain()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain indexingChain> = $r10;

        $r11 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.codecs.Codec getCodec()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.codecs.Codec codec> = $r11;

        $r12 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.util.InfoStream getInfoStream()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.InfoStream infoStream> = $r12;

        $r13 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.MergePolicy getMergePolicy()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergePolicy mergePolicy> = $r13;

        $r14 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThreadPool getIndexerThreadPool()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThreadPool indexerThreadPool> = $r14;

        $z0 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: boolean getReaderPooling()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: boolean readerPooling> = $z0;

        $r15 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.FlushPolicy getFlushPolicy()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.FlushPolicy flushPolicy> = $r15;

        $i5 = virtualinvoke r1.<org.apache.lucene.index.IndexWriterConfig: int getRAMPerThreadHardLimitMB()>();

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int perThreadHardLimitMB> = $i5;

        return;
    }

    public org.apache.lucene.analysis.Analyzer getAnalyzer()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.analysis.Analyzer $r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.analysis.Analyzer analyzer>;

        return $r1;
    }

    public org.apache.lucene.index.LiveIndexWriterConfig setTermIndexInterval(int)
    {
        int i0;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int termIndexInterval> = i0;

        return r0;
    }

    public int getTermIndexInterval()
    {
        int $i0;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $i0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: int termIndexInterval>;

        return $i0;
    }

    public org.apache.lucene.index.LiveIndexWriterConfig setMaxBufferedDeleteTerms(int)
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        int i0, $i2;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        if i0 == $i2 goto label1;

        if i0 >= 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxBufferedDeleteTerms must at least be 1 when enabled");

        throw $r2;

     label1:
        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDeleteTerms> = i0;

        return r0;
    }

    public int getMaxBufferedDeleteTerms()
    {
        int $i0;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $i0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDeleteTerms>;

        return $i0;
    }

    public org.apache.lucene.index.LiveIndexWriterConfig setRAMBufferSizeMB(double)
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b0, $b1, $b3;
        int $i2, $i4, $i6;
        double d0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        d0 := @parameter0: double;

        $b0 = d0 cmpl -1.0;

        if $b0 == 0 goto label1;

        $b3 = d0 cmpg 0.0;

        $i4 = (int) $b3;

        if $i4 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ramBufferSize should be > 0.0 MB when enabled");

        throw $r3;

     label1:
        $b1 = d0 cmpl -1.0;

        if $b1 != 0 goto label2;

        $i2 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDocs>;

        $i6 = (int) -1;

        if $i2 != $i6 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("at least one of ramBufferSize and maxBufferedDocs must be enabled");

        throw $r4;

     label2:
        r0.<org.apache.lucene.index.LiveIndexWriterConfig: double ramBufferSizeMB> = d0;

        return r0;
    }

    public double getRAMBufferSizeMB()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        double $d0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $d0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: double ramBufferSizeMB>;

        return $d0;
    }

    public org.apache.lucene.index.LiveIndexWriterConfig setMaxBufferedDocs(int)
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b1;
        int i0, $i3, $i5;
        double $d0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        i0 := @parameter0: int;

        $i3 = (int) -1;

        if i0 == $i3 goto label1;

        if i0 >= 2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxBufferedDocs must at least be 2 when enabled");

        throw $r3;

     label1:
        $i5 = (int) -1;

        if i0 != $i5 goto label2;

        $d0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: double ramBufferSizeMB>;

        $b1 = $d0 cmpl -1.0;

        if $b1 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("at least one of ramBufferSize and maxBufferedDocs must be enabled");

        throw $r4;

     label2:
        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDocs> = i0;

        return r0;
    }

    public int getMaxBufferedDocs()
    {
        int $i0;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $i0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: int maxBufferedDocs>;

        return $i0;
    }

    public org.apache.lucene.index.LiveIndexWriterConfig setMergedSegmentWarmer(org.apache.lucene.index.IndexWriter$IndexReaderWarmer)
    {
        org.apache.lucene.index.IndexWriter$IndexReaderWarmer r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        r1 := @parameter0: org.apache.lucene.index.IndexWriter$IndexReaderWarmer;

        r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriter$IndexReaderWarmer mergedSegmentWarmer> = r1;

        return r0;
    }

    public org.apache.lucene.index.IndexWriter$IndexReaderWarmer getMergedSegmentWarmer()
    {
        org.apache.lucene.index.IndexWriter$IndexReaderWarmer $r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriter$IndexReaderWarmer mergedSegmentWarmer>;

        return $r1;
    }

    public org.apache.lucene.index.LiveIndexWriterConfig setReaderTermsIndexDivisor(int)
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        java.lang.IllegalArgumentException $r8;
        int i0, $i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.String $r6;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $i2 = (int) -1;

        if i0 == $i2 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("divisor must be >= 1, or -1 (got ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label1:
        r0.<org.apache.lucene.index.LiveIndexWriterConfig: int readerTermsIndexDivisor> = i0;

        return r0;
    }

    public int getReaderTermsIndexDivisor()
    {
        int $i0;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $i0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: int readerTermsIndexDivisor>;

        return $i0;
    }

    public org.apache.lucene.index.IndexWriterConfig$OpenMode getOpenMode()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.index.IndexWriterConfig$OpenMode $r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriterConfig$OpenMode openMode>;

        return $r1;
    }

    public org.apache.lucene.index.IndexDeletionPolicy getIndexDeletionPolicy()
    {
        org.apache.lucene.index.IndexDeletionPolicy $r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexDeletionPolicy delPolicy>;

        return $r1;
    }

    public org.apache.lucene.index.IndexCommit getIndexCommit()
    {
        org.apache.lucene.index.IndexCommit $r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexCommit commit>;

        return $r1;
    }

    public org.apache.lucene.search.similarities.Similarity getSimilarity()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.search.similarities.Similarity $r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.search.similarities.Similarity similarity>;

        return $r1;
    }

    public org.apache.lucene.index.MergeScheduler getMergeScheduler()
    {
        org.apache.lucene.index.MergeScheduler $r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergeScheduler mergeScheduler>;

        return $r1;
    }

    public long getWriteLockTimeout()
    {
        long $l0;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $l0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: long writeLockTimeout>;

        return $l0;
    }

    public org.apache.lucene.codecs.Codec getCodec()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.codecs.Codec $r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.codecs.Codec codec>;

        return $r1;
    }

    public org.apache.lucene.index.MergePolicy getMergePolicy()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.index.MergePolicy $r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergePolicy mergePolicy>;

        return $r1;
    }

    org.apache.lucene.index.DocumentsWriterPerThreadPool getIndexerThreadPool()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThreadPool indexerThreadPool>;

        return $r1;
    }

    public int getMaxThreadStates()
    {
        java.lang.IllegalStateException $r4;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool $r2;
        int $i0;
        java.lang.ClassCastException $r3;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

     label1:
        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThreadPool indexerThreadPool>;

        $r2 = (org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool) $r1;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool: int getMaxThreadStates()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean getReaderPooling()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $z0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: boolean readerPooling>;

        return $z0;
    }

    org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain getIndexingChain()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain $r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain indexingChain>;

        return $r1;
    }

    public int getRAMPerThreadHardLimitMB()
    {
        int $i0;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $i0 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: int perThreadHardLimitMB>;

        return $i0;
    }

    org.apache.lucene.index.FlushPolicy getFlushPolicy()
    {
        org.apache.lucene.index.FlushPolicy $r1;
        org.apache.lucene.index.LiveIndexWriterConfig r0;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.FlushPolicy flushPolicy>;

        return $r1;
    }

    public org.apache.lucene.util.InfoStream getInfoStream()
    {
        org.apache.lucene.index.LiveIndexWriterConfig r0;
        org.apache.lucene.util.InfoStream $r1;

        r0 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r1 = r0.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.InfoStream infoStream>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.MergePolicy $r55;
        org.apache.lucene.util.InfoStream $r50;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r27, $r29, $r30, $r31, $r33, $r34, $r38, $r39, $r41, $r42, $r43, $r44, $r45, $r46, $r48, $r49, $r53, $r54, $r56, $r57, $r59, $r60, $r61, $r62, $r63;
        org.apache.lucene.index.IndexCommit $r28;
        org.apache.lucene.index.LiveIndexWriterConfig r2;
        long $l4, $l5;
        org.apache.lucene.search.similarities.Similarity $r35;
        java.lang.String $r26, $r37, $r52, $r64, $r65;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r58;
        org.apache.lucene.analysis.Analyzer $r6, $r7;
        java.lang.Comparable $r66;
        org.apache.lucene.index.IndexWriter$IndexReaderWarmer $r17;
        org.apache.lucene.index.MergeScheduler $r40;
        org.apache.lucene.index.IndexWriterConfig$OpenMode $r32;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i6;
        org.apache.lucene.index.IndexDeletionPolicy $r24;
        double $d0;
        org.apache.lucene.util.Version $r3;
        org.apache.lucene.codecs.Codec $r47;
        java.lang.Class $r8, $r25, $r36, $r51;

        r2 := @this: org.apache.lucene.index.LiveIndexWriterConfig;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("matchVersion=");

        $r3 = r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.Version matchVersion>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("analyzer=");

        $r6 = r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.analysis.Analyzer analyzer>;

        if $r6 != null goto label1;

        $r65 = "null";

        goto label2;

     label1:
        $r7 = r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.analysis.Analyzer analyzer>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r65 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

     label2:
        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ramBufferSizeMB=");

        $d0 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxBufferedDocs=");

        $i0 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: int getMaxBufferedDocs()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxBufferedDeleteTerms=");

        $i1 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: int getMaxBufferedDeleteTerms()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mergedSegmentWarmer=");

        $r17 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriter$IndexReaderWarmer getMergedSegmentWarmer()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readerTermsIndexDivisor=");

        $i2 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: int getReaderTermsIndexDivisor()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("termIndexInterval=");

        $i3 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: int getTermIndexInterval()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delPolicy=");

        $r24 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexDeletionPolicy getIndexDeletionPolicy()>();

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r28 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexCommit getIndexCommit()>();

        $r29 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("commit=");

        if $r28 != null goto label3;

        $r66 = "null";

        goto label4;

     label3:
        $r66 = $r28;

     label4:
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("openMode=");

        $r32 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.IndexWriterConfig$OpenMode getOpenMode()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r34 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("similarity=");

        $r35 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getName()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r39 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mergeScheduler=");

        $r40 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergeScheduler getMergeScheduler()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r42 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default WRITE_LOCK_TIMEOUT=");

        $l4 = <org.apache.lucene.index.IndexWriterConfig: long WRITE_LOCK_TIMEOUT>;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r44 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeLockTimeout=");

        $l5 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: long getWriteLockTimeout()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r46 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("codec=");

        $r47 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.codecs.Codec getCodec()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r49 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("infoStream=");

        $r50 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.InfoStream getInfoStream()>();

        $r51 = virtualinvoke $r50.<java.lang.Object: java.lang.Class getClass()>();

        $r52 = virtualinvoke $r51.<java.lang.Class: java.lang.String getName()>();

        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r54 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mergePolicy=");

        $r55 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.MergePolicy getMergePolicy()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r57 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("indexerThreadPool=");

        $r58 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThreadPool getIndexerThreadPool()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r60 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readerPooling=");

        $z0 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: boolean getReaderPooling()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r62 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("perThreadHardLimitMB=");

        $i6 = virtualinvoke r2.<org.apache.lucene.index.LiveIndexWriterConfig: int getRAMPerThreadHardLimitMB()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r64 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r64;
    }
}
