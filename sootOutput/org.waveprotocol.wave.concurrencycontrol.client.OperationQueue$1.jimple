final class org.waveprotocol.wave.concurrencycontrol.client.OperationQueue$1 extends java.lang.Object implements org.waveprotocol.wave.concurrencycontrol.client.OperationQueue$Transformer
{

    void <init>()
    {
        org.waveprotocol.wave.concurrencycontrol.client.OperationQueue$1 r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.client.OperationQueue$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.concurrencycontrol.common.DeltaPair transform(java.lang.Iterable, java.lang.Iterable) throws org.waveprotocol.wave.model.operation.TransformException
    {
        org.waveprotocol.wave.concurrencycontrol.client.OperationQueue$1 r4;
        org.waveprotocol.wave.concurrencycontrol.common.DeltaPair $r0, $r3;
        java.lang.Iterable r1, r2;

        r4 := @this: org.waveprotocol.wave.concurrencycontrol.client.OperationQueue$1;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.Iterable;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.common.DeltaPair;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.common.DeltaPair: void <init>(java.lang.Iterable,java.lang.Iterable)>(r1, r2);

        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.common.DeltaPair: org.waveprotocol.wave.concurrencycontrol.common.DeltaPair transform()>();

        return $r3;
    }
}
