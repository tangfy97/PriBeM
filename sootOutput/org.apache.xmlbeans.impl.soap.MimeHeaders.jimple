public class org.apache.xmlbeans.impl.soap.MimeHeaders extends java.lang.Object
{
    protected java.util.Vector headers;

    public void <init>()
    {
        java.util.Vector $r1;
        org.apache.xmlbeans.impl.soap.MimeHeaders r0;

        r0 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers> = $r1;

        return;
    }

    public java.lang.String[] getHeader(java.lang.String)
    {
        java.lang.String[] r10;
        java.util.Vector $r0, $r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r6, r7, $r8, $r9;
        boolean $z0;
        org.apache.xmlbeans.impl.soap.MimeHeaders r1;
        org.apache.xmlbeans.impl.soap.MimeHeader r5;
        java.lang.Object $r4;

        r1 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        r7 := @parameter0: java.lang.String;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        i3 = 0;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if i3 >= $i0 goto label3;

        $r3 = r1.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        r5 = (org.apache.xmlbeans.impl.soap.MimeHeader) $r4;

        $r6 = virtualinvoke r5.<org.apache.xmlbeans.impl.soap.MimeHeader: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r5.<org.apache.xmlbeans.impl.soap.MimeHeader: java.lang.String getValue()>();

        if $r8 == null goto label2;

        $r9 = virtualinvoke r5.<org.apache.xmlbeans.impl.soap.MimeHeader: java.lang.String getValue()>();

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r9);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i1 != 0 goto label4;

        return null;

     label4:
        $i2 = virtualinvoke $r0.<java.util.Vector: int size()>();

        r10 = newarray (java.lang.String)[$i2];

        virtualinvoke $r0.<java.util.Vector: void copyInto(java.lang.Object[])>(r10);

        return r10;
    }

    public void setHeader(java.lang.String, java.lang.String)
    {
        java.util.Vector $r3, $r5, $r9, $r11;
        int $i0, $i1, i2, $i4;
        java.lang.String r0, r4, $r8, $r12;
        boolean $z0, $z1, z2, z3, z4;
        org.apache.xmlbeans.impl.soap.MimeHeaders r2;
        org.apache.xmlbeans.impl.soap.MimeHeader r7, $r14;
        java.lang.IllegalArgumentException $r13;
        java.lang.Object $r6;

        r2 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        z2 = 0;

        z4 = 0;

        z3 = 0;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal MimeHeader name");

        throw $r13;

     label2:
        i2 = 0;

     label3:
        $r3 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i2 >= $i0 goto label6;

        $r5 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r7 = (org.apache.xmlbeans.impl.soap.MimeHeader) $r6;

        $r8 = virtualinvoke r7.<org.apache.xmlbeans.impl.soap.MimeHeader: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label5;

        if z3 != 0 goto label4;

        $r11 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r14 = new org.apache.xmlbeans.impl.soap.MimeHeader;

        $r12 = virtualinvoke r7.<org.apache.xmlbeans.impl.soap.MimeHeader: java.lang.String getName()>();

        specialinvoke $r14.<org.apache.xmlbeans.impl.soap.MimeHeader: void <init>(java.lang.String,java.lang.String)>($r12, r4);

        virtualinvoke $r11.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r14, i2);

        z2 = 1;

        z4 = 1;

        z3 = 1;

        goto label5;

     label4:
        $r9 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $i1 = i2;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        virtualinvoke $r9.<java.util.Vector: void removeElementAt(int)>($i1);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        if z4 != 0 goto label7;

        virtualinvoke r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: void addHeader(java.lang.String,java.lang.String)>(r0, r4);

     label7:
        return;
    }

    public void addHeader(java.lang.String, java.lang.String)
    {
        java.util.Vector $r3, $r6, $r7, $r12;
        int $i0, $i1, i2, $i4;
        java.lang.String r0, r5, $r10;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.soap.MimeHeaders r2;
        org.apache.xmlbeans.impl.soap.MimeHeader r9, $r14, $r15;
        java.lang.IllegalArgumentException $r13;
        java.lang.Object $r8;

        r2 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal MimeHeader name");

        throw $r13;

     label2:
        $r3 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i2 = $i0 - 1;

     label3:
        if i2 < 0 goto label5;

        $r7 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r9 = (org.apache.xmlbeans.impl.soap.MimeHeader) $r8;

        $r10 = virtualinvoke r9.<org.apache.xmlbeans.impl.soap.MimeHeader: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label4;

        $r12 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r14 = new org.apache.xmlbeans.impl.soap.MimeHeader;

        specialinvoke $r14.<org.apache.xmlbeans.impl.soap.MimeHeader: void <init>(java.lang.String,java.lang.String)>(r0, r5);

        $i1 = i2 + 1;

        virtualinvoke $r12.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r14, $i1);

        return;

     label4:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label3;

     label5:
        $r6 = r2.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r15 = new org.apache.xmlbeans.impl.soap.MimeHeader;

        specialinvoke $r15.<org.apache.xmlbeans.impl.soap.MimeHeader: void <init>(java.lang.String,java.lang.String)>(r0, r5);

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r15);

        return;
    }

    public void removeHeader(java.lang.String)
    {
        org.apache.xmlbeans.impl.soap.MimeHeaders r0;
        org.apache.xmlbeans.impl.soap.MimeHeader r4;
        java.util.Vector $r1, $r2, $r7;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        r6 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i2 >= $i0 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r4 = (org.apache.xmlbeans.impl.soap.MimeHeader) $r3;

        $r5 = virtualinvoke r4.<org.apache.xmlbeans.impl.soap.MimeHeader: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $i1 = i2;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        virtualinvoke $r7.<java.util.Vector: void removeElementAt(int)>($i1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void removeAllHeaders()
    {
        java.util.Vector $r1;
        org.apache.xmlbeans.impl.soap.MimeHeaders r0;

        r0 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        $r1 = r0.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        return;
    }

    public java.util.Iterator getAllHeaders()
    {
        java.util.Vector $r1;
        java.util.Iterator $r2;
        org.apache.xmlbeans.impl.soap.MimeHeaders r0;

        r0 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        $r1 = r0.<org.apache.xmlbeans.impl.soap.MimeHeaders: java.util.Vector headers>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.Iterator getMatchingHeaders(java.lang.String[])
    {
        java.lang.String[] r2;
        org.apache.xmlbeans.impl.soap.MimeHeaders$MatchingIterator $r0;
        org.apache.xmlbeans.impl.soap.MimeHeaders r1;

        r1 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        r2 := @parameter0: java.lang.String[];

        $r0 = new org.apache.xmlbeans.impl.soap.MimeHeaders$MatchingIterator;

        specialinvoke $r0.<org.apache.xmlbeans.impl.soap.MimeHeaders$MatchingIterator: void <init>(org.apache.xmlbeans.impl.soap.MimeHeaders,java.lang.String[],boolean)>(r1, r2, 1);

        return $r0;
    }

    public java.util.Iterator getNonMatchingHeaders(java.lang.String[])
    {
        java.lang.String[] r2;
        org.apache.xmlbeans.impl.soap.MimeHeaders$MatchingIterator $r0;
        org.apache.xmlbeans.impl.soap.MimeHeaders r1;

        r1 := @this: org.apache.xmlbeans.impl.soap.MimeHeaders;

        r2 := @parameter0: java.lang.String[];

        $r0 = new org.apache.xmlbeans.impl.soap.MimeHeaders$MatchingIterator;

        specialinvoke $r0.<org.apache.xmlbeans.impl.soap.MimeHeaders$MatchingIterator: void <init>(org.apache.xmlbeans.impl.soap.MimeHeaders,java.lang.String[],boolean)>(r1, r2, 0);

        return $r0;
    }
}
