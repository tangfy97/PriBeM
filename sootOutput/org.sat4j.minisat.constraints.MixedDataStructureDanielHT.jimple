public class org.sat4j.minisat.constraints.MixedDataStructureDanielHT extends org.sat4j.minisat.constraints.AbstractDataStructureFactory
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.sat4j.minisat.constraints.MixedDataStructureDanielHT r0;

        r0 := @this: org.sat4j.minisat.constraints.MixedDataStructureDanielHT;

        specialinvoke r0.<org.sat4j.minisat.constraints.AbstractDataStructureFactory: void <init>()>();

        return;
    }

    public org.sat4j.minisat.core.Constr createCardinalityConstraint(org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.minisat.constraints.MixedDataStructureDanielHT r0;
        org.sat4j.minisat.core.UnitPropagationListener $r1;
        org.sat4j.specs.IVecInt r3;
        int i0;
        org.sat4j.minisat.core.Constr $r4;
        org.sat4j.minisat.core.ILits $r2;

        r0 := @this: org.sat4j.minisat.constraints.MixedDataStructureDanielHT;

        r3 := @parameter0: org.sat4j.specs.IVecInt;

        i0 := @parameter1: int;

        $r1 = r0.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.UnitPropagationListener solver>;

        $r2 = virtualinvoke r0.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.ILits getVocabulary()>();

        $r4 = staticinvoke <org.sat4j.minisat.constraints.card.AtLeast: org.sat4j.minisat.core.Constr atLeastNew(org.sat4j.minisat.core.UnitPropagationListener,org.sat4j.minisat.core.ILits,org.sat4j.specs.IVecInt,int)>($r1, $r2, r3, i0);

        return $r4;
    }

    public org.sat4j.minisat.core.Constr createClause(org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IVecInt r0, $r4;
        org.sat4j.minisat.constraints.MixedDataStructureDanielHT r1;
        org.sat4j.minisat.constraints.cnf.OriginalBinaryClause $r10;
        org.sat4j.minisat.core.UnitPropagationListener $r3, $r5, $r8;
        int $i0, $i1, $i2;
        org.sat4j.minisat.core.ILits $r2, $r6, $r9;
        org.sat4j.minisat.constraints.cnf.UnitClause $r11;
        org.sat4j.minisat.constraints.cnf.OriginalHTClause $r7;

        r1 := @this: org.sat4j.minisat.constraints.MixedDataStructureDanielHT;

        r0 := @parameter0: org.sat4j.specs.IVecInt;

        $r2 = virtualinvoke r1.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.ILits getVocabulary()>();

        $r3 = r1.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.UnitPropagationListener solver>;

        $r4 = staticinvoke <org.sat4j.minisat.constraints.cnf.Clauses: org.sat4j.specs.IVecInt sanityCheck(org.sat4j.specs.IVecInt,org.sat4j.minisat.core.ILits,org.sat4j.minisat.core.UnitPropagationListener)>(r0, $r2, $r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int size()>();

        if $i0 != 1 goto label2;

        $r11 = new org.sat4j.minisat.constraints.cnf.UnitClause;

        $i2 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int last()>();

        specialinvoke $r11.<org.sat4j.minisat.constraints.cnf.UnitClause: void <init>(int)>($i2);

        return $r11;

     label2:
        $i1 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int size()>();

        if $i1 != 2 goto label3;

        $r8 = r1.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.UnitPropagationListener solver>;

        $r9 = virtualinvoke r1.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.ILits getVocabulary()>();

        $r10 = staticinvoke <org.sat4j.minisat.constraints.cnf.OriginalBinaryClause: org.sat4j.minisat.constraints.cnf.OriginalBinaryClause brandNewClause(org.sat4j.minisat.core.UnitPropagationListener,org.sat4j.minisat.core.ILits,org.sat4j.specs.IVecInt)>($r8, $r9, $r4);

        return $r10;

     label3:
        $r5 = r1.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.UnitPropagationListener solver>;

        $r6 = virtualinvoke r1.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.ILits getVocabulary()>();

        $r7 = staticinvoke <org.sat4j.minisat.constraints.cnf.OriginalHTClause: org.sat4j.minisat.constraints.cnf.OriginalHTClause brandNewClause(org.sat4j.minisat.core.UnitPropagationListener,org.sat4j.minisat.core.ILits,org.sat4j.specs.IVecInt)>($r5, $r6, $r4);

        return $r7;
    }

    public org.sat4j.minisat.core.Constr createUnregisteredClause(org.sat4j.specs.IVecInt)
    {
        org.sat4j.minisat.constraints.cnf.LearntBinaryClause $r4;
        org.sat4j.specs.IVecInt r0;
        org.sat4j.minisat.constraints.MixedDataStructureDanielHT r2;
        int $i0, $i1, $i2;
        org.sat4j.minisat.constraints.cnf.LearntHTClause $r1;
        org.sat4j.minisat.core.ILits $r3, $r5;
        org.sat4j.minisat.constraints.cnf.UnitClause $r6;

        r2 := @this: org.sat4j.minisat.constraints.MixedDataStructureDanielHT;

        r0 := @parameter0: org.sat4j.specs.IVecInt;

        $i0 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        if $i0 != 1 goto label1;

        $r6 = new org.sat4j.minisat.constraints.cnf.UnitClause;

        $i2 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int last()>();

        specialinvoke $r6.<org.sat4j.minisat.constraints.cnf.UnitClause: void <init>(int)>($i2);

        return $r6;

     label1:
        $i1 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        if $i1 != 2 goto label2;

        $r4 = new org.sat4j.minisat.constraints.cnf.LearntBinaryClause;

        $r5 = virtualinvoke r2.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.ILits getVocabulary()>();

        specialinvoke $r4.<org.sat4j.minisat.constraints.cnf.LearntBinaryClause: void <init>(org.sat4j.specs.IVecInt,org.sat4j.minisat.core.ILits)>(r0, $r5);

        return $r4;

     label2:
        $r1 = new org.sat4j.minisat.constraints.cnf.LearntHTClause;

        $r3 = virtualinvoke r2.<org.sat4j.minisat.constraints.MixedDataStructureDanielHT: org.sat4j.minisat.core.ILits getVocabulary()>();

        specialinvoke $r1.<org.sat4j.minisat.constraints.cnf.LearntHTClause: void <init>(org.sat4j.specs.IVecInt,org.sat4j.minisat.core.ILits)>(r0, $r3);

        return $r1;
    }

    protected org.sat4j.minisat.core.ILits createLits()
    {
        org.sat4j.minisat.constraints.MixedDataStructureDanielHT r1;
        org.sat4j.minisat.constraints.cnf.Lits $r0;

        r1 := @this: org.sat4j.minisat.constraints.MixedDataStructureDanielHT;

        $r0 = new org.sat4j.minisat.constraints.cnf.Lits;

        specialinvoke $r0.<org.sat4j.minisat.constraints.cnf.Lits: void <init>()>();

        return $r0;
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.constraints.MixedDataStructureDanielHT: long serialVersionUID> = 1L;

        return;
    }
}
