public class com.jhlabs.image.RGBAdjustFilter extends com.jhlabs.image.PointFilter implements java.io.Serializable
{
    public float rFactor;
    public float gFactor;
    public float bFactor;

    public void <init>()
    {
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        specialinvoke r0.<com.jhlabs.image.RGBAdjustFilter: void <init>(float,float,float)>(0.0F, 0.0F, 0.0F);

        return;
    }

    public void <init>(float, float, float)
    {
        com.jhlabs.image.RGBAdjustFilter r0;
        float f0, $f1, f2, $f3, f4, $f5;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        f0 := @parameter0: float;

        f2 := @parameter1: float;

        f4 := @parameter2: float;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        $f1 = 1.0F + f0;

        r0.<com.jhlabs.image.RGBAdjustFilter: float rFactor> = $f1;

        $f3 = 1.0F + f2;

        r0.<com.jhlabs.image.RGBAdjustFilter: float gFactor> = $f3;

        $f5 = 1.0F + f4;

        r0.<com.jhlabs.image.RGBAdjustFilter: float bFactor> = $f5;

        r0.<com.jhlabs.image.PointFilter: boolean canFilterIndexColorModel> = 1;

        return;
    }

    public void setRFactor(float)
    {
        float f0, $f1;
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        f0 := @parameter0: float;

        $f1 = 1.0F + f0;

        r0.<com.jhlabs.image.RGBAdjustFilter: float rFactor> = $f1;

        return;
    }

    public float getRFactor()
    {
        float $f0, $f1;
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        $f0 = r0.<com.jhlabs.image.RGBAdjustFilter: float rFactor>;

        $f1 = $f0 - 1.0F;

        return $f1;
    }

    public void setGFactor(float)
    {
        float f0, $f1;
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        f0 := @parameter0: float;

        $f1 = 1.0F + f0;

        r0.<com.jhlabs.image.RGBAdjustFilter: float gFactor> = $f1;

        return;
    }

    public float getGFactor()
    {
        float $f0, $f1;
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        $f0 = r0.<com.jhlabs.image.RGBAdjustFilter: float gFactor>;

        $f1 = $f0 - 1.0F;

        return $f1;
    }

    public void setBFactor(float)
    {
        float f0, $f1;
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        f0 := @parameter0: float;

        $f1 = 1.0F + f0;

        r0.<com.jhlabs.image.RGBAdjustFilter: float bFactor> = $f1;

        return;
    }

    public float getBFactor()
    {
        float $f0, $f1;
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        $f0 = r0.<com.jhlabs.image.RGBAdjustFilter: float bFactor>;

        $f1 = $f0 - 1.0F;

        return $f1;
    }

    public int[] getLUT()
    {
        int[] r0;
        com.jhlabs.image.RGBAdjustFilter r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;

        r1 := @this: com.jhlabs.image.RGBAdjustFilter;

        r0 = newarray (int)[256];

        i7 = 0;

     label1:
        if i7 >= 256 goto label2;

        $i1 = i7 << 24;

        $i0 = i7 << 16;

        $i3 = $i1 | $i0;

        $i2 = i7 << 8;

        $i4 = $i3 | $i2;

        $i5 = $i4 | i7;

        $i6 = virtualinvoke r1.<com.jhlabs.image.RGBAdjustFilter: int filterRGB(int,int,int)>(0, 0, $i5);

        r0[i7] = $i6;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r0;
    }

    public int filterRGB(int, int, int)
    {
        com.jhlabs.image.RGBAdjustFilter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = i0 & -16777216;

        $i2 = i0 >> 16;

        i17 = $i2 & 255;

        $i3 = i0 >> 8;

        i18 = $i3 & 255;

        i19 = i0 & 255;

        $f1 = (float) i17;

        $f0 = r0.<com.jhlabs.image.RGBAdjustFilter: float rFactor>;

        $f2 = $f1 * $f0;

        $i4 = (int) $f2;

        $i5 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i4);

        $f4 = (float) i18;

        $f3 = r0.<com.jhlabs.image.RGBAdjustFilter: float gFactor>;

        $f5 = $f4 * $f3;

        $i6 = (int) $f5;

        $i7 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i6);

        $f7 = (float) i19;

        $f6 = r0.<com.jhlabs.image.RGBAdjustFilter: float bFactor>;

        $f8 = $f7 * $f6;

        $i8 = (int) $f8;

        $i9 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i8);

        $i10 = $i5 << 16;

        $i12 = i1 | $i10;

        $i11 = $i7 << 8;

        $i13 = $i12 | $i11;

        $i14 = $i13 | $i9;

        return $i14;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.RGBAdjustFilter r0;

        r0 := @this: com.jhlabs.image.RGBAdjustFilter;

        return "Colors/Adjust RGB...";
    }
}
