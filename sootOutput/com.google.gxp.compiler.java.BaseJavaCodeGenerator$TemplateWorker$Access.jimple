public final enum class com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access extends java.lang.Enum
{
    public static final enum com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _public;
    public static final enum com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _private;
    public static final enum com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _protected;
    private final java.lang.String s;
    private static final com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access[] $VALUES;

    public static com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access[] values()
    {
        java.lang.Object $r1;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access[] $r0, $r2;

        $r0 = <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access[]) $r1;

        return $r2;
    }

    public static com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/gxp/compiler/java/BaseJavaCodeGenerator$TemplateWorker$Access;", r0);

        $r2 = (com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: java.lang.String s> = r2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access r0;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access;

        $r1 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: java.lang.String s>;

        return $r1;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access $r0, $r1, $r2, $r4, $r5, $r6;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access[] $r3;

        $r0 = new com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access;

        specialinvoke $r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: void <init>(java.lang.String,int,java.lang.String)>("_public", 0, "public");

        <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _public> = $r0;

        $r1 = new com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access;

        specialinvoke $r1.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: void <init>(java.lang.String,int,java.lang.String)>("_private", 1, "private");

        <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _private> = $r1;

        $r2 = new com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access;

        specialinvoke $r2.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: void <init>(java.lang.String,int,java.lang.String)>("_protected", 2, "protected");

        <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _protected> = $r2;

        $r3 = newarray (com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access)[3];

        $r4 = <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _public>;

        $r3[0] = $r4;

        $r5 = <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _private>;

        $r3[1] = $r5;

        $r6 = <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access _protected>;

        $r3[2] = $r6;

        <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$Access[] $VALUES> = $r3;

        return;
    }
}
