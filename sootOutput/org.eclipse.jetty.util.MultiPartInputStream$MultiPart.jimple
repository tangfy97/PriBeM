public class org.eclipse.jetty.util.MultiPartInputStream$MultiPart extends java.lang.Object implements javax.servlet.http.Part
{
    protected java.lang.String _name;
    protected java.lang.String _filename;
    protected java.io.File _file;
    protected java.io.OutputStream _out;
    protected org.eclipse.jetty.util.ByteArrayOutputStream2 _bout;
    protected java.lang.String _contentType;
    protected org.eclipse.jetty.util.MultiMap _headers;
    protected long _size;
    protected boolean _temporary;
    final org.eclipse.jetty.util.MultiPartInputStream this$0;

    public void <init>(org.eclipse.jetty.util.MultiPartInputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.eclipse.jetty.util.MultiPartInputStream r1;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.lang.String r2, r3;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        r1 := @parameter0: org.eclipse.jetty.util.MultiPartInputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size> = 0L;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: boolean _temporary> = 1;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _name> = r2;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _filename> = r3;

        return;
    }

    protected void setContentType(java.lang.String)
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _contentType> = r1;

        return;
    }

    protected void open() throws java.io.IOException
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        int $i0;
        java.lang.String $r1, $r3, $r4;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r2;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _filename>;

        if $r1 == null goto label1;

        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _filename>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void createFile()>();

        goto label2;

     label1:
        $r2 = new org.eclipse.jetty.util.ByteArrayOutputStream2;

        specialinvoke $r2.<org.eclipse.jetty.util.ByteArrayOutputStream2: void <init>()>();

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout> = $r2;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out> = $r2;

     label2:
        return;
    }

    protected void close() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    protected void write(int) throws java.io.IOException
    {
        java.lang.IllegalStateException $r19;
        byte $b1, $b8, $b12;
        javax.servlet.MultipartConfigElement $r2, $r4, $r6, $r9;
        java.lang.StringBuilder $r12, $r14, $r15, $r18;
        org.eclipse.jetty.util.MultiPartInputStream $r1, $r3, $r5, $r8;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        long $l0, $l4, $l5, $l7, $l9, $l10, $l11, $l13, $l14;
        int $i2, i3, $i6, $i15, $i16, $i17;
        java.lang.String $r13, $r16;
        java.io.OutputStream $r17;
        java.io.File $r7;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        i3 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r2 = $r1.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l0 = virtualinvoke $r2.<javax.servlet.MultipartConfigElement: long getMaxFileSize()>();

        $b1 = $l0 cmp 0L;

        $i15 = (int) $b1;

        if $i15 <= 0 goto label1;

        $l9 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        $l10 = $l9 + 1L;

        $r8 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r9 = $r8.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l11 = virtualinvoke $r9.<javax.servlet.MultipartConfigElement: long getMaxFileSize()>();

        $b12 = $l10 cmp $l11;

        $i16 = (int) $b12;

        if $i16 <= 0 goto label1;

        $r19 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multipart Mime part ");

        $r13 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _name>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds max filesize");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r19;

     label1:
        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r4 = $r3.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $i2 = virtualinvoke $r4.<javax.servlet.MultipartConfigElement: int getFileSizeThreshold()>();

        if $i2 <= 0 goto label2;

        $l4 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        $l5 = $l4 + 1L;

        $r5 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r6 = $r5.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $i6 = virtualinvoke $r6.<javax.servlet.MultipartConfigElement: int getFileSizeThreshold()>();

        $l7 = (long) $i6;

        $b8 = $l5 cmp $l7;

        $i17 = (int) $b8;

        if $i17 <= 0 goto label2;

        $r7 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        if $r7 != null goto label2;

        virtualinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void createFile()>();

     label2:
        $r17 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out>;

        virtualinvoke $r17.<java.io.OutputStream: void write(int)>(i3);

        $l13 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        $l14 = $l13 + 1L;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size> = $l14;

        return;
    }

    protected void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r5;
        java.lang.IllegalStateException $r20;
        byte $b1, $b10, $b15;
        javax.servlet.MultipartConfigElement $r2, $r4, $r7, $r10;
        java.lang.StringBuilder $r13, $r15, $r16, $r19;
        org.eclipse.jetty.util.MultiPartInputStream $r1, $r3, $r6, $r9;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        long $l0, $l5, $l6, $l7, $l9, $l11, $l12, $l13, $l14, $l16, $l17, $l18;
        int $i2, i3, i4, $i8, $i19, $i20, $i21;
        java.lang.String $r14, $r17;
        java.io.OutputStream $r18;
        java.io.File $r8;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        r5 := @parameter0: byte[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r2 = $r1.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l0 = virtualinvoke $r2.<javax.servlet.MultipartConfigElement: long getMaxFileSize()>();

        $b1 = $l0 cmp 0L;

        $i19 = (int) $b1;

        if $i19 <= 0 goto label1;

        $l12 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        $l11 = (long) i4;

        $l13 = $l12 + $l11;

        $r9 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r10 = $r9.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l14 = virtualinvoke $r10.<javax.servlet.MultipartConfigElement: long getMaxFileSize()>();

        $b15 = $l13 cmp $l14;

        $i20 = (int) $b15;

        if $i20 <= 0 goto label1;

        $r20 = new java.lang.IllegalStateException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multipart Mime part ");

        $r14 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _name>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds max filesize");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r20;

     label1:
        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r4 = $r3.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $i2 = virtualinvoke $r4.<javax.servlet.MultipartConfigElement: int getFileSizeThreshold()>();

        if $i2 <= 0 goto label2;

        $l6 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        $l5 = (long) i4;

        $l7 = $l6 + $l5;

        $r6 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r7 = $r6.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $i8 = virtualinvoke $r7.<javax.servlet.MultipartConfigElement: int getFileSizeThreshold()>();

        $l9 = (long) $i8;

        $b10 = $l7 cmp $l9;

        $i21 = (int) $b10;

        if $i21 <= 0 goto label2;

        $r8 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        if $r8 != null goto label2;

        virtualinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void createFile()>();

     label2:
        $r18 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out>;

        virtualinvoke $r18.<java.io.OutputStream: void write(byte[],int,int)>(r5, i3, i4);

        $l16 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        $l17 = (long) i4;

        $l18 = $l16 + $l17;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size> = $l18;

        return;
    }

    protected void createFile() throws java.io.IOException
    {
        org.eclipse.jetty.util.MultiPartInputStream $r1, $r4;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        long $l0;
        java.io.BufferedOutputStream $r14;
        byte $b1;
        int $i2;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r10;
        boolean $z0;
        java.io.OutputStream $r8, $r9, $r11;
        java.io.FileOutputStream $r13;
        java.io.File $r2, $r3, $r6, $r12;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r2 = $r1.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir>;

        $r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("MultiPart", "", $r2);

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file> = $r3;

        $r4 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $z0 = $r4.<org.eclipse.jetty.util.MultiPartInputStream: boolean _deleteOnExit>;

        if $z0 == 0 goto label1;

        $r12 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        virtualinvoke $r12.<java.io.File: void deleteOnExit()>();

     label1:
        $r13 = new java.io.FileOutputStream;

        $r6 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

        $r14 = new java.io.BufferedOutputStream;

        specialinvoke $r14.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r13);

        $l0 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label2;

        $r8 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out>;

        if $r8 == null goto label2;

        $r9 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out>;

        virtualinvoke $r9.<java.io.OutputStream: void flush()>();

        $r10 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout>;

        virtualinvoke $r10.<org.eclipse.jetty.util.ByteArrayOutputStream2: void writeTo(java.io.OutputStream)>($r14);

        $r11 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out>;

        virtualinvoke $r11.<java.io.OutputStream: void close()>();

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout> = null;

     label2:
        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.OutputStream _out> = $r14;

        return;
    }

    protected void setHeaders(org.eclipse.jetty.util.MultiMap)
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        org.eclipse.jetty.util.MultiMap r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        r1 := @parameter0: org.eclipse.jetty.util.MultiMap;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiMap _headers> = r1;

        return;
    }

    public java.lang.String getContentType()
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _contentType>;

        return $r1;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r1;
        java.util.Locale $r2;
        org.eclipse.jetty.util.MultiMap $r3;
        java.lang.Object $r5;
        java.lang.String r0, $r4, $r6;

        r1 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = r1.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiMap _headers>;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r5 = virtualinvoke $r3.<org.eclipse.jetty.util.MultiMap: java.lang.Object getValue(java.lang.Object,int)>($r4, 0);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public java.util.Collection getHeaderNames()
    {
        java.util.Set $r2;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        org.eclipse.jetty.util.MultiMap $r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiMap _headers>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.util.MultiMap: java.util.Set keySet()>();

        return $r2;
    }

    public java.util.Collection getHeaders(java.lang.String)
    {
        java.util.List $r3;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        org.eclipse.jetty.util.MultiMap $r2;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiMap _headers>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.MultiMap: java.util.List getValues(java.lang.Object)>(r1);

        return $r3;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        byte[] $r4;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.io.BufferedInputStream $r6;
        java.io.FileInputStream $r7;
        java.io.File $r1, $r8;
        java.io.ByteArrayInputStream $r2;
        int $i0;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r3, $r5;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        if $r1 == null goto label1;

        $r6 = new java.io.BufferedInputStream;

        $r7 = new java.io.FileInputStream;

        $r8 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

        return $r6;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.util.ByteArrayOutputStream2: byte[] getBuf()>();

        $r5 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout>;

        $i0 = virtualinvoke $r5.<org.eclipse.jetty.util.ByteArrayOutputStream2: int size()>();

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r4, 0, $i0);

        return $r2;
    }

    public byte[] getBytes()
    {
        byte[] $r3;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r1, $r2;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.ByteArrayOutputStream2: byte[] toByteArray()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getName()
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _name>;

        return $r1;
    }

    public long getSize()
    {
        long $l0;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $l0 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: long _size>;

        return $l0;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        org.eclipse.jetty.util.MultiPartInputStream $r3, $r8;
        java.lang.Throwable $r14;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.io.BufferedOutputStream $r10, r15;
        java.lang.String r4;
        org.eclipse.jetty.util.ByteArrayOutputStream2 $r13;
        boolean $z0;
        java.io.FileOutputStream $r11;
        java.io.File $r1, $r2, $r5, $r6, $r7, $r9, $r12;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        if $r1 != null goto label8;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: boolean _temporary> = 0;

        $r7 = new java.io.File;

        $r8 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r9 = $r8.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir>;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, r4);

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file> = $r7;

        r15 = null;

     label1:
        $r10 = new java.io.BufferedOutputStream;

        $r11 = new java.io.FileOutputStream;

        $r12 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.File)>($r12);

        specialinvoke $r10.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r11);

        r15 = $r10;

        $r13 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout>;

        virtualinvoke $r13.<org.eclipse.jetty.util.ByteArrayOutputStream2: void writeTo(java.io.OutputStream)>($r10);

        virtualinvoke $r10.<java.io.BufferedOutputStream: void flush()>();

     label2:
        if $r10 == null goto label3;

        virtualinvoke $r10.<java.io.BufferedOutputStream: void close()>();

     label3:
        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout> = null;

        goto label7;

     label4:
        $r14 := @caughtexception;

     label5:
        if r15 == null goto label6;

        virtualinvoke r15.<java.io.BufferedOutputStream: void close()>();

     label6:
        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.ByteArrayOutputStream2 _bout> = null;

        throw $r14;

     label7:
        goto label9;

     label8:
        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: boolean _temporary> = 0;

        $r2 = new java.io.File;

        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: org.eclipse.jetty.util.MultiPartInputStream this$0>;

        $r5 = $r3.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r4);

        $r6 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        $z0 = virtualinvoke $r6.<java.io.File: boolean renameTo(java.io.File)>($r2);

        if $z0 == 0 goto label9;

        r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file> = $r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void delete() throws java.io.IOException
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.io.File $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    public void cleanUp() throws java.io.IOException
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.io.File $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $z0 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: boolean _temporary>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    public java.io.File getFile()
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.io.File $r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File _file>;

        return $r1;
    }

    public java.lang.String getContentDispositionFilename()
    {
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String _filename>;

        return $r1;
    }
}
