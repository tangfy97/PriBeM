public class org.apache.commons.collections.buffer.BoundedBuffer extends org.apache.commons.collections.buffer.SynchronizedBuffer implements org.apache.commons.collections.BoundedCollection
{
    private static final long serialVersionUID;
    private final int maximumSize;
    private final long timeout;

    public static org.apache.commons.collections.buffer.BoundedBuffer decorate(org.apache.commons.collections.Buffer, int)
    {
        org.apache.commons.collections.Buffer r1;
        int i0;
        org.apache.commons.collections.buffer.BoundedBuffer $r0;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        i0 := @parameter1: int;

        $r0 = new org.apache.commons.collections.buffer.BoundedBuffer;

        specialinvoke $r0.<org.apache.commons.collections.buffer.BoundedBuffer: void <init>(org.apache.commons.collections.Buffer,int,long)>(r1, i0, 0L);

        return $r0;
    }

    public static org.apache.commons.collections.buffer.BoundedBuffer decorate(org.apache.commons.collections.Buffer, int, long)
    {
        org.apache.commons.collections.Buffer r1;
        int i0;
        org.apache.commons.collections.buffer.BoundedBuffer $r0;
        long l1;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r0 = new org.apache.commons.collections.buffer.BoundedBuffer;

        specialinvoke $r0.<org.apache.commons.collections.buffer.BoundedBuffer: void <init>(org.apache.commons.collections.Buffer,int,long)>(r1, i0, l1);

        return $r0;
    }

    protected void <init>(org.apache.commons.collections.Buffer, int, long)
    {
        org.apache.commons.collections.Buffer r1;
        int i0;
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        long l1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: void <init>(org.apache.commons.collections.Buffer)>(r1);

        if i0 >= 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize> = i0;

        r0.<org.apache.commons.collections.buffer.BoundedBuffer: long timeout> = l1;

        return;
    }

    public java.lang.Object remove()
    {
        java.lang.Throwable $r5;
        org.apache.commons.collections.Buffer $r2;
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        java.lang.Object $r1, $r3, $r4;

        r0 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections.Buffer: java.lang.Object remove()>();

        $r4 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: java.lang.Object lock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.Buffer $r2;
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        java.lang.Object $r1, r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        specialinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: void timeoutWait(int)>(1);

        $r2 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections.Buffer: boolean add(java.lang.Object)>(r3);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        java.util.Collection r2;
        int $i0;
        org.apache.commons.collections.Buffer $r3;
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        specialinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: void timeoutWait(int)>($i0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $z0 = interfaceinvoke $r3.<org.apache.commons.collections.Buffer: boolean addAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.commons.collections.buffer.BoundedBuffer$NotifyingIterator $r0;
        org.apache.commons.collections.buffer.BoundedBuffer r1;

        r1 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        $r0 = new org.apache.commons.collections.buffer.BoundedBuffer$NotifyingIterator;

        $r2 = r1.<org.apache.commons.collections.buffer.BoundedBuffer: java.util.Collection collection>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        specialinvoke $r0.<org.apache.commons.collections.buffer.BoundedBuffer$NotifyingIterator: void <init>(org.apache.commons.collections.buffer.BoundedBuffer,java.util.Iterator)>(r1, $r3);

        return $r0;
    }

    private void timeoutWait(int)
    {
        org.apache.commons.collections.BufferOverflowException $r26, $r28, $r33;
        byte $b3, $b8;
        java.io.PrintWriter $r30;
        org.apache.commons.collections.BufferUnderflowException $r32;
        org.apache.commons.collections.Buffer $r1, $r3, $r5;
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        long $l2, $l4, $l5, l6, $l7, $l15, l21;
        java.lang.StringBuffer $r8, $r9, $r13, $r14, $r21, $r23, $r25, $r27, $r31;
        int i0, $i1, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i22, $i23;
        java.lang.String $r10, $r15, $r22, $r24;
        java.io.StringWriter $r29;
        java.lang.InterruptedException $r16;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize>;

        if i0 <= $i1 goto label1;

        $r26 = new org.apache.commons.collections.BufferOverflowException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Buffer size cannot exceed ");

        $i20 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i20);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.commons.collections.BufferOverflowException: void <init>(java.lang.String)>($r15);

        throw $r26;

     label1:
        $l2 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: long timeout>;

        $b3 = $l2 cmp 0L;

        $i22 = (int) $b3;

        if $i22 > 0 goto label3;

        $r5 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $i16 = interfaceinvoke $r5.<org.apache.commons.collections.Buffer: int size()>();

        $i18 = $i16 + i0;

        $i17 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize>;

        if $i18 <= $i17 goto label2;

        $r28 = new org.apache.commons.collections.BufferOverflowException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Buffer size cannot exceed ");

        $i19 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i19);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<org.apache.commons.collections.BufferOverflowException: void <init>(java.lang.String)>($r10);

        throw $r28;

     label2:
        return;

     label3:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: long timeout>;

        l6 = $l4 + $l5;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l21 = l6 - $l7;

     label4:
        $b8 = l21 cmp 0L;

        $i23 = (int) $b8;

        if $i23 <= 0 goto label8;

        $r3 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $i12 = interfaceinvoke $r3.<org.apache.commons.collections.Buffer: int size()>();

        $i14 = $i12 + i0;

        $i13 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize>;

        if $i14 <= $i13 goto label8;

     label5:
        $r4 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: java.lang.Object lock>;

        virtualinvoke $r4.<java.lang.Object: void wait(long)>(l21);

        $l15 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l21 = l6 - $l15;

     label6:
        goto label4;

     label7:
        $r16 := @caughtexception;

        $r30 = new java.io.PrintWriter;

        $r29 = new java.io.StringWriter;

        specialinvoke $r29.<java.io.StringWriter: void <init>()>();

        specialinvoke $r30.<java.io.PrintWriter: void <init>(java.io.Writer)>($r29);

        virtualinvoke $r16.<java.lang.InterruptedException: void printStackTrace(java.io.PrintWriter)>($r30);

        $r32 = new org.apache.commons.collections.BufferUnderflowException;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caused by InterruptedException: ");

        $r22 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>($r24);

        throw $r32;

     label8:
        $r1 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $i9 = interfaceinvoke $r1.<org.apache.commons.collections.Buffer: int size()>();

        $i11 = $i9 + i0;

        $i10 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize>;

        if $i11 <= $i10 goto label9;

        $r33 = new org.apache.commons.collections.BufferOverflowException;

        specialinvoke $r33.<org.apache.commons.collections.BufferOverflowException: void <init>(java.lang.String)>("Timeout expired");

        throw $r33;

     label9:
        return;

        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public boolean isFull()
    {
        int $i0, $i1;
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: int size()>();

        $i1 = virtualinvoke r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maxSize()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int maxSize()
    {
        int $i0;
        org.apache.commons.collections.buffer.BoundedBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.BoundedBuffer;

        $i0 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: int maximumSize>;

        return $i0;
    }

    static java.lang.Object access$000(org.apache.commons.collections.buffer.BoundedBuffer)
    {
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.collections.buffer.BoundedBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: java.lang.Object lock>;

        return $r1;
    }

    static java.lang.Object access$100(org.apache.commons.collections.buffer.BoundedBuffer)
    {
        org.apache.commons.collections.buffer.BoundedBuffer r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.collections.buffer.BoundedBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.BoundedBuffer: java.lang.Object lock>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.buffer.BoundedBuffer: long serialVersionUID> = 1536432911093974264L;

        return;
    }
}
