class ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder extends ucar.nc2.dataset.transform.AbstractCoordTransBuilder
{
    final ucar.nc2.dataset.conv.CSMConvention this$0;

    private void <init>(ucar.nc2.dataset.conv.CSMConvention)
    {
        ucar.nc2.dataset.conv.CSMConvention r1;
        ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder r0;

        r0 := @this: ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder;

        r1 := @parameter0: ucar.nc2.dataset.conv.CSMConvention;

        r0.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: ucar.nc2.dataset.conv.CSMConvention this$0> = r1;

        specialinvoke r0.<ucar.nc2.dataset.transform.AbstractCoordTransBuilder: void <init>()>();

        return;
    }

    public java.lang.String getTransformName()
    {
        ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder r0;

        r0 := @this: ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder;

        return "csm_hybrid_sigma_pressure";
    }

    public ucar.nc2.dataset.TransformType getTransformType()
    {
        ucar.nc2.dataset.TransformType $r0;
        ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder r1;

        r1 := @this: ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder;

        $r0 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Vertical>;

        return $r0;
    }

    public ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        java.lang.Object[] $r14;
        java.util.Formatter $r13;
        ucar.nc2.dataset.VerticalCT $r0;
        ucar.nc2.dataset.conv.CSMConvention $r8, $r9, $r10, $r11, $r12;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r4, $r15;
        boolean $z0, $z1, $z2, $z3;
        ucar.unidata.util.Parameter $r6;
        ucar.nc2.dataset.VerticalCT$Type $r5;
        ucar.nc2.dataset.NetcdfDataset r7;
        ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder r3;

        r3 := @this: ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder;

        r7 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        $r0 = new ucar.nc2.dataset.VerticalCT;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r4 = virtualinvoke r3.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: java.lang.String getTransformName()>();

        $r5 = <ucar.nc2.dataset.VerticalCT$Type: ucar.nc2.dataset.VerticalCT$Type HybridSigmaPressure>;

        specialinvoke $r0.<ucar.nc2.dataset.VerticalCT: void <init>(java.lang.String,java.lang.String,ucar.nc2.dataset.VerticalCT$Type,ucar.nc2.dataset.CoordTransBuilderIF)>($r2, $r4, $r5, r3);

        $r6 = new ucar.unidata.util.Parameter;

        specialinvoke $r6.<ucar.unidata.util.Parameter: void <init>(java.lang.String,java.lang.String)>("formula", "pressure(x,y,z) = a(z)*p0 + b(z)*surfacePressure(x,y)");

        virtualinvoke $r0.<ucar.nc2.dataset.CoordinateTransform: void addParameter(ucar.unidata.util.Parameter)>($r6);

        $r8 = r3.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $z0 = virtualinvoke $r8.<ucar.nc2.dataset.conv.CSMConvention: boolean addParameter2(ucar.nc2.dataset.CoordinateTransform,java.lang.String,ucar.nc2.NetcdfFile,ucar.nc2.Variable,java.lang.String,boolean)>($r0, "SurfacePressure_variableName", r7, r1, "PS_var", 0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r9 = r3.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $z1 = virtualinvoke $r9.<ucar.nc2.dataset.conv.CSMConvention: boolean addParameter2(ucar.nc2.dataset.CoordinateTransform,java.lang.String,ucar.nc2.NetcdfFile,ucar.nc2.Variable,java.lang.String,boolean)>($r0, "A_variableName", r7, r1, "A_var", 0);

        if $z1 != 0 goto label2;

        return null;

     label2:
        $r10 = r3.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $z2 = virtualinvoke $r10.<ucar.nc2.dataset.conv.CSMConvention: boolean addParameter2(ucar.nc2.dataset.CoordinateTransform,java.lang.String,ucar.nc2.NetcdfFile,ucar.nc2.Variable,java.lang.String,boolean)>($r0, "B_variableName", r7, r1, "B_var", 0);

        if $z2 != 0 goto label3;

        return null;

     label3:
        $r11 = r3.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $z3 = virtualinvoke $r11.<ucar.nc2.dataset.conv.CSMConvention: boolean addParameter2(ucar.nc2.dataset.CoordinateTransform,java.lang.String,ucar.nc2.NetcdfFile,ucar.nc2.Variable,java.lang.String,boolean)>($r0, "P0_variableName", r7, r1, "P0_var", 0);

        if $z3 != 0 goto label4;

        return null;

     label4:
        $r12 = r3.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: ucar.nc2.dataset.conv.CSMConvention this$0>;

        $r13 = staticinvoke <ucar.nc2.dataset.conv.CSMConvention: java.util.Formatter access$200(ucar.nc2.dataset.conv.CSMConvention)>($r12);

        $r14 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r14[0] = $r15;

        virtualinvoke $r13.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CSMConvention made SigmaPressureCT %s\n", $r14);

        return $r0;
    }

    public ucar.unidata.geoloc.vertical.VerticalTransform makeMathTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Dimension, ucar.nc2.dataset.VerticalCT)
    {
        java.util.List $r4;
        ucar.nc2.dataset.VerticalCT r3;
        ucar.nc2.Dimension r2;
        ucar.unidata.geoloc.vertical.HybridSigmaPressure $r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder r5;

        r5 := @this: ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Dimension;

        r3 := @parameter2: ucar.nc2.dataset.VerticalCT;

        $r0 = new ucar.unidata.geoloc.vertical.HybridSigmaPressure;

        $r4 = virtualinvoke r3.<ucar.nc2.dataset.VerticalCT: java.util.List getParameters()>();

        specialinvoke $r0.<ucar.unidata.geoloc.vertical.HybridSigmaPressure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Dimension,java.util.List)>(r1, r2, $r4);

        return $r0;
    }

    void <init>(ucar.nc2.dataset.conv.CSMConvention, ucar.nc2.dataset.conv.CSMConvention$1)
    {
        ucar.nc2.dataset.conv.CSMConvention$1 r2;
        ucar.nc2.dataset.conv.CSMConvention r1;
        ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder r0;

        r0 := @this: ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder;

        r1 := @parameter0: ucar.nc2.dataset.conv.CSMConvention;

        r2 := @parameter1: ucar.nc2.dataset.conv.CSMConvention$1;

        specialinvoke r0.<ucar.nc2.dataset.conv.CSMConvention$HybridSigmaPressureBuilder: void <init>(ucar.nc2.dataset.conv.CSMConvention)>(r1);

        return;
    }
}
