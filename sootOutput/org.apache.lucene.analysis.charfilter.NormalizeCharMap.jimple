public class org.apache.lucene.analysis.charfilter.NormalizeCharMap extends java.lang.Object
{
    final org.apache.lucene.util.fst.FST map;
    final java.util.Map cachedRootArcs;
    static final boolean $assertionsDisabled;

    private void <init>(org.apache.lucene.util.fst.FST)
    {
        org.apache.lucene.util.fst.FST$BytesReader $r4;
        long $l0;
        java.util.HashMap $r12;
        java.lang.AssertionError $r14;
        org.apache.lucene.util.fst.FST$Arc $r8, $r13, $r15;
        java.lang.Character $r6;
        java.util.Map $r5;
        int $i1, $i3, $i5;
        boolean $z0, $z1, $z2;
        char $c2;
        java.io.IOException $r10;
        java.lang.RuntimeException $r16;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap r0;
        org.apache.lucene.util.fst.FST r2;

        r0 := @this: org.apache.lucene.analysis.charfilter.NormalizeCharMap;

        r2 := @parameter0: org.apache.lucene.util.fst.FST;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.analysis.charfilter.NormalizeCharMap: java.util.Map cachedRootArcs> = $r12;

        r0.<org.apache.lucene.analysis.charfilter.NormalizeCharMap: org.apache.lucene.util.fst.FST map> = r2;

        if r2 == null goto label7;

     label1:
        $r13 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r13.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r4 = virtualinvoke r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        virtualinvoke r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r13);

        $z0 = staticinvoke <org.apache.lucene.util.fst.FST: boolean targetHasArcs(org.apache.lucene.util.fst.FST$Arc)>($r13);

        if $z0 == 0 goto label5;

        $l0 = $r13.<org.apache.lucene.util.fst.FST$Arc: long target>;

        virtualinvoke r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstRealTargetArc(long,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($l0, $r13, $r4);

     label2:
        $z1 = <org.apache.lucene.analysis.charfilter.NormalizeCharMap: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i3 = $r13.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i5 = (int) -1;

        if $i3 != $i5 goto label3;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label3:
        $r5 = r0.<org.apache.lucene.analysis.charfilter.NormalizeCharMap: java.util.Map cachedRootArcs>;

        $i1 = $r13.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $c2 = (char) $i1;

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r15 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r15.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r8 = virtualinvoke $r15.<org.apache.lucene.util.fst.FST$Arc: org.apache.lucene.util.fst.FST$Arc copyFrom(org.apache.lucene.util.fst.FST$Arc)>($r13);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        $z2 = virtualinvoke $r13.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        virtualinvoke r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextRealArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r13, $r4);

        goto label2;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r16;

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    void <init>(org.apache.lucene.util.fst.FST, org.apache.lucene.analysis.charfilter.NormalizeCharMap$1)
    {
        org.apache.lucene.util.fst.FST r1;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap$1 r2;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap r0;

        r0 := @this: org.apache.lucene.analysis.charfilter.NormalizeCharMap;

        r1 := @parameter0: org.apache.lucene.util.fst.FST;

        r2 := @parameter1: org.apache.lucene.analysis.charfilter.NormalizeCharMap$1;

        specialinvoke r0.<org.apache.lucene.analysis.charfilter.NormalizeCharMap: void <init>(org.apache.lucene.util.fst.FST)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/analysis/charfilter/NormalizeCharMap;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.charfilter.NormalizeCharMap: boolean $assertionsDisabled> = $z1;

        return;
    }
}
