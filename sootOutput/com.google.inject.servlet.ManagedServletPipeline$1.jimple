class com.google.inject.servlet.ManagedServletPipeline$1 extends java.lang.Object implements javax.servlet.RequestDispatcher
{
    final java.lang.String val$newRequestUri;
    final com.google.inject.servlet.ServletDefinition val$servletDefinition;
    final com.google.inject.servlet.ManagedServletPipeline this$0;

    void <init>(com.google.inject.servlet.ManagedServletPipeline, java.lang.String, com.google.inject.servlet.ServletDefinition)
    {
        com.google.inject.servlet.ManagedServletPipeline$1 r0;
        com.google.inject.servlet.ManagedServletPipeline r1;
        com.google.inject.servlet.ServletDefinition r3;
        java.lang.String r2;

        r0 := @this: com.google.inject.servlet.ManagedServletPipeline$1;

        r1 := @parameter0: com.google.inject.servlet.ManagedServletPipeline;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.inject.servlet.ServletDefinition;

        r0.<com.google.inject.servlet.ManagedServletPipeline$1: com.google.inject.servlet.ManagedServletPipeline this$0> = r1;

        r0.<com.google.inject.servlet.ManagedServletPipeline$1: java.lang.String val$newRequestUri> = r2;

        r0.<com.google.inject.servlet.ManagedServletPipeline$1: com.google.inject.servlet.ServletDefinition val$servletDefinition> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.lang.Throwable $r7;
        javax.servlet.ServletRequest r1, r8;
        com.google.inject.servlet.ManagedServletPipeline$1 r3;
        com.google.inject.servlet.ServletDefinition $r4;
        com.google.inject.servlet.ManagedServletPipeline$RequestDispatcherRequestWrapper $r5;
        javax.servlet.ServletResponse r0;
        java.lang.Boolean $r2;
        java.lang.String $r6;
        boolean $z0, $z1, $z2;

        r3 := @this: com.google.inject.servlet.ManagedServletPipeline$1;

        r1 := @parameter0: javax.servlet.ServletRequest;

        r0 := @parameter1: javax.servlet.ServletResponse;

        $z0 = interfaceinvoke r0.<javax.servlet.ServletResponse: boolean isCommitted()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>($z2, "Response has been committed--you can only call forward before committing the response (hint: don\'t flush buffers)");

        interfaceinvoke r0.<javax.servlet.ServletResponse: void resetBuffer()>();

        $z1 = r1 instanceof javax.servlet.http.HttpServletRequest;

        if $z1 == 0 goto label3;

        $r5 = new com.google.inject.servlet.ManagedServletPipeline$RequestDispatcherRequestWrapper;

        $r6 = r3.<com.google.inject.servlet.ManagedServletPipeline$1: java.lang.String val$newRequestUri>;

        specialinvoke $r5.<com.google.inject.servlet.ManagedServletPipeline$RequestDispatcherRequestWrapper: void <init>(javax.servlet.ServletRequest,java.lang.String)>(r1, $r6);

        r8 = $r5;

        goto label4;

     label3:
        r8 = r1;

     label4:
        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r1.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.forward.servlet_path", $r2);

     label5:
        $r4 = r3.<com.google.inject.servlet.ManagedServletPipeline$1: com.google.inject.servlet.ServletDefinition val$servletDefinition>;

        virtualinvoke $r4.<com.google.inject.servlet.ServletDefinition: void doService(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r8, r0);

     label6:
        interfaceinvoke r1.<javax.servlet.ServletRequest: void removeAttribute(java.lang.String)>("javax.servlet.forward.servlet_path");

        goto label9;

     label7:
        $r7 := @caughtexception;

     label8:
        interfaceinvoke r1.<javax.servlet.ServletRequest: void removeAttribute(java.lang.String)>("javax.servlet.forward.servlet_path");

        throw $r7;

     label9:
        return;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void include(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.lang.Throwable $r5;
        javax.servlet.ServletRequest r0;
        javax.servlet.ServletResponse r3;
        com.google.inject.servlet.ManagedServletPipeline$1 r2;
        com.google.inject.servlet.ServletDefinition $r4;
        java.lang.Boolean $r1;

        r2 := @this: com.google.inject.servlet.ManagedServletPipeline$1;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r3 := @parameter1: javax.servlet.ServletResponse;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.forward.servlet_path", $r1);

     label1:
        $r4 = r2.<com.google.inject.servlet.ManagedServletPipeline$1: com.google.inject.servlet.ServletDefinition val$servletDefinition>;

        virtualinvoke $r4.<com.google.inject.servlet.ServletDefinition: void doService(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r3);

     label2:
        interfaceinvoke r0.<javax.servlet.ServletRequest: void removeAttribute(java.lang.String)>("javax.servlet.forward.servlet_path");

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        interfaceinvoke r0.<javax.servlet.ServletRequest: void removeAttribute(java.lang.String)>("javax.servlet.forward.servlet_path");

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
