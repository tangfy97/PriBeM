public class groovy.text.RegexUtils extends java.lang.Object
{
    private static final java.lang.String BS;
    private static final java.lang.String E;
    private static final java.lang.String Q;
    private static final int NO_MATCH;

    public void <init>()
    {
        groovy.text.RegexUtils r0;

        r0 := @this: groovy.text.RegexUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String quote(java.lang.String)
    {
        java.util.regex.Matcher $r3, $r7;
        java.lang.StringBuffer $r0, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r2, $r4, $r5, $r6, $r8, $r13, r14;
        java.util.regex.Pattern $r1;

        r14 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r14.<java.lang.String: int indexOf(java.lang.String)>("\\E");

        if $i0 >= 0 goto label2;

        $i4 = virtualinvoke r14.<java.lang.String: int indexOf(java.lang.String)>("\\");

        if $i4 < 0 goto label1;

        r14 = virtualinvoke r14.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "\\\\E\\\\\\\\\\\\Q");

     label1:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\Q");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\E");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label2:
        $i1 = virtualinvoke r14.<java.lang.String: int length()>();

        $r0 = new java.lang.StringBuffer;

        $i2 = $i1 * 2;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\\\");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\Q");

        i5 = 0;

     label3:
        $i3 = virtualinvoke r14.<java.lang.String: int indexOf(java.lang.String,int)>("\\E", i5);

        if $i3 < 0 goto label4;

        $r6 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(i5, $i3);

        $r7 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r6);

        $r8 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("\\\\E\\\\\\\\\\\\Q");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\E\\\\E\\Q");

        i5 = $i3 + 2;

        goto label3;

     label4:
        $r2 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(i5, $i1);

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("\\\\E\\\\\\\\\\\\Q");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String quoteReplacement(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(36);

        if $i0 >= 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(92);

        if $i1 >= 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[$\\\\]", "\\\\$0");

        return $r1;
    }

    public static void <clinit>()
    {
        <groovy.text.RegexUtils: int NO_MATCH> = -1;

        <groovy.text.RegexUtils: java.lang.String Q> = "\\Q";

        <groovy.text.RegexUtils: java.lang.String E> = "\\E";

        <groovy.text.RegexUtils: java.lang.String BS> = "\\";

        return;
    }
}
