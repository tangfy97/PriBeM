class org.eclipse.jetty.server.handler.RequestLogHandler$1 extends java.lang.Object implements org.eclipse.jetty.continuation.ContinuationListener
{
    final org.eclipse.jetty.server.Request val$baseRequest;
    final javax.servlet.http.HttpServletResponse val$response;
    final org.eclipse.jetty.server.handler.RequestLogHandler this$0;

    void <init>(org.eclipse.jetty.server.handler.RequestLogHandler, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)
    {
        org.eclipse.jetty.server.Request r2;
        org.eclipse.jetty.server.handler.RequestLogHandler r1;
        javax.servlet.http.HttpServletResponse r3;
        org.eclipse.jetty.server.handler.RequestLogHandler$1 r0;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler$1;

        r1 := @parameter0: org.eclipse.jetty.server.handler.RequestLogHandler;

        r2 := @parameter1: org.eclipse.jetty.server.Request;

        r3 := @parameter2: javax.servlet.http.HttpServletResponse;

        r0.<org.eclipse.jetty.server.handler.RequestLogHandler$1: org.eclipse.jetty.server.handler.RequestLogHandler this$0> = r1;

        r0.<org.eclipse.jetty.server.handler.RequestLogHandler$1: org.eclipse.jetty.server.Request val$baseRequest> = r2;

        r0.<org.eclipse.jetty.server.handler.RequestLogHandler$1: javax.servlet.http.HttpServletResponse val$response> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onTimeout(org.eclipse.jetty.continuation.Continuation)
    {
        org.eclipse.jetty.continuation.Continuation r1;
        org.eclipse.jetty.server.handler.RequestLogHandler$1 r0;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler$1;

        r1 := @parameter0: org.eclipse.jetty.continuation.Continuation;

        return;
    }

    public void onComplete(org.eclipse.jetty.continuation.Continuation)
    {
        org.eclipse.jetty.server.Response $r4;
        org.eclipse.jetty.server.Request $r5;
        org.eclipse.jetty.server.handler.RequestLogHandler $r1;
        org.eclipse.jetty.continuation.Continuation r6;
        org.eclipse.jetty.server.RequestLog $r2;
        javax.servlet.http.HttpServletResponse $r3;
        org.eclipse.jetty.server.handler.RequestLogHandler$1 r0;

        r0 := @this: org.eclipse.jetty.server.handler.RequestLogHandler$1;

        r6 := @parameter0: org.eclipse.jetty.continuation.Continuation;

        $r1 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler$1: org.eclipse.jetty.server.handler.RequestLogHandler this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.server.handler.RequestLogHandler: org.eclipse.jetty.server.RequestLog access$000(org.eclipse.jetty.server.handler.RequestLogHandler)>($r1);

        $r5 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler$1: org.eclipse.jetty.server.Request val$baseRequest>;

        $r3 = r0.<org.eclipse.jetty.server.handler.RequestLogHandler$1: javax.servlet.http.HttpServletResponse val$response>;

        $r4 = (org.eclipse.jetty.server.Response) $r3;

        interfaceinvoke $r2.<org.eclipse.jetty.server.RequestLog: void log(org.eclipse.jetty.server.Request,org.eclipse.jetty.server.Response)>($r5, $r4);

        return;
    }
}
