public class com.mycila.inject.internal.cglib.util.StringSwitcher$Generator extends com.mycila.inject.internal.cglib.core.AbstractClassGenerator
{
    private static final com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE;
    private java.lang.String[] strings;
    private int[] ints;
    private boolean fixedInput;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r1;
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r0;

        r0 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        $r1 = <com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE>;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: void <init>(com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source)>($r1);

        return;
    }

    public void setStrings(java.lang.String[])
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r0;
        java.lang.String[] r1;

        r0 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        r1 := @parameter0: java.lang.String[];

        r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: java.lang.String[] strings> = r1;

        return;
    }

    public void setInts(int[])
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r0;
        int[] r1;

        r0 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        r1 := @parameter0: int[];

        r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: int[] ints> = r1;

        return;
    }

    public void setFixedInput(boolean)
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r0;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        z0 := @parameter0: boolean;

        r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: boolean fixedInput> = z0;

        return;
    }

    protected java.lang.ClassLoader getDefaultClassLoader()
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;

        r0 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public com.mycila.inject.internal.cglib.util.StringSwitcher create()
    {
        java.lang.String[] $r5;
        int[] $r4;
        com.mycila.inject.internal.cglib.util.StringSwitcher $r8;
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r0;
        java.lang.Class $r1, $r9;
        java.lang.Object $r6, $r7;
        java.lang.String $r2;
        com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        $r1 = <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher>;

        if $r1 != null goto label1;

        $r9 = staticinvoke <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.util.StringSwitcher");

        <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher> = $r9;

        goto label2;

     label1:
        $r9 = <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher>;

     label2:
        $r2 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: void setNamePrefix(java.lang.String)>($r2);

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey access$000()>();

        $r5 = r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: java.lang.String[] strings>;

        $r4 = r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: int[] ints>;

        $z0 = r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: boolean fixedInput>;

        $r6 = interfaceinvoke $r3.<com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey: java.lang.Object newInstance(java.lang.String[],int[],boolean)>($r5, $r4, $z0);

        $r7 = specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>($r6);

        $r8 = (com.mycila.inject.internal.cglib.util.StringSwitcher) $r7;

        return $r8;
    }

    public void generateClass(com.mycila.inject.internal.asm.ClassVisitor) throws java.lang.Exception
    {
        com.mycila.inject.internal.cglib.core.Signature $r5;
        com.mycila.inject.internal.asm.Type $r4;
        java.lang.String[] $r7, $r10;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r6;
        com.mycila.inject.internal.cglib.core.ClassEmitter $r0;
        java.util.List $r8;
        byte $b0;
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator$1 $r9;
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r2;
        java.lang.String $r3;
        com.mycila.inject.internal.asm.ClassVisitor r1;
        boolean $z0;

        r2 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        r1 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        $r0 = new com.mycila.inject.internal.cglib.core.ClassEmitter;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.ClassEmitter: void <init>(com.mycila.inject.internal.asm.ClassVisitor)>(r1);

        $r3 = virtualinvoke r2.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: java.lang.String getClassName()>();

        $r4 = staticinvoke <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.asm.Type access$100()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.core.ClassEmitter: void begin_class(int,int,java.lang.String,com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.asm.Type[],java.lang.String)>(46, 1, $r3, $r4, null, "<generated>");

        staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: void null_constructor(com.mycila.inject.internal.cglib.core.ClassEmitter)>($r0);

        $r5 = staticinvoke <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.cglib.core.Signature access$200()>();

        $r6 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.core.ClassEmitter: com.mycila.inject.internal.cglib.core.CodeEmitter begin_method(int,com.mycila.inject.internal.cglib.core.Signature,com.mycila.inject.internal.asm.Type[])>(1, $r5, null);

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_arg(int)>(0);

        $r7 = r2.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: java.lang.String[] strings>;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        $z0 = r2.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: boolean fixedInput>;

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        $r10 = r2.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: java.lang.String[] strings>;

        $r9 = new com.mycila.inject.internal.cglib.util.StringSwitcher$Generator$1;

        specialinvoke $r9.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator$1: void <init>(com.mycila.inject.internal.cglib.util.StringSwitcher$Generator,com.mycila.inject.internal.cglib.core.CodeEmitter,java.util.List)>(r2, $r6, $r8);

        staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: void string_switch(com.mycila.inject.internal.cglib.core.CodeEmitter,java.lang.String[],int,com.mycila.inject.internal.cglib.core.ObjectSwitchCallback)>($r6, $r10, $b0, $r9);

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void end_method()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.core.ClassEmitter: void end_class()>();

        return;
    }

    protected java.lang.Object firstInstance(java.lang.Class)
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher $r2;
        java.lang.Class r0;
        java.lang.Object $r1;
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r3;

        r3 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.Object newInstance(java.lang.Class)>(r0);

        $r2 = (com.mycila.inject.internal.cglib.util.StringSwitcher) $r1;

        return $r2;
    }

    protected java.lang.Object nextInstance(java.lang.Object)
    {
        java.lang.Object r0;
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r1;

        r1 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    static int[] access$300(com.mycila.inject.internal.cglib.util.StringSwitcher$Generator)
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator r0;
        int[] $r1;

        r0 := @parameter0: com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        $r1 = r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: int[] ints>;

        return $r1;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2;

        $r0 = new com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source;

        $r1 = <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.util.StringSwitcher");

        <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher> = $r3;

        goto label2;

     label1:
        $r3 = <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source: void <init>(java.lang.String)>($r2);

        <com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE> = $r0;

        return;
    }
}
