public abstract class org.apache.batik.svggen.font.table.CmapFormat extends java.lang.Object
{
    protected int format;
    protected int length;
    protected int version;

    protected void <init>(java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        int $i0, $i1;
        org.apache.batik.svggen.font.table.CmapFormat r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat;

        r1 := @parameter0: java.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapFormat: int length> = $i0;

        $i1 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapFormat: int version> = $i1;

        return;
    }

    protected static org.apache.batik.svggen.font.table.CmapFormat create(int, java.io.RandomAccessFile) throws java.io.IOException
    {
        org.apache.batik.svggen.font.table.CmapFormat0 $r4;
        java.io.RandomAccessFile r1;
        int i0;
        org.apache.batik.svggen.font.table.CmapFormat6 $r0;
        org.apache.batik.svggen.font.table.CmapFormat4 $r2;
        org.apache.batik.svggen.font.table.CmapFormat2 $r3;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.RandomAccessFile;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label5;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        $r4 = new org.apache.batik.svggen.font.table.CmapFormat0;

        specialinvoke $r4.<org.apache.batik.svggen.font.table.CmapFormat0: void <init>(java.io.RandomAccessFile)>(r1);

        return $r4;

     label2:
        $r3 = new org.apache.batik.svggen.font.table.CmapFormat2;

        specialinvoke $r3.<org.apache.batik.svggen.font.table.CmapFormat2: void <init>(java.io.RandomAccessFile)>(r1);

        return $r3;

     label3:
        $r2 = new org.apache.batik.svggen.font.table.CmapFormat4;

        specialinvoke $r2.<org.apache.batik.svggen.font.table.CmapFormat4: void <init>(java.io.RandomAccessFile)>(r1);

        return $r2;

     label4:
        $r0 = new org.apache.batik.svggen.font.table.CmapFormat6;

        specialinvoke $r0.<org.apache.batik.svggen.font.table.CmapFormat6: void <init>(java.io.RandomAccessFile)>(r1);

        return $r0;

     label5:
        return null;
    }

    public int getFormat()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapFormat r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapFormat: int format>;

        return $i0;
    }

    public int getLength()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapFormat r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapFormat: int length>;

        return $i0;
    }

    public int getVersion()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapFormat r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapFormat: int version>;

        return $i0;
    }

    public abstract int mapCharCode(int);

    public abstract int getFirst();

    public abstract int getLast();

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;
        org.apache.batik.svggen.font.table.CmapFormat r2;
        java.lang.String $r8;

        r2 := @this: org.apache.batik.svggen.font.table.CmapFormat;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("format: ");

        $i0 = r2.<org.apache.batik.svggen.font.table.CmapFormat: int format>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", length: ");

        $i1 = r2.<org.apache.batik.svggen.font.table.CmapFormat: int length>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", version: ");

        $i2 = r2.<org.apache.batik.svggen.font.table.CmapFormat: int version>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }
}
