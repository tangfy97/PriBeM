public final class org.apache.poi.hwpf.model.PicturesTable extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger logger;
    static final int TYPE_IMAGE;
    static final int TYPE_IMAGE_WORD2000;
    static final int TYPE_IMAGE_PASTED_FROM_CLIPBOARD;
    static final int TYPE_IMAGE_PASTED_FROM_CLIPBOARD_WORD2000;
    static final int TYPE_HORIZONTAL_LINE;
    static final int BLOCK_TYPE_OFFSET;
    static final int MM_MODE_TYPE_OFFSET;
    private org.apache.poi.hwpf.HWPFDocument _document;
    private byte[] _dataStream;
    private byte[] _mainStream;
    private org.apache.poi.hwpf.model.FSPATable _fspa;
    private org.apache.poi.hwpf.model.EscherRecordHolder _dgg;

    public void <init>(org.apache.poi.hwpf.HWPFDocument, byte[], byte[], org.apache.poi.hwpf.model.FSPATable, org.apache.poi.hwpf.model.EscherRecordHolder)
    {
        byte[] r2, r3;
        org.apache.poi.hwpf.model.EscherRecordHolder r5;
        org.apache.poi.hwpf.HWPFDocument r1;
        org.apache.poi.hwpf.model.PicturesTable r0;
        org.apache.poi.hwpf.model.FSPATable r4;

        r0 := @this: org.apache.poi.hwpf.model.PicturesTable;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        r4 := @parameter3: org.apache.poi.hwpf.model.FSPATable;

        r5 := @parameter4: org.apache.poi.hwpf.model.EscherRecordHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.HWPFDocument _document> = r1;

        r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _dataStream> = r2;

        r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _mainStream> = r3;

        r0.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.model.FSPATable _fspa> = r4;

        r0.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.model.EscherRecordHolder _dgg> = r5;

        return;
    }

    public void <init>(org.apache.poi.hwpf.HWPFDocument, byte[], byte[])
    {
        byte[] r2, r3;
        org.apache.poi.hwpf.HWPFDocument r1;
        org.apache.poi.hwpf.model.PicturesTable r0;

        r0 := @this: org.apache.poi.hwpf.model.PicturesTable;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.HWPFDocument _document> = r1;

        r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _dataStream> = r2;

        r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _mainStream> = r3;

        return;
    }

    public boolean hasPicture(org.apache.poi.hwpf.usermodel.CharacterRun)
    {
        org.apache.poi.hwpf.model.PicturesTable r3;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i0;
        java.lang.String $r1, $r2, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r3 := @this: org.apache.poi.hwpf.model.PicturesTable;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSpecialCharacter()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isObj()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isOle2()>();

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isData()>();

        if $z3 != 0 goto label3;

        $r1 = "\u0001";

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z4 != 0 goto label2;

        $r4 = "\u0001\u0015";

        $r5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $z6 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z6 == 0 goto label3;

     label2:
        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        $z5 = specialinvoke r3.<org.apache.poi.hwpf.model.PicturesTable: boolean isBlockContainsImage(int)>($i0);

        return $z5;

     label3:
        return 0;
    }

    public boolean hasEscherPicture(org.apache.poi.hwpf.usermodel.CharacterRun)
    {
        org.apache.poi.hwpf.model.PicturesTable r2;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: org.apache.poi.hwpf.model.PicturesTable;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSpecialCharacter()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isObj()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isOle2()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isData()>();

        if $z3 != 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $z4 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("\u0008");

        if $z4 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasHorizontalLine(org.apache.poi.hwpf.usermodel.CharacterRun)
    {
        org.apache.poi.hwpf.model.PicturesTable r3;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.poi.hwpf.model.PicturesTable;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSpecialCharacter()>();

        if $z0 == 0 goto label1;

        $r1 = "\u0001";

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        $z2 = specialinvoke r3.<org.apache.poi.hwpf.model.PicturesTable: boolean isBlockContainsHorizontalLine(int)>($i0);

        return $z2;

     label1:
        return 0;
    }

    private boolean isPictureRecognized(short, short)
    {
        org.apache.poi.hwpf.model.PicturesTable r0;
        short s0, s1;
        int $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.PicturesTable;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $i2 = (int) s0;

        if $i2 == 8 goto label2;

        $i3 = (int) s0;

        if $i3 == 10 goto label2;

        if s0 != 0 goto label1;

        $i4 = (int) s1;

        if $i4 == 100 goto label2;

     label1:
        $i5 = (int) s0;

        if $i5 != 2 goto label3;

        $i6 = (int) s1;

        if $i6 != 100 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static short getBlockType(byte[], int)
    {
        byte[] r0;
        short $s2;
        int i0, $i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 14;

        $s2 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r0, $i1);

        return $s2;
    }

    private static short getMmMode(byte[], int)
    {
        byte[] r0;
        short $s2;
        int i0, $i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 6;

        $s2 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r0, $i1);

        return $s2;
    }

    public org.apache.poi.hwpf.usermodel.Picture extractPicture(org.apache.poi.hwpf.usermodel.CharacterRun, boolean)
    {
        byte[] $r3;
        org.apache.poi.hwpf.model.PicturesTable r0;
        org.apache.poi.hwpf.usermodel.Picture $r2;
        org.apache.poi.hwpf.usermodel.CharacterRun r1;
        int $i0;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.hwpf.model.PicturesTable;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        z1 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.model.PicturesTable: boolean hasPicture(org.apache.poi.hwpf.usermodel.CharacterRun)>(r1);

        if $z0 == 0 goto label1;

        $r2 = new org.apache.poi.hwpf.usermodel.Picture;

        $i0 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        $r3 = r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _dataStream>;

        specialinvoke $r2.<org.apache.poi.hwpf.usermodel.Picture: void <init>(int,byte[],boolean)>($i0, $r3, z1);

        return $r2;

     label1:
        return null;
    }

    private void searchForPictures(java.util.List, java.util.List)
    {
        byte[] $r9, $r11;
        org.apache.poi.hwpf.model.PicturesTable r4;
        java.lang.Integer $r16;
        org.apache.poi.ddf.EscherRecord r3, $r10;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        org.apache.poi.ddf.EscherBSERecord r6;
        java.util.Iterator $r1;
        org.apache.poi.util.POILogger $r15;
        java.lang.Exception $r14;
        java.util.List r0, r5, $r18;
        org.apache.poi.hwpf.usermodel.Picture $r12, $r13;
        org.apache.poi.ddf.DefaultEscherRecordFactory $r8;
        org.apache.poi.ddf.EscherBlipRecord $r7, r17;
        java.lang.Object $r2;

        r4 := @this: org.apache.poi.hwpf.model.PicturesTable;

        r0 := @parameter0: java.util.List;

        r5 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.ddf.EscherRecord) $r2;

        $z1 = r3 instanceof org.apache.poi.ddf.EscherBSERecord;

        if $z1 == 0 goto label6;

        r6 = (org.apache.poi.ddf.EscherBSERecord) r3;

        $r7 = virtualinvoke r6.<org.apache.poi.ddf.EscherBSERecord: org.apache.poi.ddf.EscherBlipRecord getBlipRecord()>();

        if $r7 == null goto label2;

        $r13 = new org.apache.poi.hwpf.usermodel.Picture;

        specialinvoke $r13.<org.apache.poi.hwpf.usermodel.Picture: void <init>(org.apache.poi.ddf.EscherBlipRecord)>($r7);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label6;

     label2:
        $i0 = virtualinvoke r6.<org.apache.poi.ddf.EscherBSERecord: int getOffset()>();

        if $i0 <= 0 goto label6;

     label3:
        $r8 = new org.apache.poi.ddf.DefaultEscherRecordFactory;

        specialinvoke $r8.<org.apache.poi.ddf.DefaultEscherRecordFactory: void <init>()>();

        $r9 = r4.<org.apache.poi.hwpf.model.PicturesTable: byte[] _mainStream>;

        $i1 = virtualinvoke r6.<org.apache.poi.ddf.EscherBSERecord: int getOffset()>();

        $r10 = interfaceinvoke $r8.<org.apache.poi.ddf.EscherRecordFactory: org.apache.poi.ddf.EscherRecord createRecord(byte[],int)>($r9, $i1);

        $z2 = $r10 instanceof org.apache.poi.ddf.EscherBlipRecord;

        if $z2 == 0 goto label4;

        $r11 = r4.<org.apache.poi.hwpf.model.PicturesTable: byte[] _mainStream>;

        $i2 = virtualinvoke r6.<org.apache.poi.ddf.EscherBSERecord: int getOffset()>();

        virtualinvoke $r10.<org.apache.poi.ddf.EscherRecord: int fillFields(byte[],int,org.apache.poi.ddf.EscherRecordFactory)>($r11, $i2, $r8);

        r17 = (org.apache.poi.ddf.EscherBlipRecord) $r10;

        $r12 = new org.apache.poi.hwpf.usermodel.Picture;

        specialinvoke $r12.<org.apache.poi.hwpf.usermodel.Picture: void <init>(org.apache.poi.ddf.EscherBlipRecord)>(r17);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r12);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        $r15 = <org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.util.POILogger logger>;

        $i3 = virtualinvoke r6.<org.apache.poi.ddf.EscherBSERecord: int getOffset()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r15.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Throwable)>(5, "Unable to load picture from BLIB record at offset #", $r16, $r14);

     label6:
        $r18 = virtualinvoke r3.<org.apache.poi.ddf.EscherRecord: java.util.List getChildRecords()>();

        specialinvoke r4.<org.apache.poi.hwpf.model.PicturesTable: void searchForPictures(java.util.List,java.util.List)>($r18, r5);

        goto label1;

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.util.List getAllPictures()
    {
        org.apache.poi.hwpf.model.EscherRecordHolder $r4;
        org.apache.poi.hwpf.HWPFDocument $r2;
        org.apache.poi.hwpf.model.PicturesTable r1;
        org.apache.poi.hwpf.usermodel.CharacterRun $r6;
        java.util.ArrayList $r0;
        org.apache.poi.hwpf.usermodel.Range $r3;
        java.util.List $r5;
        org.apache.poi.hwpf.usermodel.Picture $r7;
        int $i0, i1;

        r1 := @this: org.apache.poi.hwpf.model.PicturesTable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.HWPFDocument _document>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Range getOverallRange()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke $r3.<org.apache.poi.hwpf.usermodel.Range: int numCharacterRuns()>();

        if i1 >= $i0 goto label4;

        $r6 = virtualinvoke $r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i1);

        if $r6 != null goto label2;

        goto label3;

     label2:
        $r7 = virtualinvoke r1.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.usermodel.Picture extractPicture(org.apache.poi.hwpf.usermodel.CharacterRun,boolean)>($r6, 0);

        if $r7 == null goto label3;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r4 = r1.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.model.EscherRecordHolder _dgg>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hwpf.model.EscherRecordHolder: java.util.List getEscherRecords()>();

        specialinvoke r1.<org.apache.poi.hwpf.model.PicturesTable: void searchForPictures(java.util.List,java.util.List)>($r5, $r0);

        return $r0;
    }

    private boolean isBlockContainsImage(int)
    {
        byte[] $r1, $r2;
        short $s1, $s2;
        org.apache.poi.hwpf.model.PicturesTable r0;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.PicturesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _dataStream>;

        $s1 = staticinvoke <org.apache.poi.hwpf.model.PicturesTable: short getBlockType(byte[],int)>($r1, i0);

        $r2 = r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _dataStream>;

        $s2 = staticinvoke <org.apache.poi.hwpf.model.PicturesTable: short getMmMode(byte[],int)>($r2, i0);

        $z0 = specialinvoke r0.<org.apache.poi.hwpf.model.PicturesTable: boolean isPictureRecognized(short,short)>($s1, $s2);

        return $z0;
    }

    private boolean isBlockContainsHorizontalLine(int)
    {
        byte[] $r1, $r2;
        org.apache.poi.hwpf.model.PicturesTable r0;
        short $s1, $s2;
        int i0, $i3, $i4;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.PicturesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _dataStream>;

        $s1 = staticinvoke <org.apache.poi.hwpf.model.PicturesTable: short getBlockType(byte[],int)>($r1, i0);

        $i3 = (int) $s1;

        if $i3 != 14 goto label1;

        $r2 = r0.<org.apache.poi.hwpf.model.PicturesTable: byte[] _dataStream>;

        $s2 = staticinvoke <org.apache.poi.hwpf.model.PicturesTable: short getMmMode(byte[],int)>($r2, i0);

        $i4 = (int) $s2;

        if $i4 != 100 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.hwpf.model.PicturesTable: int MM_MODE_TYPE_OFFSET> = 6;

        <org.apache.poi.hwpf.model.PicturesTable: int BLOCK_TYPE_OFFSET> = 14;

        <org.apache.poi.hwpf.model.PicturesTable: int TYPE_HORIZONTAL_LINE> = 14;

        <org.apache.poi.hwpf.model.PicturesTable: int TYPE_IMAGE_PASTED_FROM_CLIPBOARD_WORD2000> = 2;

        <org.apache.poi.hwpf.model.PicturesTable: int TYPE_IMAGE_PASTED_FROM_CLIPBOARD> = 10;

        <org.apache.poi.hwpf.model.PicturesTable: int TYPE_IMAGE_WORD2000> = 0;

        <org.apache.poi.hwpf.model.PicturesTable: int TYPE_IMAGE> = 8;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/model/PicturesTable;");

        <org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
