class com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection extends com.mycila.inject.internal.guava.collect.ImmutableCollection
{
    private final java.lang.Object[] elements;

    void <init>(java.lang.Object[])
    {
        com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection r0;
        java.lang.Object[] r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection: java.lang.Object[] elements> = r1;

        return;
    }

    public int size()
    {
        com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection r0;
        int $i0;
        java.lang.Object[] $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean isEmpty()
    {
        com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection;

        return 0;
    }

    public com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()
    {
        com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection r0;
        java.lang.Object[] $r1;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection: java.lang.Object[] elements>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: com.mycila.inject.internal.guava.collect.UnmodifiableIterator forArray(java.lang.Object[])>($r1);

        return $r2;
    }

    com.mycila.inject.internal.guava.collect.ImmutableList createAsList()
    {
        com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection r0;
        java.lang.Object[] $r1, $r2, $r3;
        com.mycila.inject.internal.guava.collect.SingletonImmutableList $r6;
        com.mycila.inject.internal.guava.collect.RegularImmutableList $r7;
        com.mycila.inject.internal.guava.collect.ImmutableList $r5;
        int $i0;
        java.lang.Object $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $r6 = new com.mycila.inject.internal.guava.collect.SingletonImmutableList;

        $r5 = $r6;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection: java.lang.Object[] elements>;

        $r4 = $r3[0];

        specialinvoke $r6.<com.mycila.inject.internal.guava.collect.SingletonImmutableList: void <init>(java.lang.Object)>($r4);

        goto label2;

     label1:
        $r7 = new com.mycila.inject.internal.guava.collect.RegularImmutableList;

        $r5 = $r7;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection: java.lang.Object[] elements>;

        specialinvoke $r7.<com.mycila.inject.internal.guava.collect.RegularImmutableList: void <init>(java.lang.Object[])>($r2);

     label2:
        return $r5;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection;

        return 0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection r0;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection$ArrayImmutableCollection: com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }
}
