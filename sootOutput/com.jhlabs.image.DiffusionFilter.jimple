public class com.jhlabs.image.DiffusionFilter extends com.jhlabs.image.WholeImageFilter
{
    protected static final int[] diffusionMatrix;
    private int[] matrix;
    private int sum;
    private boolean serpentine;
    private boolean colorDither;
    public int levels;

    public void <init>()
    {
        com.jhlabs.image.DiffusionFilter r0;
        int[] $r1;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        specialinvoke r0.<com.jhlabs.image.WholeImageFilter: void <init>()>();

        r0.<com.jhlabs.image.DiffusionFilter: int sum> = 16;

        r0.<com.jhlabs.image.DiffusionFilter: boolean serpentine> = 1;

        r0.<com.jhlabs.image.DiffusionFilter: boolean colorDither> = 1;

        r0.<com.jhlabs.image.DiffusionFilter: int levels> = 6;

        $r1 = <com.jhlabs.image.DiffusionFilter: int[] diffusionMatrix>;

        virtualinvoke r0.<com.jhlabs.image.DiffusionFilter: void setMatrix(int[])>($r1);

        return;
    }

    public void setSerpentine(boolean)
    {
        com.jhlabs.image.DiffusionFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        z0 := @parameter0: boolean;

        r0.<com.jhlabs.image.DiffusionFilter: boolean serpentine> = z0;

        return;
    }

    public boolean getSerpentine()
    {
        com.jhlabs.image.DiffusionFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        $z0 = r0.<com.jhlabs.image.DiffusionFilter: boolean serpentine>;

        return $z0;
    }

    public void setColorDither(boolean)
    {
        com.jhlabs.image.DiffusionFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        z0 := @parameter0: boolean;

        r0.<com.jhlabs.image.DiffusionFilter: boolean colorDither> = z0;

        return;
    }

    public boolean getColorDither()
    {
        com.jhlabs.image.DiffusionFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        $z0 = r0.<com.jhlabs.image.DiffusionFilter: boolean colorDither>;

        return $z0;
    }

    public void setMatrix(int[])
    {
        int[] r1;
        int $i0, $i1, $i2, $i3, i4;
        com.jhlabs.image.DiffusionFilter r0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        r1 := @parameter0: int[];

        r0.<com.jhlabs.image.DiffusionFilter: int[] matrix> = r1;

        r0.<com.jhlabs.image.DiffusionFilter: int sum> = 0;

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label2;

        $i2 = r0.<com.jhlabs.image.DiffusionFilter: int sum>;

        $i1 = r1[i4];

        $i3 = $i2 + $i1;

        r0.<com.jhlabs.image.DiffusionFilter: int sum> = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public int[] getMatrix()
    {
        com.jhlabs.image.DiffusionFilter r0;
        int[] $r1;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        $r1 = r0.<com.jhlabs.image.DiffusionFilter: int[] matrix>;

        return $r1;
    }

    public void setLevels(int)
    {
        int i0;
        com.jhlabs.image.DiffusionFilter r0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.DiffusionFilter: int levels> = i0;

        return;
    }

    public int getLevels()
    {
        int $i0;
        com.jhlabs.image.DiffusionFilter r0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        $i0 = r0.<com.jhlabs.image.DiffusionFilter: int levels>;

        return $i0;
    }

    protected int[] filterPixels(int, int, int[], java.awt.Rectangle)
    {
        byte b73;
        com.jhlabs.image.DiffusionFilter r1;
        int[] r0, r2, r3, $r4, $r5, r7;
        boolean $z0, z1, $z2, $z4, $z5;
        java.awt.Rectangle r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, i68, i69, i70, i71, i72, i74, i75, i76, i77, i78, i79, i80, i81, $i82, $i84, $i86;

        r1 := @this: com.jhlabs.image.DiffusionFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: int[];

        r6 := @parameter3: java.awt.Rectangle;

        $i2 = i0 * i1;

        r0 = newarray (int)[$i2];

        $i3 = r1.<com.jhlabs.image.DiffusionFilter: int levels>;

        r2 = newarray (int)[$i3];

        i68 = 0;

     label01:
        $i4 = r1.<com.jhlabs.image.DiffusionFilter: int levels>;

        if i68 >= $i4 goto label02;

        $i67 = 255 * i68;

        $i65 = r1.<com.jhlabs.image.DiffusionFilter: int levels>;

        $i66 = $i65 - 1;

        i69 = $i67 / $i66;

        r2[i68] = i69;

        i68 = i68 + 1;

        goto label01;

     label02:
        r7 = newarray (int)[256];

        i70 = 0;

     label03:
        if i70 >= 256 goto label04;

        $i62 = r1.<com.jhlabs.image.DiffusionFilter: int levels>;

        $i63 = $i62 * i70;

        $i64 = $i63 / 256;

        r7[i70] = $i64;

        i70 = i70 + 1;

        goto label03;

     label04:
        i71 = 0;

     label05:
        if i71 >= i1 goto label22;

        $z0 = r1.<com.jhlabs.image.DiffusionFilter: boolean serpentine>;

        if $z0 == 0 goto label06;

        $i61 = i71 & 1;

        if $i61 != 1 goto label06;

        $z5 = 1;

        $z4 = 1;

        goto label07;

     label06:
        $z5 = 0;

        $z4 = 0;

     label07:
        z1 = $z4;

        if $z5 == 0 goto label08;

        $i59 = i71 * i0;

        $i60 = $i59 + i0;

        i72 = $i60 - 1;

        b73 = -1;

        goto label09;

     label08:
        i72 = i71 * i0;

        b73 = 1;

     label09:
        i74 = 0;

     label10:
        if i74 >= i0 goto label21;

        i75 = r3[i72];

        $i5 = i75 >> 16;

        i76 = $i5 & 255;

        $i6 = i75 >> 8;

        i77 = $i6 & 255;

        i78 = i75 & 255;

        $z2 = r1.<com.jhlabs.image.DiffusionFilter: boolean colorDither>;

        if $z2 != 0 goto label11;

        $i50 = i76 + i77;

        $i51 = $i50 + i78;

        $i52 = $i51 / 3;

        i78 = $i52;

        i77 = $i52;

        i76 = $i52;

     label11:
        $i7 = r7[i76];

        $i53 = r2[$i7];

        $i8 = r7[i77];

        $i54 = r2[$i8];

        $i9 = r7[i78];

        $i55 = r2[$i9];

        $i10 = $i53 << 16;

        $i12 = -16777216 | $i10;

        $i11 = $i54 << 8;

        $i13 = $i12 | $i11;

        $i14 = $i13 | $i55;

        r0[i72] = $i14;

        $i56 = i76 - $i53;

        $i57 = i77 - $i54;

        $i58 = i78 - $i55;

        $i84 = (int) -1;

        i79 = $i84;

     label12:
        if i79 > 1 goto label20;

        i15 = i79 + i71;

        if 0 > i15 goto label19;

        if i15 >= i1 goto label19;

        $i86 = (int) -1;

        i80 = $i86;

     label13:
        if i80 > 1 goto label19;

        i16 = i80 + i74;

        if 0 > i16 goto label18;

        if i16 >= i0 goto label18;

        if z1 == 0 goto label14;

        $r5 = r1.<com.jhlabs.image.DiffusionFilter: int[] matrix>;

        $i46 = i79 + 1;

        $i47 = $i46 * 3;

        $i48 = $i47 - i80;

        $i49 = $i48 + 1;

        i81 = $r5[$i49];

        goto label15;

     label14:
        $r4 = r1.<com.jhlabs.image.DiffusionFilter: int[] matrix>;

        $i17 = i79 + 1;

        $i18 = $i17 * 3;

        $i19 = $i18 + i80;

        $i20 = $i19 + 1;

        i81 = $r4[$i20];

     label15:
        if i81 == 0 goto label18;

        if z1 == 0 goto label16;

        $i82 = i72 - i80;

        goto label17;

     label16:
        $i82 = i72 + i80;

     label17:
        $i39 = r3[$i82];

        $i21 = $i39 >> 16;

        $i40 = $i21 & 255;

        $i22 = $i39 >> 8;

        $i41 = $i22 & 255;

        $i42 = $i39 & 255;

        $i24 = $i56 * i81;

        $i23 = r1.<com.jhlabs.image.DiffusionFilter: int sum>;

        $i25 = $i24 / $i23;

        $i43 = $i40 + $i25;

        $i27 = $i57 * i81;

        $i26 = r1.<com.jhlabs.image.DiffusionFilter: int sum>;

        $i28 = $i27 / $i26;

        $i44 = $i41 + $i28;

        $i30 = $i58 * i81;

        $i29 = r1.<com.jhlabs.image.DiffusionFilter: int sum>;

        $i31 = $i30 / $i29;

        $i45 = $i42 + $i31;

        $i32 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i43);

        $i33 = $i32 << 16;

        $i34 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i44);

        $i35 = $i34 << 8;

        $i36 = $i33 | $i35;

        $i37 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i45);

        $i38 = $i36 | $i37;

        r3[$i82] = $i38;

     label18:
        i80 = i80 + 1;

        goto label13;

     label19:
        i79 = i79 + 1;

        goto label12;

     label20:
        i72 = i72 + b73;

        i74 = i74 + 1;

        goto label10;

     label21:
        i71 = i71 + 1;

        goto label05;

     label22:
        return r0;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.DiffusionFilter r0;

        r0 := @this: com.jhlabs.image.DiffusionFilter;

        return "Colors/Diffusion Dither...";
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[9];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 7;

        $r0[6] = 3;

        $r0[7] = 5;

        $r0[8] = 1;

        <com.jhlabs.image.DiffusionFilter: int[] diffusionMatrix> = $r0;

        return;
    }
}
