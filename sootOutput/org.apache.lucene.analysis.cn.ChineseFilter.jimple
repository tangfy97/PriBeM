public final class org.apache.lucene.analysis.cn.ChineseFilter extends org.apache.lucene.analysis.TokenFilter
{
    public static final java.lang.String[] STOP_WORDS;
    private org.apache.lucene.analysis.util.CharArraySet stopTable;
    private org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;

    public void <init>(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.analysis.TokenStream r1;
        java.lang.String[] $r5;
        org.apache.lucene.util.Version $r6;
        org.apache.lucene.analysis.cn.ChineseFilter r0;
        java.util.List $r7;
        org.apache.lucene.analysis.util.CharArraySet $r4;
        org.apache.lucene.util.Attribute $r2;

        r0 := @this: org.apache.lucene.analysis.cn.ChineseFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.cn.ChineseFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.cn.ChineseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        $r4 = new org.apache.lucene.analysis.util.CharArraySet;

        $r6 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_CURRENT>;

        $r5 = <org.apache.lucene.analysis.cn.ChineseFilter: java.lang.String[] STOP_WORDS>;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke $r4.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.util.Version,java.util.Collection,boolean)>($r6, $r7, 0);

        r0.<org.apache.lucene.analysis.cn.ChineseFilter: org.apache.lucene.analysis.util.CharArraySet stopTable> = $r4;

        return;
    }

    public boolean incrementToken() throws java.io.IOException
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r2, $r4;
        org.apache.lucene.analysis.TokenStream $r1;
        char $c1;
        org.apache.lucene.analysis.cn.ChineseFilter r0;
        int $i0, $i2;
        char[] $r3;
        org.apache.lucene.analysis.util.CharArraySet $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.cn.ChineseFilter;

     label1:
        $r1 = r0.<org.apache.lucene.analysis.cn.ChineseFilter: org.apache.lucene.analysis.TokenStream input>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<org.apache.lucene.analysis.cn.ChineseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r3 = interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $r4 = r0.<org.apache.lucene.analysis.cn.ChineseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i0 = interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        $r5 = r0.<org.apache.lucene.analysis.cn.ChineseFilter: org.apache.lucene.analysis.util.CharArraySet stopTable>;

        $z1 = virtualinvoke $r5.<org.apache.lucene.analysis.util.CharArraySet: boolean contains(char[],int,int)>($r3, 0, $i0);

        if $z1 != 0 goto label4;

        $c1 = $r3[0];

        $i2 = staticinvoke <java.lang.Character: int getType(char)>($c1);

        tableswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label3;
            default: goto label4;
        };

     label2:
        if $i0 <= 1 goto label4;

        return 1;

     label3:
        return 1;

     label4:
        goto label1;

     label5:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[31];

        $r0[0] = "and";

        $r0[1] = "are";

        $r0[2] = "as";

        $r0[3] = "at";

        $r0[4] = "be";

        $r0[5] = "but";

        $r0[6] = "by";

        $r0[7] = "for";

        $r0[8] = "if";

        $r0[9] = "in";

        $r0[10] = "into";

        $r0[11] = "is";

        $r0[12] = "it";

        $r0[13] = "no";

        $r0[14] = "not";

        $r0[15] = "of";

        $r0[16] = "on";

        $r0[17] = "or";

        $r0[18] = "such";

        $r0[19] = "that";

        $r0[20] = "the";

        $r0[21] = "their";

        $r0[22] = "then";

        $r0[23] = "there";

        $r0[24] = "these";

        $r0[25] = "they";

        $r0[26] = "this";

        $r0[27] = "to";

        $r0[28] = "was";

        $r0[29] = "will";

        $r0[30] = "with";

        <org.apache.lucene.analysis.cn.ChineseFilter: java.lang.String[] STOP_WORDS> = $r0;

        return;
    }
}
