final class org.bouncycastle.openssl.PEMUtilities extends java.lang.Object
{

    void <init>()
    {
        org.bouncycastle.openssl.PEMUtilities r0;

        r0 := @this: org.bouncycastle.openssl.PEMUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static byte[] crypt(boolean, java.lang.String, byte[], char[], java.lang.String, byte[]) throws java.io.IOException
    {
        byte[] r1, r7, $r8, r20;
        byte $b6, $b7;
        java.security.spec.AlgorithmParameterSpec r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r21, $r22, $r23, $r24, $r25, $r26;
        javax.crypto.SecretKey r19;
        javax.crypto.Cipher $r28;
        short s1, s3, s8, s9, s10;
        javax.crypto.spec.IvParameterSpec $r0;
        int $i0, $i2, $i4;
        java.lang.String r2, r6, $r11, $r12, r16, r17, r18, $r27;
        javax.crypto.spec.RC2ParameterSpec $r9, $r10;
        org.bouncycastle.openssl.EncryptionException $r3, $r4, $r14;
        char[] r5;

        z10 := @parameter0: boolean;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: byte[];

        r5 := @parameter3: char[];

        r2 := @parameter4: java.lang.String;

        r1 := @parameter5: byte[];

        $r0 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1);

        r15 = $r0;

        r16 = "CBC";

        r17 = "PKCS5Padding";

        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("-CFB");

        if $z0 == 0 goto label01;

        r16 = "CFB";

        r17 = "NoPadding";

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("-ECB");

        if $z1 != 0 goto label02;

        $r11 = "DES-EDE";

        $z14 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z14 != 0 goto label02;

        $r12 = "DES-EDE3";

        $z15 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z15 == 0 goto label03;

     label02:
        r16 = "ECB";

        r15 = null;

     label03:
        $z16 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("-OFB");

        if $z16 == 0 goto label04;

        r16 = "OFB";

        r17 = "NoPadding";

     label04:
        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("DES-EDE");

        if $z2 == 0 goto label07;

        r18 = "DESede";

        $z13 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("DES-EDE3");

        if $z13 != 0 goto label05;

        $z17 = 1;

        goto label06;

     label05:
        $z17 = 0;

     label06:
        r19 = staticinvoke <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)>(r5, "DESede", 24, r1, $z17);

        goto label21;

     label07:
        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("DES-");

        if $z3 == 0 goto label08;

        r18 = "DES";

        r19 = staticinvoke <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[])>(r5, "DES", 8, r1);

        goto label21;

     label08:
        $z4 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("BF-");

        if $z4 == 0 goto label09;

        r18 = "Blowfish";

        r19 = staticinvoke <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[])>(r5, "Blowfish", 16, r1);

        goto label21;

     label09:
        $z5 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("RC2-");

        if $z5 == 0 goto label14;

        r18 = "RC2";

        s1 = 128;

        s10 = 128;

        s9 = 128;

        s8 = 128;

        $z11 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("RC2-40-");

        if $z11 == 0 goto label10;

        s1 = 40;

        s10 = 40;

        s9 = 40;

        s8 = 40;

        goto label11;

     label10:
        $z12 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("RC2-64-");

        if $z12 == 0 goto label11;

        s1 = 64;

        s10 = 64;

        s9 = 64;

        s8 = 64;

     label11:
        $i2 = s8 / 8;

        r19 = staticinvoke <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[])>(r5, "RC2", $i2, r1);

        if r15 != null goto label12;

        $r10 = new javax.crypto.spec.RC2ParameterSpec;

        specialinvoke $r10.<javax.crypto.spec.RC2ParameterSpec: void <init>(int)>(s9);

        r15 = $r10;

        goto label13;

     label12:
        $r9 = new javax.crypto.spec.RC2ParameterSpec;

        specialinvoke $r9.<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[])>(s10, r1);

        r15 = $r9;

     label13:
        goto label21;

     label14:
        $z6 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("AES-");

        if $z6 == 0 goto label20;

        r18 = "AES";

        r20 = r1;

        $i0 = lengthof r1;

        if $i0 <= 8 goto label15;

        r20 = newarray (byte)[8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r20, 0, 8);

     label15:
        $z7 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("AES-128-");

        if $z7 == 0 goto label16;

        s3 = 128;

        goto label19;

     label16:
        $z8 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("AES-192-");

        if $z8 == 0 goto label17;

        s3 = 192;

        goto label19;

     label17:
        $z9 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("AES-256-");

        if $z9 == 0 goto label18;

        s3 = 256;

        goto label19;

     label18:
        $r4 = new org.bouncycastle.openssl.EncryptionException;

        specialinvoke $r4.<org.bouncycastle.openssl.EncryptionException: void <init>(java.lang.String)>("unknown AES encryption with private key");

        throw $r4;

     label19:
        $i4 = s3 / 8;

        r19 = staticinvoke <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[])>(r5, "AES", $i4, r20);

        goto label21;

     label20:
        $r3 = new org.bouncycastle.openssl.EncryptionException;

        specialinvoke $r3.<org.bouncycastle.openssl.EncryptionException: void <init>(java.lang.String)>("unknown encryption with private key");

        throw $r3;

     label21:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        $r28 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r27, r6);

        if z10 == 0 goto label23;

        $b7 = 1;

        $b6 = 1;

        goto label24;

     label23:
        $b7 = 2;

        $b6 = 2;

     label24:
        if r15 != null goto label25;

        virtualinvoke $r28.<javax.crypto.Cipher: void init(int,java.security.Key)>($b7, r19);

        goto label26;

     label25:
        virtualinvoke $r28.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b6, r19, r15);

     label26:
        $r8 = virtualinvoke $r28.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7);

     label27:
        return $r8;

     label28:
        $r13 := @caughtexception;

        $r14 = new org.bouncycastle.openssl.EncryptionException;

        specialinvoke $r14.<org.bouncycastle.openssl.EncryptionException: void <init>(java.lang.String,java.lang.Throwable)>("exception using cipher - please check password and data.", $r13);

        throw $r14;

        catch java.lang.Exception from label22 to label27 with label28;
    }

    private static javax.crypto.SecretKey getKey(char[], java.lang.String, int, byte[])
    {
        byte[] r2;
        int i0;
        char[] r0;
        java.lang.String r1;
        javax.crypto.SecretKey $r3;

        r0 := @parameter0: char[];

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        $r3 = staticinvoke <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)>(r0, r1, i0, r2, 0);

        return $r3;
    }

    private static javax.crypto.SecretKey getKey(char[], java.lang.String, int, byte[], boolean)
    {
        byte[] $r2, r3, $r6;
        javax.crypto.spec.SecretKeySpec $r8;
        int i0, $i1, $i2;
        org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator $r0;
        char[] r1;
        java.lang.String r7;
        org.bouncycastle.crypto.params.KeyParameter r5;
        org.bouncycastle.crypto.CipherParameters $r4;
        boolean z0;

        r1 := @parameter0: char[];

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        z0 := @parameter4: boolean;

        $r0 = new org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator;

        specialinvoke $r0.<org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: void <init>()>();

        $r2 = staticinvoke <org.bouncycastle.crypto.PBEParametersGenerator: byte[] PKCS5PasswordToBytes(char[])>(r1);

        virtualinvoke $r0.<org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: void init(byte[],byte[])>($r2, r3);

        $i1 = i0 * 8;

        $r4 = virtualinvoke $r0.<org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)>($i1);

        r5 = (org.bouncycastle.crypto.params.KeyParameter) $r4;

        $r6 = virtualinvoke r5.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        if z0 == 0 goto label1;

        $i2 = lengthof $r6;

        if $i2 < 24 goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r6, 16, 8);

     label1:
        $r8 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, r7);

        return $r8;
    }
}
