class bsh.BSHLiteral extends bsh.SimpleNode
{
    public java.lang.Object value;

    void <init>(int)
    {
        int i0;
        bsh.BSHLiteral r0;

        r0 := @this: bsh.BSHLiteral;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object eval(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.Interpreter r10;
        bsh.CallStack r9;
        java.lang.StringBuffer $r4, $r5, $r7;
        java.lang.Object $r1, $r2, $r6;
        bsh.InterpreterError $r3;
        java.lang.String $r8;
        bsh.BSHLiteral r0;

        r0 := @this: bsh.BSHLiteral;

        r9 := @parameter0: bsh.CallStack;

        r10 := @parameter1: bsh.Interpreter;

        $r1 = r0.<bsh.BSHLiteral: java.lang.Object value>;

        if $r1 != null goto label1;

        $r3 = new bsh.InterpreterError;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Null in bsh literal: ");

        $r6 = r0.<bsh.BSHLiteral: java.lang.Object value>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<bsh.InterpreterError: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $r2 = r0.<bsh.BSHLiteral: java.lang.Object value>;

        return $r2;
    }

    private char getEscapeChar(char)
    {
        char c0;
        bsh.BSHLiteral r0;

        r0 := @this: bsh.BSHLiteral;

        c0 := @parameter0: char;

        lookupswitch(c0)
        {
            case 34: goto label6;
            case 39: goto label6;
            case 92: goto label6;
            case 98: goto label1;
            case 102: goto label4;
            case 110: goto label3;
            case 114: goto label5;
            case 116: goto label2;
            default: goto label6;
        };

     label1:
        c0 = 8;

        goto label6;

     label2:
        c0 = 9;

        goto label6;

     label3:
        c0 = 10;

        goto label6;

     label4:
        c0 = 12;

        goto label6;

     label5:
        c0 = 13;

        goto label6;

     label6:
        return c0;
    }

    public void charSetup(java.lang.String)
    {
        char $c0, $c1, c3, $c4;
        java.lang.Character $r5;
        bsh.Primitive $r6;
        int $i2, $i5;
        java.lang.String r0, $r2;
        bsh.BSHLiteral r1;
        boolean $z0;

        r1 := @this: bsh.BSHLiteral;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        c3 = $c0;

        $i5 = (int) $c0;

        if $i5 != 92 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 8);

        c3 = (char) $i2;

        goto label2;

     label1:
        c3 = specialinvoke r1.<bsh.BSHLiteral: char getEscapeChar(char)>($c1);

     label2:
        $r6 = new bsh.Primitive;

        $r5 = new java.lang.Character;

        specialinvoke $r5.<java.lang.Character: void <init>(char)>(c3);

        $c4 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        specialinvoke $r6.<bsh.Primitive: void <init>(char)>($c4);

        r1.<bsh.BSHLiteral: java.lang.Object value> = $r6;

        return;
    }

    void stringSetup(java.lang.String)
    {
        java.lang.StringBuffer $r6;
        int $i2, $i3, $i5, $i6, i7, i9, $i10, $i11;
        java.lang.String r1, $r3, $r4, $r5;
        boolean $z0, $z1;
        char $c0, $c1, $c4, c8;
        bsh.BSHLiteral r2;

        r2 := @this: bsh.BSHLiteral;

        r1 := @parameter0: java.lang.String;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        i7 = 0;

        goto label7;

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        c8 = $c0;

        $i11 = (int) $c0;

        if $i11 != 92 goto label6;

        i7 = i7 + 1;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label5;

        i9 = i7;

        goto label3;

     label2:
        $i3 = i9 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z1 == 0 goto label4;

        i9 = i9 + 1;

     label3:
        $i2 = i7 + 2;

        if i9 < $i2 goto label2;

     label4:
        $i5 = i9 + 1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i7, $i5);

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 8);

        c8 = (char) $i6;

        i7 = i9;

        goto label6;

     label5:
        c8 = specialinvoke r2.<bsh.BSHLiteral: char getEscapeChar(char)>($c1);

     label6:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c8);

        i7 = i7 + 1;

     label7:
        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        if i7 < $i10 goto label1;

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();

        r2.<bsh.BSHLiteral: java.lang.Object value> = $r5;

        return;
    }
}
