public final class com.hp.hpl.jena.tdb.store.NodeId extends java.lang.Object
{
    public static final com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist;
    public static final com.hp.hpl.jena.tdb.store.NodeId NodeIdAny;
    private static boolean enableInlineLiterals;
    public static final int SIZE;
    final long value;
    public static final int NONE;
    public static final int INTEGER;
    public static final int DECIMAL;
    public static final int DATE;
    public static final int DATETIME;
    public static final int BOOLEAN;
    public static final int SHORT_STRING;
    public static final int SPECIAL;

    public static com.hp.hpl.jena.tdb.store.NodeId create(long)
    {
        long l0, $l1, $l3;
        byte $b2, $b4;
        com.hp.hpl.jena.tdb.store.NodeId $r0, $r1, $r2, $r3, $r4;

        l0 := @parameter0: long;

        $r0 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        $l1 = $r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        $r4 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        return $r4;

     label1:
        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        $l3 = $r1.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $b4 = l0 cmp $l3;

        if $b4 != 0 goto label2;

        $r3 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        return $r3;

     label2:
        $r2 = new com.hp.hpl.jena.tdb.store.NodeId;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>(l0);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId create(byte[])
    {
        byte[] r0;
        com.hp.hpl.jena.tdb.store.NodeId $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(byte[],int)>(r0, 0);

        return $r1;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId create(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        com.hp.hpl.jena.tdb.store.NodeId $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(java.nio.ByteBuffer,int)>(r0, 0);

        return $r1;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId create(byte[], int)
    {
        byte[] r0;
        com.hp.hpl.jena.tdb.store.NodeId $r1;
        int i0;
        long $l1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $l1 = staticinvoke <org.apache.jena.atlas.lib.Bytes: long getLong(byte[],int)>(r0, i0);

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(long)>($l1);

        return $r1;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId create(java.nio.ByteBuffer, int)
    {
        com.hp.hpl.jena.tdb.store.NodeId $r1;
        int i0;
        long $l1;
        java.nio.ByteBuffer r0;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $l1 = virtualinvoke r0.<java.nio.ByteBuffer: long getLong(int)>(i0);

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(long)>($l1);

        return $r1;
    }

    public void <init>(long)
    {
        long l0;
        com.hp.hpl.jena.tdb.store.NodeId r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.store.NodeId: long value> = l0;

        return;
    }

    public void toByteBuffer(java.nio.ByteBuffer, int)
    {
        com.hp.hpl.jena.tdb.store.NodeId r1;
        int i0;
        long $l1;
        java.nio.ByteBuffer r0;

        r1 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $l1 = r1.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(int,long)>(i0, $l1);

        return;
    }

    public void toBytes(byte[], int)
    {
        byte[] r1;
        com.hp.hpl.jena.tdb.store.NodeId r0;
        int i0;
        long $l1;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $l1 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        staticinvoke <org.apache.jena.atlas.lib.Bytes: void setLong(long,byte[],int)>($l1, r1, i0);

        return;
    }

    public boolean isDirect()
    {
        com.hp.hpl.jena.tdb.store.NodeId r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.NodeId: int type()>();

        if $i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.NodeId: int type()>();

        if $i1 == 255 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int type()
    {
        com.hp.hpl.jena.tdb.store.NodeId r0;
        int $i2;
        long $l0, $l1;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        $l0 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $l1 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>($l0, 56, 64);

        $i2 = (int) $l1;

        return $i2;
    }

    static long setType(long, int)
    {
        int i1;
        long l0, $l2, $l3;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l2 = (long) i1;

        $l3 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>(l0, $l2, 56, 64);

        return $l3;
    }

    public long getId()
    {
        long $l0;
        com.hp.hpl.jena.tdb.store.NodeId r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        $l0 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        return $l0;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.tdb.store.NodeId r0;
        int $i3, $i4, $i5;
        long $l0, $l1, $l2;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        $l0 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $i4 = (int) $l0;

        $l1 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $l2 = $l1 >> 32;

        $i3 = (int) $l2;

        $i5 = $i4 ^ $i3;

        return $i5;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1;
        byte $b2;
        com.hp.hpl.jena.tdb.store.NodeId r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.tdb.store.NodeId;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $l1 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $r2 = (com.hp.hpl.jena.tdb.store.NodeId) r1;

        $l0 = $r2.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r3;
        java.lang.Long $r4;
        com.hp.hpl.jena.tdb.store.NodeId r0, $r1, $r2;
        long $l0;
        java.lang.String $r5;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        if r0 != $r1 goto label1;

        return "[DoesNotExist]";

     label1:
        $r2 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        if r0 != $r2 goto label2;

        return "[Any]";

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $l0 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%016X]", $r3);

        return $r5;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId inline(com.hp.hpl.jena.graph.Node)
    {
        java.lang.Throwable $r7;
        com.hp.hpl.jena.graph.Node r0;
        com.hp.hpl.jena.datatypes.RDFDatatype $r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        if r0 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null node: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/tdb/store/NodeId;", $r6);

        return null;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.datatypes.RDFDatatype getLiteralDatatype()>();

        if $r1 != null goto label3;

        return null;

     label3:
        $z1 = <com.hp.hpl.jena.tdb.store.NodeId: boolean enableInlineLiterals>;

        if $z1 != 0 goto label4;

        return null;

     label4:
        $r2 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId inline$(com.hp.hpl.jena.graph.Node)>(r0);

     label5:
        return $r2;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to process ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/tdb/store/NodeId;", $r11);

        return null;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static com.hp.hpl.jena.tdb.store.NodeId inline$(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0;
        java.math.BigDecimal $r20;
        byte $b2, $b5, $b10;
        com.hp.hpl.jena.tdb.store.DecimalNode $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        java.lang.Throwable $r25;
        long $l0, $l1, $l3, $l4, $l6, $l8, $l9, $l11, l12;
        com.hp.hpl.jena.tdb.store.NodeId $r10, $r12, $r14, $r18, $r24;
        int $i7;
        java.lang.Boolean $r9;
        java.lang.String $r11, $r13, $r15, $r21, $r22;
        java.lang.Number $r17;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r3, $r4, $r5, $r6, $r7, $r19;
        com.hp.hpl.jena.datatypes.RDFDatatype $r2;
        java.lang.Object $r8, $r16;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.datatypes.RDFDatatype getLiteralDatatype()>();

        $r3 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label03;

        $r19 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        $z6 = virtualinvoke $r19.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: boolean isValidLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r1);

        if $z6 != 0 goto label01;

        return null;

     label01:
        $r20 = new java.math.BigDecimal;

        $r21 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getLexicalForm()>();

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>($r22);

        $r23 = staticinvoke <com.hp.hpl.jena.tdb.store.DecimalNode: com.hp.hpl.jena.tdb.store.DecimalNode valueOf(java.math.BigDecimal)>($r20);

        if $r23 == null goto label02;

        $r24 = new com.hp.hpl.jena.tdb.store.NodeId;

        $l11 = virtualinvoke $r23.<com.hp.hpl.jena.tdb.store.DecimalNode: long pack()>();

        specialinvoke $r24.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>($l11);

        return $r24;

     label02:
        return null;

     label03:
        $r4 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger>;

        $z1 = virtualinvoke $r4.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: boolean isValidLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r1);

        if $z1 == 0 goto label08;

        $r15 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getLexicalForm()>();

        $i7 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i7 <= 19 goto label04;

        return null;

     label04:
        $r16 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getValue()>();

        $r17 = (java.lang.Number) $r16;

        $l8 = virtualinvoke $r17.<java.lang.Number: long longValue()>();

        $l9 = staticinvoke <com.hp.hpl.jena.tdb.store.IntegerNode: long pack(long)>($l8);

        $b10 = $l9 cmp -1L;

        if $b10 == 0 goto label06;

        $r18 = new com.hp.hpl.jena.tdb.store.NodeId;

        specialinvoke $r18.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>($l9);

     label05:
        return $r18;

     label06:
        return null;

     label07:
        $r25 := @caughtexception;

        return null;

     label08:
        $r5 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdateTime>;

        $z2 = virtualinvoke $r5.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: boolean isValidLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r1);

        if $z2 == 0 goto label10;

        $r13 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getLexicalForm()>();

        $l4 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long packDateTime(java.lang.String)>($r13);

        $b5 = $l4 cmp -1L;

        if $b5 != 0 goto label09;

        return null;

     label09:
        $l6 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: long setType(long,int)>($l4, 4);

        $r14 = new com.hp.hpl.jena.tdb.store.NodeId;

        specialinvoke $r14.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>($l6);

        return $r14;

     label10:
        $r6 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdate>;

        $z3 = virtualinvoke $r6.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: boolean isValidLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r1);

        if $z3 == 0 goto label12;

        $r11 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getLexicalForm()>();

        $l1 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long packDate(java.lang.String)>($r11);

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label11;

        return null;

     label11:
        $l3 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: long setType(long,int)>($l1, 3);

        $r12 = new com.hp.hpl.jena.tdb.store.NodeId;

        specialinvoke $r12.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>($l3);

        return $r12;

     label12:
        $r7 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDboolean>;

        $z4 = virtualinvoke $r7.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: boolean isValidLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r1);

        if $z4 == 0 goto label14;

        $r8 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getValue()>();

        $r9 = (java.lang.Boolean) $r8;

        $z5 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $l0 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: long setType(long,int)>(0L, 5);

        l12 = $l0;

        if $z5 == 0 goto label13;

        l12 = $l0 | 1L;

     label13:
        $r10 = new com.hp.hpl.jena.tdb.store.NodeId;

        specialinvoke $r10.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>(l12);

        return $r10;

     label14:
        return null;

        catch java.lang.Throwable from label04 to label05 with label07;
    }

    public static boolean isInline(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.TDBException $r2;
        long l0;
        com.hp.hpl.jena.tdb.store.NodeId r0, $r1;
        int $i1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        if r0 != $r1 goto label1;

        return 0;

     label1:
        l0 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.NodeId: int type()>();

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            case 255: goto label3;
            default: goto label5;
        };

     label2:
        return 0;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        $r2 = new com.hp.hpl.jena.tdb.TDBException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized node id type: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public static com.hp.hpl.jena.graph.Node extract(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.graph.Node $r7, $r8, $r11, $r14, $r18, $r21;
        java.math.BigDecimal $r15;
        byte $b3, $b4;
        java.lang.StringBuilder $r3, $r4, $r5, $r23, $r24, $r25;
        long l0, $l2, $l5, $l6, $l7;
        com.hp.hpl.jena.tdb.store.NodeId r0, $r1;
        int $i1;
        java.lang.String $r6, $r9, $r12, $r16, $r19, $r26;
        com.hp.hpl.jena.tdb.TDBException $r2, $r22;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r10, $r13, $r17, $r20;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        if r0 != $r1 goto label01;

        return null;

     label01:
        l0 = r0.<com.hp.hpl.jena.tdb.store.NodeId: long value>;

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.NodeId: int type()>();

        lookupswitch($i1)
        {
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label07;
            case 4: goto label06;
            case 5: goto label08;
            case 255: goto label03;
            default: goto label11;
        };

     label02:
        return null;

     label03:
        return null;

     label04:
        $l7 = staticinvoke <com.hp.hpl.jena.tdb.store.IntegerNode: long unpack(long)>(l0);

        $r19 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l7);

        $r20 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger>;

        $r21 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r19, null, $r20);

        return $r21;

     label05:
        $r15 = staticinvoke <com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigDecimal unpackAsBigDecimal(long)>(l0);

        $r16 = virtualinvoke $r15.<java.math.BigDecimal: java.lang.String toEngineeringString()>();

        $r17 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        $r18 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r16, null, $r17);

        return $r18;

     label06:
        $l5 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long clear(long,int,int)>(l0, 56, 64);

        $r9 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: java.lang.String unpackDateTime(long)>($l5);

        $r10 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdateTime>;

        $r11 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r9, null, $r10);

        return $r11;

     label07:
        $l6 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long clear(long,int,int)>(l0, 56, 64);

        $r12 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: java.lang.String unpackDate(long)>($l6);

        $r13 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdate>;

        $r14 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r12, null, $r13);

        return $r14;

     label08:
        $l2 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long clear(long,int,int)>(l0, 56, 64);

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label09;

        $r8 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeFalse>;

        return $r8;

     label09:
        $b4 = $l2 cmp 1L;

        if $b4 != 0 goto label10;

        $r7 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeTrue>;

        return $r7;

     label10:
        $r2 = new com.hp.hpl.jena.tdb.TDBException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized boolean node id : ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label11:
        $r22 = new com.hp.hpl.jena.tdb.TDBException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized node id type: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r26);

        throw $r22;
    }

    public final boolean isConcrete()
    {
        com.hp.hpl.jena.tdb.store.NodeId r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.tdb.store.NodeId;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isAny(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isDoesNotExist(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static final boolean isConcrete(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.store.NodeId r0, $r1, $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        if r0 != $r1 goto label2;

        return 0;

     label2:
        $r2 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        if r0 != $r2 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static final boolean isAny(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.store.NodeId r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        if r0 == $r1 goto label1;

        if r0 != null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static final boolean isDoesNotExist(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.store.NodeId r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.tdb.store.NodeId $r0, $r1;

        <com.hp.hpl.jena.tdb.store.NodeId: int SPECIAL> = 255;

        <com.hp.hpl.jena.tdb.store.NodeId: int SHORT_STRING> = 6;

        <com.hp.hpl.jena.tdb.store.NodeId: int BOOLEAN> = 5;

        <com.hp.hpl.jena.tdb.store.NodeId: int DATETIME> = 4;

        <com.hp.hpl.jena.tdb.store.NodeId: int DATE> = 3;

        <com.hp.hpl.jena.tdb.store.NodeId: int DECIMAL> = 2;

        <com.hp.hpl.jena.tdb.store.NodeId: int INTEGER> = 1;

        <com.hp.hpl.jena.tdb.store.NodeId: int NONE> = 0;

        <com.hp.hpl.jena.tdb.store.NodeId: int SIZE> = 8;

        $r0 = new com.hp.hpl.jena.tdb.store.NodeId;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>(-8L);

        <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist> = $r0;

        $r1 = new com.hp.hpl.jena.tdb.store.NodeId;

        specialinvoke $r1.<com.hp.hpl.jena.tdb.store.NodeId: void <init>(long)>(-9L);

        <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny> = $r1;

        <com.hp.hpl.jena.tdb.store.NodeId: boolean enableInlineLiterals> = 1;

        return;
    }
}
