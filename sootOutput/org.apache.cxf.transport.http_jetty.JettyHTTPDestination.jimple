public class org.apache.cxf.transport.http_jetty.JettyHTTPDestination extends org.apache.cxf.transport.http.AbstractHTTPDestination
{
    private static final java.util.logging.Logger LOG;
    protected org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine;
    protected org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory serverEngineFactory;
    protected javax.servlet.ServletContext servletContext;
    protected java.net.URL nurl;
    protected java.lang.ClassLoader loader;
    private boolean configFinalized;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.cxf.Bus, org.apache.cxf.transport.http.DestinationRegistry, org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory) throws java.io.IOException
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.service.model.EndpointInfo r3, $r4, $r8;
        java.net.URL $r7;
        org.apache.cxf.transport.http.DestinationRegistry r2;
        java.lang.Object $r10;
        java.lang.String $r5, $r9;
        java.lang.ClassLoader $r11;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory r6;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r1 := @parameter0: org.apache.cxf.Bus;

        r2 := @parameter1: org.apache.cxf.transport.http.DestinationRegistry;

        r3 := @parameter2: org.apache.cxf.service.model.EndpointInfo;

        r6 := @parameter3: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory;

        $r4 = staticinvoke <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)>(r3, 1);

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.EndpointInfo: java.lang.String getAddress()>();

        specialinvoke r0.<org.apache.cxf.transport.http.AbstractHTTPDestination: void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,boolean)>(r1, r2, r3, $r5, 1);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory serverEngineFactory> = r6;

        $r7 = new java.net.URL;

        $r8 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        $r9 = virtualinvoke $r8.<org.apache.cxf.service.model.EndpointInfo: java.lang.String getAddress()>();

        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r9);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl> = $r7;

        $r10 = interfaceinvoke r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Ljava/lang/ClassLoader;");

        $r11 = (java.lang.ClassLoader) $r10;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.ClassLoader loader> = $r11;

        return;
    }

    protected java.util.logging.Logger getLogger()
    {
        java.util.logging.Logger $r0;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r1;

        r1 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        $r0 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        return $r0;
    }

    public void setServletContext(javax.servlet.ServletContext)
    {
        javax.servlet.ServletContext r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r1 := @parameter0: javax.servlet.ServletContext;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: javax.servlet.ServletContext servletContext> = r1;

        return;
    }

    protected void retrieveEngine() throws java.security.GeneralSecurityException, java.io.IOException
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters $r6;
        java.lang.IllegalStateException $r7;
        java.net.URL $r1, $r17, $r26, $r29, $r30, $r33;
        boolean $z0, $z1;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine $r3, $r4, $r5, $r10, $r13, $r24, $r32, $r35;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r15, $r16, $r18, $r19;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        java.lang.AssertionError $r25;
        int $i0, $i1, $i2;
        java.lang.String $r14, $r20, $r28, $r31, $r34, $r36;
        org.apache.cxf.transport.https.CertConstraints $r23;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r21, $r22;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory $r2, $r27;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        $r2 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory serverEngineFactory>;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl>;

        $i0 = virtualinvoke $r1.<java.net.URL: int getPort()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)>($i0);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine> = $r3;

        $r4 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        if $r4 != null goto label1;

        $r27 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory serverEngineFactory>;

        $r26 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl>;

        $r28 = virtualinvoke $r26.<java.net.URL: java.lang.String getHost()>();

        $r29 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl>;

        $i2 = virtualinvoke $r29.<java.net.URL: int getPort()>();

        $r30 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl>;

        $r31 = virtualinvoke $r30.<java.net.URL: java.lang.String getProtocol()>();

        $r32 = virtualinvoke $r27.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)>($r28, $i2, $r31);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine> = $r32;

     label1:
        $z0 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r24 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        if $r24 != null goto label2;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label2:
        $r5 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        $r6 = virtualinvoke $r5.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters()>();

        if $r6 == null goto label3;

        $r21 = virtualinvoke $r6.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.CertificateConstraintsType getCertConstraints()>();

        if $r21 == null goto label3;

        $r22 = virtualinvoke $r6.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.CertificateConstraintsType getCertConstraints()>();

        if $r22 == null goto label3;

        $r23 = staticinvoke <org.apache.cxf.transport.https.CertConstraintsJaxBUtils: org.apache.cxf.transport.https.CertConstraints createCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r22);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.https.CertConstraints certConstraints> = $r23;

     label3:
        $r33 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl>;

        $r34 = virtualinvoke $r33.<java.net.URL: java.lang.String getProtocol()>();

        $r35 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        $r36 = virtualinvoke $r35.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String getProtocol()>();

        $z1 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z1 != 0 goto label4;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Port ");

        $r10 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        $i1 = virtualinvoke $r10.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int getPort()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is configured with wrong protocol \"");

        $r13 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        $r14 = virtualinvoke $r13.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String getProtocol()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" for \"");

        $r17 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r7;

     label4:
        return;
    }

    public void finalizeConfig()
    {
        java.lang.AssertionError $r1;
        java.lang.RuntimeException $r3;
        java.lang.String $r4;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        java.lang.Exception $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        $z0 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: boolean configFinalized>;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: void retrieveEngine()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r2);

        throw $r3;

     label4:
        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: boolean configFinalized> = 1;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void activate()
    {
        org.apache.cxf.service.model.EndpointInfo $r4;
        java.net.URL $r3;
        java.util.logging.Logger $r2;
        java.lang.Exception $r8;
        java.util.logging.Level $r1;
        org.apache.cxf.interceptor.Fault $r9;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine $r7;
        java.lang.String $r5;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        org.apache.cxf.transport.http_jetty.JettyHTTPHandler $r6;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        specialinvoke r0.<org.apache.cxf.transport.http.AbstractHTTPDestination: void activate()>();

        $r2 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r1 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r2.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r1, "Activating receipt of incoming messages");

     label1:
        $r3 = new java.net.URL;

        $r4 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.EndpointInfo: java.lang.String getAddress()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r9.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r7 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        $r6 = new org.apache.cxf.transport.http_jetty.JettyHTTPHandler;

        $z0 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: boolean contextMatchOnExact()>();

        specialinvoke $r6.<org.apache.cxf.transport.http_jetty.JettyHTTPHandler: void <init>(org.apache.cxf.transport.http_jetty.JettyHTTPDestination,boolean)>(r0, $z0);

        virtualinvoke $r7.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)>($r3, $r6);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void deactivate()
    {
        java.net.URL $r3;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine $r4;
        java.util.logging.Logger $r2;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        java.util.logging.Level $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        specialinvoke r0.<org.apache.cxf.transport.http.AbstractHTTPDestination: void deactivate()>();

        $r2 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r1 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r2.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r1, "Deactivating receipt of incoming messages");

        $r4 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        $r3 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.net.URL nurl>;

        virtualinvoke $r4.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void removeServant(java.net.URL)>($r3);

        return;
    }

    protected java.lang.String getBasePathForFullAddress(java.lang.String)
    {
        java.net.MalformedURLException $r3;
        java.net.URL $r0;
        java.lang.String r1, $r2;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r4;

        r4 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private java.lang.String removeTrailingSeparator(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String r0, $r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r2;

        r2 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if $i1 != $i3 goto label1;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        return $r1;

     label1:
        return r0;
    }

    private synchronized java.lang.String updateEndpointAddress(java.lang.String)
    {
        org.apache.cxf.service.model.EndpointInfo $r1, $r9;
        java.lang.String $r2, $r3, $r4, r5, $r6, $r7, $r8;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.service.model.EndpointInfo: java.lang.String getAddress()>();

        $r3 = specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.String removeTrailingSeparator(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.String getBasePathForFullAddress(java.lang.String)>($r3);

        $r6 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.String getBasePathForFullAddress(java.lang.String)>(r5);

        $r7 = specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.String getStem(java.lang.String)>($r6);

        $r8 = specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.String removeTrailingSeparator(java.lang.String)>($r7);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        virtualinvoke $r9.<org.apache.cxf.service.model.EndpointInfo: void setAddress(java.lang.String)>(r5);

     label1:
        return $r3;
    }

    protected void doService(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServletResponse r2;
        javax.servlet.ServletContext $r3;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r3 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: javax.servlet.ServletContext servletContext>;

        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r3, r1, r2);

        return;
    }

    static org.eclipse.jetty.io.AbstractConnection getConnectionForRequest(org.eclipse.jetty.server.Request)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.Object[] $r4;
        java.lang.Class[] $r2;
        org.eclipse.jetty.io.AbstractConnection $r6;
        java.lang.Exception $r7;
        java.lang.Class $r1;
        java.lang.Object $r5;
        java.lang.reflect.Method $r3;

        r0 := @parameter0: org.eclipse.jetty.server.Request;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getConnection", $r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r4);

        $r6 = (org.eclipse.jetty.io.AbstractConnection) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void setHeadFalse(org.eclipse.jetty.io.AbstractConnection)
    {
        java.lang.Object[] $r4;
        java.lang.Class[] $r2;
        org.eclipse.jetty.io.AbstractConnection r0;
        java.lang.Exception $r6;
        org.eclipse.jetty.http.Generator r8;
        java.lang.Class $r1;
        java.lang.Object $r5;
        java.lang.reflect.Method $r3;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r7;

        r7 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r0 := @parameter0: org.eclipse.jetty.io.AbstractConnection;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getGenerator", $r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r4);

        r8 = (org.eclipse.jetty.http.Generator) $r5;

        interfaceinvoke r8.<org.eclipse.jetty.http.Generator: void setHead(boolean)>(0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void doService(javax.servlet.ServletContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        org.eclipse.jetty.server.Request r2, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.cxf.transports.http.QueryHandler r23;
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy $r35, $r47;
        org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder r50;
        org.eclipse.jetty.io.AbstractConnection $r37;
        java.util.logging.Logger $r44;
        java.lang.Exception $r42;
        java.util.List $r20;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;
        java.lang.ClassLoader $r10, $r53;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r1;
        org.apache.cxf.Bus $r5, $r9, $r39, $r51, $r52;
        java.lang.Throwable $r38, $r40, $r41;
        java.util.logging.Level $r43;
        org.apache.cxf.transports.http.QueryHandlerRegistry r48;
        javax.servlet.http.HttpServletRequest r0;
        javax.servlet.ServletOutputStream $r31, $r32;
        java.lang.StringBuffer $r11;
        java.lang.String $r3, $r4, $r7, $r12, $r16, $r18, $r19, $r27, $r28, $r36, r49;
        org.apache.cxf.service.model.EndpointInfo $r24, $r26, $r29, $r30, $r34;
        java.util.Iterator $r21;
        javax.servlet.http.HttpServletResponse r8;
        org.apache.cxf.transports.http.StemMatchingQueryHandler $r33;
        java.lang.Object $r6, $r22;
        javax.servlet.ServletContext r45;
        org.apache.cxf.io.CachedOutputStream $r25;

        r1 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r45 := @parameter0: javax.servlet.ServletContext;

        r0 := @parameter1: javax.servlet.http.HttpServletRequest;

        r8 := @parameter2: javax.servlet.http.HttpServletResponse;

        if r45 != null goto label01;

        r45 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: javax.servlet.ServletContext servletContext>;

     label01:
        $z0 = r0 instanceof org.eclipse.jetty.server.Request;

        if $z0 == 0 goto label02;

        $r46 = (org.eclipse.jetty.server.Request) r0;

        goto label03;

     label02:
        $r46 = specialinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.eclipse.jetty.server.Request getCurrentRequest()>();

     label03:
        r2 = $r46;

        $r3 = "HEAD";

        $r4 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label04;

        $r37 = staticinvoke <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.eclipse.jetty.io.AbstractConnection getConnectionForRequest(org.eclipse.jetty.server.Request)>($r46);

        if $r37 == null goto label04;

        specialinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: void setHeadFalse(org.eclipse.jetty.io.AbstractConnection)>($r37);

     label04:
        $r47 = virtualinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer()>();

        $z5 = virtualinvoke $r47.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetRedirectURL()>();

        if $z5 == 0 goto label05;

        $r35 = virtualinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer()>();

        $r36 = virtualinvoke $r35.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getRedirectURL()>();

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>($r36);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        virtualinvoke r2.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label05:
        $r5 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.Bus bus>;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/transports/http/QueryHandlerRegistry;");

        r48 = (org.apache.cxf.transports.http.QueryHandlerRegistry) $r6;

        $r7 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        if null == $r7 goto label25;

        if r48 == null goto label25;

        $r11 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r16 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $r20 = interfaceinvoke r48.<org.apache.cxf.transports.http.QueryHandlerRegistry: java.util.List getHandlers()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label25;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.cxf.transports.http.QueryHandler) $r22;

        $z3 = r23 instanceof org.apache.cxf.transports.http.StemMatchingQueryHandler;

        if $z3 == 0 goto label07;

        $r33 = (org.apache.cxf.transports.http.StemMatchingQueryHandler) r23;

        $r34 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        $z4 = virtualinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: boolean contextMatchOnExact()>();

        $z6 = interfaceinvoke $r33.<org.apache.cxf.transports.http.StemMatchingQueryHandler: boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)>($r18, $r19, $r34, $z4);

        goto label08;

     label07:
        $r24 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        $z6 = interfaceinvoke r23.<org.apache.cxf.transports.http.QueryHandler: boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo)>($r18, $r19, $r24);

     label08:
        if $z6 == 0 goto label24;

        r49 = null;

        $r25 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r25.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

     label09:
        $r26 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        entermonitor $r26;

     label10:
        $r27 = specialinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.String updateEndpointAddress(java.lang.String)>($r12);

        $r28 = interfaceinvoke r23.<org.apache.cxf.transports.http.QueryHandler: java.lang.String getResponseContentType(java.lang.String,java.lang.String)>($r18, $r19);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r28);

     label11:
        $r29 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        interfaceinvoke r23.<org.apache.cxf.transports.http.QueryHandler: void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)>($r18, $r19, $r29, $r25);

     label12:
        goto label14;

     label13:
        $r42 := @caughtexception;

        $r44 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r43 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r44.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r43, "writeResponse failed: ", $r42);

        r49 = virtualinvoke $r42.<java.lang.Exception: java.lang.String getMessage()>();

     label14:
        $r30 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.service.model.EndpointInfo endpointInfo>;

        virtualinvoke $r30.<org.apache.cxf.service.model.EndpointInfo: void setAddress(java.lang.String)>($r27);

        exitmonitor $r26;

     label15:
        goto label18;

     label16:
        $r41 := @caughtexception;

        exitmonitor $r26;

     label17:
        throw $r41;

     label18:
        if r49 == null goto label19;

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(500, r49);

        goto label20;

     label19:
        $r31 = interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        virtualinvoke $r25.<org.apache.cxf.io.CachedOutputStream: void writeCacheTo(java.io.OutputStream)>($r31);

        $r32 = interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        virtualinvoke $r32.<javax.servlet.ServletOutputStream: void flush()>();

     label20:
        virtualinvoke $r25.<org.apache.cxf.io.CachedOutputStream: void close()>();

        goto label23;

     label21:
        $r40 := @caughtexception;

     label22:
        virtualinvoke $r25.<org.apache.cxf.io.CachedOutputStream: void close()>();

        throw $r40;

     label23:
        virtualinvoke r2.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label24:
        goto label06;

     label25:
        r50 = null;

        $r51 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.Bus bus>;

        $r52 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)>($r51);

     label26:
        $r53 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.ClassLoader loader>;

        if $r53 == null goto label27;

        $r10 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.lang.ClassLoader loader>;

        r50 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder setThreadContextClassloader(java.lang.ClassLoader)>($r10);

     label27:
        virtualinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r45, r0, r8);

     label28:
        $r9 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.Bus bus>;

        if $r52 == $r9 goto label29;

        staticinvoke <org.apache.cxf.BusFactory: void setThreadDefaultBus(org.apache.cxf.Bus)>($r52);

     label29:
        if r50 == null goto label34;

        virtualinvoke r50.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

        goto label34;

     label30:
        $r38 := @caughtexception;

     label31:
        $r39 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.Bus bus>;

        if $r52 == $r39 goto label32;

        staticinvoke <org.apache.cxf.BusFactory: void setThreadDefaultBus(org.apache.cxf.Bus)>($r52);

     label32:
        if r50 == null goto label33;

        virtualinvoke r50.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label33:
        throw $r38;

     label34:
        return;

        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label10 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label09 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label26 to label28 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    protected void serviceRequest(javax.servlet.ServletContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        org.eclipse.jetty.server.Request r2, $r51;
        java.lang.Thread $r13, $r24, $r33, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.message.ExchangeImpl $r17;
        java.util.logging.Logger $r4, $r9, $r11, $r22, $r29, $r31, $r43, $r45;
        org.apache.cxf.transport.MessageObserver $r6;
        java.lang.StringBuilder $r10, $r12, $r14, $r21, $r23, $r25, $r30, $r32, $r34, $r44, $r46, $r48;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r1;
        org.apache.cxf.message.MessageImpl $r16, $r19;
        java.lang.Throwable $r27, $r38;
        org.apache.cxf.transport.http.HTTPSession $r20;
        org.apache.cxf.continuations.SuspendedInvocationException $r40;
        java.util.logging.Level $r3, $r8, $r28, $r42;
        javax.servlet.http.HttpServletRequest r0;
        org.apache.cxf.interceptor.Fault $r37;
        java.lang.String $r15, $r26, $r35, $r49;
        org.apache.cxf.message.Message $r5, r52;
        javax.servlet.http.HttpServletResponse r7;
        java.lang.RuntimeException $r36, $r39, $r41, $r50;
        javax.servlet.ServletContext r18;

        r1 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r18 := @parameter0: javax.servlet.ServletContext;

        r0 := @parameter1: javax.servlet.http.HttpServletRequest;

        r7 := @parameter2: javax.servlet.http.HttpServletResponse;

        $z0 = r0 instanceof org.eclipse.jetty.server.Request;

        if $z0 == 0 goto label01;

        $r51 = (org.eclipse.jetty.server.Request) r0;

        goto label02;

     label01:
        $r51 = specialinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.eclipse.jetty.server.Request getCurrentRequest()>();

     label02:
        r2 = $r51;

        $r4 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r4.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r3);

        if $z1 == 0 goto label03;

        $r22 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service http request on thread: ");

        $r24 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.util.logging.Logger: void fine(java.lang.String)>($r26);

     label03:
        $r5 = virtualinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.message.Message retrieveFromContinuation(javax.servlet.http.HttpServletRequest)>(r0);

        r52 = $r5;

        if $r5 != null goto label04;

        $r16 = new org.apache.cxf.message.MessageImpl;

        specialinvoke $r16.<org.apache.cxf.message.MessageImpl: void <init>()>();

        r52 = $r16;

        $r17 = new org.apache.cxf.message.ExchangeImpl;

        specialinvoke $r17.<org.apache.cxf.message.ExchangeImpl: void <init>()>();

        virtualinvoke $r17.<org.apache.cxf.message.ExchangeImpl: void setInMessage(org.apache.cxf.message.Message)>($r16);

        virtualinvoke r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r16, r18, r0, r7);

        $r19 = (org.apache.cxf.message.MessageImpl) $r16;

        virtualinvoke $r19.<org.apache.cxf.message.MessageImpl: void setDestination(org.apache.cxf.transport.Destination)>(r1);

        $r20 = new org.apache.cxf.transport.http.HTTPSession;

        specialinvoke $r20.<org.apache.cxf.transport.http.HTTPSession: void <init>(javax.servlet.http.HttpServletRequest)>(r0);

        virtualinvoke $r17.<org.apache.cxf.message.ExchangeImpl: void setSession(org.apache.cxf.transport.Session)>($r20);

     label04:
        $r6 = r1.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.MessageObserver incomingObserver>;

        interfaceinvoke $r6.<org.apache.cxf.transport.MessageObserver: void onMessage(org.apache.cxf.message.Message)>(r52);

        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        virtualinvoke r2.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

     label05:
        $r9 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r8 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r9.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r8);

        if $z2 == 0 goto label14;

        $r11 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished servicing http request on thread: ");

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.logging.Logger: void fine(java.lang.String)>($r15);

        goto label14;

     label06:
        $r40 := @caughtexception;

        $r41 = virtualinvoke $r40.<org.apache.cxf.continuations.SuspendedInvocationException: java.lang.RuntimeException getRuntimeException()>();

        if $r41 == null goto label07;

        $r50 = virtualinvoke $r40.<org.apache.cxf.continuations.SuspendedInvocationException: java.lang.RuntimeException getRuntimeException()>();

        throw $r50;

     label07:
        $r43 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r42 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z5 = virtualinvoke $r43.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r42);

        if $z5 == 0 goto label14;

        $r45 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished servicing http request on thread: ");

        $r47 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.util.logging.Logger: void fine(java.lang.String)>($r49);

        goto label14;

     label08:
        $r37 := @caughtexception;

        $r38 = virtualinvoke $r37.<org.apache.cxf.interceptor.Fault: java.lang.Throwable getCause()>();

        $z4 = $r38 instanceof java.lang.RuntimeException;

        if $z4 == 0 goto label09;

        $r39 = (java.lang.RuntimeException) $r38;

        throw $r39;

     label09:
        throw $r37;

     label10:
        $r36 := @caughtexception;

        throw $r36;

     label11:
        $r27 := @caughtexception;

     label12:
        $r29 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r28 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r29.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r28);

        if $z3 == 0 goto label13;

        $r31 = <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished servicing http request on thread: ");

        $r33 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.util.logging.Logger: void fine(java.lang.String)>($r35);

     label13:
        throw $r27;

     label14:
        return;

        catch org.apache.cxf.continuations.SuspendedInvocationException from label04 to label05 with label06;
        catch org.apache.cxf.interceptor.Fault from label04 to label05 with label08;
        catch java.lang.RuntimeException from label04 to label05 with label10;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label12 with label11;
    }

    protected java.io.OutputStream flushHeaders(org.apache.cxf.message.Message, boolean) throws java.io.IOException
    {
        java.io.OutputStream $r2, $r3;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        boolean z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r1 := @parameter0: org.apache.cxf.message.Message;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.apache.cxf.transport.http.AbstractHTTPDestination: java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)>(r1, z0);

        $r3 = specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.io.OutputStream wrapOutput(java.io.OutputStream)>($r2);

        return $r3;
    }

    private java.io.OutputStream wrapOutput(java.io.OutputStream)
    {
        java.lang.Throwable $r2;
        java.io.OutputStream r4;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination$JettyOutputStream $r0;
        org.eclipse.jetty.server.AbstractHttpConnection$Output $r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r3;
        boolean $z0;

        r3 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r4 := @parameter0: java.io.OutputStream;

     label1:
        $z0 = r4 instanceof org.eclipse.jetty.server.AbstractHttpConnection$Output;

        if $z0 == 0 goto label2;

        $r0 = new org.apache.cxf.transport.http_jetty.JettyHTTPDestination$JettyOutputStream;

        $r1 = (org.eclipse.jetty.server.AbstractHttpConnection$Output) r4;

        specialinvoke $r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination$JettyOutputStream: void <init>(org.eclipse.jetty.server.AbstractHttpConnection$Output)>($r1);

        r4 = $r0;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public org.apache.cxf.transport.http_jetty.ServerEngine getEngine()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine $r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        return $r1;
    }

    private java.lang.String getStem(java.lang.String)
    {
        int $i0;
        java.lang.String r0, $r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r2;

        r2 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;
    }

    protected org.apache.cxf.message.Message retrieveFromContinuation(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Object $r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r3;

        r3 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("cxf.continuation.message");

        $r2 = (org.apache.cxf.message.Message) $r1;

        return $r2;
    }

    protected void setupContinuation(org.apache.cxf.message.Message, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        org.apache.cxf.message.Message r2;
        javax.servlet.http.HttpServletResponse r7;
        org.apache.cxf.transport.http_jetty.continuations.JettyContinuationProvider $r5;
        javax.servlet.http.HttpServletRequest r6;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine $r1;
        java.lang.Class $r3;
        java.lang.String $r4;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r2 := @parameter0: org.apache.cxf.message.Message;

        r6 := @parameter1: javax.servlet.http.HttpServletRequest;

        r7 := @parameter2: javax.servlet.http.HttpServletResponse;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine engine>;

        $z0 = virtualinvoke $r1.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: boolean getContinuationsEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = class "Lorg/apache/cxf/continuations/ContinuationProvider;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = new org.apache.cxf.transport.http_jetty.continuations.JettyContinuationProvider;

        specialinvoke $r5.<org.apache.cxf.transport.http_jetty.continuations.JettyContinuationProvider: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.message.Message)>(r6, r7, r2);

        interfaceinvoke r2.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label1:
        return;
    }

    private org.eclipse.jetty.io.AbstractConnection getCurrentConnection()
    {
        java.lang.Object[] $r13;
        java.lang.reflect.Method $r10, $r12;
        java.lang.reflect.AccessibleObject $r11;
        java.lang.Class[] $r9;
        org.eclipse.jetty.io.AbstractConnection $r15;
        java.lang.Exception $r4, $r5, $r6;
        java.lang.Class $r0, $r2, r8;
        java.lang.Object $r14;
        java.lang.ClassLoader $r1, $r3;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r7;

        r7 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        r8 = null;

     label01:
        $r0 = class "Lorg/eclipse/jetty/io/AbstractConnection;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r8 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>("org.eclipse.jetty.server.AbstractHttpConnection", $r1);

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

     label04:
        if r8 != null goto label08;

     label05:
        $r2 = class "Lorg/eclipse/jetty/io/AbstractConnection;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r8 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>("org.eclipse.jetty.server.HttpConnection", $r3);

     label06:
        goto label08;

     label07:
        $r5 := @caughtexception;

     label08:
        $r9 = newarray (java.lang.Class)[0];

        $r10 = virtualinvoke r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCurrentConnection", $r9);

        $r11 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r10);

        $r12 = (java.lang.reflect.Method) $r11;

        $r13 = newarray (java.lang.Object)[0];

        $r14 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);

        $r15 = (org.eclipse.jetty.io.AbstractConnection) $r14;

     label09:
        return $r15;

     label10:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private org.eclipse.jetty.server.Request getCurrentRequest()
    {
        org.eclipse.jetty.server.Request $r9;
        java.lang.reflect.AccessibleObject $r5;
        java.lang.Object[] $r6;
        java.lang.Class[] $r3;
        org.eclipse.jetty.io.AbstractConnection $r1;
        java.lang.Exception $r10;
        java.lang.Class $r2;
        java.lang.Object $r8;
        org.apache.cxf.transport.http_jetty.JettyHTTPDestination r0;
        java.lang.reflect.Method $r4, $r7;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPDestination;

        $r1 = specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPDestination: org.eclipse.jetty.io.AbstractConnection getCurrentConnection()>();

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getRequest", $r3);

        $r5 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r4);

        $r7 = (java.lang.reflect.Method) $r5;

        $r6 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r6);

        $r9 = (org.eclipse.jetty.server.Request) $r8;

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.util.logging.Logger $r1;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/cxf/transport/http_jetty/JettyHTTPDestination;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/transport/http_jetty/JettyHTTPDestination;");

        <org.apache.cxf.transport.http_jetty.JettyHTTPDestination: java.util.logging.Logger LOG> = $r1;

        return;
    }
}
