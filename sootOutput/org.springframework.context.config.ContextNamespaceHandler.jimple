public class org.springframework.context.config.ContextNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport
{

    public void <init>()
    {
        org.springframework.context.config.ContextNamespaceHandler r0;

        r0 := @this: org.springframework.context.config.ContextNamespaceHandler;

        specialinvoke r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: void <init>()>();

        return;
    }

    public void init()
    {
        org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser $r1;
        org.springframework.context.config.PropertyOverrideBeanDefinitionParser $r2;
        org.springframework.context.'annotation'.ComponentScanBeanDefinitionParser $r4;
        org.springframework.context.config.MBeanServerBeanDefinitionParser $r8;
        org.springframework.context.'annotation'.AnnotationConfigBeanDefinitionParser $r3;
        org.springframework.context.config.MBeanExportBeanDefinitionParser $r7;
        org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser $r5;
        org.springframework.context.config.ContextNamespaceHandler r0;
        org.springframework.context.config.SpringConfiguredBeanDefinitionParser $r6;

        r0 := @this: org.springframework.context.config.ContextNamespaceHandler;

        $r1 = new org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser;

        specialinvoke $r1.<org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("property-placeholder", $r1);

        $r2 = new org.springframework.context.config.PropertyOverrideBeanDefinitionParser;

        specialinvoke $r2.<org.springframework.context.config.PropertyOverrideBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("property-override", $r2);

        $r3 = new org.springframework.context.'annotation'.AnnotationConfigBeanDefinitionParser;

        specialinvoke $r3.<org.springframework.context.'annotation'.AnnotationConfigBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("annotation-config", $r3);

        $r4 = new org.springframework.context.'annotation'.ComponentScanBeanDefinitionParser;

        specialinvoke $r4.<org.springframework.context.'annotation'.ComponentScanBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("component-scan", $r4);

        $r5 = new org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser;

        specialinvoke $r5.<org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("load-time-weaver", $r5);

        $r6 = new org.springframework.context.config.SpringConfiguredBeanDefinitionParser;

        specialinvoke $r6.<org.springframework.context.config.SpringConfiguredBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("spring-configured", $r6);

        $r7 = new org.springframework.context.config.MBeanExportBeanDefinitionParser;

        specialinvoke $r7.<org.springframework.context.config.MBeanExportBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("mbean-export", $r7);

        $r8 = new org.springframework.context.config.MBeanServerBeanDefinitionParser;

        specialinvoke $r8.<org.springframework.context.config.MBeanServerBeanDefinitionParser: void <init>()>();

        virtualinvoke r0.<org.springframework.context.config.ContextNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("mbean-server", $r8);

        return;
    }
}
