public class org.apache.batik.bridge.svg12.BindableElementBridge extends org.apache.batik.bridge.AbstractGraphicsNodeBridge implements org.apache.batik.bridge.svg12.SVG12BridgeUpdateHandler
{

    public void <init>()
    {
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void <init>()>();

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        return "*";
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        return "*";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.svg12.BindableElementBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        $r0 = new org.apache.batik.bridge.svg12.BindableElementBridge;

        specialinvoke $r0.<org.apache.batik.bridge.svg12.BindableElementBridge: void <init>()>();

        return $r0;
    }

    public org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.w3c.dom.Element r0;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.svg12.BindableElementBridge r3;
        boolean $z0;
        org.apache.batik.gvt.CompositeGraphicsNode $r4;

        r3 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        $r2 = virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $z0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: boolean matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)>(r0, $r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<org.apache.batik.bridge.svg12.BindableElementBridge: org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)>(r1, r0, null);

        return $r4;
    }

    public org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.CompositeGraphicsNode)
    {
        org.apache.batik.gvt.CompositeGraphicsNode $r9, r11;
        org.apache.batik.dom.svg12.BindableElement r1;
        short $s1;
        org.w3c.dom.Node r13;
        int $i0, i2;
        org.apache.batik.bridge.svg12.BindableElementBridge r10;
        org.apache.batik.bridge.ScriptingEnvironment $r12;
        org.apache.batik.gvt.GraphicsNode $r7, $r8;
        org.apache.batik.bridge.GVTBuilder $r5;
        org.apache.batik.bridge.BridgeContext r3;
        org.w3c.dom.Element r0, $r2, $r6;
        org.apache.batik.bridge.UpdateManager $r4;

        r10 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        r3 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r11 := @parameter2: org.apache.batik.gvt.CompositeGraphicsNode;

        r1 = (org.apache.batik.dom.svg12.BindableElement) r0;

        $r2 = virtualinvoke r1.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblShadowTree()>();

        $r4 = virtualinvoke r3.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UpdateManager getUpdateManager()>();

        if $r4 != null goto label01;

        $r12 = null;

        goto label02;

     label01:
        $r12 = virtualinvoke $r4.<org.apache.batik.bridge.UpdateManager: org.apache.batik.bridge.ScriptingEnvironment getScriptingEnvironment()>();

     label02:
        if $r12 == null goto label03;

        if $r2 == null goto label03;

        virtualinvoke $r12.<org.apache.batik.bridge.ScriptingEnvironment: void addScriptingListeners(org.w3c.dom.Node)>($r2);

     label03:
        if r11 != null goto label04;

        $r9 = new org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke $r9.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        r11 = $r9;

        virtualinvoke r10.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r3, r0, $r9);

        goto label07;

     label04:
        $i0 = virtualinvoke r11.<org.apache.batik.gvt.CompositeGraphicsNode: int size()>();

        i2 = 0;

        goto label06;

     label05:
        virtualinvoke r11.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object remove(int)>(0);

        i2 = i2 + 1;

     label06:
        if i2 < $i0 goto label05;

     label07:
        $r5 = virtualinvoke r3.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        if $r2 == null goto label09;

        $r8 = virtualinvoke $r5.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r3, $r2);

        if $r8 == null goto label08;

        virtualinvoke r11.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>($r8);

     label08:
        goto label13;

     label09:
        r13 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label12;

     label10:
        $s1 = interfaceinvoke r13.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label11;

        $r6 = (org.w3c.dom.Element) r13;

        $r7 = virtualinvoke $r5.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r3, $r6);

        if $r7 == null goto label11;

        virtualinvoke r11.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>($r7);

     label11:
        r13 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label12:
        if r13 != null goto label10;

     label13:
        return r11;
    }

    public void dispose()
    {
        org.apache.batik.dom.svg12.BindableElement r2;
        org.w3c.dom.Element $r1;
        org.w3c.dom.Node $r3, $r4;
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        r2 = (org.apache.batik.dom.svg12.BindableElement) $r1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<org.apache.batik.dom.svg12.BindableElement: org.w3c.dom.Node getCSSFirstChild()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r2.<org.apache.batik.dom.svg12.BindableElement: org.w3c.dom.Node getCSSFirstChild()>();

        virtualinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void disposeTree(org.w3c.dom.Node)>($r4);

     label1:
        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void dispose()>();

        return;
    }

    protected org.apache.batik.gvt.GraphicsNode instantiateGraphicsNode()
    {
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        return null;
    }

    public boolean isComposite()
    {
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        return 0;
    }

    public void buildGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode)
    {
        org.w3c.dom.Element r2;
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        virtualinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void initializeDynamicSupport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r1, r2, r3);

        return;
    }

    public void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.gvt.GraphicsNode $r6;
        org.apache.batik.gvt.CompositeGraphicsNode $r7;
        org.apache.batik.dom.svg12.BindableElement r2;
        org.w3c.dom.Element $r1, $r3, $r8, $r10;
        org.w3c.dom.events.EventTarget $r5, $r9;
        org.apache.batik.bridge.svg12.BindableElementBridge r0;
        org.w3c.dom.events.MutationEvent r4;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        r4 := @parameter0: org.w3c.dom.events.MutationEvent;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        r2 = (org.apache.batik.dom.svg12.BindableElement) $r1;

        $r3 = virtualinvoke r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Element getXblShadowTree()>();

        if $r3 != null goto label1;

        $r5 = interfaceinvoke r4.<org.w3c.dom.events.Event: org.w3c.dom.events.EventTarget getTarget()>();

        $z0 = $r5 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        $r7 = (org.apache.batik.gvt.CompositeGraphicsNode) $r6;

        $r8 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r9 = interfaceinvoke r4.<org.w3c.dom.events.Event: org.w3c.dom.events.EventTarget getTarget()>();

        $r10 = (org.w3c.dom.Element) $r9;

        virtualinvoke r0.<org.apache.batik.bridge.svg12.BindableElementBridge: void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)>($r7, $r8, $r10);

     label1:
        return;
    }

    public void handleBindingEvent(org.w3c.dom.Element, org.w3c.dom.Element)
    {
        org.apache.batik.gvt.GraphicsNode $r1, $r3;
        org.apache.batik.gvt.CompositeGraphicsNode $r2;
        org.w3c.dom.Element $r4, $r5, $r7, r8, r9;
        org.w3c.dom.Node $r6;
        org.apache.batik.bridge.svg12.BindableElementBridge r0;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        r8 := @parameter0: org.w3c.dom.Element;

        r9 := @parameter1: org.w3c.dom.Element;

        $r1 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        $r3 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        virtualinvoke $r2.<org.apache.batik.gvt.CompositeGraphicsNode: boolean remove(java.lang.Object)>($r3);

        $r4 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        virtualinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void disposeTree(org.w3c.dom.Node)>($r4);

        $r5 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r7 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        virtualinvoke r0.<org.apache.batik.bridge.svg12.BindableElementBridge: void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)>($r2, $r6, $r7);

        return;
    }

    public void handleContentSelectionChangedEvent(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)
    {
        org.apache.batik.bridge.svg12.BindableElementBridge r0;
        org.apache.batik.bridge.svg12.ContentSelectionChangedEvent r1;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.svg12.ContentSelectionChangedEvent;

        return;
    }

    protected void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode, org.w3c.dom.Node, org.w3c.dom.Element)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r8, $r9;
        short $s0;
        org.w3c.dom.Node r10, r11;
        int $i1, i2, i3, $i5, $i7;
        org.apache.batik.bridge.svg12.BindableElementBridge r0;
        org.apache.batik.gvt.GraphicsNode $r5, r12;
        org.apache.batik.bridge.GVTBuilder $r2;
        org.apache.batik.bridge.BridgeContext $r1, $r4, $r7;
        org.w3c.dom.Element r3, r6;

        r0 := @this: org.apache.batik.bridge.svg12.BindableElementBridge;

        r8 := @parameter0: org.apache.batik.gvt.CompositeGraphicsNode;

        r10 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: org.w3c.dom.Element;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        $r4 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r5 = virtualinvoke $r2.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>($r4, r3);

        if $r5 != null goto label01;

        return;

     label01:
        $i5 = (int) -1;

        i2 = $i5;

        r11 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        goto label09;

     label02:
        $s0 = interfaceinvoke r11.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label03;

        goto label08;

     label03:
        r6 = (org.w3c.dom.Element) r11;

        $r7 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        r12 = virtualinvoke $r7.<org.apache.batik.bridge.BridgeContext: org.apache.batik.gvt.GraphicsNode getGraphicsNode(org.w3c.dom.Node)>(r6);

        goto label05;

     label04:
        r12 = interfaceinvoke r12.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

     label05:
        if r12 == null goto label06;

        $r9 = interfaceinvoke r12.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r9 != r8 goto label04;

     label06:
        if r12 != null goto label07;

        goto label08;

     label07:
        $i1 = virtualinvoke r8.<org.apache.batik.gvt.CompositeGraphicsNode: int indexOf(java.lang.Object)>(r12);

        i2 = $i1;

        $i7 = (int) -1;

        if $i1 != $i7 goto label10;

        goto label08;

     label08:
        r11 = interfaceinvoke r11.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label09:
        if r11 != null goto label02;

     label10:
        i3 = i2 + 1;

        virtualinvoke r8.<org.apache.batik.gvt.CompositeGraphicsNode: void add(int,java.lang.Object)>(i3, $r5);

        return;
    }
}
