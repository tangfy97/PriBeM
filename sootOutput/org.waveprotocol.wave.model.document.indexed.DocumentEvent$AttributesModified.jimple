public final class org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified extends org.waveprotocol.wave.model.document.indexed.DocumentEvent
{
    private final java.lang.Object element;
    private final java.util.Map oldValues;
    private final java.util.Map newValues;

    public void <init>(java.lang.Object, java.util.Map, java.util.Map)
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0;
        java.util.Map r4, r6, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r8, $r11;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type $r1;
        java.util.HashMap $r3, $r5;
        java.util.ArrayList $r7;
        java.lang.String r21, r25;
        java.util.Map$Entry r24, r26;
        java.util.Iterator $r9, $r10, $r12;
        java.lang.Object r2, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        r2 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.util.Map;

        r6 := @parameter2: java.util.Map;

        $r1 = <org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type: org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type ATTRIBUTES>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent: void <init>(org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type,org.waveprotocol.wave.model.document.indexed.DocumentEvent$1)>($r1, null);

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element> = r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>(r4);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>(r6);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r19 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>();

        r21 = (java.lang.String) $r20;

        $z4 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r21);

        if $z4 != 0 goto label2;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r21, null);

        goto label3;

     label2:
        $r22 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r21);

        $r23 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z5 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r22, $r23);

        if $z5 == 0 goto label3;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r21);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r21);

     label3:
        goto label1;

     label4:
        $r10 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r18 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r18;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r25);

        goto label5;

     label6:
        $r11 = virtualinvoke $r5.<java.util.HashMap: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r15 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z3 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r16);

        if $z3 != 0 goto label8;

        $r17 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, null);

     label8:
        goto label7;

     label9:
        $r13 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r3);

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues> = $r13;

        $r14 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues> = $r14;

        return;
    }

    public void <init>(java.lang.Object, org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        java.util.HashMap $r3, $r4;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type $r1;
        java.util.Map $r6, $r7;
        int $i0, i1;
        java.lang.Object r2;
        java.lang.String $r8, $r9, $r10, $r11;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r1 = <org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type: org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type ATTRIBUTES>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent: void <init>(org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type,org.waveprotocol.wave.model.document.indexed.DocumentEvent$1)>($r1, null);

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element> = r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r5.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i1 >= $i0 goto label3;

        $r8 = interfaceinvoke r5.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getOldValue(int)>(i1);

        $r9 = interfaceinvoke r5.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i1);

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean notEqual(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r5.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i1);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r8);

        $r11 = interfaceinvoke r5.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r9);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r3);

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues> = $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r4);

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues> = $r7;

        return;
    }

    public java.lang.Object getElement()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element>;

        return $r1;
    }

    public java.util.Map getOldValues()
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0;
        java.util.Map $r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        return $r1;
    }

    public java.util.Map getNewValues()
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0;
        java.util.Map $r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        return $r1;
    }

    public java.util.Set getChangedAttributes()
    {
        java.util.Set $r2;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0;
        java.util.Map $r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0;
        java.util.Map $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element>;

        if $r1 != null goto label1;

        $i5 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element>;

        $i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        $i4 = 31 + $i5;

        $i0 = 31 * $i4;

        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        if $r3 != null goto label3;

        $i6 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        $i6 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label4:
        $i3 = $i0 + $i6;

        $i1 = 31 * $i3;

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        if $r5 != null goto label5;

        $i7 = 0;

        goto label6;

     label5:
        $r6 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        $i7 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

     label6:
        $i2 = $i1 + $i7;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r0, r2;
        java.util.Map $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object r1, $r3, $r4, $r5, $r14;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified) r1;

        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element>;

        if $r3 != null goto label3;

        $r14 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element>;

        if $r14 == null goto label4;

        return 0;

     label3:
        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element>;

        $r4 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.lang.Object element>;

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        if $r6 != null goto label5;

        $r13 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        if $r13 == null goto label6;

        return 0;

     label5:
        $r8 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        $r7 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        $z2 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        $r9 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        if $r9 != null goto label7;

        $r12 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        if $r12 == null goto label8;

        return 0;

     label7:
        $r11 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        $r10 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        $z3 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified r2;
        java.util.Map $r3, $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        java.lang.String $r8;

        r2 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A:");

        $r3 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map oldValues>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r6 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AttributesModified: java.util.Map newValues>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
