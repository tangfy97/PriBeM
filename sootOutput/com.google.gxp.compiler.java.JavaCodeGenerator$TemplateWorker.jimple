public class com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker extends com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker
{
    private int varCounter;
    private final java.lang.String runtimeMessageSource;
    protected final java.util.Set anonymousSchemas;
    private static final int MAX_JAVA_STRING_LENGTH;
    private final com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor statementVisitor;
    private final com.google.gxp.compiler.base.ExpressionVisitor toExpressionVisitor;
    private final com.google.gxp.compiler.base.ExpressionVisitor toEscapableExpressionVisitor;
    protected final java.util.Deque instantiatedGxps;

    void <init>(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template, java.lang.String)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.Appendable r1;
        java.util.TreeSet $r4;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor $r7;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor $r6;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor $r5;
        com.google.gxp.compiler.alerts.AlertSink r2;
        java.lang.String r9;
        java.util.ArrayDeque $r8;
        com.google.gxp.compiler.base.Template r3;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Template;

        r9 := @parameter3: java.lang.String;

        specialinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template)>(r1, r2, r3);

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: int varCounter> = 0;

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.TreeSet newTreeSet()>();

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.Set anonymousSchemas> = $r4;

        $r5 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor getStatementVisitor()>();

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor statementVisitor> = $r5;

        $r6 = new com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor;

        specialinvoke $r6.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor: void <init>(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.java.JavaCodeGenerator$1)>(r0, null);

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.ExpressionVisitor toExpressionVisitor> = $r6;

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor getToEscapableExpressionVisitor()>();

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.ExpressionVisitor toEscapableExpressionVisitor> = $r7;

        $r8 = new java.util.ArrayDeque;

        specialinvoke $r8.<java.util.ArrayDeque: void <init>()>();

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.Deque instantiatedGxps> = $r8;

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String runtimeMessageSource> = r9;

        return;
    }

    public com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker createSubWorker(java.lang.Appendable)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker $r0, r2;
        com.google.gxp.compiler.alerts.AlertSink $r5;
        java.lang.Appendable r1;
        java.lang.String $r3;
        com.google.gxp.compiler.base.Template $r4;

        r2 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: java.lang.Appendable;

        $r0 = new com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r5 = r2.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r4 = r2.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r3 = r2.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String runtimeMessageSource>;

        specialinvoke $r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template,java.lang.String)>(r1, $r5, $r4, $r3);

        return $r0;
    }

    protected final java.lang.String createVarName(java.lang.String)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r5;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6;
        java.lang.String r2, $r7;

        r5 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gxp$");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $i0 = r5.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: int varCounter>;

        $i1 = $i0 + 1;

        r5.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: int varCounter> = $i1;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected java.lang.String getBaseClassName()
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        return "com.google.gxp.base.GxpTemplate";
    }

    protected void appendClass()
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.base.JavaAnnotation$Element $r1;
        java.lang.Object[] $r5;
        java.lang.Iterable $r3;
        com.google.gxp.compiler.base.OutputLanguage $r7;
        java.lang.String $r4, $r6, $r8;
        com.google.gxp.compiler.base.Template $r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r2 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r1 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element CLASS>;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.base.Template: java.lang.Iterable getJavaAnnotations(com.google.gxp.compiler.base.JavaAnnotation$Element)>($r1);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendAnnotations(java.lang.Iterable)>($r3);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendClassDecl()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine()>();

        $r4 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String runtimeMessageSource>;

        if $r4 == null goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVA>;

        $r6 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String runtimeMessageSource>;

        $r8 = virtualinvoke $r7.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String toStringLiteral(java.lang.String)>($r6);

        $r5[0] = $r8;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>("private static final String GXP$MESSAGE_SOURCE = %s;", $r5);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine()>();

     label1:
        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendWriteMethod()>();

        specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendDefaultAccessors()>();

        specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendParamConstructors()>();

        specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendAnonymousInterfaces()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendGetArgListMethod()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendGetGxpClosureMethod(boolean)>(1);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendInterface()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendInstance()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("}");

        return;
    }

    protected void appendClassDecl()
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition $r2;
        java.lang.Object[] $r3;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r5;
        java.lang.String $r6, $r7;
        com.google.gxp.compiler.base.Template $r1, $r4;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r3 = newarray (java.lang.Object)[2];

        $r4 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r5 = virtualinvoke $r4.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.TemplateName$FullyQualified getName()>();

        $r6 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getClassName(com.google.gxp.compiler.base.TemplateName)>($r5);

        $r3[0] = $r6;

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getBaseClassName()>();

        $r3[1] = $r7;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>($r2, "public class %s extends %s {", $r3);

        return;
    }

    private java.lang.String getAnonymousJavaType(com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r2;
        com.google.gxp.compiler.schema.Schema r3;
        java.lang.StringBuilder $r0, $r1, $r6;
        java.lang.String $r4, $r5, $r7;

        r2 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r3 := @parameter0: com.google.gxp.compiler.schema.Schema;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Anonymous");

        $r4 = virtualinvoke r3.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaType()>();

        $r5 = virtualinvoke r2.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getBaseName(java.lang.String)>($r4);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void appendAnonymousInterfaces()
    {
        com.google.gxp.compiler.schema.Schema r4;
        java.lang.String $r7, $r9, $r12, $r15;
        boolean $z0;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r11, $r13, $r14;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.Set anonymousSchemas>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.gxp.compiler.schema.Schema) $r3;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("private abstract static class ");

        $r7 = specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getAnonymousJavaType(com.google.gxp.compiler.schema.Schema)>(r4);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>($r9);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("    extends GxpTemplate.AnonymousGxpClosure");

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    implements ");

        $r12 = virtualinvoke r4.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaType()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>($r15);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("}");

        goto label1;

     label2:
        return;
    }

    private void appendDefaultAccessors()
    {
        com.google.gxp.compiler.base.Expression $r6, $r9, $r13;
        java.lang.Object[] $r11, $r16, $r17;
        com.google.gxp.compiler.base.Parameter r5;
        java.lang.String $r8, $r12, $r14, $r15, $r18;
        com.google.gxp.compiler.base.Template $r1;
        boolean $z0;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition $r10;
        java.util.Iterator $r3;
        com.google.gxp.compiler.base.Type $r7;
        java.util.List $r2;
        java.lang.Object $r4;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Template: java.util.List getAllParameters()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gxp.compiler.base.Parameter) $r4;

        $r6 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        if $r6 == null goto label2;

        $r7 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String toJavaType(com.google.gxp.compiler.base.Type)>($r7);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine()>();

        $r9 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        $r10 = virtualinvoke $r9.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r8;

        $r12 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        $r11[1] = $r12;

        $r13 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        $r14 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getJavaExpression(com.google.gxp.compiler.base.Expression)>($r13);

        $r11[2] = $r14;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>($r10, "private static final %s GXP_DEFAULT$%s = %s;", $r11);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine()>();

        $r15 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator: java.lang.String access$000(com.google.gxp.compiler.base.Parameter)>(r5);

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = $r8;

        $r16[1] = $r15;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>("public static %s %s() {", $r16);

        $r17 = newarray (java.lang.Object)[1];

        $r18 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        $r17[0] = $r18;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>("return GXP_DEFAULT$%s;", $r17);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("}");

     label2:
        goto label1;

     label3:
        return;
    }

    private void appendParamConstructors()
    {
        com.google.gxp.compiler.base.Expression $r6, $r16;
        java.lang.Object[] $r8;
        com.google.gxp.compiler.base.ExpressionVisitor $r17;
        com.google.gxp.compiler.base.Parameter r5;
        java.lang.String $r10, $r11, $r12, $r19, $r22;
        com.google.gxp.compiler.base.Template $r1;
        boolean $z0;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition $r7, $r13;
        java.util.Iterator $r3;
        com.google.gxp.compiler.base.Type $r9;
        java.util.List $r2;
        java.lang.Object $r4, $r18;
        java.lang.StringBuilder $r14, $r15, $r20, $r21;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Template: java.util.List getParameters()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gxp.compiler.base.Parameter) $r4;

        $r6 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getConstructor()>();

        if $r6 == null goto label2;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine()>();

        $r7 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r8 = newarray (java.lang.Object)[3];

        $r9 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String toJavaType(com.google.gxp.compiler.base.Type)>($r9);

        $r8[0] = $r10;

        $r11 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator: java.lang.String access$100(com.google.gxp.compiler.base.Parameter)>(r5);

        $r8[1] = $r11;

        $r12 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        $r8[2] = $r12;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>($r7, "public static %s %s(String %s) {", $r8);

        $r13 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("return ");

        $r16 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getConstructor()>();

        $r17 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.ExpressionVisitor toExpressionVisitor>;

        $r18 = virtualinvoke $r16.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r17);

        $r19 = (java.lang.String) $r18;

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.CharSequence)>($r13, $r22);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("}");

     label2:
        goto label1;

     label3:
        return;
    }

    private java.util.List getCallArguments(com.google.gxp.compiler.base.Callable, java.util.Map)
    {
        java.util.Map r10;
        com.google.gxp.compiler.base.Callable r2;
        boolean $z0, $z1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.base.Type $r13, $r15;
        com.google.gxp.compiler.base.FormalParameter r7;
        java.util.List $r4;
        java.lang.StringBuilder $r20, $r21, $r24, $r25, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r37, $r38;
        com.google.gxp.compiler.base.Expression $r14, $r16, $r17, $r18, $r22, $r26;
        java.util.ArrayList $r0;
        java.lang.String $r3, $r8, $r9, $r19, $r23, $r27, $r32, $r36, $r39;
        java.util.Iterator $r5;
        com.google.gxp.compiler.reparent.Attribute r12;
        java.lang.Object $r6, $r11;

        r1 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r2 := @parameter0: com.google.gxp.compiler.base.Callable;

        r10 := @parameter1: java.util.Map;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getCalleeName(com.google.gxp.compiler.base.Callable)>(r2);

        $r4 = interfaceinvoke r2.<com.google.gxp.compiler.base.Callable: java.util.List getParameters()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.google.gxp.compiler.base.FormalParameter) $r6;

        $r8 = virtualinvoke r7.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        $r9 = "this";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label6;

        $r11 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r12 = (com.google.gxp.compiler.reparent.Attribute) $r11;

        $r13 = virtualinvoke r7.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $r14 = virtualinvoke $r13.<com.google.gxp.compiler.base.Type: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        if $r14 != null goto label2;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r36 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator: java.lang.String access$200(com.google.gxp.compiler.base.FormalParameter)>(r7);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r15 = virtualinvoke r7.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $r16 = virtualinvoke $r15.<com.google.gxp.compiler.base.Type: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        $r39 = virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getJavaExpression(com.google.gxp.compiler.base.Expression)>($r16);

     label3:
        if r12 != null goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r39);

        goto label6;

     label4:
        $r17 = virtualinvoke r12.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getCondition()>();

        if $r17 == null goto label5;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r22 = virtualinvoke r12.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getCondition()>();

        $r23 = virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getJavaExpression(com.google.gxp.compiler.base.Expression)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ? ");

        $r26 = virtualinvoke r12.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r27 = virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getJavaExpression(com.google.gxp.compiler.base.Expression)>($r26);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r32);

        goto label6;

     label5:
        $r18 = virtualinvoke r12.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r19 = virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getJavaExpression(com.google.gxp.compiler.base.Expression)>($r18);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r19);

     label6:
        goto label1;

     label7:
        return $r0;
    }

    protected void appendWriteMethodBody()
    {
        com.google.gxp.compiler.base.Expression $r4;
        java.lang.Object[] $r8, $r9, $r11, $r16;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor $r5;
        java.lang.String $r6, $r7, $r14;
        com.google.gxp.compiler.base.Template $r1, $r3;
        boolean $z0, $z1, $z2;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition $r15;
        com.google.gxp.compiler.base.ThrowsDeclaration r13;
        java.util.Iterator $r10;
        java.util.List $r2;
        java.lang.Object $r12;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("final java.util.Locale gxp_locale = gxp_context.getLocale();");

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Template: java.util.List getThrowsDeclarations()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("try {");

     label1:
        $r3 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.Expression getContent()>();

        $r5 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor statementVisitor>;

        virtualinvoke $r4.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r5);

        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r6 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String createVarName(java.lang.String)>("runtimeException");

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String createVarName(java.lang.String)>("cause");

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r6;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>("} catch (com.google.gxp.base.GxpRuntimeException %s) {", $r8);

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r7;

        $r9[1] = $r6;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>("final java.lang.Throwable %s = %s.getCause();", $r9);

        $r10 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.google.gxp.compiler.base.ThrowsDeclaration) $r12;

        $r14 = virtualinvoke r13.<com.google.gxp.compiler.base.ThrowsDeclaration: java.lang.String getExceptionType()>();

        $r15 = virtualinvoke r13.<com.google.gxp.compiler.base.ThrowsDeclaration: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r16 = newarray (java.lang.Object)[4];

        $r16[0] = $r7;

        $r16[1] = $r14;

        $r16[2] = $r14;

        $r16[3] = $r7;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>($r15, "if (%s instanceof %s) throw (%s) %s;", $r16);

        goto label2;

     label3:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r6;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>("throw %s;", $r11);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("}");

     label4:
        return;
    }

    protected void writeExpression(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String r4, $r7;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r4 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gxp$out.append(");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.CharSequence)>(r1, $r7);

        return;
    }

    protected void writeString(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String)
    {
        int $i0, $i1, $i2, i3, $i5, $i7, $i9;
        java.lang.String r0, $r4, $r5, $r7, $r8;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.alerts.SourcePosition r2;
        com.google.gxp.compiler.base.OutputLanguage $r3, $r6;

        r1 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r2 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        i3 = 0;

     label1:
        $i1 = $i0 - i3;

        $i5 = (int) 65534;

        if $i1 <= $i5 goto label2;

        $r6 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVA>;

        $i7 = (int) 65534;

        $i2 = i3 + $i7;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i3, $i2);

        $r8 = virtualinvoke $r6.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String toStringLiteral(java.lang.String)>($r7);

        virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void writeExpression(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r2, $r8);

        $i9 = (int) 65534;

        i3 = i3 + $i9;

        goto label1;

     label2:
        $r3 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVA>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i3, $i0);

        $r5 = virtualinvoke $r3.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String toStringLiteral(java.lang.String)>($r4);

        virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void writeExpression(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r2, $r5);

     label3:
        return;
    }

    protected com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor getStatementVisitor()
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor $r0;

        r1 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r0 = new com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor;

        specialinvoke $r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor: void <init>(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)>(r1);

        return $r0;
    }

    protected java.lang.String getCalleeName(com.google.gxp.compiler.base.Callable)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r2;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$1 $r1;
        java.lang.Object $r3;
        java.lang.String $r4;
        com.google.gxp.compiler.base.Callable r0;

        r2 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r0 := @parameter0: com.google.gxp.compiler.base.Callable;

        $r1 = new com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$1;

        specialinvoke $r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$1: void <init>(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)>(r2);

        $r3 = interfaceinvoke r0.<com.google.gxp.compiler.base.Callable: java.lang.Object acceptCallableVisitor(com.google.gxp.compiler.base.CallableVisitor)>($r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    protected final java.lang.String getJavaExpression(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.base.Expression r0;
        com.google.gxp.compiler.base.ExpressionVisitor $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r1 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r0 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r2 = r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.ExpressionVisitor toExpressionVisitor>;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    protected final java.lang.String getEscapedString(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r4;
        com.google.gxp.compiler.base.Expression r1;
        java.lang.StringBuilder $r0;
        com.google.gxp.compiler.schema.Schema $r2;
        java.lang.String $r3, $r5, $r6;

        r4 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaAppender()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".INSTANCE.append(new java.lang.StringBuilder(), ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gxp_context");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = virtualinvoke r4.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getJavaExpression(com.google.gxp.compiler.base.Expression)>(r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").toString()");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String getEscapableExpression(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.base.Expression r0;
        com.google.gxp.compiler.base.ExpressionVisitor $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r1 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r0 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r2 = r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.ExpressionVisitor toEscapableExpressionVisitor>;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    protected com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor getToEscapableExpressionVisitor()
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor $r0;

        r1 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r0 = new com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor;

        specialinvoke $r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor: void <init>(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)>(r1);

        return $r0;
    }

    private java.lang.String toAnonymousClosure(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r1, $r2;
        com.google.gxp.compiler.base.Expression r3;
        java.util.Set $r4, $r5;
        java.lang.StringBuilder $r0;
        java.lang.String $r6;

        r1 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r3 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker createSubWorker(java.lang.Appendable)>($r0);

        specialinvoke $r2.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void toAnonymousClosureImpl(com.google.gxp.compiler.base.Expression)>(r3);

        $r5 = r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.Set anonymousSchemas>;

        $r4 = $r2.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.Set anonymousSchemas>;

        interfaceinvoke $r5.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void toAnonymousClosureImpl(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r1;
        java.lang.Object[] $r16;
        com.google.gxp.compiler.schema.Schema $r3, $r7;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor $r19;
        java.lang.String $r8, $r11, $r17, $r18;
        com.google.gxp.compiler.base.Template $r13;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition $r4, $r15;
        java.util.Set $r2;
        java.util.List $r14;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r12;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r2 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.Set anonymousSchemas>;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new ");

        $r7 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r8 = specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getAnonymousJavaType(com.google.gxp.compiler.schema.Schema)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() {");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.CharSequence)>($r4, $r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $r14 = virtualinvoke $r13.<com.google.gxp.compiler.base.Template: java.util.List getThrowsDeclarations()>();

        staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendJavaThrowsDeclaration(java.lang.StringBuilder,java.lang.Iterable)>($r12, $r14);

        $r15 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r16 = newarray (java.lang.Object)[2];

        $r17 = <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String GXP_SIG>;

        $r16[0] = $r17;

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16[1] = $r18;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>($r15, "protected void writeImpl(%s) %s {", $r16);

        $r19 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor statementVisitor>;

        virtualinvoke r1.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r19);

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>("}");

        return;
    }

    static void access$400(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.CharSequence r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.CharSequence)>(r1, r2);

        return;
    }

    static java.lang.String access$500(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.base.Expression r1;
        java.lang.String $r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getEscapableExpression(com.google.gxp.compiler.base.Expression)>(r1);

        return $r2;
    }

    static void access$600(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static void access$700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static void access$800(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static void access$900(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.CharSequence r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.CharSequence)>(r1, r2);

        return;
    }

    static void access$1000(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static void access$1100(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static void access$1200(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static void access$1300(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static void access$1400(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static void access$1500(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$1600(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static void access$1700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static void access$1800(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static void access$1900(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$2000(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static void access$2100(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static void access$2200(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static void access$2300(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$2400(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static void access$2500(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static void access$2600(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static void access$2700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$2800(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$2900(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$3000(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static void access$3100(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static void access$3200(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$3300(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static void access$3400(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static void access$3500(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static void access$3600(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static com.google.gxp.compiler.base.ExpressionVisitor access$3700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.base.ExpressionVisitor $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.ExpressionVisitor toExpressionVisitor>;

        return $r1;
    }

    static void access$3800(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static java.util.List access$3900(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.base.Callable, java.util.Map)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.util.List $r3;
        java.util.Map r2;
        com.google.gxp.compiler.base.Callable r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.base.Callable;

        r2 := @parameter2: java.util.Map;

        $r3 = specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.List getCallArguments(com.google.gxp.compiler.base.Callable,java.util.Map)>(r1, r2);

        return $r3;
    }

    static void access$4000(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.CharSequence r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.CharSequence)>(r1, r2);

        return;
    }

    static void access$4100(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.CharSequence)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void appendLine(java.lang.CharSequence)>(r1);

        return;
    }

    static java.lang.String access$4200(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String runtimeMessageSource>;

        return $r1;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$4300(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static void access$4400(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void formatLine(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$4500(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$4600(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static java.lang.String access$4700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.base.Expression r1;
        java.lang.String $r2;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String toAnonymousClosure(com.google.gxp.compiler.base.Expression)>(r1);

        return $r2;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$4800(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    static com.google.gxp.compiler.alerts.AlertSink access$5000(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink $r1;

        r0 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: int MAX_JAVA_STRING_LENGTH> = 65534;

        return;
    }
}
