public class org.codehaus.jackson.map.module.SimpleDeserializers extends java.lang.Object implements org.codehaus.jackson.map.Deserializers
{
    protected java.util.HashMap _classMappings;

    public void <init>()
    {
        org.codehaus.jackson.map.module.SimpleDeserializers r0;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings> = null;

        return;
    }

    public void addDeserializer(java.lang.Class, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.module.SimpleDeserializers r2;
        java.lang.Class r1;
        java.util.HashMap $r3, $r5, $r6;
        org.codehaus.jackson.map.JsonDeserializer r4;
        org.codehaus.jackson.map.type.ClassKey $r0;

        r2 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        $r0 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r0.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r1);

        $r3 = r2.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r3 != null goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r2.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings> = $r6;

     label1:
        $r5 = r2.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r4);

        return;
    }

    public org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializerProvider r8;
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r7;
        org.codehaus.jackson.map.BeanProperty r9;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        org.codehaus.jackson.map.TypeDeserializer r10;
        java.lang.Class $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.JsonDeserializer r11, $r12;
        org.codehaus.jackson.map.type.ClassKey $r2;
        org.codehaus.jackson.map.type.ArrayType r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: org.codehaus.jackson.map.type.ArrayType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        r10 := @parameter4: org.codehaus.jackson.map.TypeDeserializer;

        r11 := @parameter5: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r12 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.type.ArrayType: java.lang.Class getRawClass()>();

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r5);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r12 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

     label2:
        return $r12;
    }

    public org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializerProvider r8;
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r7;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        org.codehaus.jackson.type.JavaType r3;
        java.lang.Class $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        org.codehaus.jackson.map.type.ClassKey $r2;
        org.codehaus.jackson.map.BeanDescription r9;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: org.codehaus.jackson.type.JavaType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.BeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r11 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        $r5 = virtualinvoke r3.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r5);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r11 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

     label2:
        return $r11;
    }

    public org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializerProvider r8;
        org.codehaus.jackson.map.type.CollectionType r3;
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r7;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        org.codehaus.jackson.map.TypeDeserializer r11;
        java.lang.Class $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.JsonDeserializer r12, $r13;
        org.codehaus.jackson.map.type.ClassKey $r2;
        org.codehaus.jackson.map.BeanDescription r9;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: org.codehaus.jackson.map.type.CollectionType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.BeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.TypeDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.type.CollectionType: java.lang.Class getRawClass()>();

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r5);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r13 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

     label2:
        return $r13;
    }

    public org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.type.CollectionLikeType r3;
        org.codehaus.jackson.map.DeserializerProvider r8;
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r7;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        org.codehaus.jackson.map.TypeDeserializer r11;
        java.lang.Class $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.JsonDeserializer r12, $r13;
        org.codehaus.jackson.map.type.ClassKey $r2;
        org.codehaus.jackson.map.BeanDescription r9;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: org.codehaus.jackson.map.type.CollectionLikeType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.BeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.TypeDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class getRawClass()>();

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r5);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r13 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

     label2:
        return $r13;
    }

    public org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r6;
        org.codehaus.jackson.map.BeanProperty r8;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        java.lang.Class r3;
        java.lang.Object $r5;
        org.codehaus.jackson.map.JsonDeserializer $r9;
        org.codehaus.jackson.map.type.ClassKey $r2;
        org.codehaus.jackson.map.BeanDescription r7;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: java.lang.Class;

        r6 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r7 := @parameter2: org.codehaus.jackson.map.BeanDescription;

        r8 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r9 = (org.codehaus.jackson.map.JsonDeserializer) $r5;

     label2:
        return $r9;
    }

    public org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializerProvider r8;
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r7;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        org.codehaus.jackson.map.TypeDeserializer r12;
        org.codehaus.jackson.map.KeyDeserializer r11;
        org.codehaus.jackson.map.type.MapType r3;
        java.lang.Class $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.JsonDeserializer r13, $r14;
        org.codehaus.jackson.map.type.ClassKey $r2;
        org.codehaus.jackson.map.BeanDescription r9;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: org.codehaus.jackson.map.type.MapType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.BeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.KeyDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.TypeDeserializer;

        r13 := @parameter7: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r14 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.type.MapType: java.lang.Class getRawClass()>();

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r5);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r14 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

     label2:
        return $r14;
    }

    public org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializerProvider r8;
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r7;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        org.codehaus.jackson.map.TypeDeserializer r12;
        org.codehaus.jackson.map.type.MapLikeType r3;
        org.codehaus.jackson.map.KeyDeserializer r11;
        java.lang.Class $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.JsonDeserializer r13, $r14;
        org.codehaus.jackson.map.type.ClassKey $r2;
        org.codehaus.jackson.map.BeanDescription r9;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: org.codehaus.jackson.map.type.MapLikeType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.BeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.KeyDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.TypeDeserializer;

        r13 := @parameter7: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r14 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.type.MapLikeType: java.lang.Class getRawClass()>();

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>($r5);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r14 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

     label2:
        return $r14;
    }

    public org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.HashMap $r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig r6;
        org.codehaus.jackson.map.BeanProperty r7;
        org.codehaus.jackson.map.module.SimpleDeserializers r0;
        java.lang.Class r3;
        java.lang.Object $r5;
        org.codehaus.jackson.map.JsonDeserializer $r8;
        org.codehaus.jackson.map.type.ClassKey $r2;

        r0 := @this: org.codehaus.jackson.map.module.SimpleDeserializers;

        r3 := @parameter0: java.lang.Class;

        r6 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r7 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        if $r1 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleDeserializers: java.util.HashMap _classMappings>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r8 = (org.codehaus.jackson.map.JsonDeserializer) $r5;

     label2:
        return $r8;
    }
}
