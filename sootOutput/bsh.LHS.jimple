class bsh.LHS extends java.lang.Object implements bsh.ParserConstants, java.io.Serializable
{
    bsh.NameSpace nameSpace;
    boolean localVar;
    static final int VARIABLE;
    static final int FIELD;
    static final int PROPERTY;
    static final int INDEX;
    static final int METHOD_EVAL;
    int type;
    java.lang.String varName;
    java.lang.String propName;
    java.lang.reflect.Field field;
    java.lang.Object object;
    int index;

    void <init>(bsh.NameSpace, java.lang.String)
    {
        bsh.NameSpace r2;
        java.lang.Error $r1;
        java.lang.String r3;
        bsh.LHS r0;

        r0 := @this: bsh.LHS;

        r2 := @parameter0: bsh.NameSpace;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>("namespace lhs");

        throw $r1;
    }

    void <init>(bsh.NameSpace, java.lang.String, boolean)
    {
        bsh.NameSpace r2;
        java.lang.String r1;
        bsh.LHS r0;
        boolean z0;

        r0 := @this: bsh.LHS;

        r2 := @parameter0: bsh.NameSpace;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<bsh.LHS: int type> = 0;

        r0.<bsh.LHS: boolean localVar> = z0;

        r0.<bsh.LHS: java.lang.String varName> = r1;

        r0.<bsh.LHS: bsh.NameSpace nameSpace> = r2;

        return;
    }

    void <init>(java.lang.reflect.Field)
    {
        java.lang.reflect.Field r1;
        bsh.LHS r0;

        r0 := @this: bsh.LHS;

        r1 := @parameter0: java.lang.reflect.Field;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<bsh.LHS: int type> = 1;

        r0.<bsh.LHS: java.lang.Object object> = null;

        r0.<bsh.LHS: java.lang.reflect.Field field> = r1;

        return;
    }

    void <init>(java.lang.Object, java.lang.reflect.Field)
    {
        java.lang.Object r1;
        java.lang.reflect.Field r2;
        java.lang.NullPointerException $r3;
        bsh.LHS r0;

        r0 := @this: bsh.LHS;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Field;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("constructed empty LHS");

        throw $r3;

     label1:
        r0.<bsh.LHS: int type> = 1;

        r0.<bsh.LHS: java.lang.Object object> = r1;

        r0.<bsh.LHS: java.lang.reflect.Field field> = r2;

        return;
    }

    void <init>(java.lang.Object, java.lang.String)
    {
        java.lang.Object r1;
        java.lang.String r2;
        java.lang.NullPointerException $r3;
        bsh.LHS r0;

        r0 := @this: bsh.LHS;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("constructed empty LHS");

        throw $r3;

     label1:
        r0.<bsh.LHS: int type> = 2;

        r0.<bsh.LHS: java.lang.Object object> = r1;

        r0.<bsh.LHS: java.lang.String propName> = r2;

        return;
    }

    void <init>(java.lang.Object, int)
    {
        int i0;
        java.lang.Object r1;
        java.lang.NullPointerException $r2;
        bsh.LHS r0;

        r0 := @this: bsh.LHS;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("constructed empty LHS");

        throw $r2;

     label1:
        r0.<bsh.LHS: int type> = 3;

        r0.<bsh.LHS: java.lang.Object object> = r1;

        r0.<bsh.LHS: int index> = i0;

        return;
    }

    public java.lang.Object getValue() throws bsh.UtilEvalError
    {
        bsh.LHS r0;
        java.lang.IllegalAccessException $r30;
        java.lang.Exception $r16;
        bsh.InterpreterError $r1;
        bsh.NameSpace $r14;
        bsh.UtilEvalError $r17, $r24, $r31;
        java.lang.StringBuffer $r18, $r19, $r20, $r25, $r26, $r28, $r32, $r33, $r35;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r4, $r13, $r21, $r23, $r27, $r29, $r36;
        bsh.ReflectError $r22;
        java.lang.reflect.Field $r8, $r10, $r34;
        java.lang.Object $r2, $r3, $r5, $r6, $r7, $r9, $r12, $r15;
        java.lang.Class $r11;

        r0 := @this: bsh.LHS;

        $i0 = r0.<bsh.LHS: int type>;

        if $i0 != 0 goto label01;

        $r14 = r0.<bsh.LHS: bsh.NameSpace nameSpace>;

        $r13 = r0.<bsh.LHS: java.lang.String varName>;

        $r15 = virtualinvoke $r14.<bsh.NameSpace: java.lang.Object getVariable(java.lang.String)>($r13);

        return $r15;

     label01:
        $i1 = r0.<bsh.LHS: int type>;

        if $i1 != 1 goto label05;

     label02:
        $r8 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        $r7 = r0.<bsh.LHS: java.lang.Object object>;

        $r9 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r7);

        $r10 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        $r11 = virtualinvoke $r10.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r12 = staticinvoke <bsh.Primitive: java.lang.Object wrap(java.lang.Object,java.lang.Class)>($r9, $r11);

     label03:
        return $r12;

     label04:
        $r30 := @caughtexception;

        $r31 = new bsh.UtilEvalError;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t read field: ");

        $r34 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r31.<bsh.UtilEvalError: void <init>(java.lang.String)>($r36);

        throw $r31;

     label05:
        $i2 = r0.<bsh.LHS: int type>;

        if $i2 != 2 goto label09;

     label06:
        $r5 = r0.<bsh.LHS: java.lang.Object object>;

        $r4 = r0.<bsh.LHS: java.lang.String propName>;

        $r6 = staticinvoke <bsh.Reflect: java.lang.Object getObjectProperty(java.lang.Object,java.lang.String)>($r5, $r4);

     label07:
        return $r6;

     label08:
        $r22 := @caughtexception;

        $r23 = virtualinvoke $r22.<bsh.ReflectError: java.lang.String getMessage()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r23);

        $r24 = new bsh.UtilEvalError;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No such property: ");

        $r27 = r0.<bsh.LHS: java.lang.String propName>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<bsh.UtilEvalError: void <init>(java.lang.String)>($r29);

        throw $r24;

     label09:
        $i3 = r0.<bsh.LHS: int type>;

        if $i3 != 3 goto label13;

     label10:
        $r2 = r0.<bsh.LHS: java.lang.Object object>;

        $i4 = r0.<bsh.LHS: int index>;

        $r3 = staticinvoke <bsh.Reflect: java.lang.Object getIndex(java.lang.Object,int)>($r2, $i4);

     label11:
        return $r3;

     label12:
        $r16 := @caughtexception;

        $r17 = new bsh.UtilEvalError;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Array access: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r16);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<bsh.UtilEvalError: void <init>(java.lang.String)>($r21);

        throw $r17;

     label13:
        $r1 = new bsh.InterpreterError;

        specialinvoke $r1.<bsh.InterpreterError: void <init>(java.lang.String)>("LHS type");

        throw $r1;

        catch java.lang.IllegalAccessException from label02 to label03 with label04;
        catch bsh.ReflectError from label06 to label07 with label08;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public java.lang.Object assign(java.lang.Object, boolean) throws bsh.UtilEvalError
    {
        bsh.CollectionManager $r4;
        bsh.UtilTargetError $r25;
        bsh.LHS r0;
        java.lang.Exception $r18;
        bsh.InterpreterError $r1;
        bsh.NameSpace $r15, $r17;
        bsh.UtilEvalError $r19, $r32, $r40, $r52, $r62;
        java.lang.StringBuffer $r20, $r21, $r23, $r27, $r28, $r30, $r33, $r34, $r36, $r41, $r42, $r43, $r44, $r47, $r53, $r54, $r57, $r58, $r59, $r63, $r64, $r67, $r68;
        java.lang.String $r6, $r8, $r14, $r16, $r22, $r24, $r29, $r31, $r35, $r37, $r46, $r48, $r56, $r60, $r66, $r69, $r71, $r72;
        java.lang.reflect.Field $r10, $r12, $r45, $r55, $r65;
        java.lang.NullPointerException $r61;
        boolean $z0, $z1, $z2, z3, $z4;
        java.lang.IllegalAccessException $r51;
        int $i0, $i1, $i2, $i3, $i4;
        bsh.ReflectError $r26;
        java.lang.IllegalArgumentException $r38;
        bsh.Primitive $r13, $r49;
        java.lang.Object r2, $r3, $r5, $r7, $r9, $r11, $r70;
        java.lang.Class $r39, $r50;

        r0 := @this: bsh.LHS;

        r2 := @parameter0: java.lang.Object;

        z3 := @parameter1: boolean;

        $i0 = r0.<bsh.LHS: int type>;

        if $i0 != 0 goto label02;

        $z2 = r0.<bsh.LHS: boolean localVar>;

        if $z2 == 0 goto label01;

        $r17 = r0.<bsh.LHS: bsh.NameSpace nameSpace>;

        $r16 = r0.<bsh.LHS: java.lang.String varName>;

        virtualinvoke $r17.<bsh.NameSpace: void setLocalVariable(java.lang.String,java.lang.Object,boolean)>($r16, r2, z3);

        goto label24;

     label01:
        $r15 = r0.<bsh.LHS: bsh.NameSpace nameSpace>;

        $r14 = r0.<bsh.LHS: java.lang.String varName>;

        virtualinvoke $r15.<bsh.NameSpace: void setVariable(java.lang.String,java.lang.Object,boolean)>($r14, r2, z3);

        goto label24;

     label02:
        $i1 = r0.<bsh.LHS: int type>;

        if $i1 != 1 goto label14;

     label03:
        $z1 = r2 instanceof bsh.Primitive;

        if $z1 == 0 goto label04;

        $r13 = (bsh.Primitive) r2;

        $r70 = virtualinvoke $r13.<bsh.Primitive: java.lang.Object getValue()>();

        goto label05;

     label04:
        $r70 = r2;

     label05:
        $r10 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        staticinvoke <bsh.ReflectManager: boolean RMSetAccessible(java.lang.Object)>($r10);

        $r12 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        $r11 = r0.<bsh.LHS: java.lang.Object object>;

        virtualinvoke $r12.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r11, $r70);

     label06:
        return r2;

     label07:
        $r61 := @caughtexception;

        $r62 = new bsh.UtilEvalError;

        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LHS (");

        $r65 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        $r66 = virtualinvoke $r65.<java.lang.reflect.Field: java.lang.String getName()>();

        $r67 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not a static field.");

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r62.<bsh.UtilEvalError: void <init>(java.lang.String)>($r69);

        throw $r62;

     label08:
        $r51 := @caughtexception;

        $r52 = new bsh.UtilEvalError;

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LHS (");

        $r55 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        $r56 = virtualinvoke $r55.<java.lang.reflect.Field: java.lang.String getName()>();

        $r57 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") can\'t access field: ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r51);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r52.<bsh.UtilEvalError: void <init>(java.lang.String)>($r60);

        throw $r52;

     label09:
        $r38 := @caughtexception;

        $z4 = r2 instanceof bsh.Primitive;

        if $z4 == 0 goto label10;

        $r49 = (bsh.Primitive) r2;

        $r50 = virtualinvoke $r49.<bsh.Primitive: java.lang.Class getType()>();

        $r71 = virtualinvoke $r50.<java.lang.Class: java.lang.String getName()>();

        goto label11;

     label10:
        $r39 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r71 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

     label11:
        $r40 = new bsh.UtilEvalError;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Argument type mismatch. ");

        if r2 != null goto label12;

        $r72 = "null";

        goto label13;

     label12:
        $r72 = $r71;

     label13:
        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r72);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not assignable to field ");

        $r45 = r0.<bsh.LHS: java.lang.reflect.Field field>;

        $r46 = virtualinvoke $r45.<java.lang.reflect.Field: java.lang.String getName()>();

        $r47 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r40.<bsh.UtilEvalError: void <init>(java.lang.String)>($r48);

        throw $r40;

     label14:
        $i2 = r0.<bsh.LHS: int type>;

        if $i2 != 2 goto label18;

        $r4 = staticinvoke <bsh.CollectionManager: bsh.CollectionManager getCollectionManager()>();

        $r5 = r0.<bsh.LHS: java.lang.Object object>;

        $z0 = virtualinvoke $r4.<bsh.CollectionManager: boolean isMap(java.lang.Object)>($r5);

        if $z0 == 0 goto label15;

        $r9 = r0.<bsh.LHS: java.lang.Object object>;

        $r8 = r0.<bsh.LHS: java.lang.String propName>;

        virtualinvoke $r4.<bsh.CollectionManager: java.lang.Object putInMap(java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, r2);

        goto label24;

     label15:
        $r7 = r0.<bsh.LHS: java.lang.Object object>;

        $r6 = r0.<bsh.LHS: java.lang.String propName>;

        staticinvoke <bsh.Reflect: void setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object)>($r7, $r6, r2);

     label16:
        goto label24;

     label17:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Assignment: ");

        $r29 = virtualinvoke $r26.<bsh.ReflectError: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r31);

        $r32 = new bsh.UtilEvalError;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No such property: ");

        $r35 = r0.<bsh.LHS: java.lang.String propName>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<bsh.UtilEvalError: void <init>(java.lang.String)>($r37);

        throw $r32;

     label18:
        $i3 = r0.<bsh.LHS: int type>;

        if $i3 != 3 goto label23;

     label19:
        $r3 = r0.<bsh.LHS: java.lang.Object object>;

        $i4 = r0.<bsh.LHS: int index>;

        staticinvoke <bsh.Reflect: void setIndex(java.lang.Object,int,java.lang.Object)>($r3, $i4, r2);

     label20:
        goto label24;

     label21:
        $r25 := @caughtexception;

        throw $r25;

     label22:
        $r18 := @caughtexception;

        $r19 = new bsh.UtilEvalError;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Assignment: ");

        $r22 = virtualinvoke $r18.<java.lang.Exception: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<bsh.UtilEvalError: void <init>(java.lang.String)>($r24);

        throw $r19;

     label23:
        $r1 = new bsh.InterpreterError;

        specialinvoke $r1.<bsh.InterpreterError: void <init>(java.lang.String)>("unknown lhs");

        throw $r1;

     label24:
        return r2;

        catch java.lang.NullPointerException from label03 to label06 with label07;
        catch java.lang.IllegalAccessException from label03 to label06 with label08;
        catch java.lang.IllegalArgumentException from label03 to label06 with label09;
        catch bsh.ReflectError from label15 to label16 with label17;
        catch bsh.UtilTargetError from label19 to label20 with label21;
        catch java.lang.Exception from label19 to label20 with label22;
    }

    public java.lang.String toString()
    {
        bsh.NameSpace $r7, $r12;
        bsh.LHS r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r6, $r8, $r10, $r11, $r14, $r15, $r16, $r18, $r19, $r20, $r23;
        java.lang.String $r5, $r9, $r13, $r17, $r22, $r24, $r25, $r26;
        java.lang.reflect.Field $r3, $r21;

        r2 := @this: bsh.LHS;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LHS: ");

        $r3 = r2.<bsh.LHS: java.lang.reflect.Field field>;

        if $r3 == null goto label1;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("field = ");

        $r21 = r2.<bsh.LHS: java.lang.reflect.Field field>;

        $r22 = virtualinvoke $r21.<java.lang.reflect.Field: java.lang.String toString()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r24 = "";

     label2:
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r5 = r2.<bsh.LHS: java.lang.String varName>;

        if $r5 == null goto label3;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" varName = ");

        $r17 = r2.<bsh.LHS: java.lang.String varName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r25 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label3:
        $r25 = "";

     label4:
        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r7 = r2.<bsh.LHS: bsh.NameSpace nameSpace>;

        if $r7 == null goto label5;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" nameSpace = ");

        $r12 = r2.<bsh.LHS: bsh.NameSpace nameSpace>;

        $r13 = virtualinvoke $r12.<bsh.NameSpace: java.lang.String toString()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r26 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label5:
        $r26 = "";

     label6:
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public static void <clinit>()
    {
        <bsh.LHS: int METHOD_EVAL> = 4;

        <bsh.LHS: int INDEX> = 3;

        <bsh.LHS: int PROPERTY> = 2;

        <bsh.LHS: int FIELD> = 1;

        <bsh.LHS: int VARIABLE> = 0;

        return;
    }
}
