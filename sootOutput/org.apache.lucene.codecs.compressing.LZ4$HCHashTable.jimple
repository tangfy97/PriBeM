final class org.apache.lucene.codecs.compressing.LZ4$HCHashTable extends java.lang.Object
{
    static final int MAX_ATTEMPTS;
    static final int MASK;
    int nextToUpdate;
    private int base;
    private final int[] hashTable;
    private final short[] chainTable;

    void <init>()
    {
        int[] $r1;
        int $i1;
        short[] $r2;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r0;

        r0 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) 32768;

        $r1 = newarray (int)[$i1];

        r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int[] hashTable> = $r1;

        $r2 = newarray (short)[65536];

        r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: short[] chainTable> = $r2;

        return;
    }

    private void reset(int)
    {
        int[] $r1;
        int i0, $i2;
        short[] $r2;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r0;

        r0 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int base> = i0;

        r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int nextToUpdate> = i0;

        $r1 = r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int[] hashTable>;

        $i2 = (int) -1;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, $i2);

        $r2 = r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: short[] chainTable>;

        staticinvoke <java.util.Arrays: void fill(short[],short)>($r2, 0);

        return;
    }

    private int hashPointer(byte[], int)
    {
        byte[] r0;
        int[] $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r1;

        r1 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int access$200(byte[],int)>(r0, i0);

        $i2 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int access$300(int)>($i1);

        $i4 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int base>;

        $r2 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int[] hashTable>;

        $i3 = $r2[$i2];

        $i5 = $i4 + $i3;

        return $i5;
    }

    private int next(int)
    {
        short $s3;
        int i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i11;
        short[] $r1;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r0;

        r0 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int base>;

        $i5 = $i1 + i0;

        $r1 = r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: short[] chainTable>;

        $i8 = (int) 65535;

        $i2 = i0 & $i8;

        $s3 = $r1[$i2];

        $i9 = (int) $s3;

        $i11 = (int) 65535;

        $i4 = $i9 & $i11;

        $i6 = $i5 - $i4;

        return $i6;
    }

    private void addHash(byte[], int)
    {
        byte[] r0;
        short $s4;
        int[] $r2, $r4;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, i8, $i10, $i12;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r1;
        short[] $r3;

        r1 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int access$200(byte[],int)>(r0, i0);

        $i2 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int access$300(int)>($i1);

        $r2 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int[] hashTable>;

        $i3 = $r2[$i2];

        i8 = i0 - $i3;

        if i8 < 65536 goto label1;

        $i10 = (int) 65535;

        i8 = $i10;

     label1:
        $r3 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: short[] chainTable>;

        $i12 = (int) 65535;

        $i5 = i0 & $i12;

        $s4 = (short) i8;

        $r3[$i5] = $s4;

        $r4 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int[] hashTable>;

        $i6 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int base>;

        $i7 = i0 - $i6;

        $r4[$i2] = $i7;

        return;
    }

    void insert(int, byte[])
    {
        byte[] r1;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r0;

        r0 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

     label1:
        $i1 = r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int nextToUpdate>;

        if $i1 >= i0 goto label2;

        $i2 = r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int nextToUpdate>;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: void addHash(byte[],int)>(r1, $i2);

        $i3 = r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int nextToUpdate>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int nextToUpdate> = $i4;

        goto label1;

     label2:
        return;
    }

    boolean insertAndFindBestMatch(byte[], int, int, org.apache.lucene.codecs.compressing.LZ4$Match)
    {
        byte[] r2;
        org.apache.lucene.codecs.compressing.LZ4$Match r0;
        byte $b10, $b11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12, $i13, $i14, $i15, i16, $i17, i18, i19, $i20, $i21;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i12 := @parameter2: int;

        r0 := @parameter3: org.apache.lucene.codecs.compressing.LZ4$Match;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int start> = i0;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = 0;

        virtualinvoke r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: void insert(int,byte[])>(i0, r2);

        i18 = specialinvoke r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int hashPointer(byte[],int)>(r2, i0);

        i19 = 0;

     label1:
        if i19 >= 256 goto label4;

        $i4 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int base>;

        $i2 = i0 - 65536;

        $i3 = $i2 + 1;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

        if i18 >= $i5 goto label2;

        goto label4;

     label2:
        $i6 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i7 = i18 + $i6;

        $b11 = r2[$i7];

        $i8 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i9 = i0 + $i8;

        $b10 = r2[$i9];

        $i20 = (int) $b11;

        $i21 = (int) $b10;

        if $i20 != $i21 goto label3;

        $z0 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: boolean access$400(byte[],int,int)>(r2, i18, i0);

        if $z0 == 0 goto label3;

        $i14 = i18 + 4;

        $i13 = i0 + 4;

        $i15 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int access$500(byte[],int,int,int)>(r2, $i14, $i13, i12);

        i16 = 4 + $i15;

        $i17 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if i16 <= $i17 goto label3;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref> = i18;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = i16;

     label3:
        i18 = specialinvoke r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int next(int)>(i18);

        i19 = i19 + 1;

        goto label1;

     label4:
        $i1 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if $i1 == 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    boolean insertAndFindWiderMatch(byte[], int, int, int, int, org.apache.lucene.codecs.compressing.LZ4$Match)
    {
        byte[] r2;
        byte $b14, $b15;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r1;
        boolean $z0, $z1;
        org.apache.lucene.codecs.compressing.LZ4$Match r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i16, $i17, $i18, $i19, i20, $i21, $i22, i23, $i24, $i25, $i26, i27, i28, $i29, $i30;

        r1 := @this: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        r2 := @parameter0: byte[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i16 := @parameter3: int;

        i0 := @parameter4: int;

        r0 := @parameter5: org.apache.lucene.codecs.compressing.LZ4$Match;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = i0;

        virtualinvoke r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: void insert(int,byte[])>(i1, r2);

        i3 = i1 - i2;

        i27 = specialinvoke r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int hashPointer(byte[],int)>(r2, i1);

        i28 = 0;

     label1:
        if i28 >= 256 goto label4;

        $i7 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int base>;

        $i5 = i1 - 65536;

        $i6 = $i5 + 1;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);

        if i27 >= $i8 goto label2;

        goto label4;

     label2:
        $i10 = i27 - i3;

        $i9 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i11 = $i10 + $i9;

        $b15 = r2[$i11];

        $i12 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i13 = i2 + $i12;

        $b14 = r2[$i13];

        $i29 = (int) $b15;

        $i30 = (int) $b14;

        if $i29 != $i30 goto label3;

        $z0 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: boolean access$400(byte[],int,int)>(r2, i27, i1);

        if $z0 == 0 goto label3;

        $i18 = i27 + 4;

        $i17 = i1 + 4;

        $i19 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int access$500(byte[],int,int,int)>(r2, $i18, $i17, i16);

        i20 = 4 + $i19;

        $i21 = r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int base>;

        $i22 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int access$600(byte[],int,int,int,int)>(r2, i27, i1, $i21, i2);

        i23 = $i22 + i20;

        $i24 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if i23 <= $i24 goto label3;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = i23;

        $i25 = i27 - $i22;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref> = $i25;

        $i26 = i1 - $i22;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int start> = $i26;

     label3:
        i27 = specialinvoke r1.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int next(int)>(i27);

        i28 = i28 + 1;

        goto label1;

     label4:
        $i4 = r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if $i4 <= i0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    static void access$700(org.apache.lucene.codecs.compressing.LZ4$HCHashTable, int)
    {
        int i0;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r0;

        r0 := @parameter0: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: void reset(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int MASK> = 65535;

        <org.apache.lucene.codecs.compressing.LZ4$HCHashTable: int MAX_ATTEMPTS> = 256;

        return;
    }
}
