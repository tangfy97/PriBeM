public abstract class org.apache.commons.io.filefilter.AbstractFileFilter extends java.lang.Object implements org.apache.commons.io.filefilter.IOFileFilter
{

    public void <init>()
    {
        org.apache.commons.io.filefilter.AbstractFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.AbstractFileFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.AbstractFileFilter r0;
        java.lang.String $r3;
        java.io.File r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.AbstractFileFilter;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: boolean accept(java.io.File,java.lang.String)>($r2, $r3);

        return $z0;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        org.apache.commons.io.filefilter.AbstractFileFilter r0;
        java.lang.String r3;
        java.io.File $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.AbstractFileFilter;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, r3);

        $z0 = virtualinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: boolean accept(java.io.File)>($r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.filefilter.AbstractFileFilter r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.io.filefilter.AbstractFileFilter;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }
}
