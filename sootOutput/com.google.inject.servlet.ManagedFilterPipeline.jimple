class com.google.inject.servlet.ManagedFilterPipeline extends java.lang.Object implements com.google.inject.servlet.FilterPipeline
{
    private final com.google.inject.servlet.FilterDefinition[] filterDefinitions;
    private final com.google.inject.servlet.ManagedServletPipeline servletPipeline;
    private final com.google.inject.Provider servletContext;
    private final com.google.inject.Injector injector;
    private volatile boolean initialized;
    private static final com.google.inject.TypeLiteral FILTER_DEFS;

    public void <init>(com.google.inject.Injector, com.google.inject.servlet.ManagedServletPipeline, com.google.inject.Provider)
    {
        com.google.inject.Injector r1;
        com.google.inject.Provider r3;
        com.google.inject.servlet.ManagedFilterPipeline r0;
        com.google.inject.servlet.ManagedServletPipeline r2;
        com.google.inject.servlet.FilterDefinition[] $r4;

        r0 := @this: com.google.inject.servlet.ManagedFilterPipeline;

        r1 := @parameter0: com.google.inject.Injector;

        r2 := @parameter1: com.google.inject.servlet.ManagedServletPipeline;

        r3 := @parameter2: com.google.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.servlet.ManagedFilterPipeline: boolean initialized> = 0;

        r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.Injector injector> = r1;

        r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.ManagedServletPipeline servletPipeline> = r2;

        r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.Provider servletContext> = r3;

        $r4 = specialinvoke r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.FilterDefinition[] collectFilterDefinitions(com.google.inject.Injector)>(r1);

        r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.FilterDefinition[] filterDefinitions> = $r4;

        return;
    }

    private com.google.inject.servlet.FilterDefinition[] collectFilterDefinitions(com.google.inject.Injector)
    {
        java.lang.Object[] $r6;
        java.util.Iterator $r4;
        com.google.inject.servlet.ManagedFilterPipeline r12;
        com.google.inject.Binding r9;
        java.util.ArrayList $r0;
        com.google.inject.servlet.FilterDefinition[] $r5, $r7;
        com.google.inject.Injector r1;
        java.util.List $r3;
        com.google.inject.Provider $r10;
        int $i0;
        java.lang.Object $r8, $r11;
        com.google.inject.TypeLiteral $r2;
        boolean $z0;

        r12 := @this: com.google.inject.servlet.ManagedFilterPipeline;

        r1 := @parameter0: com.google.inject.Injector;

        $r0 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r2 = <com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.TypeLiteral FILTER_DEFS>;

        $r3 = interfaceinvoke r1.<com.google.inject.Injector: java.util.List findBindingsByType(com.google.inject.TypeLiteral)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.google.inject.Binding) $r8;

        $r10 = interfaceinvoke r9.<com.google.inject.Binding: com.google.inject.Provider getProvider()>();

        $r11 = interfaceinvoke $r10.<com.google.inject.Provider: java.lang.Object get()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r5 = newarray (com.google.inject.servlet.FilterDefinition)[$i0];

        $r6 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (com.google.inject.servlet.FilterDefinition[]) $r6;

        return $r7;
    }

    public synchronized void initPipeline(javax.servlet.ServletContext) throws javax.servlet.ServletException
    {
        java.util.IdentityHashMap $r1;
        com.google.inject.servlet.ManagedFilterPipeline r0;
        java.util.Set $r2;
        com.google.inject.servlet.FilterDefinition[] r3;
        com.google.inject.Injector $r5, $r8;
        com.google.inject.servlet.ManagedServletPipeline $r6;
        int i0, i1;
        javax.servlet.ServletContext r4;
        com.google.inject.servlet.FilterDefinition r7;
        boolean $z0;

        r0 := @this: com.google.inject.servlet.ManagedFilterPipeline;

        r4 := @parameter0: javax.servlet.ServletContext;

        $z0 = r0.<com.google.inject.servlet.ManagedFilterPipeline: boolean initialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.IdentityHashMap newIdentityHashMap()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.Set newSetFromMap(java.util.Map)>($r1);

        r3 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.FilterDefinition[] filterDefinitions>;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r7 = r3[i1];

        $r8 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.Injector injector>;

        virtualinvoke r7.<com.google.inject.servlet.FilterDefinition: void init(javax.servlet.ServletContext,com.google.inject.Injector,java.util.Set)>(r4, $r8, $r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r6 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.ManagedServletPipeline servletPipeline>;

        $r5 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.Injector injector>;

        virtualinvoke $r6.<com.google.inject.servlet.ManagedServletPipeline: void init(javax.servlet.ServletContext,com.google.inject.Injector)>(r4, $r5);

        r0.<com.google.inject.servlet.ManagedFilterPipeline: boolean initialized> = 1;

        return;
    }

    public void dispatch(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.FilterChain r2;
        javax.servlet.ServletRequest r5, $r7;
        com.google.inject.servlet.ManagedFilterPipeline r0;
        com.google.inject.servlet.FilterDefinition[] $r4;
        com.google.inject.Provider $r9;
        javax.servlet.ServletResponse r8;
        com.google.inject.servlet.ManagedServletPipeline $r3, $r6;
        java.lang.Object $r10;
        javax.servlet.ServletContext $r11;
        com.google.inject.servlet.FilterChainInvocation $r1;
        boolean $z0;

        r0 := @this: com.google.inject.servlet.ManagedFilterPipeline;

        r5 := @parameter0: javax.servlet.ServletRequest;

        r8 := @parameter1: javax.servlet.ServletResponse;

        r2 := @parameter2: javax.servlet.FilterChain;

        $z0 = r0.<com.google.inject.servlet.ManagedFilterPipeline: boolean initialized>;

        if $z0 != 0 goto label1;

        $r9 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.Provider servletContext>;

        $r10 = interfaceinvoke $r9.<com.google.inject.Provider: java.lang.Object get()>();

        $r11 = (javax.servlet.ServletContext) $r10;

        virtualinvoke r0.<com.google.inject.servlet.ManagedFilterPipeline: void initPipeline(javax.servlet.ServletContext)>($r11);

     label1:
        $r1 = new com.google.inject.servlet.FilterChainInvocation;

        $r4 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.FilterDefinition[] filterDefinitions>;

        $r3 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.ManagedServletPipeline servletPipeline>;

        specialinvoke $r1.<com.google.inject.servlet.FilterChainInvocation: void <init>(com.google.inject.servlet.FilterDefinition[],com.google.inject.servlet.ManagedServletPipeline,javax.servlet.FilterChain)>($r4, $r3, r2);

        $r6 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.ManagedServletPipeline servletPipeline>;

        $r7 = specialinvoke r0.<com.google.inject.servlet.ManagedFilterPipeline: javax.servlet.ServletRequest withDispatcher(javax.servlet.ServletRequest,com.google.inject.servlet.ManagedServletPipeline)>(r5, $r6);

        virtualinvoke $r1.<com.google.inject.servlet.FilterChainInvocation: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r7, r8);

        return;
    }

    private javax.servlet.ServletRequest withDispatcher(javax.servlet.ServletRequest, com.google.inject.servlet.ManagedServletPipeline)
    {
        javax.servlet.ServletRequest r0;
        javax.servlet.http.HttpServletRequest r1;
        com.google.inject.servlet.ManagedServletPipeline r2;
        com.google.inject.servlet.ManagedFilterPipeline r4;
        com.google.inject.servlet.ManagedFilterPipeline$1 $r3;
        boolean $z0;

        r4 := @this: com.google.inject.servlet.ManagedFilterPipeline;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: com.google.inject.servlet.ManagedServletPipeline;

        r1 = (javax.servlet.http.HttpServletRequest) r0;

        $z0 = virtualinvoke r2.<com.google.inject.servlet.ManagedServletPipeline: boolean hasServletsMapped()>();

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r3 = new com.google.inject.servlet.ManagedFilterPipeline$1;

        specialinvoke $r3.<com.google.inject.servlet.ManagedFilterPipeline$1: void <init>(com.google.inject.servlet.ManagedFilterPipeline,javax.servlet.http.HttpServletRequest,com.google.inject.servlet.ManagedServletPipeline)>(r4, r1, r2);

        return $r3;
    }

    public void destroyPipeline()
    {
        java.util.IdentityHashMap $r2;
        com.google.inject.servlet.ManagedFilterPipeline r0;
        java.util.Set $r3;
        com.google.inject.servlet.FilterDefinition[] r4;
        com.google.inject.servlet.ManagedServletPipeline $r1;
        int i0, i1;
        com.google.inject.servlet.FilterDefinition r5;

        r0 := @this: com.google.inject.servlet.ManagedFilterPipeline;

        $r1 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.ManagedServletPipeline servletPipeline>;

        virtualinvoke $r1.<com.google.inject.servlet.ManagedServletPipeline: void destroy()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.IdentityHashMap newIdentityHashMap()>();

        $r3 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.Set newSetFromMap(java.util.Map)>($r2);

        r4 = r0.<com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.servlet.FilterDefinition[] filterDefinitions>;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r4[i1];

        virtualinvoke r5.<com.google.inject.servlet.FilterDefinition: void destroy(java.util.Set)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        com.google.inject.TypeLiteral $r0;

        $r0 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.Class)>(class "Lcom/google/inject/servlet/FilterDefinition;");

        <com.google.inject.servlet.ManagedFilterPipeline: com.google.inject.TypeLiteral FILTER_DEFS> = $r0;

        return;
    }
}
