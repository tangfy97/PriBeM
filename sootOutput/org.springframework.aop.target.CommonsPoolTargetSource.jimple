public class org.springframework.aop.target.CommonsPoolTargetSource extends org.springframework.aop.target.AbstractPoolingTargetSource implements org.apache.commons.pool.PoolableObjectFactory
{
    private static final org.springframework.core.Constants constants;
    private int maxIdle;
    private int minIdle;
    private long maxWait;
    private long timeBetweenEvictionRunsMillis;
    private long minEvictableIdleTimeMillis;
    private byte whenExhaustedAction;
    private org.apache.commons.pool.ObjectPool pool;

    static void <clinit>()
    {
        org.springframework.core.Constants $r0;

        $r0 = new org.springframework.core.Constants;

        specialinvoke $r0.<org.springframework.core.Constants: void <init>(java.lang.Class)>(class "Lorg/apache/commons/pool/impl/GenericObjectPool;");

        <org.springframework.aop.target.CommonsPoolTargetSource: org.springframework.core.Constants constants> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        specialinvoke r0.<org.springframework.aop.target.AbstractPoolingTargetSource: void <init>()>();

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: int maxIdle> = 8;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: int minIdle> = 0;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: long maxWait> = -1L;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: long timeBetweenEvictionRunsMillis> = -1L;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: long minEvictableIdleTimeMillis> = 1800000L;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: byte whenExhaustedAction> = 1;

        virtualinvoke r0.<org.springframework.aop.target.CommonsPoolTargetSource: void setMaxSize(int)>(8);

        return;
    }

    public void setMaxIdle(int)
    {
        int i0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        i0 := @parameter0: int;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: int maxIdle> = i0;

        return;
    }

    public int getMaxIdle()
    {
        int $i0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $i0 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: int maxIdle>;

        return $i0;
    }

    public void setMinIdle(int)
    {
        int i0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        i0 := @parameter0: int;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: int minIdle> = i0;

        return;
    }

    public int getMinIdle()
    {
        int $i0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $i0 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: int minIdle>;

        return $i0;
    }

    public void setMaxWait(long)
    {
        long l0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        l0 := @parameter0: long;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: long maxWait> = l0;

        return;
    }

    public long getMaxWait()
    {
        long $l0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $l0 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: long maxWait>;

        return $l0;
    }

    public void setTimeBetweenEvictionRunsMillis(long)
    {
        long l0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        l0 := @parameter0: long;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: long timeBetweenEvictionRunsMillis> = l0;

        return;
    }

    public long getTimeBetweenEvictionRunsMillis()
    {
        long $l0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $l0 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: long timeBetweenEvictionRunsMillis>;

        return $l0;
    }

    public void setMinEvictableIdleTimeMillis(long)
    {
        long l0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        l0 := @parameter0: long;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: long minEvictableIdleTimeMillis> = l0;

        return;
    }

    public long getMinEvictableIdleTimeMillis()
    {
        long $l0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $l0 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: long minEvictableIdleTimeMillis>;

        return $l0;
    }

    public void setWhenExhaustedActionName(java.lang.String)
    {
        byte $b0;
        org.springframework.core.Constants $r2;
        java.lang.String r1;
        java.lang.Number $r3;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.springframework.aop.target.CommonsPoolTargetSource: org.springframework.core.Constants constants>;

        $r3 = virtualinvoke $r2.<org.springframework.core.Constants: java.lang.Number asNumber(java.lang.String)>(r1);

        $b0 = virtualinvoke $r3.<java.lang.Number: byte byteValue()>();

        virtualinvoke r0.<org.springframework.aop.target.CommonsPoolTargetSource: void setWhenExhaustedAction(byte)>($b0);

        return;
    }

    public void setWhenExhaustedAction(byte)
    {
        byte b0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        b0 := @parameter0: byte;

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: byte whenExhaustedAction> = b0;

        return;
    }

    public byte getWhenExhaustedAction()
    {
        byte $b0;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $b0 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: byte whenExhaustedAction>;

        return $b0;
    }

    protected final void createPool()
    {
        org.apache.commons.logging.Log $r1;
        org.apache.commons.pool.ObjectPool $r2;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $r1 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Creating Commons object pool");

        $r2 = virtualinvoke r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.pool.ObjectPool createObjectPool()>();

        r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.pool.ObjectPool pool> = $r2;

        return;
    }

    protected org.apache.commons.pool.ObjectPool createObjectPool()
    {
        org.apache.commons.pool.impl.GenericObjectPool $r2;
        org.apache.commons.pool.ObjectPool $r3;
        long $l3, $l4, $l5;
        org.springframework.aop.target.CommonsPoolTargetSource r1;
        byte $b6;
        int $i0, $i1, $i2;

        r1 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $r2 = new org.apache.commons.pool.impl.GenericObjectPool;

        specialinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void <init>(org.apache.commons.pool.PoolableObjectFactory)>(r1);

        $i0 = virtualinvoke r1.<org.springframework.aop.target.CommonsPoolTargetSource: int getMaxSize()>();

        virtualinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void setMaxActive(int)>($i0);

        $i1 = virtualinvoke r1.<org.springframework.aop.target.CommonsPoolTargetSource: int getMaxIdle()>();

        virtualinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void setMaxIdle(int)>($i1);

        $i2 = virtualinvoke r1.<org.springframework.aop.target.CommonsPoolTargetSource: int getMinIdle()>();

        virtualinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void setMinIdle(int)>($i2);

        $l3 = virtualinvoke r1.<org.springframework.aop.target.CommonsPoolTargetSource: long getMaxWait()>();

        virtualinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void setMaxWait(long)>($l3);

        $l4 = virtualinvoke r1.<org.springframework.aop.target.CommonsPoolTargetSource: long getTimeBetweenEvictionRunsMillis()>();

        virtualinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void setTimeBetweenEvictionRunsMillis(long)>($l4);

        $l5 = virtualinvoke r1.<org.springframework.aop.target.CommonsPoolTargetSource: long getMinEvictableIdleTimeMillis()>();

        virtualinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void setMinEvictableIdleTimeMillis(long)>($l5);

        $b6 = virtualinvoke r1.<org.springframework.aop.target.CommonsPoolTargetSource: byte getWhenExhaustedAction()>();

        virtualinvoke $r2.<org.apache.commons.pool.impl.GenericObjectPool: void setWhenExhaustedAction(byte)>($b6);

        $r3 = (org.apache.commons.pool.ObjectPool) $r2;

        return $r3;
    }

    public java.lang.Object getTarget() throws java.lang.Exception
    {
        java.lang.Object $r2;
        org.apache.commons.pool.ObjectPool $r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $r1 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.pool.ObjectPool pool>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.pool.ObjectPool: java.lang.Object borrowObject()>();

        return $r2;
    }

    public void releaseTarget(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object r1;
        org.apache.commons.pool.ObjectPool $r2;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.pool.ObjectPool pool>;

        interfaceinvoke $r2.<org.apache.commons.pool.ObjectPool: void returnObject(java.lang.Object)>(r1);

        return;
    }

    public int getActiveCount() throws java.lang.UnsupportedOperationException
    {
        int $i0;
        org.apache.commons.pool.ObjectPool $r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $r1 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.pool.ObjectPool pool>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.pool.ObjectPool: int getNumActive()>();

        return $i0;
    }

    public int getIdleCount() throws java.lang.UnsupportedOperationException
    {
        int $i0;
        org.apache.commons.pool.ObjectPool $r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $r1 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.pool.ObjectPool pool>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.pool.ObjectPool: int getNumIdle()>();

        return $i0;
    }

    public void destroy() throws java.lang.Exception
    {
        org.apache.commons.logging.Log $r1;
        org.apache.commons.pool.ObjectPool $r2;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $r1 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing Commons ObjectPool");

        $r2 = r0.<org.springframework.aop.target.CommonsPoolTargetSource: org.apache.commons.pool.ObjectPool pool>;

        interfaceinvoke $r2.<org.apache.commons.pool.ObjectPool: void close()>();

        return;
    }

    public java.lang.Object makeObject() throws org.springframework.beans.BeansException
    {
        java.lang.Object $r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        $r1 = virtualinvoke r0.<org.springframework.aop.target.CommonsPoolTargetSource: java.lang.Object newPrototypeInstance()>();

        return $r1;
    }

    public void destroyObject(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.springframework.aop.target.CommonsPoolTargetSource: void destroyPrototypeInstance(java.lang.Object)>(r1);

        return;
    }

    public boolean validateObject(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        r1 := @parameter0: java.lang.Object;

        return 1;
    }

    public void activateObject(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void passivateObject(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.aop.target.CommonsPoolTargetSource r0;

        r0 := @this: org.springframework.aop.target.CommonsPoolTargetSource;

        r1 := @parameter0: java.lang.Object;

        return;
    }
}
