public abstract class org.bouncycastle.crypto.PBEParametersGenerator extends java.lang.Object
{
    protected byte[] password;
    protected byte[] salt;
    protected int iterationCount;

    protected void <init>()
    {
        org.bouncycastle.crypto.PBEParametersGenerator r0;

        r0 := @this: org.bouncycastle.crypto.PBEParametersGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(byte[], byte[], int)
    {
        byte[] r1, r2;
        org.bouncycastle.crypto.PBEParametersGenerator r0;
        int i0;

        r0 := @this: org.bouncycastle.crypto.PBEParametersGenerator;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        r0.<org.bouncycastle.crypto.PBEParametersGenerator: byte[] password> = r1;

        r0.<org.bouncycastle.crypto.PBEParametersGenerator: byte[] salt> = r2;

        r0.<org.bouncycastle.crypto.PBEParametersGenerator: int iterationCount> = i0;

        return;
    }

    public byte[] getPassword()
    {
        byte[] $r1;
        org.bouncycastle.crypto.PBEParametersGenerator r0;

        r0 := @this: org.bouncycastle.crypto.PBEParametersGenerator;

        $r1 = r0.<org.bouncycastle.crypto.PBEParametersGenerator: byte[] password>;

        return $r1;
    }

    public byte[] getSalt()
    {
        byte[] $r1;
        org.bouncycastle.crypto.PBEParametersGenerator r0;

        r0 := @this: org.bouncycastle.crypto.PBEParametersGenerator;

        $r1 = r0.<org.bouncycastle.crypto.PBEParametersGenerator: byte[] salt>;

        return $r1;
    }

    public int getIterationCount()
    {
        int $i0;
        org.bouncycastle.crypto.PBEParametersGenerator r0;

        r0 := @this: org.bouncycastle.crypto.PBEParametersGenerator;

        $i0 = r0.<org.bouncycastle.crypto.PBEParametersGenerator: int iterationCount>;

        return $i0;
    }

    public abstract org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int);

    public abstract org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int);

    public abstract org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int);

    public static byte[] PKCS5PasswordToBytes(char[])
    {
        byte[] r1;
        byte $b3;
        int $i0, $i1, i4;
        char[] r0;
        char $c2;

        r0 := @parameter0: char[];

        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 == $i1 goto label2;

        $c2 = r0[i4];

        $b3 = (byte) $c2;

        r1[i4] = $b3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static byte[] PKCS5PasswordToUTF8Bytes(char[])
    {
        char[] r0;
        byte[] $r1;

        r0 := @parameter0: char[];

        $r1 = staticinvoke <org.bouncycastle.util.Strings: byte[] toUTF8ByteArray(char[])>(r0);

        return $r1;
    }

    public static byte[] PKCS12PasswordToBytes(char[])
    {
        byte[] $r1, r2;
        byte $b7, $b11;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i9, $i12, i13, $i14;
        char $c5, $c10;
        char[] r0;

        r0 := @parameter0: char[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label3;

        $i1 = lengthof r0;

        $i2 = $i1 + 1;

        $i3 = $i2 * 2;

        r2 = newarray (byte)[$i3];

        i13 = 0;

     label1:
        $i4 = lengthof r0;

        if i13 == $i4 goto label2;

        $i8 = i13 * 2;

        $c5 = r0[i13];

        $i14 = (int) $c5;

        $i6 = $i14 >>> 8;

        $b7 = (byte) $i6;

        r2[$i8] = $b7;

        $i9 = i13 * 2;

        $i12 = $i9 + 1;

        $c10 = r0[i13];

        $b11 = (byte) $c10;

        r2[$i12] = $b11;

        i13 = i13 + 1;

        goto label1;

     label2:
        return r2;

     label3:
        $r1 = newarray (byte)[0];

        return $r1;
    }
}
