public abstract class org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable extends org.apache.batik.ext.awt.image.renderable.AbstractRable
{
    protected boolean csLinear;

    protected void <init>()
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear> = 1;

        return;
    }

    protected void <init>(org.apache.batik.ext.awt.image.renderable.Filter)
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        org.apache.batik.ext.awt.image.renderable.Filter r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter)>(r1);

        r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear> = 1;

        return;
    }

    protected void <init>(org.apache.batik.ext.awt.image.renderable.Filter, java.util.Map)
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        org.apache.batik.ext.awt.image.renderable.Filter r1;
        java.util.Map r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r1, r2);

        r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear> = 1;

        return;
    }

    protected void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(java.util.List)>(r1);

        r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear> = 1;

        return;
    }

    protected void <init>(java.util.List, java.util.Map)
    {
        java.util.List r1;
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        java.util.Map r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(java.util.List,java.util.Map)>(r1, r2);

        r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear> = 1;

        return;
    }

    public boolean isColorSpaceLinear()
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        $z0 = r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear>;

        return $z0;
    }

    public void setColorSpaceLinear(boolean)
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear> = z0;

        return;
    }

    public java.awt.color.ColorSpace getOperationColorSpace()
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        java.awt.color.ColorSpace $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        $z0 = r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear>;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1004);

        return $r2;

     label1:
        $r1 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        return $r1;
    }

    protected org.apache.batik.ext.awt.image.rendered.CachableRed convertSourceCS(org.apache.batik.ext.awt.image.rendered.CachableRed)
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        r1 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        $z0 = r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: boolean csLinear>;

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed convertToLsRGB(org.apache.batik.ext.awt.image.rendered.CachableRed)>(r1);

        return $r3;

     label1:
        $r2 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed convertTosRGB(org.apache.batik.ext.awt.image.rendered.CachableRed)>(r1);

        return $r2;
    }

    protected org.apache.batik.ext.awt.image.rendered.CachableRed convertSourceCS(java.awt.image.RenderedImage)
    {
        org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable r0;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r2, $r3;
        java.awt.image.RenderedImage r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable;

        r1 := @parameter0: java.awt.image.RenderedImage;

        $r2 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)>(r1);

        $r3 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable: org.apache.batik.ext.awt.image.rendered.CachableRed convertSourceCS(org.apache.batik.ext.awt.image.rendered.CachableRed)>($r2);

        return $r3;
    }
}
