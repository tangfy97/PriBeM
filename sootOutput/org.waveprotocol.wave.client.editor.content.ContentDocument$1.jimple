class org.waveprotocol.wave.client.editor.content.ContentDocument$1 extends java.lang.Object implements org.waveprotocol.wave.model.operation.SilentOperationSink
{
    final org.waveprotocol.wave.client.editor.content.ContentDocument this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentDocument)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$1 r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentDocument;

        r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$1: org.waveprotocol.wave.client.editor.content.ContentDocument this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.operation.SilentOperationSink $r2;
        org.waveprotocol.wave.client.editor.content.ContentDocument$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOp r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$1;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$1: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.model.operation.SilentOperationSink access$100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        interfaceinvoke $r2.<org.waveprotocol.wave.model.operation.SilentOperationSink: void consume(org.waveprotocol.wave.model.operation.Operation)>(r3);

        $r4 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$1: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: void access$200(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r4);

        return;
    }

    public volatile void consume(org.waveprotocol.wave.model.operation.Operation)
    {
        org.waveprotocol.wave.model.operation.Operation r1;
        org.waveprotocol.wave.model.document.operation.DocOp $r2;
        org.waveprotocol.wave.client.editor.content.ContentDocument$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

        $r2 = (org.waveprotocol.wave.model.document.operation.DocOp) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$1: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>($r2);

        return;
    }
}
