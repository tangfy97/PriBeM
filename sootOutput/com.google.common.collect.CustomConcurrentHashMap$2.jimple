final class com.google.common.collect.CustomConcurrentHashMap$2 extends java.util.AbstractQueue
{

    void <init>()
    {
        com.google.common.collect.CustomConcurrentHashMap$2 r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        specialinvoke r0.<java.util.AbstractQueue: void <init>()>();

        return;
    }

    public boolean offer(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r1;
        com.google.common.collect.CustomConcurrentHashMap$2 r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        return 1;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry peek()
    {
        com.google.common.collect.CustomConcurrentHashMap$2 r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        return null;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry poll()
    {
        com.google.common.collect.CustomConcurrentHashMap$2 r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        return null;
    }

    public int size()
    {
        com.google.common.collect.CustomConcurrentHashMap$2 r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.UnmodifiableIterator $r0;
        com.google.common.collect.CustomConcurrentHashMap$2 r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        $r0 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>();

        return $r0;
    }

    public volatile java.lang.Object peek()
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r1;
        com.google.common.collect.CustomConcurrentHashMap$2 r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$2: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry peek()>();

        return $r1;
    }

    public volatile java.lang.Object poll()
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r1;
        com.google.common.collect.CustomConcurrentHashMap$2 r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$2: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry poll()>();

        return $r1;
    }

    public volatile boolean offer(java.lang.Object)
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r2;
        com.google.common.collect.CustomConcurrentHashMap$2 r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) r1;

        $z0 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$2: boolean offer(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)>($r2);

        return $z0;
    }
}
