public class groovy.util.ObjectGraphBuilder extends groovy.util.FactoryBuilderSupport
{
    public static final java.lang.String NODE_CLASS;
    public static final java.lang.String NODE_NAME;
    public static final java.lang.String OBJECT_ID;
    public static final java.lang.String LAZY_REF;
    private groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter;
    private groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver;
    private groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver;
    private groovy.util.ObjectGraphBuilder$NewInstanceResolver newInstanceResolver;
    private groovy.util.ObjectGraphBuilder$ObjectFactory objectFactory;
    private groovy.util.ObjectGraphBuilder$ObjectRefFactory objectRefFactory;
    private groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver;
    private groovy.util.ObjectGraphBuilder$RelationNameResolver relationNameResolver;
    private java.util.Map resolvedClasses;
    private java.lang.ClassLoader classLoader;
    private boolean lazyReferencesAllowed;
    private java.util.List lazyReferences;
    static java.lang.Class class$java$util$Collection;

    public void <init>()
    {
        groovy.util.ObjectGraphBuilder$1 $r11;
        groovy.util.ObjectGraphBuilder$DefaultNewInstanceResolver $r6;
        groovy.util.ObjectGraphBuilder$ObjectFactory $r1;
        java.util.HashMap $r3;
        groovy.util.ObjectGraphBuilder$DefaultReferenceResolver $r10;
        groovy.util.ObjectGraphBuilder$DefaultChildPropertySetter $r8;
        java.util.ArrayList $r4;
        groovy.util.ObjectGraphBuilder$DefaultClassNameResolver $r5;
        groovy.util.ObjectGraphBuilder$DefaultRelationNameResolver $r7;
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$ObjectRefFactory $r2;
        groovy.util.ObjectGraphBuilder$DefaultIdentifierResolver $r9;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void <init>()>();

        $r1 = new groovy.util.ObjectGraphBuilder$ObjectFactory;

        specialinvoke $r1.<groovy.util.ObjectGraphBuilder$ObjectFactory: void <init>(groovy.util.ObjectGraphBuilder$1)>(null);

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ObjectFactory objectFactory> = $r1;

        $r2 = new groovy.util.ObjectGraphBuilder$ObjectRefFactory;

        specialinvoke $r2.<groovy.util.ObjectGraphBuilder$ObjectRefFactory: void <init>(groovy.util.ObjectGraphBuilder$1)>(null);

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ObjectRefFactory objectRefFactory> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: java.util.Map resolvedClasses> = $r3;

        r0.<groovy.util.ObjectGraphBuilder: boolean lazyReferencesAllowed> = 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: java.util.List lazyReferences> = $r4;

        $r5 = new groovy.util.ObjectGraphBuilder$DefaultClassNameResolver;

        specialinvoke $r5.<groovy.util.ObjectGraphBuilder$DefaultClassNameResolver: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver> = $r5;

        $r6 = new groovy.util.ObjectGraphBuilder$DefaultNewInstanceResolver;

        specialinvoke $r6.<groovy.util.ObjectGraphBuilder$DefaultNewInstanceResolver: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$NewInstanceResolver newInstanceResolver> = $r6;

        $r7 = new groovy.util.ObjectGraphBuilder$DefaultRelationNameResolver;

        specialinvoke $r7.<groovy.util.ObjectGraphBuilder$DefaultRelationNameResolver: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$RelationNameResolver relationNameResolver> = $r7;

        $r8 = new groovy.util.ObjectGraphBuilder$DefaultChildPropertySetter;

        specialinvoke $r8.<groovy.util.ObjectGraphBuilder$DefaultChildPropertySetter: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter> = $r8;

        $r9 = new groovy.util.ObjectGraphBuilder$DefaultIdentifierResolver;

        specialinvoke $r9.<groovy.util.ObjectGraphBuilder$DefaultIdentifierResolver: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver> = $r9;

        $r10 = new groovy.util.ObjectGraphBuilder$DefaultReferenceResolver;

        specialinvoke $r10.<groovy.util.ObjectGraphBuilder$DefaultReferenceResolver: void <init>()>();

        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver> = $r10;

        $r11 = new groovy.util.ObjectGraphBuilder$1;

        specialinvoke $r11.<groovy.util.ObjectGraphBuilder$1: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object,java.lang.Object)>(r0, r0, r0);

        virtualinvoke r0.<groovy.util.ObjectGraphBuilder: groovy.lang.Closure addPostNodeCompletionDelegate(groovy.lang.Closure)>($r11);

        return;
    }

    public groovy.util.ObjectGraphBuilder$ChildPropertySetter getChildPropertySetter()
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$ChildPropertySetter $r1;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter>;

        return $r1;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        groovy.util.ObjectGraphBuilder r0;
        java.lang.ClassLoader $r1;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: java.lang.ClassLoader classLoader>;

        return $r1;
    }

    public groovy.util.ObjectGraphBuilder$ClassNameResolver getClassNameResolver()
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$ClassNameResolver $r1;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver>;

        return $r1;
    }

    public groovy.util.ObjectGraphBuilder$NewInstanceResolver getNewInstanceResolver()
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$NewInstanceResolver $r1;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$NewInstanceResolver newInstanceResolver>;

        return $r1;
    }

    public groovy.util.ObjectGraphBuilder$RelationNameResolver getRelationNameResolver()
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$RelationNameResolver $r1;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$RelationNameResolver relationNameResolver>;

        return $r1;
    }

    public boolean isLazyReferencesAllowed()
    {
        groovy.util.ObjectGraphBuilder r0;
        boolean $z0;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        $z0 = r0.<groovy.util.ObjectGraphBuilder: boolean lazyReferencesAllowed>;

        return $z0;
    }

    public void setChildPropertySetter(java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$2 $r3;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r0;
        groovy.util.ObjectGraphBuilder$DefaultChildPropertySetter $r2;
        boolean $z0, $z1;
        groovy.util.ObjectGraphBuilder$ChildPropertySetter $r4;

        r1 := @this: groovy.util.ObjectGraphBuilder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.util.ObjectGraphBuilder$ChildPropertySetter;

        if $z0 == 0 goto label1;

        $r4 = (groovy.util.ObjectGraphBuilder$ChildPropertySetter) r0;

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter> = $r4;

        goto label3;

     label1:
        $z1 = r0 instanceof groovy.lang.Closure;

        if $z1 == 0 goto label2;

        $r3 = new groovy.util.ObjectGraphBuilder$2;

        specialinvoke $r3.<groovy.util.ObjectGraphBuilder$2: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object,groovy.util.ObjectGraphBuilder)>(r1, r0, r1);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter> = $r3;

        goto label3;

     label2:
        $r2 = new groovy.util.ObjectGraphBuilder$DefaultChildPropertySetter;

        specialinvoke $r2.<groovy.util.ObjectGraphBuilder$DefaultChildPropertySetter: void <init>()>();

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter> = $r2;

     label3:
        return;
    }

    public void setClassLoader(java.lang.ClassLoader)
    {
        groovy.util.ObjectGraphBuilder r0;
        java.lang.ClassLoader r1;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<groovy.util.ObjectGraphBuilder: java.lang.ClassLoader classLoader> = r1;

        return;
    }

    public void setClassNameResolver(java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$3 $r4;
        groovy.util.ObjectGraphBuilder$4 $r3;
        groovy.util.ObjectGraphBuilder$DefaultClassNameResolver $r2;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r0;
        groovy.util.ObjectGraphBuilder$ClassNameResolver $r5;
        boolean $z0, $z1, $z2;

        r1 := @this: groovy.util.ObjectGraphBuilder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.util.ObjectGraphBuilder$ClassNameResolver;

        if $z0 == 0 goto label1;

        $r5 = (groovy.util.ObjectGraphBuilder$ClassNameResolver) r0;

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver> = $r5;

        goto label4;

     label1:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r4 = new groovy.util.ObjectGraphBuilder$3;

        specialinvoke $r4.<groovy.util.ObjectGraphBuilder$3: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object)>(r1, r0);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver> = $r4;

        goto label4;

     label2:
        $z2 = r0 instanceof groovy.lang.Closure;

        if $z2 == 0 goto label3;

        $r3 = new groovy.util.ObjectGraphBuilder$4;

        specialinvoke $r3.<groovy.util.ObjectGraphBuilder$4: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object,groovy.util.ObjectGraphBuilder)>(r1, r0, r1);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver> = $r3;

        goto label4;

     label3:
        $r2 = new groovy.util.ObjectGraphBuilder$DefaultClassNameResolver;

        specialinvoke $r2.<groovy.util.ObjectGraphBuilder$DefaultClassNameResolver: void <init>()>();

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver> = $r2;

     label4:
        return;
    }

    public void setIdentifierResolver(java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$IdentifierResolver $r5;
        groovy.util.ObjectGraphBuilder$6 $r3;
        groovy.util.ObjectGraphBuilder$5 $r4;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r0;
        groovy.util.ObjectGraphBuilder$DefaultIdentifierResolver $r2;
        boolean $z0, $z1, $z2;

        r1 := @this: groovy.util.ObjectGraphBuilder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.util.ObjectGraphBuilder$IdentifierResolver;

        if $z0 == 0 goto label1;

        $r5 = (groovy.util.ObjectGraphBuilder$IdentifierResolver) r0;

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver> = $r5;

        goto label4;

     label1:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r4 = new groovy.util.ObjectGraphBuilder$5;

        specialinvoke $r4.<groovy.util.ObjectGraphBuilder$5: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object)>(r1, r0);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver> = $r4;

        goto label4;

     label2:
        $z2 = r0 instanceof groovy.lang.Closure;

        if $z2 == 0 goto label3;

        $r3 = new groovy.util.ObjectGraphBuilder$6;

        specialinvoke $r3.<groovy.util.ObjectGraphBuilder$6: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object,groovy.util.ObjectGraphBuilder)>(r1, r0, r1);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver> = $r3;

        goto label4;

     label3:
        $r2 = new groovy.util.ObjectGraphBuilder$DefaultIdentifierResolver;

        specialinvoke $r2.<groovy.util.ObjectGraphBuilder$DefaultIdentifierResolver: void <init>()>();

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver> = $r2;

     label4:
        return;
    }

    public void setLazyReferencesAllowed(boolean)
    {
        groovy.util.ObjectGraphBuilder r0;
        boolean z0;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        z0 := @parameter0: boolean;

        r0.<groovy.util.ObjectGraphBuilder: boolean lazyReferencesAllowed> = z0;

        return;
    }

    public void setNewInstanceResolver(java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$NewInstanceResolver $r4;
        groovy.util.ObjectGraphBuilder$DefaultNewInstanceResolver $r2;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r0;
        groovy.util.ObjectGraphBuilder$7 $r3;
        boolean $z0, $z1;

        r1 := @this: groovy.util.ObjectGraphBuilder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.util.ObjectGraphBuilder$NewInstanceResolver;

        if $z0 == 0 goto label1;

        $r4 = (groovy.util.ObjectGraphBuilder$NewInstanceResolver) r0;

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$NewInstanceResolver newInstanceResolver> = $r4;

        goto label3;

     label1:
        $z1 = r0 instanceof groovy.lang.Closure;

        if $z1 == 0 goto label2;

        $r3 = new groovy.util.ObjectGraphBuilder$7;

        specialinvoke $r3.<groovy.util.ObjectGraphBuilder$7: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object,groovy.util.ObjectGraphBuilder)>(r1, r0, r1);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$NewInstanceResolver newInstanceResolver> = $r3;

        goto label3;

     label2:
        $r2 = new groovy.util.ObjectGraphBuilder$DefaultNewInstanceResolver;

        specialinvoke $r2.<groovy.util.ObjectGraphBuilder$DefaultNewInstanceResolver: void <init>()>();

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$NewInstanceResolver newInstanceResolver> = $r2;

     label3:
        return;
    }

    public void setReferenceResolver(java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$DefaultReferenceResolver $r2;
        groovy.util.ObjectGraphBuilder$9 $r3;
        groovy.util.ObjectGraphBuilder$8 $r4;
        groovy.util.ObjectGraphBuilder$ReferenceResolver $r5;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: groovy.util.ObjectGraphBuilder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.util.ObjectGraphBuilder$ReferenceResolver;

        if $z0 == 0 goto label1;

        $r5 = (groovy.util.ObjectGraphBuilder$ReferenceResolver) r0;

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver> = $r5;

        goto label4;

     label1:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r4 = new groovy.util.ObjectGraphBuilder$8;

        specialinvoke $r4.<groovy.util.ObjectGraphBuilder$8: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object)>(r1, r0);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver> = $r4;

        goto label4;

     label2:
        $z2 = r0 instanceof groovy.lang.Closure;

        if $z2 == 0 goto label3;

        $r3 = new groovy.util.ObjectGraphBuilder$9;

        specialinvoke $r3.<groovy.util.ObjectGraphBuilder$9: void <init>(groovy.util.ObjectGraphBuilder,java.lang.Object,groovy.util.ObjectGraphBuilder)>(r1, r0, r1);

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver> = $r3;

        goto label4;

     label3:
        $r2 = new groovy.util.ObjectGraphBuilder$DefaultReferenceResolver;

        specialinvoke $r2.<groovy.util.ObjectGraphBuilder$DefaultReferenceResolver: void <init>()>();

        r1.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver> = $r2;

     label4:
        return;
    }

    public void setRelationNameResolver(groovy.util.ObjectGraphBuilder$RelationNameResolver)
    {
        groovy.util.ObjectGraphBuilder$DefaultRelationNameResolver $r3;
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$RelationNameResolver r1, $r2;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        r1 := @parameter0: groovy.util.ObjectGraphBuilder$RelationNameResolver;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r3 = new groovy.util.ObjectGraphBuilder$DefaultRelationNameResolver;

        $r2 = $r3;

        specialinvoke $r3.<groovy.util.ObjectGraphBuilder$DefaultRelationNameResolver: void <init>()>();

     label2:
        r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$RelationNameResolver relationNameResolver> = $r2;

        return;
    }

    protected void postInstantiate(java.lang.Object, java.util.Map, java.lang.Object)
    {
        java.util.Map r2, $r4;
        groovy.util.ObjectGraphBuilder r0;
        java.lang.Object r1, r3, $r5;
        java.lang.String r6;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void postInstantiate(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, r3);

        $r4 = virtualinvoke r0.<groovy.util.ObjectGraphBuilder: java.util.Map getContext()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("_OBJECT_ID_");

        r6 = (java.lang.String) $r5;

        if r6 == null goto label1;

        if r3 == null goto label1;

        virtualinvoke r0.<groovy.util.ObjectGraphBuilder: void setVariable(java.lang.String,java.lang.Object)>(r6, r3);

     label1:
        return;
    }

    protected void preInstantiate(java.lang.Object, java.util.Map, java.lang.Object)
    {
        groovy.util.ObjectGraphBuilder$IdentifierResolver $r6;
        java.util.Map r2, $r4;
        groovy.util.ObjectGraphBuilder r0;
        java.lang.Object r1, r3, $r8;
        java.lang.String $r5, $r7;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.FactoryBuilderSupport: void preInstantiate(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, r3);

        $r4 = virtualinvoke r0.<groovy.util.ObjectGraphBuilder: java.util.Map getContext()>();

        $r6 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver>;

        $r5 = (java.lang.String) r1;

        $r7 = interfaceinvoke $r6.<groovy.util.ObjectGraphBuilder$IdentifierResolver: java.lang.String getIdentifierFor(java.lang.String)>($r5);

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("_OBJECT_ID_", $r8);

        return;
    }

    protected groovy.util.Factory resolveFactory(java.lang.Object, java.util.Map, java.lang.Object)
    {
        groovy.util.Factory $r4;
        groovy.util.ObjectGraphBuilder$ObjectFactory $r9;
        groovy.util.ObjectGraphBuilder$ReferenceResolver $r6;
        java.util.Map r2;
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$ObjectRefFactory $r10;
        java.lang.Object r1, r3, $r8;
        java.lang.String $r5, $r7;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        $r4 = specialinvoke r0.<groovy.util.FactoryBuilderSupport: groovy.util.Factory resolveFactory(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, r3);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r6 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver>;

        $r5 = (java.lang.String) r1;

        $r7 = interfaceinvoke $r6.<groovy.util.ObjectGraphBuilder$ReferenceResolver: java.lang.String getReferenceFor(java.lang.String)>($r5);

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        if $r8 == null goto label2;

        $r10 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ObjectRefFactory objectRefFactory>;

        return $r10;

     label2:
        $r9 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ObjectFactory objectFactory>;

        return $r9;
    }

    private void resolveLazyReferences()
    {
        groovy.lang.MissingPropertyException $r35;
        boolean $z0, $z1;
        java.util.List $r1;
        groovy.util.ObjectGraphBuilder$ChildPropertySetter $r7;
        java.lang.StringBuffer $r24, $r25, $r27, $r28, $r30, $r31, $r33;
        groovy.util.ObjectGraphBuilder$NodeReference r4;
        groovy.util.ObjectGraphBuilder$RelationNameResolver $r10, $r15;
        java.lang.String $r6, $r9, $r11, $r13, $r14, $r16, $r18, $r19, $r26, $r29, $r32, $r34;
        groovy.lang.MetaProperty $r21;
        groovy.lang.MetaClass $r20;
        java.util.Iterator $r2;
        java.lang.IllegalArgumentException $r23;
        groovy.util.ObjectGraphBuilder r0;
        java.lang.Object $r3, $r5, $r8, $r12, $r17, $r22, r36;

        r0 := @this: groovy.util.ObjectGraphBuilder;

        $z0 = r0.<groovy.util.ObjectGraphBuilder: boolean lazyReferencesAllowed>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r1 = r0.<groovy.util.ObjectGraphBuilder: java.util.List lazyReferences>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (groovy.util.ObjectGraphBuilder$NodeReference) $r3;

        $r5 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.Object access$300(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        if $r5 != null goto label03;

        goto label02;

     label03:
        r36 = null;

     label04:
        $r6 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$400(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        r36 = virtualinvoke r0.<groovy.util.ObjectGraphBuilder: java.lang.Object getProperty(java.lang.String)>($r6);

     label05:
        goto label07;

     label06:
        $r35 := @caughtexception;

     label07:
        if r36 != null goto label08;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("There is no valid node for reference ");

        $r26 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$500(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r29 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$600(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r32 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$400(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r23;

     label08:
        $r7 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter>;

        $r8 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.Object access$300(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r9 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$500(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r10 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$RelationNameResolver relationNameResolver>;

        $r11 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$500(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r12 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.Object access$300(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r13 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$600(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r14 = interfaceinvoke $r10.<groovy.util.ObjectGraphBuilder$RelationNameResolver: java.lang.String resolveChildRelationName(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>($r11, $r12, $r13, r36);

        interfaceinvoke $r7.<groovy.util.ObjectGraphBuilder$ChildPropertySetter: void setChild(java.lang.Object,java.lang.Object,java.lang.String,java.lang.String)>($r8, r36, $r9, $r14);

        $r15 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$RelationNameResolver relationNameResolver>;

        $r16 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$500(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r17 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.Object access$300(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r18 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.String access$600(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        $r19 = interfaceinvoke $r15.<groovy.util.ObjectGraphBuilder$RelationNameResolver: java.lang.String resolveParentRelationName(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>($r16, $r17, $r18, r36);

        $r20 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Object)>(r36);

        $r21 = interfaceinvoke $r20.<groovy.lang.MetaClass: groovy.lang.MetaProperty hasProperty(java.lang.Object,java.lang.String)>(r36, $r19);

        if $r21 == null goto label09;

        $r22 = staticinvoke <groovy.util.ObjectGraphBuilder$NodeReference: java.lang.Object access$300(groovy.util.ObjectGraphBuilder$NodeReference)>(r4);

        virtualinvoke $r21.<groovy.lang.MetaProperty: void setProperty(java.lang.Object,java.lang.Object)>(r36, $r22);

     label09:
        goto label02;

     label10:
        return;

        catch groovy.lang.MissingPropertyException from label04 to label05 with label06;
    }

    static void access$200(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        specialinvoke r0.<groovy.util.ObjectGraphBuilder: void resolveLazyReferences()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static groovy.util.ObjectGraphBuilder$ClassNameResolver access$700(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$ClassNameResolver $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ClassNameResolver classNameResolver>;

        return $r1;
    }

    static java.util.Map access$800(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        java.util.Map $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: java.util.Map resolvedClasses>;

        return $r1;
    }

    static java.lang.ClassLoader access$900(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        java.lang.ClassLoader $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: java.lang.ClassLoader classLoader>;

        return $r1;
    }

    static groovy.util.ObjectGraphBuilder$NewInstanceResolver access$1000(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$NewInstanceResolver $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$NewInstanceResolver newInstanceResolver>;

        return $r1;
    }

    static groovy.util.ObjectGraphBuilder$RelationNameResolver access$1100(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$RelationNameResolver $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$RelationNameResolver relationNameResolver>;

        return $r1;
    }

    static groovy.util.ObjectGraphBuilder$ChildPropertySetter access$1200(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$ChildPropertySetter $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ChildPropertySetter childPropertySetter>;

        return $r1;
    }

    static groovy.util.ObjectGraphBuilder$ReferenceResolver access$1300(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$ReferenceResolver $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver referenceResolver>;

        return $r1;
    }

    static groovy.util.ObjectGraphBuilder$IdentifierResolver access$1400(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        groovy.util.ObjectGraphBuilder$IdentifierResolver $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver identifierResolver>;

        return $r1;
    }

    static java.util.List access$1600(groovy.util.ObjectGraphBuilder)
    {
        groovy.util.ObjectGraphBuilder r0;
        java.util.List $r1;

        r0 := @parameter0: groovy.util.ObjectGraphBuilder;

        $r1 = r0.<groovy.util.ObjectGraphBuilder: java.util.List lazyReferences>;

        return $r1;
    }

    public static void <clinit>()
    {
        <groovy.util.ObjectGraphBuilder: java.lang.String LAZY_REF> = "_LAZY_REF_";

        <groovy.util.ObjectGraphBuilder: java.lang.String OBJECT_ID> = "_OBJECT_ID_";

        <groovy.util.ObjectGraphBuilder: java.lang.String NODE_NAME> = "_NODE_NAME_";

        <groovy.util.ObjectGraphBuilder: java.lang.String NODE_CLASS> = "_NODE_CLASS_";

        return;
    }
}
