public final class org.apache.poi.hslf.record.Comment2000 extends org.apache.poi.hslf.record.RecordContainer
{
    private byte[] _header;
    private static long _type;
    private org.apache.poi.hslf.record.CString authorRecord;
    private org.apache.poi.hslf.record.CString authorInitialsRecord;
    private org.apache.poi.hslf.record.CString commentRecord;
    private org.apache.poi.hslf.record.Comment2000Atom commentAtom;

    public org.apache.poi.hslf.record.Comment2000Atom getComment2000Atom()
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.Comment2000Atom $r1;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Comment2000Atom commentAtom>;

        return $r1;
    }

    public java.lang.String getAuthor()
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.CString $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorRecord>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorRecord>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.CString: java.lang.String getText()>();

     label2:
        return $r3;
    }

    public void setAuthor(java.lang.String)
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.CString $r2;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorRecord>;

        virtualinvoke $r2.<org.apache.poi.hslf.record.CString: void setText(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getAuthorInitials()
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.CString $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorInitialsRecord>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorInitialsRecord>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.CString: java.lang.String getText()>();

     label2:
        return $r3;
    }

    public void setAuthorInitials(java.lang.String)
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.CString $r2;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorInitialsRecord>;

        virtualinvoke $r2.<org.apache.poi.hslf.record.CString: void setText(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getText()
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.CString $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString commentRecord>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString commentRecord>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.record.CString: java.lang.String getText()>();

     label2:
        return $r3;
    }

    public void setText(java.lang.String)
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.CString $r2;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString commentRecord>;

        virtualinvoke $r2.<org.apache.poi.hslf.record.CString: void setText(java.lang.String)>(r1);

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3;
        org.apache.poi.hslf.record.Comment2000 r0;
        org.apache.poi.hslf.record.Record[] $r4;
        int i0, i1, $i2, $i3;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.Comment2000: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.Comment2000: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i3 = i0 + 8;

        $i2 = i1 - 8;

        $r4 = staticinvoke <org.apache.poi.hslf.record.Record: org.apache.poi.hslf.record.Record[] findChildRecords(byte[],int,int)>(r2, $i3, $i2);

        r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children> = $r4;

        specialinvoke r0.<org.apache.poi.hslf.record.Comment2000: void findInterestingChildren()>();

        return;
    }

    private void findInterestingChildren()
    {
        org.apache.poi.hslf.record.Record r2;
        org.apache.poi.hslf.record.Comment2000Atom $r12;
        org.apache.poi.hslf.record.Comment2000 r0;
        long $l1;
        int i0, $i2, i3, i4;
        java.lang.String $r9, $r11;
        boolean $z0, $z1;
        org.apache.poi.util.POILogger $r4;
        org.apache.poi.hslf.record.CString r13;
        org.apache.poi.hslf.record.Record[] r1;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r10;
        java.lang.Class $r8;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        r1 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children>;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label9;

        r2 = r1[i4];

        $z0 = r2 instanceof org.apache.poi.hslf.record.CString;

        if $z0 == 0 goto label6;

        r13 = (org.apache.poi.hslf.record.CString) r2;

        $i2 = virtualinvoke r13.<org.apache.poi.hslf.record.CString: int getOptions()>();

        i3 = $i2 >> 4;

        tableswitch(i3)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorRecord> = r13;

        goto label5;

     label3:
        r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString commentRecord> = r13;

        goto label5;

     label4:
        r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.CString authorInitialsRecord> = r13;

     label5:
        goto label8;

     label6:
        $z1 = r2 instanceof org.apache.poi.hslf.record.Comment2000Atom;

        if $z1 == 0 goto label7;

        $r12 = (org.apache.poi.hslf.record.Comment2000Atom) r2;

        r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Comment2000Atom commentAtom> = $r12;

        goto label8;

     label7:
        $r4 = <org.apache.poi.hslf.record.Comment2000: org.apache.poi.util.POILogger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected record with type=");

        $l1 = virtualinvoke r2.<org.apache.poi.hslf.record.Record: long getRecordType()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in Comment2000: ");

        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r11);

     label8:
        i4 = i4 + 1;

        goto label1;

     label9:
        return;
    }

    public void <init>()
    {
        byte[] $r1, $r3, $r4;
        org.apache.poi.hslf.record.Comment2000Atom $r11;
        org.apache.poi.hslf.record.Comment2000 r0;
        long $l0;
        short $s2;
        int $i1;
        org.apache.poi.hslf.record.CString $r5, $r6, $r7;
        org.apache.poi.hslf.record.Record[] $r2, $r8, $r9, $r10, $r12;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.Comment2000: byte[] _header> = $r1;

        $r2 = newarray (org.apache.poi.hslf.record.Record)[4];

        r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.Comment2000: byte[] _header>;

        $r3[0] = 15;

        $r4 = r0.<org.apache.poi.hslf.record.Comment2000: byte[] _header>;

        $l0 = <org.apache.poi.hslf.record.Comment2000: long _type>;

        $i1 = (int) $l0;

        $s2 = (short) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r4, 2, $s2);

        $r5 = new org.apache.poi.hslf.record.CString;

        specialinvoke $r5.<org.apache.poi.hslf.record.CString: void <init>()>();

        $r6 = new org.apache.poi.hslf.record.CString;

        specialinvoke $r6.<org.apache.poi.hslf.record.CString: void <init>()>();

        $r7 = new org.apache.poi.hslf.record.CString;

        specialinvoke $r7.<org.apache.poi.hslf.record.CString: void <init>()>();

        virtualinvoke $r5.<org.apache.poi.hslf.record.CString: void setOptions(int)>(0);

        virtualinvoke $r6.<org.apache.poi.hslf.record.CString: void setOptions(int)>(16);

        virtualinvoke $r7.<org.apache.poi.hslf.record.CString: void setOptions(int)>(32);

        $r8 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children>;

        $r8[0] = $r5;

        $r9 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children>;

        $r9[1] = $r6;

        $r10 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children>;

        $r10[2] = $r7;

        $r12 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children>;

        $r11 = new org.apache.poi.hslf.record.Comment2000Atom;

        specialinvoke $r11.<org.apache.poi.hslf.record.Comment2000Atom: void <init>()>();

        $r12[3] = $r11;

        specialinvoke r0.<org.apache.poi.hslf.record.Comment2000: void findInterestingChildren()>();

        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.Comment2000 r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        $l0 = <org.apache.poi.hslf.record.Comment2000: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r1, $r2;
        org.apache.poi.hslf.record.Comment2000 r0;
        long $l0;
        org.apache.poi.hslf.record.Record[] $r4;
        byte $b1, $b2;

        r0 := @this: org.apache.poi.hslf.record.Comment2000;

        r3 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000: byte[] _header>;

        $b2 = $r1[0];

        $r2 = r0.<org.apache.poi.hslf.record.Comment2000: byte[] _header>;

        $b1 = $r2[1];

        $l0 = <org.apache.poi.hslf.record.Comment2000: long _type>;

        $r4 = r0.<org.apache.poi.hslf.record.Comment2000: org.apache.poi.hslf.record.Record[] _children>;

        virtualinvoke r0.<org.apache.poi.hslf.record.Comment2000: void writeOut(byte,byte,long,org.apache.poi.hslf.record.Record[],java.io.OutputStream)>($b2, $b1, $l0, $r4, r3);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.Comment2000: long _type> = 12000L;

        return;
    }
}
