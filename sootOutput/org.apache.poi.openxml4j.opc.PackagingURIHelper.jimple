public final class org.apache.poi.openxml4j.opc.PackagingURIHelper extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger _logger;
    private static java.net.URI packageRootUri;
    public static final java.lang.String RELATIONSHIP_PART_EXTENSION_NAME;
    public static final java.lang.String RELATIONSHIP_PART_SEGMENT_NAME;
    public static final java.lang.String PACKAGE_PROPERTIES_SEGMENT_NAME;
    public static final java.lang.String PACKAGE_CORE_PROPERTIES_NAME;
    public static final char FORWARD_SLASH_CHAR;
    public static final java.lang.String FORWARD_SLASH_STRING;
    public static final java.net.URI PACKAGE_RELATIONSHIPS_ROOT_URI;
    public static final org.apache.poi.openxml4j.opc.PackagePartName PACKAGE_RELATIONSHIPS_ROOT_PART_NAME;
    public static final java.net.URI CORE_PROPERTIES_URI;
    public static final org.apache.poi.openxml4j.opc.PackagePartName CORE_PROPERTIES_PART_NAME;
    public static final java.net.URI PACKAGE_ROOT_URI;
    public static final org.apache.poi.openxml4j.opc.PackagePartName PACKAGE_ROOT_PART_NAME;
    private static final java.util.regex.Pattern missingAuthPattern;
    private static final char[] hexDigits;

    public void <init>()
    {
        org.apache.poi.openxml4j.opc.PackagingURIHelper r0;

        r0 := @this: org.apache.poi.openxml4j.opc.PackagingURIHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.net.URI getPackageRootUri()
    {
        java.net.URI $r0;

        $r0 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI packageRootUri>;

        return $r0;
    }

    public static boolean isRelationshipPartURI(java.net.URI)
    {
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9;
        java.net.URI r0;
        java.lang.String $r1, $r4, $r7, $r10;
        boolean $z0;

        r0 := @parameter0: java.net.URI;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("partUri");

        throw $r11;

     label1:
        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String getPath()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*");

        $r4 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_SEGMENT_NAME>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*");

        $r7 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_EXTENSION_NAME>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>($r10);

        return $z0;
    }

    public static java.lang.String getFilename(java.net.URI)
    {
        char $c1, $c2;
        int $i0, $i3, i4, $i6, $i7, $i8;
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: java.net.URI;

        if r0 == null goto label3;

        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String getPath()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i4 = $i0;

     label1:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        if i4 < 0 goto label3;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i4);

        $c2 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $i7 = (int) $c1;

        $i8 = (int) $c2;

        if $i7 != $i8 goto label2;

        $i3 = i4 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i0);

        return $r2;

     label2:
        goto label1;

     label3:
        return "";
    }

    public static java.lang.String getFilenameWithoutExtension(java.net.URI)
    {
        int $i0, $i2;
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: java.net.URI;

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String getFilename(java.net.URI)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return $r1;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r2;
    }

    public static java.net.URI getPath(java.net.URI)
    {
        java.net.URISyntaxException $r4;
        char $c0, $c1;
        int i2, $i4, $i5, $i6;
        java.net.URI r0, $r5;
        java.lang.String $r1, $r3;

        r0 := @parameter0: java.net.URI;

        if r0 == null goto label6;

        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String getPath()>();

        i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        if i2 < 0 goto label6;

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i2);

        $c1 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $i5 = (int) $c0;

        $i6 = (int) $c1;

        if $i5 != $i6 goto label5;

     label2:
        $r5 = new java.net.URI;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r3);

     label3:
        return $r5;

     label4:
        $r4 := @caughtexception;

        return null;

     label5:
        goto label1;

     label6:
        return null;

        catch java.net.URISyntaxException from label2 to label3 with label4;
    }

    public static java.net.URI combine(java.net.URI, java.net.URI)
    {
        java.net.URISyntaxException $r6;
        java.lang.IllegalArgumentException $r7;
        java.net.URI $r0, r1, r3;
        java.lang.String $r2, $r4, $r5;

        r1 := @parameter0: java.net.URI;

        r3 := @parameter1: java.net.URI;

     label1:
        $r0 = new java.net.URI;

        $r2 = virtualinvoke r1.<java.net.URI: java.lang.String getPath()>();

        $r4 = virtualinvoke r3.<java.net.URI: java.lang.String getPath()>();

        $r5 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String combine(java.lang.String,java.lang.String)>($r2, $r4);

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Prefix and suffix can\'t be combine !");

        throw $r7;

     label4:
        return $r0;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static java.lang.String combine(java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r33;
        java.lang.String r0, $r4, $r8, $r12, r13, $r17, $r21, $r25, $r29, $r34;
        char $c0, $c1, $c2, $c3, $c4, $c5, $c6;

        r0 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c0 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c5 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $z5 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>($r29);

        if $z5 != 0 goto label1;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $c6 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r34;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>($r8);

        if $z1 != 0 goto label2;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c4 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $z4 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>($r25);

        if $z4 != 0 goto label3;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c2 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>($r12);

        if $z2 == 0 goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c3 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>($r17);

        if $z3 != 0 goto label4;

     label3:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

     label4:
        return "";
    }

    public static java.net.URI relativizeURI(java.net.URI, java.net.URI, boolean)
    {
        java.lang.Exception $r24, $r26, $r28;
        java.lang.StringBuilder $r10, $r33;
        java.lang.String $r2, $r4, $r6, $r7, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r31, $r32;
        java.net.URI r1, r30, $r36, $r37, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.apache.poi.util.POILogger $r25, $r27, $r29;
        java.lang.String[] $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i20, i21, i22, i23, $i24, i25, i26, $i27, $i29, $i31, $i32, $i33;
        char $c8, $c19;
        java.lang.IllegalArgumentException $r34, $r35;

        r1 := @parameter0: java.net.URI;

        r30 := @parameter1: java.net.URI;

        z6 := @parameter2: boolean;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.net.URI: java.lang.String getPath()>();

        $i29 = (int) -1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", $i29);

        $r4 = virtualinvoke r30.<java.net.URI: java.lang.String getPath()>();

        $i31 = (int) -1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", $i31);

        $i0 = lengthof $r3;

        if $i0 != 0 goto label01;

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t relativize an empty source URI !");

        throw $r34;

     label01:
        $i1 = lengthof $r5;

        if $i1 != 0 goto label02;

        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t relativize an empty target URI !");

        throw $r35;

     label02:
        $r6 = virtualinvoke r1.<java.net.URI: java.lang.String toString()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z0 == 0 goto label07;

        $r19 = virtualinvoke r30.<java.net.URI: java.lang.String getPath()>();

        if z6 == 0 goto label06;

        $i18 = virtualinvoke $r19.<java.lang.String: int length()>();

        if $i18 <= 0 goto label06;

        $c19 = virtualinvoke $r19.<java.lang.String: char charAt(int)>(0);

        $i32 = (int) $c19;

        if $i32 != 47 goto label06;

     label03:
        $r36 = new java.net.URI;

        $r21 = virtualinvoke $r19.<java.lang.String: java.lang.String substring(int)>(1);

        specialinvoke $r36.<java.net.URI: void <init>(java.lang.String)>($r21);

        r30 = $r36;

     label04:
        goto label06;

     label05:
        $r28 := @caughtexception;

        $r29 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.util.POILogger _logger>;

        virtualinvoke $r29.<org.apache.poi.util.POILogger: void log(int,java.lang.Throwable)>(5, $r28);

        return null;

     label06:
        return r30;

     label07:
        i20 = 0;

        i21 = 0;

     label08:
        $i2 = lengthof $r3;

        if i21 >= $i2 goto label09;

        $i17 = lengthof $r5;

        if i21 >= $i17 goto label09;

        $r18 = $r3[i21];

        $r17 = $r5[i21];

        $z5 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z5 == 0 goto label09;

        i20 = i20 + 1;

        i21 = i21 + 1;

        goto label08;

     label09:
        if i20 == 0 goto label10;

        if i20 != 1 goto label19;

     label10:
        $r7 = $r3[0];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label19;

        $r12 = $r5[0];

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 == 0 goto label19;

        i22 = 0;

     label11:
        $i12 = lengthof $r3;

        $i13 = $i12 - 2;

        if i22 >= $i13 goto label12;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("../");

        i22 = i22 + 1;

        goto label11;

     label12:
        i23 = 0;

     label13:
        $i14 = lengthof $r5;

        if i23 >= $i14 goto label16;

        $r15 = $r5[i23];

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 == 0 goto label14;

        goto label15;

     label14:
        $r16 = $r5[i23];

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $i15 = lengthof $r5;

        $i16 = $i15 - 1;

        if i23 == $i16 goto label15;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label15:
        i23 = i23 + 1;

        goto label13;

     label16:
        $r37 = new java.net.URI;

        $r14 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.net.URI: void <init>(java.lang.String)>($r14);

     label17:
        return $r37;

     label18:
        $r26 := @caughtexception;

        $r27 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.util.POILogger _logger>;

        virtualinvoke $r27.<org.apache.poi.util.POILogger: void log(int,java.lang.Throwable)>(5, $r26);

        return null;

     label19:
        $i24 = lengthof $r3;

        if i20 != $i24 goto label21;

        $i9 = lengthof $r5;

        if i20 != $i9 goto label21;

        $z2 = virtualinvoke r1.<java.net.URI: boolean equals(java.lang.Object)>(r30);

        if $z2 == 0 goto label20;

        $i10 = lengthof $r3;

        $i11 = $i10 - 1;

        $r11 = $r3[$i11];

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        goto label27;

     label20:
        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        goto label27;

     label21:
        if i20 != 1 goto label22;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        goto label24;

     label22:
        i25 = i20;

     label23:
        $i3 = lengthof $r3;

        $i4 = $i3 - 1;

        if i25 >= $i4 goto label24;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("../");

        i25 = i25 + 1;

        goto label23;

     label24:
        i26 = i20;

     label25:
        $i27 = lengthof $r5;

        if i26 >= $i27 goto label27;

        $i5 = virtualinvoke $r33.<java.lang.StringBuilder: int length()>();

        if $i5 <= 0 goto label26;

        $i6 = virtualinvoke $r33.<java.lang.StringBuilder: int length()>();

        $i7 = $i6 - 1;

        $c8 = virtualinvoke $r33.<java.lang.StringBuilder: char charAt(int)>($i7);

        $i33 = (int) $c8;

        if $i33 == 47 goto label26;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label26:
        $r31 = $r5[i26];

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        i26 = i26 + 1;

        goto label25;

     label27:
        $r32 = virtualinvoke r30.<java.net.URI: java.lang.String getRawFragment()>();

        if $r32 == null goto label28;

        $r10 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

     label28:
        $r38 = new java.net.URI;

        $r9 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.net.URI: void <init>(java.lang.String)>($r9);

     label29:
        return $r38;

     label30:
        $r24 := @caughtexception;

        $r25 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.util.POILogger _logger>;

        virtualinvoke $r25.<org.apache.poi.util.POILogger: void log(int,java.lang.Throwable)>(5, $r24);

        return null;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label28 to label29 with label30;
    }

    public static java.net.URI relativizeURI(java.net.URI, java.net.URI)
    {
        java.net.URI r0, r1, $r2;

        r0 := @parameter0: java.net.URI;

        r1 := @parameter1: java.net.URI;

        $r2 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI relativizeURI(java.net.URI,java.net.URI,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.net.URI resolvePartUri(java.net.URI, java.net.URI)
    {
        java.lang.IllegalArgumentException $r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r8, $r9, $r10;
        java.net.URI r0, r6, $r12;
        java.lang.String $r5, $r11;
        boolean $z0, $z1;

        r0 := @parameter0: java.net.URI;

        r6 := @parameter1: java.net.URI;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sourcePartUri invalid - ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        if r6 == null goto label3;

        $z1 = virtualinvoke r6.<java.net.URI: boolean isAbsolute()>();

        if $z1 == 0 goto label4;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("targetUri invalid - ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label4:
        $r12 = virtualinvoke r0.<java.net.URI: java.net.URI resolve(java.net.URI)>(r6);

        return $r12;
    }

    public static java.net.URI getURIFromPath(java.lang.String)
    {
        java.net.URISyntaxException $r2;
        java.lang.String r0;
        java.net.URI $r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI toURI(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("path");

        throw $r3;

     label4:
        return $r1;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static java.net.URI getSourcePartUriFromRelationshipPartUri(java.net.URI)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.net.URI r0, $r1, $r9, $r10;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r11, $r12;

        r0 := @parameter0: java.net.URI;

        if r0 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must not be null");

        throw $r12;

     label1:
        $z0 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: boolean isRelationshipPartURI(java.net.URI)>(r0);

        if $z0 != 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must be a relationship part");

        throw $r11;

     label2:
        $r1 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI PACKAGE_RELATIONSHIPS_ROOT_URI>;

        $i0 = virtualinvoke r0.<java.net.URI: int compareTo(java.net.URI)>($r1);

        if $i0 != 0 goto label3;

        $r10 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI PACKAGE_ROOT_URI>;

        return $r10;

     label3:
        $r2 = virtualinvoke r0.<java.net.URI: java.lang.String getPath()>();

        $r3 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String getFilenameWithoutExtension(java.net.URI)>(r0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i1 - $i2;

        $r4 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_EXTENSION_NAME>;

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i5 = $i3 - $i4;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $i6 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_SEGMENT_NAME>;

        $i7 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i8 = $i6 - $i7;

        $i9 = $i8 - 1;

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        $r8 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String combine(java.lang.String,java.lang.String)>($r7, $r3);

        $r9 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI getURIFromPath(java.lang.String)>($r8);

        return $r9;
    }

    public static org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        java.net.URI r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.poi.openxml4j.opc.PackagePartName $r1;

        r0 := @parameter0: java.net.URI;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("partName");

        throw $r2;

     label1:
        $r1 = new org.apache.poi.openxml4j.opc.PackagePartName;

        specialinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePartName: void <init>(java.net.URI,boolean)>(r0, 1);

        return $r1;
    }

    public static org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r4;
        org.apache.poi.openxml4j.opc.PackagePartName $r2;
        java.net.URISyntaxException $r3;
        java.lang.String r0, $r5;
        java.net.URI $r1;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI toURI(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.poi.openxml4j.exceptions.InvalidFormatException;

        $r5 = virtualinvoke $r3.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r4.<org.apache.poi.openxml4j.exceptions.InvalidFormatException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        $r2 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r1);

        return $r2;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.lang.String, org.apache.poi.openxml4j.opc.PackagePart) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r8;
        org.apache.poi.openxml4j.opc.PackagePartName $r1, $r6;
        java.net.URISyntaxException $r7;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.net.URI $r2, $r3, $r5;
        java.lang.String r4, $r9;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.poi.openxml4j.opc.PackagePart;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r3 = new java.net.URI;

        specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>(r4);

        $r5 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI resolvePartUri(java.net.URI,java.net.URI)>($r2, $r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.poi.openxml4j.exceptions.InvalidFormatException;

        $r9 = virtualinvoke $r7.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r8.<org.apache.poi.openxml4j.exceptions.InvalidFormatException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label4:
        $r6 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r5);

        return $r6;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI, org.apache.poi.openxml4j.opc.PackagePart) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.PackagePartName $r1, $r5;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.net.URI $r2, r3, $r4;

        r3 := @parameter0: java.net.URI;

        r0 := @parameter1: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r4 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI resolvePartUri(java.net.URI,java.net.URI)>($r2, r3);

        $r5 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r4);

        return $r5;
    }

    public static boolean isValidPartName(java.net.URI)
    {
        java.net.URI r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Exception $r2;

        r0 := @parameter0: java.net.URI;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("partUri");

        throw $r1;

     label1:
        staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>(r0);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String decodeURI(java.net.URI)
    {
        java.lang.StringBuffer $r11;
        int $i0, $i2, $i3, $i4, $i5, $i6, i8, $i9;
        java.net.URI r1;
        java.lang.String $r2, $r3, $r4, $r10;
        char $c1, c7;
        java.lang.IllegalArgumentException $r13;
        java.lang.StringBuilder $r7, $r8, $r9, $r12;

        r1 := @parameter0: java.net.URI;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.net.URI: java.lang.String toASCIIString()>();

        i8 = 0;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i8 >= $i0 goto label5;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i8);

        $i9 = (int) $c1;

        if $i9 != 37 goto label3;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i2 - i8;

        if $i3 >= 2 goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The uri ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contain invalid encoded character !");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r13;

     label2:
        $i5 = i8 + 1;

        $i4 = i8 + 3;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i5, $i4);

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);

        c7 = (char) $i6;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        i8 = i8 + 2;

        goto label4;

     label3:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label4:
        i8 = i8 + 1;

        goto label1;

     label5:
        $r3 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static org.apache.poi.openxml4j.opc.PackagePartName getRelationshipPartName(org.apache.poi.openxml4j.opc.PackagePartName)
    {
        int $i0, $i1, $i2;
        java.net.URI $r1, $r3, $r5, $r7;
        java.lang.String $r2, $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r15, $r17;
        boolean $z0, $z1;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r22;
        org.apache.poi.openxml4j.opc.PackagePartName r0, $r18, $r20;
        org.apache.poi.openxml4j.exceptions.InvalidOperationException $r19;
        java.lang.IllegalArgumentException $r21;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @parameter0: org.apache.poi.openxml4j.opc.PackagePartName;

        if r0 != null goto label1;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("partName");

        throw $r21;

     label1:
        $r1 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI PACKAGE_ROOT_URI>;

        $r2 = virtualinvoke $r1.<java.net.URI: java.lang.String getPath()>();

        $r3 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r4 = virtualinvoke $r3.<java.net.URI: java.lang.String getPath()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r20 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName PACKAGE_RELATIONSHIPS_ROOT_PART_NAME>;

        return $r20;

     label2:
        $z1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePartName: boolean isRelationshipPartURI()>();

        if $z1 == 0 goto label3;

        $r19 = new org.apache.poi.openxml4j.exceptions.InvalidOperationException;

        specialinvoke $r19.<org.apache.poi.openxml4j.exceptions.InvalidOperationException: void <init>(java.lang.String)>("Can\'t be a relationship part");

        throw $r19;

     label3:
        $r5 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String getPath()>();

        $r7 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r8 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String getFilename(java.net.URI)>($r7);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i2 = $i0 - $i1;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r10 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_SEGMENT_NAME>;

        $r11 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String combine(java.lang.String,java.lang.String)>($r9, $r10);

        $r12 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String combine(java.lang.String,java.lang.String)>($r11, $r8);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_EXTENSION_NAME>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r18 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.lang.String)>($r17);

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;

        return null;

     label7:
        return $r18;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label4 to label5 with label6;
    }

    public static java.net.URI toURI(java.lang.String) throws java.net.URISyntaxException
    {
        java.util.regex.Matcher $r21;
        java.net.URI $r26;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r11, $r15, $r16, $r18, $r22, $r23, $r24, $r25;
        java.util.regex.Pattern $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, i8, $i10, $i12, $i13, $i15;
        java.lang.String $r6, $r9, $r10, $r12, $r13, $r17, r19;
        char $c6;

        r19 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r19.<java.lang.String: int indexOf(java.lang.String)>("\\");

        $i10 = (int) -1;

        if $i0 == $i10 goto label1;

        r19 = virtualinvoke r19.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

     label1:
        $i1 = virtualinvoke r19.<java.lang.String: int indexOf(int)>(35);

        $i12 = (int) -1;

        if $i1 == $i12 goto label2;

        $r12 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i7 = $i1 + 1;

        $r13 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int)>($i7);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r17 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String encode(java.lang.String)>($r13);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $i2 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i2 <= 0 goto label6;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $i3 = virtualinvoke r19.<java.lang.String: int length()>();

        i8 = $i3 - 1;

     label3:
        if i8 < 0 goto label5;

        $c6 = virtualinvoke r19.<java.lang.String: char charAt(int)>(i8);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c6);

        if $z0 != 0 goto label4;

        $i13 = (int) $c6;

        if $i13 != 160 goto label5;

     label4:
        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $i15 = (int) -1;

        i8 = i8 + $i15;

        goto label3;

     label5:
        $i4 = virtualinvoke $r23.<java.lang.StringBuilder: int length()>();

        if $i4 <= 0 goto label6;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $i5 = i8 + 1;

        $r6 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $r7 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String encode(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r19 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r20 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.util.regex.Pattern missingAuthPattern>;

        $r21 = virtualinvoke $r20.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r19);

        $z1 = virtualinvoke $r21.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label7;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r19 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r26 = new java.net.URI;

        specialinvoke $r26.<java.net.URI: void <init>(java.lang.String)>(r19);

        return $r26;
    }

    public static java.lang.String encode(java.lang.String)
    {
        byte[] $r1;
        java.nio.ByteBuffer $r2;
        short s2, $s10;
        byte $b1;
        int $i0, $i4, $i5, $i7, $i8, $i11, $i12, $i13;
        java.lang.String r0, $r4;
        boolean $z0, $z1;
        char $c3, $c6, $c9;
        java.lang.RuntimeException $r9;
        char[] $r5, $r6;
        java.lang.StringBuilder $r10;
        java.io.UnsupportedEncodingException $r7;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r9;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

     label5:
        $z0 = virtualinvoke $r2.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label8;

        $b1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $s10 = (short) $b1;

        s2 = $s10 & 255;

        $i11 = (int) s2;

        $z1 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: boolean isUnsafe(int)>($i11);

        if $z1 == 0 goto label6;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r5 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char[] hexDigits>;

        $i12 = (int) s2;

        $i4 = $i12 >> 4;

        $i5 = $i4 & 15;

        $c6 = $r5[$i5];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $r6 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char[] hexDigits>;

        $i13 = (int) s2;

        $i7 = $i13 >> 0;

        $i8 = $i7 & 15;

        $c9 = $r6[$i8];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        goto label7;

     label6:
        $c3 = (char) s2;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label7:
        goto label5;

     label8:
        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private static boolean isUnsafe(int)
    {
        int i0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        if i0 > 128 goto label1;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(int)>(i0);

        if $z0 != 0 goto label1;

        if i0 != 160 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static void <clinit>()
    {
        java.net.URISyntaxException $r28;
        java.net.URI $r1, $r2, $r11, $r12, $r21, $r22, $r24, r29, r30, r31;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r27;
        org.apache.poi.openxml4j.opc.PackagePartName $r23, r32, r33, r34;
        org.apache.poi.util.POILogger $r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r13, $r14, $r16, $r17, $r19;
        java.util.regex.Pattern $r25;
        java.lang.String $r5, $r8, $r10, $r15, $r18, $r20;
        char $c0, $c1, $c2, $c3;
        char[] $r26;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/openxml4j/opc/PackagingURIHelper;");

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.util.POILogger _logger> = $r0;

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_SEGMENT_NAME> = "_rels";

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_EXTENSION_NAME> = ".rels";

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR> = 47;

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String FORWARD_SLASH_STRING> = "/";

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String PACKAGE_PROPERTIES_SEGMENT_NAME> = "docProps";

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String PACKAGE_CORE_PROPERTIES_NAME> = "core.xml";

        r29 = null;

        r30 = null;

        r31 = null;

     label1:
        $r1 = new java.net.URI;

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>("/");

        r29 = $r1;

        $r2 = new java.net.URI;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $c0 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r5 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_SEGMENT_NAME>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $c1 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r8 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String RELATIONSHIP_PART_EXTENSION_NAME>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r10);

        r30 = $r2;

        $r11 = new java.net.URI;

        specialinvoke $r11.<java.net.URI: void <init>(java.lang.String)>("/");

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI packageRootUri> = $r11;

        $r12 = new java.net.URI;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $c2 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r15 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String PACKAGE_PROPERTIES_SEGMENT_NAME>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $c3 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: char FORWARD_SLASH_CHAR>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r18 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.lang.String PACKAGE_CORE_PROPERTIES_NAME>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.net.URI: void <init>(java.lang.String)>($r20);

        r31 = $r12;

     label2:
        goto label4;

     label3:
        $r28 := @caughtexception;

     label4:
        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI PACKAGE_ROOT_URI> = r29;

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI PACKAGE_RELATIONSHIPS_ROOT_URI> = r30;

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI CORE_PROPERTIES_URI> = r31;

        r32 = null;

        r33 = null;

        r34 = null;

     label5:
        $r21 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI PACKAGE_RELATIONSHIPS_ROOT_URI>;

        r33 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r21);

        $r22 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI CORE_PROPERTIES_URI>;

        r34 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r22);

        $r23 = new org.apache.poi.openxml4j.opc.PackagePartName;

        $r24 = <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI PACKAGE_ROOT_URI>;

        specialinvoke $r23.<org.apache.poi.openxml4j.opc.PackagePartName: void <init>(java.net.URI,boolean)>($r24, 0);

        r32 = $r23;

     label6:
        goto label8;

     label7:
        $r27 := @caughtexception;

     label8:
        <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName PACKAGE_RELATIONSHIPS_ROOT_PART_NAME> = r33;

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName CORE_PROPERTIES_PART_NAME> = r34;

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName PACKAGE_ROOT_PART_NAME> = r32;

        $r25 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\w+://");

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.util.regex.Pattern missingAuthPattern> = $r25;

        $r26 = newarray (char)[16];

        $r26[0] = 48;

        $r26[1] = 49;

        $r26[2] = 50;

        $r26[3] = 51;

        $r26[4] = 52;

        $r26[5] = 53;

        $r26[6] = 54;

        $r26[7] = 55;

        $r26[8] = 56;

        $r26[9] = 57;

        $r26[10] = 65;

        $r26[11] = 66;

        $r26[12] = 67;

        $r26[13] = 68;

        $r26[14] = 69;

        $r26[15] = 70;

        <org.apache.poi.openxml4j.opc.PackagingURIHelper: char[] hexDigits> = $r26;

        return;

        catch java.net.URISyntaxException from label1 to label2 with label3;
        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label5 to label6 with label7;
    }
}
