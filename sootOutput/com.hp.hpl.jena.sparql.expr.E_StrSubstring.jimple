public class com.hp.hpl.jena.sparql.expr.E_StrSubstring extends com.hp.hpl.jena.sparql.expr.ExprFunctionN
{
    private static final java.lang.String symbol;

    public void <init>(com.hp.hpl.jena.sparql.expr.Expr, com.hp.hpl.jena.sparql.expr.Expr, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.E_StrSubstring r0;
        com.hp.hpl.jena.sparql.expr.Expr r2, r3, r4;
        com.hp.hpl.jena.sparql.expr.Expr[] $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_StrSubstring;

        r2 := @parameter0: com.hp.hpl.jena.sparql.expr.Expr;

        r3 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        r4 := @parameter2: com.hp.hpl.jena.sparql.expr.Expr;

        $r1 = newarray (com.hp.hpl.jena.sparql.expr.Expr)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunctionN: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.Expr[])>("substr", $r1);

        return;
    }

    protected com.hp.hpl.jena.sparql.expr.NodeValue eval(java.util.List)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue $r2, $r4, $r6, $r7, $r9, $r11, $r12;
        java.util.List r0;
        com.hp.hpl.jena.sparql.expr.E_StrSubstring r13;
        int $i0;
        java.lang.Object $r1, $r3, $r5, $r8, $r10;

        r13 := @this: com.hp.hpl.jena.sparql.expr.E_StrSubstring;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 2 goto label1;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (com.hp.hpl.jena.sparql.expr.NodeValue) $r8;

        $r10 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r11 = (com.hp.hpl.jena.sparql.expr.NodeValue) $r10;

        $r12 = staticinvoke <com.hp.hpl.jena.sparql.expr.nodevalue.XSDFuncOp: com.hp.hpl.jena.sparql.expr.NodeValue substring(com.hp.hpl.jena.sparql.expr.NodeValue,com.hp.hpl.jena.sparql.expr.NodeValue)>($r9, $r11);

        return $r12;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (com.hp.hpl.jena.sparql.expr.NodeValue) $r1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r4 = (com.hp.hpl.jena.sparql.expr.NodeValue) $r3;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(2);

        $r6 = (com.hp.hpl.jena.sparql.expr.NodeValue) $r5;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.expr.nodevalue.XSDFuncOp: com.hp.hpl.jena.sparql.expr.NodeValue substring(com.hp.hpl.jena.sparql.expr.NodeValue,com.hp.hpl.jena.sparql.expr.NodeValue,com.hp.hpl.jena.sparql.expr.NodeValue)>($r2, $r4, $r6);

        return $r7;
    }

    protected com.hp.hpl.jena.sparql.expr.Expr copy(com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.expr.E_StrSubstring $r1, $r5, r8;
        com.hp.hpl.jena.sparql.expr.Expr $r2, $r3, $r4, $r6, $r7;
        com.hp.hpl.jena.sparql.expr.ExprList r0;
        int $i0;

        r8 := @this: com.hp.hpl.jena.sparql.expr.E_StrSubstring;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprList;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        if $i0 != 2 goto label1;

        $r5 = new com.hp.hpl.jena.sparql.expr.E_StrSubstring;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(0);

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(1);

        specialinvoke $r5.<com.hp.hpl.jena.sparql.expr.E_StrSubstring: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r6, $r7, null);

        return $r5;

     label1:
        $r1 = new com.hp.hpl.jena.sparql.expr.E_StrSubstring;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(1);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(2);

        specialinvoke $r1.<com.hp.hpl.jena.sparql.expr.E_StrSubstring: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r2, $r3, $r4);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.expr.E_StrSubstring: java.lang.String symbol> = "substr";

        return;
    }
}
