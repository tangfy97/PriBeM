public final class org.jdesktop.swingx.util.WindowUtils extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;

    private void <init>()
    {
        org.jdesktop.swingx.util.WindowUtils r0;

        r0 := @this: org.jdesktop.swingx.util.WindowUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.Point getPointForCentering(java.awt.Window)
    {
        java.awt.Rectangle $r1;
        java.awt.Window r0;
        java.awt.Point $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: java.awt.Window;

        $r1 = staticinvoke <org.jdesktop.swingx.util.WindowUtils: java.awt.Rectangle getUsableDeviceBounds(java.awt.Window)>(r0);

        i0 = $r1.<java.awt.Rectangle: int width>;

        i1 = $r1.<java.awt.Rectangle: int height>;

        $i2 = virtualinvoke r0.<java.awt.Window: int getWidth()>();

        $i3 = virtualinvoke r0.<java.awt.Window: int getHeight()>();

        $r2 = new java.awt.Point;

        $i4 = i0 - $i2;

        $i6 = $i4 / 2;

        $i5 = $r1.<java.awt.Rectangle: int x>;

        $i11 = $i6 + $i5;

        $i7 = i1 - $i3;

        $i9 = $i7 / 2;

        $i8 = $r1.<java.awt.Rectangle: int y>;

        $i10 = $i9 + $i8;

        specialinvoke $r2.<java.awt.Point: void <init>(int,int)>($i11, $i10);

        return $r2;
    }

    private static java.awt.Rectangle getUsableDeviceBounds(java.awt.Window)
    {
        java.awt.Rectangle $r4;
        java.awt.Insets $r3;
        java.awt.GraphicsDevice $r6;
        java.awt.GraphicsEnvironment $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.awt.GraphicsConfiguration r7;
        java.awt.Window r0, $r1;
        java.awt.Toolkit $r2;

        r0 := @parameter0: java.awt.Window;

        $r1 = virtualinvoke r0.<java.awt.Window: java.awt.Window getOwner()>();

        if $r1 != null goto label1;

        $r5 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r6 = virtualinvoke $r5.<java.awt.GraphicsEnvironment: java.awt.GraphicsDevice getDefaultScreenDevice()>();

        r7 = virtualinvoke $r6.<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration getDefaultConfiguration()>();

        goto label2;

     label1:
        r7 = virtualinvoke $r1.<java.awt.Window: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();

     label2:
        $r2 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r3 = virtualinvoke $r2.<java.awt.Toolkit: java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration)>(r7);

        $r4 = virtualinvoke r7.<java.awt.GraphicsConfiguration: java.awt.Rectangle getBounds()>();

        $i1 = $r4.<java.awt.Rectangle: int x>;

        $i0 = $r3.<java.awt.Insets: int left>;

        $i2 = $i1 + $i0;

        $r4.<java.awt.Rectangle: int x> = $i2;

        $i4 = $r4.<java.awt.Rectangle: int y>;

        $i3 = $r3.<java.awt.Insets: int top>;

        $i5 = $i4 + $i3;

        $r4.<java.awt.Rectangle: int y> = $i5;

        $i9 = $r4.<java.awt.Rectangle: int width>;

        $i7 = $r3.<java.awt.Insets: int left>;

        $i6 = $r3.<java.awt.Insets: int right>;

        $i8 = $i7 + $i6;

        $i10 = $i9 - $i8;

        $r4.<java.awt.Rectangle: int width> = $i10;

        $i14 = $r4.<java.awt.Rectangle: int height>;

        $i12 = $r3.<java.awt.Insets: int top>;

        $i11 = $r3.<java.awt.Insets: int bottom>;

        $i13 = $i12 + $i11;

        $i15 = $i14 - $i13;

        $r4.<java.awt.Rectangle: int height> = $i15;

        return $r4;
    }

    public static java.awt.Point getPointForCentering(javax.swing.JInternalFrame)
    {
        java.awt.Point $r1, $r4, $r9;
        java.awt.PointerInfo $r0;
        java.awt.GraphicsEnvironment $r2;
        java.awt.GraphicsConfiguration $r6;
        java.util.logging.Logger $r12;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11, $r15, $r16;
        java.awt.Rectangle $r7;
        javax.swing.JInternalFrame r8;
        java.awt.GraphicsDevice r5;
        java.util.logging.Level $r13;
        java.awt.GraphicsDevice[] $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25;
        java.lang.String $r14, $r17;

        r8 := @parameter0: javax.swing.JInternalFrame;

     label1:
        $r0 = staticinvoke <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>();

        $r1 = virtualinvoke $r0.<java.awt.PointerInfo: java.awt.Point getLocation()>();

        $r2 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r3 = virtualinvoke $r2.<java.awt.GraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>();

        i0 = lengthof $r3;

        i25 = 0;

     label2:
        if i25 >= i0 goto label5;

        r5 = $r3[i25];

        $r6 = virtualinvoke r5.<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration getDefaultConfiguration()>();

        $r7 = virtualinvoke $r6.<java.awt.GraphicsConfiguration: java.awt.Rectangle getBounds()>();

        $i2 = $r1.<java.awt.Point: int x>;

        $i1 = $r7.<java.awt.Rectangle: int x>;

        if $i2 < $i1 goto label4;

        $i4 = $r1.<java.awt.Point: int y>;

        $i3 = $r7.<java.awt.Rectangle: int y>;

        if $i4 < $i3 goto label4;

        $i8 = $r1.<java.awt.Point: int x>;

        $i6 = $r7.<java.awt.Rectangle: int x>;

        $i5 = $r7.<java.awt.Rectangle: int width>;

        $i7 = $i6 + $i5;

        if $i8 > $i7 goto label4;

        $i12 = $r1.<java.awt.Point: int y>;

        $i10 = $r7.<java.awt.Rectangle: int y>;

        $i9 = $r7.<java.awt.Rectangle: int height>;

        $i11 = $i10 + $i9;

        if $i12 > $i11 goto label4;

        i13 = $r7.<java.awt.Rectangle: int width>;

        i14 = $r7.<java.awt.Rectangle: int height>;

        $i15 = virtualinvoke r8.<javax.swing.JInternalFrame: int getWidth()>();

        $i16 = virtualinvoke r8.<javax.swing.JInternalFrame: int getHeight()>();

        $r9 = new java.awt.Point;

        $i17 = i13 - $i15;

        $i19 = $i17 / 2;

        $i18 = $r7.<java.awt.Rectangle: int x>;

        $i24 = $i19 + $i18;

        $i20 = i14 - $i16;

        $i22 = $i20 / 2;

        $i21 = $r7.<java.awt.Rectangle: int y>;

        $i23 = $i22 + $i21;

        specialinvoke $r9.<java.awt.Point: void <init>(int,int)>($i24, $i23);

     label3:
        return $r9;

     label4:
        i25 = i25 + 1;

        goto label2;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r12 = <org.jdesktop.swingx.util.WindowUtils: java.util.logging.Logger LOG>;

        $r13 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - this can occur do to a Security exception in sandboxed apps");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r13, $r17);

     label7:
        $r4 = new java.awt.Point;

        specialinvoke $r4.<java.awt.Point: void <init>(int,int)>(0, 0);

        return $r4;

        catch java.lang.Exception from label1 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static java.awt.Point getPointForStaggering(java.awt.Window)
    {
        java.awt.Insets $r2;
        java.awt.Window r0;
        java.awt.Point $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.awt.Window;

        $r1 = virtualinvoke r0.<java.awt.Window: java.awt.Point getLocation()>();

        $r2 = virtualinvoke r0.<java.awt.Window: java.awt.Insets getInsets()>();

        $i1 = $r1.<java.awt.Point: int x>;

        $i0 = $r2.<java.awt.Insets: int top>;

        $i2 = $i1 + $i0;

        $r1.<java.awt.Point: int x> = $i2;

        $i4 = $r1.<java.awt.Point: int y>;

        $i3 = $r2.<java.awt.Insets: int top>;

        $i5 = $i4 + $i3;

        $r1.<java.awt.Point: int y> = $i5;

        return $r1;
    }

    public static java.awt.Window findWindow(java.awt.Component)
    {
        java.awt.Frame $r4;
        java.awt.Window $r2, $r3;
        java.awt.Container $r1;
        java.awt.Component r0;
        boolean $z0;

        r0 := @parameter0: java.awt.Component;

        if r0 != null goto label1;

        $r4 = staticinvoke <javax.swing.JOptionPane: java.awt.Frame getRootFrame()>();

        return $r4;

     label1:
        $z0 = r0 instanceof java.awt.Window;

        if $z0 == 0 goto label2;

        $r3 = (java.awt.Window) r0;

        return $r3;

     label2:
        $r1 = virtualinvoke r0.<java.awt.Component: java.awt.Container getParent()>();

        $r2 = staticinvoke <org.jdesktop.swingx.util.WindowUtils: java.awt.Window findWindow(java.awt.Component)>($r1);

        return $r2;
    }

    public static java.util.List getAllComponents(java.awt.Container)
    {
        java.awt.Component r3;
        java.util.ArrayList $r2;
        java.util.List $r5;
        java.awt.Component[] $r1;
        int i0, i1;
        java.awt.Container r0, $r4;
        boolean $z0;

        r0 := @parameter0: java.awt.Container;

        $r1 = virtualinvoke r0.<java.awt.Container: java.awt.Component[] getComponents()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = $r1[i1];

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        $z0 = r3 instanceof java.awt.Container;

        if $z0 == 0 goto label2;

        $r4 = (java.awt.Container) r3;

        $r5 = staticinvoke <org.jdesktop.swingx.util.WindowUtils: java.util.List getAllComponents(java.awt.Container)>($r4);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r2;
    }

    public static void setMinimumSizeManager(java.awt.Window, int, int)
    {
        java.awt.event.ComponentListener[] $r1;
        java.awt.Window r0;
        org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener $r2, $r3;
        java.awt.event.ComponentListener r4, r5;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @parameter0: java.awt.Window;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<java.awt.Window: java.awt.event.ComponentListener[] getComponentListeners()>();

        r5 = null;

        i0 = lengthof $r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r4 = $r1[i3];

        $z0 = r4 instanceof org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener;

        if $z0 == 0 goto label2;

        r5 = r4;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if r5 != null goto label4;

        $r3 = new org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener;

        specialinvoke $r3.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: void <init>(java.awt.Window,int,int)>(r0, i1, i2);

        virtualinvoke r0.<java.awt.Window: void addComponentListener(java.awt.event.ComponentListener)>($r3);

        goto label5;

     label4:
        $r2 = (org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener) r5;

        virtualinvoke $r2.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: void resetSizes(int,int)>(i1, i2);

     label5:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/jdesktop/swingx/util/WindowUtils;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.util.WindowUtils: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
