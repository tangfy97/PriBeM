public class org.apache.jena.riot.adapters.AdapterFileManager extends com.hp.hpl.jena.util.FileManager
{
    private static org.slf4j.Logger log;
    private static org.apache.jena.riot.adapters.AdapterFileManager instance;
    private final org.apache.jena.riot.stream.StreamManager streamManager;
    private org.apache.jena.riot.adapters.FileManagerModelCache modelCache;

    public static org.apache.jena.riot.adapters.AdapterFileManager get()
    {
        org.apache.jena.riot.adapters.AdapterFileManager $r0, $r1, $r2;

        $r0 = <org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.AdapterFileManager instance>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.AdapterFileManager makeGlobal()>();

        <org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.AdapterFileManager instance> = $r2;

     label1:
        $r1 = <org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.AdapterFileManager instance>;

        return $r1;
    }

    public static void setGlobalFileManager(org.apache.jena.riot.adapters.AdapterFileManager)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;

        r0 := @parameter0: org.apache.jena.riot.adapters.AdapterFileManager;

        <org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.AdapterFileManager instance> = r0;

        return;
    }

    private void <init>()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.adapters.FileManagerModelCache $r1;
        org.apache.jena.riot.stream.StreamManager $r2;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        specialinvoke r0.<com.hp.hpl.jena.util.FileManager: void <init>()>();

        $r1 = new org.apache.jena.riot.adapters.FileManagerModelCache;

        specialinvoke $r1.<org.apache.jena.riot.adapters.FileManagerModelCache: void <init>()>();

        r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache> = $r1;

        $r2 = new org.apache.jena.riot.stream.StreamManager;

        specialinvoke $r2.<org.apache.jena.riot.stream.StreamManager: void <init>()>();

        r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager> = $r2;

        return;
    }

    public com.hp.hpl.jena.util.FileManager clone()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0, $r3;
        org.apache.jena.riot.stream.StreamManager $r1, $r2;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r1 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.StreamManager clone()>();

        $r3 = new org.apache.jena.riot.adapters.AdapterFileManager;

        specialinvoke $r3.<org.apache.jena.riot.adapters.AdapterFileManager: void <init>(org.apache.jena.riot.stream.StreamManager)>($r2);

        return $r3;
    }

    public void <init>(org.apache.jena.riot.stream.StreamManager)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.stream.StreamManager r1;
        org.apache.jena.riot.stream.LocationMapper $r2;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: org.apache.jena.riot.stream.StreamManager;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper getLocationMapper()>();

     label2:
        specialinvoke r0.<org.apache.jena.riot.adapters.AdapterFileManager: void <init>(org.apache.jena.riot.stream.StreamManager,org.apache.jena.riot.stream.LocationMapper)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.jena.riot.stream.StreamManager, org.apache.jena.riot.stream.LocationMapper)
    {
        org.apache.jena.riot.stream.LocationMapper r2;
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.adapters.FileManagerModelCache $r1;
        org.apache.jena.riot.stream.StreamManager $r3, r4;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r4 := @parameter0: org.apache.jena.riot.stream.StreamManager;

        r2 := @parameter1: org.apache.jena.riot.stream.LocationMapper;

        specialinvoke r0.<com.hp.hpl.jena.util.FileManager: void <init>()>();

        $r1 = new org.apache.jena.riot.adapters.FileManagerModelCache;

        specialinvoke $r1.<org.apache.jena.riot.adapters.FileManagerModelCache: void <init>()>();

        r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache> = $r1;

        if r4 != null goto label1;

        $r3 = new org.apache.jena.riot.stream.StreamManager;

        specialinvoke $r3.<org.apache.jena.riot.stream.StreamManager: void <init>()>();

        r4 = $r3;

     label1:
        r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager> = r4;

        virtualinvoke r4.<org.apache.jena.riot.stream.StreamManager: void setLocationMapper(org.apache.jena.riot.stream.LocationMapper)>(r2);

        return;
    }

    public static org.apache.jena.riot.adapters.AdapterFileManager makeGlobal()
    {
        org.apache.jena.riot.adapters.AdapterFileManager $r0;
        org.apache.jena.riot.stream.StreamManager $r1;

        $r0 = new org.apache.jena.riot.adapters.AdapterFileManager;

        $r1 = staticinvoke <org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.StreamManager get()>();

        specialinvoke $r0.<org.apache.jena.riot.adapters.AdapterFileManager: void <init>(org.apache.jena.riot.stream.StreamManager)>($r1);

        return $r0;
    }

    public org.apache.jena.riot.stream.StreamManager getStreamManager()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.stream.StreamManager $r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r1 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        return $r1;
    }

    public void setLocationMapper(com.hp.hpl.jena.util.LocationMapper)
    {
        org.apache.jena.riot.stream.LocationMapper $r3;
        com.hp.hpl.jena.util.LocationMapper r1;
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.stream.StreamManager $r2;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: com.hp.hpl.jena.util.LocationMapper;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r3 = staticinvoke <org.apache.jena.riot.adapters.AdapterLib: org.apache.jena.riot.stream.LocationMapper copyConvert(com.hp.hpl.jena.util.LocationMapper)>(r1);

        virtualinvoke $r2.<org.apache.jena.riot.stream.StreamManager: void setLocationMapper(org.apache.jena.riot.stream.LocationMapper)>($r3);

        return;
    }

    public com.hp.hpl.jena.util.LocationMapper getLocationMapper()
    {
        org.apache.jena.riot.stream.LocationMapper $r3;
        org.apache.jena.riot.adapters.AdapterFileManager r1;
        org.apache.jena.riot.adapters.AdapterLocationMapper $r0;
        org.apache.jena.riot.stream.StreamManager $r2;

        r1 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r0 = new org.apache.jena.riot.adapters.AdapterLocationMapper;

        $r2 = r1.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper getLocationMapper()>();

        specialinvoke $r0.<org.apache.jena.riot.adapters.AdapterLocationMapper: void <init>(org.apache.jena.riot.stream.LocationMapper)>($r3);

        return $r0;
    }

    public java.util.Iterator locators()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void remove(com.hp.hpl.jena.util.Locator)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r1;
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.util.Locator r2;

        r1 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r2 := @parameter0: com.hp.hpl.jena.util.Locator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void addLocator(com.hp.hpl.jena.util.Locator)
    {
        org.slf4j.Logger $r3;
        com.hp.hpl.jena.util.Locator r0;
        org.apache.jena.riot.adapters.AdapterFileManager r8;
        org.apache.jena.riot.stream.StreamManager $r9;
        java.lang.StringBuilder $r2, $r4, $r6;
        java.lang.String $r5, $r7;
        org.apache.jena.riot.stream.Locator $r1;

        r8 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r0 := @parameter0: com.hp.hpl.jena.util.Locator;

        $r1 = staticinvoke <org.apache.jena.riot.adapters.AdapterLib: org.apache.jena.riot.stream.Locator convert(com.hp.hpl.jena.util.Locator)>(r0);

        $r3 = <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add location: ");

        $r5 = interfaceinvoke $r1.<org.apache.jena.riot.stream.Locator: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r7);

        $r9 = r8.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        virtualinvoke $r9.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r1);

        return;
    }

    public void addLocatorFile()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        virtualinvoke r0.<org.apache.jena.riot.adapters.AdapterFileManager: void addLocatorFile(java.lang.String)>(null);

        return;
    }

    public void addLocatorFile(java.lang.String)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r2;
        org.apache.jena.riot.stream.LocatorFile $r0;
        org.apache.jena.riot.stream.StreamManager $r3;
        java.lang.String r1;

        r2 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.jena.riot.stream.LocatorFile;

        specialinvoke $r0.<org.apache.jena.riot.stream.LocatorFile: void <init>(java.lang.String)>(r1);

        $r3 = r2.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        virtualinvoke $r3.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r0);

        return;
    }

    public void addLocatorClassLoader(java.lang.ClassLoader)
    {
        org.apache.jena.riot.stream.LocatorClassLoader $r0;
        org.apache.jena.riot.adapters.AdapterFileManager r2;
        org.apache.jena.riot.stream.StreamManager $r3;
        java.lang.ClassLoader r1;

        r2 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.ClassLoader;

        $r0 = new org.apache.jena.riot.stream.LocatorClassLoader;

        specialinvoke $r0.<org.apache.jena.riot.stream.LocatorClassLoader: void <init>(java.lang.ClassLoader)>(r1);

        $r3 = r2.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        virtualinvoke $r3.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r0);

        return;
    }

    public void addLocatorURL()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r1;
        org.apache.jena.riot.stream.StreamManager $r2;
        org.apache.jena.riot.stream.LocatorURL $r0;

        r1 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r0 = new org.apache.jena.riot.stream.LocatorURL;

        specialinvoke $r0.<org.apache.jena.riot.stream.LocatorURL: void <init>()>();

        $r2 = r1.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        virtualinvoke $r2.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r0);

        return;
    }

    public void addLocatorZip(java.lang.String)
    {
        org.apache.jena.riot.stream.LocatorZip $r0;
        org.apache.jena.riot.adapters.AdapterFileManager r2;
        org.apache.jena.riot.stream.StreamManager $r3;
        java.lang.String r1;

        r2 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.jena.riot.stream.LocatorZip;

        specialinvoke $r0.<org.apache.jena.riot.stream.LocatorZip: void <init>(java.lang.String)>(r1);

        $r3 = r2.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        virtualinvoke $r3.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r0);

        return;
    }

    public void resetCache()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.adapters.FileManagerModelCache $r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r1 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache>;

        virtualinvoke $r1.<org.apache.jena.riot.adapters.FileManagerModelCache: void resetCache()>();

        return;
    }

    public void setModelCaching(boolean)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.adapters.FileManagerModelCache $r1;
        boolean z0;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache>;

        virtualinvoke $r1.<org.apache.jena.riot.adapters.FileManagerModelCache: void setModelCaching(boolean)>(z0);

        return;
    }

    public boolean isCachingModels()
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.adapters.FileManagerModelCache $r1;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r1 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache>;

        $z0 = virtualinvoke $r1.<org.apache.jena.riot.adapters.FileManagerModelCache: boolean isCachingModels()>();

        return $z0;
    }

    public com.hp.hpl.jena.rdf.model.Model getFromCache(java.lang.String)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        com.hp.hpl.jena.rdf.model.Model $r3;
        org.apache.jena.riot.adapters.FileManagerModelCache $r2;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.adapters.FileManagerModelCache: com.hp.hpl.jena.rdf.model.Model getFromCache(java.lang.String)>(r1);

        return $r3;
    }

    public boolean hasCachedModel(java.lang.String)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.adapters.FileManagerModelCache $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache>;

        $z0 = virtualinvoke $r2.<org.apache.jena.riot.adapters.FileManagerModelCache: boolean hasCachedModel(java.lang.String)>(r1);

        return $z0;
    }

    public void addCacheModel(java.lang.String, com.hp.hpl.jena.rdf.model.Model)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        org.apache.jena.riot.adapters.FileManagerModelCache $r3;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r3 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache>;

        virtualinvoke $r3.<org.apache.jena.riot.adapters.FileManagerModelCache: void addCacheModel(java.lang.String,com.hp.hpl.jena.rdf.model.Model)>(r1, r2);

        return;
    }

    public void removeCacheModel(java.lang.String)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.adapters.FileManagerModelCache $r2;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.FileManagerModelCache modelCache>;

        virtualinvoke $r2.<org.apache.jena.riot.adapters.FileManagerModelCache: void removeCacheModel(java.lang.String)>(r1);

        return;
    }

    protected com.hp.hpl.jena.rdf.model.Model readModelWorker(com.hp.hpl.jena.rdf.model.Model, java.lang.String, java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.jena.atlas.web.TypedInputStream $r5;
        org.apache.jena.riot.stream.StreamManager $r4;
        com.hp.hpl.jena.shared.NotFoundException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r21, $r23, $r24, $r26, $r28, $r29, $r30, $r31;
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        java.lang.String r1, $r2, $r13, $r19, $r20, $r25, $r32, r34, r35;
        org.slf4j.Logger $r3, $r8, $r15, $r22, $r27, $r36;
        java.io.IOException $r33;
        com.hp.hpl.jena.rdf.model.Model r7;
        org.apache.jena.atlas.web.ContentType $r6;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r1 := @parameter1: java.lang.String;

        r34 := @parameter2: java.lang.String;

        r35 := @parameter3: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.adapters.AdapterFileManager: java.lang.String mapURI(java.lang.String)>(r1);

        $r3 = <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label01;

        $r27 = <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String)>($r32);

     label01:
        if r35 != null goto label02;

        if r34 != null goto label02;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $z3 == 0 goto label02;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.lang.String)>($r2);

        return r7;

     label02:
        if r35 != null goto label05;

        $r20 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String guessLang(java.lang.String)>($r2);

        r35 = $r20;

        if $r20 == null goto label03;

        $z2 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label04;

     label03:
        r35 = "RDF/XML";

     label04:
        $r36 = <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log>;

        $z5 = interfaceinvoke $r36.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label05;

        $r22 = <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Syntax guess: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>($r25);

     label05:
        if r34 != null goto label06;

        r34 = staticinvoke <org.apache.jena.riot.adapters.AdapterFileManager: java.lang.String chooseBaseURI(java.lang.String)>(r1);

     label06:
        $r4 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r5 = virtualinvoke $r4.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.atlas.web.TypedInputStream openNoMapOrNull(java.lang.String)>($r2);

        if $r5 != null goto label08;

        $r8 = <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label07;

        $r15 = <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to locate \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r19);

     label07:
        $r9 = new com.hp.hpl.jena.shared.NotFoundException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.hp.hpl.jena.shared.NotFoundException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label08:
        $r6 = virtualinvoke $r5.<org.apache.jena.atlas.web.TypedInputStream: org.apache.jena.atlas.web.ContentType getMediaType()>();

        if $r6 == null goto label09;

     label09:
        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>($r5, r34, r35);

     label10:
        virtualinvoke $r5.<org.apache.jena.atlas.web.TypedInputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r33 := @caughtexception;

     label13:
        return r7;

        catch java.io.IOException from label10 to label11 with label12;
    }

    private static java.lang.String chooseBaseURI(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String getScheme(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r2 = staticinvoke <org.apache.jena.riot.system.IRILib: java.lang.String filenameToIRI(java.lang.String)>(r0);

        return $r2;
    }

    public java.io.InputStream open(java.lang.String)
    {
        org.apache.jena.atlas.web.TypedInputStream $r3;
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.stream.StreamManager $r2;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.atlas.web.TypedInputStream open(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String mapURI(java.lang.String)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.stream.StreamManager $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.stream.StreamManager: java.lang.String mapURI(java.lang.String)>(r1);

        return $r3;
    }

    public java.io.InputStream openNoMap(java.lang.String)
    {
        org.apache.jena.atlas.web.TypedInputStream $r3;
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.stream.StreamManager $r2;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.atlas.web.TypedInputStream openNoMap(java.lang.String)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.util.TypedStream openNoMapOrNull(java.lang.String)
    {
        org.apache.jena.atlas.web.TypedInputStream $r3;
        com.hp.hpl.jena.util.TypedStream $r4;
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        org.apache.jena.riot.stream.StreamManager $r2;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.stream.StreamManager streamManager>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.atlas.web.TypedInputStream openNoMapOrNull(java.lang.String)>(r1);

        $r4 = staticinvoke <org.apache.jena.riot.adapters.AdapterLib: com.hp.hpl.jena.util.TypedStream convert(org.apache.jena.atlas.web.TypedInputStream)>($r3);

        return $r4;
    }

    public java.lang.String remap(java.lang.String)
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.adapters.AdapterFileManager: java.lang.String mapURI(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.jena.riot.adapters.AdapterFileManager r0;
        com.hp.hpl.jena.util.FileManager $r1;

        r0 := @this: org.apache.jena.riot.adapters.AdapterFileManager;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.adapters.AdapterFileManager: com.hp.hpl.jena.util.FileManager clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jena/riot/adapters/AdapterFileManager;");

        <org.apache.jena.riot.adapters.AdapterFileManager: org.slf4j.Logger log> = $r0;

        <org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.AdapterFileManager instance> = null;

        return;
    }
}
