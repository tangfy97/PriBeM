public class org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode extends org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode
{
    private org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType;
    private int distance;
    private boolean inorder;
    private java.lang.CharSequence field;

    public void <init>(java.util.List, java.lang.CharSequence, org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type, int, boolean)
    {
        org.apache.lucene.queryparser.flexible.core.QueryNodeError $r12;
        java.lang.Object[] $r8;
        java.lang.CharSequence r4;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type $r2, r3, $r5;
        java.lang.Integer $r10;
        java.util.List r1;
        org.apache.lucene.queryparser.flexible.messages.MessageImpl $r11;
        int i0, $i2;
        java.lang.String $r9;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;
        boolean z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        r1 := @parameter0: java.util.List;

        r4 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode: void <init>(java.util.List)>(r1);

        $r2 = <org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type SENTENCE>;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType> = $r2;

        $i2 = (int) -1;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance> = $i2;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: boolean inorder> = 0;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field> = null;

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: void setLeaf(boolean)>(0);

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType> = r3;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: boolean inorder> = z0;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field> = r4;

        $r5 = <org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type NUMBER>;

        if r3 != $r5 goto label2;

        if i0 > 0 goto label1;

        $r12 = new org.apache.lucene.queryparser.flexible.core.QueryNodeError;

        $r11 = new org.apache.lucene.queryparser.flexible.messages.MessageImpl;

        $r9 = <org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages: java.lang.String PARAMETER_VALUE_NOT_SUPPORTED>;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "distance";

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[1] = $r10;

        specialinvoke $r11.<org.apache.lucene.queryparser.flexible.messages.MessageImpl: void <init>(java.lang.String,java.lang.Object[])>($r9, $r8);

        specialinvoke $r12.<org.apache.lucene.queryparser.flexible.core.QueryNodeError: void <init>(org.apache.lucene.queryparser.flexible.messages.Message)>($r11);

        throw $r12;

     label1:
        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance> = i0;

     label2:
        staticinvoke <org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: void clearFields(java.util.List,java.lang.CharSequence)>(r1, r4);

        return;
    }

    public void <init>(java.util.List, java.lang.CharSequence, org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type, boolean)
    {
        java.util.List r1;
        java.lang.CharSequence r2;
        int $i1;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type r3;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;
        boolean z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type;

        z0 := @parameter3: boolean;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: void <init>(java.util.List,java.lang.CharSequence,org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type,int,boolean)>(r1, r2, r3, $i1, z0);

        return;
    }

    private static void clearFields(java.util.List, java.lang.CharSequence)
    {
        java.util.Iterator $r1;
        java.lang.CharSequence r5;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode $r4, $r6;
        java.util.List r0;
        int $i0;
        java.lang.Object $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r5 := @parameter1: java.lang.CharSequence;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r2;

        $z1 = r3 instanceof org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        if $z1 == 0 goto label4;

        $r4 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode) r3;

        $r4.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: boolean toQueryStringIgnoreFields> = 1;

        $r6 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode) r3;

        virtualinvoke $r6.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: void setField(java.lang.CharSequence)>(r5);

     label4:
        goto label3;

     label5:
        return;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type getProximityType()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r41;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r9, $r25;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type $r14, $r30;
        java.util.List $r6, $r21, $r37;
        java.lang.StringBuilder $r2, $r3, $r4, $r8, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r24, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r35, $r44, $r45, $r46, $r47;
        int $i0, $i1, $i2, $i4;
        java.lang.String r5, $r15, $r20, $r31, $r36, $r39, $r42, $r43;
        java.util.Iterator $r38;
        java.lang.Object $r40;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        $i0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $r43 = "";

        goto label2;

     label1:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" distance=\'");

        $i1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r43 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        r5 = $r43;

        $r6 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.util.List getChildren()>();

        if $r6 == null goto label3;

        $r21 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.util.List getChildren()>();

        $i2 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i2 != 0 goto label4;

     label3:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<proximity field=\'");

        $r9 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' inorder=\'");

        $z0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: boolean inorder>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' type=\'");

        $r14 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType>;

        $r15 = virtualinvoke $r14.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type: java.lang.String toString()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/>");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;

     label4:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<proximity field=\'");

        $r25 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' inorder=\'");

        $z1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: boolean inorder>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' type=\'");

        $r30 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType>;

        $r31 = virtualinvoke $r30.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type: java.lang.String toString()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r37 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.util.List getChildren()>();

        $r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r40 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r41 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r40;

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r42 = virtualinvoke r41.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        goto label5;

     label6:
        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n</proximity>");

        $r39 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r39;
    }

    public java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r34;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r3, $r14, $r37, $r41;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type $r2;
        java.util.List $r12, $r30, $r31;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r15, $r16, $r18, $r19, $r20, $r21, $r24, $r26, $r27, $r28, $r35, $r42, $r43, $r44, $r45, $r46;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r10, $r17, $r22, $r25, $r29, $r38, $r39, r40;
        java.util.Iterator $r32;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r36;
        java.lang.Object $r33;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        r36 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type: java.lang.CharSequence toQueryString()>();

        $r4 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $i0 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $r38 = "";

        goto label2;

     label1:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i1 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r38 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $z0 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: boolean inorder>;

        if $z0 == 0 goto label3;

        $r39 = " INORDER";

        goto label4;

     label3:
        $r39 = "";

     label4:
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.util.List getChildren()>();

        if $r12 == null goto label7;

        $r30 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.util.List getChildren()>();

        $i2 = interfaceinvoke $r30.<java.util.List: int size()>();

        if $i2 != 0 goto label5;

        goto label7;

     label5:
        r40 = "";

        $r31 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.util.List getChildren()>();

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r34 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r33;

        $r35 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r37 = interfaceinvoke r34.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r36);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r37);

        r40 = " ";

        goto label6;

     label7:
        $r41 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        $z2 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: boolean isDefaultField(java.lang.CharSequence)>($r41);

        if $z2 == 0 goto label8;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( ");

        $r25 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ) ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;

     label8:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r14 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        $r15 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":(( ");

        $r17 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ) ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        java.lang.CharSequence $r4;
        int $i0;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0, r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree()>();

        r2 = (org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode) $r1;

        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$Type proximityType> = $r3;

        $i0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance> = $i0;

        $r4 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field> = $r4;

        return r2;
    }

    public int getDistance()
    {
        int $i0;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        $i0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: int distance>;

        return $i0;
    }

    public java.lang.CharSequence getField()
    {
        java.lang.CharSequence $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        return $r1;
    }

    public java.lang.String getFieldAsString()
    {
        java.lang.CharSequence $r1, $r2;
        java.lang.String $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public void setField(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: java.lang.CharSequence field> = r1;

        return;
    }

    public boolean isInOrder()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode;

        $z0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode: boolean inorder>;

        return $z0;
    }
}
