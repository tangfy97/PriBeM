public abstract class ucar.units.BaseQuantity extends java.lang.Object implements ucar.units.Base, java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final ucar.units.RegularBaseQuantity AMOUNT_OF_SUBSTANCE;
    public static final ucar.units.RegularBaseQuantity ELECTRIC_CURRENT;
    public static final ucar.units.RegularBaseQuantity LENGTH;
    public static final ucar.units.RegularBaseQuantity LUMINOUS_INTENSITY;
    public static final ucar.units.RegularBaseQuantity MASS;
    public static final ucar.units.SupplementaryBaseQuantity PLANE_ANGLE;
    public static final ucar.units.SupplementaryBaseQuantity SOLID_ANGLE;
    public static final ucar.units.RegularBaseQuantity THERMODYNAMIC_TEMPERATURE;
    public static final ucar.units.RegularBaseQuantity TIME;
    public static final ucar.units.UnknownBaseQuantity UNKNOWN;
    private final java.lang.String name;
    private final java.lang.String symbol;

    public void <init>(java.lang.String, java.lang.String) throws ucar.units.NameException
    {
        ucar.units.NameException $r3;
        int $i0, $i1;
        ucar.units.BaseQuantity r0;
        java.lang.String r1, r2;

        r0 := @this: ucar.units.BaseQuantity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<ucar.units.BaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r2, 1);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        $r3 = new ucar.units.NameException;

        specialinvoke $r3.<ucar.units.NameException: void <init>(java.lang.String)>("Invalid name or symbol");

        throw $r3;

     label2:
        return;
    }

    protected void <init>(java.lang.String, java.lang.String, boolean)
    {
        ucar.units.BaseQuantity r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: ucar.units.BaseQuantity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.units.BaseQuantity: java.lang.String name> = r1;

        r0.<ucar.units.BaseQuantity: java.lang.String symbol> = r2;

        return;
    }

    public java.lang.String getName()
    {
        ucar.units.BaseQuantity r0;
        java.lang.String $r1;

        r0 := @this: ucar.units.BaseQuantity;

        $r1 = r0.<ucar.units.BaseQuantity: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getSymbol()
    {
        ucar.units.BaseQuantity r0;
        java.lang.String $r1;

        r0 := @this: ucar.units.BaseQuantity;

        $r1 = r0.<ucar.units.BaseQuantity: java.lang.String symbol>;

        return $r1;
    }

    public final java.lang.String getID()
    {
        ucar.units.BaseQuantity r0;
        java.lang.String $r1, $r2;

        r0 := @this: ucar.units.BaseQuantity;

        $r1 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getName()>();

        goto label2;

     label1:
        $r2 = $r1;

     label2:
        return $r2;
    }

    public final java.lang.String toString()
    {
        ucar.units.BaseQuantity r0;
        java.lang.String $r1;

        r0 := @this: ucar.units.BaseQuantity;

        $r1 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getID()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        ucar.units.BaseQuantity r0, $r3, $r7;
        java.lang.String $r2, $r4, $r5, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: ucar.units.BaseQuantity;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        $z3 = 1;

        goto label5;

     label1:
        $z0 = r1 instanceof ucar.units.BaseQuantity;

        if $z0 != 0 goto label2;

        $z3 = 0;

        goto label5;

     label2:
        $r2 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getName()>();

        $r3 = (ucar.units.BaseQuantity) r1;

        $r4 = virtualinvoke $r3.<ucar.units.BaseQuantity: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        $r7 = (ucar.units.BaseQuantity) r1;

        $r8 = virtualinvoke $r7.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        ucar.units.BaseQuantity r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: ucar.units.BaseQuantity;

        $r1 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getName()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $r3 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        if $r3 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        $i2 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

     label2:
        $i1 = $i0 ^ $i2;

        return $i1;
    }

    public int compareTo(ucar.units.BaseQuantity)
    {
        int $i0, i1;
        ucar.units.BaseQuantity r0, r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6;

        r0 := @this: ucar.units.BaseQuantity;

        r1 := @parameter0: ucar.units.BaseQuantity;

        if r0 != r1 goto label1;

        i1 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<ucar.units.BaseQuantity: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r3);

        i1 = $i0;

        if $i0 != 0 goto label2;

        $r4 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r0.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        $r6 = virtualinvoke r1.<ucar.units.BaseQuantity: java.lang.String getSymbol()>();

        i1 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r6);

     label2:
        return i1;
    }

    public abstract boolean isDimensionless();

    public static void main(java.lang.String[])
    {
        ucar.units.SupplementaryBaseQuantity $r17, $r38, $r45, $r46, $r52, $r53, $r73, $r80, $r81, $r87, $r88;
        java.lang.StringBuilder $r0, $r2, $r5, $r7, $r9, $r12, $r14, $r16, $r19, $r21, $r23, $r26, $r28, $r30, $r33, $r35, $r37, $r40, $r42, $r44, $r47, $r49, $r51, $r54, $r56, $r58, $r61, $r63, $r65, $r68, $r70, $r72, $r75, $r77, $r79, $r82, $r84, $r86, $r89;
        ucar.units.RegularBaseQuantity $r3, $r10, $r24, $r25, $r31, $r32, $r39, $r59, $r60, $r66, $r67, $r74;
        java.lang.String $r4, $r6, $r11, $r13, $r18, $r20, $r27, $r34, $r41, $r48, $r55, $r62, $r69, $r76, $r83, $r90;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] r91;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.PrintStream $r1, $r8, $r15, $r22, $r29, $r36, $r43, $r50, $r57, $r64, $r71, $r78, $r85;

        r91 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AMOUNT_OF_SUBSTANCE.getName() = ");

        $r3 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity AMOUNT_OF_SUBSTANCE>;

        $r4 = virtualinvoke $r3.<ucar.units.RegularBaseQuantity: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LUMINOUS_INTENSITY.getSymbol() = ");

        $r10 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LUMINOUS_INTENSITY>;

        $r11 = virtualinvoke $r10.<ucar.units.RegularBaseQuantity: java.lang.String getSymbol()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PLANE_ANGLE.getSymbol() = ");

        $r17 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $r18 = virtualinvoke $r17.<ucar.units.SupplementaryBaseQuantity: java.lang.String getSymbol()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LENGTH.equals(LENGTH) = ");

        $r25 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r24 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $z0 = virtualinvoke $r25.<ucar.units.RegularBaseQuantity: boolean equals(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LENGTH.equals(MASS) = ");

        $r32 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r31 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity MASS>;

        $z1 = virtualinvoke $r32.<ucar.units.RegularBaseQuantity: boolean equals(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LENGTH.equals(PLANE_ANGLE) = ");

        $r39 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r38 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $z2 = virtualinvoke $r39.<ucar.units.RegularBaseQuantity: boolean equals(java.lang.Object)>($r38);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r41);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PLANE_ANGLE.equals(PLANE_ANGLE) = ");

        $r46 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $r45 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $z3 = virtualinvoke $r46.<ucar.units.SupplementaryBaseQuantity: boolean equals(java.lang.Object)>($r45);

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r48);

        $r50 = <java.lang.System: java.io.PrintStream out>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PLANE_ANGLE.equals(SOLID_ANGLE) = ");

        $r53 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $r52 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity SOLID_ANGLE>;

        $z4 = virtualinvoke $r53.<ucar.units.SupplementaryBaseQuantity: boolean equals(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>($r55);

        $r57 = <java.lang.System: java.io.PrintStream out>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LENGTH.compareTo(LENGTH) = ");

        $r60 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r59 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $i0 = virtualinvoke $r60.<ucar.units.RegularBaseQuantity: int compareTo(ucar.units.BaseQuantity)>($r59);

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r62);

        $r64 = <java.lang.System: java.io.PrintStream out>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LENGTH.compareTo(MASS) = ");

        $r67 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r66 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity MASS>;

        $i1 = virtualinvoke $r67.<ucar.units.RegularBaseQuantity: int compareTo(ucar.units.BaseQuantity)>($r66);

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>($r69);

        $r71 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LENGTH.compareTo(PLANE_ANGLE) = ");

        $r74 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r73 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $i2 = virtualinvoke $r74.<ucar.units.RegularBaseQuantity: int compareTo(ucar.units.BaseQuantity)>($r73);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r71.<java.io.PrintStream: void println(java.lang.String)>($r76);

        $r78 = <java.lang.System: java.io.PrintStream out>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PLANE_ANGLE.compareTo(PLANE_ANGLE) = ");

        $r81 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $r80 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $i3 = virtualinvoke $r81.<ucar.units.SupplementaryBaseQuantity: int compareTo(ucar.units.BaseQuantity)>($r80);

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r83);

        $r85 = <java.lang.System: java.io.PrintStream out>;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PLANE_ANGLE.compareTo(SOLID_ANGLE) = ");

        $r88 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $r87 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity SOLID_ANGLE>;

        $i4 = virtualinvoke $r88.<ucar.units.SupplementaryBaseQuantity: int compareTo(ucar.units.BaseQuantity)>($r87);

        $r89 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r90);

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        ucar.units.BaseQuantity r0, $r2;

        r0 := @this: ucar.units.BaseQuantity;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.units.BaseQuantity) r1;

        $i0 = virtualinvoke r0.<ucar.units.BaseQuantity: int compareTo(ucar.units.BaseQuantity)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        ucar.units.RegularBaseQuantity $r0, $r1, $r2, $r3, $r4, $r7, $r8;
        ucar.units.SupplementaryBaseQuantity $r5, $r6;
        ucar.units.UnknownBaseQuantity $r9;

        <ucar.units.BaseQuantity: long serialVersionUID> = 1L;

        $r0 = new ucar.units.RegularBaseQuantity;

        specialinvoke $r0.<ucar.units.RegularBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Amount of Substance", "N", 1);

        <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity AMOUNT_OF_SUBSTANCE> = $r0;

        $r1 = new ucar.units.RegularBaseQuantity;

        specialinvoke $r1.<ucar.units.RegularBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Electric Current", "I", 1);

        <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity ELECTRIC_CURRENT> = $r1;

        $r2 = new ucar.units.RegularBaseQuantity;

        specialinvoke $r2.<ucar.units.RegularBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Length", "L", 1);

        <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH> = $r2;

        $r3 = new ucar.units.RegularBaseQuantity;

        specialinvoke $r3.<ucar.units.RegularBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Luminous Intensity", "J", 1);

        <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LUMINOUS_INTENSITY> = $r3;

        $r4 = new ucar.units.RegularBaseQuantity;

        specialinvoke $r4.<ucar.units.RegularBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Mass", "M", 1);

        <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity MASS> = $r4;

        $r5 = new ucar.units.SupplementaryBaseQuantity;

        specialinvoke $r5.<ucar.units.SupplementaryBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Plane Angle", null, 1);

        <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE> = $r5;

        $r6 = new ucar.units.SupplementaryBaseQuantity;

        specialinvoke $r6.<ucar.units.SupplementaryBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Solid Angle", null, 1);

        <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity SOLID_ANGLE> = $r6;

        $r7 = new ucar.units.RegularBaseQuantity;

        specialinvoke $r7.<ucar.units.RegularBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Thermodynamic Temperature", "T", 1);

        <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity THERMODYNAMIC_TEMPERATURE> = $r7;

        $r8 = new ucar.units.RegularBaseQuantity;

        specialinvoke $r8.<ucar.units.RegularBaseQuantity: void <init>(java.lang.String,java.lang.String,boolean)>("Time", "t", 1);

        <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity TIME> = $r8;

        $r9 = new ucar.units.UnknownBaseQuantity;

        specialinvoke $r9.<ucar.units.UnknownBaseQuantity: void <init>()>();

        <ucar.units.BaseQuantity: ucar.units.UnknownBaseQuantity UNKNOWN> = $r9;

        return;
    }
}
