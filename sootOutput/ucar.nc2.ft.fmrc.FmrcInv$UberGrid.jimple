public class ucar.nc2.ft.fmrc.FmrcInv$UberGrid extends java.lang.Object implements java.lang.Comparable
{
    private final java.lang.String gridName;
    private final java.util.List runs;
    private ucar.nc2.ft.fmrc.VertCoord vertCoordUnion;
    private ucar.nc2.ft.fmrc.EnsCoord ensCoordUnion;
    private ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq;
    final ucar.nc2.ft.fmrc.FmrcInv this$0;

    void <init>(ucar.nc2.ft.fmrc.FmrcInv, java.lang.String)
    {
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;
        java.lang.String r3;
        ucar.nc2.ft.fmrc.FmrcInv r1;
        java.util.ArrayList $r2;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        r3 := @parameter1: java.lang.String;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs> = $r2;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion> = null;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.EnsCoord ensCoordUnion> = null;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq> = null;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String gridName> = r3;

        return;
    }

    void addGridVariable(ucar.nc2.ft.fmrc.FmrInv$GridVariable, int)
    {
        java.util.List $r2;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;
        int i0;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrInv$GridVariable;

        i0 := @parameter1: int;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String gridName>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String gridName>;

        return $r1;
    }

    public ucar.nc2.ft.fmrc.TimeCoord getUnionTimeCoord()
    {
        ucar.nc2.ft.fmrc.TimeCoord $r2;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq $r1;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.TimeCoord getUnionTimeCoord()>();

        return $r2;
    }

    public boolean isInterval()
    {
        ucar.nc2.ft.fmrc.TimeCoord $r1;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = virtualinvoke r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.TimeCoord getUnionTimeCoord()>();

        $z0 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.TimeCoord: boolean isInterval()>();

        return $z0;
    }

    public java.lang.String getTimeCoordName()
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq $r1;
        java.lang.String $r2;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getVertCoordName()
    {
        ucar.nc2.ft.fmrc.VertCoord $r1, $r2;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion>;

        if $r1 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String getName()>();

     label2:
        return $r3;
    }

    public java.util.List getRuns()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        return $r1;
    }

    public int compareTo(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)
    {
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0, r1;
        int $i0;
        java.lang.String $r2, $r3;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r3 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String gridName>;

        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String gridName>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        return $i0;
    }

    public int countTotal()
    {
        java.util.Iterator $r2;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r4;
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        i1 = 0;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r3;

        $i0 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: int countTotal()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    public int countExpected()
    {
        ucar.nc2.ft.fmrc.VertCoord $r1, $r2;
        ucar.nc2.ft.fmrc.TimeCoord $r7;
        java.util.Iterator $r4;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r6;
        java.util.List $r3;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;
        int i0, $i1, $i2, $i3, i4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion>;

        if $r1 != null goto label1;

        $i3 = 1;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion>;

        $i3 = virtualinvoke $r2.<ucar.nc2.ft.fmrc.VertCoord: int getSize()>();

     label2:
        i0 = $i3;

        i4 = 0;

        $r3 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r5;

        $r7 = virtualinvoke r6.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord getTimeExpected()>();

        $i2 = virtualinvoke $r7.<ucar.nc2.ft.fmrc.TimeCoord: int getNCoords()>();

        i4 = i4 + $i2;

        goto label3;

     label4:
        $i1 = i4 * i0;

        return $i1;
    }

    void finish()
    {
        java.lang.Integer $r52, $r57;
        ucar.nc2.ft.fmrc.TimeCoord $r12, $r28, $r29, $r33, $r35, $r40, $r42, $r43, $r45, $r48, $r78;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq $r9, $r10, $r20, $r21, $r81, $r82;
        double[] $r36, $r44, $r46;
        java.util.ArrayList $r2, $r23, $r87;
        ucar.nc2.ft.fmrc.EnsCoord $r65, $r67, $r72, $r73, r84, r86;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r83, r85, r91, r94, r97, r98, r99, r100;
        java.util.Date $r27, $r34, $r41, $r50;
        ucar.nc2.ft.fmrc.FmrcInv $r8, $r19, $r26, $r51, $r56, $r58, $r63, $r70, $r74, $r80, $r93;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.Collection $r16;
        java.util.List $r1, $r3, $r5, $r7, $r14, $r18, $r24, $r30, $r37, $r54, $r59, $r64, $r68, $r71, $r75, $r79, $r89;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0;
        ucar.nc2.ft.fmrc.VertCoord $r60, $r62, $r76, $r77, r88, r92;
        java.util.HashMap $r13;
        int $i0, $i1, $i2, $i3;
        java.util.Iterator $r4, $r6, $r15, $r17, $r25, $r31, $r38, $r90;
        ucar.nc2.ft.fmrc.FmrcInv$HourGroup $r55, r95, r96;
        java.lang.Object $r11, $r22, $r32, $r39, $r47, $r49, $r53, $r61, $r66, $r69;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 1 goto label01;

        $r68 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r69 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>(0);

        r83 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r69;

        $r70 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r71 = virtualinvoke $r70.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List getEnsCoords()>();

        $r72 = r83.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.EnsCoord ensCoordUnion>;

        $r73 = staticinvoke <ucar.nc2.ft.fmrc.EnsCoord: ucar.nc2.ft.fmrc.EnsCoord findEnsCoord(java.util.List,ucar.nc2.ft.fmrc.EnsCoord)>($r71, $r72);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.EnsCoord ensCoordUnion> = $r73;

        $r74 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r75 = virtualinvoke $r74.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List getVertCoords()>();

        $r76 = r83.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion>;

        $r77 = staticinvoke <ucar.nc2.ft.fmrc.VertCoord: ucar.nc2.ft.fmrc.VertCoord findVertCoord(java.util.List,ucar.nc2.ft.fmrc.VertCoord)>($r75, $r76);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion> = $r77;

        $r78 = r83.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion>;

        r83.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeExpected> = $r78;

        $r80 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r79 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r81 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.FmrcInv$RunSeq access$100(ucar.nc2.ft.fmrc.FmrcInv,java.util.List)>($r80, $r79);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq> = $r81;

        $r82 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq>;

        virtualinvoke $r82.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: void addVariable(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)>(r0);

        return;

     label01:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r84 = null;

        $r3 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z9 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label06;

        $r66 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r85 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r66;

        r86 = r85.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.EnsCoord ensCoordUnion>;

        if r86 != null goto label03;

        goto label02;

     label03:
        if r84 != null goto label04;

        $r67 = new ucar.nc2.ft.fmrc.EnsCoord;

        specialinvoke $r67.<ucar.nc2.ft.fmrc.EnsCoord: void <init>(ucar.nc2.ft.fmrc.EnsCoord)>(r86);

        r84 = $r67;

        goto label05;

     label04:
        $z8 = virtualinvoke r84.<ucar.nc2.ft.fmrc.EnsCoord: boolean equalsData(ucar.nc2.ft.fmrc.EnsCoord)>(r86);

        if $z8 != 0 goto label05;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r86);

     label05:
        goto label02;

     label06:
        if r84 == null goto label08;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i3 <= 0 goto label07;

        staticinvoke <ucar.nc2.ft.fmrc.EnsCoord: void normalize(ucar.nc2.ft.fmrc.EnsCoord,java.util.List)>(r84, $r2);

     label07:
        $r63 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r64 = virtualinvoke $r63.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List getEnsCoords()>();

        $r65 = staticinvoke <ucar.nc2.ft.fmrc.EnsCoord: ucar.nc2.ft.fmrc.EnsCoord findEnsCoord(java.util.List,ucar.nc2.ft.fmrc.EnsCoord)>($r64, r84);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.EnsCoord ensCoordUnion> = $r65;

     label08:
        $r87 = new java.util.ArrayList;

        specialinvoke $r87.<java.util.ArrayList: void <init>()>();

        r88 = null;

        $r89 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r90 = interfaceinvoke $r89.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z10 = interfaceinvoke $r90.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label13;

        $r61 = interfaceinvoke $r90.<java.util.Iterator: java.lang.Object next()>();

        r91 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r61;

        r92 = r91.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion>;

        if r92 != null goto label10;

        goto label09;

     label10:
        if r88 != null goto label11;

        $r62 = new ucar.nc2.ft.fmrc.VertCoord;

        specialinvoke $r62.<ucar.nc2.ft.fmrc.VertCoord: void <init>(ucar.nc2.ft.fmrc.VertCoord)>(r92);

        r88 = $r62;

        goto label12;

     label11:
        $z7 = virtualinvoke r88.<ucar.nc2.ft.fmrc.VertCoord: boolean equalsData(ucar.nc2.ft.fmrc.VertCoord)>(r92);

        if $z7 != 0 goto label12;

        interfaceinvoke $r87.<java.util.List: boolean add(java.lang.Object)>(r92);

     label12:
        goto label09;

     label13:
        if r88 == null goto label15;

        $i2 = interfaceinvoke $r87.<java.util.List: int size()>();

        if $i2 <= 0 goto label14;

        staticinvoke <ucar.nc2.ft.fmrc.VertCoord: void normalize(ucar.nc2.ft.fmrc.VertCoord,java.util.List)>(r88, $r87);

     label14:
        $r58 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r59 = virtualinvoke $r58.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List getVertCoords()>();

        $r60 = staticinvoke <ucar.nc2.ft.fmrc.VertCoord: ucar.nc2.ft.fmrc.VertCoord findVertCoord(java.util.List,ucar.nc2.ft.fmrc.VertCoord)>($r59, r88);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.VertCoord vertCoordUnion> = $r60;

     label15:
        $r93 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $z11 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: boolean access$200(ucar.nc2.ft.fmrc.FmrcInv)>($r93);

        if $z11 == 0 goto label28;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r14 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r49 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r94 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r49;

        $r50 = virtualinvoke r94.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.Date getRunDate()>();

        $r51 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $i1 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: int access$300(ucar.nc2.ft.fmrc.FmrcInv,java.util.Date)>($r51, $r50);

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r53 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r52);

        r95 = (ucar.nc2.ft.fmrc.FmrcInv$HourGroup) $r53;

        if r95 != null goto label17;

        $r55 = new ucar.nc2.ft.fmrc.FmrcInv$HourGroup;

        $r56 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        specialinvoke $r55.<ucar.nc2.ft.fmrc.FmrcInv$HourGroup: void <init>(ucar.nc2.ft.fmrc.FmrcInv,int)>($r56, $i1);

        r95 = $r55;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r55);

     label17:
        $r54 = r95.<ucar.nc2.ft.fmrc.FmrcInv$HourGroup: java.util.List runs>;

        interfaceinvoke $r54.<java.util.List: boolean add(java.lang.Object)>(r94);

        goto label16;

     label18:
        $r16 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>();

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label27;

        $r22 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r96 = (ucar.nc2.ft.fmrc.FmrcInv$HourGroup) $r22;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $r24 = r96.<ucar.nc2.ft.fmrc.FmrcInv$HourGroup: java.util.List runs>;

        $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z3 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r47 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r97 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r47;

        $r48 = r97.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion>;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r48);

        goto label20;

     label21:
        $r26 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r27 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date access$500(ucar.nc2.ft.fmrc.FmrcInv)>($r26);

        $r28 = staticinvoke <ucar.nc2.ft.fmrc.TimeCoord: ucar.nc2.ft.fmrc.TimeCoord makeUnion(java.util.List,java.util.Date)>($r23, $r27);

        staticinvoke <ucar.nc2.ft.fmrc.FmrcInv$HourGroup: ucar.nc2.ft.fmrc.TimeCoord access$402(ucar.nc2.ft.fmrc.FmrcInv$HourGroup,ucar.nc2.ft.fmrc.TimeCoord)>(r96, $r28);

        $r29 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv$HourGroup: ucar.nc2.ft.fmrc.TimeCoord access$400(ucar.nc2.ft.fmrc.FmrcInv$HourGroup)>(r96);

        $z4 = virtualinvoke $r29.<ucar.nc2.ft.fmrc.TimeCoord: boolean isInterval()>();

        if $z4 == 0 goto label24;

        $r37 = r96.<ucar.nc2.ft.fmrc.FmrcInv$HourGroup: java.util.List runs>;

        $r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z6 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label23;

        $r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r98 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r39;

        $r40 = new ucar.nc2.ft.fmrc.TimeCoord;

        $r41 = virtualinvoke r98.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.Date getRunDate()>();

        specialinvoke $r40.<ucar.nc2.ft.fmrc.TimeCoord: void <init>(java.util.Date)>($r41);

        r98.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeExpected> = $r40;

        $r42 = r98.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeExpected>;

        $r43 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv$HourGroup: ucar.nc2.ft.fmrc.TimeCoord access$400(ucar.nc2.ft.fmrc.FmrcInv$HourGroup)>(r96);

        $r44 = virtualinvoke $r43.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound1()>();

        $r45 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv$HourGroup: ucar.nc2.ft.fmrc.TimeCoord access$400(ucar.nc2.ft.fmrc.FmrcInv$HourGroup)>(r96);

        $r46 = virtualinvoke $r45.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound2()>();

        virtualinvoke $r42.<ucar.nc2.ft.fmrc.TimeCoord: void setBounds(double[],double[])>($r44, $r46);

        goto label22;

     label23:
        goto label26;

     label24:
        $r30 = r96.<ucar.nc2.ft.fmrc.FmrcInv$HourGroup: java.util.List runs>;

        $r31 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z5 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label26;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r99 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r32;

        $r33 = new ucar.nc2.ft.fmrc.TimeCoord;

        $r34 = virtualinvoke r99.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.Date getRunDate()>();

        $r35 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv$HourGroup: ucar.nc2.ft.fmrc.TimeCoord access$400(ucar.nc2.ft.fmrc.FmrcInv$HourGroup)>(r96);

        $r36 = virtualinvoke $r35.<ucar.nc2.ft.fmrc.TimeCoord: double[] getOffsetTimes()>();

        specialinvoke $r33.<ucar.nc2.ft.fmrc.TimeCoord: void <init>(java.util.Date,double[])>($r34, $r36);

        r99.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeExpected> = $r33;

        goto label25;

     label26:
        goto label19;

     label27:
        $r19 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r18 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r20 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.FmrcInv$RunSeq access$100(ucar.nc2.ft.fmrc.FmrcInv,java.util.List)>($r19, $r18);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq> = $r20;

        $r21 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq>;

        virtualinvoke $r21.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: void addVariable(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)>(r0);

        goto label31;

     label28:
        $r5 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label29:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r100 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r11;

        $r12 = r100.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion>;

        r100.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord timeExpected> = $r12;

        goto label29;

     label30:
        $r8 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r7 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.util.List runs>;

        $r9 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.FmrcInv$RunSeq access$100(ucar.nc2.ft.fmrc.FmrcInv,java.util.List)>($r8, $r7);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq> = $r9;

        $r10 = r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: ucar.nc2.ft.fmrc.FmrcInv$RunSeq runSeq>;

        virtualinvoke $r10.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: void addVariable(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)>(r0);

     label31:
        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.ft.fmrc.FmrcInv$UberGrid) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: int compareTo(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)>($r2);

        return $i0;
    }
}
