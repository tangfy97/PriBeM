final class minalloy.translator.BoundsComputer extends java.lang.Object
{
    private final edu.mit.csail.sdg.alloy4.A4Reporter rep;
    private final minalloy.translator.MinA4Solution sol;
    private final kodkod.instance.TupleFactory factory;
    private final minalloy.translator.MinScopeComputer sc;
    private final java.util.Map ub;
    private final java.util.Map lb;
    private static int[] $SWITCH_TABLE$edu$mit$csail$sdg$alloy4compiler$ast$ExprConstant$Op;

    private kodkod.instance.TupleSet computeLowerBound(java.util.List, edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        minalloy.translator.MinScopeComputer $r2, $r11;
        java.util.Map $r14, $r15;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r1, r16;
        int $i0, $i1, $i2, $i3, i4, $i6;
        kodkod.instance.TupleFactory $r3;
        kodkod.instance.TupleSet $r4, $r9, $r10;
        boolean $z0, $z1, $z2;
        edu.mit.csail.sdg.alloy4.SafeList $r5;
        kodkod.instance.Tuple r13;
        java.util.Iterator $r6;
        minalloy.translator.BoundsComputer r0;
        java.util.List r8;
        java.lang.Object $r7, $r12;

        r0 := @this: minalloy.translator.BoundsComputer;

        r8 := @parameter0: java.util.List;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        $r2 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinScopeComputer sc>;

        $i0 = virtualinvoke $r2.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        $r3 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r4 = virtualinvoke $r3.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(1);

        $r5 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r16 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r7;

        $r9 = specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleSet computeLowerBound(java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r8, r16);

        virtualinvoke $r4.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r9);

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = virtualinvoke $r4.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r11 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinScopeComputer sc>;

        $z1 = virtualinvoke $r11.<minalloy.translator.MinScopeComputer: boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean isTopLevel()>();

        if $z2 == 0 goto label7;

     label3:
        $i1 = virtualinvoke $r10.<kodkod.instance.TupleSet: int size()>();

        i4 = $i0 - $i1;

        goto label6;

     label4:
        $i2 = interfaceinvoke r8.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r12 = interfaceinvoke r8.<java.util.List: java.lang.Object remove(int)>($i3);

        r13 = (kodkod.instance.Tuple) $r12;

        if $z1 == 0 goto label5;

        virtualinvoke $r4.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r13);

     label5:
        virtualinvoke $r10.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r13);

        $i6 = (int) -1;

        i4 = i4 + $i6;

     label6:
        if i4 > 0 goto label4;

     label7:
        $r14 = r0.<minalloy.translator.BoundsComputer: java.util.Map lb>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r15 = r0.<minalloy.translator.BoundsComputer: java.util.Map ub>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

        return $r4;
    }

    private void computeUpperBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        minalloy.translator.MinScopeComputer $r15;
        java.util.Map $r2, $r9, $r16, $r19;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r1, r22, r23;
        int $i0, $i1;
        kodkod.instance.TupleSet $r4, $r5, $r18, $r21;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4.SafeList $r6, $r12;
        java.util.Iterator $r7, $r13;
        minalloy.translator.BoundsComputer r0;
        java.util.Collection $r11;
        java.lang.Object $r3, $r8, $r10, $r14, $r17, $r20;

        r0 := @this: minalloy.translator.BoundsComputer;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        $r2 = r0.<minalloy.translator.BoundsComputer: java.util.Map ub>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (kodkod.instance.TupleSet) $r3;

        $r5 = virtualinvoke $r4.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r6 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r7 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r22 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r8;

        $r9 = r0.<minalloy.translator.BoundsComputer: java.util.Map lb>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22);

        $r11 = (java.util.Collection) $r10;

        virtualinvoke $r5.<kodkod.instance.TupleSet: boolean removeAll(java.util.Collection)>($r11);

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r12 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r13 = virtualinvoke $r12.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label5;

     label3:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r23 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r14;

        $r15 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinScopeComputer sc>;

        $i0 = virtualinvoke $r15.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r23);

        $r16 = r0.<minalloy.translator.BoundsComputer: java.util.Map lb>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        $r18 = (kodkod.instance.TupleSet) $r17;

        $i1 = virtualinvoke $r18.<kodkod.instance.TupleSet: int size()>();

        if $i0 <= $i1 goto label4;

        $r19 = r0.<minalloy.translator.BoundsComputer: java.util.Map ub>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        $r21 = (kodkod.instance.TupleSet) $r20;

        virtualinvoke $r21.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r5);

     label4:
        specialinvoke r0.<minalloy.translator.BoundsComputer: void computeUpperBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r23);

     label5:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return;
    }

    private kodkod.ast.Expression allocatePrimSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r10, $r14;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r0, r36, r37;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4.SafeList $r1, $r19;
        minalloy.translator.MinA4Solution $r6, $r22, $r23, $r28, $r34, $r38;
        kodkod.ast.Expression $r5, $r7, $r24, r35;
        edu.mit.csail.sdg.alloy4.Pos $r9, $r18;
        java.lang.StringBuilder $r26, $r30;
        kodkod.ast.Relation $r32;
        java.lang.String $r27, $r29, $r31, $r33;
        kodkod.instance.TupleSet $r12, $r13, $r16, $r17, $r25;
        java.util.Iterator $r2, $r20;
        minalloy.translator.BoundsComputer r4;
        kodkod.ast.Formula $r8;
        java.lang.Object $r3, $r11, $r15, $r21;

        r4 := @this: minalloy.translator.BoundsComputer;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        r35 = null;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r2 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r36 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r3;

        $r5 = specialinvoke r4.<minalloy.translator.BoundsComputer: kodkod.ast.Expression allocatePrimSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r36);

        if r35 != null goto label2;

        r35 = $r5;

        goto label3;

     label2:
        $r6 = r4.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r7 = virtualinvoke r35.<kodkod.ast.Expression: kodkod.ast.Expression intersection(kodkod.ast.Expression)>($r5);

        $r8 = virtualinvoke $r7.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        $r9 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.Pos isSubsig>;

        virtualinvoke $r6.<minalloy.translator.MinA4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r8, $r9);

        r35 = virtualinvoke r35.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r5);

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r10 = r4.<minalloy.translator.BoundsComputer: java.util.Map lb>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r12 = (kodkod.instance.TupleSet) $r11;

        $r13 = virtualinvoke $r12.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r14 = r4.<minalloy.translator.BoundsComputer: java.util.Map ub>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r16 = (kodkod.instance.TupleSet) $r15;

        $r17 = virtualinvoke $r16.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        if r35 != null goto label4;

        $r34 = r4.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r33 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        r35 = virtualinvoke $r34.<minalloy.translator.MinA4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r33, $r13, $r17);

        goto label7;

     label4:
        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.Pos isAbstract>;

        if $r18 != null goto label7;

        $r19 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r20 = virtualinvoke $r19.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label6;

     label5:
        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r37 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r21;

        $r23 = r4.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r22 = r4.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r24 = virtualinvoke $r22.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r37);

        $r25 = virtualinvoke $r23.<minalloy.translator.MinA4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(0, $r24, 0);

        virtualinvoke $r13.<kodkod.instance.TupleSet: boolean removeAll(java.util.Collection)>($r25);

        virtualinvoke $r17.<kodkod.instance.TupleSet: boolean removeAll(java.util.Collection)>($r25);

     label6:
        $z0 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        $r28 = r4.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r26 = new java.lang.StringBuilder;

        $r27 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27);

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r29);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remainder");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = virtualinvoke $r28.<minalloy.translator.MinA4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r31, $r13, $r17);

        r35 = virtualinvoke r35.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r32);

     label7:
        $r38 = r4.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        virtualinvoke $r38.<minalloy.translator.MinA4Solution: void addSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig,kodkod.ast.Expression)>(r0, r35);

        return r35;
    }

    private kodkod.ast.Expression allocateSubsetSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.A4Reporter $r14;
        boolean $z0, $z1, $z2;
        minalloy.translator.MinA4Solution $r2, $r10, $r12, $r21, $r23, $r24, $r27;
        kodkod.ast.Expression $r3, $r28, r29, $r31;
        edu.mit.csail.sdg.alloy4.Pos $r26;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18;
        kodkod.ast.Relation $r22;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig r1, $r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r30;
        java.lang.String $r19, $r20;
        kodkod.instance.TupleFactory $r4;
        kodkod.instance.TupleSet $r5, $r11;
        edu.mit.csail.sdg.alloy4.ConstList $r6;
        java.util.Iterator $r7;
        minalloy.translator.BoundsComputer r0;
        kodkod.ast.Formula $r25;
        java.lang.Object $r8;

        r0 := @this: minalloy.translator.BoundsComputer;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig;

        $r2 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r3 = virtualinvoke $r2.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        r29 = $r3;

        if $r3 == null goto label1;

        $r28 = <kodkod.ast.Expression: kodkod.ast.Expression NONE>;

        if $r3 == $r28 goto label1;

        return $r3;

     label1:
        $r4 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r5 = virtualinvoke $r4.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(1);

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.ConstList parents>;

        $r7 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

        goto label6;

     label2:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r30 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r8;

        $z0 = r30 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z0 == 0 goto label3;

        $r12 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r31 = virtualinvoke $r12.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r30);

        goto label4;

     label3:
        $r9 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) r30;

        $r31 = specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.ast.Expression allocateSubsetSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig)>($r9);

     label4:
        $r10 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r11 = virtualinvoke $r10.<minalloy.translator.MinA4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r31, 0);

        virtualinvoke $r5.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r11);

        if r29 != null goto label5;

        r29 = $r31;

        goto label6;

     label5:
        r29 = virtualinvoke r29.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r31);

     label6:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        $z1 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: boolean exact>;

        if $z1 == 0 goto label7;

        $r27 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        virtualinvoke $r27.<minalloy.translator.MinA4Solution: void addSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig,kodkod.ast.Expression)>(r1, r29);

        return r29;

     label7:
        $r14 = r0.<minalloy.translator.BoundsComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r19);

        $r21 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r20 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: java.lang.String label>;

        $r22 = virtualinvoke $r21.<minalloy.translator.MinA4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r20, null, $r5);

        $r23 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        virtualinvoke $r23.<minalloy.translator.MinA4Solution: void addSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig,kodkod.ast.Expression)>(r1, $r22);

        $r24 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r25 = virtualinvoke $r22.<kodkod.ast.Relation: kodkod.ast.Formula in(kodkod.ast.Expression)>(r29);

        $r26 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.Pos isSubset>;

        virtualinvoke $r24.<minalloy.translator.MinA4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r25, $r26);

        return $r22;
    }

    private kodkod.ast.Formula size(edu.mit.csail.sdg.alloy4compiler.ast.Sig, int, boolean)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r1;
        int i0, $i2;
        boolean z0;
        minalloy.translator.BoundsComputer r0;
        minalloy.translator.MinA4Solution $r2;
        kodkod.ast.Formula $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r18;
        kodkod.ast.Expression $r3, $r6, r20;
        kodkod.ast.Decl $r5;
        kodkod.ast.Decls r19;
        kodkod.ast.Variable $r4;

        r0 := @this: minalloy.translator.BoundsComputer;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r3 = virtualinvoke $r2.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        if i0 > 0 goto label01;

        $r15 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        return $r15;

     label01:
        if i0 != 1 goto label04;

        if z0 == 0 goto label02;

        $r16 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula one()>();

        goto label03;

     label02:
        $r16 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula lone()>();

     label03:
        return $r16;

     label04:
        if z0 == 0 goto label05;

        $r17 = <kodkod.ast.Formula: kodkod.ast.Formula TRUE>;

        goto label06;

     label05:
        $r17 = null;

     label06:
        r18 = $r17;

        r19 = null;

        r20 = null;

        goto label12;

     label07:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        $r4 = staticinvoke <kodkod.ast.Variable: kodkod.ast.Variable unary(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<kodkod.ast.Variable: kodkod.ast.Decl oneOf(kodkod.ast.Expression)>($r3);

        if r19 != null goto label08;

        r19 = $r5;

        goto label09;

     label08:
        r19 = virtualinvoke $r5.<kodkod.ast.Decl: kodkod.ast.Decls and(kodkod.ast.Decls)>(r19);

     label09:
        if r20 != null goto label10;

        r20 = $r4;

        goto label12;

     label10:
        if r18 == null goto label11;

        $r6 = virtualinvoke $r4.<kodkod.ast.Variable: kodkod.ast.Expression intersection(kodkod.ast.Expression)>(r20);

        $r7 = virtualinvoke $r6.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        r18 = virtualinvoke $r7.<kodkod.ast.Formula: kodkod.ast.Formula and(kodkod.ast.Formula)>(r18);

     label11:
        r20 = virtualinvoke $r4.<kodkod.ast.Variable: kodkod.ast.Expression union(kodkod.ast.Expression)>(r20);

     label12:
        if i0 > 0 goto label07;

        if r18 == null goto label13;

        $r12 = virtualinvoke r20.<kodkod.ast.Expression: kodkod.ast.Formula eq(kodkod.ast.Expression)>($r3);

        $r13 = virtualinvoke $r12.<kodkod.ast.Formula: kodkod.ast.Formula and(kodkod.ast.Formula)>(r18);

        $r14 = virtualinvoke $r13.<kodkod.ast.Formula: kodkod.ast.Formula forSome(kodkod.ast.Decls)>(r19);

        return $r14;

     label13:
        $r8 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        $r9 = virtualinvoke r20.<kodkod.ast.Expression: kodkod.ast.Formula eq(kodkod.ast.Expression)>($r3);

        $r10 = virtualinvoke $r9.<kodkod.ast.Formula: kodkod.ast.Formula forSome(kodkod.ast.Decls)>(r19);

        $r11 = virtualinvoke $r8.<kodkod.ast.Formula: kodkod.ast.Formula or(kodkod.ast.Formula)>($r10);

        return $r11;
    }

    private kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r0, $r1, $r2, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r21, r34, $r37;
        int[] $r15;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field $r7;
        minalloy.translator.MinA4Solution $r8, $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r35;
        kodkod.ast.Expression $r9, $r12, $r13, $r14, $r18, $r22, $r27, $r28, $r29, $r38;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r36;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant $r16;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig $r10;
        int $i0, $i1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r19, $r20, $r23, $r24, $r25, $r26, $r30, $r31, $r32, $r33;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op $r17;
        minalloy.translator.BoundsComputer r6;

        r6 := @this: minalloy.translator.BoundsComputer;

        r34 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        goto label03;

     label01:
        r35 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r34;

        $r1 = r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r0 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r1 == $r0 goto label02;

        $r3 = r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if $r3 == $r2 goto label02;

        goto label04;

     label02:
        r34 = r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

     label03:
        $z4 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z4 != 0 goto label01;

     label04:
        $z0 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z0 == 0 goto label10;

        r36 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) r34;

        $r20 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r19 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if $r20 == $r19 goto label05;

        $r31 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r30 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUS>;

        if $r31 == $r30 goto label05;

        $r33 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r32 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op JOIN>;

        if $r33 != $r32 goto label10;

     label05:
        $r37 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r38 = specialinvoke r6.<minalloy.translator.BoundsComputer: kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r37);

        if $r38 != null goto label06;

        return null;

     label06:
        $r21 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r22 = specialinvoke r6.<minalloy.translator.BoundsComputer: kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r21);

        if $r22 != null goto label07;

        return null;

     label07:
        $r24 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r23 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if $r24 != $r23 goto label08;

        $r29 = virtualinvoke $r38.<kodkod.ast.Expression: kodkod.ast.Expression product(kodkod.ast.Expression)>($r22);

        return $r29;

     label08:
        $r26 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r25 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUS>;

        if $r26 != $r25 goto label09;

        $r28 = virtualinvoke $r38.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r22);

        return $r28;

     label09:
        $r27 = virtualinvoke $r38.<kodkod.ast.Expression: kodkod.ast.Expression join(kodkod.ast.Expression)>($r22);

        return $r27;

     label10:
        $z1 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant;

        if $z1 == 0 goto label12;

        $r15 = staticinvoke <minalloy.translator.BoundsComputer: int[] $SWITCH_TABLE$edu$mit$csail$sdg$alloy4compiler$ast$ExprConstant$Op()>();

        $r16 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant) r34;

        $r17 = $r16.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op op>;

        $i0 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        $i1 = $r15[$i0];

        tableswitch($i1)
        {
            case 7: goto label11;
            default: goto label12;
        };

     label11:
        $r18 = <kodkod.ast.Expression: kodkod.ast.Expression NONE>;

        return $r18;

     label12:
        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        if r34 != $r4 goto label13;

        $r14 = <kodkod.ast.Expression: kodkod.ast.Expression NONE>;

        return $r14;

     label13:
        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        if r34 != $r5 goto label14;

        $r13 = <kodkod.ast.Expression: kodkod.ast.Expression INTS>;

        return $r13;

     label14:
        $z2 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        if $z2 == 0 goto label15;

        $r11 = r6.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r10 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) r34;

        $r12 = virtualinvoke $r11.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>($r10);

        return $r12;

     label15:
        $z3 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        if $z3 == 0 goto label16;

        $r8 = r6.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol>;

        $r7 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) r34;

        $r9 = virtualinvoke $r8.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>($r7);

        return $r9;

     label16:
        return null;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.A4Reporter, minalloy.translator.MinA4Solution, minalloy.translator.MinScopeComputer, java.lang.Iterable) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.LinkedHashMap $r248, $r249;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r54, $r58, $r77, $r78, $r82, $r83, $r87, $r88, $r96, $r97, $r102, $r103, $r105, $r106, $r114, $r117, $r118, $r121, $r122;
        edu.mit.csail.sdg.alloy4.A4Reporter r6;
        kodkod.ast.Expression $r39, $r49, $r59, $r70, $r71, $r123, $r133, $r177, $r245;
        edu.mit.csail.sdg.alloy4.Pos $r29, $r31, $r111, $r180, $r181, $r191, $r207, $r215, $r217, $r225, $r247;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i24;
        kodkod.instance.TupleFactory $r5, $r7, $r11, $r32, $r125, $r126, $r135, $r136;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r55, $r56, $r93, $r94;
        java.util.ArrayList $r250;
        java.lang.String $r42, $r43, $r45, $r47, $r61, $r64, $r69, $r138, $r139, $r141, $r143, $r146, $r147, $r149, $r151, $r154, $r157, $r162, $r164, $r167, $r172, $r189, $r197, $r205, $r213, $r223;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r233, r234, r240;
        java.util.List $r34, r242;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary $r98, $r101, $r104;
        java.lang.Iterable r14;
        edu.mit.csail.sdg.alloy4.SafeList $r72, $r73, $r74, $r75, $r79, $r84, $r107, $r109, $r128, $r129, $r238;
        java.lang.StringBuilder $r44, $r46, $r62, $r63, $r65, $r66, $r67, $r68, $r140, $r142, $r148, $r150, $r155, $r156, $r158, $r159, $r160, $r161, $r165, $r166, $r168, $r169, $r170, $r171, $r183, $r184, $r185, $r186, $r187, $r188, $r193, $r194, $r195, $r196, $r199, $r200, $r201, $r202, $r203, $r204, $r209, $r210, $r211, $r212, $r219, $r220, $r221, $r222, $r251, $r252, $r253, $r254, $r255, $r256, $r257, $r258, $r259, $r260, $r261;
        java.lang.Object[] $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig $r26;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r89, $r90;
        kodkod.instance.Tuple $r13;
        edu.mit.csail.sdg.alloy4.ConstList $r91, $r112, $r115, $r119;
        kodkod.ast.Formula $r190, $r206, $r214, $r216, $r224;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r53, $r57, $r81, $r86;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r231;
        kodkod.ast.Relation $r48, $r144, $r152;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r226, r227, r228, r229, r230, r246;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r99, $r100;
        kodkod.instance.TupleSet $r33, $r40, $r124, $r127, $r134, $r173, $r174, $r178, $r179, r235, r236, r237, r243;
        java.lang.Object $r12, $r16, $r19, $r22, $r25, $r28, $r30, $r36, $r38, $r76, $r80, $r85, $r108, $r110, $r113, $r116, $r120, $r131, $r176;
        minalloy.translator.MinScopeComputer r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r92, $r95;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r17, $r20, $r23, $r50, r132, r232, r244;
        minalloy.translator.MinA4Solution r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r51, $r52, $r241;
        kodkod.instance.Universe $r8;
        java.util.Iterator $r15, $r18, $r21, $r24, $r27, $r35, $r37, $r130, $r175, $r239;
        minalloy.translator.BoundsComputer r0;

        r0 := @this: minalloy.translator.BoundsComputer;

        r6 := @parameter0: edu.mit.csail.sdg.alloy4.A4Reporter;

        r4 := @parameter1: minalloy.translator.MinA4Solution;

        r3 := @parameter2: minalloy.translator.MinScopeComputer;

        r14 := @parameter3: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r248 = new java.util.LinkedHashMap;

        specialinvoke $r248.<java.util.LinkedHashMap: void <init>()>();

        r0.<minalloy.translator.BoundsComputer: java.util.Map ub> = $r248;

        $r249 = new java.util.LinkedHashMap;

        specialinvoke $r249.<java.util.LinkedHashMap: void <init>()>();

        r0.<minalloy.translator.BoundsComputer: java.util.Map lb> = $r249;

        r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinScopeComputer sc> = r3;

        $r5 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.instance.TupleFactory getFactory()>();

        r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory> = $r5;

        r0.<minalloy.translator.BoundsComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep> = r6;

        r0.<minalloy.translator.BoundsComputer: minalloy.translator.MinA4Solution sol> = r4;

        $r7 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r8 = virtualinvoke $r7.<kodkod.instance.TupleFactory: kodkod.instance.Universe universe()>();

        $i0 = virtualinvoke $r8.<kodkod.instance.Universe: int size()>();

        $r250 = new java.util.ArrayList;

        specialinvoke $r250.<java.util.ArrayList: void <init>(int)>($i0);

        i22 = $i0 - 1;

        goto label02;

     label01:
        $r11 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke $r8.<kodkod.instance.Universe: java.lang.Object atom(int)>(i22);

        $r10[0] = $r12;

        $r13 = virtualinvoke $r11.<kodkod.instance.TupleFactory: kodkod.instance.Tuple tuple(java.lang.Object[])>($r10);

        interfaceinvoke $r250.<java.util.List: boolean add(java.lang.Object)>($r13);

        $i24 = (int) -1;

        i22 = i22 + $i24;

     label02:
        if i22 >= 0 goto label01;

        $r15 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label04;

     label03:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r226 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r16;

        $z0 = r226.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 != 0 goto label04;

        $z1 = virtualinvoke r226.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z1 == 0 goto label04;

        $r17 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r226;

        specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleSet computeLowerBound(java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r250, $r17);

     label04:
        $z17 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z17 != 0 goto label03;

        $r18 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label06;

     label05:
        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r227 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r19;

        $z2 = r227.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke r227.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z3 == 0 goto label06;

        $r20 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r227;

        specialinvoke r0.<minalloy.translator.BoundsComputer: void computeUpperBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r20);

     label06:
        $z18 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z18 != 0 goto label05;

        $r21 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label08;

     label07:
        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r228 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r22;

        $z4 = r228.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z4 != 0 goto label08;

        $z5 = virtualinvoke r228.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z5 == 0 goto label08;

        $r23 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r228;

        specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.ast.Expression allocatePrimSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r23);

     label08:
        $z19 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z19 != 0 goto label07;

        $r24 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label10;

     label09:
        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r229 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r25;

        $z6 = r229 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig;

        if $z6 == 0 goto label10;

        $r26 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) r229;

        specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.ast.Expression allocateSubsetSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig)>($r26);

     label10:
        $z20 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z20 != 0 goto label09;

        $r27 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label43;

     label11:
        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r230 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r28;

        $r29 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r29 == null goto label28;

        $r72 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $i2 = virtualinvoke $r72.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i2 != 2 goto label28;

        $r73 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $i3 = virtualinvoke $r73.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i3 != 2 goto label28;

        $r74 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFacts()>();

        $i4 = virtualinvoke $r74.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i4 != 1 goto label28;

        $r75 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFacts()>();

        $r76 = virtualinvoke $r75.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(0);

        $r77 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r76;

        $r78 = virtualinvoke $r77.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r79 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $r80 = virtualinvoke $r79.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(0);

        $r81 = (edu.mit.csail.sdg.alloy4compiler.ast.Decl) $r80;

        $r82 = $r81.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r83 = virtualinvoke $r82.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r84 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $r85 = virtualinvoke $r84.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(1);

        $r86 = (edu.mit.csail.sdg.alloy4compiler.ast.Decl) $r85;

        $r87 = $r86.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r88 = virtualinvoke $r87.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z8 = $r78 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        if $z8 == 0 goto label28;

        $z9 = $r83 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z9 == 0 goto label28;

        $z10 = $r88 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z10 != 0 goto label12;

        goto label28;

     label12:
        r231 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprList) $r78;

        $r90 = r231.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r89 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op TOTALORDER>;

        if $r90 != $r89 goto label28;

        $r91 = r231.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i5 = virtualinvoke $r91.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i5 == 3 goto label13;

        goto label28;

     label13:
        $r92 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) $r83;

        $r94 = $r92.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r93 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        if $r94 == $r93 goto label14;

        goto label28;

     label14:
        $r95 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) $r83;

        $r96 = $r95.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r97 = virtualinvoke $r96.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r98 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r88;

        $r100 = $r98.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r99 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if $r100 == $r99 goto label15;

        goto label28;

     label15:
        $r101 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r88;

        $r102 = $r101.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r103 = virtualinvoke $r102.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r104 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r88;

        $r105 = $r104.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r106 = virtualinvoke $r105.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z11 = $r97 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z11 == 0 goto label28;

        if $r97 != $r106 goto label28;

        if $r97 == $r103 goto label16;

        goto label28;

     label16:
        r232 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r97;

        $r107 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r108 = virtualinvoke $r107.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(0);

        r233 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r108;

        $r109 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r110 = virtualinvoke $r109.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(1);

        r234 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r110;

        $r111 = r232.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.Pos isEnum>;

        if $r111 == null goto label28;

        $r112 = r231.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r113 = virtualinvoke $r112.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(0);

        $r114 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r113;

        $z12 = virtualinvoke $r114.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r232);

        if $z12 == 0 goto label28;

        $r115 = r231.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r116 = virtualinvoke $r115.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(1);

        $r117 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r116;

        $r118 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r233);

        $z13 = virtualinvoke $r117.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r118);

        if $z13 == 0 goto label28;

        $r119 = r231.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r120 = virtualinvoke $r119.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(2);

        $r121 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r120;

        $r122 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r234);

        $z14 = virtualinvoke $r121.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r122);

        if $z14 != 0 goto label17;

        goto label28;

     label17:
        $r123 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r230);

        $r124 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r123, 0);

        $r125 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        r235 = virtualinvoke $r125.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(2);

        r236 = null;

        $r126 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r127 = virtualinvoke $r126.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(3);

        r237 = $r127;

        $i6 = virtualinvoke $r124.<kodkod.instance.TupleSet: int size()>();

        if $i6 != 1 goto label28;

        $i7 = virtualinvoke $r124.<kodkod.instance.TupleSet: int arity()>();

        if $i7 == 1 goto label18;

        goto label28;

     label18:
        $r128 = virtualinvoke r232.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $i8 = virtualinvoke $r128.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        $r129 = virtualinvoke r232.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r130 = virtualinvoke $r129.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label23;

     label19:
        $r131 = interfaceinvoke $r130.<java.util.Iterator: java.lang.Object next()>();

        r132 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r131;

        $r133 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r132);

        $r134 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r133, 0);

        $i9 = virtualinvoke $r134.<kodkod.instance.TupleSet: int size()>();

        if $i9 != 1 goto label20;

        $i13 = virtualinvoke $r134.<kodkod.instance.TupleSet: int arity()>();

        if $i13 == 1 goto label21;

     label20:
        $r135 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        r235 = virtualinvoke $r135.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(2);

        $r136 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        r237 = virtualinvoke $r136.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(3);

        goto label24;

     label21:
        if r236 != null goto label22;

        r235 = virtualinvoke $r124.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>($r134);

        r236 = $r134;

        goto label23;

     label22:
        $r173 = virtualinvoke $r124.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>(r236);

        $r174 = virtualinvoke $r173.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>($r134);

        virtualinvoke $r127.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r174);

        r236 = $r134;

     label23:
        $z21 = interfaceinvoke $r130.<java.util.Iterator: boolean hasNext()>();

        if $z21 != 0 goto label19;

     label24:
        $i10 = virtualinvoke r235.<kodkod.instance.TupleSet: int size()>();

        if $i8 <= 0 goto label25;

        $z22 = 1;

        goto label26;

     label25:
        $z22 = 0;

     label26:
        if $i10 != $z22 goto label28;

        $i11 = virtualinvoke r237.<kodkod.instance.TupleSet: int size()>();

        $i12 = $i8 - 1;

        if $i11 == $i12 goto label27;

        goto label28;

     label27:
        $r251 = new java.lang.StringBuilder;

        $r138 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r139 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r138);

        specialinvoke $r251.<java.lang.StringBuilder: void <init>(java.lang.String)>($r139);

        $r140 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r141 = r233.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r142 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r141);

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        $r144 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r143, r235, r235);

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r233, $r144);

        $r252 = new java.lang.StringBuilder;

        $r146 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r147 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r146);

        specialinvoke $r252.<java.lang.StringBuilder: void <init>(java.lang.String)>($r147);

        $r148 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r149 = r234.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r150 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        $r152 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r151, r237, r237);

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r234, $r152);

        $r253 = new java.lang.StringBuilder;

        specialinvoke $r253.<java.lang.StringBuilder: void <init>(java.lang.String)>("Field ");

        $r154 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r155 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r154);

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r157 = r233.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r158 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r157);

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r235);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r162);

        $r254 = new java.lang.StringBuilder;

        specialinvoke $r254.<java.lang.StringBuilder: void <init>(java.lang.String)>("Field ");

        $r164 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r165 = virtualinvoke $r254.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r164);

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r167 = r234.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r168 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r237);

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r172);

        goto label43;

     label28:
        $r238 = virtualinvoke r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r239 = virtualinvoke $r238.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label42;

     label29:
        $r30 = interfaceinvoke $r239.<java.util.Iterator: java.lang.Object next()>();

        r240 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r30;

        $r31 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r31 == null goto label30;

        $z31 = 1;

        $z30 = 1;

        goto label31;

     label30:
        $z31 = 0;

        $z30 = 0;

     label31:
        z24 = $z30;

        if $z31 == 0 goto label32;

        $r53 = virtualinvoke r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl()>();

        $r54 = $r53.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r55 = virtualinvoke $r54.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op mult()>();

        $r56 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if $r55 != $r56 goto label32;

        $r57 = virtualinvoke r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl()>();

        $r58 = $r57.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r59 = specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r58);

        if $r59 == null goto label32;

        $r255 = new java.lang.StringBuilder;

        specialinvoke $r255.<java.lang.StringBuilder: void <init>(java.lang.String)>("Field ");

        $r61 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r62 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r64 = r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defined to be ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r69);

        $r70 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r230);

        $r71 = virtualinvoke $r70.<kodkod.ast.Expression: kodkod.ast.Expression product(kodkod.ast.Expression)>($r59);

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r240, $r71);

        goto label42;

     label32:
        if z24 == 0 goto label33;

        $r50 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $r51 = virtualinvoke $r50.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $r52 = virtualinvoke r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $r241 = virtualinvoke $r51.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type join(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r52);

        goto label34;

     label33:
        $r241 = virtualinvoke r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

     label34:
        $r32 = r0.<minalloy.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $i1 = virtualinvoke $r241.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        $r33 = virtualinvoke $r32.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>($i1);

        $r34 = virtualinvoke $r241.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.List fold()>();

        $r35 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();

        goto label39;

     label35:
        $r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r242 = (java.util.List) $r36;

        r243 = null;

        $r37 = interfaceinvoke r242.<java.util.List: java.util.Iterator iterator()>();

        goto label38;

     label36:
        $r38 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r244 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r38;

        $r39 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r244);

        $r40 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r39, 0);

        if r243 != null goto label37;

        r243 = $r40;

        goto label38;

     label37:
        r243 = virtualinvoke r243.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>($r40);

     label38:
        $z25 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z25 != 0 goto label36;

        virtualinvoke $r33.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>(r243);

     label39:
        $z7 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z7 != 0 goto label35;

        $r256 = new java.lang.StringBuilder;

        $r42 = r230.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r43 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r42);

        specialinvoke $r256.<java.lang.StringBuilder: void <init>(java.lang.String)>($r43);

        $r44 = virtualinvoke $r256.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r45 = r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r47, null, $r33);

        if z24 == 0 goto label40;

        $r49 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r230);

        $r245 = virtualinvoke $r49.<kodkod.ast.Expression: kodkod.ast.Expression product(kodkod.ast.Expression)>($r48);

        goto label41;

     label40:
        $r245 = $r48;

     label41:
        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r240, $r245);

     label42:
        $z26 = interfaceinvoke $r239.<java.util.Iterator: boolean hasNext()>();

        if $z26 != 0 goto label29;

     label43:
        $z27 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z27 != 0 goto label11;

        $r175 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label53;

     label44:
        $r176 = interfaceinvoke $r175.<java.util.Iterator: java.lang.Object next()>();

        r246 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r176;

        $z15 = r246.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z15 != 0 goto label53;

        $r177 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r246);

        $r178 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r177, 0);

        $r179 = virtualinvoke r4.<minalloy.translator.MinA4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(0, $r177, 0);

        $i14 = virtualinvoke r3.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r246);

        $r180 = r246.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r180 == null goto label46;

        $i20 = virtualinvoke $r179.<kodkod.instance.TupleSet: int size()>();

        if $i20 != 1 goto label45;

        $i21 = virtualinvoke $r178.<kodkod.instance.TupleSet: int size()>();

        if $i21 == 1 goto label46;

     label45:
        $r257 = new java.lang.StringBuilder;

        specialinvoke $r257.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r219 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r246);

        $r220 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r178);

        $r222 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with size==1\n");

        $r223 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r223);

        $r224 = virtualinvoke $r177.<kodkod.ast.Expression: kodkod.ast.Formula one()>();

        $r225 = r246.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r224, $r225);

        goto label53;

     label46:
        $r181 = r246.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isSome>;

        if $r181 == null goto label47;

        $i19 = virtualinvoke $r179.<kodkod.instance.TupleSet: int size()>();

        if $i19 >= 1 goto label47;

        $r216 = virtualinvoke $r177.<kodkod.ast.Expression: kodkod.ast.Formula some()>();

        $r217 = r246.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isSome>;

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r216, $r217);

     label47:
        $r247 = r246.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isLone>;

        if $r247 == null goto label48;

        $i18 = virtualinvoke $r178.<kodkod.instance.TupleSet: int size()>();

        if $i18 <= 1 goto label48;

        $r214 = virtualinvoke $r177.<kodkod.ast.Expression: kodkod.ast.Formula lone()>();

        $r215 = r246.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isLone>;

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r214, $r215);

     label48:
        if $i14 >= 0 goto label49;

        goto label53;

     label49:
        $i15 = virtualinvoke $r179.<kodkod.instance.TupleSet: int size()>();

        if $i15 != $i14 goto label50;

        $i17 = virtualinvoke $r178.<kodkod.instance.TupleSet: int size()>();

        if $i17 != $i14 goto label50;

        $z16 = virtualinvoke r3.<minalloy.translator.MinScopeComputer: boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r246);

        if $z16 == 0 goto label50;

        $r258 = new java.lang.StringBuilder;

        specialinvoke $r258.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r209 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r246);

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r178);

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r213 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r213);

        goto label53;

     label50:
        $z28 = virtualinvoke r3.<minalloy.translator.MinScopeComputer: boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r246);

        if $z28 == 0 goto label51;

        $r259 = new java.lang.StringBuilder;

        specialinvoke $r259.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r199 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r246);

        $r200 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r178);

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with size==");

        $r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r204 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r205 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r205);

        $r206 = specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.ast.Formula size(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int,boolean)>(r246, $i14, 1);

        $r207 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r206, $r207);

        goto label53;

     label51:
        $i16 = virtualinvoke $r178.<kodkod.instance.TupleSet: int size()>();

        if $i16 > $i14 goto label52;

        $r260 = new java.lang.StringBuilder;

        specialinvoke $r260.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r193 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r246);

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r178);

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r197);

        goto label53;

     label52:
        $r261 = new java.lang.StringBuilder;

        specialinvoke $r261.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r183 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r246);

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r178);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with size<=");

        $r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r189);

        $r190 = specialinvoke r0.<minalloy.translator.BoundsComputer: kodkod.ast.Formula size(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int,boolean)>(r246, $i14, 0);

        $r191 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        virtualinvoke r4.<minalloy.translator.MinA4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r190, $r191);

     label53:
        $z29 = interfaceinvoke $r175.<java.util.Iterator: boolean hasNext()>();

        if $z29 != 0 goto label44;

        return;
    }

    static void compute(edu.mit.csail.sdg.alloy4.A4Reporter, minalloy.translator.MinA4Solution, minalloy.translator.MinScopeComputer, java.lang.Iterable) throws edu.mit.csail.sdg.alloy4.Err
    {
        minalloy.translator.MinA4Solution r1;
        minalloy.translator.BoundsComputer $r4;
        edu.mit.csail.sdg.alloy4.A4Reporter r0;
        minalloy.translator.MinScopeComputer r2;
        java.lang.Iterable r3;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.A4Reporter;

        r1 := @parameter1: minalloy.translator.MinA4Solution;

        r2 := @parameter2: minalloy.translator.MinScopeComputer;

        r3 := @parameter3: java.lang.Iterable;

        $r4 = new minalloy.translator.BoundsComputer;

        specialinvoke $r4.<minalloy.translator.BoundsComputer: void <init>(edu.mit.csail.sdg.alloy4.A4Reporter,minalloy.translator.MinA4Solution,minalloy.translator.MinScopeComputer,java.lang.Iterable)>(r0, r1, r2, r3);

        return;
    }

    static int[] $SWITCH_TABLE$edu$mit$csail$sdg$alloy4compiler$ast$ExprConstant$Op()
    {
        java.lang.NoSuchFieldError $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        int[] $r0, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op[] $r1;

        $r0 = <minalloy.translator.BoundsComputer: int[] $SWITCH_TABLE$edu$mit$csail$sdg$alloy4compiler$ast$ExprConstant$Op>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op[] values()>();

        $i0 = lengthof $r1;

        r2 = newarray (int)[$i0];

     label02:
        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op EMPTYNESS>;

        $i1 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i1] = 7;

     label03:
        goto label05;

     label04:
        $r20 := @caughtexception;

     label05:
        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op FALSE>;

        $i2 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i2] = 2;

     label06:
        goto label08;

     label07:
        $r19 := @caughtexception;

     label08:
        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op IDEN>;

        $i3 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i3] = 3;

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

     label11:
        $r6 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op MAX>;

        $i4 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i4] = 5;

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;

     label14:
        $r7 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op MIN>;

        $i5 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i5] = 4;

     label15:
        goto label17;

     label16:
        $r16 := @caughtexception;

     label17:
        $r8 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op NEXT>;

        $i6 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i6] = 6;

     label18:
        goto label20;

     label19:
        $r15 := @caughtexception;

     label20:
        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op NUMBER>;

        $i7 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i7] = 9;

     label21:
        goto label23;

     label22:
        $r14 := @caughtexception;

     label23:
        $r10 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op STRING>;

        $i8 = virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i8] = 8;

     label24:
        goto label26;

     label25:
        $r13 := @caughtexception;

     label26:
        $r11 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op TRUE>;

        $i9 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        r2[$i9] = 1;

     label27:
        goto label29;

     label28:
        $r12 := @caughtexception;

     label29:
        <minalloy.translator.BoundsComputer: int[] $SWITCH_TABLE$edu$mit$csail$sdg$alloy4compiler$ast$ExprConstant$Op> = r2;

        return r2;

        catch java.lang.NoSuchFieldError from label02 to label03 with label04;
        catch java.lang.NoSuchFieldError from label05 to label06 with label07;
        catch java.lang.NoSuchFieldError from label08 to label09 with label10;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
        catch java.lang.NoSuchFieldError from label17 to label18 with label19;
        catch java.lang.NoSuchFieldError from label20 to label21 with label22;
        catch java.lang.NoSuchFieldError from label23 to label24 with label25;
        catch java.lang.NoSuchFieldError from label26 to label27 with label28;
    }
}
