public abstract class org.waveprotocol.wave.diff.Diff$FetchDiffService extends java.lang.Object implements com.google.protobuf.Service
{

    protected void <init>()
    {
        org.waveprotocol.wave.diff.Diff$FetchDiffService r0;

        r0 := @this: org.waveprotocol.wave.diff.Diff$FetchDiffService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.protobuf.Service newReflectiveService(org.waveprotocol.wave.diff.Diff$FetchDiffService$Interface)
    {
        org.waveprotocol.wave.diff.Diff$FetchDiffService$1 $r0;
        org.waveprotocol.wave.diff.Diff$FetchDiffService$Interface r1;

        r1 := @parameter0: org.waveprotocol.wave.diff.Diff$FetchDiffService$Interface;

        $r0 = new org.waveprotocol.wave.diff.Diff$FetchDiffService$1;

        specialinvoke $r0.<org.waveprotocol.wave.diff.Diff$FetchDiffService$1: void <init>(org.waveprotocol.wave.diff.Diff$FetchDiffService$Interface)>(r1);

        return $r0;
    }

    public static com.google.protobuf.BlockingService newReflectiveBlockingService(org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingInterface)
    {
        org.waveprotocol.wave.diff.Diff$FetchDiffService$2 $r0;
        org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingInterface r1;

        r1 := @parameter0: org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingInterface;

        $r0 = new org.waveprotocol.wave.diff.Diff$FetchDiffService$2;

        specialinvoke $r0.<org.waveprotocol.wave.diff.Diff$FetchDiffService$2: void <init>(org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingInterface)>(r1);

        return $r0;
    }

    public abstract void fetch(com.google.protobuf.RpcController, org.waveprotocol.wave.diff.Diff$FetchDiffRequest, com.google.protobuf.RpcCallback);

    public static final com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()
    {
        java.util.List $r1;
        java.lang.Object $r2;
        com.google.protobuf.Descriptors$ServiceDescriptor $r3;
        com.google.protobuf.Descriptors$FileDescriptor $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.diff.Diff: com.google.protobuf.Descriptors$FileDescriptor getDescriptor()>();

        $r1 = virtualinvoke $r0.<com.google.protobuf.Descriptors$FileDescriptor: java.util.List getServices()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (com.google.protobuf.Descriptors$ServiceDescriptor) $r2;

        return $r3;
    }

    public final com.google.protobuf.Descriptors$ServiceDescriptor getDescriptorForType()
    {
        com.google.protobuf.Descriptors$ServiceDescriptor $r0;
        org.waveprotocol.wave.diff.Diff$FetchDiffService r1;

        r1 := @this: org.waveprotocol.wave.diff.Diff$FetchDiffService;

        $r0 = staticinvoke <org.waveprotocol.wave.diff.Diff$FetchDiffService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        return $r0;
    }

    public final void callMethod(com.google.protobuf.Descriptors$MethodDescriptor, com.google.protobuf.RpcController, com.google.protobuf.Message, com.google.protobuf.RpcCallback)
    {
        com.google.protobuf.Descriptors$MethodDescriptor r0;
        org.waveprotocol.wave.diff.Diff$FetchDiffRequest $r7;
        com.google.protobuf.RpcController r4;
        java.lang.AssertionError $r9;
        java.lang.IllegalArgumentException $r10;
        org.waveprotocol.wave.diff.Diff$FetchDiffService r3;
        com.google.protobuf.RpcCallback r6, $r8;
        int $i0;
        com.google.protobuf.Message r5;
        com.google.protobuf.Descriptors$ServiceDescriptor $r1, $r2;

        r3 := @this: org.waveprotocol.wave.diff.Diff$FetchDiffService;

        r0 := @parameter0: com.google.protobuf.Descriptors$MethodDescriptor;

        r4 := @parameter1: com.google.protobuf.RpcController;

        r5 := @parameter2: com.google.protobuf.Message;

        r6 := @parameter3: com.google.protobuf.RpcCallback;

        $r1 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Descriptors$ServiceDescriptor getService()>();

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$FetchDiffService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        if $r1 == $r2 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service.callMethod() given method descriptor for wrong service type.");

        throw $r10;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: int getIndex()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            default: goto label3;
        };

     label2:
        $r7 = (org.waveprotocol.wave.diff.Diff$FetchDiffRequest) r5;

        $r8 = staticinvoke <com.google.protobuf.RpcUtil: com.google.protobuf.RpcCallback specializeCallback(com.google.protobuf.RpcCallback)>(r6);

        virtualinvoke r3.<org.waveprotocol.wave.diff.Diff$FetchDiffService: void fetch(com.google.protobuf.RpcController,org.waveprotocol.wave.diff.Diff$FetchDiffRequest,com.google.protobuf.RpcCallback)>(r4, $r7, $r8);

        return;

     label3:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("Can\'t get here.");

        throw $r9;
    }

    public final com.google.protobuf.Message getRequestPrototype(com.google.protobuf.Descriptors$MethodDescriptor)
    {
        com.google.protobuf.Descriptors$MethodDescriptor r0;
        org.waveprotocol.wave.diff.Diff$FetchDiffRequest $r3;
        java.lang.AssertionError $r4;
        java.lang.IllegalArgumentException $r5;
        org.waveprotocol.wave.diff.Diff$FetchDiffService r6;
        int $i0;
        com.google.protobuf.Descriptors$ServiceDescriptor $r1, $r2;

        r6 := @this: org.waveprotocol.wave.diff.Diff$FetchDiffService;

        r0 := @parameter0: com.google.protobuf.Descriptors$MethodDescriptor;

        $r1 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Descriptors$ServiceDescriptor getService()>();

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$FetchDiffService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        if $r1 == $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service.getRequestPrototype() given method descriptor for wrong service type.");

        throw $r5;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: int getIndex()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            default: goto label3;
        };

     label2:
        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$FetchDiffRequest: org.waveprotocol.wave.diff.Diff$FetchDiffRequest getDefaultInstance()>();

        return $r3;

     label3:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Can\'t get here.");

        throw $r4;
    }

    public final com.google.protobuf.Message getResponsePrototype(com.google.protobuf.Descriptors$MethodDescriptor)
    {
        com.google.protobuf.Descriptors$MethodDescriptor r0;
        java.lang.AssertionError $r4;
        java.lang.IllegalArgumentException $r5;
        org.waveprotocol.wave.diff.Diff$FetchDiffService r6;
        int $i0;
        org.waveprotocol.wave.diff.Diff$FetchDiffResponse $r3;
        com.google.protobuf.Descriptors$ServiceDescriptor $r1, $r2;

        r6 := @this: org.waveprotocol.wave.diff.Diff$FetchDiffService;

        r0 := @parameter0: com.google.protobuf.Descriptors$MethodDescriptor;

        $r1 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.Descriptors$ServiceDescriptor getService()>();

        $r2 = staticinvoke <org.waveprotocol.wave.diff.Diff$FetchDiffService: com.google.protobuf.Descriptors$ServiceDescriptor getDescriptor()>();

        if $r1 == $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service.getResponsePrototype() given method descriptor for wrong service type.");

        throw $r5;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.Descriptors$MethodDescriptor: int getIndex()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            default: goto label3;
        };

     label2:
        $r3 = staticinvoke <org.waveprotocol.wave.diff.Diff$FetchDiffResponse: org.waveprotocol.wave.diff.Diff$FetchDiffResponse getDefaultInstance()>();

        return $r3;

     label3:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Can\'t get here.");

        throw $r4;
    }

    public static org.waveprotocol.wave.diff.Diff$FetchDiffService$Stub newStub(com.google.protobuf.RpcChannel)
    {
        com.google.protobuf.RpcChannel r1;
        org.waveprotocol.wave.diff.Diff$FetchDiffService$Stub $r0;

        r1 := @parameter0: com.google.protobuf.RpcChannel;

        $r0 = new org.waveprotocol.wave.diff.Diff$FetchDiffService$Stub;

        specialinvoke $r0.<org.waveprotocol.wave.diff.Diff$FetchDiffService$Stub: void <init>(com.google.protobuf.RpcChannel,org.waveprotocol.wave.diff.Diff$1)>(r1, null);

        return $r0;
    }

    public static org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingInterface newBlockingStub(com.google.protobuf.BlockingRpcChannel)
    {
        org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingStub $r0;
        com.google.protobuf.BlockingRpcChannel r1;

        r1 := @parameter0: com.google.protobuf.BlockingRpcChannel;

        $r0 = new org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingStub;

        specialinvoke $r0.<org.waveprotocol.wave.diff.Diff$FetchDiffService$BlockingStub: void <init>(com.google.protobuf.BlockingRpcChannel,org.waveprotocol.wave.diff.Diff$1)>(r1, null);

        return $r0;
    }
}
