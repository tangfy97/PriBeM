public class com.hp.hpl.jena.sparql.sse.builders.BuilderResultSet extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderResultSet r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderResultSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.query.ResultSet build(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterPlainWrapper $r5;
        com.hp.hpl.jena.sparql.sse.ItemList $r1;
        java.util.ListIterator $r6;
        com.hp.hpl.jena.sparql.sse.Item r0, $r2, $r9;
        java.util.ArrayList $r4;
        com.hp.hpl.jena.sparql.engine.ResultSetStream $r7;
        java.util.List $r3, $r8;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r10;
        int $i0, i1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void checkTagged(com.hp.hpl.jena.sparql.sse.Item,java.lang.String,java.lang.String)>(r0, "resultset", "Not a (resultset ...)");

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(1);

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderNode: java.util.List buildVarList(com.hp.hpl.jena.sparql.sse.Item)>($r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i1 = 2;

     label1:
        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if i1 >= $i0 goto label2;

        $r9 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(i1);

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderBinding: com.hp.hpl.jena.sparql.engine.binding.Binding build(com.hp.hpl.jena.sparql.sse.Item)>($r9);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterPlainWrapper;

        $r6 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator()>();

        specialinvoke $r5.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterPlainWrapper: void <init>(java.util.Iterator)>($r6);

        $r7 = new com.hp.hpl.jena.sparql.engine.ResultSetStream;

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: java.util.List varNames(java.util.Collection)>($r3);

        specialinvoke $r7.<com.hp.hpl.jena.sparql.engine.ResultSetStream: void <init>(java.util.List,com.hp.hpl.jena.rdf.model.Model,java.util.Iterator)>($r8, null, $r5);

        return $r7;
    }
}
