final class org.apache.poi.ss.formula.LazyRefEval extends org.apache.poi.ss.formula.eval.RefEvalBase
{
    private final org.apache.poi.ss.formula.SheetRangeEvaluator _evaluator;

    public void <init>(int, int, org.apache.poi.ss.formula.SheetRangeEvaluator)
    {
        org.apache.poi.ss.formula.SheetRangeEvaluator r1;
        int i0, i1;
        org.apache.poi.ss.formula.LazyRefEval r0;

        r0 := @this: org.apache.poi.ss.formula.LazyRefEval;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.ss.formula.SheetRangeEvaluator;

        specialinvoke r0.<org.apache.poi.ss.formula.eval.RefEvalBase: void <init>(org.apache.poi.ss.formula.SheetRange,int,int)>(r1, i0, i1);

        r0.<org.apache.poi.ss.formula.LazyRefEval: org.apache.poi.ss.formula.SheetRangeEvaluator _evaluator> = r1;

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval getInnerValueEval()
    {
        org.apache.poi.ss.formula.SheetRangeEvaluator $r1;
        org.apache.poi.ss.formula.eval.ValueEval $r2;
        int $i0;
        org.apache.poi.ss.formula.LazyRefEval r0;

        r0 := @this: org.apache.poi.ss.formula.LazyRefEval;

        $r1 = r0.<org.apache.poi.ss.formula.LazyRefEval: org.apache.poi.ss.formula.SheetRangeEvaluator _evaluator>;

        $i0 = virtualinvoke $r1.<org.apache.poi.ss.formula.SheetRangeEvaluator: int getFirstSheetIndex()>();

        $r2 = virtualinvoke r0.<org.apache.poi.ss.formula.LazyRefEval: org.apache.poi.ss.formula.eval.ValueEval getInnerValueEval(int)>($i0);

        return $r2;
    }

    public org.apache.poi.ss.formula.eval.ValueEval getInnerValueEval(int)
    {
        org.apache.poi.ss.formula.SheetRangeEvaluator $r1;
        org.apache.poi.ss.formula.eval.ValueEval $r2;
        int i0, $i1, $i2;
        org.apache.poi.ss.formula.LazyRefEval r0;

        r0 := @this: org.apache.poi.ss.formula.LazyRefEval;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.ss.formula.LazyRefEval: org.apache.poi.ss.formula.SheetRangeEvaluator _evaluator>;

        $i1 = virtualinvoke r0.<org.apache.poi.ss.formula.LazyRefEval: int getRow()>();

        $i2 = virtualinvoke r0.<org.apache.poi.ss.formula.LazyRefEval: int getColumn()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.formula.SheetRangeEvaluator: org.apache.poi.ss.formula.eval.ValueEval getEvalForCell(int,int,int)>(i0, $i1, $i2);

        return $r2;
    }

    public org.apache.poi.ss.formula.eval.AreaEval offset(int, int, int, int)
    {
        org.apache.poi.ss.formula.SheetRangeEvaluator $r3;
        org.apache.poi.ss.formula.LazyAreaEval $r2;
        org.apache.poi.ss.formula.ptg.AreaI$OffsetArea $r0;
        int $i0, $i1, i2, i3, i4, i5;
        org.apache.poi.ss.formula.LazyRefEval r1;

        r1 := @this: org.apache.poi.ss.formula.LazyRefEval;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r0 = new org.apache.poi.ss.formula.ptg.AreaI$OffsetArea;

        $i0 = virtualinvoke r1.<org.apache.poi.ss.formula.LazyRefEval: int getRow()>();

        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.LazyRefEval: int getColumn()>();

        specialinvoke $r0.<org.apache.poi.ss.formula.ptg.AreaI$OffsetArea: void <init>(int,int,int,int,int,int)>($i0, $i1, i2, i3, i4, i5);

        $r2 = new org.apache.poi.ss.formula.LazyAreaEval;

        $r3 = r1.<org.apache.poi.ss.formula.LazyRefEval: org.apache.poi.ss.formula.SheetRangeEvaluator _evaluator>;

        specialinvoke $r2.<org.apache.poi.ss.formula.LazyAreaEval: void <init>(org.apache.poi.ss.formula.ptg.AreaI,org.apache.poi.ss.formula.SheetRangeEvaluator)>($r0, $r3);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.poi.ss.formula.SheetRangeEvaluator $r6;
        org.apache.poi.ss.util.CellReference $r0;
        java.lang.StringBuffer $r2, $r5;
        int $i0, $i1;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r8, $r9;
        org.apache.poi.ss.formula.LazyRefEval r1;

        r1 := @this: org.apache.poi.ss.formula.LazyRefEval;

        $r0 = new org.apache.poi.ss.util.CellReference;

        $i0 = virtualinvoke r1.<org.apache.poi.ss.formula.LazyRefEval: int getRow()>();

        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.LazyRefEval: int getColumn()>();

        specialinvoke $r0.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>($i0, $i1);

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r6 = r1.<org.apache.poi.ss.formula.LazyRefEval: org.apache.poi.ss.formula.SheetRangeEvaluator _evaluator>;

        $r7 = virtualinvoke $r6.<org.apache.poi.ss.formula.SheetRangeEvaluator: java.lang.String getSheetNameRange()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(33);

        $r8 = virtualinvoke $r0.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
