public final class com.mycila.inject.service.ServiceLoaderProvider extends java.lang.Object implements com.google.inject.Provider
{
    private com.google.inject.Injector injector;
    private com.google.inject.Key loaderKey;
    private final java.lang.Class type;

    private void <init>(java.lang.Class)
    {
        com.mycila.inject.service.ServiceLoaderProvider r0;
        java.lang.Class r1;

        r0 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Class type> = r1;

        return;
    }

    public com.mycila.inject.service.ServiceLoaderProvider withLoader(java.lang.Class)
    {
        com.mycila.inject.service.ServiceLoaderProvider r0, $r3;
        com.google.inject.Key $r2;
        java.lang.Class r1;

        r0 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.mycila.inject.service.ServiceLoaderProvider: com.mycila.inject.service.ServiceLoaderProvider withLoader(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.mycila.inject.service.ServiceLoaderProvider withLoader(java.lang.Class, java.lang.Class)
    {
        com.mycila.inject.service.ServiceLoaderProvider r0, $r4;
        com.google.inject.Key $r3;
        java.lang.Class r1, r2;

        r0 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.Class)>(r1, r2);

        $r4 = virtualinvoke r0.<com.mycila.inject.service.ServiceLoaderProvider: com.mycila.inject.service.ServiceLoaderProvider withLoader(com.google.inject.Key)>($r3);

        return $r4;
    }

    public com.mycila.inject.service.ServiceLoaderProvider withLoader(java.lang.Class, java.lang.'annotation'.Annotation)
    {
        com.mycila.inject.service.ServiceLoaderProvider r0, $r4;
        java.lang.'annotation'.Annotation r2;
        com.google.inject.Key $r3;
        java.lang.Class r1;

        r0 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(r1, r2);

        $r4 = virtualinvoke r0.<com.mycila.inject.service.ServiceLoaderProvider: com.mycila.inject.service.ServiceLoaderProvider withLoader(com.google.inject.Key)>($r3);

        return $r4;
    }

    public com.mycila.inject.service.ServiceLoaderProvider withLoader(com.google.inject.Key)
    {
        com.google.inject.Key r1;
        com.mycila.inject.service.ServiceLoaderProvider r0;

        r0 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        r1 := @parameter0: com.google.inject.Key;

        r0.<com.mycila.inject.service.ServiceLoaderProvider: com.google.inject.Key loaderKey> = r1;

        return r0;
    }

    public java.lang.Object[] get()
    {
        com.google.inject.Key $r2, $r3;
        boolean $z0, $z1;
        com.mycila.inject.util.Loader $r7;
        java.lang.StringBuilder $r20, $r21, $r22, $r24;
        com.mycila.inject.util.DefaultLoader $r26;
        com.mycila.inject.service.ServiceLoaderProvider r1;
        java.lang.Object[] $r11, $r12, $r13;
        java.lang.ClassCastException $r19;
        java.util.ArrayList $r0;
        int $i0;
        java.lang.String $r25;
        java.util.Iterator $r8;
        com.mycila.inject.service.ServiceClassLoader $r28;
        com.google.inject.Injector $r4, $r17;
        java.lang.Class $r5, $r9, r15, $r16, $r23, $r27;
        java.lang.Object $r6, $r10, $r14, $r18;

        r1 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<com.mycila.inject.service.ServiceLoaderProvider: com.google.inject.Key loaderKey>;

        if $r2 != null goto label1;

        $r27 = r1.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Class type>;

        $r26 = new com.mycila.inject.util.DefaultLoader;

        specialinvoke $r26.<com.mycila.inject.util.DefaultLoader: void <init>()>();

        $r28 = staticinvoke <com.mycila.inject.service.ServiceClassLoader: com.mycila.inject.service.ServiceClassLoader load(java.lang.Class,com.mycila.inject.util.Loader)>($r27, $r26);

        goto label2;

     label1:
        $r5 = r1.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Class type>;

        $r4 = r1.<com.mycila.inject.service.ServiceLoaderProvider: com.google.inject.Injector injector>;

        $r3 = r1.<com.mycila.inject.service.ServiceLoaderProvider: com.google.inject.Key loaderKey>;

        $r6 = interfaceinvoke $r4.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r3);

        $r7 = (com.mycila.inject.util.Loader) $r6;

        $r28 = staticinvoke <com.mycila.inject.service.ServiceClassLoader: com.mycila.inject.service.ServiceClassLoader load(java.lang.Class,com.mycila.inject.util.Loader)>($r5, $r7);

     label2:
        $r8 = virtualinvoke $r28.<com.mycila.inject.service.ServiceClassLoader: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r14 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.Class) $r14;

        $r16 = r1.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Class type>;

        $z0 = virtualinvoke $r16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z0 != 0 goto label4;

        $r19 = new java.lang.ClassCastException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be assigned to binded type ");

        $r23 = r1.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Class type>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.ClassCastException: void <init>(java.lang.String)>($r25);

        throw $r19;

     label4:
        $r17 = r1.<com.mycila.inject.service.ServiceLoaderProvider: com.google.inject.Injector injector>;

        $r18 = interfaceinvoke $r17.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(r15);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label3;

     label5:
        $r9 = r1.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Class type>;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r9, $i0);

        $r11 = (java.lang.Object[]) $r10;

        $r12 = (java.lang.Object[]) $r11;

        $r13 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        return $r13;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.service.ServiceLoaderProvider r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        r2 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceLoaderProvider[");

        $r3 = r2.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Class type>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static com.mycila.inject.service.ServiceLoaderProvider of(java.lang.Class)
    {
        com.mycila.inject.service.ServiceLoaderProvider $r0;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.mycila.inject.service.ServiceLoaderProvider;

        specialinvoke $r0.<com.mycila.inject.service.ServiceLoaderProvider: void <init>(java.lang.Class)>(r1);

        return $r0;
    }

    public volatile java.lang.Object get()
    {
        com.mycila.inject.service.ServiceLoaderProvider r0;
        java.lang.Object[] $r1;

        r0 := @this: com.mycila.inject.service.ServiceLoaderProvider;

        $r1 = virtualinvoke r0.<com.mycila.inject.service.ServiceLoaderProvider: java.lang.Object[] get()>();

        return $r1;
    }
}
