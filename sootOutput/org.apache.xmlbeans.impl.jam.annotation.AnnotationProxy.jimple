public abstract class org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy extends java.lang.Object
{
    public static final java.lang.String SINGLE_MEMBER_NAME;
    private static final java.lang.String DEFAULT_NVPAIR_DELIMS;
    protected org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext;

    public void <init>()
    {
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(org.apache.xmlbeans.impl.jam.provider.JamServiceContext)
    {
        java.lang.IllegalArgumentException $r2;
        org.apache.xmlbeans.impl.jam.provider.JamServiceContext r0;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy r1;

        r1 := @this: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.provider.JamServiceContext;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null logger");

        throw $r2;

     label1:
        r1.<org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext> = r0;

        return;
    }

    public abstract void setValue(java.lang.String, java.lang.Object, org.apache.xmlbeans.impl.jam.JClass);

    public abstract org.apache.xmlbeans.impl.jam.JAnnotationValue[] getValues();

    public org.apache.xmlbeans.impl.jam.JAnnotationValue getValue(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.JAnnotationValue $r3, $r5;
        java.lang.IllegalArgumentException $r6;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy r1;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.JAnnotationValue[] $r2;
        java.lang.String $r0, $r4, r7;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy;

        r7 := @parameter0: java.lang.String;

        if r7 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null name");

        throw $r6;

     label1:
        $r0 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy: org.apache.xmlbeans.impl.jam.JAnnotationValue[] getValues()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label4;

        $r3 = $r2[i1];

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.JAnnotationValue: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r5 = $r2[i1];

        return $r5;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    protected org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()
    {
        org.apache.xmlbeans.impl.jam.provider.JamServiceContext $r1;
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r2;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.provider.JamServiceContext: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy: java.lang.String DEFAULT_NVPAIR_DELIMS> = "\n\r";

        <org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy: java.lang.String SINGLE_MEMBER_NAME> = "value";

        return;
    }
}
