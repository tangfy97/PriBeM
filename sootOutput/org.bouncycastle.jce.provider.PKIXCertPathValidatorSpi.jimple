public class org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi extends java.security.cert.CertPathValidatorSpi
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi r0;

        r0 := @this: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi;

        specialinvoke r0.<java.security.cert.CertPathValidatorSpi: void <init>()>();

        return;
    }

    public java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters) throws java.security.cert.CertPathValidatorException, java.security.InvalidAlgorithmParameterException
    {
        java.lang.StringBuilder $r76, $r79, $r80, $r100;
        java.security.cert.TrustAnchor $r10;
        java.security.cert.X509Certificate $r7, $r19, $r68, r94, r97;
        java.security.cert.CertPathValidatorException $r82, $r84, $r103, $r104, $r105, $r117, $r120, $r124;
        javax.security.auth.x500.X500Principal r95, $r113;
        java.util.HashSet r98, r99, $r107, $r109, $r112, $r118, $r119, $r121, $r122;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, $i28, $i30, $i32, $i34;
        org.bouncycastle.jce.provider.AnnotatedException $r88;
        java.util.ArrayList[] r11;
        java.security.PublicKey $r30, $r50, r96;
        java.security.cert.PKIXParameters $r1;
        java.lang.Object $r6, $r44, $r64, $r67;
        java.lang.Class $r77;
        java.security.cert.CertPathParameters r0;
        org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi r91;
        java.util.Set $r2, $r5, $r8, $r26, $r47;
        org.bouncycastle.jce.provider.PKIXNameConstraintValidator $r111;
        java.util.ArrayList $r16, $r106, $r108;
        java.security.InvalidAlgorithmParameterException $r101, $r102;
        java.security.cert.PKIXCertPathChecker $r65;
        java.lang.String $r9, $r21, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r78, $r81, $r90;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r22, $r51;
        org.bouncycastle.x509.ExtendedPKIXParameters r92;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r114, $r115, $r116;
        java.util.List $r4, $r24, $r49;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r28, $r45, $r46, r93, $r110;
        java.security.cert.PKIXCertPathValidatorResult $r123;
        org.bouncycastle.util.Selector $r23, $r66;
        java.util.Iterator $r25;
        java.security.cert.CertPath r3;
        java.lang.IllegalArgumentException $r86;

        r91 := @this: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi;

        r3 := @parameter0: java.security.cert.CertPath;

        r0 := @parameter1: java.security.cert.CertPathParameters;

        $z0 = r0 instanceof java.security.cert.PKIXParameters;

        if $z0 != 0 goto label01;

        $r101 = new java.security.InvalidAlgorithmParameterException;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameters must be a ");

        $r77 = class "Ljava/security/cert/PKIXParameters;";

        $r78 = virtualinvoke $r77.<java.lang.Class: java.lang.String getName()>();

        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instance.");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r101.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r81);

        throw $r101;

     label01:
        $z1 = r0 instanceof org.bouncycastle.x509.ExtendedPKIXParameters;

        if $z1 == 0 goto label02;

        r92 = (org.bouncycastle.x509.ExtendedPKIXParameters) r0;

        goto label03;

     label02:
        $r1 = (java.security.cert.PKIXParameters) r0;

        r92 = staticinvoke <org.bouncycastle.x509.ExtendedPKIXParameters: org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)>($r1);

     label03:
        $r2 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Set getTrustAnchors()>();

        if $r2 != null goto label04;

        $r102 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r102.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("trustAnchors is null, this is not allowed for certification path validation.");

        throw $r102;

     label04:
        $r4 = virtualinvoke r3.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $z2 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label05;

        $r103 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r103.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certification path is empty.", null, r3, 0);

        throw $r103;

     label05:
        $r5 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Set getInitialPolicies()>();

     label06:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (java.security.cert.X509Certificate) $r6;

        $r8 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Set getTrustAnchors()>();

        $r9 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.String getSigProvider()>();

        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>($r7, $r8, $r9);

     label07:
        goto label09;

     label08:
        $r88 := @caughtexception;

        $r104 = new java.security.cert.CertPathValidatorException;

        $r90 = virtualinvoke $r88.<org.bouncycastle.jce.provider.AnnotatedException: java.lang.String getMessage()>();

        $i19 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i20 = $i19 - 1;

        specialinvoke $r104.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r90, $r88, r3, $i20);

        throw $r104;

     label09:
        if $r10 != null goto label10;

        $r105 = new java.security.cert.CertPathValidatorException;

        $i28 = (int) -1;

        specialinvoke $r105.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Trust anchor for certification path not found.", null, r3, $i28);

        throw $r105;

     label10:
        $i3 = $i0 + 1;

        r11 = newarray (java.util.ArrayList)[$i3];

        i21 = 0;

     label11:
        $i4 = lengthof r11;

        if i21 >= $i4 goto label12;

        $r106 = new java.util.ArrayList;

        specialinvoke $r106.<java.util.ArrayList: void <init>()>();

        r11[i21] = $r106;

        i21 = i21 + 1;

        goto label11;

     label12:
        $r107 = new java.util.HashSet;

        specialinvoke $r107.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r107.<java.util.Set: boolean add(java.lang.Object)>("2.5.29.32.0");

        $r110 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r108 = new java.util.ArrayList;

        specialinvoke $r108.<java.util.ArrayList: void <init>()>();

        $r109 = new java.util.HashSet;

        specialinvoke $r109.<java.util.HashSet: void <init>()>();

        specialinvoke $r110.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r108, 0, $r107, null, $r109, "2.5.29.32.0", 0);

        r93 = $r110;

        $r16 = r11[0];

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r110);

        $r111 = new org.bouncycastle.jce.provider.PKIXNameConstraintValidator;

        specialinvoke $r111.<org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void <init>()>();

        $r112 = new java.util.HashSet;

        specialinvoke $r112.<java.util.HashSet: void <init>()>();

        $z3 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z3 == 0 goto label13;

        i22 = 0;

        goto label14;

     label13:
        i22 = $i0 + 1;

     label14:
        $z4 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: boolean isAnyPolicyInhibited()>();

        if $z4 == 0 goto label15;

        i23 = 0;

        goto label16;

     label15:
        i23 = $i0 + 1;

     label16:
        $z5 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: boolean isPolicyMappingInhibited()>();

        if $z5 == 0 goto label17;

        i24 = 0;

        goto label18;

     label17:
        i24 = $i0 + 1;

     label18:
        $r19 = virtualinvoke $r10.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        r94 = $r19;

     label19:
        if $r19 == null goto label20;

        r95 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>($r19);

        r96 = virtualinvoke $r19.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        goto label21;

     label20:
        $r113 = new javax.security.auth.x500.X500Principal;

        $r21 = virtualinvoke $r10.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke $r113.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r21);

        r95 = $r113;

        r96 = virtualinvoke $r10.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label21:
        goto label23;

     label22:
        $r86 := @caughtexception;

        $r114 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $i30 = (int) -1;

        specialinvoke $r114.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subject of trust anchor could not be (re)encoded.", $r86, r3, $i30);

        throw $r114;

     label23:
        $r22 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>(r96);

     label24:
        goto label26;

     label25:
        $r84 := @caughtexception;

        $r115 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $i32 = (int) -1;

        specialinvoke $r115.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Algorithm identifier of public key of trust anchor could not be read.", $r84, r3, $i32);

        throw $r115;

     label26:
        virtualinvoke $r22.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        virtualinvoke $r22.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        i25 = $i0;

        $r23 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: org.bouncycastle.util.Selector getTargetConstraints()>();

        if $r23 == null goto label27;

        $r66 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: org.bouncycastle.util.Selector getTargetConstraints()>();

        $r67 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r68 = (java.security.cert.X509Certificate) $r67;

        $z6 = interfaceinvoke $r66.<org.bouncycastle.util.Selector: boolean match(java.lang.Object)>($r68);

        if $z6 != 0 goto label27;

        $r116 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r116.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Target certificate in certification path does not match targetConstraints.", null, r3, 0);

        throw $r116;

     label27:
        $r24 = virtualinvoke r92.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getCertPathCheckers()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z7 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label29;

        $r64 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        $r65 = (java.security.cert.PKIXCertPathChecker) $r64;

        virtualinvoke $r65.<java.security.cert.PKIXCertPathChecker: void init(boolean)>(0);

        goto label28;

     label29:
        r97 = null;

        $i5 = interfaceinvoke $r4.<java.util.List: int size()>();

        i26 = $i5 - 1;

     label30:
        if i26 < 0 goto label41;

        i11 = $i0 - i26;

        $r44 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i26);

        r97 = (java.security.cert.X509Certificate) $r44;

        $i12 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i13 = $i12 - 1;

        if i26 != $i13 goto label31;

        $z8 = 1;

        goto label32;

     label31:
        $z8 = 0;

     label32:
        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCertA(java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters,int,java.security.PublicKey,boolean,javax.security.auth.x500.X500Principal,java.security.cert.X509Certificate)>(r3, r92, i26, r96, $z8, r95, r94);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)>(r3, i26, $r111);

        $r45 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)>(r3, i26, $r112, r93, r11, i23);

        $r46 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode processCertE(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXPolicyNode)>(r3, i26, $r45);

        r93 = $r46;

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCertF(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXPolicyNode,int)>(r3, i26, $r46, i22);

        if i11 == $i0 goto label40;

        if r97 == null goto label33;

        $i18 = virtualinvoke r97.<java.security.cert.X509Certificate: int getVersion()>();

        if $i18 != 1 goto label33;

        $r117 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r117.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Version 1 certificates can\'t be used as CA ones.", null, r3, i26);

        throw $r117;

     label33:
        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertA(java.security.cert.CertPath,int)>(r3, i26);

        r93 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)>(r3, i26, r11, $r46, i24);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertG(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)>(r3, i26, $r111);

        $i14 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertH1(java.security.cert.CertPath,int,int)>(r3, i26, i22);

        $i15 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertH2(java.security.cert.CertPath,int,int)>(r3, i26, i24);

        $i16 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertH3(java.security.cert.CertPath,int,int)>(r3, i26, i23);

        i22 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertI1(java.security.cert.CertPath,int,int)>(r3, i26, $i14);

        i24 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertI2(java.security.cert.CertPath,int,int)>(r3, i26, $i15);

        i23 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertJ(java.security.cert.CertPath,int,int)>(r3, i26, $i16);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertK(java.security.cert.CertPath,int)>(r3, i26);

        $i17 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertL(java.security.cert.CertPath,int,int)>(r3, i26, i25);

        i25 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertM(java.security.cert.CertPath,int,int)>(r3, i26, $i17);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertN(java.security.cert.CertPath,int)>(r3, i26);

        $r47 = virtualinvoke r97.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r47 == null goto label34;

        $r118 = new java.util.HashSet;

        specialinvoke $r118.<java.util.HashSet: void <init>(java.util.Collection)>($r47);

        r98 = $r118;

        $r53 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r53);

        $r54 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r54);

        $r55 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r55);

        $r56 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r56);

        $r57 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r57);

        $r58 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r58);

        $r59 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r59);

        $r60 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r60);

        $r61 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r61);

        $r62 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        interfaceinvoke $r118.<java.util.Set: boolean remove(java.lang.Object)>($r62);

        goto label35;

     label34:
        $r119 = new java.util.HashSet;

        specialinvoke $r119.<java.util.HashSet: void <init>()>();

        r98 = $r119;

     label35:
        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertO(java.security.cert.CertPath,int,java.util.Set,java.util.List)>(r3, i26, r98, $r24);

        r94 = r97;

        r95 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>(r97);

     label36:
        $r49 = virtualinvoke r3.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r50 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.PublicKey getNextWorkingKey(java.util.List,int)>($r49, i26);

        r96 = $r50;

     label37:
        goto label39;

     label38:
        $r82 := @caughtexception;

        $r120 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r120.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Next working key could not be retrieved.", $r82, r3, i26);

        throw $r120;

     label39:
        $r51 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>($r50);

        virtualinvoke $r51.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        virtualinvoke $r51.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

     label40:
        $i34 = (int) -1;

        i26 = i26 + $i34;

        goto label30;

     label41:
        $i6 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int wrapupCertA(int,java.security.cert.X509Certificate)>(i22, r97);

        $i7 = i26 + 1;

        $i8 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int wrapupCertB(java.security.cert.CertPath,int,int)>(r3, $i7, $i6);

        $r26 = virtualinvoke r97.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r26 == null goto label42;

        $r121 = new java.util.HashSet;

        specialinvoke $r121.<java.util.HashSet: void <init>(java.util.Collection)>($r26);

        r99 = $r121;

        $r33 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r33);

        $r34 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r34);

        $r35 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r35);

        $r36 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $r37 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r37);

        $r38 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r38);

        $r39 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r39);

        $r40 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r40);

        $r41 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r41);

        $r42 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r42);

        $r43 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        interfaceinvoke $r121.<java.util.Set: boolean remove(java.lang.Object)>($r43);

        goto label43;

     label42:
        $r122 = new java.util.HashSet;

        specialinvoke $r122.<java.util.HashSet: void <init>()>();

        r99 = $r122;

     label43:
        $i9 = i26 + 1;

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void wrapupCertF(java.security.cert.CertPath,int,java.util.List,java.util.Set)>(r3, $i9, $r24, r99);

        $i10 = i26 + 1;

        $r28 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode wrapupCertG(java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Set,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.Set)>(r3, r92, $r5, $i10, r11, r93, $r112);

        if $i8 > 0 goto label44;

        if $r28 == null goto label45;

     label44:
        $r123 = new java.security.cert.PKIXCertPathValidatorResult;

        $r30 = virtualinvoke r97.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r123.<java.security.cert.PKIXCertPathValidatorResult: void <init>(java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>($r10, $r28, $r30);

        return $r123;

     label45:
        $r124 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r124.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Path processing failed on policy.", null, r3, i26);

        throw $r124;

        catch org.bouncycastle.jce.provider.AnnotatedException from label06 to label07 with label08;
        catch java.lang.IllegalArgumentException from label19 to label21 with label22;
        catch java.security.cert.CertPathValidatorException from label23 to label24 with label25;
        catch java.security.cert.CertPathValidatorException from label36 to label37 with label38;
    }
}
