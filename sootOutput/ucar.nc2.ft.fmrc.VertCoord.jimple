public class ucar.nc2.ft.fmrc.VertCoord extends java.lang.Object implements java.lang.Comparable
{
    private java.lang.String name;
    private java.lang.String units;
    private int id;
    private double[] values1;
    private double[] values2;

    void <init>()
    {
        ucar.nc2.ft.fmrc.VertCoord r0;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(ucar.nc2.dataset.CoordinateAxis1D)
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        double[] $r4, $r5, $r6, $r7;
        long $l0, $l2, $l3;
        byte $b4;
        ucar.nc2.dataset.CoordinateAxis1D r1;
        int i1, i5, $i6;
        java.lang.String $r2, $r3;
        boolean $z0;
        double $d0;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateAxis1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getName()>();

        r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String name> = $r2;

        $r3 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getUnitsString()>();

        r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String units> = $r3;

        $l0 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        i1 = (int) $l0;

        $z0 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: boolean isInterval()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: double[] getBound1()>();

        r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1> = $r6;

        $r7 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: double[] getBound2()>();

        r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2> = $r7;

        goto label3;

     label1:
        $r4 = newarray (double)[i1];

        r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1> = $r4;

        i5 = 0;

     label2:
        $l2 = (long) i5;

        $l3 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        $b4 = $l2 cmp $l3;

        $i6 = (int) $b4;

        if $i6 >= 0 goto label3;

        $r5 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $d0 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(i5);

        $r5[i5] = $d0;

        i5 = i5 + 1;

        goto label2;

     label3:
        return;
    }

    void <init>(ucar.nc2.ft.fmrc.VertCoord)
    {
        ucar.nc2.ft.fmrc.VertCoord r0, r1;
        double[] $r4, $r6, $r7, $r8, $r10;
        int $i0;
        java.lang.Object $r5, $r9;
        java.lang.String $r2, $r3;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r1 := @parameter0: ucar.nc2.ft.fmrc.VertCoord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String getName()>();

        r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String name> = $r2;

        $r3 = virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String getUnits()>();

        r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String units> = $r3;

        $i0 = r1.<ucar.nc2.ft.fmrc.VertCoord: int id>;

        r0.<ucar.nc2.ft.fmrc.VertCoord: int id> = $i0;

        $r4 = virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: double[] getValues1()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (double[]) $r5;

        r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1> = $r6;

        $r7 = virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: double[] getValues2()>();

        if $r7 != null goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r8 = virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: double[] getValues2()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        $r10 = (double[]) $r9;

     label2:
        r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2> = $r10;

        return;
    }

    public int getId()
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        int $i0;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        $i0 = r0.<ucar.nc2.ft.fmrc.VertCoord: int id>;

        return $i0;
    }

    public void setId(int)
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        int i0;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        i0 := @parameter0: int;

        r0.<ucar.nc2.ft.fmrc.VertCoord: int id> = i0;

        return;
    }

    public java.lang.String getName()
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        $r1 = r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String name>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String name> = r1;

        return;
    }

    public java.lang.String getUnits()
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        $r1 = r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String units>;

        return $r1;
    }

    public void setUnits(java.lang.String)
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String units> = r1;

        return;
    }

    public double[] getValues1()
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        double[] $r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        $r1 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        return $r1;
    }

    public void setValues1(double[])
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        double[] r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r1 := @parameter0: double[];

        r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1> = r1;

        return;
    }

    public double[] getValues2()
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        double[] $r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        $r1 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        return $r1;
    }

    public void setValues2(double[])
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        double[] r1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r1 := @parameter0: double[];

        r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2> = r1;

        return;
    }

    public int getSize()
    {
        ucar.nc2.ft.fmrc.VertCoord r0;
        double[] $r1;
        int $i0;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        $r1 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean equalsData(ucar.nc2.ft.fmrc.VertCoord)
    {
        ucar.nc2.ft.fmrc.VertCoord r0, r2;
        double[] $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r2 := @parameter0: ucar.nc2.ft.fmrc.VertCoord;

        $r1 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $i1 = lengthof $r1;

        $r3 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label01;

        return 0;

     label01:
        i6 = 0;

     label02:
        $r4 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $i2 = lengthof $r4;

        if i6 >= $i2 goto label04;

        $r14 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $d3 = $r14[i6];

        $r15 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $d2 = $r15[i6];

        $z1 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d3, $d2);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        i6 = i6 + 1;

        goto label02;

     label04:
        $r5 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        if $r5 != null goto label05;

        $r13 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        if $r13 != null goto label05;

        return 1;

     label05:
        $r6 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        if $r6 == null goto label06;

        $r7 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        if $r7 != null goto label07;

     label06:
        return 0;

     label07:
        $r8 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        $i4 = lengthof $r8;

        $r9 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        $i3 = lengthof $r9;

        if $i4 == $i3 goto label08;

        return 0;

     label08:
        i7 = 0;

     label09:
        $r10 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        $i5 = lengthof $r10;

        if i7 >= $i5 goto label11;

        $r11 = r0.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        $d1 = $r11[i7];

        $r12 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        $d0 = $r12[i7];

        $z0 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d1, $d0);

        if $z0 != 0 goto label10;

        return 0;

     label10:
        i7 = i7 + 1;

        goto label09;

     label11:
        return 1;
    }

    public int compareTo(java.lang.Object)
    {
        ucar.nc2.ft.fmrc.VertCoord r1, r2;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r3, $r4;

        r2 := @this: ucar.nc2.ft.fmrc.VertCoord;

        r0 := @parameter0: java.lang.Object;

        r1 = (ucar.nc2.ft.fmrc.VertCoord) r0;

        $r4 = r2.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String name>;

        $r3 = r1.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String name>;

        $i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public java.lang.String toString()
    {
        ucar.nc2.ft.fmrc.VertCoord r2;
        java.lang.Object[] $r1, $r5, $r8, $r13;
        java.lang.Double $r10, $r12, $r14;
        double[] $r3, $r4, $r9, $r11, r15;
        java.util.Formatter $r0;
        int $i0, i1, i2, i3;
        java.lang.String $r6, $r7;
        double $d0, $d1, d2;

        r2 := @this: ucar.nc2.ft.fmrc.VertCoord;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("values=", $r1);

        $r3 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        if $r3 != null goto label3;

        r15 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        i1 = lengthof r15;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        d2 = r15[i2];

        $r13 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r13[0] = $r14;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%5f, ", $r13);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i3 = 0;

     label4:
        $r4 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $i0 = lengthof $r4;

        if i3 >= $i0 goto label5;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values1>;

        $d0 = $r9[i3];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r8[0] = $r10;

        $r11 = r2.<ucar.nc2.ft.fmrc.VertCoord: double[] values2>;

        $d1 = $r11[i3];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r8[1] = $r12;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("(%6.3f,%6.3f) ", $r8);

        i3 = i3 + 1;

        goto label4;

     label5:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r2.<ucar.nc2.ft.fmrc.VertCoord: java.lang.String name>;

        $r5[0] = $r6;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("; name=%s", $r5);

        $r7 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r7;
    }

    public static ucar.nc2.ft.fmrc.VertCoord findVertCoord(java.util.List, ucar.nc2.ft.fmrc.VertCoord)
    {
        ucar.nc2.ft.fmrc.VertCoord r0, $r3, r5;
        java.util.Iterator $r2;
        java.util.List r1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r1 := @parameter0: java.util.List;

        r0 := @parameter1: ucar.nc2.ft.fmrc.VertCoord;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.ft.fmrc.VertCoord) $r4;

        $z1 = virtualinvoke r0.<ucar.nc2.ft.fmrc.VertCoord: boolean equalsData(ucar.nc2.ft.fmrc.VertCoord)>(r5);

        if $z1 == 0 goto label3;

        return r5;

     label3:
        goto label2;

     label4:
        $r3 = new ucar.nc2.ft.fmrc.VertCoord;

        specialinvoke $r3.<ucar.nc2.ft.fmrc.VertCoord: void <init>(ucar.nc2.ft.fmrc.VertCoord)>(r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    public static void normalize(ucar.nc2.ft.fmrc.VertCoord, java.util.List)
    {
        ucar.nc2.ft.fmrc.VertCoord r1, r17;
        java.lang.Object[] $r7;
        double[] $r2, $r3, r11, $r15, $r16, r18;
        ucar.nc2.ft.fmrc.VertCoord$LevelCoord r13;
        java.util.HashSet $r0;
        byte $b4;
        int $i0, $i1, $i2, $i3, i5;
        boolean $z0, z1;
        double $d0, $d1, $d2;
        java.util.Iterator $r5;
        java.util.List r4, $r10;
        ucar.nc2.ft.fmrc.VertCoord$LevelCoord[] $r6, $r8, $r9;
        java.lang.Object $r12, $r14;

        r1 := @parameter0: ucar.nc2.ft.fmrc.VertCoord;

        r4 := @parameter1: java.util.List;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: double[] getValues1()>();

        $r3 = virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: double[] getValues2()>();

        staticinvoke <ucar.nc2.ft.fmrc.VertCoord: void addValues(java.util.Set,double[],double[])>($r0, $r2, $r3);

        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r17 = (ucar.nc2.ft.fmrc.VertCoord) $r14;

        $r15 = virtualinvoke r17.<ucar.nc2.ft.fmrc.VertCoord: double[] getValues1()>();

        $r16 = virtualinvoke r17.<ucar.nc2.ft.fmrc.VertCoord: double[] getValues2()>();

        staticinvoke <ucar.nc2.ft.fmrc.VertCoord: void addValues(java.util.Set,double[],double[])>($r0, $r15, $r16);

        goto label1;

     label2:
        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $r6 = newarray (ucar.nc2.ft.fmrc.VertCoord$LevelCoord)[$i0];

        $r7 = interfaceinvoke $r0.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (ucar.nc2.ft.fmrc.VertCoord$LevelCoord[]) $r7;

        $r9 = (ucar.nc2.ft.fmrc.VertCoord$LevelCoord[]) $r8;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r10);

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        r18 = newarray (double)[$i1];

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        r11 = newarray (double)[$i2];

        z1 = 0;

        i5 = 0;

     label3:
        $i3 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i5 >= $i3 goto label5;

        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i5);

        r13 = (ucar.nc2.ft.fmrc.VertCoord$LevelCoord) $r12;

        $d0 = r13.<ucar.nc2.ft.fmrc.VertCoord$LevelCoord: double value1>;

        r18[i5] = $d0;

        $d1 = r13.<ucar.nc2.ft.fmrc.VertCoord$LevelCoord: double value2>;

        r11[i5] = $d1;

        $d2 = r13.<ucar.nc2.ft.fmrc.VertCoord$LevelCoord: double value2>;

        $b4 = $d2 cmpl 0.0;

        if $b4 == 0 goto label4;

        z1 = 1;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: void setValues1(double[])>(r18);

        if z1 == 0 goto label6;

        virtualinvoke r1.<ucar.nc2.ft.fmrc.VertCoord: void setValues2(double[])>(r11);

     label6:
        return;
    }

    private static void addValues(java.util.Set, double[], double[])
    {
        double[] r0, r1;
        java.util.Set r2;
        ucar.nc2.ft.fmrc.VertCoord$LevelCoord $r3;
        int $i0, i1;
        double $d0, $d1;

        r2 := @parameter0: java.util.Set;

        r0 := @parameter1: double[];

        r1 := @parameter2: double[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        if r1 != null goto label2;

        $d1 = 0.0;

        goto label3;

     label2:
        $d1 = r1[i1];

     label3:
        $r3 = new ucar.nc2.ft.fmrc.VertCoord$LevelCoord;

        $d0 = r0[i1];

        specialinvoke $r3.<ucar.nc2.ft.fmrc.VertCoord$LevelCoord: void <init>(double,double)>($d0, $d1);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }
}
