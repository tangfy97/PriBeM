public class org.apache.cxf.jaxrs.provider.JAXBElementProvider extends org.apache.cxf.jaxrs.provider.AbstractJAXBProvider
{
    private static final java.lang.String XML_PI_START;
    private static final java.lang.String XML_PI_PROPERTY_RI;
    private static final java.lang.String XML_PI_PROPERTY_RI_INT;
    private static final java.util.List MARSHALLER_PROPERTIES;
    private java.util.Map mProperties;
    private java.util.Map nsPrefixes;
    private java.lang.String xmlResourceOffset;
    private java.lang.String xmlPiPropertyName;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map mProperties> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map nsPrefixes> = $r2;

        r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String xmlResourceOffset> = "";

        return;
    }

    public void setXmlResourceOffset(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String xmlResourceOffset> = r1;

        return;
    }

    public void setNamespacePrefixes(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map nsPrefixes> = r1;

        return;
    }

    protected void setXmlPiProperty(javax.xml.bind.Marshaller, java.lang.String) throws java.lang.Exception
    {
        javax.xml.bind.Marshaller r2;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String $r1, r3, $r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r2 := @parameter0: javax.xml.bind.Marshaller;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String xmlPiPropertyName>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String xmlPiPropertyName>;

        staticinvoke <org.apache.cxf.jaxrs.provider.JAXBElementProvider: void setMarshallerProp(javax.xml.bind.Marshaller,java.lang.Object,java.lang.String,java.lang.String)>(r2, r3, $r4, null);

        goto label2;

     label1:
        staticinvoke <org.apache.cxf.jaxrs.provider.JAXBElementProvider: void setMarshallerProp(javax.xml.bind.Marshaller,java.lang.Object,java.lang.String,java.lang.String)>(r2, r3, "com.sun.xml.bind.xmlHeaders", "com.sun.xml.internal.bind.xmlHeaders");

     label2:
        return;
    }

    protected boolean canBeReadAsJaxbElement(java.lang.Class)
    {
        java.lang.Class r1, $r2;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.lang.Class;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider: boolean canBeReadAsJaxbElement(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        if r1 == class "Lorg/apache/cxf/jaxrs/ext/xml/XMLSource;" goto label1;

        $r2 = class "Ljavax/xml/transform/Source;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        org.apache.cxf.jaxrs.ext.MessageContext r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider: void setContext(org.apache.cxf.jaxrs.ext.MessageContext)>(r1);

        return;
    }

    public void setEnableBuffering(boolean)
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider: void setEnableBuffering(boolean)>(z0);

        return;
    }

    public void setConsumeMediaTypes(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider: void setConsumeMediaTypes(java.util.List)>(r1);

        return;
    }

    public void setProduceMediaTypes(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider: void setProduceMediaTypes(java.util.List)>(r1);

        return;
    }

    public void setMarshallerProperties(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map mProperties> = r1;

        return;
    }

    public void setSchemaLocation(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map mProperties>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jaxb.schemaLocation", r1);

        return;
    }

    public java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        javax.ws.rs.core.MediaType r10;
        javax.xml.stream.XMLStreamReader r29, $r31, $r32;
        java.util.Map $r16, $r17;
        javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter $r13;
        javax.ws.rs.BadRequestException $r24;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.logging.Logger $r22;
        javax.xml.bind.JAXBException $r28;
        java.lang.Exception $r21;
        org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper $r12;
        java.lang.reflect.Type r4;
        javax.ws.rs.WebApplicationException $r25, $r27;
        java.lang.Throwable $r20;
        java.lang.'annotation'.Annotation[] r5;
        java.lang.String $r18, $r23;
        javax.xml.bind.Unmarshaller $r7;
        javax.xml.bind.JAXBElement $r15;
        javax.ws.rs.core.MultivaluedMap r1;
        java.lang.Class r2, r3, $r6, $r8, $r14, $r30, $r33;
        java.lang.Object $r11, $r19, r34, r35;
        org.apache.cxf.staxutils.DepthExceededStaxException $r26;
        java.io.InputStream r9;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r2 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.reflect.Type;

        r5 := @parameter2: java.lang.'annotation'.Annotation[];

        r10 := @parameter3: javax.ws.rs.core.MediaType;

        r1 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r9 := @parameter5: java.io.InputStream;

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: boolean isPayloadEmpty(javax.ws.rs.core.MultivaluedMap)>(r1);

        if $z0 == 0 goto label02;

        $r19 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r5, class "Lorg/apache/cxf/jaxrs/ext/Nullable;");

        if $r19 == null goto label01;

        return null;

     label01:
        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void reportEmptyContentLength()>();

     label02:
        r29 = null;

     label03:
        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>(r2);

        if $z1 == 0 goto label04;

        $r30 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type)>(r4);

        goto label05;

     label04:
        $r30 = r2;

     label05:
        r3 = $r30;

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>($r30, r4, r5);

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)>($r6, r4, $z1);

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void addAttachmentUnmarshaller(javax.xml.bind.Unmarshaller)>($r7);

        $r8 = class "Ljavax/xml/bind/JAXBElement;";

        $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z2 != 0 goto label06;

        if $z1 != 0 goto label08;

        $z4 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: boolean unmarshalAsJaxbElement>;

        if $z4 != 0 goto label06;

        $r16 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map jaxbElementClassMap>;

        if $r16 == null goto label08;

        $r17 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map jaxbElementClassMap>;

        $r18 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $z5 = interfaceinvoke $r17.<java.util.Map: boolean containsKey(java.lang.Object)>($r18);

        if $z5 == 0 goto label08;

     label06:
        $r31 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)>(r9, r2, r10);

        r29 = $r31;

        $r32 = staticinvoke <org.apache.cxf.staxutils.transform.TransformUtils: javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)>($r31, r9);

        r29 = $r32;

        $r33 = class "Ljavax/xml/bind/JAXBElement;";

        $z6 = virtualinvoke $r33.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z6 == 0 goto label07;

        if r2 != $r6 goto label07;

        r34 = interfaceinvoke $r7.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)>($r32);

        goto label09;

     label07:
        r34 = interfaceinvoke $r7.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.stream.XMLStreamReader,java.lang.Class)>($r32, $r6);

        goto label09;

     label08:
        r34 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)>($r7, r2, r9, r10);

     label09:
        $z7 = r34 instanceof javax.xml.bind.JAXBElement;

        if $z7 == 0 goto label10;

        $r14 = class "Ljavax/xml/bind/JAXBElement;";

        $z3 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z3 != 0 goto label10;

        $r15 = (javax.xml.bind.JAXBElement) r34;

        r34 = virtualinvoke $r15.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label10:
        if $z1 == 0 goto label11;

        $r12 = (org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper) r34;

        $r13 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXBUtils: javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter getAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])>(r3, r5);

        r35 = virtualinvoke $r12.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper: java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)>($r6, r2, $r13);

        goto label12;

     label11:
        r35 = staticinvoke <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object checkAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[],boolean)>(r34, r2, r5, 0);

     label12:
        $r11 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r35);

     label13:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>(r29);

        return $r11;

     label14:
        $r28 := @caughtexception;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void handleJAXBException(javax.xml.bind.JAXBException,boolean)>($r28, 1);

     label15:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>(r29);

        goto label21;

     label16:
        $r26 := @caughtexception;

        $r27 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r27.<javax.ws.rs.WebApplicationException: void <init>(int)>(413);

        throw $r27;

     label17:
        $r25 := @caughtexception;

        throw $r25;

     label18:
        $r21 := @caughtexception;

        $r22 = <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.logging.Logger LOG>;

        $r23 = staticinvoke <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String getStackTrace(java.lang.Exception)>($r21);

        virtualinvoke $r22.<java.util.logging.Logger: void warning(java.lang.String)>($r23);

        $r24 = new javax.ws.rs.BadRequestException;

        specialinvoke $r24.<javax.ws.rs.BadRequestException: void <init>(java.lang.Throwable)>($r21);

        throw $r24;

     label19:
        $r20 := @caughtexception;

     label20:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>(r29);

        throw $r20;

     label21:
        return null;

        catch javax.xml.bind.JAXBException from label03 to label13 with label14;
        catch org.apache.cxf.staxutils.DepthExceededStaxException from label03 to label13 with label16;
        catch javax.ws.rs.WebApplicationException from label03 to label13 with label17;
        catch java.lang.Exception from label03 to label13 with label18;
        catch java.lang.Throwable from label03 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label20 with label19;
    }

    protected java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller, java.lang.Class, java.io.InputStream, javax.ws.rs.core.MediaType) throws javax.xml.bind.JAXBException
    {
        java.lang.Throwable $r8;
        javax.xml.bind.Unmarshaller r5;
        javax.xml.bind.JAXBException $r9;
        javax.ws.rs.core.MediaType r3;
        javax.xml.stream.XMLStreamReader $r4;
        java.lang.Class r2;
        java.lang.Object $r6, $r7;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r5 := @parameter0: javax.xml.bind.Unmarshaller;

        r2 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.io.InputStream;

        r3 := @parameter3: javax.ws.rs.core.MediaType;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)>(r1, r2, r3);

        if $r4 == null goto label6;

     label1:
        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)>(r5, $r4, r3);

     label2:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>($r4);

        return $r7;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r8 := @caughtexception;

     label5:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>($r4);

        throw $r8;

     label6:
        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)>(r5, r1, r3);

        return $r6;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    protected javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream, java.lang.Class, javax.ws.rs.core.MediaType)
    {
        javax.xml.stream.XMLInputFactory r10;
        javax.ws.rs.core.MediaType r15;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        javax.xml.stream.XMLStreamReader $r5, $r16, r17, $r18, $r19;
        org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$JAXBCollectionWrapperReader $r4;
        javax.xml.stream.XMLStreamException $r12;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String $r8;
        boolean $z0;
        javax.ws.rs.InternalServerErrorException $r13;
        java.lang.RuntimeException $r14;
        java.lang.Class r3, $r7;
        java.lang.Object $r6, $r9, $r11;
        java.io.InputStream r2;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.Class;

        r15 := @parameter2: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r1 == null goto label1;

        $r11 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        $r16 = (javax.xml.stream.XMLStreamReader) $r11;

        goto label2;

     label1:
        $r16 = null;

     label2:
        r17 = $r16;

        if $r16 != null goto label6;

        if $r1 == null goto label6;

        $r7 = class "Ljavax/xml/stream/XMLInputFactory;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>($r8);

        r10 = (javax.xml.stream.XMLInputFactory) $r9;

        if r10 == null goto label6;

     label3:
        r17 = virtualinvoke r10.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r2);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r13 = new javax.ws.rs.InternalServerErrorException;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Can not create XMLStreamReader", $r12);

        specialinvoke $r13.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r14);

        throw $r13;

     label6:
        if r17 != null goto label7;

        if r2 != null goto label7;

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object getStreamHandlerFromCurrentMessage(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        r17 = (javax.xml.stream.XMLStreamReader) $r6;

     label7:
        $r18 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)>(r17, r2);

        $r19 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.stream.XMLStreamReader createDepthReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)>($r18, r2);

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>(r3);

        if $z0 == 0 goto label8;

        $r4 = new org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$JAXBCollectionWrapperReader;

        $r5 = staticinvoke <org.apache.cxf.staxutils.transform.TransformUtils: javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)>($r19, r2);

        specialinvoke $r4.<org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$JAXBCollectionWrapperReader: void <init>(javax.xml.stream.XMLStreamReader)>($r5);

        return $r4;

     label8:
        return $r19;

        catch javax.xml.stream.XMLStreamException from label3 to label4 with label5;
    }

    protected java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller, java.io.InputStream, javax.ws.rs.core.MediaType) throws javax.xml.bind.JAXBException
    {
        java.lang.Throwable $r7;
        javax.xml.bind.Unmarshaller r1;
        javax.ws.rs.InternalServerErrorException $r6;
        java.io.Reader r10;
        java.util.logging.Logger $r5;
        javax.ws.rs.core.MediaType r8;
        javax.xml.stream.XMLStreamReader r9;
        java.lang.Object $r2, $r4;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r3;
        java.io.InputStream r0;

        r3 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: javax.xml.bind.Unmarshaller;

        r0 := @parameter1: java.io.InputStream;

        r8 := @parameter2: javax.ws.rs.core.MediaType;

        r9 = null;

     label1:
        if r0 != null goto label3;

        $r4 = virtualinvoke r3.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object getStreamHandlerFromCurrentMessage(java.lang.Class)>(class "Ljava/io/Reader;");

        r10 = (java.io.Reader) $r4;

        if r10 != null goto label2;

        $r5 = <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r5.<java.util.logging.Logger: void severe(java.lang.String)>("No InputStream, Reader, or XMStreamReader is available");

        $r6 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r6.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r6;

     label2:
        r9 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>(r10);

        goto label4;

     label3:
        r9 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r0);

     label4:
        $r2 = interfaceinvoke r1.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)>(r9);

     label5:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>(r9);

        return $r2;

     label6:
        $r7 := @caughtexception;

     label7:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>(r9);

        throw $r7;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller, javax.xml.stream.XMLStreamReader, javax.ws.rs.core.MediaType) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.Unmarshaller r0;
        javax.ws.rs.core.MediaType r4;
        javax.xml.stream.XMLStreamReader r1;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r3;

        r3 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r0 := @parameter0: javax.xml.bind.Unmarshaller;

        r1 := @parameter1: javax.xml.stream.XMLStreamReader;

        r4 := @parameter2: javax.ws.rs.core.MediaType;

        $r2 = interfaceinvoke r0.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)>(r1);

        return $r2;
    }

    public void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.'annotation'.Annotation[] r5;
        javax.ws.rs.core.MediaType r0;
        java.lang.String $r2;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r7;
        boolean $z0, $z1;
        java.io.OutputStream r9;
        javax.ws.rs.InternalServerErrorException $r11;
        javax.xml.bind.JAXBException $r13;
        java.lang.Exception $r10;
        javax.ws.rs.core.MultivaluedMap r1;
        java.lang.reflect.Type r8;
        javax.ws.rs.WebApplicationException $r12;
        java.lang.Class r3, $r14;
        java.lang.Object r4, $r6;

        r7 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r4 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r8 := @parameter2: java.lang.reflect.Type;

        r5 := @parameter3: java.lang.'annotation'.Annotation[];

        r0 := @parameter4: javax.ws.rs.core.MediaType;

        r1 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r9 := @parameter6: java.io.OutputStream;

     label01:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)>(r0, r1, null);

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>(r3);

        if $z0 == 0 goto label02;

        virtualinvoke r7.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])>(r3, r4, r8, $r2, r9, r0, r5);

        goto label06;

     label02:
        $r6 = staticinvoke <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object checkAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[],boolean)>(r4, r3, r5, 1);

        if r4 != $r6 goto label03;

        $z1 = virtualinvoke r3.<java.lang.Class: boolean isInterface()>();

        if $z1 == 0 goto label04;

     label03:
        $r14 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        goto label05;

     label04:
        $r14 = r3;

     label05:
        virtualinvoke r7.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])>($r6, $r14, r8, $r2, r9, r0, r5);

     label06:
        goto label10;

     label07:
        $r13 := @caughtexception;

        virtualinvoke r7.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void handleJAXBException(javax.xml.bind.JAXBException,boolean)>($r13, 1);

        goto label10;

     label08:
        $r12 := @caughtexception;

        throw $r12;

     label09:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

        $r11 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r11.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label10:
        return;

        catch javax.xml.bind.JAXBException from label01 to label06 with label07;
        catch javax.ws.rs.WebApplicationException from label01 to label06 with label08;
        catch java.lang.Exception from label01 to label06 with label09;
    }

    protected void marshalCollection(java.lang.Class, java.lang.Object, java.lang.reflect.Type, java.lang.String, java.io.OutputStream, javax.ws.rs.core.MediaType, java.lang.'annotation'.Annotation[]) throws java.lang.Exception
    {
        byte[] $r18, $r30, $r31;
        javax.ws.rs.core.MediaType r35;
        java.util.Map $r40;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r2;
        javax.ws.rs.core.Response$ResponseBuilder $r67, $r68;
        javax.ws.rs.WebApplicationException $r66;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r14, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r43, $r44, $r45, $r46, $r48, $r49, $r50, $r51, $r53, $r54, $r55, $r56, $r57, $r58, $r60, $r61;
        javax.xml.namespace.QName r76;
        java.lang.Object[] $r63, $r70, $r71;
        java.util.ResourceBundle $r64;
        java.lang.String r12, $r15, $r17, $r19, $r22, $r27, $r36, $r39, $r41, $r47, $r52, $r59, $r65, $r77, r78, r79, r80;
        javax.xml.bind.JAXBElement r75;
        javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter $r33;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r73;
        javax.ws.rs.core.Response $r69;
        java.lang.reflect.Type r0;
        java.lang.'annotation'.Annotation[] r3;
        org.apache.cxf.common.i18n.Message $r62;
        int $i0;
        java.io.OutputStream r16;
        java.util.Iterator $r7;
        java.lang.Class $r1, $r4, r5, $r32, r72;
        java.lang.Object r6, r8, $r34, $r37, $r38, $r42, $r74;

        r2 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r5 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.reflect.Type;

        r12 := @parameter3: java.lang.String;

        r16 := @parameter4: java.io.OutputStream;

        r35 := @parameter5: javax.ws.rs.core.MediaType;

        r3 := @parameter6: java.lang.'annotation'.Annotation[];

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type)>(r0);

        $r4 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>($r1, r0, r3);

        r72 = $r4;

        $z0 = virtualinvoke r5.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label01;

        $r70 = (java.lang.Object[]) r6;

        $r71 = (java.lang.Object[]) $r70;

        $r73 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r71);

        goto label02;

     label01:
        $r73 = (java.util.Collection) r6;

     label02:
        $r7 = interfaceinvoke $r73.<java.util.Collection: java.util.Iterator iterator()>();

        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r74 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        goto label04;

     label03:
        $r74 = null;

     label04:
        r8 = $r74;

        $z2 = $r74 instanceof javax.xml.bind.JAXBElement;

        if $z2 == 0 goto label05;

        r75 = (javax.xml.bind.JAXBElement) $r74;

        r76 = virtualinvoke r75.<javax.xml.bind.JAXBElement: javax.xml.namespace.QName getName()>();

        r72 = virtualinvoke r75.<javax.xml.bind.JAXBElement: java.lang.Class getDeclaredType()>();

        goto label06;

     label05:
        r76 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.namespace.QName getCollectionWrapperQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)>($r4, r0, $r74, 1);

     label06:
        if r76 != null goto label07;

        $r62 = new org.apache.cxf.common.i18n.Message;

        $r64 = <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.ResourceBundle BUNDLE>;

        $r63 = newarray (java.lang.Object)[0];

        specialinvoke $r62.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_COLLECTION_ROOT", $r64, $r63);

        $r65 = virtualinvoke $r62.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r66 = new javax.ws.rs.WebApplicationException;

        $r67 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder serverError()>();

        $r68 = virtualinvoke $r67.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r65);

        $r69 = virtualinvoke $r68.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        specialinvoke $r66.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response)>($r69);

        throw $r66;

     label07:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\"1.0\" encoding=\"");

        if r12 != null goto label08;

        $r77 = "UTF-8";

        goto label09;

     label08:
        $r77 = r12;

     label09:
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"?>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r16.<java.io.OutputStream: void write(byte[])>($r18);

        $r19 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r19.<java.lang.String: int length()>();

        if $i0 <= 0 goto label11;

        $r40 = r2.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map nsPrefixes>;

        $r41 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r42 = interfaceinvoke $r40.<java.util.Map: java.lang.Object get(java.lang.Object)>($r41);

        r78 = (java.lang.String) $r42;

        if r78 != null goto label10;

        r78 = "ns1";

     label10:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r47 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" xmlns:");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r52 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        r79 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r59 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r80 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r22 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r79 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r27 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r80 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r30 = virtualinvoke r79.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r16.<java.io.OutputStream: void write(byte[])>($r30);

        if r8 == null goto label14;

        $r32 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXBUtils: javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter getAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])>($r32, r3);

        $r34 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXBUtils: java.lang.Object useAdapter(java.lang.Object,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,boolean)>(r8, $r33, 1);

        $r36 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r2.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)>($r34, r72, r0, r12, r16, r35, $r36);

     label13:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r37 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r38 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXBUtils: java.lang.Object useAdapter(java.lang.Object,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,boolean)>($r37, $r33, 1);

        $r39 = virtualinvoke r76.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r2.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)>($r38, r72, r0, r12, r16, r35, $r39);

        goto label13;

     label14:
        $r31 = virtualinvoke r80.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r16.<java.io.OutputStream: void write(byte[])>($r31);

        return;
    }

    protected void marshalCollectionMember(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.io.OutputStream, javax.ws.rs.core.MediaType, java.lang.String) throws java.lang.Exception
    {
        javax.xml.bind.Marshaller $r13;
        java.util.HashMap $r6;
        javax.ws.rs.core.MediaType r5;
        java.util.Map $r7, $r8;
        int $i0;
        java.lang.Boolean $r14;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String r2, r3;
        boolean $z0, $z1, $z2;
        java.io.OutputStream r4;
        javax.xml.bind.JAXBElement $r9;
        java.lang.reflect.Type r1;
        java.lang.Object r10, r12;
        java.lang.Class r11;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r10 := @parameter0: java.lang.Object;

        r11 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.reflect.Type;

        r2 := @parameter3: java.lang.String;

        r4 := @parameter4: java.io.OutputStream;

        r5 := @parameter5: javax.ws.rs.core.MediaType;

        r3 := @parameter6: java.lang.String;

        $z0 = r10 instanceof javax.xml.bind.JAXBElement;

        if $z0 == 0 goto label1;

        $r9 = (javax.xml.bind.JAXBElement) r10;

        r12 = virtualinvoke $r9.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

        goto label2;

     label1:
        r12 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)>(r10, r11, r1);

     label2:
        $z1 = r12 instanceof javax.xml.bind.JAXBElement;

        if $z1 == 0 goto label3;

        if r11 == class "Ljavax/xml/bind/JAXBElement;" goto label3;

        r11 = class "Ljavax/xml/bind/JAXBElement;";

     label3:
        $r13 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String)>(r12, r11, r1, r2);

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r13.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.fragment", $r14);

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r7 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map nsPrefixes>;

        $z2 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z2 != 0 goto label4;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "ns1");

     label4:
        $r8 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map nsPrefixes>;

        interfaceinvoke $r6.<java.util.Map: void putAll(java.util.Map)>($r8);

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void setNamespaceMapper(javax.xml.bind.Marshaller,java.util.Map)>($r13, $r6);

     label5:
        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)>(r12, r11, r1, r2, r4, r5, $r13);

        return;
    }

    protected void marshal(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.io.OutputStream, javax.ws.rs.core.MediaType) throws java.lang.Exception
    {
        java.io.OutputStream r5;
        java.lang.'annotation'.Annotation[] $r7;
        javax.ws.rs.core.MediaType r6;
        java.lang.reflect.Type r3;
        java.lang.Object r1;
        java.lang.Class r2;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.io.OutputStream;

        r6 := @parameter5: javax.ws.rs.core.MediaType;

        $r7 = newarray (java.lang.'annotation'.Annotation)[0];

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])>(r1, r2, r3, r4, r5, r6, $r7);

        return;
    }

    protected void marshal(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.io.OutputStream, javax.ws.rs.core.MediaType, java.lang.'annotation'.Annotation[]) throws java.lang.Exception
    {
        java.io.OutputStream r5;
        javax.xml.bind.Marshaller $r10;
        java.lang.'annotation'.Annotation[] r4;
        javax.ws.rs.core.MediaType r6;
        java.lang.reflect.Type r1;
        java.util.Map $r7, $r11;
        java.lang.Object $r2, r8;
        java.lang.Class r9;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r8 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.reflect.Type;

        r3 := @parameter3: java.lang.String;

        r5 := @parameter4: java.io.OutputStream;

        r6 := @parameter5: javax.ws.rs.core.MediaType;

        r4 := @parameter6: java.lang.'annotation'.Annotation[];

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)>(r8, r9, r1);

        $z0 = $r2 instanceof javax.xml.bind.JAXBElement;

        if $z0 == 0 goto label1;

        if r9 == class "Ljavax/xml/bind/JAXBElement;" goto label1;

        r9 = class "Ljavax/xml/bind/JAXBElement;";

     label1:
        $r10 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String)>($r2, r9, r1, r3);

        $r11 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map nsPrefixes>;

        $z1 = interfaceinvoke $r11.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r7 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map nsPrefixes>;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void setNamespaceMapper(javax.xml.bind.Marshaller,java.util.Map)>($r10, $r7);

     label2:
        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void addAttachmentMarshaller(javax.xml.bind.Marshaller)>($r10);

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void addProcessingInstructions(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])>($r10, r4);

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void addSchemaLocation(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])>($r10, r4);

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)>($r2, r9, r1, r3, r5, r6, $r10);

        return;
    }

    private void addProcessingInstructions(javax.xml.bind.Marshaller, java.lang.'annotation'.Annotation[]) throws java.lang.Exception
    {
        javax.xml.bind.Marshaller r5;
        java.lang.'annotation'.Annotation[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r3, $r6, $r7, $r8, $r9, $r11, r15, r16;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r4;
        boolean $z0;
        org.apache.cxf.jaxrs.ext.xml.XMLInstruction r2;
        java.lang.Object $r1;
        java.lang.StringBuilder $r10, $r12, $r13, $r14;

        r4 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r5 := @parameter0: javax.xml.bind.Marshaller;

        r0 := @parameter1: java.lang.'annotation'.Annotation[];

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Lorg/apache/cxf/jaxrs/ext/xml/XMLInstruction;");

        r2 = (org.apache.cxf.jaxrs.ext.xml.XMLInstruction) $r1;

        if r2 == null goto label3;

        $r3 = interfaceinvoke r2.<org.apache.cxf.jaxrs.ext.xml.XMLInstruction: java.lang.String value()>();

        r15 = $r3;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("href=\'");

        if $i0 <= 0 goto label2;

        $i1 = $i0 + 6;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i3 = $i2 - 3;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        r16 = $r8;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label1;

        $i5 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        r16 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label1:
        $r9 = virtualinvoke r4.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String resolveXMLResourceURI(java.lang.String)>(r16);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i4 = $i0 + 6;

        $r11 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'?>");

        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        virtualinvoke r4.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void setXmlPiProperty(javax.xml.bind.Marshaller,java.lang.String)>(r5, r15);

     label3:
        return;
    }

    private void addSchemaLocation(javax.xml.bind.Marshaller, java.lang.'annotation'.Annotation[]) throws java.lang.Exception
    {
        javax.xml.bind.Marshaller r4;
        java.lang.'annotation'.Annotation[] r0;
        org.apache.cxf.jaxrs.ext.xml.XSISchemaLocation r2;
        java.lang.Object $r1;
        java.lang.String r3, $r6, $r7, $r8;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r5;
        boolean $z0, $z1;

        r5 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r4 := @parameter0: javax.xml.bind.Marshaller;

        r0 := @parameter1: java.lang.'annotation'.Annotation[];

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Lorg/apache/cxf/jaxrs/ext/xml/XSISchemaLocation;");

        r2 = (org.apache.cxf.jaxrs.ext.xml.XSISchemaLocation) $r1;

        if r2 == null goto label5;

        $z0 = interfaceinvoke r2.<org.apache.cxf.jaxrs.ext.xml.XSISchemaLocation: boolean resolve()>();

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r2.<org.apache.cxf.jaxrs.ext.xml.XSISchemaLocation: java.lang.String value()>();

        $r7 = virtualinvoke r5.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String resolveXMLResourceURI(java.lang.String)>($r6);

        goto label2;

     label1:
        $r7 = interfaceinvoke r2.<org.apache.cxf.jaxrs.ext.xml.XSISchemaLocation: java.lang.String value()>();

     label2:
        r3 = $r7;

        $z1 = interfaceinvoke r2.<org.apache.cxf.jaxrs.ext.xml.XSISchemaLocation: boolean noNamespace()>();

        if $z1 != 0 goto label3;

        $r8 = "jaxb.schemaLocation";

        goto label4;

     label3:
        $r8 = "jaxb.noNamespaceSchemaLocation";

     label4:
        interfaceinvoke r4.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>($r8, r3);

     label5:
        return;
    }

    protected java.lang.String resolveXMLResourceURI(java.lang.String)
    {
        java.lang.Object[] $r9;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        java.lang.Object $r3;
        javax.ws.rs.core.UriBuilder $r6, $r8, r12;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String r2, r4, $r7, $r11;
        javax.ws.rs.core.UriInfo $r5;
        java.net.URI $r10;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r1 == null goto label3;

        $r3 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>("http.base.path");

        r4 = (java.lang.String) $r3;

        if r4 == null goto label1;

        r12 = staticinvoke <javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder fromPath(java.lang.String)>(r4);

        goto label2;

     label1:
        $r5 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.core.UriInfo getUriInfo()>();

        r12 = interfaceinvoke $r5.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.UriBuilder getBaseUriBuilder()>();

     label2:
        $r6 = virtualinvoke r12.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>(r2);

        $r7 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String xmlResourceOffset>;

        $r8 = virtualinvoke $r6.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r7);

        $r9 = newarray (java.lang.Object)[0];

        $r10 = virtualinvoke $r8.<javax.ws.rs.core.UriBuilder: java.net.URI build(java.lang.Object[])>($r9);

        $r11 = virtualinvoke $r10.<java.net.URI: java.lang.String toString()>();

        return $r11;

     label3:
        return r2;
    }

    protected void addAttachmentMarshaller(javax.xml.bind.Marshaller)
    {
        java.util.Collection $r1;
        javax.xml.bind.Marshaller r5;
        java.lang.Integer $r4, $r8;
        org.apache.cxf.jaxrs.ext.MessageContext $r2;
        org.apache.cxf.jaxrs.provider.JAXBAttachmentMarshaller $r6;
        int $i0;
        java.lang.Object $r3;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String $r7;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r5 := @parameter0: javax.xml.bind.Marshaller;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Collection getAttachments(boolean)>(1);

        if $r1 == null goto label3;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContextualProperty(java.lang.Object)>("mtom-threshold");

        if $r3 == null goto label1;

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r7);

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = new org.apache.cxf.jaxrs.provider.JAXBAttachmentMarshaller;

        specialinvoke $r6.<org.apache.cxf.jaxrs.provider.JAXBAttachmentMarshaller: void <init>(java.util.Collection,java.lang.Integer)>($r1, $r4);

        interfaceinvoke r5.<javax.xml.bind.Marshaller: void setAttachmentMarshaller(javax.xml.bind.attachment.AttachmentMarshaller)>($r6);

     label3:
        return;
    }

    protected void addAttachmentUnmarshaller(javax.xml.bind.Unmarshaller)
    {
        javax.xml.bind.Unmarshaller r2;
        org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller $r3;
        java.util.Collection $r1;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r2 := @parameter0: javax.xml.bind.Unmarshaller;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Collection getAttachments(boolean)>(0);

        if $r1 == null goto label1;

        $r3 = new org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller;

        specialinvoke $r3.<org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller: void <init>(java.util.Collection)>($r1);

        interfaceinvoke r2.<javax.xml.bind.Unmarshaller: void setAttachmentUnmarshaller(javax.xml.bind.attachment.AttachmentUnmarshaller)>($r3);

     label1:
        return;
    }

    private java.util.Collection getAttachments(boolean)
    {
        java.util.Collection $r3, $r4;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r6, $r8;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String $r7, $r9;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r1 == null goto label3;

        if z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WRITE-");

        $r7 = <org.apache.cxf.message.Message: java.lang.String ATTACHMENTS>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r9 = <org.apache.cxf.message.Message: java.lang.String ATTACHMENTS>;

     label2:
        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>($r9);

        $r3 = (java.util.Collection) $r2;

        $r4 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Collection cast(java.util.Collection)>($r3);

        return $r4;

     label3:
        return null;
    }

    protected void marshal(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.io.OutputStream, javax.ws.rs.core.MediaType, javax.xml.bind.Marshaller) throws java.lang.Exception
    {
        javax.xml.bind.Marshaller r9;
        javax.ws.rs.core.MediaType r7;
        org.apache.cxf.jaxrs.ext.MessageContext $r4;
        java.util.Map $r1;
        java.lang.Boolean $r13, $r14;
        javax.xml.stream.XMLStreamWriter $r8;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String $r12, r18, $r22, r26;
        boolean $z0, $z1;
        java.io.OutputStream r6;
        java.util.Map$Entry r27;
        java.util.Iterator $r3, $r16;
        java.util.Set $r2;
        java.util.List $r15;
        java.lang.reflect.Type r25;
        java.lang.Object r5, $r10, $r17, $r19, $r20, $r21, $r23;
        java.lang.Class $r11, r24;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r5 := @parameter0: java.lang.Object;

        r24 := @parameter1: java.lang.Class;

        r25 := @parameter2: java.lang.reflect.Type;

        r26 := @parameter3: java.lang.String;

        r6 := @parameter4: java.io.OutputStream;

        r7 := @parameter5: javax.ws.rs.core.MediaType;

        r9 := @parameter6: javax.xml.bind.Marshaller;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.Map mProperties>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r20 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.util.Map$Entry) $r20;

        $r21 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.String) $r21;

        $r23 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r9.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>($r22, $r23);

        goto label01;

     label02:
        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r4 == null goto label05;

        $r15 = <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.List MARSHALLER_PROPERTIES>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r17;

        $r19 = interfaceinvoke $r4.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>(r18);

        if $r19 == null goto label04;

        interfaceinvoke r9.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>(r18, $r19);

     label04:
        goto label03;

     label05:
        $r8 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)>(r5, r6, r7);

        if $r8 == null goto label09;

        if r6 != null goto label06;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r9.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.fragment", $r14);

        goto label08;

     label06:
        if $r4 == null goto label08;

        $r10 = interfaceinvoke $r4.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        if $r10 == null goto label07;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r9.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.fragment", $r13);

     label07:
        $r11 = class "Ljavax/xml/stream/XMLStreamWriter;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r4.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>($r12, $r8);

     label08:
        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)>(r9, r5, $r8, r7);

        if $r4 == null goto label10;

        interfaceinvoke $r8.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        goto label10;

     label09:
        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)>(r9, r5, r6, r7);

     label10:
        return;
    }

    protected javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object, java.io.OutputStream, javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r13;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        javax.xml.stream.XMLStreamException $r9;
        javax.xml.stream.XMLStreamWriter r14, $r15;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String $r6;
        boolean $z0;
        java.io.OutputStream r2;
        javax.ws.rs.InternalServerErrorException $r10;
        java.lang.RuntimeException $r11;
        javax.xml.stream.XMLOutputFactory r8;
        java.lang.Object $r3, $r4, $r7, r12;
        java.lang.Class $r5;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r12 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.io.OutputStream;

        r13 := @parameter2: javax.ws.rs.core.MediaType;

        r14 = null;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r1 == null goto label5;

        $r4 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r14 = (javax.xml.stream.XMLStreamWriter) $r4;

        if r14 != null goto label4;

        $r5 = class "Ljavax/xml/stream/XMLOutputFactory;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (javax.xml.stream.XMLOutputFactory) $r7;

        if r8 == null goto label4;

     label1:
        r14 = virtualinvoke r8.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>(r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.ws.rs.InternalServerErrorException;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cant\' create XMLStreamWriter", $r9);

        specialinvoke $r10.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r11);

        throw $r10;

     label4:
        if r14 != null goto label5;

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: boolean getEnableStreaming()>();

        if $z0 == 0 goto label5;

        r14 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>(r2);

     label5:
        if r14 != null goto label6;

        if r2 != null goto label6;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object getStreamHandlerFromCurrentMessage(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r14 = (javax.xml.stream.XMLStreamWriter) $r3;

     label6:
        $r15 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,boolean)>(r14, r2, 1);

        return $r15;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    protected void marshalToOutputStream(javax.xml.bind.Marshaller, java.lang.Object, java.io.OutputStream, javax.ws.rs.core.MediaType) throws java.lang.Exception
    {
        java.io.OutputStream r0;
        javax.xml.bind.Marshaller r1;
        javax.ws.rs.InternalServerErrorException $r7;
        java.util.logging.Logger $r6;
        javax.ws.rs.core.MediaType r8;
        java.io.Writer r5;
        java.lang.Object r2, $r4;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r3;

        r3 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: javax.xml.bind.Marshaller;

        r2 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.io.OutputStream;

        r8 := @parameter3: javax.ws.rs.core.MediaType;

        if r0 != null goto label2;

        $r4 = virtualinvoke r3.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object getStreamHandlerFromCurrentMessage(java.lang.Class)>(class "Ljava/io/Writer;");

        r5 = (java.io.Writer) $r4;

        if r5 != null goto label1;

        $r6 = <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r6.<java.util.logging.Logger: void severe(java.lang.String)>("No OutputStream, Writer, or XMStreamWriter is available");

        $r7 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r7.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r7;

     label1:
        interfaceinvoke r1.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,java.io.Writer)>(r2, r5);

        virtualinvoke r5.<java.io.Writer: void flush()>();

        goto label3;

     label2:
        interfaceinvoke r1.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,java.io.OutputStream)>(r2, r0);

     label3:
        return;
    }

    protected void marshalToWriter(javax.xml.bind.Marshaller, java.lang.Object, javax.xml.stream.XMLStreamWriter, javax.ws.rs.core.MediaType) throws java.lang.Exception
    {
        javax.ws.rs.core.MediaType r4;
        javax.xml.bind.Marshaller r0;
        java.lang.Object r1;
        javax.xml.stream.XMLStreamWriter r2;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r3;

        r3 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r0 := @parameter0: javax.xml.bind.Marshaller;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: javax.xml.stream.XMLStreamWriter;

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        interfaceinvoke r0.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,javax.xml.stream.XMLStreamWriter)>(r1, r2);

        return;
    }

    public void setXmlPiPropertyName(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.JAXBElementProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String xmlPiPropertyName> = r1;

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.List $r1;

        <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String XML_PI_PROPERTY_RI_INT> = "com.sun.xml.internal.bind.xmlHeaders";

        <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String XML_PI_PROPERTY_RI> = "com.sun.xml.bind.xmlHeaders";

        <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.String XML_PI_START> = "<?xml version=\"1.0\" encoding=\"";

        $r0 = newarray (java.lang.String)[9];

        $r0[0] = "jaxb.encoding";

        $r0[1] = "jaxb.formatted.output";

        $r0[2] = "jaxb.fragment";

        $r0[3] = "jaxb.noNamespaceSchemaLocation";

        $r0[4] = "jaxb.schemaLocation";

        $r0[5] = "com.sun.xml.bind.namespacePrefixMapper";

        $r0[6] = "com.sun.xml.internal.bind.namespacePrefixMapper";

        $r0[7] = "com.sun.xml.bind.xmlHeaders";

        $r0[8] = "com.sun.xml.internal.bind.xmlHeaders";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.util.List MARSHALLER_PROPERTIES> = $r1;

        return;
    }
}
