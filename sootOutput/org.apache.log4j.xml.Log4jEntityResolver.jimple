public class org.apache.log4j.xml.Log4jEntityResolver extends java.lang.Object implements org.xml.sax.EntityResolver
{
    private static final java.lang.String PUBLIC_ID;

    public void <init>()
    {
        org.apache.log4j.xml.Log4jEntityResolver r0;

        r0 := @this: org.apache.log4j.xml.Log4jEntityResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String)
    {
        byte[] $r12;
        java.io.ByteArrayInputStream $r11;
        java.lang.StringBuffer $r5, $r6, $r8, $r9;
        java.lang.String r0, $r10, r13, $r14;
        boolean $z0, $z1;
        org.xml.sax.InputSource $r4;
        java.lang.Class $r2;
        java.lang.ClassLoader $r7;
        org.apache.log4j.xml.Log4jEntityResolver r1;
        java.io.InputStream $r3, r15;

        r1 := @this: org.apache.log4j.xml.Log4jEntityResolver;

        r13 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("log4j.dtd");

        if $z0 != 0 goto label1;

        $r14 = "-//APACHE//DTD LOG4J 1.2//EN";

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z1 == 0 goto label3;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/apache/log4j/xml/log4j.dtd");

        r15 = $r3;

        if $r3 != null goto label2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find [log4j.dtd] using [");

        $r7 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] class loader, parsed without DTD.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r10);

        $r11 = new java.io.ByteArrayInputStream;

        $r12 = newarray (byte)[0];

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r12);

        r15 = $r11;

     label2:
        $r4 = new org.xml.sax.InputSource;

        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r15);

        return $r4;

     label3:
        return null;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.xml.Log4jEntityResolver: java.lang.String PUBLIC_ID> = "-//APACHE//DTD LOG4J 1.2//EN";

        return;
    }
}
