public class org.apache.batik.util.gui.MemoryMonitor extends javax.swing.JFrame implements org.apache.batik.util.gui.resource.ActionMap
{
    protected static final java.lang.String RESOURCE;
    protected static java.util.ResourceBundle bundle;
    protected static org.apache.batik.util.resources.ResourceManager resources;
    protected java.util.Map listeners;
    protected org.apache.batik.util.gui.MemoryMonitor$Panel panel;

    public void <init>()
    {
        org.apache.batik.util.gui.MemoryMonitor r0;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor;

        specialinvoke r0.<org.apache.batik.util.gui.MemoryMonitor: void <init>(long)>(1000L);

        return;
    }

    public void <init>(long)
    {
        org.apache.batik.util.gui.MemoryMonitor$1 $r23;
        org.apache.batik.util.gui.resource.ButtonFactory $r18;
        org.apache.batik.util.gui.MemoryMonitor$Panel $r8, $r10, $r11;
        java.util.HashMap $r3;
        long l0;
        org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction $r6;
        javax.swing.border.Border $r12;
        java.util.ResourceBundle $r19;
        java.util.Map $r5, $r7;
        javax.swing.border.TitledBorder $r15;
        java.lang.String $r2, $r14;
        java.awt.Container $r9, $r22;
        java.awt.FlowLayout $r17;
        javax.swing.JButton $r20, $r21;
        org.apache.batik.util.gui.MemoryMonitor r0;
        org.apache.batik.util.resources.ResourceManager $r1, $r13;
        org.apache.batik.util.gui.MemoryMonitor$CollectButtonAction $r4;
        javax.swing.JPanel $r16;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor;

        l0 := @parameter0: long;

        $r1 = <org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.resources.ResourceManager resources>;

        $r2 = virtualinvoke $r1.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Frame.title");

        specialinvoke r0.<javax.swing.JFrame: void <init>(java.lang.String)>($r2);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor: java.util.Map listeners> = $r3;

        $r5 = r0.<org.apache.batik.util.gui.MemoryMonitor: java.util.Map listeners>;

        $r4 = new org.apache.batik.util.gui.MemoryMonitor$CollectButtonAction;

        specialinvoke $r4.<org.apache.batik.util.gui.MemoryMonitor$CollectButtonAction: void <init>(org.apache.batik.util.gui.MemoryMonitor)>(r0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CollectButtonAction", $r4);

        $r7 = r0.<org.apache.batik.util.gui.MemoryMonitor: java.util.Map listeners>;

        $r6 = new org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction;

        specialinvoke $r6.<org.apache.batik.util.gui.MemoryMonitor$CloseButtonAction: void <init>(org.apache.batik.util.gui.MemoryMonitor)>(r0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CloseButtonAction", $r6);

        $r8 = new org.apache.batik.util.gui.MemoryMonitor$Panel;

        specialinvoke $r8.<org.apache.batik.util.gui.MemoryMonitor$Panel: void <init>(long)>(l0);

        r0.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel> = $r8;

        $r9 = virtualinvoke r0.<javax.swing.JFrame: java.awt.Container getContentPane()>();

        $r10 = r0.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel>;

        virtualinvoke $r9.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r10);

        $r11 = r0.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel>;

        $r12 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $r13 = <org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.resources.ResourceManager resources>;

        $r14 = virtualinvoke $r13.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Frame.border_title");

        $r15 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($r12, $r14);

        virtualinvoke $r11.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r15);

        $r16 = new javax.swing.JPanel;

        $r17 = new java.awt.FlowLayout;

        specialinvoke $r17.<java.awt.FlowLayout: void <init>(int)>(2);

        specialinvoke $r16.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r17);

        $r18 = new org.apache.batik.util.gui.resource.ButtonFactory;

        $r19 = <org.apache.batik.util.gui.MemoryMonitor: java.util.ResourceBundle bundle>;

        specialinvoke $r18.<org.apache.batik.util.gui.resource.ButtonFactory: void <init>(java.util.ResourceBundle,org.apache.batik.util.gui.resource.ActionMap)>($r19, r0);

        $r20 = virtualinvoke $r18.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("CollectButton");

        virtualinvoke $r16.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r20);

        $r21 = virtualinvoke $r18.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("CloseButton");

        virtualinvoke $r16.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r21);

        $r22 = virtualinvoke r0.<javax.swing.JFrame: java.awt.Container getContentPane()>();

        virtualinvoke $r22.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r16, "South");

        virtualinvoke r0.<java.awt.Window: void pack()>();

        $r23 = new org.apache.batik.util.gui.MemoryMonitor$1;

        specialinvoke $r23.<org.apache.batik.util.gui.MemoryMonitor$1: void <init>(org.apache.batik.util.gui.MemoryMonitor)>(r0);

        virtualinvoke r0.<java.awt.Window: void addWindowListener(java.awt.event.WindowListener)>($r23);

        return;
    }

    public javax.swing.Action getAction(java.lang.String) throws org.apache.batik.util.gui.resource.MissingListenerException
    {
        org.apache.batik.util.gui.MemoryMonitor r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.swing.Action $r4;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor: java.util.Map listeners>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (javax.swing.Action) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r1, $r3;
        java.util.Locale $r0;
        org.apache.batik.util.resources.ResourceManager $r2;

        <org.apache.batik.util.gui.MemoryMonitor: java.lang.String RESOURCE> = "org.apache.batik.util.gui.resources.MemoryMonitorMessages";

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.apache.batik.util.gui.resources.MemoryMonitorMessages", $r0);

        <org.apache.batik.util.gui.MemoryMonitor: java.util.ResourceBundle bundle> = $r1;

        $r2 = new org.apache.batik.util.resources.ResourceManager;

        $r3 = <org.apache.batik.util.gui.MemoryMonitor: java.util.ResourceBundle bundle>;

        specialinvoke $r2.<org.apache.batik.util.resources.ResourceManager: void <init>(java.util.ResourceBundle)>($r3);

        <org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.resources.ResourceManager resources> = $r2;

        return;
    }
}
