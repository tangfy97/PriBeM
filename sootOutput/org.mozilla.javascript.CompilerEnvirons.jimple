public class org.mozilla.javascript.CompilerEnvirons extends java.lang.Object
{
    private org.mozilla.javascript.ErrorReporter errorReporter;
    private int languageVersion;
    private boolean generateDebugInfo;
    private boolean useDynamicScope;
    private boolean reservedKeywordAsIdentifier;
    private boolean allowMemberExprAsFunctionName;
    private boolean xmlAvailable;
    private int optimizationLevel;
    private boolean generatingSource;
    java.util.Hashtable activationNames;

    public void <init>()
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        org.mozilla.javascript.DefaultErrorReporter $r1;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.DefaultErrorReporter instance>;

        r0.<org.mozilla.javascript.CompilerEnvirons: org.mozilla.javascript.ErrorReporter errorReporter> = $r1;

        r0.<org.mozilla.javascript.CompilerEnvirons: int languageVersion> = 0;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean generateDebugInfo> = 1;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean useDynamicScope> = 0;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean reservedKeywordAsIdentifier> = 0;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean allowMemberExprAsFunctionName> = 0;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean xmlAvailable> = 1;

        r0.<org.mozilla.javascript.CompilerEnvirons: int optimizationLevel> = 0;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean generatingSource> = 1;

        return;
    }

    public void initFromContext(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.ErrorReporter $r2;
        org.mozilla.javascript.CompilerEnvirons r0;
        int $i0, $i1;
        java.util.Hashtable $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        r1 := @parameter0: org.mozilla.javascript.Context;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.Context: org.mozilla.javascript.ErrorReporter getErrorReporter()>();

        virtualinvoke r0.<org.mozilla.javascript.CompilerEnvirons: void setErrorReporter(org.mozilla.javascript.ErrorReporter)>($r2);

        $i0 = virtualinvoke r1.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        r0.<org.mozilla.javascript.CompilerEnvirons: int languageVersion> = $i0;

        $z0 = r1.<org.mozilla.javascript.Context: boolean compileFunctionsWithDynamicScopeFlag>;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean useDynamicScope> = $z0;

        $z1 = virtualinvoke r1.<org.mozilla.javascript.Context: boolean isGeneratingDebugChanged()>();

        if $z1 == 0 goto label1;

        $z6 = virtualinvoke r1.<org.mozilla.javascript.Context: boolean isGeneratingDebug()>();

        if $z6 == 0 goto label2;

     label1:
        $z7 = 1;

        goto label3;

     label2:
        $z7 = 0;

     label3:
        r0.<org.mozilla.javascript.CompilerEnvirons: boolean generateDebugInfo> = $z7;

        $z2 = virtualinvoke r1.<org.mozilla.javascript.Context: boolean hasFeature(int)>(3);

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean reservedKeywordAsIdentifier> = $z2;

        $z3 = virtualinvoke r1.<org.mozilla.javascript.Context: boolean hasFeature(int)>(2);

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean allowMemberExprAsFunctionName> = $z3;

        $z4 = virtualinvoke r1.<org.mozilla.javascript.Context: boolean hasFeature(int)>(6);

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean xmlAvailable> = $z4;

        $i1 = virtualinvoke r1.<org.mozilla.javascript.Context: int getOptimizationLevel()>();

        r0.<org.mozilla.javascript.CompilerEnvirons: int optimizationLevel> = $i1;

        $z5 = virtualinvoke r1.<org.mozilla.javascript.Context: boolean isGeneratingSource()>();

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean generatingSource> = $z5;

        $r3 = r1.<org.mozilla.javascript.Context: java.util.Hashtable activationNames>;

        r0.<org.mozilla.javascript.CompilerEnvirons: java.util.Hashtable activationNames> = $r3;

        return;
    }

    public final org.mozilla.javascript.ErrorReporter getErrorReporter()
    {
        org.mozilla.javascript.ErrorReporter $r1;
        org.mozilla.javascript.CompilerEnvirons r0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $r1 = r0.<org.mozilla.javascript.CompilerEnvirons: org.mozilla.javascript.ErrorReporter errorReporter>;

        return $r1;
    }

    public void setErrorReporter(org.mozilla.javascript.ErrorReporter)
    {
        org.mozilla.javascript.ErrorReporter r0;
        java.lang.IllegalArgumentException $r2;
        org.mozilla.javascript.CompilerEnvirons r1;

        r1 := @this: org.mozilla.javascript.CompilerEnvirons;

        r0 := @parameter0: org.mozilla.javascript.ErrorReporter;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<org.mozilla.javascript.CompilerEnvirons: org.mozilla.javascript.ErrorReporter errorReporter> = r0;

        return;
    }

    public final int getLanguageVersion()
    {
        int $i0;
        org.mozilla.javascript.CompilerEnvirons r0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $i0 = r0.<org.mozilla.javascript.CompilerEnvirons: int languageVersion>;

        return $i0;
    }

    public void setLanguageVersion(int)
    {
        int i0;
        org.mozilla.javascript.CompilerEnvirons r0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        i0 := @parameter0: int;

        staticinvoke <org.mozilla.javascript.Context: void checkLanguageVersion(int)>(i0);

        r0.<org.mozilla.javascript.CompilerEnvirons: int languageVersion> = i0;

        return;
    }

    public final boolean isGenerateDebugInfo()
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $z0 = r0.<org.mozilla.javascript.CompilerEnvirons: boolean generateDebugInfo>;

        return $z0;
    }

    public void setGenerateDebugInfo(boolean)
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        z0 := @parameter0: boolean;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean generateDebugInfo> = z0;

        return;
    }

    public final boolean isUseDynamicScope()
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $z0 = r0.<org.mozilla.javascript.CompilerEnvirons: boolean useDynamicScope>;

        return $z0;
    }

    public final boolean isReservedKeywordAsIdentifier()
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $z0 = r0.<org.mozilla.javascript.CompilerEnvirons: boolean reservedKeywordAsIdentifier>;

        return $z0;
    }

    public void setReservedKeywordAsIdentifier(boolean)
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        z0 := @parameter0: boolean;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean reservedKeywordAsIdentifier> = z0;

        return;
    }

    public final boolean isAllowMemberExprAsFunctionName()
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $z0 = r0.<org.mozilla.javascript.CompilerEnvirons: boolean allowMemberExprAsFunctionName>;

        return $z0;
    }

    public void setAllowMemberExprAsFunctionName(boolean)
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        z0 := @parameter0: boolean;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean allowMemberExprAsFunctionName> = z0;

        return;
    }

    public final boolean isXmlAvailable()
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $z0 = r0.<org.mozilla.javascript.CompilerEnvirons: boolean xmlAvailable>;

        return $z0;
    }

    public void setXmlAvailable(boolean)
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        z0 := @parameter0: boolean;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean xmlAvailable> = z0;

        return;
    }

    public final int getOptimizationLevel()
    {
        int $i0;
        org.mozilla.javascript.CompilerEnvirons r0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $i0 = r0.<org.mozilla.javascript.CompilerEnvirons: int optimizationLevel>;

        return $i0;
    }

    public void setOptimizationLevel(int)
    {
        int i0;
        org.mozilla.javascript.CompilerEnvirons r0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        i0 := @parameter0: int;

        staticinvoke <org.mozilla.javascript.Context: void checkOptimizationLevel(int)>(i0);

        r0.<org.mozilla.javascript.CompilerEnvirons: int optimizationLevel> = i0;

        return;
    }

    public final boolean isGeneratingSource()
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        $z0 = r0.<org.mozilla.javascript.CompilerEnvirons: boolean generatingSource>;

        return $z0;
    }

    public void setGeneratingSource(boolean)
    {
        org.mozilla.javascript.CompilerEnvirons r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.CompilerEnvirons;

        z0 := @parameter0: boolean;

        r0.<org.mozilla.javascript.CompilerEnvirons: boolean generatingSource> = z0;

        return;
    }
}
