public class arq.cmdline.ModTime extends java.lang.Object implements arq.cmdline.ArgModuleGeneral
{
    protected final arq.cmdline.ArgDecl timeDecl;
    protected com.hp.hpl.jena.sparql.util.Timer timer;
    private boolean timing;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.util.Timer $r3;
        arq.cmdline.ModTime r0;
        arq.cmdline.ArgDecl $r1;
        java.lang.String[] $r2;

        r0 := @this: arq.cmdline.ModTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(0, "time", $r2);

        r0.<arq.cmdline.ModTime: arq.cmdline.ArgDecl timeDecl> = $r1;

        $r3 = new com.hp.hpl.jena.sparql.util.Timer;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.util.Timer: void <init>()>();

        r0.<arq.cmdline.ModTime: com.hp.hpl.jena.sparql.util.Timer timer> = $r3;

        r0.<arq.cmdline.ModTime: boolean timing> = 0;

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.Usage $r1;
        arq.cmdline.ModTime r2;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r3;

        r2 := @this: arq.cmdline.ModTime;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r1.<arq.cmdline.Usage: void startCategory(java.lang.String)>("Time");

        $r3 = r2.<arq.cmdline.ModTime: arq.cmdline.ArgDecl timeDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--time", "Time the operation");

        return;
    }

    public void checkCommandLine(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.CmdArgModule r1;
        arq.cmdline.ModTime r0;

        r0 := @this: arq.cmdline.ModTime;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.CmdArgModule r1;
        arq.cmdline.ModTime r0;
        arq.cmdline.ArgDecl $r2;
        boolean $z0;

        r0 := @this: arq.cmdline.ModTime;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r0.<arq.cmdline.ModTime: arq.cmdline.ArgDecl timeDecl>;

        $z0 = virtualinvoke r1.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r2);

        r0.<arq.cmdline.ModTime: boolean timing> = $z0;

        return;
    }

    public boolean timingEnabled()
    {
        arq.cmdline.ModTime r0;
        boolean $z0;

        r0 := @this: arq.cmdline.ModTime;

        $z0 = r0.<arq.cmdline.ModTime: boolean timing>;

        return $z0;
    }

    public void setTimingEnabled(boolean)
    {
        arq.cmdline.ModTime r0;
        boolean z0;

        r0 := @this: arq.cmdline.ModTime;

        z0 := @parameter0: boolean;

        r0.<arq.cmdline.ModTime: boolean timing> = z0;

        return;
    }

    public void startTimer()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1;
        arq.cmdline.ModTime r0;

        r0 := @this: arq.cmdline.ModTime;

        $r1 = r0.<arq.cmdline.ModTime: com.hp.hpl.jena.sparql.util.Timer timer>;

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Timer: void startTimer()>();

        return;
    }

    public long endTimer()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1;
        long $l0;
        arq.cmdline.ModTime r0;

        r0 := @this: arq.cmdline.ModTime;

        $r1 = r0.<arq.cmdline.ModTime: com.hp.hpl.jena.sparql.util.Timer timer>;

        $l0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Timer: long endTimer()>();

        return $l0;
    }

    public long readTimer()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1;
        long $l0;
        arq.cmdline.ModTime r0;

        r0 := @this: arq.cmdline.ModTime;

        $r1 = r0.<arq.cmdline.ModTime: com.hp.hpl.jena.sparql.util.Timer timer>;

        $l0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Timer: long readTimer()>();

        return $l0;
    }

    public long getTimeInterval()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1;
        long $l0;
        arq.cmdline.ModTime r0;

        r0 := @this: arq.cmdline.ModTime;

        $r1 = r0.<arq.cmdline.ModTime: com.hp.hpl.jena.sparql.util.Timer timer>;

        $l0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Timer: long getTimeInterval()>();

        return $l0;
    }

    public java.lang.String timeStr(long)
    {
        long l0;
        java.lang.String $r0;
        arq.cmdline.ModTime r1;

        r1 := @this: arq.cmdline.ModTime;

        l0 := @parameter0: long;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.util.Timer: java.lang.String timeStr(long)>(l0);

        return $r0;
    }
}
