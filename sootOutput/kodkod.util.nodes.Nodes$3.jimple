final class kodkod.util.nodes.Nodes$3 extends kodkod.ast.visitor.AbstractDetector
{
    private final java.util.Set val$desc;

    void <init>(java.util.Set, java.util.Set)
    {
        kodkod.util.nodes.Nodes$3 r0;
        java.util.Set r1, $r2;

        r0 := @this: kodkod.util.nodes.Nodes$3;

        $r2 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        r0.<kodkod.util.nodes.Nodes$3: java.util.Set val$desc> = r1;

        specialinvoke r0.<kodkod.ast.visitor.AbstractDetector: void <init>(java.util.Set)>($r2);

        return;
    }

    protected java.lang.Boolean lookup(kodkod.ast.Node)
    {
        kodkod.util.nodes.Nodes$3 r0;
        java.util.Map $r3;
        java.util.Set $r2;
        java.lang.Boolean $r5;
        java.lang.Object $r4;
        kodkod.ast.Node r1;
        boolean $z0;

        r0 := @this: kodkod.util.nodes.Nodes$3;

        r1 := @parameter0: kodkod.ast.Node;

        $r2 = r0.<kodkod.util.nodes.Nodes$3: java.util.Set val$desc>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r3 = r0.<kodkod.util.nodes.Nodes$3: java.util.Map cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.Boolean) $r4;

     label2:
        return $r5;
    }

    protected java.lang.Boolean cache(kodkod.ast.Node, boolean)
    {
        kodkod.util.nodes.Nodes$3 r1;
        java.util.Map $r3;
        java.lang.Boolean $r0;
        kodkod.ast.Node r2;
        boolean z0;

        r1 := @this: kodkod.util.nodes.Nodes$3;

        r2 := @parameter0: kodkod.ast.Node;

        z0 := @parameter1: boolean;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3 = r1.<kodkod.util.nodes.Nodes$3: java.util.Map cache>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r0);

        return $r0;
    }
}
