public class org.apache.pdfbox.io.ASCII85OutputStream extends java.io.FilterOutputStream
{
    private int lineBreak;
    private int count;
    private byte[] indata;
    private byte[] outdata;
    private int maxline;
    private boolean flushed;
    private char terminator;
    private static final char OFFSET;
    private static final char NEWLINE;
    private static final char Z;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        byte[] $r2, $r3;
        org.apache.pdfbox.io.ASCII85OutputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = 72;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int maxline> = 72;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count> = 0;

        $r2 = newarray (byte)[4];

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata> = $r2;

        $r3 = newarray (byte)[5];

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata> = $r3;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: boolean flushed> = 1;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: char terminator> = 126;

        return;
    }

    public void setTerminator(char)
    {
        int $i1, $i2, $i3;
        char c0;
        org.apache.pdfbox.io.ASCII85OutputStream r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 118 goto label1;

        $i2 = (int) c0;

        if $i2 > 126 goto label1;

        $i3 = (int) c0;

        if $i3 != 122 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Terminator must be 118-126 excluding z");

        throw $r2;

     label2:
        r0.<org.apache.pdfbox.io.ASCII85OutputStream: char terminator> = c0;

        return;
    }

    public char getTerminator()
    {
        char $c0;
        org.apache.pdfbox.io.ASCII85OutputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        $c0 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: char terminator>;

        return $c0;
    }

    public void setLineLength(int)
    {
        int i0, $i1;
        org.apache.pdfbox.io.ASCII85OutputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak>;

        if $i1 <= i0 goto label1;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = i0;

     label1:
        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int maxline> = i0;

        return;
    }

    public int getLineLength()
    {
        int $i0;
        org.apache.pdfbox.io.ASCII85OutputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        $i0 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int maxline>;

        return $i0;
    }

    private final void transformASCII85()
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.pdfbox.io.ASCII85OutputStream r0;
        byte $b0, $b1, $b5, $b9, $b14, $b17, $b24, $b30, $b35, $b39;
        long $l13, $l15, $l18, $l19, $l20, $l21, $l22, $l25, $l26, $l27, $l28, $l31, $l32, $l33, $l36, $l37, l40, l41, l42, l43, l44, l45, l46, l47;
        short $s2, $s6, $s10, $s49, $s51, $s53;
        int $i3, $i4, $i7, $i8, $i11, $i12, $i16, $i23, $i29, $i34, $i38, $i48, $i50, $i52, $i54;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        $r1 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata>;

        $b0 = $r1[0];

        $i48 = (int) $b0;

        $i3 = $i48 << 8;

        $r2 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata>;

        $b1 = $r2[1];

        $s49 = (short) $b1;

        $s2 = $s49 & 255;

        $i50 = (int) $s2;

        $i4 = $i3 | $i50;

        $i8 = $i4 << 16;

        $r3 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata>;

        $b5 = $r3[2];

        $s51 = (short) $b5;

        $s6 = $s51 & 255;

        $i52 = (int) $s6;

        $i7 = $i52 << 8;

        $i11 = $i8 | $i7;

        $r4 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata>;

        $b9 = $r4[3];

        $s53 = (short) $b9;

        $s10 = $s53 & 255;

        $i54 = (int) $s10;

        $i12 = $i11 | $i54;

        $l13 = (long) $i12;

        l40 = $l13 & 4294967295L;

        $b14 = l40 cmp 0L;

        if $b14 != 0 goto label1;

        $r10 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $r10[0] = 122;

        $r11 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $r11[1] = 0;

        return;

     label1:
        l41 = l40 / 52200625L;

        $r5 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $l15 = l41 + 33L;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        $r5[0] = $b17;

        $l18 = l41 * 85L;

        $l19 = $l18 * 85L;

        $l20 = $l19 * 85L;

        $l21 = $l20 * 85L;

        l42 = l40 - $l21;

        l43 = l42 / 614125L;

        $r6 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $l22 = l43 + 33L;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        $r6[1] = $b24;

        $l25 = l43 * 85L;

        $l26 = $l25 * 85L;

        $l27 = $l26 * 85L;

        l44 = l42 - $l27;

        l45 = l44 / 7225L;

        $r7 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $l28 = l45 + 33L;

        $i29 = (int) $l28;

        $b30 = (byte) $i29;

        $r7[2] = $b30;

        $l31 = l45 * 85L;

        $l32 = $l31 * 85L;

        l46 = l44 - $l32;

        l47 = l46 / 85L;

        $r8 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $l33 = l47 + 33L;

        $i34 = (int) $l33;

        $b35 = (byte) $i34;

        $r8[3] = $b35;

        $r9 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $l36 = l46 % 85L;

        $l37 = $l36 + 33L;

        $i38 = (int) $l37;

        $b39 = (byte) $i38;

        $r9[4] = $b39;

        return;
    }

    public final void write(int) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3;
        org.apache.pdfbox.io.ASCII85OutputStream r0;
        byte $b3, $b5, $b6;
        int $i0, $i1, i2, $i4, $i7, $i8, $i9, i10, $i11;
        java.io.OutputStream $r4, $r5;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        i2 := @parameter0: int;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: boolean flushed> = 0;

        $r1 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata>;

        $i0 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count>;

        $i1 = $i0 + 1;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count> = $i1;

        $b3 = (byte) i2;

        $r1[$i0] = $b3;

        $i4 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count>;

        if $i4 >= 4 goto label1;

        return;

     label1:
        specialinvoke r0.<org.apache.pdfbox.io.ASCII85OutputStream: void transformASCII85()>();

        i10 = 0;

     label2:
        if i10 >= 5 goto label5;

        $r2 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $b5 = $r2[i10];

        if $b5 != 0 goto label3;

        goto label5;

     label3:
        $r4 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: java.io.OutputStream out>;

        $r3 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $b6 = $r3[i10];

        $i11 = (int) $b6;

        virtualinvoke $r4.<java.io.OutputStream: void write(int)>($i11);

        $i7 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak>;

        $i8 = $i7 - 1;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = $i8;

        if $i8 != 0 goto label4;

        $r5 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: java.io.OutputStream out>;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>(10);

        $i9 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int maxline>;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = $i9;

     label4:
        i10 = i10 + 1;

        goto label2;

     label5:
        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count> = 0;

        return;
    }

    public final void flush() throws java.io.IOException
    {
        byte[] $r4, $r5, $r8, $r9;
        org.apache.pdfbox.io.ASCII85OutputStream r0;
        byte $b5, $b6;
        int $i0, $i1, $i2, $i4, $i7, $i8, $i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0;
        java.io.OutputStream $r1, $r2, $r3, $r6, $r7;
        char $c3;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

        $z0 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: boolean flushed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count>;

        if $i0 <= 0 goto label8;

        i10 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count>;

     label2:
        if i10 >= 4 goto label3;

        $r9 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata>;

        $r9[i10] = 0;

        i10 = i10 + 1;

        goto label2;

     label3:
        specialinvoke r0.<org.apache.pdfbox.io.ASCII85OutputStream: void transformASCII85()>();

        $r4 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $b5 = $r4[0];

        $i15 = (int) $b5;

        if $i15 != 122 goto label5;

        i11 = 0;

     label4:
        if i11 >= 5 goto label5;

        $r8 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $r8[i11] = 33;

        i11 = i11 + 1;

        goto label4;

     label5:
        i12 = 0;

     label6:
        $i13 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count>;

        $i14 = $i13 + 1;

        if i12 >= $i14 goto label8;

        $r6 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: java.io.OutputStream out>;

        $r5 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata>;

        $b6 = $r5[i12];

        $i16 = (int) $b6;

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($i16);

        $i7 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak>;

        $i8 = $i7 - 1;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = $i8;

        if $i8 != 0 goto label7;

        $r7 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(int)>(10);

        $i9 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int maxline>;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = $i9;

     label7:
        i12 = i12 + 1;

        goto label6;

     label8:
        $i1 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak>;

        $i2 = $i1 - 1;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = $i2;

        if $i2 != 0 goto label9;

        $r3 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(10);

     label9:
        $r1 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: java.io.OutputStream out>;

        $c3 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: char terminator>;

        $i17 = (int) $c3;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i17);

        $r2 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(10);

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int count> = 0;

        $i4 = r0.<org.apache.pdfbox.io.ASCII85OutputStream: int maxline>;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: int lineBreak> = $i4;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: boolean flushed> = 1;

        specialinvoke r0.<java.io.FilterOutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r1;
        org.apache.pdfbox.io.ASCII85OutputStream r0;

        r0 := @this: org.apache.pdfbox.io.ASCII85OutputStream;

     label1:
        virtualinvoke r0.<org.apache.pdfbox.io.ASCII85OutputStream: void flush()>();

        specialinvoke r0.<java.io.FilterOutputStream: void close()>();

        goto label6;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        goto label7;

     label4:
        throw $r1;

     label5:
        return;

     label6:
        r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata> = null;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata> = null;

        goto label2;

     label7:
        r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] outdata> = null;

        r0.<org.apache.pdfbox.io.ASCII85OutputStream: byte[] indata> = null;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.io.ASCII85OutputStream: char Z> = 122;

        <org.apache.pdfbox.io.ASCII85OutputStream: char NEWLINE> = 10;

        <org.apache.pdfbox.io.ASCII85OutputStream: char OFFSET> = 33;

        return;
    }
}
