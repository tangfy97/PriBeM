public class ucar.nc2.iosp.dorade.Doradeiosp extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    protected boolean readonly;
    private ucar.unidata.io.RandomAccessFile myRaf;
    protected ucar.nc2.iosp.dorade.Doradeheader headerParser;
    public ucar.atd.dorade.DoradeSweep mySweep;
    boolean littleEndian;
    protected boolean fill;
    protected java.util.HashMap dimHash;

    public void <init>()
    {
        java.util.HashMap $r1;
        ucar.nc2.iosp.dorade.Doradeiosp r0;

        r0 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep> = null;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(50);

        r0.<ucar.nc2.iosp.dorade.Doradeiosp: java.util.HashMap dimHash> = $r1;

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile)
    {
        ucar.unidata.io.RandomAccessFile r0;
        ucar.nc2.iosp.dorade.Doradeiosp r1;
        boolean $z0;

        r1 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $z0 = staticinvoke <ucar.nc2.iosp.dorade.Doradeheader: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>(r0);

        return $z0;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.dorade.Doradeiosp r0;

        r0 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        return "DORADE";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.dorade.Doradeiosp r0;

        r0 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        return "DOppler RAdar Data Exchange Format";
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.RandomAccessFile $r3;
        ucar.unidata.io.RandomAccessFile r1;
        ucar.atd.dorade.ScanMode $r13, $r14;
        ucar.atd.dorade.DoradeSweep $r2, $r6, $r12;
        java.io.IOException $r9;
        ucar.atd.dorade.DoradeSweep$DoradeSweepException $r8, $r10;
        ucar.nc2.iosp.dorade.Doradeiosp r0;
        ucar.nc2.util.CancelTask r11;
        ucar.nc2.NetcdfFile r5;
        ucar.nc2.iosp.dorade.Doradeheader $r4, $r7;

        r0 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r5 := @parameter1: ucar.nc2.NetcdfFile;

        r11 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.unidata.io.RandomAccessFile myRaf> = r1;

     label1:
        $r2 = new ucar.atd.dorade.DoradeSweep;

        $r3 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: java.io.RandomAccessFile getRandomAccessFile()>();

        specialinvoke $r2.<ucar.atd.dorade.DoradeSweep: void <init>(java.io.RandomAccessFile)>($r3);

        r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep> = $r2;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<ucar.atd.dorade.DoradeSweep$DoradeSweepException: void printStackTrace()>();

        goto label5;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label5:
        $r12 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r13 = virtualinvoke $r12.<ucar.atd.dorade.DoradeSweep: ucar.atd.dorade.ScanMode getScanMode(int)>(0);

        $r14 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_SUR>;

        if $r13 == $r14 goto label6;

     label6:
        $r4 = new ucar.nc2.iosp.dorade.Doradeheader;

        specialinvoke $r4.<ucar.nc2.iosp.dorade.Doradeheader: void <init>()>();

        r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.nc2.iosp.dorade.Doradeheader headerParser> = $r4;

        $r7 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.nc2.iosp.dorade.Doradeheader headerParser>;

        $r6 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        virtualinvoke $r7.<ucar.nc2.iosp.dorade.Doradeheader: void read(ucar.atd.dorade.DoradeSweep,ucar.nc2.NetcdfFile,java.io.PrintStream)>($r6, r5, null);

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

        virtualinvoke $r8.<ucar.atd.dorade.DoradeSweep$DoradeSweepException: void printStackTrace()>();

     label9:
        virtualinvoke r5.<ucar.nc2.NetcdfFile: void finish()>();

        return;

        catch ucar.atd.dorade.DoradeSweep$DoradeSweepException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch ucar.atd.dorade.DoradeSweep$DoradeSweepException from label6 to label7 with label8;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.lang.StringBuilder $r50, $r51, $r52;
        float[] $r49, $r55, $r57, $r59, $r61, $r63, $r68, r72, r73, r74, $r75, r79;
        long $l15;
        ucar.ma2.Array $r17, $r47, r70;
        java.util.Date $r66;
        int[] $r16, $r78;
        ucar.ma2.DataType $r14, $r45, $r76;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i16, i17, i18, i19, i20, i21, i22, i23, $i24;
        ucar.nc2.Variable r3;
        java.lang.Class $r15, $r77;
        java.lang.Object $r48;
        ucar.ma2.Section r11;
        double[] r71;
        ucar.atd.dorade.DoradePARM $r21;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r53, $r54;
        ucar.atd.dorade.DoradeSweep $r1, $r2, $r19, $r22, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r46, $r56, $r58, $r60, $r62, $r64, $r67;
        ucar.nc2.iosp.dorade.Doradeiosp r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        ucar.ma2.Range $r12, $r13;
        float $f0, $f1, $f2, f3;
        java.util.Date[] $r65;
        double $d0, $d1, $d2;
        ucar.ma2.IndexIterator $r18;
        ucar.atd.dorade.DoradeSweep$DoradeSweepException $r69;

        r0 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        r3 := @parameter0: ucar.nc2.Variable;

        r11 := @parameter1: ucar.ma2.Section;

        $r1 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $i0 = virtualinvoke $r1.<ucar.atd.dorade.DoradeSweep: int getNSensors()>();

        $r2 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $i1 = virtualinvoke $r2.<ucar.atd.dorade.DoradeSweep: int getNRays()>();

        $r4 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("elevation");

        if $z0 == 0 goto label01;

        $r67 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r68 = virtualinvoke $r67.<ucar.atd.dorade.DoradeSweep: float[] getElevations()>();

        r70 = virtualinvoke r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.ma2.Array readData1(ucar.nc2.Variable,ucar.ma2.Section,float[])>(r3, r11, $r68);

        goto label38;

     label01:
        $r5 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("rays_time");

        if $z1 == 0 goto label04;

        $r64 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r65 = virtualinvoke $r64.<ucar.atd.dorade.DoradeSweep: java.util.Date[] getTimes()>();

        $i13 = lengthof $r65;

        r71 = newarray (double)[$i13];

        i16 = 0;

     label02:
        $i14 = lengthof $r65;

        if i16 >= $i14 goto label03;

        $r66 = $r65[i16];

        $l15 = virtualinvoke $r66.<java.util.Date: long getTime()>();

        $d2 = (double) $l15;

        r71[i16] = $d2;

        i16 = i16 + 1;

        goto label02;

     label03:
        r70 = virtualinvoke r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.ma2.Array readData2(ucar.nc2.Variable,ucar.ma2.Section,double[])>(r3, r11, r71);

        goto label38;

     label04:
        $r6 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("azimuth");

        if $z2 == 0 goto label05;

        $r62 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r63 = virtualinvoke $r62.<ucar.atd.dorade.DoradeSweep: float[] getAzimuths()>();

        r70 = virtualinvoke r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.ma2.Array readData1(ucar.nc2.Variable,ucar.ma2.Section,float[])>(r3, r11, $r63);

        goto label38;

     label05:
        $r7 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("latitudes_");

        if $z3 == 0 goto label08;

        $i11 = $i0 * $i1;

        r72 = newarray (float)[$i11];

        i17 = 0;

     label06:
        if i17 >= $i0 goto label07;

        $r60 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r61 = virtualinvoke $r60.<ucar.atd.dorade.DoradeSweep: float[] getLatitudes(int)>(i17);

        $i12 = i17 * $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r61, 0, r72, $i12, $i1);

        i17 = i17 + 1;

        goto label06;

     label07:
        r70 = virtualinvoke r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.ma2.Array readData1(ucar.nc2.Variable,ucar.ma2.Section,float[])>(r3, r11, r72);

        goto label38;

     label08:
        $r8 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z4 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("longitudes_");

        if $z4 == 0 goto label11;

        $i9 = $i0 * $i1;

        r73 = newarray (float)[$i9];

        i18 = 0;

     label09:
        if i18 >= $i0 goto label10;

        $r58 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r59 = virtualinvoke $r58.<ucar.atd.dorade.DoradeSweep: float[] getLongitudes(int)>(i18);

        $i10 = i18 * $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r59, 0, r73, $i10, $i1);

        i18 = i18 + 1;

        goto label09;

     label10:
        r70 = virtualinvoke r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.ma2.Array readData1(ucar.nc2.Variable,ucar.ma2.Section,float[])>(r3, r11, r73);

        goto label38;

     label11:
        $r9 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z5 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("altitudes_");

        if $z5 == 0 goto label14;

        $i7 = $i0 * $i1;

        r74 = newarray (float)[$i7];

        i19 = 0;

     label12:
        if i19 >= $i0 goto label13;

        $r56 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r57 = virtualinvoke $r56.<ucar.atd.dorade.DoradeSweep: float[] getAltitudes(int)>(i19);

        $i8 = i19 * $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r57, 0, r74, $i8, $i1);

        i19 = i19 + 1;

        goto label12;

     label13:
        r70 = virtualinvoke r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.ma2.Array readData1(ucar.nc2.Variable,ucar.ma2.Section,float[])>(r3, r11, r74);

        goto label38;

     label14:
        $r10 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z6 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("distance_");

        if $z6 == 0 goto label18;

        i20 = 0;

        i21 = 0;

     label15:
        if i21 >= $i0 goto label17;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z18 = virtualinvoke $r54.<java.lang.String: boolean endsWith(java.lang.String)>($r53);

        if $z18 == 0 goto label16;

        i20 = i21;

        goto label17;

     label16:
        i21 = i21 + 1;

        goto label15;

     label17:
        $r43 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $i6 = virtualinvoke $r43.<ucar.atd.dorade.DoradeSweep: int getNCells(int)>(i20);

        $r45 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r44 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $f1 = virtualinvoke $r44.<ucar.atd.dorade.DoradeSweep: float getRangeToFirstCell(int)>(i20);

        $d0 = (double) $f1;

        $r46 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $f2 = virtualinvoke $r46.<ucar.atd.dorade.DoradeSweep: float getCellSpacing(int)>(i20);

        $d1 = (double) $f2;

        $r47 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array makeArray(ucar.ma2.DataType,int,double,double)>($r45, $i6, $d0, $d1);

        $r48 = virtualinvoke $r47.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>(class "Ljava/lang/Float;");

        $r49 = (float[]) $r48;

        $r55 = (float[]) $r49;

        r70 = virtualinvoke r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.ma2.Array readData1(ucar.nc2.Variable,ucar.ma2.Section,float[])>(r3, r11, $r55);

        goto label38;

     label18:
        $z7 = virtualinvoke r3.<ucar.nc2.Variable: boolean isScalar()>();

        if $z7 == 0 goto label29;

        f3 = 0.0F;

        $r23 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z8 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("Range_to_First_Cell");

        if $z8 == 0 goto label19;

        $r42 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r42.<ucar.atd.dorade.DoradeSweep: float getRangeToFirstCell(int)>(0);

        goto label28;

     label19:
        $r24 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z9 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("Cell_Spacing");

        if $z9 == 0 goto label20;

        $r41 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r41.<ucar.atd.dorade.DoradeSweep: float getCellSpacing(int)>(0);

        goto label28;

     label20:
        $r25 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z10 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("Fixed_Angle");

        if $z10 == 0 goto label21;

        $r40 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r40.<ucar.atd.dorade.DoradeSweep: float getFixedAngle()>();

        goto label28;

     label21:
        $r26 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z11 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("Nyquist_Velocity");

        if $z11 == 0 goto label22;

        $r39 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r39.<ucar.atd.dorade.DoradeSweep: float getUnambiguousVelocity(int)>(0);

        goto label28;

     label22:
        $r27 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z12 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("Unambiguous_Range");

        if $z12 == 0 goto label23;

        $r38 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r38.<ucar.atd.dorade.DoradeSweep: float getunambiguousRange(int)>(0);

        goto label28;

     label23:
        $r28 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z13 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("Radar_Constant");

        if $z13 == 0 goto label24;

        $r37 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r37.<ucar.atd.dorade.DoradeSweep: float getradarConstant(int)>(0);

        goto label28;

     label24:
        $r29 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z14 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("rcvr_gain");

        if $z14 == 0 goto label25;

        $r36 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r36.<ucar.atd.dorade.DoradeSweep: float getrcvrGain(int)>(0);

        goto label28;

     label25:
        $r30 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z15 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("ant_gain");

        if $z15 == 0 goto label26;

        $r35 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r35.<ucar.atd.dorade.DoradeSweep: float getantennaGain(int)>(0);

        goto label28;

     label26:
        $r31 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z16 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("sys_gain");

        if $z16 == 0 goto label27;

        $r34 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r34.<ucar.atd.dorade.DoradeSweep: float getsystemGain(int)>(0);

        goto label28;

     label27:
        $r32 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $z17 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("bm_width");

        if $z17 == 0 goto label28;

        $r33 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        f3 = virtualinvoke $r33.<ucar.atd.dorade.DoradeSweep: float gethBeamWidth(int)>(0);

     label28:
        $r75 = newarray (float)[1];

        $r75[0] = f3;

        $r76 = virtualinvoke r3.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r77 = virtualinvoke $r76.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r78 = virtualinvoke r3.<ucar.nc2.Variable: int[] getShape()>();

        r70 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r77, $r78, $r75);

        goto label38;

     label29:
        $r12 = virtualinvoke r11.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r13 = virtualinvoke r11.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        $r14 = virtualinvoke r3.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r15 = virtualinvoke $r14.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r16 = virtualinvoke r11.<ucar.ma2.Section: int[] getShape()>();

        $r17 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r15, $r16);

        $r18 = virtualinvoke $r17.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r19 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        $r20 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<ucar.atd.dorade.DoradeSweep: ucar.atd.dorade.DoradePARM lookupParamIgnoreCase(java.lang.String)>($r20);

        $i2 = virtualinvoke $r21.<ucar.atd.dorade.DoradePARM: int getNCells()>();

        r79 = newarray (float)[$i2];

        i22 = virtualinvoke $r12.<ucar.ma2.Range: int first()>();

     label30:
        $i3 = virtualinvoke $r12.<ucar.ma2.Range: int last()>();

        if i22 > $i3 goto label37;

     label31:
        $r22 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.atd.dorade.DoradeSweep mySweep>;

        r79 = virtualinvoke $r22.<ucar.atd.dorade.DoradeSweep: float[] getRayData(ucar.atd.dorade.DoradePARM,int,float[])>($r21, i22, r79);

     label32:
        goto label34;

     label33:
        $r69 := @caughtexception;

        virtualinvoke $r69.<ucar.atd.dorade.DoradeSweep$DoradeSweepException: void printStackTrace()>();

     label34:
        i23 = virtualinvoke $r13.<ucar.ma2.Range: int first()>();

     label35:
        $i24 = virtualinvoke $r13.<ucar.ma2.Range: int last()>();

        if i23 > $i24 goto label36;

        $f0 = r79[i23];

        interfaceinvoke $r18.<ucar.ma2.IndexIterator: void setFloatNext(float)>($f0);

        $i5 = virtualinvoke $r13.<ucar.ma2.Range: int stride()>();

        i23 = i23 + $i5;

        goto label35;

     label36:
        $i4 = virtualinvoke $r12.<ucar.ma2.Range: int stride()>();

        i22 = i22 + $i4;

        goto label30;

     label37:
        return $r17;

     label38:
        return r70;

        catch ucar.atd.dorade.DoradeSweep$DoradeSweepException from label31 to label32 with label33;
    }

    public ucar.ma2.Array readData1(ucar.nc2.Variable, ucar.ma2.Section, float[])
    {
        ucar.ma2.Range $r7;
        ucar.ma2.Section r3;
        ucar.ma2.IndexIterator $r6;
        ucar.ma2.DataType $r1;
        float[] r8;
        ucar.ma2.Array $r5;
        ucar.nc2.iosp.dorade.Doradeiosp r9;
        int[] $r4;
        int $i0, $i1, i2;
        float $f0;
        ucar.nc2.Variable r0;
        java.lang.Class $r2;

        r9 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        r0 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: ucar.ma2.Section;

        r8 := @parameter2: float[];

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r2 = virtualinvoke $r1.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r4 = virtualinvoke r3.<ucar.ma2.Section: int[] getShape()>();

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r2, $r4);

        $r6 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r7 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        i2 = virtualinvoke $r7.<ucar.ma2.Range: int first()>();

     label1:
        $i0 = virtualinvoke $r7.<ucar.ma2.Range: int last()>();

        if i2 > $i0 goto label2;

        $f0 = r8[i2];

        interfaceinvoke $r6.<ucar.ma2.IndexIterator: void setFloatNext(float)>($f0);

        $i1 = virtualinvoke $r7.<ucar.ma2.Range: int stride()>();

        i2 = i2 + $i1;

        goto label1;

     label2:
        return $r5;
    }

    public ucar.ma2.Array readData2(ucar.nc2.Variable, ucar.ma2.Section, double[])
    {
        ucar.ma2.Range $r7;
        ucar.ma2.Section r3;
        ucar.ma2.IndexIterator $r6;
        double[] r8;
        ucar.ma2.DataType $r1;
        ucar.ma2.Array $r5;
        ucar.nc2.iosp.dorade.Doradeiosp r9;
        int[] $r4;
        int $i0, $i1, i2;
        ucar.nc2.Variable r0;
        java.lang.Class $r2;
        double $d0;

        r9 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        r0 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: ucar.ma2.Section;

        r8 := @parameter2: double[];

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r2 = virtualinvoke $r1.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r4 = virtualinvoke r3.<ucar.ma2.Section: int[] getShape()>();

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r2, $r4);

        $r6 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r7 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        i2 = virtualinvoke $r7.<ucar.ma2.Range: int first()>();

     label1:
        $i0 = virtualinvoke $r7.<ucar.ma2.Range: int last()>();

        if i2 > $i0 goto label2;

        $d0 = r8[i2];

        interfaceinvoke $r6.<ucar.ma2.IndexIterator: void setDoubleNext(double)>($d0);

        $i1 = virtualinvoke $r7.<ucar.ma2.Range: int stride()>();

        i2 = i2 + $i1;

        goto label1;

     label2:
        return $r5;
    }

    public void flush() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.dorade.Doradeiosp r0;

        r0 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        $r1 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.dorade.Doradeiosp r0;

        r0 := @this: ucar.nc2.iosp.dorade.Doradeiosp;

        $r1 = r0.<ucar.nc2.iosp.dorade.Doradeiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void close()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        ucar.unidata.io.RandomAccessFile $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.NetcdfFile: void registerIOProvider(java.lang.Class)>(class "Lucar/nc2/iosp/dorade/Doradeiosp;");

        staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>("/home/yuanho/dorade/swp.1020511015815.SP0L.573.1.2_SUR_v1");

        $r0 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r0.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>("/home/yuanho/dorade/swp.1020511015815.SP0L.573.1.2_SUR_v1", "r");

        return;
    }
}
