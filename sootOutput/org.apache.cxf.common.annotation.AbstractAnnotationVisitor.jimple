public abstract class org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor extends java.lang.Object implements org.apache.cxf.common.'annotation'.AnnotationVisitor
{
    protected java.lang.Object target;
    protected java.lang.Class targetClass;
    private final java.util.List targetAnnotations;

    protected void <init>(java.lang.Class)
    {
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.Class r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.util.List targetAnnotations> = $r1;

        virtualinvoke r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: void addTargetAnnotation(java.lang.Class)>(r2);

        return;
    }

    protected void <init>(java.util.List)
    {
        java.util.List r2, $r3;
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r2 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.util.List targetAnnotations> = $r1;

        $r3 = r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.util.List targetAnnotations>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    protected final void addTargetAnnotation(java.lang.Class)
    {
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.Class r1;
        java.util.List $r2;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.util.List targetAnnotations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void visitClass(java.lang.Class, java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r2;
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.Class r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        return;
    }

    public java.util.List getTargetAnnotations()
    {
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.util.List $r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        $r1 = r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.util.List targetAnnotations>;

        return $r1;
    }

    public void visitField(java.lang.reflect.Field, java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r2;
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.reflect.Field r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r1 := @parameter0: java.lang.reflect.Field;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        return;
    }

    public void visitMethod(java.lang.reflect.Method, java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r2;
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.reflect.Method r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        return;
    }

    public void setTarget(java.lang.Object)
    {
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.Object r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.lang.Object target> = r1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.lang.Class targetClass> = $r2;

        return;
    }

    public void setTarget(java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.Object r1;
        java.lang.Class r2;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.lang.Object target> = r1;

        r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.lang.Class targetClass> = r2;

        return;
    }

    public java.lang.Object getTarget()
    {
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        $r1 = r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.lang.Object target>;

        return $r1;
    }

    public java.lang.Class getTargetClass()
    {
        org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor;

        $r1 = r0.<org.apache.cxf.common.'annotation'.AbstractAnnotationVisitor: java.lang.Class targetClass>;

        return $r1;
    }
}
