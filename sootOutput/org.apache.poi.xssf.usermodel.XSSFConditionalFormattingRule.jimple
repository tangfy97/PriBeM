public class org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule extends java.lang.Object implements org.apache.poi.ss.usermodel.ConditionalFormattingRule
{
    private final org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule;
    private org.apache.poi.xssf.usermodel.XSSFSheet _sh;

    void <init>(org.apache.poi.xssf.usermodel.XSSFSheet)
    {
        org.apache.poi.xssf.usermodel.XSSFSheet r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        r2 := @parameter0: org.apache.poi.xssf.usermodel.XSSFSheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule newInstance()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule> = $r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFSheet _sh> = r2;

        return;
    }

    void <init>(org.apache.poi.xssf.usermodel.XSSFSheet, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule)
    {
        org.apache.poi.xssf.usermodel.XSSFSheet r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        r2 := @parameter0: org.apache.poi.xssf.usermodel.XSSFSheet;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule> = r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFSheet _sh> = r2;

        return;
    }

    org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCTCfRule()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        return $r1;
    }

    org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxf(boolean)
    {
        long $l3, $l4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r5, $r6, $r7;
        org.apache.poi.xssf.model.StylesTable $r3;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r4, r8;
        int $i0, $i1, $i2, i5;
        boolean z0, $z1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFSheet _sh>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.model.StylesTable getStylesSource()>();

        r8 = null;

        $i0 = virtualinvoke $r3.<org.apache.poi.xssf.model.StylesTable: int _getDXfsSize()>();

        if $i0 <= 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $z1 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: boolean isSetDxfId()>();

        if $z1 == 0 goto label1;

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $l4 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: long getDxfId()>();

        i5 = (int) $l4;

        r8 = virtualinvoke $r3.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxfAt(int)>(i5);

     label1:
        if z0 == 0 goto label2;

        if r8 != null goto label2;

        $r4 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf newInstance()>();

        r8 = $r4;

        $i1 = virtualinvoke $r3.<org.apache.poi.xssf.model.StylesTable: int putDxf(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf)>($r4);

        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $i2 = $i1 - 1;

        $l3 = (long) $i2;

        interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void setDxfId(long)>($l3);

     label2:
        return r8;
    }

    public org.apache.poi.xssf.usermodel.XSSFBorderFormatting createBorderFormatting()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r1;
        org.apache.poi.xssf.usermodel.XSSFBorderFormatting $r2;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxf(boolean)>(1);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: boolean isSetBorder()>();

        if $z0 != 0 goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder addNewBorder()>();

        goto label2;

     label1:
        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder getBorder()>();

     label2:
        $r2 = new org.apache.poi.xssf.usermodel.XSSFBorderFormatting;

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFBorderFormatting: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder)>(r3);

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFBorderFormatting getBorderFormatting()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r1;
        org.apache.poi.xssf.usermodel.XSSFBorderFormatting $r2;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxf(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: boolean isSetBorder()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = new org.apache.poi.xssf.usermodel.XSSFBorderFormatting;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder getBorder()>();

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFBorderFormatting: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder)>($r3);

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFFontFormatting createFontFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFFontFormatting $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxf(boolean)>(1);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: boolean isSetFont()>();

        if $z0 != 0 goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont addNewFont()>();

        goto label2;

     label1:
        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont getFont()>();

     label2:
        $r2 = new org.apache.poi.xssf.usermodel.XSSFFontFormatting;

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFFontFormatting: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont)>(r3);

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFFontFormatting getFontFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFFontFormatting $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxf(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: boolean isSetFont()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = new org.apache.poi.xssf.usermodel.XSSFFontFormatting;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont getFont()>();

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFFontFormatting: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont)>($r3);

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFPatternFormatting createPatternFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFPatternFormatting $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxf(boolean)>(1);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: boolean isSetFill()>();

        if $z0 != 0 goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill addNewFill()>();

        goto label2;

     label1:
        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill getFill()>();

     label2:
        $r2 = new org.apache.poi.xssf.usermodel.XSSFPatternFormatting;

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFPatternFormatting: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill)>(r3);

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFPatternFormatting getPatternFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFPatternFormatting $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxf(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: boolean isSetFill()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = new org.apache.poi.xssf.usermodel.XSSFPatternFormatting;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill getFill()>();

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFPatternFormatting: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill)>($r3);

        return $r2;
    }

    public byte getConditionType()
    {
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum getType()>();

        $i0 = virtualinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum: int intValue()>();

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;
    }

    public byte getComparisonOperation()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum $r2;
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum getOperator()>();

        if $r2 != null goto label01;

        return 0;

     label01:
        $i0 = virtualinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label05;
            case 6: goto label04;
            case 7: goto label08;
            case 8: goto label09;
            default: goto label10;
        };

     label02:
        return 6;

     label03:
        return 8;

     label04:
        return 5;

     label05:
        return 7;

     label06:
        return 3;

     label07:
        return 4;

     label08:
        return 1;

     label09:
        return 2;

     label10:
        return 0;
    }

    public java.lang.String getFormula1()
    {
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r1, $r2;
        java.lang.String $r3;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: int sizeOfFormulaArray()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: java.lang.String getFormulaArray(int)>(0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.String getFormula2()
    {
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r1, $r2;
        java.lang.String $r3;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: int sizeOfFormulaArray()>();

        if $i0 != 2 goto label1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule _cfRule>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: java.lang.String getFormulaArray(int)>(1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public volatile org.apache.poi.ss.usermodel.PatternFormatting getPatternFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFPatternFormatting $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFPatternFormatting getPatternFormatting()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.PatternFormatting createPatternFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFPatternFormatting $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFPatternFormatting createPatternFormatting()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.FontFormatting getFontFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFFontFormatting $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFFontFormatting getFontFormatting()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.FontFormatting createFontFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFFontFormatting $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFFontFormatting createFontFormatting()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.BorderFormatting getBorderFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFBorderFormatting $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFBorderFormatting getBorderFormatting()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.BorderFormatting createBorderFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFBorderFormatting $r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.apache.poi.xssf.usermodel.XSSFBorderFormatting createBorderFormatting()>();

        return $r1;
    }
}
