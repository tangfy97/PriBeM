public final class org.apache.jena.riot.tokens.TokenizerText extends java.lang.Object implements org.apache.jena.riot.tokens.Tokenizer
{
    public static final int CTRL_CHAR;
    public static boolean Checking;
    private org.apache.jena.riot.tokens.Token token;
    private final java.lang.StringBuilder stringBuilder;
    private final org.apache.jena.atlas.io.PeekReader reader;
    private final boolean lineMode;
    private boolean finished;
    private org.apache.jena.riot.tokens.TokenChecker checker;
    private static final boolean VeryVeryLax;
    private static char[] extraCharsWord;
    private static char[] extraCharsVar;

    void <init>(org.apache.jena.atlas.io.PeekReader)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.atlas.io.PeekReader r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r1 := @parameter0: org.apache.jena.atlas.io.PeekReader;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void <init>(org.apache.jena.atlas.io.PeekReader,boolean)>(r1, 0);

        return;
    }

    void <init>(org.apache.jena.atlas.io.PeekReader, boolean)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.StringBuilder $r1;
        org.apache.jena.atlas.io.PeekReader r2;
        boolean z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: org.apache.jena.atlas.io.PeekReader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token> = null;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(200);

        r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder> = $r1;

        r0.<org.apache.jena.riot.tokens.TokenizerText: boolean finished> = 0;

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker> = null;

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader> = r2;

        r0.<org.apache.jena.riot.tokens.TokenizerText: boolean lineMode> = z0;

        return;
    }

    public final boolean hasNext()
    {
        org.apache.jena.atlas.io.PeekReader $r2, $r8, $r9, $r19, $r20, $r22, $r23;
        boolean $z0, $z1;
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.atlas.AtlasException $r5;
        java.lang.StringBuilder $r13, $r14, $r16, $r17;
        java.lang.Throwable $r6, $r10, $r15;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        org.apache.jena.riot.tokens.Token $r1, $r3, $r4;
        java.lang.String $r18;
        java.lang.Class $r11;
        org.apache.jena.riot.RiotParseException $r7, $r12, $r21;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $z0 = r0.<org.apache.jena.riot.tokens.TokenizerText: boolean finished>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        if $r1 == null goto label2;

        return 1;

     label2:
        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void skip()>();

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $z1 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: boolean eof()>();

        if $z1 == 0 goto label4;

        r0.<org.apache.jena.riot.tokens.TokenizerText: boolean finished> = 1;

     label3:
        return 0;

     label4:
        $r3 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token parseToken()>();

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token> = $r3;

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        if $r4 != null goto label6;

        r0.<org.apache.jena.riot.tokens.TokenizerText: boolean finished> = 1;

     label5:
        return 0;

     label6:
        return 1;

     label7:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<org.apache.jena.atlas.AtlasException: java.lang.Throwable getCause()>();

        if $r6 == null goto label9;

        $r10 = virtualinvoke $r5.<org.apache.jena.atlas.AtlasException: java.lang.Throwable getCause()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        if $r11 != class "Ljava/nio/charset/MalformedInputException;" goto label8;

        $r21 = new org.apache.jena.riot.RiotParseException;

        $r22 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l4 = virtualinvoke $r22.<org.apache.jena.atlas.io.PeekReader: long getLineNum()>();

        $r23 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l5 = virtualinvoke $r23.<org.apache.jena.atlas.io.PeekReader: long getColNum()>();

        specialinvoke $r21.<org.apache.jena.riot.RiotParseException: void <init>(java.lang.String,long,long)>("Bad character encoding", $l4, $l5);

        throw $r21;

     label8:
        $r12 = new org.apache.jena.riot.RiotParseException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad input stream [");

        $r15 = virtualinvoke $r5.<org.apache.jena.atlas.AtlasException: java.lang.Throwable getCause()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l2 = virtualinvoke $r19.<org.apache.jena.atlas.io.PeekReader: long getLineNum()>();

        $r20 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l3 = virtualinvoke $r20.<org.apache.jena.atlas.io.PeekReader: long getColNum()>();

        specialinvoke $r12.<org.apache.jena.riot.RiotParseException: void <init>(java.lang.String,long,long)>($r18, $l2, $l3);

        throw $r12;

     label9:
        $r7 = new org.apache.jena.riot.RiotParseException;

        $r8 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l0 = virtualinvoke $r8.<org.apache.jena.atlas.io.PeekReader: long getLineNum()>();

        $r9 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l1 = virtualinvoke $r9.<org.apache.jena.atlas.io.PeekReader: long getColNum()>();

        specialinvoke $r7.<org.apache.jena.riot.RiotParseException: void <init>(java.lang.String,long,long)>("Bad input stream", $l0, $l1);

        throw $r7;

        catch org.apache.jena.atlas.AtlasException from label2 to label3 with label7;
        catch org.apache.jena.atlas.AtlasException from label4 to label5 with label7;
    }

    public final boolean eof()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: boolean hasNext()>();

        return $z0;
    }

    public final org.apache.jena.riot.tokens.Token next()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.Token r1;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token> = null;

        return r1;
    }

    public final org.apache.jena.riot.tokens.Token peek()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.Token $r1;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r1;
    }

    public void remove()
    {
        org.apache.jena.riot.tokens.TokenizerText r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.jena.riot.tokens.TokenChecker getChecker()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        return $r1;
    }

    public void setChecker(org.apache.jena.riot.tokens.TokenChecker)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenChecker;

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker> = r1;

        return;
    }

    public void close()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        staticinvoke <org.apache.jena.atlas.io.IO: void close(java.io.Closeable)>($r1);

        return;
    }

    private void skip()
    {
        org.apache.jena.atlas.io.PeekReader $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, i2, $i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.jena.riot.tokens.TokenizerText r0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

     label1:
        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $z0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: boolean eof()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        i2 = $i0;

        if $i0 != 35 goto label5;

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

     label3:
        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i1 = virtualinvoke $r5.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        i2 = $i1;

        $i4 = (int) -1;

        if $i1 == $i4 goto label5;

        $z3 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isNewlineChar(int)>($i1);

        if $z3 == 0 goto label4;

        goto label5;

     label4:
        $r6 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        goto label3;

     label5:
        $z4 = r0.<org.apache.jena.riot.tokens.TokenizerText: boolean lineMode>;

        if $z4 == 0 goto label6;

        $z2 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isHorizontalWhitespace(int)>(i2);

        if $z2 != 0 goto label7;

        goto label8;

     label6:
        $z1 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isWhitespace(int)>(i2);

        if $z1 != 0 goto label7;

        goto label8;

     label7:
        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        goto label1;

     label8:
        return;
    }

    private org.apache.jena.riot.tokens.Token parseToken()
    {
        java.lang.Object[] $r21, $r22, $r149;
        long $l0, $l1;
        org.apache.jena.atlas.io.PeekReader $r2, $r3, $r4, $r8, $r11, $r23, $r33, $r34, $r37, $r41, $r45, $r49, $r53, $r57, $r61, $r65, $r69, $r73, $r77, $r78, $r82, $r88, $r92, $r96, $r100, $r104, $r105, $r106, $r116, $r117, $r126, $r134, $r141, $r144, $r157, $r168;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i16, $i18, $i19;
        java.lang.String $r6, $r10, $r16, $r20, $r28, $r30, $r32, $r39, $r85, $r87, $r109, $r111, $r115, $r130, $r133, $r138, $r151, $r156, $r159, $r164;
        org.apache.jena.riot.tokens.TokenType $r18, $r26, $r42, $r46, $r50, $r54, $r58, $r62, $r66, $r70, $r74, $r79, $r89, $r93, $r97, $r101, $r118, $r121, $r124, $r127, $r135, $r142, $r152, $r160, $r165, $r166, $r167;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.Token $r5, $r7, $r9, $r13, $r14, $r15, $r17, $r19, $r25, $r27, $r29, $r31, $r35, $r36, $r38, $r40, $r43, $r44, $r47, $r48, $r51, $r52, $r55, $r56, $r59, $r60, $r63, $r64, $r67, $r68, $r71, $r72, $r75, $r76, $r80, $r81, $r83, $r84, $r86, $r90, $r91, $r94, $r95, $r98, $r99, $r102, $r103, $r107, $r108, $r110, $r112, $r113, $r114, $r119, $r120, $r122, $r123, $r125, $r128, $r129, $r131, $r132, $r136, $r137, $r139, $r140, $r143, $r145, $r146, $r147, $r148, $r150, $r153, $r154, $r155, $r158, $r161, $r162, $r163, $r169, $r170, $r171, $r172;
        char $c12;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r170 = new org.apache.jena.riot.tokens.Token;

        $l0 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: long getLine()>();

        $l1 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: long getColumn()>();

        specialinvoke $r170.<org.apache.jena.riot.tokens.Token: void <init>(long,long)>($l0, $l1);

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token> = $r170;

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i2 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i2 != 60 goto label02;

        $r157 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r157.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r158 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r159 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readIRI()>();

        virtualinvoke $r158.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r159);

        $r161 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r160 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType IRI>;

        virtualinvoke $r161.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r160);

        $z17 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z17 == 0 goto label01;

        $r163 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r164 = virtualinvoke $r163.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkURI(java.lang.String)>($r164);

     label01:
        $r162 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r162;

     label02:
        if $i2 == 39 goto label03;

        if $i2 != 34 goto label21;

     label03:
        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i3 = virtualinvoke $r4.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i3 != $i2 goto label10;

        $r33 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r33.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r34 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i6 = virtualinvoke $r34.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i6 != $i2 goto label06;

        $r37 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r37.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r38 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r39 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readLongString(int,boolean)>($i2, 0);

        virtualinvoke $r38.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r39);

        if $i2 != 39 goto label04;

        $r165 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LONG_STRING1>;

        goto label05;

     label04:
        $r165 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LONG_STRING2>;

     label05:
        $r40 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        virtualinvoke $r40.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r165);

        goto label09;

     label06:
        $r35 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        virtualinvoke $r35.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>("");

        $r36 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        if $i2 != 39 goto label07;

        $r166 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STRING1>;

        goto label08;

     label07:
        $r166 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STRING2>;

     label08:
        virtualinvoke $r36.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r166);

     label09:
        goto label13;

     label10:
        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r6 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readString(int,int,boolean)>($i2, $i2, 1);

        virtualinvoke $r5.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r6);

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        if $i2 != 39 goto label11;

        $r167 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STRING1>;

        goto label12;

     label11:
        $r167 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STRING2>;

     label12:
        virtualinvoke $r7.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r167);

     label13:
        $r168 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i14 = virtualinvoke $r168.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i14 != 64 goto label15;

        $r23 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r23.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r171 = new org.apache.jena.riot.tokens.Token;

        $r25 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        specialinvoke $r171.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.Token)>($r25);

        $r26 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LITERAL_LANG>;

        virtualinvoke $r171.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r26);

        $r27 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        virtualinvoke $r171.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setSubToken1(org.apache.jena.riot.tokens.Token)>($r27);

        $r28 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String langTag()>();

        virtualinvoke $r171.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage2(java.lang.String)>($r28);

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token> = $r171;

        $z4 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z4 == 0 goto label14;

        $r29 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r30 = virtualinvoke $r29.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r31 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r32 = virtualinvoke $r31.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkLiteralLang(java.lang.String,java.lang.String)>($r30, $r32);

     label14:
        goto label20;

     label15:
        $r8 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i4 = virtualinvoke $r8.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i4 != 94 goto label19;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: boolean expect(java.lang.String)>("^^");

        $r11 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i5 = virtualinvoke $r11.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z1 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isWhitespace(int)>($i5);

        if $z1 == 0 goto label16;

        $r22 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("No whitespace after ^^ in literal with datatype", $r22);

     label16:
        $r172 = new org.apache.jena.riot.tokens.Token;

        $r13 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        specialinvoke $r172.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.Token)>($r13);

        $r14 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        virtualinvoke $r172.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setSubToken1(org.apache.jena.riot.tokens.Token)>($r14);

        $r15 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r16 = virtualinvoke $r15.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        virtualinvoke $r172.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r16);

        $r17 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token parseToken()>();

        $z2 = virtualinvoke $r17.<org.apache.jena.riot.tokens.Token: boolean isIRI()>();

        if $z2 != 0 goto label17;

        $r21 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Datatype URI required after ^^ - URI or prefixed name expected", $r21);

     label17:
        virtualinvoke $r172.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setSubToken2(org.apache.jena.riot.tokens.Token)>($r17);

        $r18 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LITERAL_DT>;

        virtualinvoke $r172.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r18);

        r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token> = $r172;

        $z3 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z3 == 0 goto label18;

        $r19 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r20 = virtualinvoke $r19.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkLiteralDT(java.lang.String,org.apache.jena.riot.tokens.Token)>($r20, $r17);

     label18:
        goto label20;

     label19:
        $z0 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z0 == 0 goto label20;

        $r9 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r10 = virtualinvoke $r9.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkString(java.lang.String)>($r10);

     label20:
        $r169 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r169;

     label21:
        if $i2 != 95 goto label23;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: boolean expect(java.lang.String)>("_:");

        $r150 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r151 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readBlankNodeLabel()>();

        virtualinvoke $r150.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r151);

        $r153 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r152 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType BNODE>;

        virtualinvoke $r153.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r152);

        $z16 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z16 == 0 goto label22;

        $r155 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r156 = virtualinvoke $r155.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkBlankNode(java.lang.String)>($r156);

     label22:
        $r154 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r154;

     label23:
        if $i2 != 42 goto label28;

        $r141 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r141.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r143 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r142 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType CNTRL>;

        virtualinvoke $r143.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r142);

        $r144 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i11 = virtualinvoke $r144.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $i16 = (int) -1;

        if $i11 != $i16 goto label24;

        $r149 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("EOF found after 42", $r149);

     label24:
        $z14 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isWhitespace(int)>($i11);

        if $z14 == 0 goto label25;

        $r148 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $i18 = (int) -1;

        $r148.<org.apache.jena.riot.tokens.Token: int cntrlCode> = $i18;

        goto label26;

     label25:
        $r145 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $c12 = (char) $i11;

        $i19 = (int) $c12;

        $r145.<org.apache.jena.riot.tokens.Token: int cntrlCode> = $i19;

     label26:
        $z15 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z15 == 0 goto label27;

        $r147 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $i13 = $r147.<org.apache.jena.riot.tokens.Token: int cntrlCode>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkControl(int)>($i13);

     label27:
        $r146 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r146;

     label28:
        if $i2 != 64 goto label30;

        $r134 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r134.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r136 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r135 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DIRECTIVE>;

        virtualinvoke $r136.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r135);

        $r137 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r138 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readWord(boolean)>(0);

        virtualinvoke $r137.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r138);

        $z13 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z13 == 0 goto label29;

        $r140 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $i10 = $r140.<org.apache.jena.riot.tokens.Token: int cntrlCode>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkDirective(int)>($i10);

     label29:
        $r139 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r139;

     label30:
        if $i2 != 63 goto label32;

        $r126 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r126.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r128 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r127 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType VAR>;

        virtualinvoke $r128.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r127);

        $r129 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r130 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readVarName()>();

        virtualinvoke $r129.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r130);

        $z12 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z12 == 0 goto label31;

        $r132 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r133 = virtualinvoke $r132.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkVariable(java.lang.String)>($r133);

     label31:
        $r131 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r131;

     label32:
        lookupswitch($i2)
        {
            case 40: goto label40;
            case 41: goto label41;
            case 42: goto label48;
            case 44: goto label37;
            case 46: goto label33;
            case 59: goto label36;
            case 60: goto label46;
            case 61: goto label44;
            case 62: goto label47;
            case 91: goto label42;
            case 93: goto label43;
            case 95: goto label45;
            case 123: goto label38;
            case 125: goto label39;
            default: goto label49;
        };

     label33:
        $r77 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r77.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r78 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i7 = virtualinvoke $r78.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z5 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean range(int,char,char)>($i7, 48, 57);

        if $z5 == 0 goto label35;

        $r82 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r82.<org.apache.jena.atlas.io.PeekReader: void pushbackChar(int)>(46);

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void readNumber()>();

        $z6 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z6 == 0 goto label34;

        $r84 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r85 = virtualinvoke $r84.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r86 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r87 = virtualinvoke $r86.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkNumber(java.lang.String,java.lang.String)>($r85, $r87);

     label34:
        $r83 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r83;

     label35:
        $r80 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r79 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        virtualinvoke $r80.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r79);

        $r81 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r81;

     label36:
        $r73 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r73.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r75 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r74 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType SEMICOLON>;

        virtualinvoke $r75.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r74);

        $r76 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r76;

     label37:
        $r88 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r88.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r90 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r89 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType COMMA>;

        virtualinvoke $r90.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r89);

        $r91 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r91;

     label38:
        $r45 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r45.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r47 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r46 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LBRACE>;

        virtualinvoke $r47.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r46);

        $r48 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r48;

     label39:
        $r41 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r41.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r43 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r42 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACE>;

        virtualinvoke $r43.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r42);

        $r44 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r44;

     label40:
        $r100 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r100.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r102 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r101 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LPAREN>;

        virtualinvoke $r102.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r101);

        $r103 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r103;

     label41:
        $r96 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r96.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r98 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r97 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RPAREN>;

        virtualinvoke $r98.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r97);

        $r99 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r99;

     label42:
        $r57 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r57.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r59 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r58 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LBRACKET>;

        virtualinvoke $r59.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r58);

        $r60 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r60;

     label43:
        $r53 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r53.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r55 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r54 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACKET>;

        virtualinvoke $r55.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r54);

        $r56 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r56;

     label44:
        $r65 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r65.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r67 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r66 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EQUALS>;

        virtualinvoke $r67.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r66);

        $r68 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r68;

     label45:
        $r49 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r49.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r51 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r50 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType UNDERSCORE>;

        virtualinvoke $r51.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r50);

        $r52 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r52;

     label46:
        $r69 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r69.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r71 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r70 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LT>;

        virtualinvoke $r71.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r70);

        $r72 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r72;

     label47:
        $r61 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r61.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r63 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r62 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType GT>;

        virtualinvoke $r63.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r62);

        $r64 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r64;

     label48:
        $r92 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r92.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r94 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r93 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STAR>;

        virtualinvoke $r94.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r93);

        $r95 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r95;

     label49:
        if $i2 == 43 goto label50;

        if $i2 != 45 goto label54;

     label50:
        $r104 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r104.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r105 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i8 = virtualinvoke $r105.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z7 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean range(int,char,char)>($i8, 48, 57);

        if $z7 != 0 goto label53;

        if $i2 != 43 goto label51;

        $r125 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r124 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType PLUS>;

        virtualinvoke $r125.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r124);

        goto label52;

     label51:
        $r122 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r121 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType MINUS>;

        virtualinvoke $r122.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r121);

     label52:
        $r123 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r123;

     label53:
        $r106 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r106.<org.apache.jena.atlas.io.PeekReader: void pushbackChar(int)>($i2);

     label54:
        if $i2 == 43 goto label55;

        if $i2 == 45 goto label55;

        $z8 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean range(int,char,char)>($i2, 48, 57);

        if $z8 == 0 goto label57;

     label55:
        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void readNumber()>();

        $z18 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z18 == 0 goto label56;

        $r108 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r109 = virtualinvoke $r108.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r110 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r111 = virtualinvoke $r110.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkNumber(java.lang.String,java.lang.String)>($r109, $r111);

     label56:
        $r107 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r107;

     label57:
        $z9 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isNewlineChar(int)>($i2);

        if $z9 == 0 goto label59;

     label58:
        $r116 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r116.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r117 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i9 = virtualinvoke $r117.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z11 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isNewlineChar(int)>($i9);

        if $z11 != 0 goto label58;

        $r119 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r118 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType NL>;

        virtualinvoke $r119.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r118);

        $r120 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r120;

     label59:
        $r112 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void readPrefixedNameOrKeyword(org.apache.jena.riot.tokens.Token)>($r112);

        $z10 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z10 == 0 goto label60;

        $r114 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r115 = virtualinvoke $r114.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkKeyword(java.lang.String)>($r115);

     label60:
        $r113 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        return $r113;
    }

    private java.lang.String readIRI()
    {
        java.lang.Object[] $r4, $r16, $r23;
        org.apache.jena.atlas.io.PeekReader $r2;
        java.lang.Integer $r5;
        int $i0, i1, $i3;
        java.lang.String $r7, $r9, $r13, $r15, $r20, $r22;
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.StringBuilder $r1, $r3, $r6, $r8, $r11, $r12, $r14, $r18, $r19, $r21, $r24, $r25;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        i1 = $i0;

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken IRI: ");

        $r19 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r22, $r23);

     label2:
        if $i0 != 10 goto label3;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken IRI (newline): ");

        $r12 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r15, $r16);

     label3:
        if $i0 != 62 goto label4;

        $r8 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label4:
        if $i0 != 92 goto label5;

        i1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicodeEscape()>();

     label5:
        if i1 != 60 goto label6;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[0] = $r5;

        $r6 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4[1] = $r7;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Broken IRI (bad character: \'%c\'): %s", $r4);

     label6:
        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void insertCodepoint(java.lang.StringBuilder,int)>($r3, i1);

        goto label1;
    }

    private final int readCharEscapeAnyURI()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.Object[] $r2;
        int $i0, $i1, $i2, $i4;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Escape sequence not completed", $r2);

     label1:
        lookupswitch($i0)
        {
            case 85: goto label3;
            case 117: goto label2;
            default: goto label4;
        };

     label2:
        $i1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicode4Escape()>();

        return $i1;

     label3:
        $i2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicode8Escape()>();

        return $i2;

     label4:
        return $i0;
    }

    private void readPrefixedNameOrKeyword(org.apache.jena.riot.tokens.Token)
    {
        java.lang.Object[] $r7;
        long $l0, $l2;
        org.apache.jena.atlas.io.PeekReader $r1, $r5, $r11, $r16;
        org.apache.jena.riot.tokens.Token r3;
        java.lang.Integer $r8, $r9, $r10;
        byte $b3;
        int $i1;
        java.lang.String $r2, $r6, $r13, $r14, $r15;
        boolean $z0, $z1;
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenType $r4, $r12;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r3 := @parameter0: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: long getPosition()>();

        $r2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readPrefixPart()>();

        virtualinvoke r3.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r2);

        $r4 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType KEYWORD>;

        virtualinvoke r3.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r4);

        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i1 = virtualinvoke $r5.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i1 != 58 goto label1;

        $r11 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r12 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType PREFIXED_NAME>;

        virtualinvoke r3.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r12);

        $r13 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readLocalPart()>();

        virtualinvoke r3.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage2(java.lang.String)>($r13);

        $z1 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z1 == 0 goto label1;

        $r14 = virtualinvoke r3.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r15 = virtualinvoke r3.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkPrefixedName(java.lang.String,java.lang.String)>($r14, $r15);

     label1:
        $r16 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l2 = virtualinvoke $r16.<org.apache.jena.atlas.io.PeekReader: long getPosition()>();

        $b3 = $l0 cmp $l2;

        if $b3 != 0 goto label2;

        $r7 = newarray (java.lang.Object)[3];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[2] = $r10;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Unknown char: %c(%d;0x%04X)", $r7);

     label2:
        $z0 = <org.apache.jena.riot.tokens.TokenizerText: boolean Checking>;

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r3.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void checkKeyword(java.lang.String)>($r6);

     label3:
        return;
    }

    private java.lang.String readPrefixPart()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readSegment(boolean)>(0);

        return $r1;
    }

    private java.lang.String readLocalPart()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readSegment(boolean)>(1);

        return $r1;
    }

    private java.lang.String readSegment(boolean)
    {
        org.apache.jena.atlas.io.PeekReader $r2, $r4, $r5, $r10, $r11, $r13, $r15, $r16, $r18;
        boolean z0, $z1, $z2, $z3, z4;
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r8, $r12, $r14, $r17;
        int $i0, i7, $i8, $i10;
        java.lang.String $r9;
        char $c1, $c2, $c3, $c4, $c5, $c6;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $i10 = (int) -1;

        if $i0 != $i10 goto label01;

        return "";

     label01:
        if z0 == 0 goto label06;

        if $i0 != 58 goto label02;

        $r16 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r16.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r17 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c6 = (char) $i0;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        goto label08;

     label02:
        if $i0 == 37 goto label03;

        if $i0 != 92 goto label04;

     label03:
        $r13 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r13.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void processPLX(int)>($i0);

        goto label08;

     label04:
        $z3 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isPNChars_U_N(int)>($i0);

        if $z3 == 0 goto label05;

        $r14 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c5 = (char) $i0;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r15 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r15.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        goto label08;

     label05:
        return "";

     label06:
        $z1 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isPNCharsBase(int)>($i0);

        if $z1 != 0 goto label07;

        return "";

     label07:
        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c1 = (char) $i0;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

     label08:
        i7 = 0;

     label09:
        $r18 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i8 = virtualinvoke $r18.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if z0 == 0 goto label12;

        if $i8 == 37 goto label10;

        if $i8 != 92 goto label12;

     label10:
        $r11 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        if i7 == 0 goto label11;

        $r12 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c4 = (char) i7;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label11:
        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void processPLX(int)>($i8);

        i7 = 0;

        goto label09;

     label12:
        if z0 == 0 goto label13;

        if $i8 != 58 goto label13;

        z4 = 1;

        goto label16;

     label13:
        $z2 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isPNChars(int)>($i8);

        if $z2 == 0 goto label14;

        z4 = 1;

        goto label16;

     label14:
        if $i8 != 46 goto label15;

        z4 = 1;

        goto label16;

     label15:
        z4 = 0;

     label16:
        if z4 != 0 goto label17;

        goto label21;

     label17:
        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        if i7 == 0 goto label18;

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c3 = (char) i7;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i7 = 0;

     label18:
        if $i8 == 46 goto label19;

        $r6 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c2 = (char) $i8;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label20;

     label19:
        i7 = $i8;

     label20:
        goto label09;

     label21:
        if i7 != 46 goto label22;

        $r10 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.PeekReader: void pushbackChar(int)>(i7);

     label22:
        $r8 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void processPLX(int)
    {
        java.lang.Object[] $r10, $r12;
        org.apache.jena.atlas.io.PeekReader $r4, $r6, $r7, $r9;
        java.lang.Integer $r11, $r13;
        int $i0, $i3, $i5, i7;
        boolean $z0, $z1;
        char $c1, $c2, $c4, $c6;
        org.apache.jena.riot.tokens.TokenizerText r1;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r8;

        r1 := @this: org.apache.jena.riot.tokens.TokenizerText;

        i7 := @parameter0: int;

        if i7 != 37 goto label3;

        $r3 = r1.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c2 = (char) i7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r4 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i3 = virtualinvoke $r4.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z0 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isHexChar(int)>($i3);

        if $z0 != 0 goto label1;

        $r12 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12[0] = $r13;

        specialinvoke r1.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Not a hex charcater: \'%c\'", $r12);

     label1:
        $r5 = r1.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c4 = (char) $i3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r6 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r7 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i5 = virtualinvoke $r7.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z1 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isHexChar(int)>($i5);

        if $z1 != 0 goto label2;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r10[0] = $r11;

        specialinvoke r1.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Not a hex charcater: \'%c\'", $r10);

     label2:
        $r8 = r1.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c6 = (char) $i5;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $r9 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        goto label5;

     label3:
        if i7 != 92 goto label4;

        $i0 = specialinvoke r1.<org.apache.jena.riot.tokens.TokenizerText: int readCharEscape()>();

        $r2 = r1.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c1 = (char) $i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label5;

     label4:
        $r0 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("Not a \'\\\' or a \'%\' character");

        throw $r0;

     label5:
        return;
    }

    private java.lang.String readString(int, int, boolean)
    {
        org.apache.jena.atlas.io.PeekReader $r2;
        java.lang.Long $r12, $r13, $r21, $r22;
        boolean z0;
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r9, $r15, $r16, $r18, $r23, $r24, $r25;
        java.lang.Object[] $r11, $r20;
        long $l0, $l1;
        int $i2, i3, i4, i5, $i6, $i8;
        java.lang.String $r4, $r8, $r10, $r17, $r19;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        i4 := @parameter0: int;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        $l0 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: long getLine()>();

        $l1 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: long getColumn()>();

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i2 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        i5 = $i2;

        $i8 = (int) -1;

        if $i2 != $i8 goto label2;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken token: ");

        $r16 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = newarray (java.lang.Object)[2];

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r20[0] = $r21;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r20[1] = $r22;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r19, $r20);

     label2:
        if $i2 != 10 goto label3;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken token (newline): ");

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[2];

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r11[1] = $r13;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r10, $r11);

     label3:
        if $i2 != i3 goto label4;

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label4:
        if $i2 != 92 goto label7;

        if z0 == 0 goto label5;

        $i6 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readLiteralEscape()>();

        goto label6;

     label5:
        $i6 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicodeEscape()>();

     label6:
        i5 = $i6;

     label7:
        $r23 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void insertCodepoint(java.lang.StringBuilder,int)>($r23, i5);

        goto label1;
    }

    private java.lang.String readLongString(int, boolean)
    {
        java.lang.Object[] $r6;
        org.apache.jena.atlas.io.PeekReader $r2;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0, i1, i2, $i4;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        java.lang.String $r5, $r8;
        boolean $z0, z1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        i1 := @parameter0: int;

        z1 := @parameter1: boolean;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        i2 = $i0;

        $i4 = (int) -1;

        if $i0 != $i4 goto label3;

        if z1 == 0 goto label2;

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label2:
        $r6 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Broken long string", $r6);

     label3:
        if $i0 != i1 goto label4;

        $z0 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: boolean threeQuotes(int)>(i1);

        if $z0 == 0 goto label4;

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label4:
        if $i0 != 92 goto label5;

        i2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readLiteralEscape()>();

     label5:
        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void insertCodepoint(java.lang.StringBuilder,int)>($r3, i2);

        goto label1;
    }

    private java.lang.String readWord(boolean)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readWordSub(boolean,boolean)>(z0, 0);

        return $r1;
    }

    private java.lang.String readWordSub(boolean, boolean)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        char[] $r1;
        java.lang.String $r2;
        boolean z0, z1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = <org.apache.jena.riot.tokens.TokenizerText: char[] extraCharsWord>;

        $r2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readCharsAnd(boolean,boolean,char[],boolean)>(z0, z1, $r1, 0);

        return $r2;
    }

    private java.lang.String readVarName()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = <org.apache.jena.riot.tokens.TokenizerText: char[] extraCharsVar>;

        $r2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.String readCharsAnd(boolean,boolean,char[],boolean)>(1, 1, $r1, 1);

        return $r2;
    }

    private java.lang.String readCharsAnd(boolean, boolean, char[], boolean)
    {
        org.apache.jena.atlas.io.PeekReader $r2, $r6, $r8, $r9, $r10;
        int $i1, $i3, $i4, $i5, i6, $i7, $i8, $i10;
        java.lang.String $r12;
        boolean z0, z1, $z2, z3, $z4, $z5;
        char $c0, $c2;
        org.apache.jena.riot.tokens.TokenizerText r0;
        char[] r4;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r11;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r4 := @parameter2: char[];

        z3 := @parameter3: boolean;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        i6 = 0;

        if z0 != 0 goto label1;

        $r9 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i5 = virtualinvoke $r9.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z4 = staticinvoke <java.lang.Character: boolean isDigit(int)>($i5);

        if $z4 == 0 goto label1;

        return "";

     label1:
        if z1 != 0 goto label3;

        $r8 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i4 = virtualinvoke $r8.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i4 == 45 goto label2;

        if $i4 != 43 goto label3;

     label2:
        return "";

     label3:
        $r10 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i7 = virtualinvoke $r10.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z5 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isAlphaNumeric(int)>($i7);

        if $z5 != 0 goto label4;

        $z2 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean charInArray(int,char[])>($i7, r4);

        if $z2 == 0 goto label6;

     label4:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c0 = (char) $i7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label5;

     label5:
        i6 = i6 + 1;

        goto label3;

     label6:
        if z3 != 0 goto label8;

     label7:
        if i6 <= 0 goto label8;

        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i1 = i6 - 1;

        $c2 = virtualinvoke $r5.<java.lang.StringBuilder: char charAt(int)>($i1);

        $i8 = (int) $c2;

        if $i8 != 46 goto label8;

        $r6 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.PeekReader: void pushbackChar(int)>(46);

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i3 = i6 - 1;

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>($i3);

        $i10 = (int) -1;

        i6 = i6 + $i10;

        goto label7;

     label8:
        $r11 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private java.lang.String readBlankNodeLabel()
    {
        java.lang.Object[] $r15, $r16, $r17;
        org.apache.jena.atlas.io.PeekReader $r2, $r3, $r5, $r10, $r18;
        int $i0, i5, $i6, $i8, $i10;
        java.lang.String $r9, $r14;
        boolean $z0, $z1, $z2;
        char $c1, $c2, $c3, $c4;
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.StringBuilder $r1, $r4, $r6, $r7, $r8, $r12, $r13, $r19;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $i8 = (int) -1;

        if $i0 != $i8 goto label01;

        $r17 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Blank node label missing (EOF found)", $r17);

     label01:
        $z0 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isWhitespace(int)>($i0);

        if $z0 == 0 goto label02;

        $r16 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Blank node label missing", $r16);

     label02:
        $z1 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isPNChars_U_N(int)>($i0);

        if $z1 != 0 goto label03;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blank node label does not start with alphabetic or _ :");

        $c4 = (char) $i0;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r14, $r15);

     label03:
        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c1 = (char) $i0;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        i5 = 0;

     label04:
        $r18 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i6 = virtualinvoke $r18.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $i10 = (int) -1;

        if $i6 != $i10 goto label05;

        goto label10;

     label05:
        $z2 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isPNChars(int)>($i6);

        if $z2 != 0 goto label06;

        if $i6 == 46 goto label06;

        goto label10;

     label06:
        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        if i5 == 0 goto label07;

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c3 = (char) i5;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i5 = 0;

     label07:
        if $i6 == 46 goto label08;

        $r6 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c2 = (char) $i6;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label09;

     label08:
        i5 = $i6;

     label09:
        goto label04;

     label10:
        if i5 != 46 goto label11;

        $r10 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.PeekReader: void pushbackChar(int)>(i5);

     label11:
        $r8 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void readNumber()
    {
        org.apache.jena.atlas.io.PeekReader $r2, $r13, $r15, $r18, $r20, $r21, $r24, $r31;
        boolean z0, z1, z2, $z3, z4, z5, z6;
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.StringBuilder $r1, $r3, $r10, $r11, $r12, $r16, $r17, $r19, $r22, $r23, $r25, $r30, $r32, $r34;
        java.lang.Object[] $r14;
        org.apache.jena.riot.tokens.Token $r5, $r7, $r9, $r26, $r29, $r33;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i9, $i10, $i11;
        java.lang.String $r27, $r35;
        char $c3, $c5, $c7;
        org.apache.jena.riot.tokens.TokenType $r4, $r6, $r8, $r28;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        z0 = 0;

        z1 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        z2 = 0;

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i0 != 48 goto label02;

        z2 = 1;

        $r18 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r18.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r19 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c5 = (char) $i0;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r20 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i6 = virtualinvoke $r20.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i6 == 120 goto label01;

        if $i6 != 88 goto label04;

     label01:
        $r21 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r21.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r22 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c7 = (char) $i6;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r24 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $r23 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        staticinvoke <org.apache.jena.riot.tokens.TokenizerText: void readHex(org.apache.jena.atlas.io.PeekReader,java.lang.StringBuilder)>($r24, $r23);

        $r26 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r25 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r27);

        $r29 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r28 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType HEX>;

        virtualinvoke $r29.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r28);

        return;

     label02:
        if $i0 == 45 goto label03;

        if $i0 != 43 goto label04;

     label03:
        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void readPossibleSign(java.lang.StringBuilder)>($r3);

     label04:
        $r30 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i8 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readDigits(java.lang.StringBuilder)>($r30);

        $i9 = z2 + $i8;

        $r31 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i10 = virtualinvoke $r31.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i10 != 46 goto label05;

        $r15 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r15.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r16 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        z1 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        $r17 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readDigits(java.lang.StringBuilder)>($r17);

     label05:
        if $i9 != 0 goto label06;

        if z5 != 0 goto label06;

        $r14 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Unrecognized as number", $r14);

     label06:
        $r32 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $z3 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: boolean exponent(java.lang.StringBuilder)>($r32);

        if $z3 == 0 goto label07;

        z0 = 1;

        z1 = 0;

        z6 = 0;

        z4 = 0;

     label07:
        if z4 == 0 goto label08;

        $r10 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i1 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();

        $r11 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i2 = $i1 - 1;

        $c3 = virtualinvoke $r11.<java.lang.StringBuilder: char charAt(int)>($i2);

        $i11 = (int) $c3;

        if $i11 != 46 goto label08;

        $r12 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i4 = $i1 - 1;

        virtualinvoke $r12.<java.lang.StringBuilder: void setLength(int)>($i4);

        $r13 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r13.<org.apache.jena.atlas.io.PeekReader: void pushbackChar(int)>(46);

        z1 = 0;

        z6 = 0;

     label08:
        $r33 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r34 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>($r35);

        if z0 == 0 goto label09;

        $r9 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r8 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOUBLE>;

        virtualinvoke $r9.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r8);

        goto label11;

     label09:
        if z6 == 0 goto label10;

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r6 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DECIMAL>;

        virtualinvoke $r7.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r6);

        goto label11;

     label10:
        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token token>;

        $r4 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType INTEGER>;

        virtualinvoke $r5.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r4);

     label11:
        return;
    }

    private static void readHex(org.apache.jena.atlas.io.PeekReader, java.lang.StringBuilder)
    {
        java.lang.Object[] $r7;
        char $c1;
        org.apache.jena.atlas.io.PeekReader r0;
        int $i0, i2;
        java.lang.StringBuilder r1, $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @parameter0: org.apache.jena.atlas.io.PeekReader;

        r1 := @parameter1: java.lang.StringBuilder;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z0 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isHexChar(int)>($i0);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $c1 = (char) $i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label3:
        if i2 != 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No hex characters after ");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.jena.riot.tokens.TokenizerText: void exception(org.apache.jena.atlas.io.PeekReader,java.lang.String,java.lang.Object[])>(r0, $r6, $r7);

     label4:
        return;
    }

    private int readDigits(java.lang.StringBuilder)
    {
        char $c1;
        org.apache.jena.atlas.io.PeekReader $r1, $r2;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0, i2;
        java.lang.StringBuilder r3;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r3 := @parameter0: java.lang.StringBuilder;

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z0 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean range(int,char,char)>($i0, 48, 57);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $c1 = (char) $i0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label3:
        return i2;
    }

    private void readPossibleSign(java.lang.StringBuilder)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0;
        java.lang.StringBuilder r3;
        char $c1;
        org.apache.jena.atlas.io.PeekReader $r1, $r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r3 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i0 == 45 goto label1;

        if $i0 != 43 goto label2;

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $c1 = (char) $i0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label2:
        return;
    }

    private boolean threeQuotes(int)
    {
        org.apache.jena.atlas.io.PeekReader $r1, $r2, $r3, $r4, $r5;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0, i1, $i2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i0 == i1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i2 = virtualinvoke $r3.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i2 == i1 goto label2;

        $r5 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.PeekReader: void pushbackChar(int)>($i0);

        return 0;

     label2:
        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        return 1;
    }

    private boolean exponent(java.lang.StringBuilder)
    {
        java.lang.Object[] $r8;
        char $c1;
        org.apache.jena.atlas.io.PeekReader $r1, $r2;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0, $i2;
        java.lang.StringBuilder r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r3 := @parameter0: java.lang.StringBuilder;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i0 == 101 goto label1;

        if $i0 == 69 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $c1 = (char) $i0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void readPossibleSign(java.lang.StringBuilder)>(r3);

        $i2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readDigits(java.lang.StringBuilder)>(r3);

        if $i2 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed double: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r7, $r8);

     label2:
        return 1;
    }

    private java.lang.String langTag()
    {
        java.lang.Object[] $r11, $r12;
        org.apache.jena.atlas.io.PeekReader $r6, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5;
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void a2z(java.lang.StringBuilder)>($r2);

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i0 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label1;

        $r12 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Bad language tag", $r12);

     label1:
        $r13 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i3 = virtualinvoke $r13.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        if $i3 != 45 goto label3;

        $r6 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r7 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r8 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i1 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        $r9 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void a2zN(java.lang.StringBuilder)>($r9);

        $r10 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $i2 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();

        if $i2 != $i1 goto label2;

        $r11 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Bad language tag", $r11);

     label2:
        goto label1;

     label3:
        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private void a2z(java.lang.StringBuilder)
    {
        char $c1;
        org.apache.jena.atlas.io.PeekReader $r1, $r2;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0;
        java.lang.StringBuilder $r3, r4;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r4 := @parameter0: java.lang.StringBuilder;

     label1:
        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z0 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isA2Z(int)>($i0);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c1 = (char) $i0;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label3;

     label2:
        return;

     label3:
        goto label1;
    }

    private void a2zN(java.lang.StringBuilder)
    {
        char $c1;
        org.apache.jena.atlas.io.PeekReader $r1, $r2;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0;
        java.lang.StringBuilder $r3, r4;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r4 := @parameter0: java.lang.StringBuilder;

     label1:
        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int peekChar()>();

        $z0 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean isA2ZN(int)>($i0);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: java.lang.StringBuilder stringBuilder>;

        $c1 = (char) $i0;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label3;

     label2:
        return;

     label3:
        goto label1;
    }

    private void insertCodepoint(java.lang.StringBuilder, int)
    {
        java.lang.Object[] $r2;
        char $c2;
        java.lang.Integer $r3;
        org.apache.jena.riot.tokens.TokenizerText r1;
        int i0, $i1;
        char[] $r4;
        java.lang.StringBuilder r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        $i1 = staticinvoke <java.lang.Character: int charCount(int)>(i0);

        if $i1 != 1 goto label1;

        $c2 = (char) i0;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label3;

     label1:
        $z0 = staticinvoke <java.lang.Character: boolean isDefined(int)>(i0);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);

        if $z1 != 0 goto label2;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        specialinvoke r1.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Illegal codepoint: 0x%04X", $r2);

     label2:
        $r4 = staticinvoke <java.lang.Character: char[] toChars(int)>(i0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r4);

     label3:
        return;
    }

    public long getColumn()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        long $l0;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: long getColNum()>();

        return $l0;
    }

    public long getLine()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        long $l0;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: long getLineNum()>();

        return $l0;
    }

    private void checkBlankNode(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r3.<org.apache.jena.riot.tokens.TokenChecker: void checkBlankNode(java.lang.String)>(r2);

     label1:
        return;
    }

    private void checkLiteralLang(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r4;
        java.lang.String r2, r3;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r4.<org.apache.jena.riot.tokens.TokenChecker: void checkLiteralLang(java.lang.String,java.lang.String)>(r2, r3);

     label1:
        return;
    }

    private void checkLiteralDT(java.lang.String, org.apache.jena.riot.tokens.Token)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r4;
        java.lang.String r2;
        org.apache.jena.riot.tokens.Token r3;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r4.<org.apache.jena.riot.tokens.TokenChecker: void checkLiteralDT(java.lang.String,org.apache.jena.riot.tokens.Token)>(r2, r3);

     label1:
        return;
    }

    private void checkString(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r3.<org.apache.jena.riot.tokens.TokenChecker: void checkString(java.lang.String)>(r2);

     label1:
        return;
    }

    private void checkURI(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r3.<org.apache.jena.riot.tokens.TokenChecker: void checkURI(java.lang.String)>(r2);

     label1:
        return;
    }

    private void checkNumber(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r4;
        java.lang.String r2, r3;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r4.<org.apache.jena.riot.tokens.TokenChecker: void checkNumber(java.lang.String,java.lang.String)>(r2, r3);

     label1:
        return;
    }

    private void checkVariable(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r3.<org.apache.jena.riot.tokens.TokenChecker: void checkVariable(java.lang.String)>(r2);

     label1:
        return;
    }

    private void checkDirective(int)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r2;
        int i0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r2.<org.apache.jena.riot.tokens.TokenChecker: void checkDirective(int)>(i0);

     label1:
        return;
    }

    private void checkKeyword(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r3.<org.apache.jena.riot.tokens.TokenChecker: void checkKeyword(java.lang.String)>(r2);

     label1:
        return;
    }

    private void checkPrefixedName(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r4;
        java.lang.String r2, r3;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r4.<org.apache.jena.riot.tokens.TokenChecker: void checkPrefixedName(java.lang.String,java.lang.String)>(r2, r3);

     label1:
        return;
    }

    private void checkControl(int)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.TokenChecker $r1, $r2;
        int i0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.TokenChecker checker>;

        interfaceinvoke $r2.<org.apache.jena.riot.tokens.TokenChecker: void checkControl(int)>(i0);

     label1:
        return;
    }

    private final int readLiteralEscape()
    {
        java.lang.Object[] $r2, $r5;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.lang.Integer $r3, $r4;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $i4 = (int) -1;

        if $i0 != $i4 goto label01;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Escape sequence not completed", $r5);

     label01:
        lookupswitch($i0)
        {
            case 34: goto label07;
            case 39: goto label08;
            case 85: goto label11;
            case 92: goto label09;
            case 98: goto label06;
            case 102: goto label05;
            case 110: goto label02;
            case 114: goto label03;
            case 116: goto label04;
            case 117: goto label10;
            default: goto label12;
        };

     label02:
        return 10;

     label03:
        return 13;

     label04:
        return 9;

     label05:
        return 12;

     label06:
        return 8;

     label07:
        return 34;

     label08:
        return 39;

     label09:
        return 92;

     label10:
        $i1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicode4Escape()>();

        return $i1;

     label11:
        $i2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicode8Escape()>();

        return $i2;

     label12:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r4;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("illegal escape sequence value: %c (0x%02X)", $r2);

        return 0;
    }

    private final int readCharEscape()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.Object[] $r2, $r4;
        int $i0, $i2;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.lang.Integer $r3;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Escape sequence not completed", $r4);

     label1:
        lookupswitch($i0)
        {
            case 33: goto label2;
            case 35: goto label2;
            case 36: goto label2;
            case 37: goto label2;
            case 38: goto label2;
            case 39: goto label2;
            case 40: goto label2;
            case 41: goto label2;
            case 42: goto label2;
            case 43: goto label2;
            case 44: goto label2;
            case 45: goto label2;
            case 46: goto label2;
            case 47: goto label2;
            case 59: goto label2;
            case 61: goto label2;
            case 63: goto label2;
            case 64: goto label2;
            case 95: goto label2;
            case 126: goto label2;
            default: goto label3;
        };

     label2:
        return $i0;

     label3:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("illegal character escape value: \\%c", $r2);

        return 0;
    }

    private final int readUnicodeEscape()
    {
        java.lang.Object[] $r2, $r5;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.lang.Integer $r3, $r4;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Broken escape sequence", $r5);

     label1:
        lookupswitch($i0)
        {
            case 85: goto label4;
            case 92: goto label2;
            case 117: goto label3;
            default: goto label5;
        };

     label2:
        return 92;

     label3:
        $i1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicode4Escape()>();

        return $i1;

     label4:
        $i2 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readUnicode8Escape()>();

        return $i2;

     label5:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r4;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("illegal escape sequence value: %c (0x%02X)", $r2);

        return 0;
    }

    private final int readUnicode4Escape()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $i0 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readHexSequence(int)>(4);

        return $i0;
    }

    private final int readUnicode8Escape()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $i0 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readHexSequence(int)>(8);

        if $i0 <= 1114111 goto label1;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("illegal code point in \\U sequence value: 0x%08X", $r1);

     label1:
        return $i0;
    }

    private final int readHexSequence(int)
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        int i0, $i1, $i2, i3, i4, $i6;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        i0 := @parameter0: int;

        i3 = 0;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $i1 = specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: int readHexChar()>();

        if $i1 >= 0 goto label2;

        $i6 = (int) -1;

        return $i6;

     label2:
        $i2 = i3 << 4;

        i3 = $i2 + $i1;

        i4 = i4 + 1;

        goto label1;

     label3:
        return i3;
    }

    private final int readHexChar()
    {
        java.lang.Object[] $r6, $r7;
        char $c2;
        org.apache.jena.atlas.io.PeekReader $r1;
        org.apache.jena.riot.tokens.TokenizerText r0;
        int $i0, $i1, $i4, $i6, $i8;
        java.lang.StringBuilder $r3, $r4, $r8;
        java.lang.String $r5;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $r7 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>("Not a hexadecimal character (end of file)", $r7);

     label1:
        $i1 = staticinvoke <org.apache.jena.riot.system.RiotChars: int valHexChar(int)>($i0);

        $i6 = (int) -1;

        if $i1 == $i6 goto label2;

        return $i1;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a hexadecimal character: ");

        $c2 = (char) $i0;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r5, $r6);

        $i8 = (int) -1;

        return $i8;
    }

    private boolean expect(java.lang.String)
    {
        java.lang.Object[] $r9, $r14;
        org.apache.jena.atlas.io.PeekReader $r2, $r3;
        int $i0, $i2, i3, $i4;
        java.lang.String r0, $r8, $r13;
        boolean $z0;
        char $c1;
        org.apache.jena.riot.tokens.TokenizerText r1;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r12, $r15, $r16;

        r1 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r0 := @parameter0: java.lang.String;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $r2 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $z0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: boolean eof()>();

        if $z0 == 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End of input during expected string: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        specialinvoke r1.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r13, $r14);

        return 0;

     label2:
        $r3 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $i2 = virtualinvoke $r3.<org.apache.jena.atlas.io.PeekReader: int readChar()>();

        $i4 = (int) $c1;

        if $i2 == $i4 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        specialinvoke r1.<org.apache.jena.riot.tokens.TokenizerText: void exception(java.lang.String,java.lang.Object[])>($r8, $r9);

        return 0;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return 1;
    }

    private transient void exception(java.lang.String, java.lang.Object[])
    {
        org.apache.jena.riot.tokens.TokenizerText r1;
        java.lang.Object[] r4;
        long $l0, $l1;
        java.lang.String r0;
        org.apache.jena.atlas.io.PeekReader $r2, $r3;

        r1 := @this: org.apache.jena.riot.tokens.TokenizerText;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object[];

        $r2 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l0 = virtualinvoke $r2.<org.apache.jena.atlas.io.PeekReader: long getLineNum()>();

        $r3 = r1.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.atlas.io.PeekReader reader>;

        $l1 = virtualinvoke $r3.<org.apache.jena.atlas.io.PeekReader: long getColNum()>();

        staticinvoke <org.apache.jena.riot.tokens.TokenizerText: void exception$(java.lang.String,long,long,java.lang.Object[])>(r0, $l0, $l1, r4);

        return;
    }

    private static transient void exception(org.apache.jena.atlas.io.PeekReader, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        long $l0, $l1;
        java.lang.String r0;
        org.apache.jena.atlas.io.PeekReader r1;

        r1 := @parameter0: org.apache.jena.atlas.io.PeekReader;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $l0 = virtualinvoke r1.<org.apache.jena.atlas.io.PeekReader: long getLineNum()>();

        $l1 = virtualinvoke r1.<org.apache.jena.atlas.io.PeekReader: long getColNum()>();

        staticinvoke <org.apache.jena.riot.tokens.TokenizerText: void exception$(java.lang.String,long,long,java.lang.Object[])>(r0, $l0, $l1, r2);

        return;
    }

    private static transient void exception$(java.lang.String, long, long, java.lang.Object[])
    {
        java.lang.Object[] r2;
        long l0, l1;
        java.lang.String r1, $r3;
        org.apache.jena.riot.RiotParseException $r0;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.lang.Object[];

        $r0 = new org.apache.jena.riot.RiotParseException;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<org.apache.jena.riot.RiotParseException: void <init>(java.lang.String,long,long)>($r3, l0, l1);

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.apache.jena.riot.tokens.TokenizerText r0;
        org.apache.jena.riot.tokens.Token $r1;

        r0 := @this: org.apache.jena.riot.tokens.TokenizerText;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token next()>();

        return $r1;
    }

    static void <clinit>()
    {
        char[] $r0, $r1;

        <org.apache.jena.riot.tokens.TokenizerText: boolean VeryVeryLax> = 0;

        <org.apache.jena.riot.tokens.TokenizerText: int CTRL_CHAR> = 42;

        <org.apache.jena.riot.tokens.TokenizerText: boolean Checking> = 0;

        $r0 = newarray (char)[3];

        $r0[0] = 95;

        $r0[1] = 46;

        $r0[2] = 45;

        <org.apache.jena.riot.tokens.TokenizerText: char[] extraCharsWord> = $r0;

        $r1 = newarray (char)[6];

        $r1[0] = 95;

        $r1[1] = 46;

        $r1[2] = 45;

        $r1[3] = 63;

        $r1[4] = 64;

        $r1[5] = 43;

        <org.apache.jena.riot.tokens.TokenizerText: char[] extraCharsVar> = $r1;

        return;
    }
}
