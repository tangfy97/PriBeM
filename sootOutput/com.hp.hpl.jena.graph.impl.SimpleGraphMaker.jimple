public class com.hp.hpl.jena.graph.impl.SimpleGraphMaker extends com.hp.hpl.jena.graph.impl.BaseGraphMaker
{
    private java.util.Map graphs;

    public void <init>()
    {
        java.util.HashMap $r1;
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.BaseGraphMaker: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs> = $r1;

        return;
    }

    public com.hp.hpl.jena.graph.Graph create()
    {
        com.hp.hpl.jena.graph.Graph $r0;
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r1;

        r1 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        $r0 = staticinvoke <com.hp.hpl.jena.graph.Factory: com.hp.hpl.jena.graph.Graph createGraphMem()>();

        return $r0;
    }

    public com.hp.hpl.jena.graph.Graph createGraph(java.lang.String, boolean)
    {
        com.hp.hpl.jena.shared.AlreadyExistsException $r6;
        java.util.Map $r2, $r8;
        java.lang.Object $r3;
        java.lang.String r1;
        com.hp.hpl.jena.mem.GraphMemBase r4, $r5;
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;
        com.hp.hpl.jena.graph.Graph $r7;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.hp.hpl.jena.mem.GraphMemBase) $r3;

        if r4 != null goto label1;

        $r7 = staticinvoke <com.hp.hpl.jena.graph.Factory: com.hp.hpl.jena.graph.Graph createGraphMem()>();

        $r8 = r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        return $r7;

     label1:
        if z0 == 0 goto label2;

        $r6 = new com.hp.hpl.jena.shared.AlreadyExistsException;

        specialinvoke $r6.<com.hp.hpl.jena.shared.AlreadyExistsException: void <init>(java.lang.String)>(r1);

        throw $r6;

     label2:
        $r5 = virtualinvoke r4.<com.hp.hpl.jena.mem.GraphMemBase: com.hp.hpl.jena.mem.GraphMemBase openAgain()>();

        return $r5;
    }

    public com.hp.hpl.jena.graph.Graph openGraph(java.lang.String, boolean)
    {
        com.hp.hpl.jena.shared.DoesNotExistException $r7;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        com.hp.hpl.jena.mem.GraphMemBase r4, $r5;
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;
        com.hp.hpl.jena.graph.Graph $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.hp.hpl.jena.mem.GraphMemBase) $r3;

        if r4 != null goto label2;

        if z0 == 0 goto label1;

        $r7 = new com.hp.hpl.jena.shared.DoesNotExistException;

        specialinvoke $r7.<com.hp.hpl.jena.shared.DoesNotExistException: void <init>(java.lang.String)>(r1);

        throw $r7;

     label1:
        $r6 = virtualinvoke r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: com.hp.hpl.jena.graph.Graph createGraph(java.lang.String,boolean)>(r1, 1);

        return $r6;

     label2:
        $r5 = virtualinvoke r4.<com.hp.hpl.jena.mem.GraphMemBase: com.hp.hpl.jena.mem.GraphMemBase openAgain()>();

        return $r5;
    }

    public com.hp.hpl.jena.graph.Graph openGraph()
    {
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: com.hp.hpl.jena.graph.Graph getGraph()>();

        return $r1;
    }

    public void removeGraph(java.lang.String)
    {
        com.hp.hpl.jena.shared.DoesNotExistException $r4;
        java.util.Map $r2, $r3;
        java.lang.String r1;
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new com.hp.hpl.jena.shared.DoesNotExistException;

        specialinvoke $r4.<com.hp.hpl.jena.shared.DoesNotExistException: void <init>(java.lang.String)>(r1);

        throw $r4;

     label1:
        $r3 = r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public boolean hasGraph(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r1;
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public void close()
    {
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        return;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listGraphs()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;
        com.hp.hpl.jena.graph.impl.SimpleGraphMaker r0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleGraphMaker;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleGraphMaker: java.util.Map graphs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r3);

        return $r4;
    }
}
