final class org.springframework.core.convert.support.CollectionToArrayConverter extends java.lang.Object implements org.springframework.core.convert.converter.ConditionalGenericConverter
{
    private final org.springframework.core.convert.ConversionService conversionService;

    public void <init>(org.springframework.core.convert.ConversionService)
    {
        org.springframework.core.convert.ConversionService r1;
        org.springframework.core.convert.support.CollectionToArrayConverter r0;

        r0 := @this: org.springframework.core.convert.support.CollectionToArrayConverter;

        r1 := @parameter0: org.springframework.core.convert.ConversionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.CollectionToArrayConverter: org.springframework.core.convert.ConversionService conversionService> = r1;

        return;
    }

    public java.util.Set getConvertibleTypes()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair $r0;
        java.util.Set $r1;
        org.springframework.core.convert.support.CollectionToArrayConverter r2;

        r2 := @this: org.springframework.core.convert.support.CollectionToArrayConverter;

        $r0 = new org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        specialinvoke $r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>(class "Ljava/util/Collection;", class "[Ljava/lang/Object;");

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        return $r1;
    }

    public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.TypeDescriptor r0, $r1, r2, $r3;
        org.springframework.core.convert.ConversionService $r5;
        org.springframework.core.convert.support.CollectionToArrayConverter r4;
        boolean $z0;

        r4 := @this: org.springframework.core.convert.support.CollectionToArrayConverter;

        r0 := @parameter0: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        $r1 = virtualinvoke r0.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>();

        $r3 = virtualinvoke r2.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>();

        $r5 = r4.<org.springframework.core.convert.support.CollectionToArrayConverter: org.springframework.core.convert.ConversionService conversionService>;

        $z0 = staticinvoke <org.springframework.core.convert.support.ConversionUtils: boolean canConvertElements(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.ConversionService)>($r1, $r3, $r5);

        return $z0;
    }

    public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.TypeDescriptor r2, r8, $r10, $r11;
        int $i0, $i1, i2;
        org.springframework.core.convert.ConversionService $r9;
        boolean $z0;
        java.util.Iterator $r5;
        java.util.Collection r1;
        org.springframework.core.convert.support.CollectionToArrayConverter r7;
        java.lang.Object r0, $r4, $r6, $r12;
        java.lang.Class $r3;

        r7 := @this: org.springframework.core.convert.support.CollectionToArrayConverter;

        r0 := @parameter0: java.lang.Object;

        r8 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = (java.util.Collection) r0;

        $r3 = virtualinvoke r2.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getElementType()>();

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i0);

        i2 = 0;

        $r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r9 = r7.<org.springframework.core.convert.support.CollectionToArrayConverter: org.springframework.core.convert.ConversionService conversionService>;

        $r10 = virtualinvoke r8.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>($r6);

        $r11 = virtualinvoke r2.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>();

        $r12 = interfaceinvoke $r9.<org.springframework.core.convert.ConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>($r6, $r10, $r11);

        $i1 = i2;

        i2 = i2 + 1;

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r4, $i1, $r12);

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r4;
    }
}
