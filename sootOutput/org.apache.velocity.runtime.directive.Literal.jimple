public class org.apache.velocity.runtime.directive.Literal extends org.apache.velocity.runtime.directive.Directive
{
    java.lang.String literalText;

    public void <init>()
    {
        org.apache.velocity.runtime.directive.Literal r0;

        r0 := @this: org.apache.velocity.runtime.directive.Literal;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        org.apache.velocity.runtime.directive.Literal r0;

        r0 := @this: org.apache.velocity.runtime.directive.Literal;

        return "literal";
    }

    public int getType()
    {
        org.apache.velocity.runtime.directive.Literal r0;

        r0 := @this: org.apache.velocity.runtime.directive.Literal;

        return 1;
    }

    public boolean isScopeProvided()
    {
        org.apache.velocity.runtime.directive.Literal r0;

        r0 := @this: org.apache.velocity.runtime.directive.Literal;

        return 0;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices, org.apache.velocity.context.InternalContextAdapter, org.apache.velocity.runtime.parser.node.Node) throws org.apache.velocity.exception.TemplateInitException
    {
        org.apache.velocity.runtime.directive.Literal r0;
        org.apache.velocity.runtime.RuntimeServices r1;
        org.apache.velocity.context.InternalContextAdapter r2;
        java.lang.String $r5;
        org.apache.velocity.runtime.parser.node.Node r3, $r4;

        r0 := @this: org.apache.velocity.runtime.directive.Literal;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r2 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        r3 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void init(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node)>(r1, r2, r3);

        $r4 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.velocity.runtime.parser.node.Node: java.lang.String literal()>();

        r0.<org.apache.velocity.runtime.directive.Literal: java.lang.String literalText> = $r5;

        return;
    }

    public boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer, org.apache.velocity.runtime.parser.node.Node) throws java.io.IOException
    {
        org.apache.velocity.runtime.directive.Literal r1;
        org.apache.velocity.context.InternalContextAdapter r3;
        java.io.Writer r0;
        java.lang.String $r2;
        org.apache.velocity.runtime.parser.node.Node r4;

        r1 := @this: org.apache.velocity.runtime.directive.Literal;

        r3 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r0 := @parameter1: java.io.Writer;

        r4 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        $r2 = r1.<org.apache.velocity.runtime.directive.Literal: java.lang.String literalText>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r2);

        return 1;
    }
}
