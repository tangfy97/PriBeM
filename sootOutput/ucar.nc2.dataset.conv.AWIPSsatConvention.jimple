public class ucar.nc2.dataset.conv.AWIPSsatConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    private static final boolean debugProj;
    private ucar.nc2.dataset.ProjectionCT projCT;
    private double startx;
    private double starty;
    private double dx;
    private double dy;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        ucar.nc2.Dimension $r8, $r9;
        ucar.nc2.Variable $r10;
        ucar.nc2.NetcdfFile r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("projName");

        if null == $r1 goto label1;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("lon00");

        if null == $r2 goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("lat00");

        if null == $r3 goto label1;

        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("lonNxNy");

        if null == $r4 goto label1;

        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("latNxNy");

        if null == $r5 goto label1;

        $r6 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("centralLon");

        if null == $r6 goto label1;

        $r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("centralLat");

        if null == $r7 goto label1;

        $r8 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("x");

        if null == $r8 goto label1;

        $r9 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("y");

        if null == $r9 goto label1;

        $r10 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("image");

        if null == $r10 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.AWIPSsatConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT> = null;

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: java.lang.String conventionName> = "AWIPS-Sat";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.dataset.conv.AWIPSsatConvention r5;
        ucar.nc2.dataset.CoordinateAxis $r6, $r7;
        ucar.nc2.util.CancelTask r20;
        int $i0, $i1;
        ucar.nc2.Variable $r1, $r8;
        java.lang.String $r4, $r9;
        boolean $z0, $z1;
        ucar.ma2.ArrayByte$D1 $r10;
        ucar.nc2.dataset.VariableDS $r15;
        ucar.nc2.dataset.ProjectionCT $r13, $r14, $r18, $r19;
        ucar.nc2.Attribute $r11, $r12, $r16, $r17;
        ucar.nc2.Dimension $r2, $r3;
        ucar.nc2.dataset.NetcdfDataset r0;

        r5 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r20 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x");

        if null == $r1 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("x");

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("y");

        $i1 = virtualinvoke $r3.<ucar.nc2.Dimension: int getLength()>();

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "projName", "none");

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LAMBERT_CONFORMAL");

        if $z0 == 0 goto label2;

        $r19 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT makeLCProjection(ucar.nc2.dataset.NetcdfDataset,java.lang.String,int,int)>(r0, $r4, $i0, $i1);

        r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r19;

     label2:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MERCATOR");

        if $z1 == 0 goto label3;

        $r18 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT makeMercatorProjection(ucar.nc2.dataset.NetcdfDataset,java.lang.String,int,int)>(r0, $r4, $i0, $i1);

        r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r18;

     label3:
        $r6 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i0, "x");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r6);

        $r7 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i1, "y");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r7);

        $r8 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("image");

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "channel", null);

        if null == $r9 goto label4;

        $r17 = new ucar.nc2.Attribute;

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r9);

        virtualinvoke $r8.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r17);

     label4:
        $r10 = new ucar.ma2.ArrayByte$D1;

        specialinvoke $r10.<ucar.ma2.ArrayByte$D1: void <init>(int)>(2);

        virtualinvoke $r10.<ucar.ma2.ArrayByte$D1: void set(int,byte)>(0, 0);

        virtualinvoke $r10.<ucar.ma2.ArrayByte$D1: void set(int,byte)>(1, -127);

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>("missing_values", $r10);

        virtualinvoke $r8.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_Unsigned", "true");

        virtualinvoke $r8.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

        $r13 = r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r13 == null goto label5;

        $r14 = r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r15 = virtualinvoke r5.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r0, $r14);

        $r16 = new ucar.nc2.Attribute;

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "x y");

        virtualinvoke $r15.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r15);

     label5:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.AWIPSsatConvention r15;
        ucar.nc2.constants.AxisType $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r4, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.Dimension $r3;
        ucar.nc2.dataset.NetcdfDataset r16;

        r15 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r16 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r1 = (ucar.nc2.Variable) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 == 0 goto label1;

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r14;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z1 == 0 goto label2;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r13;

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z2 == 0 goto label3;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r12;

     label3:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z3 == 0 goto label4;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r11;

     label4:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("record");

        if $z4 == 0 goto label5;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r10;

     label5:
        $r3 = virtualinvoke r1.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r3 == null goto label6;

        $r8 = virtualinvoke $r3.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("record");

        if $z7 == 0 goto label6;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r9;

     label6:
        $r4 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getUnitsString()>();

        if $r4 == null goto label8;

        $z5 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", $r4);

        if $z5 == 0 goto label7;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        return $r7;

     label7:
        $z6 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r4);

        if $z6 == 0 goto label8;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r6;

     label8:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r5;
    }

    protected void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.conv.AWIPSsatConvention r0;
        ucar.nc2.dataset.ProjectionCT $r1, $r3, $r6;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess $r5;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.ProjectionCT: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.CoordSysBuilder$VarProcess findVarProcess(java.lang.String)>($r4);

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateTransform> = 1;

        $r6 = r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.dataset.CoordinateTransform ct> = $r6;

     label1:
        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r2);

        return;
    }

    private ucar.nc2.dataset.ProjectionCT makeLCProjection(ucar.nc2.dataset.NetcdfDataset, java.lang.String, int, int) throws java.util.NoSuchElementException
    {
        ucar.unidata.geoloc.ProjectionPointImpl r5, r8;
        ucar.nc2.dataset.conv.AWIPSsatConvention r0;
        int i0, i1;
        java.lang.String r10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        ucar.unidata.geoloc.ProjectionPoint $r4, $r7;
        ucar.nc2.dataset.ProjectionCT $r9;
        ucar.unidata.geoloc.projection.LambertConformal $r2;
        ucar.unidata.geoloc.LatLonPointImpl $r3, $r6;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r10 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLat");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLon");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "rotation");

        $r2 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d2, $d1, $d0, $d0);

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lat00");

        $d4 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lon00");

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d3, $d4);

        $r4 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.LambertConformal: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r3);

        r5 = (ucar.unidata.geoloc.ProjectionPointImpl) $r4;

        $d5 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double startx> = $d5;

        $d6 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double starty> = $d6;

        $d7 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "latNxNy");

        $d8 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lonNxNy");

        $r6 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d7, $d8);

        $r7 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.LambertConformal: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r6);

        r8 = (ucar.unidata.geoloc.ProjectionPointImpl) $r7;

        $d9 = virtualinvoke r8.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d10 = r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double startx>;

        $d12 = $d9 - $d10;

        $d11 = (double) i0;

        $d13 = $d12 / $d11;

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double dx> = $d13;

        $d14 = virtualinvoke r8.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $d15 = r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double starty>;

        $d17 = $d14 - $d15;

        $d16 = (double) i1;

        $d18 = $d17 / $d16;

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double dy> = $d18;

        $r9 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r9.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>(r10, "FGDC", $r2);

        return $r9;
    }

    private ucar.nc2.dataset.ProjectionCT makeMercatorProjection(ucar.nc2.dataset.NetcdfDataset, java.lang.String, int, int) throws java.util.NoSuchElementException
    {
        ucar.nc2.dataset.conv.AWIPSsatConvention r0;
        ucar.unidata.geoloc.projection.Mercator $r2;
        ucar.unidata.geoloc.ProjectionPointImpl r5, r8;
        int i0, i1;
        java.lang.String r10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        ucar.unidata.geoloc.ProjectionPoint $r4, $r7;
        ucar.nc2.dataset.ProjectionCT $r9;
        ucar.unidata.geoloc.LatLonPointImpl $r3, $r6;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r10 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLat");

        specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLon");

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "latDxDy");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lonDxDy");

        $r2 = new ucar.unidata.geoloc.projection.Mercator;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double)>($d1, $d0);

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lat00");

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lon00");

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d2, $d3);

        $r4 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r3);

        r5 = (ucar.unidata.geoloc.ProjectionPointImpl) $r4;

        $d4 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double startx> = $d4;

        $d5 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double starty> = $d5;

        $d6 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "latNxNy");

        $d7 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lonNxNy");

        $r6 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d6, $d7);

        $r7 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.Mercator: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r6);

        r8 = (ucar.unidata.geoloc.ProjectionPointImpl) $r7;

        $d8 = virtualinvoke r8.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d9 = r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double startx>;

        $d11 = $d8 - $d9;

        $d10 = (double) i0;

        $d12 = $d11 / $d10;

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double dx> = $d12;

        $d13 = virtualinvoke r8.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $d14 = r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double starty>;

        $d16 = $d13 - $d14;

        $d15 = (double) i1;

        $d17 = $d16 / $d15;

        r0.<ucar.nc2.dataset.conv.AWIPSsatConvention: double dy> = $d17;

        $r9 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r9.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>(r10, "FGDC", $r2);

        return $r9;
    }

    private ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset, int, java.lang.String)
    {
        java.lang.Object[] $r5, $r8;
        ucar.nc2.dataset.conv.AWIPSsatConvention r4;
        ucar.ma2.DataType $r3;
        java.util.Formatter $r6, $r7, $r9;
        ucar.nc2.dataset.CoordinateAxis1D $r0;
        int i0;
        java.lang.String r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1;

        r4 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r0 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r0.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, $r3, r2, "km", "x on projection");

        $d1 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: double startx>;

        $d0 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: double dx>;

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r0, i0, $d1, $d0);

        $r6 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: java.util.Formatter parseInfo>;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created X Coordinate Axis = ", $r5);

        $r7 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r0.<ucar.nc2.dataset.CoordinateAxis: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r7, 1, 0);

        $r9 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: java.util.Formatter parseInfo>;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r8);

        return $r0;
    }

    private ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset, int, java.lang.String)
    {
        java.lang.Object[] $r5, $r8;
        ucar.nc2.dataset.conv.AWIPSsatConvention r4;
        ucar.ma2.DataType $r3;
        java.util.Formatter $r6, $r7, $r9;
        ucar.nc2.dataset.CoordinateAxis1D $r0;
        int i0;
        java.lang.String r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1;

        r4 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r0 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r0.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, $r3, r2, "km", "y on projection");

        $d1 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: double starty>;

        $d0 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: double dy>;

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r0, i0, $d1, $d0);

        $r6 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: java.util.Formatter parseInfo>;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created Y Coordinate Axis = ", $r5);

        $r7 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r0.<ucar.nc2.dataset.CoordinateAxis: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r7, 1, 0);

        $r9 = r4.<ucar.nc2.dataset.conv.AWIPSsatConvention: java.util.Formatter parseInfo>;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r8);

        return $r0;
    }

    private double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.nc2.Attribute $r2;
        ucar.nc2.dataset.conv.AWIPSsatConvention r4;
        java.lang.String r1;
        java.lang.Number $r3;
        ucar.nc2.dataset.NetcdfDataset r0;
        double $d0;

        r4 := @this: ucar.nc2.dataset.conv.AWIPSsatConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    public static void <clinit>()
    {
        <ucar.nc2.dataset.conv.AWIPSsatConvention: boolean debugProj> = 0;

        return;
    }
}
