public class org.waveprotocol.box.server.persistence.AttachmentUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.box.server.persistence.AttachmentUtil r0;

        r0 := @this: org.waveprotocol.box.server.persistence.AttachmentUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeTo(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        int $i0, $i2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        r0 = newarray (byte)[256];

     label1:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i0);

        goto label1;

     label2:
        return;
    }

    public static java.lang.String writeAttachmentDataToString(org.waveprotocol.box.server.persistence.AttachmentStore$AttachmentData, java.lang.String) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r0;
        org.waveprotocol.box.server.persistence.AttachmentStore$AttachmentData r1;
        java.lang.String r2, $r3;

        r1 := @parameter0: org.waveprotocol.box.server.persistence.AttachmentStore$AttachmentData;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        interfaceinvoke r1.<org.waveprotocol.box.server.persistence.AttachmentStore$AttachmentData: void writeDataTo(java.io.OutputStream)>($r0);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>(r2);

        return $r3;
    }
}
