public class org.apache.commons.collections.functors.IfClosure extends java.lang.Object implements org.apache.commons.collections.Closure, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections.Predicate iPredicate;
    private final org.apache.commons.collections.Closure iTrueClosure;
    private final org.apache.commons.collections.Closure iFalseClosure;

    public static org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure)
    {
        org.apache.commons.collections.Predicate r0;
        org.apache.commons.collections.Closure r1, $r2, $r3;

        r0 := @parameter0: org.apache.commons.collections.Predicate;

        r1 := @parameter1: org.apache.commons.collections.Closure;

        $r2 = <org.apache.commons.collections.functors.NOPClosure: org.apache.commons.collections.Closure INSTANCE>;

        $r3 = staticinvoke <org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate,org.apache.commons.collections.Closure,org.apache.commons.collections.Closure)>(r0, r1, $r2);

        return $r3;
    }

    public static org.apache.commons.collections.Closure getInstance(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure)
    {
        org.apache.commons.collections.Predicate r0;
        org.apache.commons.collections.Closure r1, r3;
        java.lang.IllegalArgumentException $r2, $r5;
        org.apache.commons.collections.functors.IfClosure $r4;

        r0 := @parameter0: org.apache.commons.collections.Predicate;

        r1 := @parameter1: org.apache.commons.collections.Closure;

        r3 := @parameter2: org.apache.commons.collections.Closure;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r5;

     label1:
        if r1 == null goto label2;

        if r3 != null goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Closures must not be null");

        throw $r2;

     label3:
        $r4 = new org.apache.commons.collections.functors.IfClosure;

        specialinvoke $r4.<org.apache.commons.collections.functors.IfClosure: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Closure,org.apache.commons.collections.Closure)>(r0, r1, r3);

        return $r4;
    }

    public void <init>(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure)
    {
        org.apache.commons.collections.Predicate r1;
        org.apache.commons.collections.functors.IfClosure r0;
        org.apache.commons.collections.Closure r2, $r3;

        r0 := @this: org.apache.commons.collections.functors.IfClosure;

        r1 := @parameter0: org.apache.commons.collections.Predicate;

        r2 := @parameter1: org.apache.commons.collections.Closure;

        $r3 = <org.apache.commons.collections.functors.NOPClosure: org.apache.commons.collections.Closure INSTANCE>;

        specialinvoke r0.<org.apache.commons.collections.functors.IfClosure: void <init>(org.apache.commons.collections.Predicate,org.apache.commons.collections.Closure,org.apache.commons.collections.Closure)>(r1, r2, $r3);

        return;
    }

    public void <init>(org.apache.commons.collections.Predicate, org.apache.commons.collections.Closure, org.apache.commons.collections.Closure)
    {
        org.apache.commons.collections.Predicate r1;
        org.apache.commons.collections.functors.IfClosure r0;
        org.apache.commons.collections.Closure r2, r3;

        r0 := @this: org.apache.commons.collections.functors.IfClosure;

        r1 := @parameter0: org.apache.commons.collections.Predicate;

        r2 := @parameter1: org.apache.commons.collections.Closure;

        r3 := @parameter2: org.apache.commons.collections.Closure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Predicate iPredicate> = r1;

        r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Closure iTrueClosure> = r2;

        r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Closure iFalseClosure> = r3;

        return;
    }

    public void execute(java.lang.Object)
    {
        org.apache.commons.collections.Predicate $r2;
        java.lang.Object r1;
        org.apache.commons.collections.functors.IfClosure r0;
        org.apache.commons.collections.Closure $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.functors.IfClosure;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Predicate iPredicate>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.collections.Predicate: boolean evaluate(java.lang.Object)>(r1);

        if $z0 != 1 goto label1;

        $r4 = r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Closure iTrueClosure>;

        interfaceinvoke $r4.<org.apache.commons.collections.Closure: void execute(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Closure iFalseClosure>;

        interfaceinvoke $r3.<org.apache.commons.collections.Closure: void execute(java.lang.Object)>(r1);

     label2:
        return;
    }

    public org.apache.commons.collections.Predicate getPredicate()
    {
        org.apache.commons.collections.Predicate $r1;
        org.apache.commons.collections.functors.IfClosure r0;

        r0 := @this: org.apache.commons.collections.functors.IfClosure;

        $r1 = r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Predicate iPredicate>;

        return $r1;
    }

    public org.apache.commons.collections.Closure getTrueClosure()
    {
        org.apache.commons.collections.functors.IfClosure r0;
        org.apache.commons.collections.Closure $r1;

        r0 := @this: org.apache.commons.collections.functors.IfClosure;

        $r1 = r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Closure iTrueClosure>;

        return $r1;
    }

    public org.apache.commons.collections.Closure getFalseClosure()
    {
        org.apache.commons.collections.functors.IfClosure r0;
        org.apache.commons.collections.Closure $r1;

        r0 := @this: org.apache.commons.collections.functors.IfClosure;

        $r1 = r0.<org.apache.commons.collections.functors.IfClosure: org.apache.commons.collections.Closure iFalseClosure>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.functors.IfClosure: long serialVersionUID> = 3518477308466486130L;

        return;
    }
}
