public class org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry extends java.util.zip.ZipEntry
{
    private byte[] data;

    public void <init>(java.util.zip.ZipEntry, java.util.zip.ZipInputStream) throws java.io.IOException
    {
        byte[] $r5, $r7;
        java.util.zip.ZipInputStream r4;
        java.io.ByteArrayOutputStream r9, $r11, $r12;
        long $l0;
        byte $b1, $b2;
        int $i3, $i4, $i5, $i7;
        java.lang.String $r2;
        java.util.zip.ZipEntry r1;
        org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry r0;
        java.io.IOException $r10;

        r0 := @this: org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry;

        r1 := @parameter0: java.util.zip.ZipEntry;

        r4 := @parameter1: java.util.zip.ZipInputStream;

        $r2 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke r0.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r2);

        $l0 = virtualinvoke r1.<java.util.zip.ZipEntry: long getSize()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label2;

        $b2 = $l0 cmp 2147483647L;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("ZIP entry size is too large");

        throw $r10;

     label1:
        $r11 = new java.io.ByteArrayOutputStream;

        $i3 = (int) $l0;

        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>(int)>($i3);

        r9 = $r11;

        goto label3;

     label2:
        $r12 = new java.io.ByteArrayOutputStream;

        specialinvoke $r12.<java.io.ByteArrayOutputStream: void <init>()>();

        r9 = $r12;

     label3:
        $r7 = newarray (byte)[4096];

     label4:
        $i4 = virtualinvoke r4.<java.util.zip.ZipInputStream: int read(byte[])>($r7);

        $i7 = (int) -1;

        if $i4 == $i7 goto label5;

        virtualinvoke r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r7, 0, $i4);

        goto label4;

     label5:
        $r5 = virtualinvoke r9.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry: byte[] data> = $r5;

        return;
    }

    public java.io.InputStream getInputStream()
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r0;
        org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry r1;

        r1 := @this: org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = r1.<org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry: byte[] data>;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r0;
    }
}
