public interface  org.springframework.beans.factory.BeanFactory extends java.lang.Object
{
    public static final java.lang.String FACTORY_BEAN_PREFIX;

    public abstract java.lang.Object getBean(java.lang.String) throws org.springframework.beans.BeansException;

    public abstract java.lang.Object getBean(java.lang.String, java.lang.Class) throws org.springframework.beans.BeansException;

    public abstract java.lang.Object getBean(java.lang.Class) throws org.springframework.beans.BeansException;

    public abstract transient java.lang.Object getBean(java.lang.String, java.lang.Object[]) throws org.springframework.beans.BeansException;

    public abstract boolean containsBean(java.lang.String);

    public abstract boolean isSingleton(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

    public abstract boolean isPrototype(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

    public abstract boolean isTypeMatch(java.lang.String, java.lang.Class) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

    public abstract java.lang.Class getType(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

    public abstract java.lang.String[] getAliases(java.lang.String);

    public static void <clinit>()
    {
        <org.springframework.beans.factory.BeanFactory: java.lang.String FACTORY_BEAN_PREFIX> = "&";

        return;
    }
}
