class com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler extends com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler
{

    public void <init>(com.hp.hpl.jena.reasoner.BaseInfGraph)
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph r1;
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler r0;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.BaseInfGraph;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler: void <init>(com.hp.hpl.jena.graph.impl.GraphWithPerform)>(r1);

        return;
    }

    public void remove(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.GraphEventManager $r7;
        com.hp.hpl.jena.graph.GraphEvents $r9;
        com.hp.hpl.jena.graph.Node r4, r5, r6;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r1, $r8;
        com.hp.hpl.jena.reasoner.BaseInfGraph r2;
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler;

        r4 := @parameter0: com.hp.hpl.jena.graph.Node;

        r5 := @parameter1: com.hp.hpl.jena.graph.Node;

        r6 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r1 = r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        r2 = (com.hp.hpl.jena.reasoner.BaseInfGraph) $r1;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: com.hp.hpl.jena.graph.Graph getRawGraph()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: void remove(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r5, r6);

        virtualinvoke r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: void discardState()>();

        virtualinvoke r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: void rebind()>();

        $r7 = r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler: com.hp.hpl.jena.graph.GraphEventManager manager>;

        $r8 = r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        $r9 = staticinvoke <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents remove(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r5, r6);

        interfaceinvoke $r7.<com.hp.hpl.jena.graph.GraphEventManager: void notifyEvent(com.hp.hpl.jena.graph.Graph,java.lang.Object)>($r8, $r9);

        return;
    }

    public void removeAll()
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph r2;
        com.hp.hpl.jena.graph.GraphEventManager $r4;
        com.hp.hpl.jena.graph.GraphEvents $r5;
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler r0;
        com.hp.hpl.jena.graph.Graph $r3;
        com.hp.hpl.jena.graph.impl.GraphWithPerform $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler;

        $r1 = r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfBulkUpdateHandler: com.hp.hpl.jena.graph.impl.GraphWithPerform graph>;

        r2 = (com.hp.hpl.jena.reasoner.BaseInfGraph) $r1;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: com.hp.hpl.jena.graph.Graph getRawGraph()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: void clear()>();

        virtualinvoke r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: void discardState()>();

        virtualinvoke r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: void rebind()>();

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        $r5 = <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents removeAll>;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.GraphEventManager: void notifyEvent(com.hp.hpl.jena.graph.Graph,java.lang.Object)>(r2, $r5);

        return;
    }
}
