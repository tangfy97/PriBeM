final class com.google.inject.internal.TypeConverterBindingProcessor extends com.google.inject.internal.AbstractProcessor
{

    void <init>(com.google.inject.internal.Errors)
    {
        com.google.inject.internal.Errors r1;
        com.google.inject.internal.TypeConverterBindingProcessor r0;

        r0 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r1 := @parameter0: com.google.inject.internal.Errors;

        specialinvoke r0.<com.google.inject.internal.AbstractProcessor: void <init>(com.google.inject.internal.Errors)>(r1);

        return;
    }

    void prepareBuiltInConverters(com.google.inject.internal.InjectorImpl)
    {
        java.lang.Throwable $r14;
        com.google.inject.internal.InjectorImpl r1;
        com.google.inject.internal.TypeConverterBindingProcessor r0;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        com.google.inject.matcher.Matcher $r10;
        com.google.inject.internal.TypeConverterBindingProcessor$4 $r13;
        com.google.inject.internal.TypeConverterBindingProcessor$3 $r12;
        com.google.inject.internal.TypeConverterBindingProcessor$2 $r11;
        com.google.inject.internal.TypeConverterBindingProcessor$1 $r9;

        r0 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r1 := @parameter0: com.google.inject.internal.InjectorImpl;

        r0.<com.google.inject.internal.TypeConverterBindingProcessor: com.google.inject.internal.InjectorImpl injector> = r1;

     label1:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>($r2, class "Ljava/lang/Integer;");

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>($r3, class "Ljava/lang/Long;");

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>($r4, class "Ljava/lang/Boolean;");

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>($r5, class "Ljava/lang/Byte;");

        $r6 = <java.lang.Short: java.lang.Class TYPE>;

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>($r6, class "Ljava/lang/Short;");

        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>($r7, class "Ljava/lang/Float;");

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>($r8, class "Ljava/lang/Double;");

        $r9 = new com.google.inject.internal.TypeConverterBindingProcessor$1;

        specialinvoke $r9.<com.google.inject.internal.TypeConverterBindingProcessor$1: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>(r0);

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToClass(java.lang.Class,com.google.inject.spi.TypeConverter)>(class "Ljava/lang/Character;", $r9);

        $r10 = staticinvoke <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher subclassesOf(java.lang.Class)>(class "Ljava/lang/Enum;");

        $r11 = new com.google.inject.internal.TypeConverterBindingProcessor$2;

        specialinvoke $r11.<com.google.inject.internal.TypeConverterBindingProcessor$2: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>(r0);

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToClasses(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r10, $r11);

        $r12 = new com.google.inject.internal.TypeConverterBindingProcessor$3;

        specialinvoke $r12.<com.google.inject.internal.TypeConverterBindingProcessor$3: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>(r0);

        $r13 = new com.google.inject.internal.TypeConverterBindingProcessor$4;

        specialinvoke $r13.<com.google.inject.internal.TypeConverterBindingProcessor$4: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>(r0);

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void internalConvertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r12, $r13);

     label2:
        r0.<com.google.inject.internal.TypeConverterBindingProcessor: com.google.inject.internal.InjectorImpl injector> = null;

        goto label5;

     label3:
        $r14 := @caughtexception;

     label4:
        r0.<com.google.inject.internal.TypeConverterBindingProcessor: com.google.inject.internal.InjectorImpl injector> = null;

        throw $r14;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void convertToPrimitiveType(java.lang.Class, java.lang.Class)
    {
        java.lang.NoSuchMethodException $r12;
        java.lang.Class[] $r8;
        java.lang.AssertionError $r13;
        com.google.inject.internal.TypeConverterBindingProcessor$5 $r10;
        com.google.inject.internal.TypeConverterBindingProcessor r11;
        java.lang.Class r0, r3;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.lang.String $r4, $r5, $r7;
        java.lang.reflect.Method $r9;

        r11 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse");

        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = staticinvoke <com.google.inject.internal.util.$Strings: java.lang.String capitalize(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Class)[1];

        $r8[0] = class "Ljava/lang/String;";

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r7, $r8);

        $r10 = new com.google.inject.internal.TypeConverterBindingProcessor$5;

        specialinvoke $r10.<com.google.inject.internal.TypeConverterBindingProcessor$5: void <init>(com.google.inject.internal.TypeConverterBindingProcessor,java.lang.reflect.Method,java.lang.Class)>(r11, $r9, r0);

        specialinvoke r11.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToClass(java.lang.Class,com.google.inject.spi.TypeConverter)>(r0, $r10);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r13;

     label4:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    private void convertToClass(java.lang.Class, com.google.inject.spi.TypeConverter)
    {
        com.google.inject.spi.TypeConverter r3;
        com.google.inject.internal.TypeConverterBindingProcessor r0;
        java.lang.Class r1;
        com.google.inject.matcher.Matcher $r2;

        r0 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: com.google.inject.spi.TypeConverter;

        $r2 = staticinvoke <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher identicalTo(java.lang.Object)>(r1);

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void convertToClasses(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r2, r3);

        return;
    }

    private void convertToClasses(com.google.inject.matcher.Matcher, com.google.inject.spi.TypeConverter)
    {
        com.google.inject.spi.TypeConverter r3;
        com.google.inject.internal.TypeConverterBindingProcessor$6 $r1;
        com.google.inject.internal.TypeConverterBindingProcessor r0;
        com.google.inject.matcher.Matcher r2;

        r0 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r2 := @parameter0: com.google.inject.matcher.Matcher;

        r3 := @parameter1: com.google.inject.spi.TypeConverter;

        $r1 = new com.google.inject.internal.TypeConverterBindingProcessor$6;

        specialinvoke $r1.<com.google.inject.internal.TypeConverterBindingProcessor$6: void <init>(com.google.inject.internal.TypeConverterBindingProcessor,com.google.inject.matcher.Matcher)>(r0, r2);

        specialinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: void internalConvertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r1, r3);

        return;
    }

    private void internalConvertToTypes(com.google.inject.matcher.Matcher, com.google.inject.spi.TypeConverter)
    {
        com.google.inject.spi.TypeConverter r4;
        com.google.inject.internal.InjectorImpl $r1;
        com.google.inject.spi.TypeConverterBinding $r2;
        com.google.inject.internal.TypeConverterBindingProcessor r0;
        java.lang.Object $r5;
        com.google.inject.matcher.Matcher r3;
        com.google.inject.internal.State $r6;

        r0 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r3 := @parameter0: com.google.inject.matcher.Matcher;

        r4 := @parameter1: com.google.inject.spi.TypeConverter;

        $r1 = r0.<com.google.inject.internal.TypeConverterBindingProcessor: com.google.inject.internal.InjectorImpl injector>;

        $r6 = $r1.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r2 = new com.google.inject.spi.TypeConverterBinding;

        $r5 = <com.google.inject.internal.util.$SourceProvider: java.lang.Object UNKNOWN_SOURCE>;

        specialinvoke $r2.<com.google.inject.spi.TypeConverterBinding: void <init>(java.lang.Object,com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r5, r3, r4);

        interfaceinvoke $r6.<com.google.inject.internal.State: void addConverter(com.google.inject.spi.TypeConverterBinding)>($r2);

        return;
    }

    public java.lang.Boolean visit(com.google.inject.spi.TypeConverterBinding)
    {
        com.google.inject.spi.TypeConverter $r7;
        com.google.inject.internal.InjectorImpl $r1;
        com.google.inject.spi.TypeConverterBinding $r2, r3;
        com.google.inject.internal.TypeConverterBindingProcessor r0;
        java.lang.Boolean $r8;
        java.lang.Object $r5;
        com.google.inject.internal.State $r4;
        com.google.inject.matcher.Matcher $r6;

        r0 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r3 := @parameter0: com.google.inject.spi.TypeConverterBinding;

        $r1 = r0.<com.google.inject.internal.TypeConverterBindingProcessor: com.google.inject.internal.InjectorImpl injector>;

        $r4 = $r1.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r2 = new com.google.inject.spi.TypeConverterBinding;

        $r5 = virtualinvoke r3.<com.google.inject.spi.TypeConverterBinding: java.lang.Object getSource()>();

        $r6 = virtualinvoke r3.<com.google.inject.spi.TypeConverterBinding: com.google.inject.matcher.Matcher getTypeMatcher()>();

        $r7 = virtualinvoke r3.<com.google.inject.spi.TypeConverterBinding: com.google.inject.spi.TypeConverter getTypeConverter()>();

        specialinvoke $r2.<com.google.inject.spi.TypeConverterBinding: void <init>(java.lang.Object,com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r5, $r6, $r7);

        interfaceinvoke $r4.<com.google.inject.internal.State: void addConverter(com.google.inject.spi.TypeConverterBinding)>($r2);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r8;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.TypeConverterBinding)
    {
        java.lang.Boolean $r2;
        com.google.inject.spi.TypeConverterBinding r1;
        com.google.inject.internal.TypeConverterBindingProcessor r0;

        r0 := @this: com.google.inject.internal.TypeConverterBindingProcessor;

        r1 := @parameter0: com.google.inject.spi.TypeConverterBinding;

        $r2 = virtualinvoke r0.<com.google.inject.internal.TypeConverterBindingProcessor: java.lang.Boolean visit(com.google.inject.spi.TypeConverterBinding)>(r1);

        return $r2;
    }
}
