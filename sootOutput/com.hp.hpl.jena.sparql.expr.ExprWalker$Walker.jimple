class com.hp.hpl.jena.sparql.expr.ExprWalker$Walker extends com.hp.hpl.jena.sparql.expr.ExprVisitorFunction
{
    com.hp.hpl.jena.sparql.expr.ExprVisitor visitor;
    boolean topDown;

    private void <init>(com.hp.hpl.jena.sparql.expr.ExprVisitor, boolean)
    {
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r0;
        com.hp.hpl.jena.sparql.expr.ExprVisitor r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprVisitor;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprVisitorFunction: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: boolean topDown> = 1;

        r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: com.hp.hpl.jena.sparql.expr.ExprVisitor visitor> = r1;

        r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: boolean topDown> = z0;

        return;
    }

    public void startVisit()
    {
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        return;
    }

    protected void visitExprFunction(com.hp.hpl.jena.sparql.expr.ExprFunction)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue $r4;
        com.hp.hpl.jena.sparql.expr.ExprFunction r1;
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r0;
        com.hp.hpl.jena.sparql.expr.ExprVisitor $r2, $r5;
        com.hp.hpl.jena.sparql.expr.Expr $r3;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprFunction;

        $z0 = r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: boolean topDown>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: com.hp.hpl.jena.sparql.expr.ExprVisitor visitor>;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprFunction: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>($r5);

     label1:
        i0 = 1;

     label2:
        $i1 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprFunction: int numArgs()>();

        if i0 > $i1 goto label5;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.Expr getArg(int)>(i0);

        if $r3 != null goto label3;

        $r4 = <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue nvNothing>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.expr.NodeValue: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>(r0);

        goto label4;

     label3:
        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.expr.Expr: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>(r0);

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        $z1 = r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: boolean topDown>;

        if $z1 != 0 goto label6;

        $r2 = r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: com.hp.hpl.jena.sparql.expr.ExprVisitor visitor>;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprFunction: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>($r2);

     label6:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.ExprFunctionOp)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunctionOp r0;
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r1;
        com.hp.hpl.jena.sparql.expr.ExprVisitor $r2;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprFunctionOp;

        $r2 = r1.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: com.hp.hpl.jena.sparql.expr.ExprVisitor visitor>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunctionOp: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.NodeValue)
    {
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r1;
        com.hp.hpl.jena.sparql.expr.ExprVisitor $r2;
        com.hp.hpl.jena.sparql.expr.NodeValue r0;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.NodeValue;

        $r2 = r1.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: com.hp.hpl.jena.sparql.expr.ExprVisitor visitor>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.ExprVar)
    {
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r1;
        com.hp.hpl.jena.sparql.expr.ExprVisitor $r2;
        com.hp.hpl.jena.sparql.expr.ExprVar r0;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprVar;

        $r2 = r1.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: com.hp.hpl.jena.sparql.expr.ExprVisitor visitor>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprVar: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.ExprAggregator)
    {
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r1;
        com.hp.hpl.jena.sparql.expr.ExprVisitor $r2;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r2 = r1.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: com.hp.hpl.jena.sparql.expr.ExprVisitor visitor>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)>($r2);

        return;
    }

    public void finishVisit()
    {
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        return;
    }

    void <init>(com.hp.hpl.jena.sparql.expr.ExprVisitor, boolean, com.hp.hpl.jena.sparql.expr.ExprWalker$1)
    {
        com.hp.hpl.jena.sparql.expr.ExprWalker$Walker r0;
        com.hp.hpl.jena.sparql.expr.ExprVisitor r1;
        com.hp.hpl.jena.sparql.expr.ExprWalker$1 r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprWalker$Walker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprVisitor;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.hp.hpl.jena.sparql.expr.ExprWalker$1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprWalker$Walker: void <init>(com.hp.hpl.jena.sparql.expr.ExprVisitor,boolean)>(r1, z0);

        return;
    }
}
