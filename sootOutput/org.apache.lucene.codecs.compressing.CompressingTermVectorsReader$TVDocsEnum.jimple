class org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum extends org.apache.lucene.index.DocsAndPositionsEnum
{
    private org.apache.lucene.util.Bits liveDocs;
    private int doc;
    private int termFreq;
    private int positionIndex;
    private int[] positions;
    private int[] startOffsets;
    private int[] lengths;
    private final org.apache.lucene.util.BytesRef payload;
    private int[] payloadIndex;
    private int basePayloadOffset;
    private int i;

    void <init>()
    {
        int $i1;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        org.apache.lucene.util.BytesRef $r2;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        specialinvoke r0.<org.apache.lucene.index.DocsAndPositionsEnum: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc> = $i1;

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload> = $r2;

        return;
    }

    public void reset(org.apache.lucene.util.Bits, int, int, int[], int[], int[], org.apache.lucene.util.BytesRef, int[])
    {
        byte[] $r6;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int[] r2, r3, r4, r10;
        int i0, i1, $i2, $i4, $i6;
        org.apache.lucene.util.Bits r1;
        org.apache.lucene.util.BytesRef r5, $r7, $r8, $r9;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        r1 := @parameter0: org.apache.lucene.util.Bits;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        r3 := @parameter4: int[];

        r4 := @parameter5: int[];

        r5 := @parameter6: org.apache.lucene.util.BytesRef;

        r10 := @parameter7: int[];

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.Bits liveDocs> = r1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int termFreq> = i0;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex> = i1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] positions> = r2;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] startOffsets> = r3;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] lengths> = r4;

        $i2 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int basePayloadOffset> = $i2;

        $r7 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload>;

        $r6 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r7.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r6;

        $r9 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload>;

        $r8 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload>;

        $r8.<org.apache.lucene.util.BytesRef: int length> = 0;

        $r9.<org.apache.lucene.util.BytesRef: int offset> = 0;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] payloadIndex> = r10;

        $i4 = (int) -1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i> = $i4;

        $i6 = (int) -1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc> = $i6;

        return;
    }

    private void checkDoc()
    {
        java.lang.IllegalStateException $r3, $r4;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc>;

        if $i0 != 2147483647 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DocsEnum exhausted");

        throw $r3;

     label1:
        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc>;

        $i3 = (int) -1;

        if $i1 != $i3 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DocsEnum not started");

        throw $r4;

     label2:
        return;
    }

    private void checkPosition()
    {
        java.lang.IllegalStateException $r1, $r2;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: void checkDoc()>();

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Position enum not started");

        throw $r2;

     label1:
        $i2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int termFreq>;

        if $i2 < $i1 goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Read past last position");

        throw $r1;

     label2:
        return;
    }

    public int nextPosition() throws java.io.IOException
    {
        java.lang.IllegalStateException $r11, $r12;
        int[] $r1, $r2, $r3, $r4, $r6, $r7;
        org.apache.lucene.util.BytesRef $r5, $r8;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc>;

        if $i0 == 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label1:
        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int termFreq>;

        $i2 = $i1 - 1;

        if $i3 < $i2 goto label2;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Read past last position");

        throw $r12;

     label2:
        $i4 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i> = $i5;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] payloadIndex>;

        if $r1 == null goto label3;

        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload>;

        $i14 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int basePayloadOffset>;

        $r4 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] payloadIndex>;

        $i11 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex>;

        $i10 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i12 = $i11 + $i10;

        $i13 = $r4[$i12];

        $i15 = $i14 + $i13;

        $r5.<org.apache.lucene.util.BytesRef: int offset> = $i15;

        $r8 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload>;

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] payloadIndex>;

        $i17 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex>;

        $i16 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i18 = $i17 + $i16;

        $i19 = $i18 + 1;

        $i24 = $r6[$i19];

        $r7 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] payloadIndex>;

        $i21 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex>;

        $i20 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i22 = $i21 + $i20;

        $i23 = $r7[$i22];

        $i25 = $i24 - $i23;

        $r8.<org.apache.lucene.util.BytesRef: int length> = $i25;

     label3:
        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] positions>;

        if $r2 != null goto label4;

        $i27 = (int) -1;

        return $i27;

     label4:
        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] positions>;

        $i7 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex>;

        $i6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i8 = $i7 + $i6;

        $i9 = $r3[$i8];

        return $i9;
    }

    public int startOffset() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i5;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: void checkPosition()>();

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] startOffsets>;

        if $r1 != null goto label1;

        $i5 = (int) -1;

        return $i5;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] startOffsets>;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i2 = $i1 + $i0;

        $i3 = $r2[$i2];

        return $i3;
    }

    public int endOffset() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: void checkPosition()>();

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] startOffsets>;

        if $r1 != null goto label1;

        $i10 = (int) -1;

        return $i10;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] startOffsets>;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i2 = $i1 + $i0;

        $i7 = $r2[$i2];

        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] lengths>;

        $i4 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int positionIndex>;

        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int i>;

        $i5 = $i4 + $i3;

        $i6 = $r3[$i5];

        $i8 = $i7 + $i6;

        return $i8;
    }

    public org.apache.lucene.util.BytesRef getPayload() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int[] $r1;
        org.apache.lucene.util.BytesRef $r2, $r3;
        int $i0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: void checkPosition()>();

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int[] payloadIndex>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload>;

        $i0 = $r2.<org.apache.lucene.util.BytesRef: int length>;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.BytesRef payload>;

        return $r3;
    }

    public int freq() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: void checkDoc()>();

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int termFreq>;

        return $i0;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc>;

        return $i0;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;
        int $i0, $i2;
        org.apache.lucene.util.Bits $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc>;

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.Bits liveDocs>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: org.apache.lucene.util.Bits liveDocs>;

        $z0 = interfaceinvoke $r2.<org.apache.lucene.util.Bits: boolean get(int)>(0);

        if $z0 == 0 goto label2;

     label1:
        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc> = 0;

        return 0;

     label2:
        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int doc> = 2147483647;

        return 2147483647;
    }

    public int advance(int) throws java.io.IOException
    {
        int i0, $i1;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: int slowAdvance(int)>(i0);

        return $i1;
    }

    public long cost()
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum r0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        return 1L;
    }
}
