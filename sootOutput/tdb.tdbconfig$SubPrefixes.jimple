class tdb.tdbconfig$SubPrefixes extends tdb.cmdline.CmdTDB
{

    public transient void <init>(java.lang.String[])
    {
        java.lang.String[] r1;
        tdb.tdbconfig$SubPrefixes r0;

        r0 := @this: tdb.tdbconfig$SubPrefixes;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<tdb.cmdline.CmdTDB: void <init>(java.lang.String[])>(r1);

        return;
    }

    protected java.lang.String getSummary()
    {
        tdb.tdbconfig$SubPrefixes r0;

        r0 := @this: tdb.tdbconfig$SubPrefixes;

        return "tdbconfig prefixes";
    }

    protected void exec()
    {
        java.lang.Object[] $r19;
        com.hp.hpl.jena.tdb.base.file.Location $r1;
        java.util.Map $r14;
        tdb.tdbconfig$SubPrefixes r0;
        java.lang.String r7, $r12, r18, $r24;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.sys.DatasetControlNone $r2;
        java.io.PrintStream $r9, $r21;
        java.util.Iterator $r5, $r16;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB $r3;
        java.util.Set $r4, $r15;
        java.lang.Object $r6, $r17, $r25;
        java.lang.StringBuilder $r8, $r10, $r11, $r20, $r22, $r23;
        com.hp.hpl.jena.shared.PrefixMapping $r13;

        r0 := @this: tdb.tdbconfig$SubPrefixes;

        $r1 = virtualinvoke r0.<tdb.tdbconfig$SubPrefixes: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $r2 = new com.hp.hpl.jena.tdb.sys.DatasetControlNone;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.sys.DatasetControlNone: void <init>()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB makePrefixes(com.hp.hpl.jena.tdb.base.file.Location,com.hp.hpl.jena.tdb.sys.DatasetControl)>($r1, $r2);

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: java.util.Set graphNames()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Graph: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping(java.lang.String)>(r7);

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.shared.PrefixMapping: java.util.Map getNsPrefixMap()>();

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r17;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r19 = newarray (java.lang.Object)[2];

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19[0] = $r24;

        $r25 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);

        $r19[1] = $r25;

        virtualinvoke $r21.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  %-10s %s\n", $r19);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }
}
