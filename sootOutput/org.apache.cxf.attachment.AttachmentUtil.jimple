public final class org.apache.cxf.attachment.AttachmentUtil extends java.lang.Object
{
    public static final java.lang.String BODY_ATTACHMENT_ID;
    private static volatile int counter;
    private static final java.lang.String ATT_UUID;
    private static final java.util.Random BOUND_RANDOM;
    private static final javax.activation.CommandMap DEFAULT_COMMAND_MAP;
    private static final javax.activation.MailcapCommandMap COMMAND_MAP;

    private void <init>()
    {
        org.apache.cxf.attachment.AttachmentUtil r0;

        r0 := @this: org.apache.cxf.attachment.AttachmentUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.activation.CommandMap getCommandMap()
    {
        javax.activation.MailcapCommandMap $r0;

        $r0 = <org.apache.cxf.attachment.AttachmentUtil: javax.activation.MailcapCommandMap COMMAND_MAP>;

        return $r0;
    }

    public static boolean isMtomEnabled(org.apache.cxf.message.Message)
    {
        java.lang.Object $r1;
        org.apache.cxf.message.Message r0;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("mtom-enabled");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r1);

        return $z0;
    }

    public static void setStreamedAttachmentProperties(org.apache.cxf.message.Message, org.apache.cxf.io.CachedOutputStream) throws java.io.IOException
    {
        long $l0, $l1, $l2, $l3;
        java.lang.Long $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r10;
        boolean $z0, $z1, $z2;
        org.apache.cxf.message.Message r0;
        java.io.File $r9, $r11;
        java.lang.Object $r1, $r12, $r13;
        org.apache.cxf.io.CachedOutputStream r2;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: org.apache.cxf.io.CachedOutputStream;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("attachment-directory");

        if $r1 == null goto label2;

        $z2 = $r1 instanceof java.io.File;

        if $z2 == 0 goto label1;

        $r11 = (java.io.File) $r1;

        virtualinvoke r2.<org.apache.cxf.io.CachedOutputStream: void setOutputDir(java.io.File)>($r11);

        goto label2;

     label1:
        $r9 = new java.io.File;

        $r10 = (java.lang.String) $r1;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r10);

        virtualinvoke r2.<org.apache.cxf.io.CachedOutputStream: void setOutputDir(java.io.File)>($r9);

     label2:
        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("attachment-memory-threshold");

        if $r12 == null goto label4;

        $z1 = $r12 instanceof java.lang.Long;

        if $z1 == 0 goto label3;

        $r8 = (java.lang.Long) $r12;

        $l3 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        virtualinvoke r2.<org.apache.cxf.io.CachedOutputStream: void setThreshold(long)>($l3);

        goto label5;

     label3:
        $r6 = (java.lang.String) $r12;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6);

        $l2 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        virtualinvoke r2.<org.apache.cxf.io.CachedOutputStream: void setThreshold(long)>($l2);

        goto label5;

     label4:
        virtualinvoke r2.<org.apache.cxf.io.CachedOutputStream: void setThreshold(long)>(102400L);

     label5:
        $r13 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("attachment-max-size");

        if $r13 == null goto label7;

        $z0 = $r13 instanceof java.lang.Long;

        if $z0 == 0 goto label6;

        $r5 = (java.lang.Long) $r13;

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        virtualinvoke r2.<org.apache.cxf.io.CachedOutputStream: void setMaxSize(long)>($l1);

        goto label7;

     label6:
        $r3 = (java.lang.String) $r13;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r3);

        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke r2.<org.apache.cxf.io.CachedOutputStream: void setMaxSize(long)>($l0);

     label7:
        return;
    }

    public static java.lang.String createContentID(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.net.URL $r9;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r4, $r6, r7, r11, $r13, $r16, $r18;
        java.net.URI $r8;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r0, $r2, $r3, $r5, $r12, $r14, $r15, $r17;

        r7 := @parameter0: java.lang.String;

        r11 = "cxf.apache.org";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <org.apache.cxf.attachment.AttachmentUtil: java.lang.String ATT_UUID>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i0 = <org.apache.cxf.attachment.AttachmentUtil: int counter>;

        $i1 = $i0 + 1;

        <org.apache.cxf.attachment.AttachmentUtil: int counter> = $i1;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        if r7 == null goto label4;

        $i2 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

     label1:
        $r8 = new java.net.URI;

        specialinvoke $r8.<java.net.URI: void <init>(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.net.URI: java.net.URL toURL()>();

        r11 = virtualinvoke $r9.<java.net.URL: java.lang.String getHost()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r11 = r7;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r16 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r11, "UTF-8");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getUniqueBoundaryValue()
    {
        java.lang.Throwable $r9;
        java.util.Random $r0, $r1, $r2;
        long $l0, $l1, l2, l3, l4, l5;
        java.lang.String $r6, $r8;
        java.util.UUID $r3;
        java.lang.StringBuilder $r4, $r5, $r7;

        $r0 = <org.apache.cxf.attachment.AttachmentUtil: java.util.Random BOUND_RANDOM>;

        entermonitor $r0;

     label1:
        $r1 = <org.apache.cxf.attachment.AttachmentUtil: java.util.Random BOUND_RANDOM>;

        $l0 = virtualinvoke $r1.<java.util.Random: long nextLong()>();

        $r2 = <org.apache.cxf.attachment.AttachmentUtil: java.util.Random BOUND_RANDOM>;

        $l1 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        exitmonitor $r0;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r9;

     label5:
        l2 = $l0 & -61441L;

        l3 = l2 | 16384L;

        l4 = $l1 & 4611686018427387903L;

        l5 = l4 | -9223372036854775808L;

        $r3 = new java.util.UUID;

        specialinvoke $r3.<java.util.UUID: void <init>(long,long)>(l3, l5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uuid:");

        $r6 = virtualinvoke $r3.<java.util.UUID: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.String getAttachmentPartHeader(org.apache.cxf.message.Attachment)
    {
        javax.activation.DataHandler $r6;
        org.apache.cxf.message.Attachment r5;
        int $i1, $i2, $i3;
        java.lang.String $r2, $r7, $r10, $r11, $r16, $r17, r18;
        boolean $z0;
        char $c0;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r13, $r14, $r15, $r19, $r20, $r21;

        r5 := @parameter0: org.apache.cxf.message.Attachment;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(int)>(200);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <org.apache.cxf.helpers.HttpHeaderHelper: java.lang.String getHeaderKey(java.lang.String)>("Content-Type");

        $r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = interfaceinvoke r5.<org.apache.cxf.message.Attachment: javax.activation.DataHandler getDataHandler()>();

        $r7 = virtualinvoke $r6.<javax.activation.DataHandler: java.lang.String getContentType()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\r\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $z0 = interfaceinvoke r5.<org.apache.cxf.message.Attachment: boolean isXOP()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Transfer-Encoding: binary\r\n");

     label1:
        $r11 = interfaceinvoke r5.<org.apache.cxf.message.Attachment: java.lang.String getId()>();

        r18 = $r11;

        $c0 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c0;

        if $i3 != 60 goto label2;

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r18 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

     label2:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-ID: <");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\r\n\r\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public static java.util.Map getDHMap(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection r0;
        javax.activation.DataHandler $r6;
        java.util.LinkedHashMap $r10, $r11;
        org.apache.cxf.message.Attachment r4;
        org.apache.cxf.attachment.LazyAttachmentCollection $r7;
        java.util.Map r8, $r9;
        java.lang.Object $r3;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Collection;

        r8 = null;

        if r0 == null goto label3;

        $z0 = r0 instanceof org.apache.cxf.attachment.LazyAttachmentCollection;

        if $z0 == 0 goto label1;

        $r7 = (org.apache.cxf.attachment.LazyAttachmentCollection) r0;

        r8 = virtualinvoke $r7.<org.apache.cxf.attachment.LazyAttachmentCollection: java.util.Map createDataHandlerMap()>();

        goto label3;

     label1:
        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        r8 = $r10;

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.message.Attachment) $r3;

        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Attachment: java.lang.String getId()>();

        $r6 = interfaceinvoke r4.<org.apache.cxf.message.Attachment: javax.activation.DataHandler getDataHandler()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label2;

     label3:
        if r8 != null goto label4;

        $r11 = new java.util.LinkedHashMap;

        $r9 = $r11;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        goto label5;

     label4:
        $r9 = r8;

     label5:
        return $r9;
    }

    public static java.lang.String cleanContentId(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r1;
        java.io.UnsupportedEncodingException $r0;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label5;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("<");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("cid:");

        if $z1 == 0 goto label2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(4);

     label2:
        r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r1, "UTF-8");

     label3:
        goto label5;

     label4:
        $r0 := @caughtexception;

     label5:
        if r1 != null goto label6;

        r1 = "root.message@cxf.apache.org";

     label6:
        return r1;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static org.apache.cxf.message.Attachment createAttachment(java.io.InputStream, javax.mail.internet.InternetHeaders) throws java.io.IOException
    {
        java.util.Enumeration $r7;
        org.apache.cxf.attachment.AttachmentDataSource $r8, $r11, $r12, $r15;
        javax.activation.DataHandler $r10, $r14;
        org.apache.cxf.attachment.AttachmentImpl $r3;
        java.lang.String $r1, $r2, $r4, $r5, $r6, $r18, $r19, $r20, $r21, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.apache.cxf.attachment.QuotedPrintableDecoderStream $r13;
        javax.mail.internet.InternetHeaders r0;
        javax.mail.Header r17;
        java.lang.Object $r16;
        java.io.InputStream r9;

        r9 := @parameter0: java.io.InputStream;

        r0 := @parameter1: javax.mail.internet.InternetHeaders;

        $r1 = virtualinvoke r0.<javax.mail.internet.InternetHeaders: java.lang.String getHeader(java.lang.String,java.lang.String)>("Content-ID", null);

        $r2 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: java.lang.String cleanContentId(java.lang.String)>($r1);

        $r3 = new org.apache.cxf.attachment.AttachmentImpl;

        specialinvoke $r3.<org.apache.cxf.attachment.AttachmentImpl: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<javax.mail.internet.InternetHeaders: java.lang.String getHeader(java.lang.String,java.lang.String)>("Content-Type", null);

        $r5 = virtualinvoke r0.<javax.mail.internet.InternetHeaders: java.lang.String getHeader(java.lang.String,java.lang.String)>("Content-Disposition", null);

        $r6 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: java.lang.String getContentDispositionFileName(java.lang.String)>($r5);

        z6 = 0;

        $r7 = virtualinvoke r0.<javax.mail.internet.InternetHeaders: java.util.Enumeration getAllHeaders()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r16 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r17 = (javax.mail.Header) $r16;

        $r18 = virtualinvoke r17.<javax.mail.Header: java.lang.String getName()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Content-Transfer-Encoding");

        if $z3 == 0 goto label3;

        $r19 = virtualinvoke r17.<javax.mail.Header: java.lang.String getValue()>();

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("binary");

        if $z4 == 0 goto label2;

        virtualinvoke $r3.<org.apache.cxf.attachment.AttachmentImpl: void setXOP(boolean)>(1);

        goto label3;

     label2:
        $r20 = virtualinvoke r17.<javax.mail.Header: java.lang.String getValue()>();

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("quoted-printable");

        if $z5 == 0 goto label3;

        z6 = 1;

     label3:
        $r21 = virtualinvoke r17.<javax.mail.Header: java.lang.String getName()>();

        $r22 = virtualinvoke r17.<javax.mail.Header: java.lang.String getValue()>();

        virtualinvoke $r3.<org.apache.cxf.attachment.AttachmentImpl: void setHeader(java.lang.String,java.lang.String)>($r21, $r22);

        goto label1;

     label4:
        if z6 == 0 goto label6;

        $r12 = new org.apache.cxf.attachment.AttachmentDataSource;

        $r13 = new org.apache.cxf.attachment.QuotedPrintableDecoderStream;

        specialinvoke $r13.<org.apache.cxf.attachment.QuotedPrintableDecoderStream: void <init>(java.io.InputStream)>(r9);

        specialinvoke $r12.<org.apache.cxf.attachment.AttachmentDataSource: void <init>(java.lang.String,java.io.InputStream)>($r4, $r13);

        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r6);

        if $z2 != 0 goto label5;

        $r15 = (org.apache.cxf.attachment.AttachmentDataSource) $r12;

        virtualinvoke $r15.<org.apache.cxf.attachment.AttachmentDataSource: void setName(java.lang.String)>($r6);

     label5:
        $r14 = new javax.activation.DataHandler;

        specialinvoke $r14.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r12);

        virtualinvoke $r3.<org.apache.cxf.attachment.AttachmentImpl: void setDataHandler(javax.activation.DataHandler)>($r14);

        goto label8;

     label6:
        $r8 = new org.apache.cxf.attachment.AttachmentDataSource;

        specialinvoke $r8.<org.apache.cxf.attachment.AttachmentDataSource: void <init>(java.lang.String,java.io.InputStream)>($r4, r9);

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r6);

        if $z1 != 0 goto label7;

        $r11 = (org.apache.cxf.attachment.AttachmentDataSource) $r8;

        virtualinvoke $r11.<org.apache.cxf.attachment.AttachmentDataSource: void setName(java.lang.String)>($r6);

     label7:
        $r10 = new javax.activation.DataHandler;

        specialinvoke $r10.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r8);

        virtualinvoke $r3.<org.apache.cxf.attachment.AttachmentImpl: void setDataHandler(javax.activation.DataHandler)>($r10);

     label8:
        return $r3;
    }

    static java.lang.String getContentDispositionFileName(java.lang.String)
    {
        org.apache.cxf.attachment.ContentDisposition $r1;
        java.lang.String r0, $r2, r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = new org.apache.cxf.attachment.ContentDisposition;

        specialinvoke $r1.<org.apache.cxf.attachment.ContentDisposition: void <init>(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<org.apache.cxf.attachment.ContentDisposition: java.lang.String getParameter(java.lang.String)>("filename");

        r3 = $r2;

        if $r2 != null goto label2;

        r3 = virtualinvoke $r1.<org.apache.cxf.attachment.ContentDisposition: java.lang.String getParameter(java.lang.String)>("name");

     label2:
        return r3;
    }

    public static boolean isTypeSupported(java.lang.String, java.util.List)
    {
        java.util.Iterator $r2;
        java.util.List r1;
        int $i0, $i2;
        java.lang.Object $r3;
        java.lang.String $r0, r4, r5;
        boolean $z0;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        if r5 != null goto label1;

        return 0;

     label1:
        $r0 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(r4);

        $i2 = (int) -1;

        if $i0 == $i2 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public static org.apache.cxf.message.Attachment createMtomAttachment(boolean, java.lang.String, java.lang.String, byte[], int, int, int)
    {
        byte[] r1;
        org.apache.cxf.attachment.ByteDataSource $r0;
        javax.activation.DataHandler $r2;
        org.apache.cxf.interceptor.Fault $r7;
        int i0, i1, i2;
        org.apache.cxf.attachment.AttachmentImpl $r5;
        java.lang.String r3, $r4, r8;
        java.io.UnsupportedEncodingException $r6;
        boolean z0;

        z0 := @parameter0: boolean;

        r8 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r1 := @parameter3: byte[];

        i2 := @parameter4: int;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        if z0 == 0 goto label1;

        if i0 > i1 goto label2;

     label1:
        return null;

     label2:
        if r8 != null goto label3;

        r8 = "application/octet-stream";

     label3:
        $r0 = new org.apache.cxf.attachment.ByteDataSource;

        specialinvoke $r0.<org.apache.cxf.attachment.ByteDataSource: void <init>(byte[],int,int)>(r1, i2, i0);

        virtualinvoke $r0.<org.apache.cxf.attachment.ByteDataSource: void setContentType(java.lang.String)>(r8);

        $r2 = new javax.activation.DataHandler;

        specialinvoke $r2.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r0);

     label4:
        $r4 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: java.lang.String createContentID(java.lang.String)>(r3);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        $r7 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r7.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label7:
        $r5 = new org.apache.cxf.attachment.AttachmentImpl;

        specialinvoke $r5.<org.apache.cxf.attachment.AttachmentImpl: void <init>(java.lang.String,javax.activation.DataHandler)>($r4, $r2);

        virtualinvoke $r5.<org.apache.cxf.attachment.AttachmentImpl: void setXOP(boolean)>(z0);

        return $r5;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public static org.apache.cxf.message.Attachment createMtomAttachmentFromDH(boolean, javax.activation.DataHandler, java.lang.String, int)
    {
        byte[] $r11, $r12;
        byte $b5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r21, $r22, $r23, $r28;
        java.io.UnsupportedEncodingException $r15;
        long $l3, $l4;
        javax.activation.DataHandler r0;
        org.apache.cxf.interceptor.Fault $r25;
        javax.activation.FileDataSource r18;
        int i0, $i1, $i2, $i6;
        org.apache.cxf.attachment.AttachmentImpl $r26;
        java.lang.String $r3, r4, $r5, $r7, $r8, $r13, r19, $r24;
        java.io.IOException $r17;
        java.io.File $r14, $r27;
        javax.activation.DataSource $r1;
        java.lang.Class $r2;
        java.lang.Object $r10;

        z0 := @parameter0: boolean;

        r0 := @parameter1: javax.activation.DataHandler;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        if z0 != 0 goto label01;

        return null;

     label01:
        $r1 = virtualinvoke r0.<javax.activation.DataHandler: javax.activation.DataSource getDataSource()>();

        $z1 = $r1 instanceof javax.activation.FileDataSource;

        if $z1 == 0 goto label04;

        r18 = (javax.activation.FileDataSource) $r1;

        $r14 = virtualinvoke r18.<javax.activation.FileDataSource: java.io.File getFile()>();

        $l3 = virtualinvoke $r14.<java.io.File: long length()>();

        $l4 = (long) i0;

        $b5 = $l3 cmp $l4;

        $i6 = (int) $b5;

        if $i6 >= 0 goto label03;

     label02:
        return null;

     label03:
        goto label08;

     label04:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("ObjectDataSource");

        if $z2 == 0 goto label08;

        $r10 = virtualinvoke r0.<javax.activation.DataHandler: java.lang.Object getContent()>();

        $z6 = $r10 instanceof java.lang.String;

        if $z6 == 0 goto label06;

        $r13 = (java.lang.String) $r10;

        $i2 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i2 >= i0 goto label06;

     label05:
        return null;

     label06:
        $z7 = $r10 instanceof byte[];

        if $z7 == 0 goto label08;

        $r11 = (byte[]) $r10;

        $r12 = (byte[]) $r11;

        $i1 = lengthof $r12;

        if $i1 >= i0 goto label08;

     label07:
        return null;

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

     label10:
        $r5 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: java.lang.String createContentID(java.lang.String)>(r4);

     label11:
        goto label13;

     label12:
        $r15 := @caughtexception;

        $r25 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r25.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r15);

        throw $r25;

     label13:
        $r26 = new org.apache.cxf.attachment.AttachmentImpl;

        specialinvoke $r26.<org.apache.cxf.attachment.AttachmentImpl: void <init>(java.lang.String,javax.activation.DataHandler)>($r5, r0);

        $r7 = virtualinvoke r0.<javax.activation.DataHandler: java.lang.String getName()>();

        $z3 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r7);

        if $z3 != 0 goto label15;

        $r8 = virtualinvoke r0.<javax.activation.DataHandler: java.lang.String getName()>();

        r19 = $r8;

        $r27 = new java.io.File;

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>($r8);

        $z4 = virtualinvoke $r27.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label14;

        $z5 = virtualinvoke $r27.<java.io.File: boolean isFile()>();

        if $z5 == 0 goto label14;

        r19 = virtualinvoke $r27.<java.io.File: java.lang.String getName()>();

     label14:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attachment;name=\"");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<org.apache.cxf.attachment.AttachmentImpl: void setHeader(java.lang.String,java.lang.String)>("Content-Disposition", $r24);

     label15:
        virtualinvoke $r26.<org.apache.cxf.attachment.AttachmentImpl: void setXOP(boolean)>(z0);

        return $r26;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.io.IOException from label03 to label05 with label09;
        catch java.io.IOException from label06 to label07 with label09;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label12;
    }

    public static javax.activation.DataSource getAttachmentDataSource(java.lang.String, java.util.Collection)
    {
        java.net.MalformedURLException $r6;
        java.net.URL $r11;
        java.util.Collection r2;
        org.apache.cxf.interceptor.Fault $r13;
        javax.activation.URLDataSource $r12;
        int $i0, $i2;
        javax.activation.DataSource $r3, $r5;
        java.lang.String $r4, r9, r10;
        java.io.UnsupportedEncodingException $r8;
        boolean $z0;

        r9 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Collection;

        $z0 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("cid:");

        if $z0 == 0 goto label5;

     label1:
        $r4 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>(4);

        r10 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r4, "UTF-8");

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>(4);

     label4:
        $r5 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: javax.activation.DataSource loadDataSource(java.lang.String,java.util.Collection)>(r10, r2);

        return $r5;

     label5:
        $i0 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>("://");

        $i2 = (int) -1;

        if $i0 != $i2 goto label6;

        $r3 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: javax.activation.DataSource loadDataSource(java.lang.String,java.util.Collection)>(r9, r2);

        return $r3;

     label6:
        $r12 = new javax.activation.URLDataSource;

        $r11 = new java.net.URL;

        specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>(r9);

        specialinvoke $r12.<javax.activation.URLDataSource: void <init>(java.net.URL)>($r11);

     label7:
        return $r12;

     label8:
        $r6 := @caughtexception;

        $r13 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r13.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r6);

        throw $r13;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.net.MalformedURLException from label6 to label7 with label8;
    }

    private static javax.activation.DataSource loadDataSource(java.lang.String, java.util.Collection)
    {
        org.apache.cxf.attachment.LazyDataSource $r0;
        java.lang.String r1;
        java.util.Collection r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Collection;

        $r0 = new org.apache.cxf.attachment.LazyDataSource;

        specialinvoke $r0.<org.apache.cxf.attachment.LazyDataSource: void <init>(java.lang.String,java.util.Collection)>(r1, r2);

        return $r0;
    }

    static javax.activation.CommandMap access$000()
    {
        javax.activation.CommandMap $r0;

        $r0 = <org.apache.cxf.attachment.AttachmentUtil: javax.activation.CommandMap DEFAULT_COMMAND_MAP>;

        return $r0;
    }

    static void <clinit>()
    {
        javax.activation.MailcapCommandMap $r6;
        java.util.Random $r2;
        java.util.UUID $r0;
        javax.activation.CommandMap $r3;
        org.apache.cxf.attachment.AttachmentUtil$EnhancedMailcapCommandMap $r4;
        java.lang.StringBuilder $r5, $r7, $r10;
        java.lang.Class $r8;
        java.lang.String $r1, $r9, $r11;

        <org.apache.cxf.attachment.AttachmentUtil: java.lang.String BODY_ATTACHMENT_ID> = "root.message@cxf.apache.org";

        $r0 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r0.<java.util.UUID: java.lang.String toString()>();

        <org.apache.cxf.attachment.AttachmentUtil: java.lang.String ATT_UUID> = $r1;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        <org.apache.cxf.attachment.AttachmentUtil: java.util.Random BOUND_RANDOM> = $r2;

        $r3 = staticinvoke <javax.activation.CommandMap: javax.activation.CommandMap getDefaultCommandMap()>();

        <org.apache.cxf.attachment.AttachmentUtil: javax.activation.CommandMap DEFAULT_COMMAND_MAP> = $r3;

        $r4 = new org.apache.cxf.attachment.AttachmentUtil$EnhancedMailcapCommandMap;

        specialinvoke $r4.<org.apache.cxf.attachment.AttachmentUtil$EnhancedMailcapCommandMap: void <init>()>();

        <org.apache.cxf.attachment.AttachmentUtil: javax.activation.MailcapCommandMap COMMAND_MAP> = $r4;

        $r6 = <org.apache.cxf.attachment.AttachmentUtil: javax.activation.MailcapCommandMap COMMAND_MAP>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("image/*;;x-java-content-handler=");

        $r8 = class "Lorg/apache/cxf/attachment/ImageDataContentHandler;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<javax.activation.MailcapCommandMap: void addMailcap(java.lang.String)>($r11);

        return;
    }
}
