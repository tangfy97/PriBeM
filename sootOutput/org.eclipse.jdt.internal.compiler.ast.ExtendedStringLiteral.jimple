public class org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral extends org.eclipse.jdt.internal.compiler.ast.StringLiteral
{

    public void <init>(org.eclipse.jdt.internal.compiler.ast.StringLiteral, org.eclipse.jdt.internal.compiler.ast.CharLiteral)
    {
        org.eclipse.jdt.internal.compiler.ast.StringLiteral r1;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r0;
        int $i0, $i1, $i2;
        char[] $r2;
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteral;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: char[] source>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceEnd>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int lineNumber>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: void <init>(char[],int,int,int)>($r2, $i2, $i1, $i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral extendWith(org.eclipse.jdt.internal.compiler.ast.CharLiteral)>(r3);

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.ast.StringLiteral, org.eclipse.jdt.internal.compiler.ast.StringLiteral)
    {
        org.eclipse.jdt.internal.compiler.ast.StringLiteral r1, r3;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r0;
        int $i0, $i1, $i2;
        char[] $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteral;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.ast.StringLiteral;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: char[] source>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceEnd>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int lineNumber>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: void <init>(char[],int,int,int)>($r2, $i2, $i1, $i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral extendWith(org.eclipse.jdt.internal.compiler.ast.StringLiteral)>(r3);

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral extendWith(org.eclipse.jdt.internal.compiler.ast.CharLiteral)
    {
        char $c2;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r0;
        int i0, $i1, $i3;
        char[] $r1, $r2, $r3, $r5;
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source>;

        i0 = lengthof $r1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source>;

        $i1 = i0 + 1;

        $r2 = newarray (char)[$i1];

        r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source> = $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, i0);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source>;

        $c2 = r4.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value>;

        $r5[i0] = $c2;

        $i3 = r4.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: int sourceEnd>;

        r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: int sourceEnd> = $i3;

        return r0;
    }

    public org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral extendWith(org.eclipse.jdt.internal.compiler.ast.StringLiteral)
    {
        org.eclipse.jdt.internal.compiler.ast.StringLiteral r2;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r0;
        int i0, $i1, $i2, $i3, $i4;
        char[] $r1, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteral;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source>;

        i0 = lengthof $r1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: char[] source>;

        $i1 = lengthof $r3;

        $i2 = i0 + $i1;

        $r4 = newarray (char)[$i2];

        r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, i0);

        $r8 = r2.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: char[] source>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source>;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: char[] source>;

        $i3 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, i0, $i3);

        $i4 = r2.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceEnd>;

        r0.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: int sourceEnd> = $i4;

        return r0;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0, $r1, $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r2;
        int i0;
        char[] $r3;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ExtendedStringLiteral{");

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral: char[] source>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        return $r5;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
