public abstract class com.hp.hpl.jena.util.iterator.Filter extends java.lang.Object
{
    public static final com.hp.hpl.jena.util.iterator.Filter any;

    public void <init>()
    {
        com.hp.hpl.jena.util.iterator.Filter r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.Filter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract boolean accept(java.lang.Object);

    public com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(java.util.Iterator)
    {
        com.hp.hpl.jena.util.iterator.FilterKeepIterator $r0;
        java.util.Iterator r2;
        com.hp.hpl.jena.util.iterator.Filter r1;

        r1 := @this: com.hp.hpl.jena.util.iterator.Filter;

        r2 := @parameter0: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.util.iterator.FilterKeepIterator;

        specialinvoke $r0.<com.hp.hpl.jena.util.iterator.FilterKeepIterator: void <init>(com.hp.hpl.jena.util.iterator.Filter,java.util.Iterator)>(r1, r2);

        return $r0;
    }

    public com.hp.hpl.jena.util.iterator.Filter and(com.hp.hpl.jena.util.iterator.Filter)
    {
        com.hp.hpl.jena.util.iterator.Filter$1 $r3;
        com.hp.hpl.jena.util.iterator.Filter r0, r1, $r2;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.util.iterator.Filter;

        r0 := @parameter0: com.hp.hpl.jena.util.iterator.Filter;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: boolean isAny()>();

        if $z0 == 0 goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.util.iterator.Filter$1;

        $r2 = $r3;

        specialinvoke $r3.<com.hp.hpl.jena.util.iterator.Filter$1: void <init>(com.hp.hpl.jena.util.iterator.Filter,com.hp.hpl.jena.util.iterator.Filter)>(r1, r0);

     label2:
        return $r2;
    }

    public boolean isAny()
    {
        com.hp.hpl.jena.util.iterator.Filter r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.Filter;

        return 0;
    }

    public static com.hp.hpl.jena.util.iterator.Filter any()
    {
        com.hp.hpl.jena.util.iterator.Filter$3 $r0;

        $r0 = new com.hp.hpl.jena.util.iterator.Filter$3;

        specialinvoke $r0.<com.hp.hpl.jena.util.iterator.Filter$3: void <init>()>();

        return $r0;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.util.iterator.Filter$2 $r0;

        $r0 = new com.hp.hpl.jena.util.iterator.Filter$2;

        specialinvoke $r0.<com.hp.hpl.jena.util.iterator.Filter$2: void <init>()>();

        <com.hp.hpl.jena.util.iterator.Filter: com.hp.hpl.jena.util.iterator.Filter any> = $r0;

        return;
    }
}
