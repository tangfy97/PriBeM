public class org.apache.poi.poifs.dev.POIFSHeaderDumper extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.poifs.dev.POIFSHeaderDumper r0;

        r0 := @this: org.apache.poi.poifs.dev.POIFSHeaderDumper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r2;
        int $i0, i1, $i2;
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Must specify at least one file to view");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        i1 = 0;

     label2:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label3;

        $r1 = r0[i1];

        staticinvoke <org.apache.poi.poifs.dev.POIFSHeaderDumper: void viewFile(java.lang.String)>($r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static void viewFile(java.lang.String) throws java.lang.Exception
    {
        java.io.FileInputStream $r0;
        org.apache.poi.poifs.property.PropertyTable $r8;
        org.apache.poi.poifs.storage.RawDataBlockList $r4;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r3, $r6;
        int[] $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1;
        org.apache.poi.poifs.storage.HeaderBlock $r2;
        org.apache.poi.poifs.storage.BlockAllocationTableReader $r5;
        org.apache.poi.poifs.property.RootProperty $r9;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        $r2 = new org.apache.poi.poifs.storage.HeaderBlock;

        specialinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: void <init>(java.io.InputStream)>($r0);

        staticinvoke <org.apache.poi.poifs.dev.POIFSHeaderDumper: void displayHeader(org.apache.poi.poifs.storage.HeaderBlock)>($r2);

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()>();

        $r4 = new org.apache.poi.poifs.storage.RawDataBlockList;

        specialinvoke $r4.<org.apache.poi.poifs.storage.RawDataBlockList: void <init>(java.io.InputStream,org.apache.poi.poifs.common.POIFSBigBlockSize)>($r0, $r3);

        staticinvoke <org.apache.poi.poifs.dev.POIFSHeaderDumper: void displayRawBlocksSummary(org.apache.poi.poifs.storage.RawDataBlockList)>($r4);

        $r5 = new org.apache.poi.poifs.storage.BlockAllocationTableReader;

        $r6 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()>();

        $i0 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: int getBATCount()>();

        $r7 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: int[] getBATArray()>();

        $i1 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: int getXBATCount()>();

        $i2 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: int getXBATIndex()>();

        specialinvoke $r5.<org.apache.poi.poifs.storage.BlockAllocationTableReader: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize,int,int[],int,int,org.apache.poi.poifs.storage.BlockList)>($r6, $i0, $r7, $i1, $i2, $r4);

        staticinvoke <org.apache.poi.poifs.dev.POIFSHeaderDumper: void displayBATReader(org.apache.poi.poifs.storage.BlockAllocationTableReader)>($r5);

        $r8 = new org.apache.poi.poifs.property.PropertyTable;

        specialinvoke $r8.<org.apache.poi.poifs.property.PropertyTable: void <init>(org.apache.poi.poifs.storage.HeaderBlock,org.apache.poi.poifs.storage.RawDataBlockList)>($r2, $r4);

        $r9 = virtualinvoke $r8.<org.apache.poi.poifs.property.PropertyTable: org.apache.poi.poifs.property.RootProperty getRoot()>();

        $i3 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: int getSBATStart()>();

        staticinvoke <org.apache.poi.poifs.storage.SmallBlockTableReader: org.apache.poi.poifs.storage.BlockList getSmallDocumentBlocks(org.apache.poi.poifs.common.POIFSBigBlockSize,org.apache.poi.poifs.storage.RawDataBlockList,org.apache.poi.poifs.property.RootProperty,int)>($r3, $r4, $r9, $i3);

        return;
    }

    public static void displayHeader(org.apache.poi.poifs.storage.HeaderBlock) throws java.lang.Exception
    {
        int[] $r11;
        java.lang.StringBuilder $r1, $r3, $r6, $r8, $r10, $r12, $r14, $r16, $r17, $r19, $r21, $r22, $r24, $r26, $r27, $r29, $r31, $r32, $r34, $r36, $r37, $r39, $r41, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r7, $r13, $r18, $r23, $r28, $r33, $r38, $r43;
        org.apache.poi.poifs.storage.HeaderBlock r4;
        java.io.PrintStream $r0, $r2, $r9, $r15, $r20, $r25, $r30, $r35, $r40, $r44;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r5;

        r4 := @parameter0: org.apache.poi.poifs.storage.HeaderBlock;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Header Details:");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Block size: ");

        $r5 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()>();

        $i0 = virtualinvoke $r5.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BAT (FAT) header blocks: ");

        $r11 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: int[] getBATArray()>();

        $i1 = lengthof $r11;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BAT (FAT) block count: ");

        $i2 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: int getBATCount()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" XBAT (FAT) block count: ");

        $i3 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: int getXBATCount()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" XBAT (FAT) block 1 at: ");

        $i4 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: int getXBATIndex()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SBAT (MiniFAT) block count: ");

        $i5 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: int getSBATCount()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SBAT (MiniFAT) block 1 at: ");

        $i6 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: int getSBATStart()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r38);

        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Property table at: ");

        $i7 = virtualinvoke r4.<org.apache.poi.poifs.storage.HeaderBlock: int getPropertyStart()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r43);

        $r44 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("");

        return;
    }

    public static void displayRawBlocksSummary(org.apache.poi.poifs.storage.RawDataBlockList) throws java.lang.Exception
    {
        byte[] $r17, r18, $r19;
        java.lang.Integer $r14;
        java.lang.reflect.Method $r11;
        org.apache.poi.poifs.storage.RawDataBlockList r4;
        java.lang.StringBuilder $r1, $r3, $r5, $r20, $r22, $r23, $r24;
        java.lang.Object[] $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r6, $r25, $r27;
        java.io.PrintStream $r0, $r2, $r12, $r21, $r26;
        java.lang.Class[] $r9;
        org.apache.poi.poifs.storage.ListManagedBlock r16;
        java.lang.Class $r7, $r8, $r10;
        java.lang.Object $r15;

        r4 := @parameter0: org.apache.poi.poifs.storage.RawDataBlockList;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Raw Blocks Details:");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Number of blocks: ");

        $i0 = virtualinvoke r4.<org.apache.poi.poifs.storage.RawDataBlockList: int blockCount()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r9 = newarray (java.lang.Class)[1];

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r9[0] = $r10;

        $r11 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("get", $r9);

        virtualinvoke $r11.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        i6 = 0;

     label1:
        $i1 = virtualinvoke r4.<org.apache.poi.poifs.storage.RawDataBlockList: int blockCount()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(16, $i1);

        if i6 >= $i2 goto label2;

        $r13 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r13[0] = $r14;

        $r15 = virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r13);

        r16 = (org.apache.poi.poifs.storage.ListManagedBlock) $r15;

        $r17 = interfaceinvoke r16.<org.apache.poi.poifs.storage.ListManagedBlock: byte[] getData()>();

        $i3 = lengthof $r17;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(48, $i3);

        r18 = newarray (byte)[$i4];

        $r19 = interfaceinvoke r16.<org.apache.poi.poifs.storage.ListManagedBlock: byte[] getData()>();

        $i5 = lengthof r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, 0, r18, 0, $i5);

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Block #");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r27 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String dump(byte[],long,int)>(r18, 0L, 0);

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r27);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("");

        return;
    }

    public static void displayBATReader(org.apache.poi.poifs.storage.BlockAllocationTableReader) throws java.lang.Exception
    {
        int $i0, $i1, i2, $i4, $i6, $i8, $i10;
        java.lang.String r7, $r14;
        org.apache.poi.poifs.storage.BlockAllocationTableReader r1;
        java.io.PrintStream $r0, $r6, $r8;
        java.lang.reflect.Field $r3;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15;
        org.apache.poi.util.IntList r5;

        r1 := @parameter0: org.apache.poi.poifs.storage.BlockAllocationTableReader;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Sectors, as referenced from the FAT:");

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("_entries");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (org.apache.poi.util.IntList) $r4;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r5.<org.apache.poi.util.IntList: int size()>();

        if i2 >= $i0 goto label6;

        $i1 = virtualinvoke r5.<org.apache.poi.util.IntList: int get(int)>(i2);

        r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $i4 = (int) -2;

        if $i1 != $i4 goto label2;

        r7 = "End Of Chain";

        goto label5;

     label2:
        $i6 = (int) -4;

        if $i1 != $i6 goto label3;

        r7 = "DI Fat Block";

        goto label5;

     label3:
        $i8 = (int) -3;

        if $i1 != $i8 goto label4;

        r7 = "Normal Fat Block";

        goto label5;

     label4:
        $i10 = (int) -1;

        if $i1 != $i10 goto label5;

        r7 = "Block Not Used (Free)";

     label5:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Block  # ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r14);

        i2 = i2 + 1;

        goto label1;

     label6:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("");

        return;
    }
}
