final class com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void end(java.lang.String)
    {
        java.lang.Object[] $r15;
        java.lang.String[] $r14, $r16, r17;
        com.mycila.inject.internal.asm.MethodVisitor $r21;
        java.util.Map r3;
        int $i0, $i1;
        java.lang.String $r5, r7, r9, r11, r22;
        com.mycila.inject.internal.asm.ClassWriter $r19;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r1, $r18, $r20;
        java.util.List r13;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule;

        r22 := @parameter0: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.lang.Object pop()>();

        r3 = (java.util.Map) $r2;

        $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("access");

        $r5 = (java.lang.String) $r4;

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule: int getAccess(java.lang.String)>($r5);

        $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("name");

        r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("desc");

        r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("signature");

        r11 = (java.lang.String) $r10;

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("exceptions");

        r13 = (java.util.List) $r12;

        $i1 = interfaceinvoke r13.<java.util.List: int size()>();

        $r14 = newarray (java.lang.String)[$i1];

        $r15 = interfaceinvoke r13.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r16 = (java.lang.String[]) $r15;

        r17 = (java.lang.String[]) $r16;

        $r20 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r18 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionsRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r19 = $r18.<com.mycila.inject.internal.asm.xml.ASMContentHandler: com.mycila.inject.internal.asm.ClassWriter cw>;

        $r21 = virtualinvoke $r19.<com.mycila.inject.internal.asm.ClassWriter: com.mycila.inject.internal.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i0, r7, r9, r11, r17);

        virtualinvoke $r20.<com.mycila.inject.internal.asm.xml.ASMContentHandler: void push(java.lang.Object)>($r21);

        return;
    }
}
