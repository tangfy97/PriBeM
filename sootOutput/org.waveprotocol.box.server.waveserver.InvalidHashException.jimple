public class org.waveprotocol.box.server.waveserver.InvalidHashException extends org.waveprotocol.box.server.waveserver.WaveServerException
{
    private final org.waveprotocol.wave.model.version.HashedVersion expected;
    private final org.waveprotocol.wave.model.version.HashedVersion target;

    public void <init>(org.waveprotocol.wave.model.version.HashedVersion, org.waveprotocol.wave.model.version.HashedVersion)
    {
        long $l0;
        org.waveprotocol.wave.model.version.HashedVersion r3, r6;
        org.waveprotocol.box.server.waveserver.InvalidHashException r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7;
        java.lang.String $r8;

        r0 := @this: org.waveprotocol.box.server.waveserver.InvalidHashException;

        r3 := @parameter0: org.waveprotocol.wave.model.version.HashedVersion;

        r6 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mismatched hash at version ");

        $l0 = virtualinvoke r3.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.waveprotocol.box.server.waveserver.WaveServerException: void <init>(java.lang.String)>($r8);

        r0.<org.waveprotocol.box.server.waveserver.InvalidHashException: org.waveprotocol.wave.model.version.HashedVersion expected> = r3;

        r0.<org.waveprotocol.box.server.waveserver.InvalidHashException: org.waveprotocol.wave.model.version.HashedVersion target> = r6;

        return;
    }

    public org.waveprotocol.wave.model.version.HashedVersion expectedVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r1;
        org.waveprotocol.box.server.waveserver.InvalidHashException r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.InvalidHashException;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.InvalidHashException: org.waveprotocol.wave.model.version.HashedVersion expected>;

        return $r1;
    }

    public org.waveprotocol.wave.model.version.HashedVersion targetVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r1;
        org.waveprotocol.box.server.waveserver.InvalidHashException r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.InvalidHashException;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.InvalidHashException: org.waveprotocol.wave.model.version.HashedVersion target>;

        return $r1;
    }
}
