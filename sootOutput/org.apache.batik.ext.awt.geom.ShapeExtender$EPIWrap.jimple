public class org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap extends java.lang.Object implements org.apache.batik.ext.awt.geom.ExtendedPathIterator
{
    java.awt.geom.PathIterator pi;

    public void <init>(java.awt.geom.PathIterator)
    {
        org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap r0;
        java.awt.geom.PathIterator r1;

        r0 := @this: org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap;

        r1 := @parameter0: java.awt.geom.PathIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi> = null;

        r0.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi> = r1;

        return;
    }

    public int currentSegment()
    {
        org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap r1;
        int $i0;
        float[] r0;
        java.awt.geom.PathIterator $r2;

        r1 := @this: org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap;

        r0 = newarray (float)[6];

        $r2 = r1.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi>;

        $i0 = interfaceinvoke $r2.<java.awt.geom.PathIterator: int currentSegment(float[])>(r0);

        return $i0;
    }

    public int currentSegment(double[])
    {
        org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap r0;
        double[] r1;
        int $i0;
        java.awt.geom.PathIterator $r2;

        r0 := @this: org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap;

        r1 := @parameter0: double[];

        $r2 = r0.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi>;

        $i0 = interfaceinvoke $r2.<java.awt.geom.PathIterator: int currentSegment(double[])>(r1);

        return $i0;
    }

    public int currentSegment(float[])
    {
        org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap r0;
        int $i0;
        float[] r1;
        java.awt.geom.PathIterator $r2;

        r0 := @this: org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap;

        r1 := @parameter0: float[];

        $r2 = r0.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi>;

        $i0 = interfaceinvoke $r2.<java.awt.geom.PathIterator: int currentSegment(float[])>(r1);

        return $i0;
    }

    public int getWindingRule()
    {
        int $i0;
        org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap r0;
        java.awt.geom.PathIterator $r1;

        r0 := @this: org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi>;

        $i0 = interfaceinvoke $r1.<java.awt.geom.PathIterator: int getWindingRule()>();

        return $i0;
    }

    public boolean isDone()
    {
        org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap r0;
        java.awt.geom.PathIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi>;

        $z0 = interfaceinvoke $r1.<java.awt.geom.PathIterator: boolean isDone()>();

        return $z0;
    }

    public void next()
    {
        org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap r0;
        java.awt.geom.PathIterator $r1;

        r0 := @this: org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ShapeExtender$EPIWrap: java.awt.geom.PathIterator pi>;

        interfaceinvoke $r1.<java.awt.geom.PathIterator: void next()>();

        return;
    }
}
