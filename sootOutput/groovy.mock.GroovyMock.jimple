public class groovy.mock.GroovyMock extends groovy.lang.GroovyObjectSupport implements com.mockobjects.Verifiable
{
    private com.mockobjects.dynamic.CallBag calls;
    private com.mockobjects.dynamic.CallFactory callFactory;
    private com.mockobjects.dynamic.Mock mock;
    private groovy.lang.GroovyObject instance;
    static java.lang.Class class$groovy$mock$GroovyMock$I;

    public void <init>()
    {
        com.mockobjects.dynamic.CallBag $r7;
        com.mockobjects.dynamic.DefaultCallFactory $r8;
        com.mockobjects.dynamic.Mock $r9;
        com.mockobjects.dynamic.CallFactory $r11;
        java.lang.Class $r4, $r6;
        groovy.mock.GroovyMock r0;
        groovy.mock.GroovyMock$1 $r10;

        r0 := @this: groovy.mock.GroovyMock;

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void <init>()>();

        $r7 = new com.mockobjects.dynamic.CallBag;

        specialinvoke $r7.<com.mockobjects.dynamic.CallBag: void <init>()>();

        r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallBag calls> = $r7;

        $r8 = new com.mockobjects.dynamic.DefaultCallFactory;

        specialinvoke $r8.<com.mockobjects.dynamic.DefaultCallFactory: void <init>()>();

        $r11 = (com.mockobjects.dynamic.CallFactory) $r8;

        r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallFactory callFactory> = $r11;

        $r9 = new com.mockobjects.dynamic.Mock;

        $r4 = <groovy.mock.GroovyMock: java.lang.Class class$groovy$mock$GroovyMock$I>;

        if $r4 != null goto label1;

        $r6 = staticinvoke <groovy.mock.GroovyMock: java.lang.Class class$(java.lang.String)>("groovy.mock.GroovyMock$I");

        <groovy.mock.GroovyMock: java.lang.Class class$groovy$mock$GroovyMock$I> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.mock.GroovyMock: java.lang.Class class$groovy$mock$GroovyMock$I>;

     label2:
        specialinvoke $r9.<com.mockobjects.dynamic.Mock: void <init>(java.lang.Class)>($r6);

        r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.Mock mock> = $r9;

        $r10 = new groovy.mock.GroovyMock$1;

        specialinvoke $r10.<groovy.mock.GroovyMock$1: void <init>(groovy.mock.GroovyMock)>(r0);

        r0.<groovy.mock.GroovyMock: groovy.lang.GroovyObject instance> = $r10;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r0;
        groovy.mock.GroovyMock r1;
        boolean $z0;

        r1 := @this: groovy.mock.GroovyMock;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("verify");

        if $z0 == 0 goto label1;

        virtualinvoke r1.<groovy.mock.GroovyMock: void verify()>();

        goto label2;

     label1:
        specialinvoke r1.<groovy.mock.GroovyMock: void expectMethod(java.lang.String,java.lang.Object)>(r0, r2);

     label2:
        return null;
    }

    public groovy.lang.GroovyObject getInstance()
    {
        groovy.lang.GroovyObject $r1;
        groovy.mock.GroovyMock r0;

        r0 := @this: groovy.mock.GroovyMock;

        $r1 = r0.<groovy.mock.GroovyMock: groovy.lang.GroovyObject instance>;

        return $r1;
    }

    public static groovy.mock.GroovyMock newInstance()
    {
        groovy.mock.GroovyMock $r0;

        $r0 = new groovy.mock.GroovyMock;

        specialinvoke $r0.<groovy.mock.GroovyMock: void <init>()>();

        return $r0;
    }

    private void expectMethod(java.lang.String, java.lang.Object)
    {
        com.mockobjects.dynamic.ConstraintMatcher $r2;
        com.mockobjects.dynamic.CallBag $r5;
        com.mockobjects.dynamic.Callable $r8, $r9, $r10;
        com.mockobjects.dynamic.CallFactory $r4, $r6, $r7;
        java.lang.Object r1;
        groovy.mock.GroovyMock r0;
        java.lang.String r3;

        r0 := @this: groovy.mock.GroovyMock;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.ConstraintMatcher createMatcher(java.lang.Object)>(r1);

        $r5 = r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallBag calls>;

        $r6 = r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallFactory callFactory>;

        $r7 = r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallFactory callFactory>;

        $r4 = r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallFactory callFactory>;

        $r8 = interfaceinvoke $r4.<com.mockobjects.dynamic.CallFactory: com.mockobjects.dynamic.Callable createVoidStub()>();

        $r9 = interfaceinvoke $r7.<com.mockobjects.dynamic.CallFactory: com.mockobjects.dynamic.Callable createCallSignature(java.lang.String,com.mockobjects.dynamic.ConstraintMatcher,com.mockobjects.dynamic.Callable)>(r3, $r2, $r8);

        $r10 = interfaceinvoke $r6.<com.mockobjects.dynamic.CallFactory: com.mockobjects.dynamic.Callable createCallExpectation(com.mockobjects.dynamic.Callable)>($r9);

        virtualinvoke $r5.<com.mockobjects.dynamic.CallBag: void addExpect(com.mockobjects.dynamic.Callable)>($r10);

        return;
    }

    private com.mockobjects.dynamic.ConstraintMatcher createMatcher(java.lang.Object)
    {
        com.mockobjects.dynamic.ConstraintMatcher $r3, $r10;
        java.lang.Object[] $r4, r5;
        groovy.lang.Closure r8;
        groovy.mock.ClosureConstraintMatcher $r9;
        java.lang.Object r0, $r6, $r7;
        java.lang.Class $r1;
        com.mockobjects.constraint.Constraint $r2;
        groovy.mock.GroovyMock r11;
        boolean $z0, $z1;

        r11 := @this: groovy.mock.GroovyMock;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Object[]) r0;

        r5 = (java.lang.Object[]) $r4;

        $r6 = r5[0];

        $z1 = $r6 instanceof groovy.lang.Closure;

        if $z1 == 0 goto label1;

        $r7 = r5[0];

        r8 = (groovy.lang.Closure) $r7;

        $r9 = new groovy.mock.ClosureConstraintMatcher;

        specialinvoke $r9.<groovy.mock.ClosureConstraintMatcher: void <init>(groovy.lang.Closure)>(r8);

        $r10 = staticinvoke <com.mockobjects.dynamic.C: com.mockobjects.dynamic.ConstraintMatcher args(com.mockobjects.constraint.Constraint)>($r9);

        return $r10;

     label1:
        $r2 = staticinvoke <com.mockobjects.dynamic.C: com.mockobjects.constraint.Constraint eq(java.lang.Object)>(r0);

        $r3 = staticinvoke <com.mockobjects.dynamic.C: com.mockobjects.dynamic.ConstraintMatcher args(com.mockobjects.constraint.Constraint)>($r2);

        return $r3;
    }

    private java.lang.Object callMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r7;
        java.lang.Object[] $r2;
        com.mockobjects.dynamic.CallBag $r5;
        java.lang.RuntimeException $r8;
        com.mockobjects.dynamic.Mock $r4;
        java.lang.Object r3, $r6;
        groovy.mock.GroovyMock r0;
        java.lang.String r1;

        r0 := @this: groovy.mock.GroovyMock;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

     label1:
        $r5 = r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallBag calls>;

        $r4 = r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.Mock mock>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r6 = virtualinvoke $r5.<com.mockobjects.dynamic.CallBag: java.lang.Object call(com.mockobjects.dynamic.Mock,java.lang.String,java.lang.Object[])>($r4, r1, $r2);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void verify()
    {
        groovy.mock.GroovyMock r0;
        com.mockobjects.dynamic.CallBag $r1;

        r0 := @this: groovy.mock.GroovyMock;

        $r1 = r0.<groovy.mock.GroovyMock: com.mockobjects.dynamic.CallBag calls>;

        virtualinvoke $r1.<com.mockobjects.dynamic.CallBag: void verify()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.lang.Object access$000(groovy.mock.GroovyMock, java.lang.String, java.lang.Object)
    {
        java.lang.Object r2, $r3;
        groovy.mock.GroovyMock r0;
        java.lang.String r1;

        r0 := @parameter0: groovy.mock.GroovyMock;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $r3 = specialinvoke r0.<groovy.mock.GroovyMock: java.lang.Object callMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }
}
