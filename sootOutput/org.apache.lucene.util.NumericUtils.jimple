public final class org.apache.lucene.util.NumericUtils extends java.lang.Object
{
    public static final int PRECISION_STEP_DEFAULT;
    public static final byte SHIFT_START_LONG;
    public static final int BUF_SIZE_LONG;
    public static final byte SHIFT_START_INT;
    public static final int BUF_SIZE_INT;

    private void <init>()
    {
        org.apache.lucene.util.NumericUtils r0;

        r0 := @this: org.apache.lucene.util.NumericUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int longToPrefixCoded(long, int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r0;
        int i1, $i2;
        long l0;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.util.BytesRef;

        staticinvoke <org.apache.lucene.util.NumericUtils: void longToPrefixCodedBytes(long,int,org.apache.lucene.util.BytesRef)>(l0, i1, r0);

        $i2 = virtualinvoke r0.<org.apache.lucene.util.BytesRef: int hashCode()>();

        return $i2;
    }

    public static int intToPrefixCoded(int, int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r0;
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.util.BytesRef;

        staticinvoke <org.apache.lucene.util.NumericUtils: void intToPrefixCodedBytes(int,int,org.apache.lucene.util.BytesRef)>(i0, i1, r0);

        $i2 = virtualinvoke r0.<org.apache.lucene.util.BytesRef: int hashCode()>();

        return $i2;
    }

    public static void longToPrefixCodedBytes(long, int, org.apache.lucene.util.BytesRef)
    {
        byte[] $r1, $r2, $r3, $r4;
        long l10, $l12, $l15, l17;
        byte $b9, $b14;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i13, i16, $i19, $i21;
        org.apache.lucene.util.BytesRef r0;
        java.lang.IllegalArgumentException $r6;

        l10 := @parameter0: long;

        i0 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.util.BytesRef;

        $i19 = (int) -64;

        $i1 = i0 & $i19;

        if $i1 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal shift value, must be 0..63");

        throw $r6;

     label1:
        $i2 = 63 - i0;

        $i3 = $i2 * 37;

        $i4 = $i3 >> 8;

        i16 = $i4 + 1;

        r0.<org.apache.lucene.util.BytesRef: int offset> = 0;

        $i5 = i16 + 1;

        r0.<org.apache.lucene.util.BytesRef: int length> = $i5;

        $r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i7 = lengthof $r1;

        $i6 = r0.<org.apache.lucene.util.BytesRef: int length>;

        if $i7 >= $i6 goto label2;

        $r4 = newarray (byte)[11];

        r0.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r4;

     label2:
        $r2 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = 32 + i0;

        $b9 = (byte) $i8;

        $r2[0] = $b9;

        $l15 = l10 ^ -9223372036854775808L;

        l17 = $l15 >>> i0;

     label3:
        if i16 <= 0 goto label4;

        $r3 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i11 = i16;

        $i21 = (int) -1;

        i16 = i16 + $i21;

        $l12 = l17 & 127L;

        $i13 = (int) $l12;

        $b14 = (byte) $i13;

        $r3[$i11] = $b14;

        l17 = l17 >>> 7;

        goto label3;

     label4:
        return;
    }

    public static void intToPrefixCodedBytes(int, int, org.apache.lucene.util.BytesRef)
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b9, $b13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, $i11, $i12, $i14, i15, i16, $i18, $i20;
        org.apache.lucene.util.BytesRef r0;
        java.lang.IllegalArgumentException $r6;

        i10 := @parameter0: int;

        i0 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.util.BytesRef;

        $i18 = (int) -32;

        $i1 = i0 & $i18;

        if $i1 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal shift value, must be 0..31");

        throw $r6;

     label1:
        $i2 = 31 - i0;

        $i3 = $i2 * 37;

        $i4 = $i3 >> 8;

        i15 = $i4 + 1;

        r0.<org.apache.lucene.util.BytesRef: int offset> = 0;

        $i5 = i15 + 1;

        r0.<org.apache.lucene.util.BytesRef: int length> = $i5;

        $r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i7 = lengthof $r1;

        $i6 = r0.<org.apache.lucene.util.BytesRef: int length>;

        if $i7 >= $i6 goto label2;

        $r4 = newarray (byte)[11];

        r0.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r4;

     label2:
        $r2 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = 96 + i0;

        $b9 = (byte) $i8;

        $r2[0] = $b9;

        $i14 = i10 ^ -2147483648;

        i16 = $i14 >>> i0;

     label3:
        if i15 <= 0 goto label4;

        $r3 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i11 = i15;

        $i20 = (int) -1;

        i15 = i15 + $i20;

        $i12 = i16 & 127;

        $b13 = (byte) $i12;

        $r3[$i11] = $b13;

        i16 = i16 >>> 7;

        goto label3;

     label4:
        return;
    }

    public static int getPrefixCodedLongShift(org.apache.lucene.util.BytesRef)
    {
        byte[] $r1;
        org.apache.lucene.util.BytesRef r0;
        java.lang.NumberFormatException $r9;
        byte $b1;
        int $i0, i2, $i3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;
        java.lang.String $r7;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i0 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $b1 = $r1[$i0];

        $i3 = (int) $b1;

        i2 = $i3 - 32;

        if i2 > 63 goto label1;

        if i2 >= 0 goto label2;

     label1:
        $r9 = new java.lang.NumberFormatException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid shift value (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in prefixCoded bytes (is encoded value really an INT?)");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r7);

        throw $r9;

     label2:
        return i2;
    }

    public static int getPrefixCodedIntShift(org.apache.lucene.util.BytesRef)
    {
        byte[] $r1;
        byte $b1;
        org.apache.lucene.util.BytesRef r0;
        int $i0, i2, $i3;
        java.lang.NumberFormatException $r3;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i0 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $b1 = $r1[$i0];

        $i3 = (int) $b1;

        i2 = $i3 - 96;

        if i2 > 31 goto label1;

        if i2 >= 0 goto label2;

     label1:
        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Invalid shift value in prefixCoded bytes (is encoded value really an INT?)");

        throw $r3;

     label2:
        return i2;
    }

    public static long prefixCodedToLong(org.apache.lucene.util.BytesRef)
    {
        byte[] $r1;
        long $l5, $l6, $l8, l12, l14;
        short $s9, $s16;
        byte b7;
        int $i0, $i1, $i2, i3, $i4, $i10, $i11, i13, $i15, $i17;
        java.lang.String $r5, $r10;
        org.apache.lucene.util.BytesRef r0;
        java.lang.NumberFormatException $r12;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r11;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        l12 = 0L;

        $i0 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        i13 = $i0 + 1;

        $i2 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int length>;

        i3 = $i2 + $i1;

     label1:
        if i13 >= i3 goto label3;

        l14 = l12 << 7;

        $r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        b7 = $r1[i13];

        $i15 = (int) b7;

        if $i15 >= 0 goto label2;

        $r12 = new java.lang.NumberFormatException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid prefixCoded numerical value representation (byte ");

        $s16 = (short) b7;

        $s9 = $s16 & 255;

        $i17 = (int) $s9;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at position ");

        $i10 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i11 = i13 - $i10;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid)");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r12;

     label2:
        $l8 = (long) b7;

        l12 = l14 | $l8;

        i13 = i13 + 1;

        goto label1;

     label3:
        $i4 = staticinvoke <org.apache.lucene.util.NumericUtils: int getPrefixCodedLongShift(org.apache.lucene.util.BytesRef)>(r0);

        $l5 = l12 << $i4;

        $l6 = $l5 ^ -9223372036854775808L;

        return $l6;
    }

    public static int prefixCodedToInt(org.apache.lucene.util.BytesRef)
    {
        byte[] $r1;
        short $s8, $s15;
        byte b7;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i9, $i10, i11, i12, i13, $i14, $i16, $i17;
        java.lang.String $r5, $r10;
        org.apache.lucene.util.BytesRef r0;
        java.lang.NumberFormatException $r12;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r11;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        i11 = 0;

        $i0 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        i12 = $i0 + 1;

        $i2 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int length>;

        i3 = $i2 + $i1;

     label1:
        if i12 >= i3 goto label3;

        i13 = i11 << 7;

        $r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        b7 = $r1[i12];

        $i14 = (int) b7;

        if $i14 >= 0 goto label2;

        $r12 = new java.lang.NumberFormatException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid prefixCoded numerical value representation (byte ");

        $s15 = (short) b7;

        $s8 = $s15 & 255;

        $i16 = (int) $s8;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i16);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at position ");

        $i9 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i10 = i12 - $i9;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid)");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r10);

        throw $r12;

     label2:
        $i17 = (int) b7;

        i11 = i13 | $i17;

        i12 = i12 + 1;

        goto label1;

     label3:
        $i4 = staticinvoke <org.apache.lucene.util.NumericUtils: int getPrefixCodedIntShift(org.apache.lucene.util.BytesRef)>(r0);

        $i5 = i11 << $i4;

        $i6 = $i5 ^ -2147483648;

        return $i6;
    }

    public static long doubleToSortableLong(double)
    {
        byte $b1;
        int $i3;
        long $l0, l2;
        double d0;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        l2 = $l0;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label1;

        l2 = $l0 ^ 9223372036854775807L;

     label1:
        return l2;
    }

    public static double sortableLongToDouble(long)
    {
        byte $b0;
        int $i2;
        long l1;
        double $d0;

        l1 := @parameter0: long;

        $b0 = l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        l1 = l1 ^ 9223372036854775807L;

     label1:
        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(l1);

        return $d0;
    }

    public static int floatToSortableInt(float)
    {
        int $i0, i1;
        float f0;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        i1 = $i0;

        if $i0 >= 0 goto label1;

        i1 = $i0 ^ 2147483647;

     label1:
        return i1;
    }

    public static float sortableIntToFloat(int)
    {
        int i0;
        float $f0;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        i0 = i0 ^ 2147483647;

     label1:
        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i0);

        return $f0;
    }

    public static void splitLongRange(org.apache.lucene.util.NumericUtils$LongRangeBuilder, int, long, long)
    {
        org.apache.lucene.util.NumericUtils$LongRangeBuilder r0;
        int i0;
        long l1, l2;

        r0 := @parameter0: org.apache.lucene.util.NumericUtils$LongRangeBuilder;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        staticinvoke <org.apache.lucene.util.NumericUtils: void splitRange(java.lang.Object,int,int,long,long)>(r0, 64, i0, l1, l2);

        return;
    }

    public static void splitIntRange(org.apache.lucene.util.NumericUtils$IntRangeBuilder, int, int, int)
    {
        org.apache.lucene.util.NumericUtils$IntRangeBuilder r0;
        int i0, i1, i2;
        long $l3, $l4;

        r0 := @parameter0: org.apache.lucene.util.NumericUtils$IntRangeBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $l4 = (long) i1;

        $l3 = (long) i2;

        staticinvoke <org.apache.lucene.util.NumericUtils: void splitRange(java.lang.Object,int,int,long,long)>(r0, 32, i0, $l4, $l3);

        return;
    }

    private static void splitRange(java.lang.Object, int, int, long, long)
    {
        byte $b1, $b6, $b8, $b11, $b12, $b15;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        long $l3, $l4, $l5, $l7, $l9, $l10, $l16, $l17, $l18, $l19, $l20, $l21, $l22, l23, l24, $l26, $l27;
        int i0, $i2, i13, $i14, i25, $i28, $i29, $i30, $i31;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i13 := @parameter1: int;

        i0 := @parameter2: int;

        l23 := @parameter3: long;

        l24 := @parameter4: long;

        if i0 >= 1 goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("precisionStep must be >=1");

        throw $r2;

     label01:
        $b1 = l23 cmp l24;

        $i28 = (int) $b1;

        if $i28 <= 0 goto label02;

        return;

     label02:
        i25 = 0;

     label03:
        $i2 = i25 + i0;

        $l16 = 1L << $i2;

        $l3 = 1L << i0;

        $l4 = $l3 - 1L;

        $l17 = $l4 << i25;

        $l5 = l23 & $l17;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z0 = $z3;

        $l7 = l24 & $l17;

        $b8 = $l7 cmp $l17;

        if $b8 == 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        z1 = $z4;

        if z0 == 0 goto label08;

        $l26 = l23 + $l16;

        goto label09;

     label08:
        $l26 = l23;

     label09:
        $l9 = $l17 ^ -1L;

        $l22 = $l26 & $l9;

        if z1 == 0 goto label10;

        $l27 = l24 - $l16;

        goto label11;

     label10:
        $l27 = l24;

     label11:
        $l10 = $l17 ^ -1L;

        $l21 = $l27 & $l10;

        $b11 = $l22 cmp l23;

        $i29 = (int) $b11;

        if $i29 >= 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        z2 = $z5;

        $b12 = $l21 cmp l24;

        $i30 = (int) $b12;

        if $i30 <= 0 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        $i14 = i25 + i0;

        if $i14 >= i13 goto label16;

        $b15 = $l22 cmp $l21;

        $i31 = (int) $b15;

        if $i31 > 0 goto label16;

        if z2 != 0 goto label16;

        if $z6 == 0 goto label17;

     label16:
        staticinvoke <org.apache.lucene.util.NumericUtils: void addRange(java.lang.Object,int,long,long,int)>(r0, i13, l23, l24, i25);

        goto label20;

     label17:
        if z0 == 0 goto label18;

        $l20 = l23 | $l17;

        staticinvoke <org.apache.lucene.util.NumericUtils: void addRange(java.lang.Object,int,long,long,int)>(r0, i13, l23, $l20, i25);

     label18:
        if z1 == 0 goto label19;

        $l18 = $l17 ^ -1L;

        $l19 = l24 & $l18;

        staticinvoke <org.apache.lucene.util.NumericUtils: void addRange(java.lang.Object,int,long,long,int)>(r0, i13, $l19, l24, i25);

     label19:
        l23 = $l22;

        l24 = $l21;

        i25 = i25 + i0;

        goto label03;

     label20:
        return;
    }

    private static void addRange(java.lang.Object, int, long, long, int)
    {
        org.apache.lucene.util.NumericUtils$LongRangeBuilder $r1;
        org.apache.lucene.util.NumericUtils$IntRangeBuilder $r2;
        long $l1, $l2, l4, l7, l8;
        java.lang.IllegalArgumentException $r3;
        int i0, i3, $i5, $i6;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i3 := @parameter1: int;

        l4 := @parameter2: long;

        l7 := @parameter3: long;

        i0 := @parameter4: int;

        $l1 = 1L << i0;

        $l2 = $l1 - 1L;

        l8 = l7 | $l2;

        lookupswitch(i3)
        {
            case 32: goto label2;
            case 64: goto label1;
            default: goto label3;
        };

     label1:
        $r1 = (org.apache.lucene.util.NumericUtils$LongRangeBuilder) r0;

        virtualinvoke $r1.<org.apache.lucene.util.NumericUtils$LongRangeBuilder: void addRange(long,long,int)>(l4, l8, i0);

        goto label4;

     label2:
        $r2 = (org.apache.lucene.util.NumericUtils$IntRangeBuilder) r0;

        $i6 = (int) l4;

        $i5 = (int) l8;

        virtualinvoke $r2.<org.apache.lucene.util.NumericUtils$IntRangeBuilder: void addRange(int,int,int)>($i6, $i5, i0);

        goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("valSize must be 32 or 64.");

        throw $r3;

     label4:
        return;
    }

    public static org.apache.lucene.index.TermsEnum filterPrefixCodedLongs(org.apache.lucene.index.TermsEnum)
    {
        org.apache.lucene.util.NumericUtils$1 $r0;
        org.apache.lucene.index.TermsEnum r1;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        $r0 = new org.apache.lucene.util.NumericUtils$1;

        specialinvoke $r0.<org.apache.lucene.util.NumericUtils$1: void <init>(org.apache.lucene.index.TermsEnum,boolean)>(r1, 0);

        return $r0;
    }

    public static org.apache.lucene.index.TermsEnum filterPrefixCodedInts(org.apache.lucene.index.TermsEnum)
    {
        org.apache.lucene.util.NumericUtils$2 $r0;
        org.apache.lucene.index.TermsEnum r1;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        $r0 = new org.apache.lucene.util.NumericUtils$2;

        specialinvoke $r0.<org.apache.lucene.util.NumericUtils$2: void <init>(org.apache.lucene.index.TermsEnum,boolean)>(r1, 0);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.util.NumericUtils: int BUF_SIZE_INT> = 6;

        <org.apache.lucene.util.NumericUtils: byte SHIFT_START_INT> = 96;

        <org.apache.lucene.util.NumericUtils: int BUF_SIZE_LONG> = 11;

        <org.apache.lucene.util.NumericUtils: byte SHIFT_START_LONG> = 32;

        <org.apache.lucene.util.NumericUtils: int PRECISION_STEP_DEFAULT> = 4;

        return;
    }
}
