class org.mozilla.javascript.optimizer.OptTransformer extends org.mozilla.javascript.NodeTransformer
{
    private java.util.Hashtable possibleDirectCalls;
    private org.mozilla.javascript.ObjArray directCallTargets;

    void <init>(java.util.Hashtable, org.mozilla.javascript.ObjArray)
    {
        java.util.Hashtable r1;
        org.mozilla.javascript.optimizer.OptTransformer r0;
        org.mozilla.javascript.ObjArray r2;

        r0 := @this: org.mozilla.javascript.optimizer.OptTransformer;

        r1 := @parameter0: java.util.Hashtable;

        r2 := @parameter1: org.mozilla.javascript.ObjArray;

        specialinvoke r0.<org.mozilla.javascript.NodeTransformer: void <init>()>();

        r0.<org.mozilla.javascript.optimizer.OptTransformer: java.util.Hashtable possibleDirectCalls> = r1;

        r0.<org.mozilla.javascript.optimizer.OptTransformer: org.mozilla.javascript.ObjArray directCallTargets> = r2;

        return;
    }

    protected void visitNew(org.mozilla.javascript.Node, org.mozilla.javascript.ScriptOrFnNode)
    {
        org.mozilla.javascript.ScriptOrFnNode r2;
        org.mozilla.javascript.Node r1;
        org.mozilla.javascript.optimizer.OptTransformer r0;

        r0 := @this: org.mozilla.javascript.optimizer.OptTransformer;

        r1 := @parameter0: org.mozilla.javascript.Node;

        r2 := @parameter1: org.mozilla.javascript.ScriptOrFnNode;

        specialinvoke r0.<org.mozilla.javascript.optimizer.OptTransformer: void detectDirectCall(org.mozilla.javascript.Node,org.mozilla.javascript.ScriptOrFnNode)>(r1, r2);

        specialinvoke r0.<org.mozilla.javascript.NodeTransformer: void visitNew(org.mozilla.javascript.Node,org.mozilla.javascript.ScriptOrFnNode)>(r1, r2);

        return;
    }

    protected void visitCall(org.mozilla.javascript.Node, org.mozilla.javascript.ScriptOrFnNode)
    {
        org.mozilla.javascript.ScriptOrFnNode r2;
        org.mozilla.javascript.Node r1;
        org.mozilla.javascript.optimizer.OptTransformer r0;

        r0 := @this: org.mozilla.javascript.optimizer.OptTransformer;

        r1 := @parameter0: org.mozilla.javascript.Node;

        r2 := @parameter1: org.mozilla.javascript.ScriptOrFnNode;

        specialinvoke r0.<org.mozilla.javascript.optimizer.OptTransformer: void detectDirectCall(org.mozilla.javascript.Node,org.mozilla.javascript.ScriptOrFnNode)>(r1, r2);

        specialinvoke r0.<org.mozilla.javascript.NodeTransformer: void visitCall(org.mozilla.javascript.Node,org.mozilla.javascript.ScriptOrFnNode)>(r1, r2);

        return;
    }

    private void detectDirectCall(org.mozilla.javascript.Node, org.mozilla.javascript.ScriptOrFnNode)
    {
        org.mozilla.javascript.Node r1, $r2, $r12, $r13, r15;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.mozilla.javascript.ScriptOrFnNode r0;
        java.lang.String r16;
        java.util.Hashtable $r4, $r5;
        boolean $z0, $z1;
        org.mozilla.javascript.optimizer.OptFunctionNode r7, $r14;
        org.mozilla.javascript.optimizer.OptTransformer r3;
        org.mozilla.javascript.ObjArray $r10, $r11;
        org.mozilla.javascript.FunctionNode $r8, $r9;
        java.lang.Object $r6;

        r3 := @this: org.mozilla.javascript.optimizer.OptTransformer;

        r1 := @parameter0: org.mozilla.javascript.Node;

        r0 := @parameter1: org.mozilla.javascript.ScriptOrFnNode;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.ScriptOrFnNode: int getType()>();

        if $i0 != 105 goto label6;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        i5 = 0;

        r15 = virtualinvoke $r2.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

     label1:
        if r15 == null goto label2;

        r15 = virtualinvoke r15.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        i5 = i5 + 1;

        goto label1;

     label2:
        if i5 != 0 goto label3;

        $r14 = staticinvoke <org.mozilla.javascript.optimizer.OptFunctionNode: org.mozilla.javascript.optimizer.OptFunctionNode get(org.mozilla.javascript.ScriptOrFnNode)>(r0);

        $r14.<org.mozilla.javascript.optimizer.OptFunctionNode: boolean itsContainsCalls0> = 1;

     label3:
        $r4 = r3.<org.mozilla.javascript.optimizer.OptTransformer: java.util.Hashtable possibleDirectCalls>;

        if $r4 == null goto label6;

        r16 = null;

        $i1 = virtualinvoke $r2.<org.mozilla.javascript.Node: int getType()>();

        if $i1 != 38 goto label4;

        r16 = virtualinvoke $r2.<org.mozilla.javascript.Node: java.lang.String getString()>();

        goto label5;

     label4:
        $i2 = virtualinvoke $r2.<org.mozilla.javascript.Node: int getType()>();

        if $i2 != 33 goto label5;

        $r12 = virtualinvoke $r2.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        $r13 = virtualinvoke $r12.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        r16 = virtualinvoke $r13.<org.mozilla.javascript.Node: java.lang.String getString()>();

     label5:
        if r16 == null goto label6;

        $r5 = r3.<org.mozilla.javascript.optimizer.OptTransformer: java.util.Hashtable possibleDirectCalls>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r16);

        r7 = (org.mozilla.javascript.optimizer.OptFunctionNode) $r6;

        if r7 == null goto label6;

        $r8 = r7.<org.mozilla.javascript.optimizer.OptFunctionNode: org.mozilla.javascript.FunctionNode fnode>;

        $i3 = virtualinvoke $r8.<org.mozilla.javascript.FunctionNode: int getParamCount()>();

        if i5 != $i3 goto label6;

        $r9 = r7.<org.mozilla.javascript.optimizer.OptFunctionNode: org.mozilla.javascript.FunctionNode fnode>;

        $z0 = virtualinvoke $r9.<org.mozilla.javascript.FunctionNode: boolean requiresActivation()>();

        if $z0 != 0 goto label6;

        if i5 > 32 goto label6;

        virtualinvoke r1.<org.mozilla.javascript.Node: void putProp(int,java.lang.Object)>(9, r7);

        $z1 = virtualinvoke r7.<org.mozilla.javascript.optimizer.OptFunctionNode: boolean isTargetOfDirectCall()>();

        if $z1 != 0 goto label6;

        $r10 = r3.<org.mozilla.javascript.optimizer.OptTransformer: org.mozilla.javascript.ObjArray directCallTargets>;

        $i4 = virtualinvoke $r10.<org.mozilla.javascript.ObjArray: int size()>();

        $r11 = r3.<org.mozilla.javascript.optimizer.OptTransformer: org.mozilla.javascript.ObjArray directCallTargets>;

        virtualinvoke $r11.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>(r7);

        virtualinvoke r7.<org.mozilla.javascript.optimizer.OptFunctionNode: void setDirectTargetIndex(int)>($i4);

     label6:
        return;
    }
}
