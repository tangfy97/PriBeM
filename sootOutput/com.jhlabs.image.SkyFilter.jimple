public class com.jhlabs.image.SkyFilter extends com.jhlabs.image.PointFilter
{
    private float scale;
    private float stretch;
    private float angle;
    private float amount;
    private float H;
    private float octaves;
    private float lacunarity;
    private float gain;
    private float bias;
    private int operation;
    private float min;
    private float max;
    private boolean ridged;
    private com.jhlabs.math.FBM fBm;
    protected java.util.Random random;
    private com.jhlabs.math.Function2D basis;
    private float cloudCover;
    private float cloudSharpness;
    private float time;
    private float glow;
    private float glowFalloff;
    private float haziness;
    private float t;
    private float sunRadius;
    private int sunColor;
    private float sunR;
    private float sunG;
    private float sunB;
    private float sunAzimuth;
    private float sunElevation;
    private float windSpeed;
    private float cameraAzimuth;
    private float cameraElevation;
    private float fov;
    private float[] exponents;
    private float[] tan;
    private java.awt.image.BufferedImage skyColors;
    private int[] skyPixels;
    private static final float r255;
    private float width;
    private float height;
    float mn;
    float mx;

    public void <init>()
    {
        com.jhlabs.image.SkyFilter r0;
        java.awt.image.BufferedImage $r2, $r8;
        java.awt.Image $r6;
        java.net.URL $r5;
        java.util.Random $r9;
        java.awt.image.ImageProducer $r7;
        int $i1;
        java.lang.Class $r4;
        java.awt.Toolkit $r3;

        r0 := @this: com.jhlabs.image.SkyFilter;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        r0.<com.jhlabs.image.SkyFilter: float scale> = 0.1F;

        r0.<com.jhlabs.image.SkyFilter: float stretch> = 1.0F;

        r0.<com.jhlabs.image.SkyFilter: float angle> = 0.0F;

        r0.<com.jhlabs.image.SkyFilter: float amount> = 1.0F;

        r0.<com.jhlabs.image.SkyFilter: float H> = 1.0F;

        r0.<com.jhlabs.image.SkyFilter: float octaves> = 8.0F;

        r0.<com.jhlabs.image.SkyFilter: float lacunarity> = 2.0F;

        r0.<com.jhlabs.image.SkyFilter: float gain> = 1.0F;

        r0.<com.jhlabs.image.SkyFilter: float bias> = 0.6F;

        $r9 = new java.util.Random;

        specialinvoke $r9.<java.util.Random: void <init>()>();

        r0.<com.jhlabs.image.SkyFilter: java.util.Random random> = $r9;

        r0.<com.jhlabs.image.SkyFilter: float cloudCover> = 0.5F;

        r0.<com.jhlabs.image.SkyFilter: float cloudSharpness> = 0.5F;

        r0.<com.jhlabs.image.SkyFilter: float time> = 0.3F;

        r0.<com.jhlabs.image.SkyFilter: float glow> = 0.5F;

        r0.<com.jhlabs.image.SkyFilter: float glowFalloff> = 0.5F;

        r0.<com.jhlabs.image.SkyFilter: float haziness> = 0.96F;

        r0.<com.jhlabs.image.SkyFilter: float t> = 0.0F;

        r0.<com.jhlabs.image.SkyFilter: float sunRadius> = 10.0F;

        $i1 = (int) -1;

        r0.<com.jhlabs.image.SkyFilter: int sunColor> = $i1;

        r0.<com.jhlabs.image.SkyFilter: float sunAzimuth> = 0.5F;

        r0.<com.jhlabs.image.SkyFilter: float sunElevation> = 0.5F;

        r0.<com.jhlabs.image.SkyFilter: float windSpeed> = 0.0F;

        r0.<com.jhlabs.image.SkyFilter: float cameraAzimuth> = 0.0F;

        r0.<com.jhlabs.image.SkyFilter: float cameraElevation> = 0.0F;

        r0.<com.jhlabs.image.SkyFilter: float fov> = 1.0F;

        $r2 = r0.<com.jhlabs.image.SkyFilter: java.awt.image.BufferedImage skyColors>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.net.URL getResource(java.lang.String)>("SkyColors.png");

        $r6 = virtualinvoke $r3.<java.awt.Toolkit: java.awt.Image getImage(java.net.URL)>($r5);

        $r7 = virtualinvoke $r6.<java.awt.Image: java.awt.image.ImageProducer getSource()>();

        $r8 = staticinvoke <com.jhlabs.image.ImageUtils: java.awt.image.BufferedImage createImage(java.awt.image.ImageProducer)>($r7);

        r0.<com.jhlabs.image.SkyFilter: java.awt.image.BufferedImage skyColors> = $r8;

     label1:
        return;
    }

    public void setAmount(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float amount> = f0;

        return;
    }

    public float getAmount()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float amount>;

        return $f0;
    }

    public void setOperation(int)
    {
        int i0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.SkyFilter: int operation> = i0;

        return;
    }

    public int getOperation()
    {
        int $i0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $i0 = r0.<com.jhlabs.image.SkyFilter: int operation>;

        return $i0;
    }

    public void setScale(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float scale> = f0;

        return;
    }

    public float getScale()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float scale>;

        return $f0;
    }

    public void setStretch(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float stretch> = f0;

        return;
    }

    public float getStretch()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float stretch>;

        return $f0;
    }

    public void setT(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float t> = f0;

        return;
    }

    public float getT()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float t>;

        return $f0;
    }

    public void setFOV(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float fov> = f0;

        return;
    }

    public float getFOV()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float fov>;

        return $f0;
    }

    public void setCloudCover(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float cloudCover> = f0;

        return;
    }

    public float getCloudCover()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float cloudCover>;

        return $f0;
    }

    public void setCloudSharpness(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float cloudSharpness> = f0;

        return;
    }

    public float getCloudSharpness()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float cloudSharpness>;

        return $f0;
    }

    public void setTime(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float time> = f0;

        return;
    }

    public float getTime()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float time>;

        return $f0;
    }

    public void setGlow(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float glow> = f0;

        return;
    }

    public float getGlow()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float glow>;

        return $f0;
    }

    public void setGlowFalloff(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float glowFalloff> = f0;

        return;
    }

    public float getGlowFalloff()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float glowFalloff>;

        return $f0;
    }

    public void setAngle(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float angle> = f0;

        return;
    }

    public float getAngle()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float angle>;

        return $f0;
    }

    public void setOctaves(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float octaves> = f0;

        return;
    }

    public float getOctaves()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float octaves>;

        return $f0;
    }

    public void setH(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float H> = f0;

        return;
    }

    public float getH()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float H>;

        return $f0;
    }

    public void setLacunarity(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float lacunarity> = f0;

        return;
    }

    public float getLacunarity()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float lacunarity>;

        return $f0;
    }

    public void setGain(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float gain> = f0;

        return;
    }

    public float getGain()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float gain>;

        return $f0;
    }

    public void setBias(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float bias> = f0;

        return;
    }

    public float getBias()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float bias>;

        return $f0;
    }

    public void setHaziness(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float haziness> = f0;

        return;
    }

    public float getHaziness()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float haziness>;

        return $f0;
    }

    public void setSunElevation(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float sunElevation> = f0;

        return;
    }

    public float getSunElevation()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float sunElevation>;

        return $f0;
    }

    public void setSunAzimuth(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float sunAzimuth> = f0;

        return;
    }

    public float getSunAzimuth()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float sunAzimuth>;

        return $f0;
    }

    public void setSunColor(int)
    {
        int i0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.SkyFilter: int sunColor> = i0;

        return;
    }

    public int getSunColor()
    {
        int $i0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $i0 = r0.<com.jhlabs.image.SkyFilter: int sunColor>;

        return $i0;
    }

    public void setCameraElevation(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float cameraElevation> = f0;

        return;
    }

    public float getCameraElevation()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float cameraElevation>;

        return $f0;
    }

    public void setCameraAzimuth(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float cameraAzimuth> = f0;

        return;
    }

    public float getCameraAzimuth()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float cameraAzimuth>;

        return $f0;
    }

    public void setWindSpeed(float)
    {
        float f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SkyFilter: float windSpeed> = f0;

        return;
    }

    public float getWindSpeed()
    {
        float $f0;
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float windSpeed>;

        return $f0;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        com.jhlabs.image.SkyFilter r0;
        long $l0, $l18, $l19;
        float[] $r1, $r3, $r14, $r15;
        java.lang.StringBuffer $r6, $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13;
        java.awt.image.BufferedImage r2, $r5, r16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22;
        java.awt.Graphics2D $r4;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i20, $i21, i22, i23;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.io.PrintStream $r7;

        r0 := @this: com.jhlabs.image.SkyFilter;

        r2 := @parameter0: java.awt.image.BufferedImage;

        r16 := @parameter1: java.awt.image.BufferedImage;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = r0.<com.jhlabs.image.SkyFilter: int sunColor>;

        $i2 = $i1 >> 16;

        $i3 = $i2 & 255;

        $f0 = (float) $i3;

        $f1 = $f0 * 0.003921569F;

        r0.<com.jhlabs.image.SkyFilter: float sunR> = $f1;

        $i4 = r0.<com.jhlabs.image.SkyFilter: int sunColor>;

        $i5 = $i4 >> 8;

        $i6 = $i5 & 255;

        $f2 = (float) $i6;

        $f3 = $f2 * 0.003921569F;

        r0.<com.jhlabs.image.SkyFilter: float sunG> = $f3;

        $i7 = r0.<com.jhlabs.image.SkyFilter: int sunColor>;

        $i8 = $i7 & 255;

        $f4 = (float) $i8;

        $f5 = $f4 * 0.003921569F;

        r0.<com.jhlabs.image.SkyFilter: float sunB> = $f5;

        r0.<com.jhlabs.image.SkyFilter: float mn> = 10000.0F;

        r0.<com.jhlabs.image.SkyFilter: float mx> = -10000.0F;

        $f6 = r0.<com.jhlabs.image.SkyFilter: float octaves>;

        $i9 = (int) $f6;

        $i10 = $i9 + 1;

        $r1 = newarray (float)[$i10];

        r0.<com.jhlabs.image.SkyFilter: float[] exponents> = $r1;

        i22 = 0;

     label1:
        $f7 = r0.<com.jhlabs.image.SkyFilter: float octaves>;

        $i11 = (int) $f7;

        if i22 > $i11 goto label2;

        $r15 = r0.<com.jhlabs.image.SkyFilter: float[] exponents>;

        $i21 = neg i22;

        $d4 = (double) $i21;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d4);

        $f22 = (float) $d5;

        $r15[i22] = $f22;

        i22 = i22 + 1;

        goto label1;

     label2:
        r0.<com.jhlabs.image.SkyFilter: float min> = -1.0F;

        r0.<com.jhlabs.image.SkyFilter: float max> = 1.0F;

        $i12 = virtualinvoke r2.<java.awt.image.BufferedImage: int getWidth()>();

        $f8 = (float) $i12;

        r0.<com.jhlabs.image.SkyFilter: float width> = $f8;

        $i13 = virtualinvoke r2.<java.awt.image.BufferedImage: int getHeight()>();

        $f9 = (float) $i13;

        r0.<com.jhlabs.image.SkyFilter: float height> = $f9;

        $i14 = virtualinvoke r2.<java.awt.image.BufferedImage: int getHeight()>();

        $r3 = newarray (float)[$i14];

        r0.<com.jhlabs.image.SkyFilter: float[] tan> = $r3;

        i23 = 0;

     label3:
        if i23 >= $i14 goto label4;

        $r14 = r0.<com.jhlabs.image.SkyFilter: float[] tan>;

        $f17 = r0.<com.jhlabs.image.SkyFilter: float fov>;

        $f16 = (float) i23;

        $f19 = $f17 * $f16;

        $f18 = (float) $i14;

        $f20 = $f19 / $f18;

        $d0 = (double) $f20;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 * 0.5;

        $d3 = staticinvoke <java.lang.Math: double tan(double)>($d2);

        $f21 = (float) $d3;

        $r14[i23] = $f21;

        i23 = i23 + 1;

        goto label3;

     label4:
        if r16 != null goto label5;

        r16 = virtualinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r2, null);

     label5:
        $f10 = r0.<com.jhlabs.image.SkyFilter: float time>;

        $f11 = 63.0F * $f10;

        $i20 = (int) $f11;

        $r4 = virtualinvoke r16.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r5 = r0.<com.jhlabs.image.SkyFilter: java.awt.image.BufferedImage skyColors>;

        $i15 = virtualinvoke r16.<java.awt.image.BufferedImage: int getWidth()>();

        $i16 = virtualinvoke r16.<java.awt.image.BufferedImage: int getHeight()>();

        $i17 = $i20 + 1;

        virtualinvoke $r4.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r5, 0, 0, $i15, $i16, $i20, 0, $i17, 64, null);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        specialinvoke r0.<com.jhlabs.image.PointFilter: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r16, r16);

        $l18 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $f12 = r0.<com.jhlabs.image.SkyFilter: float mn>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $f13 = r0.<com.jhlabs.image.SkyFilter: float mx>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f13);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $l19 = $l18 - $l0;

        $f14 = (float) $l19;

        $f15 = $f14 * 0.001F;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f15);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r13);

        r0.<com.jhlabs.image.SkyFilter: float[] exponents> = null;

        r0.<com.jhlabs.image.SkyFilter: float[] tan> = null;

        return r16;
    }

    public float evaluate(float, float)
    {
        float[] $r1, $r2;
        byte $b2;
        int $i0, $i1, i3;
        com.jhlabs.image.SkyFilter r0;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19, f20;

        r0 := @this: com.jhlabs.image.SkyFilter;

        f16 := @parameter0: float;

        f17 := @parameter1: float;

        f18 = 0.0F;

        f19 = f16 + 371.0F;

        f20 = f17 + 529.0F;

        i3 = 0;

     label1:
        $f0 = r0.<com.jhlabs.image.SkyFilter: float octaves>;

        $i0 = (int) $f0;

        if i3 >= $i0 goto label2;

        $f10 = r0.<com.jhlabs.image.SkyFilter: float t>;

        $f11 = staticinvoke <com.jhlabs.math.Noise: float noise3(float,float,float)>(f19, f20, $f10);

        $r2 = r0.<com.jhlabs.image.SkyFilter: float[] exponents>;

        $f12 = $r2[i3];

        $f13 = $f11 * $f12;

        f18 = f18 + $f13;

        $f14 = r0.<com.jhlabs.image.SkyFilter: float lacunarity>;

        f19 = f19 * $f14;

        $f15 = r0.<com.jhlabs.image.SkyFilter: float lacunarity>;

        f20 = f20 * $f15;

        i3 = i3 + 1;

        goto label1;

     label2:
        $f3 = r0.<com.jhlabs.image.SkyFilter: float octaves>;

        $f1 = r0.<com.jhlabs.image.SkyFilter: float octaves>;

        $i1 = (int) $f1;

        $f2 = (float) $i1;

        f4 = $f3 - $f2;

        $b2 = f4 cmpl 0.0F;

        if $b2 == 0 goto label3;

        $f5 = r0.<com.jhlabs.image.SkyFilter: float t>;

        $f6 = staticinvoke <com.jhlabs.math.Noise: float noise3(float,float,float)>(f19, f20, $f5);

        $f8 = f4 * $f6;

        $r1 = r0.<com.jhlabs.image.SkyFilter: float[] exponents>;

        $f7 = $r1[i3];

        $f9 = $f8 * $f7;

        f18 = f18 + $f9;

     label3:
        return f18;
    }

    public int filterRGB(int, int, int)
    {
        byte $b8;
        com.jhlabs.image.SkyFilter r0;
        float[] $r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, $f91, $f92, $f93, $f94, $f95, $f96, $f97, $f98, $f99, $f100, f101, f102, f103, f104, f105, f106, f107, f108, f109, f110;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;

        r0 := @this: com.jhlabs.image.SkyFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $f1 = (float) i0;

        $f0 = r0.<com.jhlabs.image.SkyFilter: float width>;

        f2 = $f1 / $f0;

        $f4 = (float) i1;

        $f3 = r0.<com.jhlabs.image.SkyFilter: float height>;

        f5 = $f4 / $f3;

        $f6 = r0.<com.jhlabs.image.SkyFilter: float haziness>;

        $d1 = (double) $f6;

        $f7 = 100.0F * f5;

        $f8 = $f7 * f5;

        $d0 = (double) $f8;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, $d0);

        f9 = (float) $d2;

        $i3 = i2 >> 16;

        $i4 = $i3 & 255;

        $f10 = (float) $i4;

        f101 = $f10 * 0.003921569F;

        $i5 = i2 >> 8;

        $i6 = $i5 & 255;

        $f11 = (float) $i6;

        f102 = $f11 * 0.003921569F;

        $i7 = i2 & 255;

        $f12 = (float) $i7;

        f103 = $f12 * 0.003921569F;

        $r1 = r0.<com.jhlabs.image.SkyFilter: float[] tan>;

        f104 = $r1[i1];

        $f14 = f2 - 0.5F;

        $f13 = 1.0F + f104;

        f105 = $f14 * $f13;

        $f16 = r0.<com.jhlabs.image.SkyFilter: float t>;

        $f15 = r0.<com.jhlabs.image.SkyFilter: float windSpeed>;

        $f17 = $f16 * $f15;

        f106 = f104 + $f17;

        $f18 = r0.<com.jhlabs.image.SkyFilter: float scale>;

        f107 = f105 / $f18;

        $f20 = r0.<com.jhlabs.image.SkyFilter: float scale>;

        $f19 = r0.<com.jhlabs.image.SkyFilter: float stretch>;

        $f21 = $f20 * $f19;

        f108 = f106 / $f21;

        $f22 = virtualinvoke r0.<com.jhlabs.image.SkyFilter: float evaluate(float,float)>(f107, f108);

        $f23 = $f22 + 1.23F;

        f109 = $f23 / 2.46F;

        $f24 = r0.<com.jhlabs.image.SkyFilter: float cloudCover>;

        f110 = f109 - $f24;

        $b8 = f110 cmpg 0.0F;

        $i17 = (int) $b8;

        if $i17 >= 0 goto label1;

        f110 = 0.0F;

     label1:
        $f25 = r0.<com.jhlabs.image.SkyFilter: float cloudSharpness>;

        $d4 = (double) $f25;

        $d3 = (double) f110;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, $d3);

        $f26 = (float) $d5;

        $f77 = 1.0F - $f26;

        $f27 = r0.<com.jhlabs.image.SkyFilter: float mn>;

        $f28 = staticinvoke <java.lang.Math: float min(float,float)>($f27, $f77);

        r0.<com.jhlabs.image.SkyFilter: float mn> = $f28;

        $f29 = r0.<com.jhlabs.image.SkyFilter: float mx>;

        $f30 = staticinvoke <java.lang.Math: float max(float,float)>($f29, $f77);

        r0.<com.jhlabs.image.SkyFilter: float mx> = $f30;

        $f32 = r0.<com.jhlabs.image.SkyFilter: float width>;

        $f31 = r0.<com.jhlabs.image.SkyFilter: float sunAzimuth>;

        $f78 = $f32 * $f31;

        $f34 = r0.<com.jhlabs.image.SkyFilter: float height>;

        $f33 = r0.<com.jhlabs.image.SkyFilter: float sunElevation>;

        $f79 = $f34 * $f33;

        $f35 = (float) i0;

        $f80 = $f35 - $f78;

        $f36 = (float) i1;

        $f81 = $f36 - $f79;

        $f38 = $f80 * $f80;

        $f37 = $f81 * $f81;

        $f82 = $f38 + $f37;

        $d7 = (double) $f82;

        $f39 = r0.<com.jhlabs.image.SkyFilter: float glowFalloff>;

        $d6 = (double) $f39;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, $d6);

        $f83 = (float) $d8;

        $f41 = neg $f83;

        $f40 = r0.<com.jhlabs.image.SkyFilter: float glow>;

        $f42 = $f41 * $f40;

        $f43 = $f42 * 0.1F;

        $d9 = (double) $f43;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $f44 = (float) $d10;

        $f84 = 10.0F * $f44;

        $f45 = r0.<com.jhlabs.image.SkyFilter: float sunR>;

        $f46 = $f84 * $f45;

        $f85 = f101 + $f46;

        $f47 = r0.<com.jhlabs.image.SkyFilter: float sunG>;

        $f48 = $f84 * $f47;

        $f86 = f102 + $f48;

        $f49 = r0.<com.jhlabs.image.SkyFilter: float sunB>;

        $f50 = $f84 * $f49;

        $f87 = f103 + $f50;

        $f51 = $f77 * $f77;

        $f52 = $f51 * $f77;

        $f53 = $f52 * $f77;

        $f55 = 1.0F - $f53;

        $f54 = r0.<com.jhlabs.image.SkyFilter: float amount>;

        $f88 = $f55 * $f54;

        $f56 = r0.<com.jhlabs.image.SkyFilter: float sunR>;

        $f89 = $f56 * $f88;

        $f57 = r0.<com.jhlabs.image.SkyFilter: float sunG>;

        $f90 = $f57 * $f88;

        $f58 = r0.<com.jhlabs.image.SkyFilter: float sunB>;

        $f91 = $f58 * $f88;

        $f92 = $f77 * f9;

        $f93 = 1.0F - $f92;

        $f60 = $f93 * $f85;

        $f59 = $f92 * $f89;

        $f94 = $f60 + $f59;

        $f62 = $f93 * $f86;

        $f61 = $f92 * $f90;

        $f95 = $f62 + $f61;

        $f64 = $f93 * $f87;

        $f63 = $f92 * $f91;

        $f96 = $f64 + $f63;

        $f97 = r0.<com.jhlabs.image.SkyFilter: float gain>;

        $f65 = neg $f94;

        $f66 = $f65 * $f97;

        $d11 = (double) $f66;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $f67 = (float) $d12;

        $f98 = 1.0F - $f67;

        $f68 = neg $f95;

        $f69 = $f68 * $f97;

        $d13 = (double) $f69;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        $f70 = (float) $d14;

        $f99 = 1.0F - $f70;

        $f71 = neg $f96;

        $f72 = $f71 * $f97;

        $d15 = (double) $f72;

        $d16 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $f73 = (float) $d16;

        $f100 = 1.0F - $f73;

        $f74 = 255.0F * $f98;

        $i9 = (int) $f74;

        $i13 = $i9 << 16;

        $f75 = 255.0F * $f99;

        $i10 = (int) $f75;

        $i14 = $i10 << 8;

        $f76 = 255.0F * $f100;

        $i15 = (int) $f76;

        $i11 = -16777216 | $i13;

        $i12 = $i11 | $i14;

        $i16 = $i12 | $i15;

        return $i16;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.SkyFilter r0;

        r0 := @this: com.jhlabs.image.SkyFilter;

        return "Texture/Sky...";
    }

    public static void <clinit>()
    {
        <com.jhlabs.image.SkyFilter: float r255> = 0.003921569F;

        return;
    }
}
