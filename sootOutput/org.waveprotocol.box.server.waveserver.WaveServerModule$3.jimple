final class org.waveprotocol.box.server.waveserver.WaveServerModule$3 extends java.lang.Object implements java.util.concurrent.Callable
{
    final org.waveprotocol.box.server.waveserver.DeltaStore val$deltaStore;
    final org.waveprotocol.wave.model.id.WaveletName val$waveletName;
    final java.util.concurrent.Executor val$persistExecutor;

    void <init>(org.waveprotocol.box.server.waveserver.DeltaStore, org.waveprotocol.wave.model.id.WaveletName, java.util.concurrent.Executor)
    {
        org.waveprotocol.wave.model.id.WaveletName r2;
        java.util.concurrent.Executor r3;
        org.waveprotocol.box.server.waveserver.WaveServerModule$3 r0;
        org.waveprotocol.box.server.waveserver.DeltaStore r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerModule$3;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.DeltaStore;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletName;

        r3 := @parameter2: java.util.concurrent.Executor;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$3: org.waveprotocol.box.server.waveserver.DeltaStore val$deltaStore> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$3: org.waveprotocol.wave.model.id.WaveletName val$waveletName> = r2;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$3: java.util.concurrent.Executor val$persistExecutor> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState call() throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        org.waveprotocol.wave.model.id.WaveletName $r1;
        java.util.concurrent.Executor $r4;
        org.waveprotocol.box.server.waveserver.WaveServerModule$3 r0;
        org.waveprotocol.box.server.waveserver.DeltaStore $r2;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader $r3;
        org.waveprotocol.box.server.waveserver.DeltaStore$DeltasAccess $r5;
        org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState $r6;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerModule$3;

        $r2 = r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$3: org.waveprotocol.box.server.waveserver.DeltaStore val$deltaStore>;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$3: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.DeltaStore: org.waveprotocol.box.server.waveserver.WaveletDeltaRecordReader open(org.waveprotocol.wave.model.id.WaveletName)>($r1);

        $r5 = (org.waveprotocol.box.server.waveserver.DeltaStore$DeltasAccess) $r3;

        $r4 = r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$3: java.util.concurrent.Executor val$persistExecutor>;

        $r6 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState create(org.waveprotocol.box.server.waveserver.DeltaStore$DeltasAccess,java.util.concurrent.Executor)>($r5, $r4);

        return $r6;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.waveprotocol.box.server.waveserver.WaveServerModule$3 r0;
        org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerModule$3;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$3: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState call()>();

        return $r1;
    }
}
