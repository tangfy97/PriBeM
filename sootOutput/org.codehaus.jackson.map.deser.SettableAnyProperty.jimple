public final class org.codehaus.jackson.map.deser.SettableAnyProperty extends java.lang.Object
{
    protected final org.codehaus.jackson.map.BeanProperty _property;
    protected final java.lang.reflect.Method _setter;
    protected final org.codehaus.jackson.type.JavaType _type;
    protected org.codehaus.jackson.map.JsonDeserializer _valueDeserializer;

    public void <init>(org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.type.JavaType r3;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        org.codehaus.jackson.map.BeanProperty r1;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r1 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        specialinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>(r1, r2, r3, null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.type.JavaType r4;
        org.codehaus.jackson.map.JsonDeserializer r5;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        java.lang.reflect.Method $r3;
        org.codehaus.jackson.map.BeanProperty r1;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r1 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r4 := @parameter2: org.codehaus.jackson.type.JavaType;

        r5 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,java.lang.reflect.Method,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>(r1, $r3, r4, r5);

        return;
    }

    public void <init>(org.codehaus.jackson.map.BeanProperty, java.lang.reflect.Method, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.JsonDeserializer r4;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        java.lang.reflect.Method r3;
        org.codehaus.jackson.map.BeanProperty r1;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r1 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        r3 := @parameter1: java.lang.reflect.Method;

        r2 := @parameter2: org.codehaus.jackson.type.JavaType;

        r4 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.BeanProperty _property> = r1;

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType _type> = r2;

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.reflect.Method _setter> = r3;

        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = r4;

        return;
    }

    public org.codehaus.jackson.map.deser.SettableAnyProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.JsonDeserializer r2;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r0, r1;
        java.lang.reflect.Method $r4;
        org.codehaus.jackson.map.BeanProperty $r5;

        r1 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r2 := @parameter0: org.codehaus.jackson.map.JsonDeserializer;

        $r0 = new org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r5 = r1.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.BeanProperty _property>;

        $r4 = r1.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.reflect.Method _setter>;

        $r3 = r1.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType _type>;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,java.lang.reflect.Method,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>($r5, $r4, $r3, r2);

        return $r0;
    }

    public void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)
    {
        java.lang.IllegalStateException $r3;
        org.codehaus.jackson.map.JsonDeserializer $r1, r2;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r2 := @parameter0: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already had assigned deserializer for SettableAnyProperty");

        throw $r3;

     label1:
        r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = r2;

        return;
    }

    public org.codehaus.jackson.map.BeanProperty getProperty()
    {
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        org.codehaus.jackson.map.BeanProperty $r1;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.BeanProperty _property>;

        return $r1;
    }

    public boolean hasValueDeserializer()
    {
        org.codehaus.jackson.map.JsonDeserializer $r1;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.jackson.type.JavaType getType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType _type>;

        return $r1;
    }

    public final void deserializeAndSet(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object, java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object r1, $r5;
        java.lang.String r2;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        org.codehaus.jackson.JsonParser r3;
        org.codehaus.jackson.map.DeserializationContext r4;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: java.lang.String;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r3, r4);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: void set(java.lang.Object,java.lang.String,java.lang.Object)>(r1, r2, $r5);

        return;
    }

    public final java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2;
        org.codehaus.jackson.map.JsonDeserializer $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.deser.SettableAnyProperty r3;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.map.DeserializationContext r4;

        r3 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r1 != $r2 goto label1;

        return null;

     label1:
        $r5 = r3.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r4);

        return $r6;
    }

    public final void set(java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        java.lang.Object[] $r2;
        java.lang.Object r1, r4;
        java.lang.String r3;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        java.lang.reflect.Method $r5;
        java.lang.Exception $r6;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

     label1:
        $r5 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.reflect.Method _setter>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r3;

        $r2[1] = r4;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>($r6, r3, r4);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void _throwAsIOE(java.lang.Exception, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        java.lang.Throwable $r1, r27;
        org.codehaus.jackson.map.deser.SettableAnyProperty r13;
        org.codehaus.jackson.map.JsonMappingException $r2, $r23;
        org.codehaus.jackson.type.JavaType $r19;
        java.lang.String $r3, r9, $r14, $r17, $r22, $r24, $r26;
        boolean $z0, $z1, $z2;
        java.io.IOException $r5;
        java.lang.RuntimeException $r4;
        java.lang.Exception r0;
        java.lang.Object r6;
        java.lang.Class $r7;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r15, $r16, $r18, $r20, $r21, $r25;

        r13 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        r0 := @parameter0: java.lang.Exception;

        r9 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof java.lang.IllegalArgumentException;

        if $z0 == 0 goto label5;

        if r6 != null goto label1;

        $r26 = "[NULL]";

        goto label2;

     label1:
        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Problem deserializing \"any\" property \'");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of class ");

        $r14 = specialinvoke r13.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.String getClassName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (expected type: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = r13.<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType _type>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; actual type: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r22 = virtualinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        if $r22 == null goto label3;

        $r25 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", problem: ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        goto label4;

     label3:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (no error message provided)");

     label4:
        $r23 = new org.codehaus.jackson.map.JsonMappingException;

        $r24 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>($r24, null, r0);

        throw $r23;

     label5:
        $z1 = r0 instanceof java.io.IOException;

        if $z1 == 0 goto label6;

        $r5 = (java.io.IOException) r0;

        throw $r5;

     label6:
        $z2 = r0 instanceof java.lang.RuntimeException;

        if $z2 == 0 goto label7;

        $r4 = (java.lang.RuntimeException) r0;

        throw $r4;

     label7:
        r27 = r0;

     label8:
        $r1 = virtualinvoke r27.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 == null goto label9;

        r27 = virtualinvoke r27.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label8;

     label9:
        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        $r3 = virtualinvoke r27.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>($r3, null, r27);

        throw $r2;
    }

    private java.lang.String getClassName()
    {
        java.lang.Class $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.deser.SettableAnyProperty r0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.reflect.Method _setter>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        org.codehaus.jackson.map.deser.SettableAnyProperty r2;

        r2 := @this: org.codehaus.jackson.map.deser.SettableAnyProperty;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[any property on class ");

        $r3 = specialinvoke r2.<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
