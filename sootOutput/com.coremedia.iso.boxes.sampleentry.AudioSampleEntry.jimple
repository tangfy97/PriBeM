public final class com.coremedia.iso.boxes.sampleentry.AudioSampleEntry extends com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry
{
    public static final java.lang.String TYPE1;
    public static final java.lang.String TYPE2;
    public static final java.lang.String TYPE3;
    public static final java.lang.String TYPE4;
    public static final java.lang.String TYPE5;
    public static final java.lang.String TYPE7;
    public static final java.lang.String TYPE8;
    public static final java.lang.String TYPE9;
    public static final java.lang.String TYPE10;
    public static final java.lang.String TYPE11;
    public static final java.lang.String TYPE12;
    public static final java.lang.String TYPE13;
    public static final java.lang.String TYPE_ENCRYPTED;
    private int channelCount;
    private int sampleSize;
    private long sampleRate;
    private int soundVersion;
    private int compressionId;
    private int packetSize;
    private long samplesPerPacket;
    private long bytesPerPacket;
    private long bytesPerFrame;
    private long bytesPerSample;
    private int reserved1;
    private long reserved2;
    private byte[] soundVersion2Data;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE_ENCRYPTED> = "enca";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE13> = "dtse";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE12> = "dtsh";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE11> = "dtsl";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE10> = "mlpa";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE9> = "ec-3";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE8> = "ac-3";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE7> = "owma";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE5> = "alac";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE4> = "drms";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE3> = "mp4a";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE2> = "sawb";

        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String TYPE1> = "samr";

        $r0 = class "Lcom/coremedia/iso/boxes/sampleentry/AudioSampleEntry;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        java.lang.String r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: void <init>(java.lang.String)>(r1);

        return;
    }

    public void setType(java.lang.String)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        java.lang.String r1;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: java.lang.String;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String type> = r1;

        return;
    }

    public int getChannelCount()
    {
        int $i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount>;

        return $i0;
    }

    public int getSampleSize()
    {
        int $i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize>;

        return $i0;
    }

    public long getSampleRate()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate>;

        return $l0;
    }

    public int getSoundVersion()
    {
        int $i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        return $i0;
    }

    public int getCompressionId()
    {
        int $i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId>;

        return $i0;
    }

    public int getPacketSize()
    {
        int $i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize>;

        return $i0;
    }

    public long getSamplesPerPacket()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket>;

        return $l0;
    }

    public long getBytesPerPacket()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket>;

        return $l0;
    }

    public long getBytesPerFrame()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame>;

        return $l0;
    }

    public long getBytesPerSample()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample>;

        return $l0;
    }

    public byte[] getSoundVersion2Data()
    {
        byte[] $r1;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r1 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data>;

        return $r1;
    }

    public int getReserved1()
    {
        int $i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1>;

        return $i0;
    }

    public long getReserved2()
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long $l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $l0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2>;

        return $l0;
    }

    public void setChannelCount(int)
    {
        int i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount> = i0;

        return;
    }

    public void setSampleSize(int)
    {
        int i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize> = i0;

        return;
    }

    public void setSampleRate(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate> = l0;

        return;
    }

    public void setSoundVersion(int)
    {
        int i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion> = i0;

        return;
    }

    public void setCompressionId(int)
    {
        int i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId> = i0;

        return;
    }

    public void setPacketSize(int)
    {
        int i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize> = i0;

        return;
    }

    public void setSamplesPerPacket(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket> = l0;

        return;
    }

    public void setBytesPerPacket(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket> = l0;

        return;
    }

    public void setBytesPerFrame(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame> = l0;

        return;
    }

    public void setBytesPerSample(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample> = l0;

        return;
    }

    public void setReserved1(int)
    {
        int i0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        i0 := @parameter0: int;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1> = i0;

        return;
    }

    public void setReserved2(long)
    {
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;
        long l0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2> = l0;

        return;
    }

    public void setSoundVersion2Data(byte[])
    {
        byte[] r1;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: byte[];

        r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data> = r1;

        return;
    }

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        byte[] $r11, $r12;
        java.nio.ByteBuffer $r0, $r8, $r10, $r13, r14;
        byte $b37, $b38, $b39, $b40;
        boolean $z0, $z1;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry$1 $r9;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r2;
        long $l3, $l8, l11, $l13, $l14, $l16, $l17, $l18, $l20, $l21, $l23, $l24, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i12, $i15, $i19, $i22, $i25;
        java.lang.String $r3, $r4, $r5;
        java.io.PrintStream $r7;
        com.googlecode.mp4parser.DataSource r1;
        com.coremedia.iso.BoxParser r6;

        r2 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r14 := @parameter1: java.nio.ByteBuffer;

        l11 := @parameter2: long;

        r6 := @parameter3: com.coremedia.iso.BoxParser;

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(28);

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r0);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(6);

        $i0 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int dataReferenceIndex> = $i0;

        $i1 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion> = $i1;

        $i2 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1> = $i2;

        $l3 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2> = $l3;

        $i4 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount> = $i4;

        $i5 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize> = $i5;

        $i6 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId> = $i6;

        $i7 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize> = $i7;

        $l8 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate> = $l8;

        $r3 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String type>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mlpa");

        if $z0 != 0 goto label01;

        $l35 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate>;

        $l36 = $l35 >>> 16;

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate> = $l36;

     label01:
        $i9 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i9 != 1 goto label02;

        $r13 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(16);

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r13);

        virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $l31 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r13);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket> = $l31;

        $l32 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r13);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket> = $l32;

        $l33 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r13);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame> = $l33;

        $l34 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r13);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample> = $l34;

     label02:
        $i10 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i10 != 2 goto label03;

        $r10 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(36);

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r10);

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $l27 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r10);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket> = $l27;

        $l28 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r10);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket> = $l28;

        $l29 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r10);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame> = $l29;

        $l30 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>($r10);

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample> = $l30;

        $r11 = newarray (byte)[20];

        r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data> = $r11;

        $r12 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r12);

     label03:
        $r5 = "owma";

        $r4 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String type>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label08;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("owma");

        $l21 = l11 - 28L;

        $i19 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i19 != 1 goto label04;

        $b37 = 16;

        goto label05;

     label04:
        $b37 = 0;

     label05:
        $l20 = (long) $b37;

        $l24 = $l21 - $l20;

        $i22 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i22 != 2 goto label06;

        $b38 = 36;

        goto label07;

     label06:
        $b38 = 0;

     label07:
        $l23 = (long) $b38;

        $l26 = $l24 - $l23;

        $i25 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l26);

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i25);

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r8);

        $r9 = new com.coremedia.iso.boxes.sampleentry.AudioSampleEntry$1;

        specialinvoke $r9.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry$1: void <init>(com.coremedia.iso.boxes.sampleentry.AudioSampleEntry,long,java.nio.ByteBuffer)>(r2, $l26, $r8);

        virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void addBox(com.coremedia.iso.boxes.Box)>($r9);

        goto label13;

     label08:
        $l14 = l11 - 28L;

        $i12 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i12 != 1 goto label09;

        $b39 = 16;

        goto label10;

     label09:
        $b39 = 0;

     label10:
        $l13 = (long) $b39;

        $l17 = $l14 - $l13;

        $i15 = r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i15 != 2 goto label11;

        $b40 = 36;

        goto label12;

     label11:
        $b40 = 0;

     label12:
        $l16 = (long) $b40;

        $l18 = $l17 - $l16;

        virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void parseContainer(com.googlecode.mp4parser.DataSource,long,com.coremedia.iso.BoxParser)>(r1, $l18, r6);

     label13:
        return;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        byte[] $r7;
        java.nio.ByteBuffer $r2, $r3, $r6;
        byte $b25, $b26;
        boolean $z0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r1;
        long $l7, $l12, $l13, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24;
        java.nio.Buffer $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i14, $i15;
        java.lang.String $r4;
        java.nio.channels.WritableByteChannel r0;

        r1 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        r0 := @parameter0: java.nio.channels.WritableByteChannel;

        $r2 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.nio.ByteBuffer getHeader()>();

        interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r2);

        $i0 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i0 != 1 goto label1;

        $b25 = 16;

        goto label2;

     label1:
        $b25 = 0;

     label2:
        $i2 = 28 + $b25;

        $i1 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i1 != 2 goto label3;

        $b26 = 36;

        goto label4;

     label3:
        $b26 = 0;

     label4:
        $i3 = $i2 + $b26;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i3);

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(6);

        $i4 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int dataReferenceIndex>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i4);

        $i5 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i5);

        $i6 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int reserved1>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i6);

        $l7 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long reserved2>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l7);

        $i8 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i8);

        $i9 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i9);

        $i10 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i10);

        $i11 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i11);

        $r4 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.lang.String type>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("mlpa");

        if $z0 == 0 goto label5;

        $l24 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l24);

        goto label6;

     label5:
        $l12 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $l13 = $l12 << 16;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l13);

     label6:
        $i14 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i14 != 1 goto label7;

        $l20 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l20);

        $l21 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l21);

        $l22 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l22);

        $l23 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l23);

     label7:
        $i15 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i15 != 2 goto label8;

        $l16 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l16);

        $l17 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l17);

        $l18 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l18);

        $l19 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r3, $l19);

        $r7 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: byte[] soundVersion2Data>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r7);

     label8:
        $r5 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r6 = (java.nio.ByteBuffer) $r5;

        interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r6);

        virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void writeContainer(java.nio.channels.WritableByteChannel)>(r0);

        return;
    }

    public long getSize()
    {
        long $l4, $l5, $l6, $l7, $l9, $l10;
        byte $b8, $b11, $b12, $b13;
        int $i0, $i1, $i2, $i3, $i14;
        boolean $z0;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $i0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i0 != 1 goto label1;

        $b11 = 16;

        goto label2;

     label1:
        $b11 = 0;

     label2:
        $i2 = 28 + $b11;

        $i1 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        if $i1 != 2 goto label3;

        $b12 = 36;

        goto label4;

     label3:
        $b12 = 0;

     label4:
        $i3 = $i2 + $b12;

        $l4 = (long) $i3;

        $l5 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getContainerSize()>();

        $l10 = $l4 + $l5;

        $z0 = r0.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: boolean largeBox>;

        if $z0 != 0 goto label5;

        $l7 = $l10 + 8L;

        $b8 = $l7 cmp 4294967296L;

        $i14 = (int) $b8;

        if $i14 < 0 goto label6;

     label5:
        $b13 = 16;

        goto label7;

     label6:
        $b13 = 8;

     label7:
        $l6 = (long) $b13;

        $l9 = $l10 + $l6;

        return $l9;
    }

    public java.lang.String toString()
    {
        java.util.List $r22;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry r1;
        long $l0, $l1, $l2, $l3, $l7;
        int $i4, $i5, $i6, $i8, $i9;
        java.lang.String $r25;

        r1 := @this: com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("AudioSampleEntry{bytesPerSample=");

        $l0 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerSample>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bytesPerFrame=");

        $l1 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerFrame>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bytesPerPacket=");

        $l2 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long bytesPerPacket>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", samplesPerPacket=");

        $l3 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long samplesPerPacket>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", packetSize=");

        $i4 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int packetSize>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", compressionId=");

        $i5 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int compressionId>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", soundVersion=");

        $i6 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int soundVersion>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleRate=");

        $l7 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long sampleRate>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleSize=");

        $i8 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int sampleSize>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", channelCount=");

        $i9 = r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: int channelCount>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", boxes=");

        $r22 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: java.util.List getBoxes()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;
    }
}
