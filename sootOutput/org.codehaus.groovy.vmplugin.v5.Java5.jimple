public class org.codehaus.groovy.vmplugin.v5.Java5 extends java.lang.Object implements org.codehaus.groovy.vmplugin.VMPlugin
{
    private static java.lang.Class[] PLUGIN_DGM;
    static java.lang.Class class$org$codehaus$groovy$vmplugin$v5$PluginDefaultGroovyMethods;
    static java.lang.Class class$java$lang$Object;

    public void <init>()
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r0;

        r0 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setGenericsTypes(org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r3;
        org.codehaus.groovy.ast.ClassNode r0;
        java.lang.reflect.TypeVariable[] $r2;
        java.lang.Class $r1;
        org.codehaus.groovy.ast.GenericsType[] $r4;

        r3 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: java.lang.Class getTypeClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $r4 = specialinvoke r3.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.GenericsType[] configureTypeVariable(java.lang.reflect.TypeVariable[])>($r2);

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: void setGenericsTypes(org.codehaus.groovy.ast.GenericsType[])>($r4);

        return;
    }

    private org.codehaus.groovy.ast.GenericsType[] configureTypeVariable(java.lang.reflect.TypeVariable[])
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r2;
        java.lang.reflect.TypeVariable $r3;
        org.codehaus.groovy.ast.GenericsType $r4;
        java.lang.reflect.TypeVariable[] r0;
        int $i0, $i1, $i2, i3;
        org.codehaus.groovy.ast.GenericsType[] r1;

        r2 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: java.lang.reflect.TypeVariable[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (org.codehaus.groovy.ast.GenericsType)[$i1];

        i3 = 0;

     label2:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label3;

        $r3 = r0[i3];

        $r4 = specialinvoke r2.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.GenericsType configureTypeVariableDefintion(java.lang.reflect.TypeVariable)>($r3);

        r1[i3] = $r4;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }

    private org.codehaus.groovy.ast.GenericsType configureTypeVariableDefintion(java.lang.reflect.TypeVariable)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r0;
        org.codehaus.groovy.ast.ClassNode $r2, $r3;
        java.lang.reflect.TypeVariable r1;
        org.codehaus.groovy.ast.GenericsType $r6, $r8, r9;
        java.lang.reflect.Type[] $r4;
        int $i0;
        org.codehaus.groovy.ast.ClassNode[] $r5;
        java.lang.String $r7;

        r0 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r1 := @parameter0: java.lang.reflect.TypeVariable;

        $r2 = specialinvoke r0.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureTypeVariableReference(java.lang.reflect.TypeVariable)>(r1);

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ClassNode redirect()>();

        virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: void setRedirect(org.codehaus.groovy.ast.ClassNode)>(null);

        $r4 = interfaceinvoke r1.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();

        $i0 = lengthof $r4;

        if $i0 != 0 goto label1;

        $r8 = new org.codehaus.groovy.ast.GenericsType;

        specialinvoke $r8.<org.codehaus.groovy.ast.GenericsType: void <init>(org.codehaus.groovy.ast.ClassNode)>($r2);

        r9 = $r8;

        goto label2;

     label1:
        $r5 = specialinvoke r0.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode[] configureTypes(java.lang.reflect.Type[])>($r4);

        $r6 = new org.codehaus.groovy.ast.GenericsType;

        specialinvoke $r6.<org.codehaus.groovy.ast.GenericsType: void <init>(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.ClassNode)>($r2, $r5, null);

        r9 = $r6;

        $r7 = virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        virtualinvoke $r6.<org.codehaus.groovy.ast.GenericsType: void setName(java.lang.String)>($r7);

        virtualinvoke $r6.<org.codehaus.groovy.ast.GenericsType: void setPlaceholder(boolean)>(1);

     label2:
        virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: void setRedirect(org.codehaus.groovy.ast.ClassNode)>($r3);

        return r9;
    }

    private org.codehaus.groovy.ast.ClassNode[] configureTypes(java.lang.reflect.Type[])
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r2;
        org.codehaus.groovy.ast.ClassNode $r4;
        java.lang.reflect.Type $r3;
        java.lang.reflect.Type[] r0;
        int $i0, $i1, $i2, i3;
        org.codehaus.groovy.ast.ClassNode[] r1;

        r2 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: java.lang.reflect.Type[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (org.codehaus.groovy.ast.ClassNode)[$i1];

        i3 = 0;

     label2:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label3;

        $r3 = r0[i3];

        $r4 = specialinvoke r2.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureType(java.lang.reflect.Type)>($r3);

        r1[i3] = $r4;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }

    private org.codehaus.groovy.ast.ClassNode configureType(java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r14;
        org.codehaus.groovy.vmplugin.v5.Java5 r9;
        java.lang.reflect.WildcardType $r18;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r7;
        java.lang.String $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.groovy.ast.ClassNode $r11, $r13, $r15, $r17, $r19;
        java.lang.reflect.TypeVariable $r12;
        org.codehaus.groovy.GroovyBugError $r1;
        java.lang.reflect.ParameterizedType $r16;
        java.lang.reflect.Type r0;
        java.lang.Class $r6, $r10;

        r9 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: java.lang.reflect.Type;

        $z0 = r0 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label1;

        $r18 = (java.lang.reflect.WildcardType) r0;

        $r19 = specialinvoke r9.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureWildcardType(java.lang.reflect.WildcardType)>($r18);

        return $r19;

     label1:
        $z1 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        $r16 = (java.lang.reflect.ParameterizedType) r0;

        $r17 = specialinvoke r9.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureParameterizedType(java.lang.reflect.ParameterizedType)>($r16);

        return $r17;

     label2:
        $z2 = r0 instanceof java.lang.reflect.GenericArrayType;

        if $z2 == 0 goto label3;

        $r14 = (java.lang.reflect.GenericArrayType) r0;

        $r15 = specialinvoke r9.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureGenericArray(java.lang.reflect.GenericArrayType)>($r14);

        return $r15;

     label3:
        $z3 = r0 instanceof java.lang.reflect.TypeVariable;

        if $z3 == 0 goto label4;

        $r12 = (java.lang.reflect.TypeVariable) r0;

        $r13 = specialinvoke r9.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureTypeVariableReference(java.lang.reflect.TypeVariable)>($r12);

        return $r13;

     label4:
        $z4 = r0 instanceof java.lang.Class;

        if $z4 == 0 goto label5;

        $r10 = (java.lang.Class) r0;

        $r11 = specialinvoke r9.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureClass(java.lang.Class)>($r10);

        return $r11;

     label5:
        $r1 = new org.codehaus.groovy.GroovyBugError;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unknown type: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" := ");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>($r8);

        throw $r1;
    }

    private org.codehaus.groovy.ast.ClassNode configureClass(java.lang.Class)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r3;
        org.codehaus.groovy.ast.ClassNode $r1, $r2;
        java.lang.Class r0;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode make(java.lang.Class)>(r0);

        return $r2;

     label1:
        $r1 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.Class,boolean)>(r0, 0);

        return $r1;
    }

    private org.codehaus.groovy.ast.ClassNode configureGenericArray(java.lang.reflect.GenericArrayType)
    {
        java.lang.reflect.GenericArrayType r0;
        org.codehaus.groovy.vmplugin.v5.Java5 r2;
        java.lang.reflect.Type $r1;
        org.codehaus.groovy.ast.ClassNode $r3, $r4;

        r2 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: java.lang.reflect.GenericArrayType;

        $r1 = interfaceinvoke r0.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r3 = specialinvoke r2.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureType(java.lang.reflect.Type)>($r1);

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ClassNode makeArray()>();

        return $r4;
    }

    private org.codehaus.groovy.ast.ClassNode configureWildcardType(java.lang.reflect.WildcardType)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r1;
        org.codehaus.groovy.ast.ClassNode $r0, $r9, r11;
        java.lang.reflect.WildcardType r2;
        org.codehaus.groovy.ast.GenericsType $r7;
        java.lang.reflect.Type[] $r3, $r5;
        org.codehaus.groovy.ast.ClassNode[] $r4, $r6;
        java.lang.Class $r8, $r12;
        org.codehaus.groovy.ast.GenericsType[] $r10;

        r1 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r2 := @parameter0: java.lang.reflect.WildcardType;

        $r0 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.String)>("?");

        $r3 = interfaceinvoke r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r4 = specialinvoke r1.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode[] configureTypes(java.lang.reflect.Type[])>($r3);

        r11 = null;

        if null == null goto label1;

        r11 = $r4[0];

     label1:
        $r5 = interfaceinvoke r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r6 = specialinvoke r1.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode[] configureTypes(java.lang.reflect.Type[])>($r5);

        $r7 = new org.codehaus.groovy.ast.GenericsType;

        specialinvoke $r7.<org.codehaus.groovy.ast.GenericsType: void <init>(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.ClassNode)>($r0, $r6, r11);

        virtualinvoke $r7.<org.codehaus.groovy.ast.GenericsType: void setWildcard(boolean)>(1);

        $r8 = <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$java$lang$Object>;

        if $r8 != null goto label2;

        $r12 = staticinvoke <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$java$lang$Object> = $r12;

        goto label3;

     label2:
        $r12 = <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$java$lang$Object>;

     label3:
        $r9 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.Class,boolean)>($r12, 0);

        $r10 = newarray (org.codehaus.groovy.ast.GenericsType)[1];

        $r10[0] = $r7;

        virtualinvoke $r9.<org.codehaus.groovy.ast.ClassNode: void setGenericsTypes(org.codehaus.groovy.ast.GenericsType[])>($r10);

        return $r9;
    }

    private org.codehaus.groovy.ast.ClassNode configureParameterizedType(java.lang.reflect.ParameterizedType)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r0;
        java.lang.reflect.ParameterizedType r1;
        java.lang.reflect.Type $r2;
        org.codehaus.groovy.ast.ClassNode $r3;
        java.lang.reflect.Type[] $r4;
        org.codehaus.groovy.ast.GenericsType[] $r5;

        r0 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r1 := @parameter0: java.lang.reflect.ParameterizedType;

        $r2 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r3 = specialinvoke r0.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureType(java.lang.reflect.Type)>($r2);

        $r4 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r5 = specialinvoke r0.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.GenericsType[] configureTypeArguments(java.lang.reflect.Type[])>($r4);

        virtualinvoke $r3.<org.codehaus.groovy.ast.ClassNode: void setGenericsTypes(org.codehaus.groovy.ast.GenericsType[])>($r5);

        return $r3;
    }

    private org.codehaus.groovy.ast.ClassNode configureTypeVariableReference(java.lang.reflect.TypeVariable)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r8;
        org.codehaus.groovy.ast.ClassNode $r2, $r4, $r7;
        java.lang.reflect.TypeVariable r0;
        org.codehaus.groovy.ast.GenericsType $r6;
        org.codehaus.groovy.ast.GenericsType[] $r5;
        java.lang.String $r1, $r3;

        r8 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: java.lang.reflect.TypeVariable;

        $r1 = interfaceinvoke r0.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r2 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.String)>($r1);

        virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: void setGenericsPlaceHolder(boolean)>(1);

        $r3 = interfaceinvoke r0.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r4 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.String)>($r3);

        $r5 = newarray (org.codehaus.groovy.ast.GenericsType)[1];

        $r6 = new org.codehaus.groovy.ast.GenericsType;

        specialinvoke $r6.<org.codehaus.groovy.ast.GenericsType: void <init>(org.codehaus.groovy.ast.ClassNode)>($r4);

        $r5[0] = $r6;

        virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: void setGenericsTypes(org.codehaus.groovy.ast.GenericsType[])>($r5);

        $r7 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode OBJECT_TYPE>;

        virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: void setRedirect(org.codehaus.groovy.ast.ClassNode)>($r7);

        return $r2;
    }

    private org.codehaus.groovy.ast.GenericsType[] configureTypeArguments(java.lang.reflect.Type[])
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r3;
        org.codehaus.groovy.ast.ClassNode $r5;
        org.codehaus.groovy.ast.GenericsType $r2;
        java.lang.reflect.Type $r4;
        java.lang.reflect.Type[] r0;
        int $i0, $i1, $i2, i3;
        org.codehaus.groovy.ast.GenericsType[] r1;

        r3 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: java.lang.reflect.Type[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (org.codehaus.groovy.ast.GenericsType)[$i1];

        i3 = 0;

     label2:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label3;

        $r2 = new org.codehaus.groovy.ast.GenericsType;

        $r4 = r0[i3];

        $r5 = specialinvoke r3.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureType(java.lang.reflect.Type)>($r4);

        specialinvoke $r2.<org.codehaus.groovy.ast.GenericsType: void <init>(org.codehaus.groovy.ast.ClassNode)>($r5);

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }

    public java.lang.Class[] getPluginDefaultGroovyMethods()
    {
        java.lang.Class[] $r0;
        org.codehaus.groovy.vmplugin.v5.Java5 r1;

        r1 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        $r0 = <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class[] PLUGIN_DGM>;

        return $r0;
    }

    public void configureClassNode(org.codehaus.groovy.ast.CompileUnit, org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r6;
        java.lang.reflect.Method[] $r3;
        java.lang.reflect.Method r34;
        java.lang.reflect.Type $r8, $r16, $r27;
        java.lang.reflect.Type[] $r10, $r13, $r19, $r22;
        java.lang.reflect.Constructor r35;
        java.lang.reflect.Constructor[] $r4;
        org.codehaus.groovy.ast.MethodNode $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        org.codehaus.groovy.ast.ClassNode[] $r15, $r24;
        java.lang.String $r26, $r31;
        org.codehaus.groovy.ast.ClassNode r0, $r9, $r18, $r29;
        java.lang.Class[] $r11, $r14, $r20, $r23;
        java.lang.reflect.Field $r30, $r32, r33;
        java.lang.reflect.Field[] $r2;
        org.codehaus.groovy.ast.Parameter[] $r12, $r21;
        java.lang.Class $r1, $r5, $r17, $r28;
        org.codehaus.groovy.ast.CompileUnit r7;

        r6 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r7 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r0 := @parameter1: org.codehaus.groovy.ast.ClassNode;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: java.lang.Class getTypeClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i6 = 0;

     label1:
        $i0 = lengthof $r2;

        if i6 >= $i0 goto label2;

        r33 = $r2[i6];

        $r27 = virtualinvoke r33.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $r28 = virtualinvoke r33.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r29 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode makeClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type,java.lang.Class)>(r7, $r27, $r28);

        $r30 = $r2[i6];

        $r31 = virtualinvoke $r30.<java.lang.reflect.Field: java.lang.String getName()>();

        $r32 = $r2[i6];

        $i5 = virtualinvoke $r32.<java.lang.reflect.Field: int getModifiers()>();

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.FieldNode addField(java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>($r31, $i5, $r29, null);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i7 = 0;

     label3:
        $i1 = lengthof $r3;

        if i7 >= $i1 goto label4;

        r34 = $r3[i7];

        $r16 = virtualinvoke r34.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        $r17 = virtualinvoke r34.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r18 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode makeClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type,java.lang.Class)>(r7, $r16, $r17);

        $r19 = virtualinvoke r34.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $r20 = virtualinvoke r34.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r21 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.Parameter[] makeParameters(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type[],java.lang.Class[])>(r7, $r19, $r20);

        $r22 = virtualinvoke r34.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();

        $r23 = virtualinvoke r34.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        $r24 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode[] makeClassNodes(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type[],java.lang.Class[])>(r7, $r22, $r23);

        $r25 = new org.codehaus.groovy.ast.MethodNode;

        $r26 = virtualinvoke r34.<java.lang.reflect.Method: java.lang.String getName()>();

        $i4 = virtualinvoke r34.<java.lang.reflect.Method: int getModifiers()>();

        specialinvoke $r25.<org.codehaus.groovy.ast.MethodNode: void <init>(java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.Parameter[],org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.stmt.Statement)>($r26, $i4, $r18, $r21, $r24, null);

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: void addMethod(org.codehaus.groovy.ast.MethodNode)>($r25);

        i7 = i7 + 1;

        goto label3;

     label4:
        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        i8 = 0;

     label5:
        $i2 = lengthof $r4;

        if i8 >= $i2 goto label6;

        r35 = $r4[i8];

        $r10 = virtualinvoke r35.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $r11 = virtualinvoke r35.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $r12 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.Parameter[] makeParameters(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type[],java.lang.Class[])>(r7, $r10, $r11);

        $r13 = virtualinvoke r35.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();

        $r14 = virtualinvoke r35.<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>();

        $r15 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode[] makeClassNodes(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type[],java.lang.Class[])>(r7, $r13, $r14);

        $i3 = virtualinvoke r35.<java.lang.reflect.Constructor: int getModifiers()>();

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ConstructorNode addConstructor(int,org.codehaus.groovy.ast.Parameter[],org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.stmt.Statement)>($i3, $r12, $r15, null);

        i8 = i8 + 1;

        goto label5;

     label6:
        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r5 == null goto label7;

        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        $r9 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode makeClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type,java.lang.Class)>(r7, $r8, $r5);

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: void setUnresolvedSuperClass(org.codehaus.groovy.ast.ClassNode)>($r9);

     label7:
        specialinvoke r6.<org.codehaus.groovy.vmplugin.v5.Java5: void makeInterfaceTypes(org.codehaus.groovy.ast.CompileUnit,org.codehaus.groovy.ast.ClassNode,java.lang.Class)>(r7, r0, $r1);

        return;
    }

    private void makeInterfaceTypes(org.codehaus.groovy.ast.CompileUnit, org.codehaus.groovy.ast.ClassNode, java.lang.Class)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r5;
        org.codehaus.groovy.ast.ClassNode r4, $r9;
        java.lang.Class[] $r2;
        java.lang.reflect.Type $r8;
        java.lang.reflect.Type[] $r1;
        int $i0, $i1, $i2, i3;
        org.codehaus.groovy.ast.ClassNode[] r3, $r10;
        java.lang.Class r0, $r7;
        org.codehaus.groovy.ast.CompileUnit r6;

        r5 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r6 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r4 := @parameter1: org.codehaus.groovy.ast.ClassNode;

        r0 := @parameter2: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $r10 = <org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ClassNode[] EMPTY_ARRAY>;

        virtualinvoke r4.<org.codehaus.groovy.ast.ClassNode: void setInterfaces(org.codehaus.groovy.ast.ClassNode[])>($r10);

        goto label4;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i1 = lengthof $r1;

        r3 = newarray (org.codehaus.groovy.ast.ClassNode)[$i1];

        i3 = 0;

     label2:
        $i2 = lengthof $r1;

        if i3 >= $i2 goto label3;

        $r8 = $r1[i3];

        $r7 = $r2[i3];

        $r9 = specialinvoke r5.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode makeClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type,java.lang.Class)>(r6, $r8, $r7);

        r3[i3] = $r9;

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke r4.<org.codehaus.groovy.ast.ClassNode: void setInterfaces(org.codehaus.groovy.ast.ClassNode[])>(r3);

     label4:
        return;
    }

    private org.codehaus.groovy.ast.ClassNode[] makeClassNodes(org.codehaus.groovy.ast.CompileUnit, java.lang.reflect.Type[], java.lang.Class[])
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r2;
        org.codehaus.groovy.ast.ClassNode $r7;
        java.lang.Class[] r4;
        java.lang.reflect.Type $r6;
        java.lang.reflect.Type[] r0;
        int $i0, $i1, i2;
        org.codehaus.groovy.ast.ClassNode[] r1;
        org.codehaus.groovy.ast.CompileUnit r3;
        java.lang.Class $r5;

        r2 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r3 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r0 := @parameter1: java.lang.reflect.Type[];

        r4 := @parameter2: java.lang.Class[];

        $i0 = lengthof r0;

        r1 = newarray (org.codehaus.groovy.ast.ClassNode)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r6 = r0[i2];

        $r5 = r4[i2];

        $r7 = specialinvoke r2.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode makeClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type,java.lang.Class)>(r3, $r6, $r5);

        r1[i2] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    private org.codehaus.groovy.ast.ClassNode makeClassNode(org.codehaus.groovy.ast.CompileUnit, java.lang.reflect.Type, java.lang.Class)
    {
        org.codehaus.groovy.vmplugin.v5.Java5 r2;
        org.codehaus.groovy.ast.ClassNode $r3, r6;
        java.lang.reflect.Type r1;
        org.codehaus.groovy.ast.CompileUnit r0;
        java.lang.Class r4;
        java.lang.String $r5;
        boolean $z0;

        r2 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r0 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r1 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.Class;

        r6 = null;

        if r0 == null goto label1;

        $r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        r6 = virtualinvoke r0.<org.codehaus.groovy.ast.CompileUnit: org.codehaus.groovy.ast.ClassNode getClass(java.lang.String)>($r5);

     label1:
        if r6 != null goto label2;

        r6 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode make(java.lang.Class)>(r4);

     label2:
        $z0 = r1 instanceof java.lang.Class;

        if $z0 != 0 goto label3;

        $r3 = specialinvoke r2.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode configureType(java.lang.reflect.Type)>(r1);

        virtualinvoke $r3.<org.codehaus.groovy.ast.ClassNode: void setRedirect(org.codehaus.groovy.ast.ClassNode)>(r6);

        return $r3;

     label3:
        return r6;
    }

    private org.codehaus.groovy.ast.Parameter[] makeParameters(org.codehaus.groovy.ast.CompileUnit, java.lang.reflect.Type[], java.lang.Class[])
    {
        org.codehaus.groovy.ast.Parameter $r6;
        org.codehaus.groovy.vmplugin.v5.Java5 r1;
        java.lang.Class[] r3;
        org.codehaus.groovy.ast.Parameter[] r7;
        java.lang.reflect.Type $r5;
        java.lang.reflect.Type[] r0;
        int $i0, $i1, $i2, i3;
        org.codehaus.groovy.ast.CompileUnit r2;
        java.lang.Class $r4;

        r1 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r2 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r0 := @parameter1: java.lang.reflect.Type[];

        r3 := @parameter2: java.lang.Class[];

        r7 = <org.codehaus.groovy.ast.Parameter: org.codehaus.groovy.ast.Parameter[] EMPTY_ARRAY>;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label2;

        $i1 = lengthof r0;

        r7 = newarray (org.codehaus.groovy.ast.Parameter)[$i1];

        i3 = 0;

     label1:
        $i2 = lengthof r7;

        if i3 >= $i2 goto label2;

        $r5 = r0[i3];

        $r4 = r3[i3];

        $r6 = specialinvoke r1.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.Parameter makeParameter(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type,java.lang.Class,int)>(r2, $r5, $r4, i3);

        r7[i3] = $r6;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r7;
    }

    private org.codehaus.groovy.ast.Parameter makeParameter(org.codehaus.groovy.ast.CompileUnit, java.lang.reflect.Type, java.lang.Class, int)
    {
        org.codehaus.groovy.ast.Parameter $r5;
        org.codehaus.groovy.vmplugin.v5.Java5 r0;
        org.codehaus.groovy.ast.ClassNode $r4;
        java.lang.reflect.Type r2;
        java.lang.StringBuffer $r6, $r7, $r8;
        int i0;
        org.codehaus.groovy.ast.CompileUnit r1;
        java.lang.Class r3;
        java.lang.String $r9;

        r0 := @this: org.codehaus.groovy.vmplugin.v5.Java5;

        r1 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.Class;

        i0 := @parameter3: int;

        $r4 = specialinvoke r0.<org.codehaus.groovy.vmplugin.v5.Java5: org.codehaus.groovy.ast.ClassNode makeClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.reflect.Type,java.lang.Class)>(r1, r2, r3);

        $r5 = new org.codehaus.groovy.ast.Parameter;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("param");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.codehaus.groovy.ast.Parameter: void <init>(org.codehaus.groovy.ast.ClassNode,java.lang.String)>($r4, $r9);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.lang.Class $r1, $r2;

        $r0 = newarray (java.lang.Class)[1];

        $r1 = <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$org$codehaus$groovy$vmplugin$v5$PluginDefaultGroovyMethods>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods");

        <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$org$codehaus$groovy$vmplugin$v5$PluginDefaultGroovyMethods> = $r2;

        goto label2;

     label1:
        $r2 = <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class class$org$codehaus$groovy$vmplugin$v5$PluginDefaultGroovyMethods>;

     label2:
        $r0[0] = $r2;

        <org.codehaus.groovy.vmplugin.v5.Java5: java.lang.Class[] PLUGIN_DGM> = $r0;

        return;
    }
}
