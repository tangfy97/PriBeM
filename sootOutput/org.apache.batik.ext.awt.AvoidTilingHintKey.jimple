public class org.apache.batik.ext.awt.AvoidTilingHintKey extends java.awt.RenderingHints$Key
{

    void <init>(int)
    {
        int i0;
        org.apache.batik.ext.awt.AvoidTilingHintKey r0;

        r0 := @this: org.apache.batik.ext.awt.AvoidTilingHintKey;

        i0 := @parameter0: int;

        specialinvoke r0.<java.awt.RenderingHints$Key: void <init>(int)>(i0);

        return;
    }

    public boolean isCompatibleValue(java.lang.Object)
    {
        java.lang.Object r0, $r1, $r2, $r3;
        org.apache.batik.ext.awt.AvoidTilingHintKey r4;
        boolean $z0;

        r4 := @this: org.apache.batik.ext.awt.AvoidTilingHintKey;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = <org.apache.batik.ext.awt.RenderingHintsKeyExt: java.lang.Object VALUE_AVOID_TILE_PAINTING_ON>;

        if r0 == $r1 goto label2;

        $r2 = <org.apache.batik.ext.awt.RenderingHintsKeyExt: java.lang.Object VALUE_AVOID_TILE_PAINTING_OFF>;

        if r0 == $r2 goto label2;

        $r3 = <org.apache.batik.ext.awt.RenderingHintsKeyExt: java.lang.Object VALUE_AVOID_TILE_PAINTING_DEFAULT>;

        if r0 != $r3 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }
}
