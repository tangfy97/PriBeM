public class org.apache.velocity.runtime.directive.Stop extends org.apache.velocity.runtime.directive.Directive
{
    private static final org.apache.velocity.runtime.directive.StopCommand STOP_ALL;
    private boolean hasMessage;

    public void <init>()
    {
        org.apache.velocity.runtime.directive.Stop r0;

        r0 := @this: org.apache.velocity.runtime.directive.Stop;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void <init>()>();

        r0.<org.apache.velocity.runtime.directive.Stop: boolean hasMessage> = 0;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.velocity.runtime.directive.Stop r0;

        r0 := @this: org.apache.velocity.runtime.directive.Stop;

        return "stop";
    }

    public int getType()
    {
        org.apache.velocity.runtime.directive.Stop r0;

        r0 := @this: org.apache.velocity.runtime.directive.Stop;

        return 2;
    }

    public boolean isScopeProvided()
    {
        org.apache.velocity.runtime.directive.Stop r0;

        r0 := @this: org.apache.velocity.runtime.directive.Stop;

        return 0;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices, org.apache.velocity.context.InternalContextAdapter, org.apache.velocity.runtime.parser.node.Node)
    {
        org.apache.velocity.context.InternalContextAdapter r2;
        org.apache.velocity.runtime.RuntimeServices r1;
        org.apache.velocity.runtime.directive.Stop r0;
        java.lang.StringBuffer $r5, $r6, $r8;
        int $i0;
        java.lang.String $r7, $r9;
        org.apache.velocity.runtime.parser.node.Node r3;
        org.apache.velocity.exception.VelocityException $r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.Stop;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r2 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        r3 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void init(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node)>(r1, r2, r3);

        $i0 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: int jjtGetNumChildren()>();

        if $i0 <= 1 goto label1;

        $r4 = new org.apache.velocity.exception.VelocityException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The #stop directive only accepts a single message parameter at ");

        $r7 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.directive.Directive)>(r0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        if $i0 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<org.apache.velocity.runtime.directive.Stop: boolean hasMessage> = $z0;

        return;
    }

    public boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer, org.apache.velocity.runtime.parser.node.Node)
    {
        org.apache.velocity.context.InternalContextAdapter r3;
        org.apache.velocity.runtime.directive.Stop r0;
        java.io.Writer r8;
        java.lang.Object $r4;
        org.apache.velocity.runtime.directive.StopCommand $r5, $r7;
        java.lang.String $r6;
        org.apache.velocity.runtime.parser.node.Node r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.Stop;

        r3 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r8 := @parameter1: java.io.Writer;

        r1 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        $z0 = r0.<org.apache.velocity.runtime.directive.Stop: boolean hasMessage>;

        if $z0 != 0 goto label1;

        $r7 = <org.apache.velocity.runtime.directive.Stop: org.apache.velocity.runtime.directive.StopCommand STOP_ALL>;

        throw $r7;

     label1:
        $r2 = interfaceinvoke r1.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r4 = interfaceinvoke $r2.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r3);

        $r5 = new org.apache.velocity.runtime.directive.StopCommand;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<org.apache.velocity.runtime.directive.StopCommand: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    static void <clinit>()
    {
        org.apache.velocity.runtime.directive.StopCommand $r0;

        $r0 = new org.apache.velocity.runtime.directive.StopCommand;

        specialinvoke $r0.<org.apache.velocity.runtime.directive.StopCommand: void <init>(java.lang.String)>("StopCommand to exit merging");

        <org.apache.velocity.runtime.directive.Stop: org.apache.velocity.runtime.directive.StopCommand STOP_ALL> = $r0;

        return;
    }
}
