final class org.apache.lucene.index.DocumentsWriterFlushControl extends java.lang.Object
{
    private final long hardMaxBytesPerDWPT;
    private long activeBytes;
    private long flushBytes;
    private volatile int numPending;
    private int numDocsSinceStalled;
    final java.util.concurrent.atomic.AtomicBoolean flushDeletes;
    private boolean fullFlush;
    private final java.util.Queue flushQueue;
    private final java.util.Queue blockedFlushes;
    private final java.util.IdentityHashMap flushingWriters;
    double maxConfiguredRamBuffer;
    long peakActiveBytes;
    long peakFlushBytes;
    long peakNetBytes;
    long peakDelta;
    final org.apache.lucene.index.DocumentsWriterStallControl stallControl;
    private final org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool;
    private final org.apache.lucene.index.FlushPolicy flushPolicy;
    private boolean closed;
    private final org.apache.lucene.index.DocumentsWriter documentsWriter;
    private final org.apache.lucene.index.LiveIndexWriterConfig config;
    private final java.util.List fullFlushBuffer;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.DocumentsWriter, org.apache.lucene.index.LiveIndexWriterConfig)
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r8;
        java.util.IdentityHashMap $r4;
        org.apache.lucene.index.LiveIndexWriterConfig r10;
        org.apache.lucene.index.DocumentsWriterStallControl $r6;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        long $l3;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        java.util.ArrayList $r5;
        org.apache.lucene.index.DocumentsWriter r7;
        int $i0, $i1, $i2;
        org.apache.lucene.index.FlushPolicy $r9;
        java.util.LinkedList $r2, $r3;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r7 := @parameter0: org.apache.lucene.index.DocumentsWriter;

        r10 := @parameter1: org.apache.lucene.index.LiveIndexWriterConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes> = 0L;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes> = 0L;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending> = 0;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numDocsSinceStalled> = 0;

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.concurrent.atomic.AtomicBoolean flushDeletes> = $r1;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush> = 0;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue> = $r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes> = $r3;

        $r4 = new java.util.IdentityHashMap;

        specialinvoke $r4.<java.util.IdentityHashMap: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters> = $r4;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: double maxConfiguredRamBuffer> = 0.0;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakActiveBytes> = 0L;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakFlushBytes> = 0L;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakNetBytes> = 0L;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakDelta> = 0L;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed> = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.List fullFlushBuffer> = $r5;

        $r6 = new org.apache.lucene.index.DocumentsWriterStallControl;

        specialinvoke $r6.<org.apache.lucene.index.DocumentsWriterStallControl: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterStallControl stallControl> = $r6;

        $r8 = r7.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool> = $r8;

        $r9 = r7.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.FlushPolicy flushPolicy>;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.FlushPolicy flushPolicy> = $r9;

        $i0 = virtualinvoke r10.<org.apache.lucene.index.LiveIndexWriterConfig: int getRAMPerThreadHardLimitMB()>();

        $i1 = $i0 * 1024;

        $i2 = $i1 * 1024;

        $l3 = (long) $i2;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long hardMaxBytesPerDWPT> = $l3;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.LiveIndexWriterConfig config> = r10;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter> = r7;

        return;
    }

    public synchronized long activeBytes()
    {
        long $l0;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $l0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        return $l0;
    }

    public synchronized long flushBytes()
    {
        long $l0;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $l0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        return $l0;
    }

    public synchronized long netBytes()
    {
        long $l0, $l1, $l2;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $l1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $l2 = $l1 + $l0;

        return $l2;
    }

    private long stallLimitBytes()
    {
        org.apache.lucene.index.LiveIndexWriterConfig $r1;
        long $l1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        byte $b0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.LiveIndexWriterConfig config>;

        $d0 = virtualinvoke $r1.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $b0 = $d0 cmpl -1.0;

        if $b0 == 0 goto label1;

        $d1 = $d0 * 1024.0;

        $d2 = $d1 * 1024.0;

        $d3 = 2.0 * $d2;

        $l1 = (long) $d3;

        goto label2;

     label1:
        $l1 = 9223372036854775807L;

     label2:
        return $l1;
    }

    private boolean assertMemory()
    {
        byte $b0, $b22, $b23;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22;
        org.apache.lucene.index.LiveIndexWriterConfig $r1;
        long $l1, $l2, l3, l4, $l5, $l11, $l12, $l13, $l15, $l16, $l17, $l18, l19, $l20, $l21, $l24, $l25, $l29;
        java.lang.AssertionError $r23;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        int $i6, $i7, $i8, $i9, $i10, $i14, $i26, $i27, $i28, $i30, $i31;
        java.lang.String $r21;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.LiveIndexWriterConfig config>;

        $d0 = virtualinvoke $r1.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $b0 = $d0 cmpl -1.0;

        if $b0 == 0 goto label1;

        $d1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: double maxConfiguredRamBuffer>;

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: double maxConfiguredRamBuffer> = $d2;

        $l2 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        l3 = $l2 + $l1;

        $d3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: double maxConfiguredRamBuffer>;

        $d4 = $d3 * 1024.0;

        $d5 = $d4 * 1024.0;

        l4 = (long) $d5;

        $l5 = 2L * l4;

        $i6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending>;

        $i7 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numFlushingDWPT()>();

        $i8 = $i6 + $i7;

        $i9 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numBlockedFlushes()>();

        $i10 = $i8 + $i9;

        $l12 = (long) $i10;

        $l11 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakDelta>;

        $l13 = $l12 * $l11;

        $l18 = $l5 + $l13;

        $i14 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numDocsSinceStalled>;

        $l16 = (long) $i14;

        $l15 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakDelta>;

        $l17 = $l16 * $l15;

        l19 = $l18 + $l17;

        $l21 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakDelta>;

        $l20 = l4 >> 1;

        $b22 = $l21 cmp $l20;

        $i30 = (int) $b22;

        if $i30 >= 0 goto label1;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b23 = l3 cmp l19;

        $i31 = (int) $b23;

        if $i31 <= 0 goto label1;

        $r23 = new java.lang.AssertionError;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("actual mem: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte, expected mem: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l19);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte, flush mem: ");

        $l24 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l24);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", active mem: ");

        $l25 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pending DWPT: ");

        $i26 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flushing DWPT: ");

        $i27 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numFlushingDWPT()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blocked DWPT: ");

        $i28 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numBlockedFlushes()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", peakDelta mem: ");

        $l29 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakDelta>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l29);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r23;

     label1:
        return 1;
    }

    private void commitPerThreadBytes(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        long $l0, $l1, l2, $l3, $l4, $l5, $l6, $l7, $l8;
        java.lang.AssertionError $r3;
        org.apache.lucene.index.DocumentsWriterFlushControl r2;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        org.apache.lucene.index.DocumentsWriterPerThread $r1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThread: long bytesUsed()>();

        $l1 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        l2 = $l0 - $l1;

        $l3 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        $l4 = $l3 + l2;

        r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed> = $l4;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z0 == 0 goto label1;

        $l7 = r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l8 = $l7 + l2;

        r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes> = $l8;

        goto label2;

     label1:
        $l5 = r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $l6 = $l5 + l2;

        r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes> = $l6;

     label2:
        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z2 = specialinvoke r2.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updatePeaks(long)>(l2);

        if $z2 != 0 goto label3;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label3:
        return;
    }

    private boolean updatePeaks(long)
    {
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, l9, $l10, $l11;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        l9 := @parameter0: long;

        $l1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakActiveBytes>;

        $l0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>($l1, $l0);

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakActiveBytes> = $l2;

        $l4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakFlushBytes>;

        $l3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l5 = staticinvoke <java.lang.Math: long max(long,long)>($l4, $l3);

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakFlushBytes> = $l5;

        $l6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakNetBytes>;

        $l7 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long netBytes()>();

        $l8 = staticinvoke <java.lang.Math: long max(long,long)>($l6, $l7);

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakNetBytes> = $l8;

        $l10 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakDelta>;

        $l11 = staticinvoke <java.lang.Math: long max(long,long)>($l10, l9);

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long peakDelta> = $l11;

        return 1;
    }

    synchronized org.apache.lucene.index.DocumentsWriterPerThread doAfterDocument(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState, boolean)
    {
        java.lang.Throwable $r6;
        long $l0, $l1;
        java.lang.AssertionError $r9, $r10;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        byte $b2;
        int $i3;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r1;
        org.apache.lucene.index.DocumentsWriterPerThread r2, r8;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.lucene.index.FlushPolicy $r4, $r5;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        z4 := @parameter1: boolean;

     label01:
        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void commitPerThreadBytes(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r1);

        $z0 = r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z0 != 0 goto label04;

        if z4 == 0 goto label02;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.FlushPolicy flushPolicy>;

        virtualinvoke $r5.<org.apache.lucene.index.FlushPolicy: void onUpdate(org.apache.lucene.index.DocumentsWriterFlushControl,org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r0, r1);

        goto label03;

     label02:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.FlushPolicy flushPolicy>;

        virtualinvoke $r4.<org.apache.lucene.index.FlushPolicy: void onInsert(org.apache.lucene.index.DocumentsWriterFlushControl,org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r0, r1);

     label03:
        $z5 = r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z5 != 0 goto label04;

        $l1 = r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        $l0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long hardMaxBytesPerDWPT>;

        $b2 = $l1 cmp $l0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label04;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void setFlushPending(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r1);

     label04:
        $z10 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        if $z10 == 0 goto label06;

        $z3 = r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z3 == 0 goto label05;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void checkoutAndBlock(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r1);

        r8 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread nextPendingFlush()>();

        goto label07;

     label05:
        r8 = null;

        goto label07;

     label06:
        r8 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread tryCheckoutForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r1);

     label07:
        r2 = r8;

     label08:
        $z11 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        $z12 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z12 != 0 goto label10;

        $z1 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertNumDocsSinceStalled(boolean)>($z11);

        if $z1 == 0 goto label09;

        $z2 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertMemory()>();

        if $z2 != 0 goto label10;

     label09:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label10:
        return r2;

     label11:
        $r6 := @caughtexception;

     label12:
        $z6 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        $z7 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z7 != 0 goto label14;

        $z8 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertNumDocsSinceStalled(boolean)>($z6);

        if $z8 == 0 goto label13;

        $z9 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertMemory()>();

        if $z9 != 0 goto label14;

     label13:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label14:
        throw $r6;

        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private boolean assertNumDocsSinceStalled(boolean)
    {
        int $i0, $i1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numDocsSinceStalled>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numDocsSinceStalled> = $i1;

        goto label2;

     label1:
        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numDocsSinceStalled> = 0;

     label2:
        return 1;
    }

    synchronized void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)
    {
        java.lang.Throwable $r9, $r10, $r11;
        long $l0, $l1, $l2;
        java.lang.AssertionError $r5, $r8;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        java.lang.Long $r7;
        org.apache.lucene.index.DocumentsWriterPerThread r1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r4;
        java.util.IdentityHashMap $r2, $r6;
        java.lang.Object $r3;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $z3 = virtualinvoke $r6.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z3 != 0 goto label01;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label01:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $r3 = virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r7 = (java.lang.Long) $r3;

        $l0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $l2 = $l0 - $l1;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes> = $l2;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool: void recycle(org.apache.lucene.index.DocumentsWriterPerThread)>(r1);

        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z2 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertMemory()>();

        if $z2 != 0 goto label02;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label02:
        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

     label03:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        goto label06;

     label04:
        $r11 := @caughtexception;

     label05:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        throw $r11;

     label06:
        goto label13;

     label07:
        $r10 := @caughtexception;

     label08:
        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

     label09:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        goto label12;

     label10:
        $r9 := @caughtexception;

     label11:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        throw $r9;

     label12:
        throw $r10;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private final boolean updateStallState()
    {
        org.apache.lucene.index.DocumentsWriterStallControl $r2;
        long $l0, $l1, $l2, $l3, $l5;
        java.lang.AssertionError $r3;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        byte $b4, $b6;
        int $i7, $i8;
        boolean $z0, $z1, $z2, $z4, $z5;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z2 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $l0 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long stallLimitBytes()>();

        $l2 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $l1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l3 = $l2 + $l1;

        $b4 = $l3 cmp $l0;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label2;

        $l5 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $b6 = $l5 cmp $l0;

        $i8 = (int) $b6;

        if $i8 >= 0 goto label2;

        $z1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed>;

        if $z1 != 0 goto label2;

        $z5 = 1;

        $z4 = 1;

        goto label3;

     label2:
        $z5 = 0;

        $z4 = 0;

     label3:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterStallControl stallControl>;

        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterStallControl: void updateStalled(boolean)>($z5);

        return $z4;
    }

    public synchronized void waitForFlush()
    {
        java.util.IdentityHashMap $r6;
        java.lang.AssertionError $r3;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        org.apache.lucene.index.DocumentsWriter $r1;
        org.apache.lucene.index.IndexWriter $r2;
        java.lang.InterruptedException $r4;
        int $i0;
        boolean $z0, $z1;
        org.apache.lucene.util.ThreadInterruptedException $r5;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r2 = $r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("IW lock should never be hold when waiting on flush");

        throw $r3;

     label1:
        $r6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $i0 = virtualinvoke $r6.<java.util.IdentityHashMap: int size()>();

        if $i0 == 0 goto label5;

     label2:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.apache.lucene.util.ThreadInterruptedException;

        specialinvoke $r5.<org.apache.lucene.util.ThreadInterruptedException: void <init>(java.lang.InterruptedException)>($r4);

        throw $r5;

     label5:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public synchronized void setFlushPending(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        long l1, $l2, $l3, $l4, $l5;
        java.lang.AssertionError $r3, $r4;
        org.apache.lucene.index.DocumentsWriterFlushControl r2;
        int $i0, $i6, $i7;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        org.apache.lucene.index.DocumentsWriterPerThread $r1;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z3 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThread: int getNumDocsInRAM()>();

        if $i0 <= 0 goto label2;

        r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending> = 1;

        l1 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        $l2 = r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l3 = $l2 + l1;

        r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes> = $l3;

        $l4 = r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $l5 = $l4 - l1;

        r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes> = $l5;

        $i6 = r2.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending>;

        $i7 = $i6 + 1;

        r2.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending> = $i7;

        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r2.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertMemory()>();

        if $z2 != 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    synchronized void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        java.lang.Throwable $r4;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r2;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        java.lang.AssertionError $r3;
        org.apache.lucene.index.DocumentsWriterFlushControl r1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

     label1:
        $z0 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z0 == 0 goto label2;

        $l4 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $l3 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        $l5 = $l4 - $l3;

        r1.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes> = $l5;

        goto label3;

     label2:
        $l1 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $l0 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        $l2 = $l1 - $l0;

        r1.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes> = $l2;

     label3:
        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $z3 = specialinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertMemory()>();

        if $z3 != 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $r2 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $z2 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed>;

        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThread replaceForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState,boolean)>(r0, $z2);

     label5:
        specialinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        goto label8;

     label6:
        $r4 := @caughtexception;

     label7:
        specialinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        throw $r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    synchronized org.apache.lucene.index.DocumentsWriterPerThread tryCheckoutForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        org.apache.lucene.index.DocumentsWriterPerThread $r2;
        org.apache.lucene.index.DocumentsWriterFlushControl r1;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread internalTryCheckOutForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    private void checkoutAndBlock(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        java.lang.Throwable $r8;
        org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush $r4;
        long $l2;
        java.lang.AssertionError $r6, $r7;
        org.apache.lucene.index.DocumentsWriterFlushControl r1;
        int $i0, $i1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        org.apache.lucene.index.DocumentsWriterPerThread $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r2;
        java.util.Queue $r5;

        r1 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void lock()>();

     label1:
        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z4 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z4 != 0 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("can not block non-pending threadstate");

        throw $r7;

     label2:
        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z3 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        if $z3 != 0 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("can not block if fullFlush == false");

        throw $r6;

     label3:
        $l2 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        $r2 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $z2 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThread replaceForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState,boolean)>(r0, $z2);

        $i0 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending>;

        $i1 = $i0 - 1;

        r1.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending> = $i1;

        $r5 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        $r4 = new org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush;

        specialinvoke $r4.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: void <init>(org.apache.lucene.index.DocumentsWriterPerThread,long)>($r3, $l2);

        interfaceinvoke $r5.<java.util.Queue: boolean add(java.lang.Object)>($r4);

     label4:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

     label6:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private org.apache.lucene.index.DocumentsWriterPerThread internalTryCheckOutForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        java.lang.Throwable $r11, $r12;
        long $l2;
        java.lang.AssertionError $r7, $r8, $r9, $r10;
        org.apache.lucene.index.DocumentsWriterFlushControl r1;
        java.lang.Long $r5;
        int $i0, $i1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        org.apache.lucene.index.DocumentsWriterPerThread $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r2;
        java.util.IdentityHashMap $r4, $r6;

        r1 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z10 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r1);

        if $z10 != 0 goto label01;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label01:
        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z9 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z9 != 0 goto label02;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label02:
        $z2 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean tryLock()>();

        if $z2 == 0 goto label11;

     label03:
        $z3 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z3 == 0 goto label08;

        $z4 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label04;

        $z8 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z8 != 0 goto label04;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label04:
        $l2 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        $r2 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $z5 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThread replaceForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState,boolean)>(r0, $z5);

        $z6 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z6 != 0 goto label05;

        $r6 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $z7 = virtualinvoke $r6.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z7 == 0 goto label05;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("DWPT is already flushing");

        throw $r7;

     label05:
        $r4 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r4.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i0 = r1.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending>;

        $i1 = $i0 - 1;

        r1.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending> = $i1;

     label06:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

     label07:
        specialinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        return $r3;

     label08:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label11;

     label09:
        $r12 := @caughtexception;

     label10:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        throw $r12;

     label11:
        specialinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        return null;

     label12:
        $r11 := @caughtexception;

     label13:
        specialinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        throw $r11;

        catch java.lang.Throwable from label03 to label06 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label02 to label07 with label12;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public java.lang.String toString()
    {
        long $l0, $l1;
        org.apache.lucene.index.DocumentsWriterFlushControl r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r2 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DocumentsWriterFlushControl [activeBytes=");

        $l0 = r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flushBytes=");

        $l1 = r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    org.apache.lucene.index.DocumentsWriterPerThread nextPendingFlush()
    {
        java.lang.Throwable $r8;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r4, $r5;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        int i0, $i1, i2;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r6;
        java.lang.Object $r2;
        java.util.Queue $r1;
        org.apache.lucene.index.DocumentsWriterPerThread $r3, $r7;
        boolean z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        entermonitor r0;

     label01:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        $r3 = (org.apache.lucene.index.DocumentsWriterPerThread) $r2;

        if $r3 == null goto label03;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        exitmonitor r0;

     label02:
        return $r3;

     label03:
        z0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        i0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: int numPending>;

        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r8;

     label07:
        if i0 <= 0 goto label10;

        if z0 != 0 goto label10;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i1 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getActiveThreadState()>();

        i2 = 0;

     label08:
        if i2 >= $i1 goto label10;

        if i0 <= 0 goto label10;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getThreadState(int)>(i2);

        $z1 = $r6.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z1 == 0 goto label09;

        $r7 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread tryCheckoutForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r6);

        if $r7 == null goto label09;

        return $r7;

     label09:
        i2 = i2 + 1;

        goto label08;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    synchronized void setClosed()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed>;

        if $z0 != 0 goto label1;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed> = 1;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool: void deactivateUnreleasedStates()>();

     label1:
        return;
    }

    public java.util.Iterator allActiveThreadStates()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        java.util.Iterator $r2;
        int $i0;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getActiveThreadState()>();

        $r2 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Iterator getPerThreadsIterator(int)>($i0);

        return $r2;
    }

    private java.util.Iterator getPerThreadsIterator(int)
    {
        org.apache.lucene.index.DocumentsWriterFlushControl$1 $r0;
        int i0;
        org.apache.lucene.index.DocumentsWriterFlushControl r1;

        r1 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        i0 := @parameter0: int;

        $r0 = new org.apache.lucene.index.DocumentsWriterFlushControl$1;

        specialinvoke $r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: void <init>(org.apache.lucene.index.DocumentsWriterFlushControl,int)>(r1, i0);

        return $r0;
    }

    synchronized void doOnDelete()
    {
        org.apache.lucene.index.FlushPolicy $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.FlushPolicy flushPolicy>;

        virtualinvoke $r1.<org.apache.lucene.index.FlushPolicy: void onDelete(org.apache.lucene.index.DocumentsWriterFlushControl,org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r0, null);

        return;
    }

    public int getNumGlobalTermDeletes()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        org.apache.lucene.index.DocumentsWriter $r1, $r3;
        org.apache.lucene.index.IndexWriter $r4;
        org.apache.lucene.index.BufferedDeletesStream $r5;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r2 = $r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: int numGlobalTermDeletes()>();

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r4 = $r3.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r5 = $r4.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.BufferedDeletesStream bufferedDeletesStream>;

        $i1 = virtualinvoke $r5.<org.apache.lucene.index.BufferedDeletesStream: int numTerms()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public long getDeleteBytesUsed()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2;
        long $l0, $l1, $l2;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        org.apache.lucene.index.DocumentsWriter $r1, $r3;
        org.apache.lucene.index.IndexWriter $r4;
        org.apache.lucene.index.BufferedDeletesStream $r5;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r2 = $r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $l0 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: long bytesUsed()>();

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r4 = $r3.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r5 = $r4.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.BufferedDeletesStream bufferedDeletesStream>;

        $l1 = virtualinvoke $r5.<org.apache.lucene.index.BufferedDeletesStream: long bytesUsed()>();

        $l2 = $l0 + $l1;

        return $l2;
    }

    synchronized int numFlushingDWPT()
    {
        int $i0;
        java.util.IdentityHashMap $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $i0 = virtualinvoke $r1.<java.util.IdentityHashMap: int size()>();

        return $i0;
    }

    public boolean doApplyAllDeletes()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.concurrent.atomic.AtomicBoolean flushDeletes>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        return $z0;
    }

    public void setApplyAllDeletes()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.concurrent.atomic.AtomicBoolean flushDeletes>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    int numActiveDWPT()
    {
        int $i0;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getActiveThreadState()>();

        return $i0;
    }

    org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState obtainAndLock()
    {
        java.lang.Throwable $r9;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r7, $r8;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        org.apache.lucene.index.DocumentsWriter $r3, $r6;
        java.lang.Thread $r2;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r4;
        org.apache.lucene.index.DocumentsWriterPerThread $r5;
        boolean $z0, z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r4 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getAndLock(java.lang.Thread,org.apache.lucene.index.DocumentsWriter)>($r2, $r3);

        z1 = 0;

     label1:
        $z0 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z0 == 0 goto label2;

        $r5 = $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r8 = $r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r7 = $r6.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r8 == $r7 goto label2;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void addFlushableState(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r4);

     label2:
        z1 = 1;

     label3:
        if 1 != 0 goto label4;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

     label4:
        return $r4;

     label5:
        $r9 := @caughtexception;

     label6:
        if 0 != 0 goto label7;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void markForFullFlush()
    {
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r29, $r30, $r33, $r34, $r36, $r41, $r42, $r44;
        java.lang.Throwable $r47, $r48, $r49;
        long $l0, $l1;
        java.lang.AssertionError $r10, $r13, $r22, $r40, $r46;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r15;
        java.lang.String $r37, $r45;
        org.apache.lucene.index.DocumentsWriterPerThread $r16, $r18, $r31, $r35, $r50;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r4, $r14;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2, $r9, $r12, $r17, $r20, $r21, $r28, $r32, $r39, $r51;
        org.apache.lucene.index.DocumentsWriter $r1, $r3, $r8, $r11, $r19, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.List $r5, $r7, $r38, $r43;
        java.util.Queue $r6;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        int $i2, $i3, i4;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        entermonitor r0;

     label01:
        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z9 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        if $z9 == 0 goto label02;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>("called DWFC#markForFullFlush() while full flush is still running");

        throw $r46;

     label02:
        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r38 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.List fullFlushBuffer>;

        $z8 = interfaceinvoke $r38.<java.util.List: boolean isEmpty()>();

        if $z8 != 0 goto label03;

        $r40 = new java.lang.AssertionError;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("full flush buffer should be empty: ");

        $r43 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.List fullFlushBuffer>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.AssertionError: void <init>(java.lang.Object)>($r45);

        throw $r40;

     label03:
        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush> = 1;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r39 = $r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r2 = new org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $l0 = $r39.<org.apache.lucene.index.DocumentsWriterDeleteQueue: long generation>;

        $l1 = $l0 + 1L;

        specialinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void <init>(long)>($l1);

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r3.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue> = $r2;

        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r49 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r49;

     label07:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i2 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getActiveThreadState()>();

        i4 = 0;

     label08:
        if i4 >= $i2 goto label19;

        $r14 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $r15 = virtualinvoke $r14.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getThreadState(int)>(i4);

        virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void lock()>();

     label09:
        $z6 = virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z6 != 0 goto label11;

     label10:
        virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label18;

     label11:
        $z7 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z7 != 0 goto label12;

        $r16 = $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r17 = $r16.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r17 == $r39 goto label12;

        $r18 = $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r21 = $r18.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r19 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r20 = $r19.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r21 == $r20 goto label12;

        $r22 = new java.lang.AssertionError;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flushingQueue: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentqueue: ");

        $r27 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r28 = $r27.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" perThread queue: ");

        $r31 = $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r32 = $r31.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numDocsInRam: ");

        $r35 = $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $i3 = virtualinvoke $r35.<org.apache.lucene.index.DocumentsWriterPerThread: int getNumDocsInRAM()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>($r37);

        throw $r22;

     label12:
        $r50 = $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r51 = $r50.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r51 == $r39 goto label14;

     label13:
        virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label18;

     label14:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void addFlushableState(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r15);

     label15:
        virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label18;

     label16:
        $r48 := @caughtexception;

     label17:
        virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        throw $r48;

     label18:
        i4 = i4 + 1;

        goto label08;

     label19:
        entermonitor r0;

     label20:
        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void pruneBlockedQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r39);

        $z2 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z2 != 0 goto label21;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r12 = $r11.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $z5 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertBlockedFlushes(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r12);

        if $z5 != 0 goto label21;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label21:
        $r6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.List fullFlushBuffer>;

        interfaceinvoke $r6.<java.util.Queue: boolean addAll(java.util.Collection)>($r5);

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.List fullFlushBuffer>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        exitmonitor r0;

     label22:
        goto label25;

     label23:
        $r47 := @caughtexception;

        exitmonitor r0;

     label24:
        throw $r47;

     label25:
        $z3 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z3 != 0 goto label26;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r9 = $r8.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $z4 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertActiveDeleteQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r9);

        if $z4 != 0 goto label26;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label26:
        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label20 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private boolean assertActiveDeleteQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)
    {
        java.lang.Throwable $r8;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1, $r2;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r5, $r6;
        java.lang.AssertionError $r7;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        int $i0, i1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r3;
        org.apache.lucene.index.DocumentsWriterPerThread $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r5 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getActiveThreadState()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label7;

        $r2 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getThreadState(int)>(i1);

        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void lock()>();

     label2:
        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z1 == 0 goto label3;

        $r4 = $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r6 = $r4.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r6 == r5 goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        throw $r8;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void addFlushableState(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r11, $r12;
        org.apache.lucene.index.DocumentsWriter $r1, $r10, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.List $r7;
        org.apache.lucene.util.InfoStream $r2, $r19;
        java.lang.StringBuilder $r18, $r20, $r22;
        java.lang.Throwable $r25;
        java.lang.AssertionError $r8, $r9, $r13, $r14, $r15, $r16;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        int $i0;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r3;
        java.lang.String $r23;
        org.apache.lucene.index.DocumentsWriterPerThread $r6, $r21, $r24;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r4, $r5;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r3 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r2 = $r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWFC");

        if $z0 == 0 goto label01;

        $r17 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r19 = $r17.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addFlushableState ");

        $r21 = r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWFC", $r23);

     label01:
        $r24 = r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z11 = virtualinvoke r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z11 != 0 goto label02;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label02:
        $z2 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $z10 = virtualinvoke r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z10 != 0 goto label03;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label03:
        $z3 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $z9 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        if $z9 != 0 goto label04;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label04:
        $z4 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label05;

        $r12 = $r24.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r10 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r11 = $r10.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r12 != $r11 goto label05;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label05:
        $i0 = virtualinvoke $r24.<org.apache.lucene.index.DocumentsWriterPerThread: int getNumDocsInRAM()>();

        if $i0 <= 0 goto label14;

        entermonitor r0;

     label06:
        $z6 = r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        if $z6 != 0 goto label07;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void setFlushPending(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r3);

     label07:
        $r6 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread internalTryCheckOutForFlush(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r3);

        $z7 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z7 != 0 goto label08;

        if $r6 != null goto label08;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("DWPT must never be null here since we hold the lock and it holds documents");

        throw $r9;

     label08:
        $z8 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z8 != 0 goto label09;

        if $r24 == $r6 goto label09;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("flushControl returned different DWPT");

        throw $r8;

     label09:
        $r7 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.List fullFlushBuffer>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        exitmonitor r0;

     label10:
        goto label13;

     label11:
        $r25 := @caughtexception;

        exitmonitor r0;

     label12:
        throw $r25;

     label13:
        goto label16;

     label14:
        $z5 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean closed>;

        if $z5 == 0 goto label15;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        virtualinvoke $r5.<org.apache.lucene.index.DocumentsWriterPerThreadPool: void deactivateThreadState(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r3);

        goto label16;

     label15:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool: void reinitThreadState(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r3);

     label16:
        return;

        catch java.lang.Throwable from label06 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void pruneBlockedQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)
    {
        org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush r4;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r6, $r7;
        long $l0;
        java.lang.AssertionError $r15;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        java.lang.Long $r10;
        org.apache.lucene.index.DocumentsWriterPerThread $r5, $r9, $r11, $r13;
        boolean $z0, $z1, $z2;
        java.util.IdentityHashMap $r8, $r14;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.util.Queue $r1, $r12;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r6 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush) $r3;

        $r5 = r4.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r7 = $r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r7 != r6 goto label3;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r14 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $r13 = r4.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $z2 = virtualinvoke $r14.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>($r13);

        if $z2 == 0 goto label2;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("DWPT is already flushing");

        throw $r15;

     label2:
        $r8 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $r9 = r4.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $l0 = r4.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: long bytes>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r8.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r12 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        $r11 = r4.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        interfaceinvoke $r12.<java.util.Queue: boolean add(java.lang.Object)>($r11);

     label3:
        goto label1;

     label4:
        return;
    }

    synchronized void finishFullFlush()
    {
        java.lang.Throwable $r14;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r3, $r7;
        java.lang.AssertionError $r5, $r8, $r10, $r12, $r13;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        org.apache.lucene.index.DocumentsWriter $r2, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.IdentityHashMap $r9;
        java.util.Queue $r1, $r4, $r11;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z10 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        if $z10 != 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        $z9 = interfaceinvoke $r11.<java.util.Queue: boolean isEmpty()>();

        if $z9 != 0 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label2:
        $z2 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $z8 = virtualinvoke $r9.<java.util.IdentityHashMap: boolean isEmpty()>();

        if $z8 != 0 goto label3;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label3:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        $z3 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>();

        if $z3 != 0 goto label5;

        $z4 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label4;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r7 = $r6.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $z7 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean assertBlockedFlushes(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r7);

        if $z7 != 0 goto label4;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r3 = $r2.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void pruneBlockedQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r3);

        $z5 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z5 != 0 goto label5;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        $z6 = interfaceinvoke $r4.<java.util.Queue: boolean isEmpty()>();

        if $z6 != 0 goto label5;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label5:
        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush> = 0;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        goto label8;

     label6:
        $r14 := @caughtexception;

     label7:
        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush> = 0;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        throw $r14;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    boolean assertBlockedFlushes(org.apache.lucene.index.DocumentsWriterDeleteQueue)
    {
        java.util.Iterator $r2;
        org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush r4;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r6, $r7;
        java.lang.AssertionError $r8;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        java.lang.Object $r3;
        java.util.Queue $r1;
        org.apache.lucene.index.DocumentsWriterPerThread $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        r6 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush) $r3;

        $z1 = <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r5 = r4.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $r7 = $r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r7 == r6 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        goto label1;

     label3:
        return 1;
    }

    synchronized void abortFullFlushes()
    {
        java.lang.Throwable $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

     label1:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void abortPendingFlushes()>();

     label2:
        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush> = 0;

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush> = 0;

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    synchronized void abortPendingFlushes()
    {
        java.lang.Throwable $r14, $r17, $r19, $r21, $r22;
        org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush r24;
        long $l0;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        java.lang.Long $r10;
        org.apache.lucene.index.DocumentsWriterPerThread $r9, $r11, $r12, $r18, $r20, r23;
        boolean $z0, $z1;
        java.util.IdentityHashMap $r8;
        java.util.Iterator $r2, $r4;
        java.lang.Object $r7, $r13;
        java.util.Queue $r1, $r3, $r5, $r6, $r15, $r16;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

     label01:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r13 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.lucene.index.DocumentsWriterPerThread) $r13;

     label03:
        virtualinvoke r23.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label04:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>(r23);

        goto label09;

     label05:
        $r22 := @caughtexception;

     label06:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>(r23);

        goto label09;

     label07:
        $r21 := @caughtexception;

     label08:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>(r23);

        throw $r21;

     label09:
        goto label02;

     label10:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label19;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush) $r7;

     label12:
        $r8 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.IdentityHashMap flushingWriters>;

        $r9 = r24.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $l0 = r24.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: long bytes>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r8.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r11 = r24.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke $r11.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label13:
        $r12 = r24.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>($r12);

        goto label18;

     label14:
        $r19 := @caughtexception;

     label15:
        $r20 = r24.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>($r20);

        goto label18;

     label16:
        $r17 := @caughtexception;

     label17:
        $r18 = r24.<org.apache.lucene.index.DocumentsWriterFlushControl$BlockedFlush: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>($r18);

        throw $r17;

     label18:
        goto label11;

     label19:
        $r5 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        interfaceinvoke $r5.<java.util.Queue: void clear()>();

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        interfaceinvoke $r6.<java.util.Queue: void clear()>();

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        goto label22;

     label20:
        $r14 := @caughtexception;

     label21:
        $r15 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        interfaceinvoke $r15.<java.util.Queue: void clear()>();

        $r16 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        interfaceinvoke $r16.<java.util.Queue: void clear()>();

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean updateStallState()>();

        throw $r14;

     label22:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    synchronized boolean isFullFlush()
    {
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        return $z0;
    }

    synchronized int numQueuedFlushes()
    {
        int $i0;
        java.util.Queue $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>();

        return $i0;
    }

    synchronized int numBlockedFlushes()
    {
        int $i0;
        java.util.Queue $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue blockedFlushes>;

        $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>();

        return $i0;
    }

    void waitIfStalled()
    {
        org.apache.lucene.index.DocumentsWriterStallControl $r3;
        long $l1, $l2;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        org.apache.lucene.index.DocumentsWriter $r1, $r4;
        int $i0;
        java.lang.String $r16;
        boolean $z0, $z1;
        org.apache.lucene.util.InfoStream $r2, $r6;
        java.lang.StringBuilder $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.util.Queue $r8;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r2 = $r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWFC");

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriter documentsWriter>;

        $r6 = $r4.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("waitIfStalled: numFlushesPending: ");

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: java.util.Queue flushQueue>;

        $i0 = interfaceinvoke $r8.<java.util.Queue: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" netBytes: ");

        $l1 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long netBytes()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flushBytes: ");

        $l2 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: long flushBytes()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fullFlush: ");

        $z1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean fullFlush>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWFC", $r16);

     label1:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterStallControl stallControl>;

        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterStallControl: void waitIfStalled()>();

        return;
    }

    boolean anyStalledThreads()
    {
        org.apache.lucene.index.DocumentsWriterFlushControl r0;
        org.apache.lucene.index.DocumentsWriterStallControl $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterStallControl stallControl>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterStallControl: boolean anyStalledThreads()>();

        return $z0;
    }

    static org.apache.lucene.index.DocumentsWriterPerThreadPool access$000(org.apache.lucene.index.DocumentsWriterFlushControl)
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r1;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterFlushControl;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DocumentsWriterFlushControl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocumentsWriterFlushControl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
