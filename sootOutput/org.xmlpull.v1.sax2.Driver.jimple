public class org.xmlpull.v1.sax2.Driver extends java.lang.Object implements org.xml.sax.Locator, org.xml.sax.XMLReader, org.xml.sax.Attributes
{
    protected static final java.lang.String DECLARATION_HANDLER_PROPERTY;
    protected static final java.lang.String LEXICAL_HANDLER_PROPERTY;
    protected static final java.lang.String NAMESPACES_FEATURE;
    protected static final java.lang.String NAMESPACE_PREFIXES_FEATURE;
    protected static final java.lang.String VALIDATION_FEATURE;
    protected static final java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE;
    protected static final java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE;
    protected org.xml.sax.ContentHandler contentHandler;
    protected org.xml.sax.ErrorHandler errorHandler;
    protected java.lang.String systemId;
    protected org.xmlpull.v1.XmlPullParser pp;

    public void <init>() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xml.sax.helpers.DefaultHandler $r1, $r2;
        org.xmlpull.v1.XmlPullParserFactory $r3;
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser $r4;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r1.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r1;

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r2;

        $r3 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(1);

        $r4 = virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = $r4;

        return;
    }

    public void <init>(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xml.sax.helpers.DefaultHandler $r1, $r2;
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser r3;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r3 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r1.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r1;

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r2;

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = r3;

        return;
    }

    public int getLength()
    {
        org.xmlpull.v1.sax2.Driver r0;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        return $i0;
    }

    public java.lang.String getURI(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        return $r2;
    }

    public java.lang.String getLocalName(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        return $r2;
    }

    public java.lang.String getQName(int)
    {
        java.lang.StringBuffer $r5, $r6, $r7, $r10;
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        java.lang.String $r2, $r4, $r9, $r11;
        org.xmlpull.v1.XmlPullParser $r1, $r3, $r8;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>(i0);

        if $r2 == null goto label1;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r9 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;

     label1:
        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        return $r4;
    }

    public java.lang.String getType(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r2;
    }

    public java.lang.String getValue(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        return $r2;
    }

    public int getIndex(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int $i0, i1, $i3;
        java.lang.String $r3, r4, $r6, r7;
        org.xmlpull.v1.XmlPullParser $r1, $r2, $r5;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r4 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i1);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public int getIndex(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int $i0, i1, $i3;
        java.lang.String $r3, r4;
        org.xmlpull.v1.XmlPullParser $r1, $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r4 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public java.lang.String getType(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int $i0, i1;
        java.lang.String $r3, r4, $r6, r7, $r9;
        org.xmlpull.v1.XmlPullParser $r1, $r2, $r5, $r8;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r4 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i1);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r9 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i1);

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getType(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int $i0, i1;
        java.lang.String $r3, r4, $r6;
        org.xmlpull.v1.XmlPullParser $r1, $r2, $r5;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r4 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i1);

        return $r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getValue(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, $r4;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public java.lang.String getValue(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r3;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        return $r3;
    }

    public java.lang.String getPublicId()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public java.lang.String getSystemId()
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        return $r1;
    }

    public int getLineNumber()
    {
        org.xmlpull.v1.sax2.Driver r0;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getLineNumber()>();

        return $i0;
    }

    public int getColumnNumber()
    {
        org.xmlpull.v1.sax2.Driver r0;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getColumnNumber()>();

        return $i0;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.xmlpull.v1.XmlPullParser $r5, $r6, $r7, $r8;
        org.xmlpull.v1.sax2.Driver r4;

        r4 := @this: org.xmlpull.v1.sax2.Driver;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xml.org/sax/features/namespaces";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r8 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z6 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z6;

     label1:
        $r2 = "http://xml.org/sax/features/namespace-prefixes";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r7 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z5 = interfaceinvoke $r7.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

        return $z5;

     label2:
        $r3 = "http://xml.org/sax/features/validation";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r6 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z4 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z4;

     label3:
        $r5 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z3 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>(r0);

        return $z3;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r11;
        java.lang.StringBuffer $r12, $r13, $r14, $r15, $r16;
        java.lang.String r0, $r1, $r2, $r3, $r17;
        boolean $z0, $z1, $z2, z3, $z4;
        org.xmlpull.v1.XmlPullParser $r5, $r6, $r7, $r8, $r9;
        org.xmlpull.v1.XmlPullParserException $r10;
        org.xmlpull.v1.sax2.Driver r4;

        r4 := @this: org.xmlpull.v1.sax2.Driver;

        r0 := @parameter0: java.lang.String;

        z3 := @parameter1: boolean;

     label1:
        $r1 = "http://xml.org/sax/features/namespaces";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r9 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", z3);

        goto label5;

     label2:
        $r2 = "http://xml.org/sax/features/namespace-prefixes";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        $r7 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z4 = interfaceinvoke $r7.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

        if $z4 == z3 goto label5;

        $r8 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes", z3);

        goto label5;

     label3:
        $r3 = "http://xml.org/sax/features/validation";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        $r6 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#validation", z3);

        goto label5;

     label4:
        $r5 = r4.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>(r0, z3);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = new org.xml.sax.SAXNotSupportedException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("problem with setting feature ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label7:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label5 with label6;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r3;
        java.lang.Object $r5;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r4;

        r3 := @this: org.xmlpull.v1.sax2.Driver;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = "http://xml.org/sax/properties/lexical-handler";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return null;

     label2:
        $r4 = r3.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r6, $r11, $r17;
        java.lang.StringBuffer $r7, $r8, $r9, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r22;
        java.lang.String r0, $r1, $r2, $r10, $r15, $r23;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r5;
        org.xmlpull.v1.XmlPullParserException $r16;
        org.xmlpull.v1.sax2.Driver r3;
        java.lang.Object r4;

        r3 := @this: org.xmlpull.v1.sax2.Driver;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r1 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r11 = new org.xml.sax.SAXNotSupportedException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("not supported setting property ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r2 = "http://xml.org/sax/properties/lexical-handler";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r6 = new org.xml.sax.SAXNotSupportedException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("not supported setting property ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r5 = r3.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)>(r0, r4);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        $r17 = new org.xml.sax.SAXNotSupportedException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("not supported set property ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r16);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label5:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label4;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        return;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        return;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = r1;

        return;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        return $r1;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = r1;

        return;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        return $r1;
    }

    public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.net.URL $r23;
        org.xml.sax.ErrorHandler $r18, $r26, $r33, $r40, $r48;
        org.xmlpull.v1.XmlPullParser $r5, $r7, $r8, $r9, $r14, $r53;
        java.io.Reader $r4;
        java.io.FileNotFoundException $r41;
        org.xmlpull.v1.XmlPullParserException $r27, $r34;
        java.lang.StringBuffer $r12, $r13, $r16, $r29, $r30, $r31, $r36, $r37, $r38, $r43, $r44, $r46;
        int $i0;
        java.lang.String $r2, $r15, $r17, $r20, $r21, $r22, $r24, $r32, $r39, $r45, $r47, $r51;
        org.xml.sax.ContentHandler $r3, $r6, $r10;
        org.xml.sax.InputSource r1;
        java.net.MalformedURLException $r49;
        java.io.FileInputStream $r50;
        org.xml.sax.SAXParseException $r11, $r25, $r28, $r35, $r42;
        org.xmlpull.v1.sax2.Driver r0;
        java.io.InputStream $r19, r52;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.InputSource;

        $r2 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r2;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>(r0);

        $r4 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

     label01:
        if $r4 != null goto label11;

        $r19 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        r52 = $r19;

        $r20 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        if $r19 != null goto label10;

        $r21 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r21;

        $r22 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        if $r22 != null goto label03;

        $r25 = new org.xml.sax.SAXParseException;

        specialinvoke $r25.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>("null source systemId", r0);

        $r26 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r26.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r25);

     label02:
        return;

     label03:
        $r23 = new java.net.URL;

        $r24 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        specialinvoke $r23.<java.net.URL: void <init>(java.lang.String)>($r24);

        r52 = virtualinvoke $r23.<java.net.URL: java.io.InputStream openStream()>();

     label04:
        goto label10;

     label05:
        $r49 := @caughtexception;

     label06:
        $r50 = new java.io.FileInputStream;

        $r51 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        specialinvoke $r50.<java.io.FileInputStream: void <init>(java.lang.String)>($r51);

        r52 = $r50;

     label07:
        goto label10;

     label08:
        $r41 := @caughtexception;

        $r42 = new org.xml.sax.SAXParseException;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not open file with systemId ");

        $r45 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r42.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r47, r0, $r41);

        $r48 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r48.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r42);

     label09:
        return;

     label10:
        $r53 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r53.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r52, $r20);

        goto label12;

     label11:
        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r4);

     label12:
        goto label14;

     label13:
        $r34 := @caughtexception;

        $r35 = new org.xml.sax.SAXParseException;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parsing initialization error: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r34);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r35.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r39, r0, $r34);

        $r40 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r40.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r35);

        return;

     label14:
        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void startDocument()>();

        $r7 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r7.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label16;

        $r11 = new org.xml.sax.SAXParseException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected start tag not");

        $r14 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r15 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>($r17, r0);

        $r18 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r18.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r11);

     label15:
        return;

     label16:
        goto label18;

     label17:
        $r27 := @caughtexception;

        $r28 = new org.xml.sax.SAXParseException;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parsing initialization error: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r27);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r32, r0, $r27);

        $r33 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r33.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r28);

        return;

     label18:
        $r9 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)>($r9);

        $r10 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void endDocument()>();

        return;

        catch java.net.MalformedURLException from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label06 to label07 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label09 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label12 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label17;
    }

    public void parse(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.InputSource $r1;
        java.lang.String r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>($r1);

        return;
    }

    public void parseSubTree(org.xmlpull.v1.XmlPullParser) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xml.sax.ErrorHandler $r36;
        int[] r37;
        org.xmlpull.v1.XmlPullParser r1;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r30;
        org.xml.sax.SAXException $r41;
        java.lang.StringBuffer $r26, $r28, $r33, $r34, $r40, $r42, $r43;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, i16, $i17, i18, i19, $i20, $i22;
        org.xml.sax.ContentHandler $r4, $r5, $r11, $r13, $r21;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r27, $r29, $r35, $r38, $r39;
        org.xml.sax.SAXParseException $r44;
        org.xmlpull.v1.sax2.Driver r0;
        char[] $r3;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = r1;

        $z0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

     label01:
        $i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label02;

        $r41 = new org.xml.sax.SAXException;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("start tag must be read before skiping subtree");

        $r27 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r41.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r29);

        throw $r41;

     label02:
        r37 = newarray (int)[2];

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>(int)>(16);

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = $i1 - 1;

        i13 = 2;

     label03:
        tableswitch(i13)
        {
            case 1: goto label23;
            case 2: goto label04;
            case 3: goto label14;
            case 4: goto label13;
            default: goto label24;
        };

     label04:
        if $z0 == 0 goto label12;

        $i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i14 = $i10 - 1;

        if i2 <= i14 goto label05;

        $i15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>(i14);

        goto label06;

     label05:
        $i15 = 0;

     label06:
        $i11 = i14 + 1;

        $i12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i11);

        i16 = $i15;

     label07:
        if i16 >= $i12 goto label08;

        $r21 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i16);

        $r23 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>(i16);

        interfaceinvoke $r21.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r22, $r23);

        i16 = i16 + 1;

        goto label07;

     label08:
        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        if $r19 == null goto label09;

        virtualinvoke $r42.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

     label09:
        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        if $r19 == null goto label10;

        $r38 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label11;

     label10:
        $r38 = $r18;

     label11:
        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>($r20, $r18, $r38);

        goto label24;

     label12:
        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>($r15, $r16, $r17);

        goto label24;

     label13:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])>(r37);

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $i4 = r37[0];

        $i3 = r37[1];

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r3, $i4, $i3);

        goto label24;

     label14:
        if $z0 == 0 goto label22;

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        if $r10 == null goto label15;

        virtualinvoke $r42.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label15:
        $r11 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        if $r10 == null goto label16;

        $r39 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label17;

     label16:
        $r39 = $r9;

     label17:
        interfaceinvoke $r11.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r12, $r9, $r39);

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i2 <= $i5 goto label18;

        $i9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i9);

        goto label19;

     label18:
        $i17 = 0;

     label19:
        i18 = $i17;

        $i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i7 = $i6 - 1;

        $i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i7);

        i19 = $i8 - 1;

     label20:
        if i19 < i18 goto label21;

        $r13 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i19);

        interfaceinvoke $r13.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r14);

        $i22 = (int) -1;

        i19 = i19 + $i22;

        goto label20;

     label21:
        goto label24;

     label22:
        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, $r8);

        goto label24;

     label23:
        goto label25;

     label24:
        i13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i20 > i2 goto label03;

     label25:
        goto label27;

     label26:
        $r30 := @caughtexception;

        $r44 = new org.xml.sax.SAXParseException;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parsing error: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r44.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r35, r0, $r30);

        virtualinvoke $r30.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        $r36 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r36.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r44);

     label27:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label25 with label26;
    }

    protected void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.ContentHandler $r4;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r0);

        return;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/dynamic";

        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/schema";

        <org.xmlpull.v1.sax2.Driver: java.lang.String VALIDATION_FEATURE> = "http://xml.org/sax/features/validation";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACE_PREFIXES_FEATURE> = "http://xml.org/sax/features/namespace-prefixes";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACES_FEATURE> = "http://xml.org/sax/features/namespaces";

        <org.xmlpull.v1.sax2.Driver: java.lang.String LEXICAL_HANDLER_PROPERTY> = "http://xml.org/sax/properties/lexical-handler";

        <org.xmlpull.v1.sax2.Driver: java.lang.String DECLARATION_HANDLER_PROPERTY> = "http://xml.org/sax/properties/declaration-handler";

        return;
    }
}
