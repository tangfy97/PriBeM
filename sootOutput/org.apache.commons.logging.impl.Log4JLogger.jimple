public class org.apache.commons.logging.impl.Log4JLogger extends java.lang.Object implements org.apache.commons.logging.Log, java.io.Serializable
{
    private static final java.lang.String FQCN;
    private transient org.apache.log4j.Logger logger;
    private java.lang.String name;
    private static org.apache.log4j.Priority traceLevel;
    static java.lang.Class class$org$apache$commons$logging$impl$Log4JLogger;
    static java.lang.Class class$org$apache$log4j$Level;
    static java.lang.Class class$org$apache$log4j$Priority;

    public void <init>()
    {
        org.apache.commons.logging.impl.Log4JLogger r0;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger> = null;

        r0.<org.apache.commons.logging.impl.Log4JLogger: java.lang.String name> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.log4j.Logger $r2;
        java.lang.String r1;
        org.apache.commons.logging.impl.Log4JLogger r0;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger> = null;

        r0.<org.apache.commons.logging.impl.Log4JLogger: java.lang.String name> = null;

        r0.<org.apache.commons.logging.impl.Log4JLogger: java.lang.String name> = r1;

        $r2 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger> = $r2;

        return;
    }

    public void <init>(org.apache.log4j.Logger)
    {
        org.apache.log4j.Logger r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r4;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r5;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r1 := @parameter0: org.apache.log4j.Logger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger> = null;

        r0.<org.apache.commons.logging.impl.Log4JLogger: java.lang.String name> = null;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Warning - null logger in constructor; possible log4j misconfiguration.");

        throw $r4;

     label1:
        $r5 = (org.apache.log4j.Category) r1;

        $r2 = virtualinvoke $r5.<org.apache.log4j.Category: java.lang.String getName()>();

        r0.<org.apache.commons.logging.impl.Log4JLogger: java.lang.String name> = $r2;

        r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger> = r1;

        return;
    }

    public void trace(java.lang.Object)
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r3;
        java.lang.Object r2;
        java.lang.String $r4;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r5;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r4 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r3 = <org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Priority traceLevel>;

        $r5 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r5.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r2, null);

        return;
    }

    public void trace(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r4;
        java.lang.Object r2;
        java.lang.String $r5;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r5 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r4 = <org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Priority traceLevel>;

        $r6 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r6.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r4, r2, r3);

        return;
    }

    public void debug(java.lang.Object)
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r3;
        java.lang.Object r2;
        java.lang.String $r4;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r5;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r4 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Priority: org.apache.log4j.Priority DEBUG>;

        $r5 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r5.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r2, null);

        return;
    }

    public void debug(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r4;
        java.lang.Object r2;
        java.lang.String $r5;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r5 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Priority: org.apache.log4j.Priority DEBUG>;

        $r6 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r6.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r4, r2, r3);

        return;
    }

    public void info(java.lang.Object)
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r3;
        java.lang.Object r2;
        java.lang.String $r4;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r5;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r4 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Priority: org.apache.log4j.Priority INFO>;

        $r5 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r5.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r2, null);

        return;
    }

    public void info(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r4;
        java.lang.Object r2;
        java.lang.String $r5;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r5 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Priority: org.apache.log4j.Priority INFO>;

        $r6 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r6.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r4, r2, r3);

        return;
    }

    public void warn(java.lang.Object)
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r3;
        java.lang.Object r2;
        java.lang.String $r4;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r5;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r4 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Priority: org.apache.log4j.Priority WARN>;

        $r5 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r5.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r2, null);

        return;
    }

    public void warn(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r4;
        java.lang.Object r2;
        java.lang.String $r5;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r5 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Priority: org.apache.log4j.Priority WARN>;

        $r6 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r6.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r4, r2, r3);

        return;
    }

    public void error(java.lang.Object)
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r3;
        java.lang.Object r2;
        java.lang.String $r4;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r5;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r4 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Priority: org.apache.log4j.Priority ERROR>;

        $r5 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r5.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r2, null);

        return;
    }

    public void error(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r4;
        java.lang.Object r2;
        java.lang.String $r5;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r5 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Priority: org.apache.log4j.Priority ERROR>;

        $r6 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r6.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r4, r2, r3);

        return;
    }

    public void fatal(java.lang.Object)
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r3;
        java.lang.Object r2;
        java.lang.String $r4;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r5;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r4 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Priority: org.apache.log4j.Priority FATAL>;

        $r5 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r5.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r2, null);

        return;
    }

    public void fatal(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r4;
        java.lang.Object r2;
        java.lang.String $r5;
        org.apache.commons.logging.impl.Log4JLogger r0;
        org.apache.log4j.Category $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r5 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Priority: org.apache.log4j.Priority FATAL>;

        $r6 = (org.apache.log4j.Category) $r1;

        virtualinvoke $r6.<org.apache.log4j.Category: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r4, r2, r3);

        return;
    }

    public org.apache.log4j.Logger getLogger()
    {
        org.apache.log4j.Logger $r1, $r2, $r4;
        java.lang.String $r3;
        org.apache.commons.logging.impl.Log4JLogger r0;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        $r1 = r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.commons.logging.impl.Log4JLogger: java.lang.String name>;

        $r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>($r3);

        r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger> = $r4;

     label1:
        $r2 = r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger logger>;

        return $r2;
    }

    public boolean isDebugEnabled()
    {
        org.apache.log4j.Logger $r1;
        org.apache.commons.logging.impl.Log4JLogger r0;
        boolean $z0;
        org.apache.log4j.Category $r2;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r2 = (org.apache.log4j.Category) $r1;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        return $z0;
    }

    public boolean isErrorEnabled()
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r2;
        org.apache.commons.logging.impl.Log4JLogger r0;
        boolean $z0;
        org.apache.log4j.Category $r3;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r2 = <org.apache.log4j.Priority: org.apache.log4j.Priority ERROR>;

        $r3 = (org.apache.log4j.Category) $r1;

        $z0 = virtualinvoke $r3.<org.apache.log4j.Category: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        return $z0;
    }

    public boolean isFatalEnabled()
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r2;
        org.apache.commons.logging.impl.Log4JLogger r0;
        boolean $z0;
        org.apache.log4j.Category $r3;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r2 = <org.apache.log4j.Priority: org.apache.log4j.Priority FATAL>;

        $r3 = (org.apache.log4j.Category) $r1;

        $z0 = virtualinvoke $r3.<org.apache.log4j.Category: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        return $z0;
    }

    public boolean isInfoEnabled()
    {
        org.apache.log4j.Logger $r1;
        org.apache.commons.logging.impl.Log4JLogger r0;
        boolean $z0;
        org.apache.log4j.Category $r2;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r2 = (org.apache.log4j.Category) $r1;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Category: boolean isInfoEnabled()>();

        return $z0;
    }

    public boolean isTraceEnabled()
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r2;
        org.apache.commons.logging.impl.Log4JLogger r0;
        boolean $z0;
        org.apache.log4j.Category $r3;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r2 = <org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Priority traceLevel>;

        $r3 = (org.apache.log4j.Category) $r1;

        $z0 = virtualinvoke $r3.<org.apache.log4j.Category: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        return $z0;
    }

    public boolean isWarnEnabled()
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Priority $r2;
        org.apache.commons.logging.impl.Log4JLogger r0;
        boolean $z0;
        org.apache.log4j.Category $r3;

        r0 := @this: org.apache.commons.logging.impl.Log4JLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>();

        $r2 = <org.apache.log4j.Priority: org.apache.log4j.Priority WARN>;

        $r3 = (org.apache.log4j.Category) $r1;

        $z0 = virtualinvoke $r3.<org.apache.log4j.Category: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.String $r1;
        boolean $z0;
        java.lang.reflect.Field $r5;
        java.lang.Exception $r10;
        org.apache.log4j.Priority $r7, $r11;
        java.lang.InstantiationError $r8;
        java.lang.Class $r0, $r2, $r3, $r4, $r9, $r12, $r13, $r14, $r15, $r16;
        java.lang.Object $r6;

        $r0 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$commons$logging$impl$Log4JLogger>;

        if $r0 != null goto label01;

        $r12 = staticinvoke <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.impl.Log4JLogger");

        <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$commons$logging$impl$Log4JLogger> = $r12;

        goto label02;

     label01:
        $r12 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$commons$logging$impl$Log4JLogger>;

     label02:
        $r1 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        <org.apache.commons.logging.impl.Log4JLogger: java.lang.String FQCN> = $r1;

        $r2 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Priority>;

        if $r2 != null goto label03;

        $r9 = staticinvoke <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Priority");

        $r13 = $r9;

        <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Priority> = $r9;

        goto label04;

     label03:
        $r13 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Priority>;

     label04:
        $r3 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Level>;

        if $r3 != null goto label05;

        $r14 = staticinvoke <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Level");

        $r15 = $r14;

        <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Level> = $r14;

        goto label06;

     label05:
        $r15 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Level>;

     label06:
        $z0 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r15);

        if $z0 != 0 goto label07;

        $r8 = new java.lang.InstantiationError;

        specialinvoke $r8.<java.lang.InstantiationError: void <init>(java.lang.String)>("Log4J 1.2 not available");

        throw $r8;

     label07:
        $r4 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Level>;

        if $r4 != null goto label08;

        $r16 = staticinvoke <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Level");

        <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Level> = $r16;

        goto label09;

     label08:
        $r16 = <org.apache.commons.logging.impl.Log4JLogger: java.lang.Class class$org$apache$log4j$Level>;

     label09:
        $r5 = virtualinvoke $r16.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("TRACE");

        $r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r7 = (org.apache.log4j.Priority) $r6;

        <org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Priority traceLevel> = $r7;

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

        $r11 = <org.apache.log4j.Priority: org.apache.log4j.Priority DEBUG>;

        <org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Priority traceLevel> = $r11;

     label12:
        return;

        catch java.lang.Exception from label07 to label10 with label11;
    }
}
