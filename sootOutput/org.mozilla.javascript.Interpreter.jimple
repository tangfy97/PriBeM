public class org.mozilla.javascript.Interpreter extends java.lang.Object
{
    private static final int Icode_DUP;
    private static final int Icode_DUP2;
    private static final int Icode_SWAP;
    private static final int Icode_POP;
    private static final int Icode_POP_RESULT;
    private static final int Icode_IFEQ_POP;
    private static final int Icode_VAR_INC_DEC;
    private static final int Icode_NAME_INC_DEC;
    private static final int Icode_PROP_INC_DEC;
    private static final int Icode_ELEM_INC_DEC;
    private static final int Icode_REF_INC_DEC;
    private static final int Icode_SCOPE_LOAD;
    private static final int Icode_SCOPE_SAVE;
    private static final int Icode_TYPEOFNAME;
    private static final int Icode_NAME_AND_THIS;
    private static final int Icode_PROP_AND_THIS;
    private static final int Icode_ELEM_AND_THIS;
    private static final int Icode_VALUE_AND_THIS;
    private static final int Icode_CLOSURE_EXPR;
    private static final int Icode_CLOSURE_STMT;
    private static final int Icode_CALLSPECIAL;
    private static final int Icode_RETUNDEF;
    private static final int Icode_GOSUB;
    private static final int Icode_STARTSUB;
    private static final int Icode_RETSUB;
    private static final int Icode_LINE;
    private static final int Icode_SHORTNUMBER;
    private static final int Icode_INTNUMBER;
    private static final int Icode_LITERAL_NEW;
    private static final int Icode_LITERAL_SET;
    private static final int Icode_SPARE_ARRAYLIT;
    private static final int Icode_REG_IND_C0;
    private static final int Icode_REG_IND_C1;
    private static final int Icode_REG_IND_C2;
    private static final int Icode_REG_IND_C3;
    private static final int Icode_REG_IND_C4;
    private static final int Icode_REG_IND_C5;
    private static final int Icode_REG_IND1;
    private static final int Icode_REG_IND2;
    private static final int Icode_REG_IND4;
    private static final int Icode_REG_STR_C0;
    private static final int Icode_REG_STR_C1;
    private static final int Icode_REG_STR_C2;
    private static final int Icode_REG_STR_C3;
    private static final int Icode_REG_STR1;
    private static final int Icode_REG_STR2;
    private static final int Icode_REG_STR4;
    private static final int Icode_GETVAR1;
    private static final int Icode_SETVAR1;
    private static final int Icode_UNDEF;
    private static final int Icode_ZERO;
    private static final int Icode_ONE;
    private static final int Icode_ENTERDQ;
    private static final int Icode_LEAVEDQ;
    private static final int Icode_TAIL_CALL;
    private static final int Icode_LOCAL_CLEAR;
    private static final int MIN_ICODE;
    private org.mozilla.javascript.CompilerEnvirons compilerEnv;
    private boolean itsInFunctionFlag;
    private org.mozilla.javascript.InterpreterData itsData;
    private org.mozilla.javascript.ScriptOrFnNode scriptOrFn;
    private int itsICodeTop;
    private int itsStackDepth;
    private int itsLineNumber;
    private int itsDoubleTableTop;
    private org.mozilla.javascript.ObjToIntMap itsStrings;
    private int itsLocalTop;
    private static final int MIN_LABEL_TABLE_SIZE;
    private static final int MIN_FIXUP_TABLE_SIZE;
    private int[] itsLabelTable;
    private int itsLabelTableTop;
    private long[] itsFixupTable;
    private int itsFixupTableTop;
    private org.mozilla.javascript.ObjArray itsLiteralIds;
    private int itsExceptionTableTop;
    private static final int EXCEPTION_TRY_START_SLOT;
    private static final int EXCEPTION_TRY_END_SLOT;
    private static final int EXCEPTION_HANDLER_SLOT;
    private static final int EXCEPTION_TYPE_SLOT;
    private static final int EXCEPTION_LOCAL_SLOT;
    private static final int EXCEPTION_SCOPE_SLOT;
    private static final int EXCEPTION_SLOT_SIZE;
    private static final int ECF_TAIL;

    public void <init>()
    {
        org.mozilla.javascript.Interpreter r0;
        org.mozilla.javascript.ObjToIntMap $r1;
        org.mozilla.javascript.ObjArray $r2;

        r0 := @this: org.mozilla.javascript.Interpreter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.mozilla.javascript.ObjToIntMap;

        specialinvoke $r1.<org.mozilla.javascript.ObjToIntMap: void <init>(int)>(20);

        r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjToIntMap itsStrings> = $r1;

        $r2 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r2.<org.mozilla.javascript.ObjArray: void <init>()>();

        r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjArray itsLiteralIds> = $r2;

        return;
    }

    private static java.lang.String bytecodeName(int)
    {
        int i0;
        java.lang.String $r0, $r2;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validBytecode(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        return $r0;
    }

    private static boolean validIcode(int)
    {
        int i0, $i2, $i4;
        boolean $z0;

        i0 := @parameter0: int;

        $i2 = (int) -56;

        if $i2 > i0 goto label1;

        $i4 = (int) -1;

        if i0 > $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean validTokenCode(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if 2 > i0 goto label1;

        if i0 > 76 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean validBytecode(int)
    {
        int i0;
        boolean $z0, $z1, $z2;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validIcode(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validTokenCode(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.Object compile(org.mozilla.javascript.CompilerEnvirons, org.mozilla.javascript.ScriptOrFnNode, java.lang.String, boolean)
    {
        org.mozilla.javascript.Interpreter r0;
        org.mozilla.javascript.CompilerEnvirons r1;
        org.mozilla.javascript.NodeTransformer $r2;
        int $i0;
        org.mozilla.javascript.ScriptOrFnNode $r4, $r8, r10;
        java.lang.String $r5, r6;
        org.mozilla.javascript.InterpreterData $r3, $r7, $r9;
        boolean z0;

        r0 := @this: org.mozilla.javascript.Interpreter;

        r1 := @parameter0: org.mozilla.javascript.CompilerEnvirons;

        r10 := @parameter1: org.mozilla.javascript.ScriptOrFnNode;

        r6 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.CompilerEnvirons compilerEnv> = r1;

        $r2 = new org.mozilla.javascript.NodeTransformer;

        specialinvoke $r2.<org.mozilla.javascript.NodeTransformer: void <init>()>();

        virtualinvoke $r2.<org.mozilla.javascript.NodeTransformer: void transform(org.mozilla.javascript.ScriptOrFnNode)>(r10);

        if z0 == 0 goto label1;

        r10 = virtualinvoke r10.<org.mozilla.javascript.ScriptOrFnNode: org.mozilla.javascript.FunctionNode getFunctionNode(int)>(0);

     label1:
        r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn> = r10;

        $r3 = new org.mozilla.javascript.InterpreterData;

        $i0 = virtualinvoke r1.<org.mozilla.javascript.CompilerEnvirons: int getLanguageVersion()>();

        $r4 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.ScriptOrFnNode: java.lang.String getSourceName()>();

        specialinvoke $r3.<org.mozilla.javascript.InterpreterData: void <init>(int,java.lang.String,java.lang.String)>($i0, $r5, r6);

        r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData> = $r3;

        $r7 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r7.<org.mozilla.javascript.InterpreterData: boolean topLevel> = 1;

        if z0 == 0 goto label2;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void generateFunctionICode()>();

        goto label3;

     label2:
        $r8 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void generateICodeFromTree(org.mozilla.javascript.Node)>($r8);

     label3:
        $r9 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        return $r9;
    }

    public org.mozilla.javascript.Script createScriptObject(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.Interpreter r1;
        java.lang.Object r0, r3;
        org.mozilla.javascript.InterpreterData $r2, $r4;
        org.mozilla.javascript.InterpretedFunction $r5;

        r1 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r2 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        if r0 == $r2 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r4 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r5 = staticinvoke <org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpretedFunction createScript(org.mozilla.javascript.InterpreterData,java.lang.Object)>($r4, r3);

        return $r5;
    }

    public org.mozilla.javascript.Function createFunctionObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.Interpreter r1;
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.Scriptable r4;
        java.lang.Object r0, r5;
        org.mozilla.javascript.InterpreterData $r2, $r6;
        org.mozilla.javascript.InterpretedFunction $r7;

        r1 := @this: org.mozilla.javascript.Interpreter;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        $r2 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        if r0 == $r2 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r6 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r7 = staticinvoke <org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpretedFunction createFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpreterData,java.lang.Object)>(r3, r4, $r6, r5);

        return $r7;
    }

    private void generateFunctionICode()
    {
        org.mozilla.javascript.Interpreter r0;
        org.mozilla.javascript.CompilerEnvirons $r7;
        org.mozilla.javascript.Node $r9;
        org.mozilla.javascript.FunctionNode r2;
        int $i0;
        org.mozilla.javascript.ScriptOrFnNode $r1;
        java.lang.String $r6;
        org.mozilla.javascript.InterpreterData $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mozilla.javascript.Interpreter;

        r0.<org.mozilla.javascript.Interpreter: boolean itsInFunctionFlag> = 1;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        r2 = (org.mozilla.javascript.FunctionNode) $r1;

        $r3 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i0 = virtualinvoke r2.<org.mozilla.javascript.FunctionNode: int getFunctionType()>();

        $r3.<org.mozilla.javascript.InterpreterData: int itsFunctionType> = $i0;

        $r4 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $z0 = virtualinvoke r2.<org.mozilla.javascript.FunctionNode: boolean requiresActivation()>();

        $r4.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation> = $z0;

        $r5 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r6 = virtualinvoke r2.<org.mozilla.javascript.FunctionNode: java.lang.String getFunctionName()>();

        $r5.<org.mozilla.javascript.InterpreterData: java.lang.String itsName> = $r6;

        $z1 = virtualinvoke r2.<org.mozilla.javascript.FunctionNode: boolean getIgnoreDynamicScope()>();

        if $z1 != 0 goto label1;

        $r7 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.CompilerEnvirons compilerEnv>;

        $z2 = virtualinvoke $r7.<org.mozilla.javascript.CompilerEnvirons: boolean isUseDynamicScope()>();

        if $z2 == 0 goto label1;

        $r8 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r8.<org.mozilla.javascript.InterpreterData: boolean useDynamicScope> = 1;

     label1:
        $r9 = virtualinvoke r2.<org.mozilla.javascript.FunctionNode: org.mozilla.javascript.Node getLastChild()>();

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void generateICodeFromTree(org.mozilla.javascript.Node)>($r9);

        return;
    }

    private void generateICodeFromTree(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r0;
        byte[] $r4, $r34, r36;
        org.mozilla.javascript.Node r1;
        org.mozilla.javascript.ScriptOrFnNode $r40, $r46, $r49, $r51, $r53;
        org.mozilla.javascript.ObjArray $r13, $r54;
        java.lang.Object[] $r15;
        double[] $r12, $r22, r37;
        java.lang.String r26, $r29;
        org.mozilla.javascript.ObjToIntMap $r5, $r6, $r9;
        int[] $r17, $r19, r38;
        boolean $z0;
        java.lang.String[] $r8, $r28, $r31, $r47;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.mozilla.javascript.InterpreterData $r2, $r3, $r7, $r11, $r14, $r16, $r18, $r20, $r21, $r23, $r24, $r27, $r30, $r32, $r33, $r35, $r39, $r41, $r42, $r43, $r44, $r45, $r48, $r50, $r52;
        org.mozilla.javascript.ObjToIntMap$Iterator $r10;
        java.lang.Object $r25;

        r0 := @this: org.mozilla.javascript.Interpreter;

        r1 := @parameter0: org.mozilla.javascript.Node;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void generateNestedFunctions()>();

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void generateRegExpLiterals()>();

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void visitStatement(org.mozilla.javascript.Node)>(r1);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void fixLabelGotos()>();

        $r2 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i0 = $r2.<org.mozilla.javascript.InterpreterData: int itsFunctionType>;

        if $i0 != 0 goto label01;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addToken(int)>(62);

     label01:
        $r3 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r4 = $r3.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        $i2 = lengthof $r4;

        $i1 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        if $i2 == $i1 goto label02;

        $i15 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        r36 = newarray (byte)[$i15];

        $r33 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r34 = $r33.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        $i16 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r34, 0, r36, 0, $i16);

        $r35 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r35.<org.mozilla.javascript.InterpreterData: byte[] itsICode> = r36;

     label02:
        $r5 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjToIntMap itsStrings>;

        $i3 = virtualinvoke $r5.<org.mozilla.javascript.ObjToIntMap: int size()>();

        if $i3 != 0 goto label03;

        $r32 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r32.<org.mozilla.javascript.InterpreterData: java.lang.String[] itsStringTable> = null;

        goto label06;

     label03:
        $r7 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r6 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjToIntMap itsStrings>;

        $i4 = virtualinvoke $r6.<org.mozilla.javascript.ObjToIntMap: int size()>();

        $r8 = newarray (java.lang.String)[$i4];

        $r7.<org.mozilla.javascript.InterpreterData: java.lang.String[] itsStringTable> = $r8;

        $r9 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjToIntMap itsStrings>;

        $r10 = virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap: org.mozilla.javascript.ObjToIntMap$Iterator newIterator()>();

        virtualinvoke $r10.<org.mozilla.javascript.ObjToIntMap$Iterator: void start()>();

     label04:
        $z0 = virtualinvoke $r10.<org.mozilla.javascript.ObjToIntMap$Iterator: boolean done()>();

        if $z0 != 0 goto label06;

        $r25 = virtualinvoke $r10.<org.mozilla.javascript.ObjToIntMap$Iterator: java.lang.Object getKey()>();

        r26 = (java.lang.String) $r25;

        $i14 = virtualinvoke $r10.<org.mozilla.javascript.ObjToIntMap$Iterator: int getValue()>();

        $r27 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r28 = $r27.<org.mozilla.javascript.InterpreterData: java.lang.String[] itsStringTable>;

        $r29 = $r28[$i14];

        if $r29 == null goto label05;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label05:
        $r30 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r31 = $r30.<org.mozilla.javascript.InterpreterData: java.lang.String[] itsStringTable>;

        $r31[$i14] = r26;

        virtualinvoke $r10.<org.mozilla.javascript.ObjToIntMap$Iterator: void next()>();

        goto label04;

     label06:
        $i5 = r0.<org.mozilla.javascript.Interpreter: int itsDoubleTableTop>;

        if $i5 != 0 goto label07;

        $r24 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r24.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable> = null;

        goto label08;

     label07:
        $r11 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r12 = $r11.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable>;

        $i7 = lengthof $r12;

        $i6 = r0.<org.mozilla.javascript.Interpreter: int itsDoubleTableTop>;

        if $i7 == $i6 goto label08;

        $i12 = r0.<org.mozilla.javascript.Interpreter: int itsDoubleTableTop>;

        r37 = newarray (double)[$i12];

        $r21 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r22 = $r21.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable>;

        $i13 = r0.<org.mozilla.javascript.Interpreter: int itsDoubleTableTop>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, r37, 0, $i13);

        $r23 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r23.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable> = r37;

     label08:
        $i17 = r0.<org.mozilla.javascript.Interpreter: int itsExceptionTableTop>;

        if $i17 == 0 goto label09;

        $r16 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r17 = $r16.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable>;

        $i9 = lengthof $r17;

        $i8 = r0.<org.mozilla.javascript.Interpreter: int itsExceptionTableTop>;

        if $i9 == $i8 goto label09;

        $i10 = r0.<org.mozilla.javascript.Interpreter: int itsExceptionTableTop>;

        r38 = newarray (int)[$i10];

        $r18 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r19 = $r18.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable>;

        $i11 = r0.<org.mozilla.javascript.Interpreter: int itsExceptionTableTop>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, 0, r38, 0, $i11);

        $r20 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r20.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable> = r38;

     label09:
        $r39 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r40 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i18 = virtualinvoke $r40.<org.mozilla.javascript.ScriptOrFnNode: int getParamAndVarCount()>();

        $r39.<org.mozilla.javascript.InterpreterData: int itsMaxVars> = $i18;

        $r41 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r42 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i19 = $r42.<org.mozilla.javascript.InterpreterData: int itsMaxVars>;

        $r43 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i20 = $r43.<org.mozilla.javascript.InterpreterData: int itsMaxLocals>;

        $i21 = $i19 + $i20;

        $r44 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i22 = $r44.<org.mozilla.javascript.InterpreterData: int itsMaxStack>;

        $i23 = $i21 + $i22;

        $r41.<org.mozilla.javascript.InterpreterData: int itsMaxFrameArray> = $i23;

        $r45 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r46 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $r47 = virtualinvoke $r46.<org.mozilla.javascript.ScriptOrFnNode: java.lang.String[] getParamAndVarNames()>();

        $r45.<org.mozilla.javascript.InterpreterData: java.lang.String[] argNames> = $r47;

        $r48 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r49 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i24 = virtualinvoke $r49.<org.mozilla.javascript.ScriptOrFnNode: int getParamCount()>();

        $r48.<org.mozilla.javascript.InterpreterData: int argCount> = $i24;

        $r50 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r51 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i25 = virtualinvoke $r51.<org.mozilla.javascript.ScriptOrFnNode: int getEncodedSourceStart()>();

        $r50.<org.mozilla.javascript.InterpreterData: int encodedSourceStart> = $i25;

        $r52 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r53 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i26 = virtualinvoke $r53.<org.mozilla.javascript.ScriptOrFnNode: int getEncodedSourceEnd()>();

        $r52.<org.mozilla.javascript.InterpreterData: int encodedSourceEnd> = $i26;

        $r54 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjArray itsLiteralIds>;

        $i27 = virtualinvoke $r54.<org.mozilla.javascript.ObjArray: int size()>();

        if $i27 == 0 goto label10;

        $r14 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r13 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjArray itsLiteralIds>;

        $r15 = virtualinvoke $r13.<org.mozilla.javascript.ObjArray: java.lang.Object[] toArray()>();

        $r14.<org.mozilla.javascript.InterpreterData: java.lang.Object[] literalIds> = $r15;

     label10:
        return;
    }

    private void generateNestedFunctions()
    {
        org.mozilla.javascript.Interpreter r0, $r6;
        org.mozilla.javascript.InterpreterData[] r2;
        org.mozilla.javascript.CompilerEnvirons $r7;
        int $i0, i1;
        org.mozilla.javascript.FunctionNode $r5;
        org.mozilla.javascript.ScriptOrFnNode $r1, $r4;
        org.mozilla.javascript.InterpreterData $r3, $r8, $r9, $r10;

        r0 := @this: org.mozilla.javascript.Interpreter;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i0 = virtualinvoke $r1.<org.mozilla.javascript.ScriptOrFnNode: int getFunctionCount()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        r2 = newarray (org.mozilla.javascript.InterpreterData)[$i0];

        i1 = 0;

     label2:
        if i1 == $i0 goto label3;

        $r4 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.ScriptOrFnNode: org.mozilla.javascript.FunctionNode getFunctionNode(int)>(i1);

        $r6 = new org.mozilla.javascript.Interpreter;

        specialinvoke $r6.<org.mozilla.javascript.Interpreter: void <init>()>();

        $r7 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.CompilerEnvirons compilerEnv>;

        $r6.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.CompilerEnvirons compilerEnv> = $r7;

        $r6.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn> = $r5;

        $r8 = new org.mozilla.javascript.InterpreterData;

        $r9 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        specialinvoke $r8.<org.mozilla.javascript.InterpreterData: void <init>(org.mozilla.javascript.InterpreterData)>($r9);

        $r6.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData> = $r8;

        specialinvoke $r6.<org.mozilla.javascript.Interpreter: void generateFunctionICode()>();

        $r10 = $r6.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        r2[i1] = $r10;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r3 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r3.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.InterpreterData[] itsNestedFunctions> = r2;

        return;
    }

    private void generateRegExpLiterals()
    {
        org.mozilla.javascript.Interpreter r0;
        java.lang.Object[] r4;
        org.mozilla.javascript.Context $r2;
        org.mozilla.javascript.RegExpProxy $r3;
        int $i0, i1;
        org.mozilla.javascript.ScriptOrFnNode $r1, $r6, $r8;
        java.lang.Object $r10;
        java.lang.String $r7, $r9;
        org.mozilla.javascript.InterpreterData $r5;

        r0 := @this: org.mozilla.javascript.Interpreter;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i0 = virtualinvoke $r1.<org.mozilla.javascript.ScriptOrFnNode: int getRegexpCount()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.RegExpProxy checkRegExpProxy(org.mozilla.javascript.Context)>($r2);

        r4 = newarray (java.lang.Object)[$i0];

        i1 = 0;

     label2:
        if i1 == $i0 goto label3;

        $r6 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $r7 = virtualinvoke $r6.<org.mozilla.javascript.ScriptOrFnNode: java.lang.String getRegexpString(int)>(i1);

        $r8 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $r9 = virtualinvoke $r8.<org.mozilla.javascript.ScriptOrFnNode: java.lang.String getRegexpFlags(int)>(i1);

        $r10 = interfaceinvoke $r3.<org.mozilla.javascript.RegExpProxy: java.lang.Object compileRegExp(org.mozilla.javascript.Context,java.lang.String,java.lang.String)>($r2, $r7, $r9);

        r4[i1] = $r10;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r5 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r5.<org.mozilla.javascript.InterpreterData: java.lang.Object[] itsRegExpLiterals> = r4;

        return;
    }

    private void updateLineNumber(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r1;
        org.mozilla.javascript.Node r0;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        org.mozilla.javascript.InterpreterData $r2, $r3;

        r1 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Node: int getLineno()>();

        $i1 = r1.<org.mozilla.javascript.Interpreter: int itsLineNumber>;

        if $i0 == $i1 goto label2;

        if $i0 < 0 goto label2;

        $r2 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i2 = $r2.<org.mozilla.javascript.InterpreterData: int firstLinePC>;

        if $i2 >= 0 goto label1;

        $r3 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r3.<org.mozilla.javascript.InterpreterData: int firstLinePC> = $i0;

     label1:
        r1.<org.mozilla.javascript.Interpreter: int itsLineNumber> = $i0;

        $i5 = (int) -26;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i5);

        $i7 = (int) 65535;

        $i3 = $i0 & $i7;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void addUint16(int)>($i3);

     label2:
        return;
    }

    private java.lang.RuntimeException badTree(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r3;
        org.mozilla.javascript.Node r1;
        java.lang.RuntimeException $r0;
        java.lang.String $r2;

        r3 := @this: org.mozilla.javascript.Interpreter;

        r1 := @parameter0: org.mozilla.javascript.Node;

        $r0 = new java.lang.RuntimeException;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.Node: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    private void visitStatement(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r2;
        byte $b18, $b20;
        org.mozilla.javascript.Node r0, $r1, $r5, $r6, $r7, $r8, r13, $r14, $r18, r22, r24, r25, r26;
        org.mozilla.javascript.ScriptOrFnNode $r10;
        java.lang.String $r17;
        java.lang.RuntimeException $r3, $r9, $r12, $r21;
        org.mozilla.javascript.FunctionNode $r11;
        org.mozilla.javascript.Node$Jump $r4, $r19, $r20, r23, r27;
        int[] $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45, $i47, $i49, $i50, $i52, $i54, $i56, $i58, $i60, $i62, $i64, $i66, $i68;

        r2 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Node: int getType()>();

        $r1 = virtualinvoke r0.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        r22 = $r1;

        lookupswitch($i0)
        {
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label34;
            case 5: goto label16;
            case 6: goto label15;
            case 7: goto label15;
            case 49: goto label32;
            case 50: goto label33;
            case 56: goto label29;
            case 57: goto label37;
            case 58: goto label37;
            case 62: goto label36;
            case 77: goto label24;
            case 105: goto label01;
            case 110: goto label10;
            case 119: goto label03;
            case 121: goto label18;
            case 124: goto label03;
            case 125: goto label03;
            case 126: goto label03;
            case 127: goto label14;
            case 128: goto label03;
            case 129: goto label21;
            case 130: goto label21;
            case 131: goto label17;
            case 132: goto label03;
            case 137: goto label07;
            default: goto label38;
        };

     label01:
        $i4 = virtualinvoke r0.<org.mozilla.javascript.Node: int getExistingIntProp(int)>(1);

        $r10 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $r11 = virtualinvoke $r10.<org.mozilla.javascript.ScriptOrFnNode: org.mozilla.javascript.FunctionNode getFunctionNode(int)>($i4);

        $i5 = virtualinvoke $r11.<org.mozilla.javascript.FunctionNode: int getFunctionType()>();

        if $i5 != 3 goto label02;

        $i23 = (int) -20;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i23, $i4);

        goto label39;

     label02:
        if $i5 == 1 goto label39;

        $r12 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r12;

     label03:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

     label04:
        if r22 == null goto label39;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitStatement(org.mozilla.javascript.Node)>(r22);

        r22 = virtualinvoke r22.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        goto label04;

     label05:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(2);

        $i25 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i25);

        goto label39;

     label06:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(3);

        goto label39;

     label07:
        $i1 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int allocLocal()>();

        virtualinvoke r0.<org.mozilla.javascript.Node: void putIntProp(int,int)>(2, $i1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

     label08:
        if r22 == null goto label09;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitStatement(org.mozilla.javascript.Node)>(r22);

        r22 = virtualinvoke r22.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        goto label08;

     label09:
        $i27 = (int) -56;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i27, $i1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void releaseLocal(int)>($i1);

        goto label39;

     label10:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r5 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        r23 = (org.mozilla.javascript.Node$Jump) $r5;

     label11:
        if r23 == null goto label13;

        $i3 = virtualinvoke r23.<org.mozilla.javascript.Node$Jump: int getType()>();

        if $i3 == 111 goto label12;

        $r9 = specialinvoke r2.<org.mozilla.javascript.Interpreter: java.lang.RuntimeException badTree(org.mozilla.javascript.Node)>(r23);

        throw $r9;

     label12:
        $r6 = virtualinvoke r23.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node getFirstChild()>();

        $i29 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i29);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r6, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(45);

        $i31 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i31);

        $r7 = r23.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target>;

        $i33 = (int) -6;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addGoto(org.mozilla.javascript.Node,int)>($r7, $i33);

        $i35 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i35);

        $r8 = virtualinvoke r23.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node getNext()>();

        r23 = (org.mozilla.javascript.Node$Jump) $r8;

        goto label11;

     label13:
        $i37 = (int) -4;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i37);

        $i39 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i39);

        goto label39;

     label14:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void markTargetLabel(org.mozilla.javascript.Node)>(r0);

        goto label39;

     label15:
        $r19 = (org.mozilla.javascript.Node$Jump) r0;

        r24 = $r19.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target>;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addGoto(org.mozilla.javascript.Node,int)>(r24, $i0);

        $i41 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i41);

        goto label39;

     label16:
        $r20 = (org.mozilla.javascript.Node$Jump) r0;

        r25 = $r20.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target>;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addGoto(org.mozilla.javascript.Node,int)>(r25, $i0);

        goto label39;

     label17:
        $r4 = (org.mozilla.javascript.Node$Jump) r0;

        r26 = $r4.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target>;

        $i43 = (int) -23;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addGoto(org.mozilla.javascript.Node,int)>(r26, $i43);

        goto label39;

     label18:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        $i2 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getLocalBlockRef(org.mozilla.javascript.Node)>(r0);

        $i45 = (int) -24;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i45, $i2);

        $i47 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i47);

     label19:
        if r22 == null goto label20;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitStatement(org.mozilla.javascript.Node)>(r22);

        r22 = virtualinvoke r22.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        goto label19;

     label20:
        $i49 = (int) -25;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i49, $i2);

        goto label39;

     label21:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        if $i0 != 129 goto label22;

        $b18 = -4;

        goto label23;

     label22:
        $b18 = -5;

     label23:
        $i50 = (int) $b18;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i50);

        $i52 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i52);

        goto label39;

     label24:
        r27 = (org.mozilla.javascript.Node$Jump) r0;

        $i6 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getLocalBlockRef(org.mozilla.javascript.Node)>(r27);

        $i7 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int allocLocal()>();

        $i54 = (int) -13;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i54, $i7);

        i8 = r2.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

     label25:
        if r22 == null goto label26;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitStatement(org.mozilla.javascript.Node)>(r22);

        r22 = virtualinvoke r22.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        goto label25;

     label26:
        r13 = r27.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target>;

        if r13 == null goto label27;

        $r16 = r2.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i11 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getTargetLabel(org.mozilla.javascript.Node)>(r13);

        i19 = $r16[$i11];

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addExceptionHandler(int,int,int,boolean,int,int)>(i8, i19, i19, 0, $i6, $i7);

     label27:
        $r14 = virtualinvoke r27.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node getFinally()>();

        if $r14 == null goto label28;

        $r15 = r2.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i9 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getTargetLabel(org.mozilla.javascript.Node)>($r14);

        i10 = $r15[$i9];

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addExceptionHandler(int,int,int,boolean,int,int)>(i8, i10, i10, 1, $i6, $i7);

     label28:
        $i56 = (int) -56;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i56, $i7);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void releaseLocal(int)>($i7);

        goto label39;

     label29:
        $i13 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getLocalBlockRef(org.mozilla.javascript.Node)>(r0);

        $i14 = virtualinvoke r0.<org.mozilla.javascript.Node: int getExistingIntProp(int)>(14);

        $r17 = virtualinvoke $r1.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $r18 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r18, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringPrefix(java.lang.String)>($r17);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexPrefix(int)>($i13);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(56);

        if $i14 == 0 goto label30;

        $b20 = 1;

        goto label31;

     label30:
        $b20 = 0;

     label31:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addUint8(int)>($b20);

        $i58 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i58);

        goto label39;

     label32:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(49);

        $i16 = r2.<org.mozilla.javascript.Interpreter: int itsLineNumber>;

        $i60 = (int) 65535;

        $i17 = $i16 & $i60;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addUint16(int)>($i17);

        $i62 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i62);

        goto label39;

     label33:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

        $i15 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getLocalBlockRef(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>(50, $i15);

        goto label39;

     label34:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

        if $r1 == null goto label35;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(4);

        $i64 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i64);

        goto label39;

     label35:
        $i66 = (int) -22;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i66);

        goto label39;

     label36:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(62);

        goto label39;

     label37:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $i12 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getLocalBlockRef(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i0, $i12);

        $i68 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i68);

        goto label39;

     label38:
        $r21 = specialinvoke r2.<org.mozilla.javascript.Interpreter: java.lang.RuntimeException badTree(org.mozilla.javascript.Node)>(r0);

        throw $r21;

     label39:
        $i21 = r2.<org.mozilla.javascript.Interpreter: int itsStackDepth>;

        if $i21 == 0 goto label40;

        $r3 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r3;

     label40:
        return;
    }

    private void visitExpression(org.mozilla.javascript.Node, int)
    {
        byte $b16, $b20, $b30, $b32;
        org.mozilla.javascript.ScriptOrFnNode $r6, $r7, $r21, $r24;
        short $s18;
        org.mozilla.javascript.FunctionNode $r8;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i31, i33, i34, i35, i36, i37, i38, $i39, $i40, $i42, $i44, $i46, $i48, $i50, $i52, $i54, $i56, $i58, $i60, $i62, $i64, $i66, $i68, $i70, $i72, $i74, $i76, $i78, $i80, $i82, $i84, $i86, $i88, $i90, $i92, $i94, $i96, $i98, $i100, $i101, $i103, $i104, $i106, $i108, $i110, $i112, $i114, $i116;
        org.mozilla.javascript.InterpreterData $r5, $r18, $r22, $r33, $r34;
        java.lang.Object $r15;
        org.mozilla.javascript.Interpreter r2;
        org.mozilla.javascript.Node r0, $r1, $r3, $r10, $r11, $r12, $r13, $r14, $r17, $r20, $r26, $r27, $r28, $r30, $r31, $r35, $r37, r39, $r40;
        java.lang.String $r4, $r16, $r19, $r23, $r25, $r29, $r32, $r36;
        java.lang.RuntimeException $r9, $r38;
        boolean $z0, $z1, $z2, $z3;
        double $d0, $d1, $d2;

        r2 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        i4 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Node: int getType()>();

        i28 = $i0;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        r39 = $r1;

        i1 = r2.<org.mozilla.javascript.Interpreter: int itsStackDepth>;

        tableswitch($i0)
        {
            case 8: goto label35;
            case 9: goto label25;
            case 10: goto label25;
            case 11: goto label25;
            case 12: goto label25;
            case 13: goto label25;
            case 14: goto label25;
            case 15: goto label25;
            case 16: goto label25;
            case 17: goto label25;
            case 18: goto label25;
            case 19: goto label25;
            case 20: goto label25;
            case 21: goto label25;
            case 22: goto label25;
            case 23: goto label25;
            case 24: goto label25;
            case 25: goto label25;
            case 26: goto label26;
            case 27: goto label26;
            case 28: goto label26;
            case 29: goto label26;
            case 30: goto label08;
            case 31: goto label25;
            case 32: goto label26;
            case 33: goto label24;
            case 34: goto label29;
            case 35: goto label25;
            case 36: goto label31;
            case 37: goto label08;
            case 38: goto label39;
            case 39: goto label41;
            case 40: goto label39;
            case 41: goto label51;
            case 42: goto label51;
            case 43: goto label51;
            case 44: goto label51;
            case 45: goto label25;
            case 46: goto label25;
            case 47: goto label53;
            case 48: goto label39;
            case 49: goto label60;
            case 50: goto label60;
            case 51: goto label25;
            case 52: goto label25;
            case 53: goto label03;
            case 54: goto label47;
            case 55: goto label49;
            case 56: goto label60;
            case 57: goto label60;
            case 58: goto label60;
            case 59: goto label52;
            case 60: goto label52;
            case 61: goto label51;
            case 62: goto label60;
            case 63: goto label54;
            case 64: goto label54;
            case 65: goto label28;
            case 66: goto label33;
            case 67: goto label28;
            case 68: goto label08;
            case 69: goto label55;
            case 70: goto label59;
            case 71: goto label59;
            case 72: goto label59;
            case 73: goto label56;
            case 74: goto label56;
            case 75: goto label56;
            case 76: goto label56;
            case 77: goto label60;
            case 78: goto label60;
            case 79: goto label60;
            case 80: goto label60;
            case 81: goto label60;
            case 82: goto label60;
            case 83: goto label60;
            case 84: goto label60;
            case 85: goto label04;
            case 86: goto label60;
            case 87: goto label60;
            case 88: goto label60;
            case 89: goto label60;
            case 90: goto label60;
            case 91: goto label60;
            case 92: goto label60;
            case 93: goto label60;
            case 94: goto label60;
            case 95: goto label60;
            case 96: goto label60;
            case 97: goto label60;
            case 98: goto label23;
            case 99: goto label60;
            case 100: goto label20;
            case 101: goto label20;
            case 102: goto label40;
            case 103: goto label40;
            case 104: goto label60;
            case 105: goto label01;
            case 106: goto label60;
            case 107: goto label60;
            case 108: goto label60;
            case 109: goto label60;
            case 110: goto label60;
            case 111: goto label60;
            case 112: goto label60;
            case 113: goto label60;
            case 114: goto label60;
            case 115: goto label60;
            case 116: goto label60;
            case 117: goto label60;
            case 118: goto label60;
            case 119: goto label60;
            case 120: goto label60;
            case 121: goto label60;
            case 122: goto label26;
            case 123: goto label60;
            case 124: goto label60;
            case 125: goto label60;
            case 126: goto label60;
            case 127: goto label60;
            case 128: goto label60;
            case 129: goto label60;
            case 130: goto label60;
            case 131: goto label60;
            case 132: goto label60;
            case 133: goto label36;
            case 134: goto label07;
            case 135: goto label29;
            case 136: goto label31;
            case 137: goto label60;
            case 138: goto label33;
            case 139: goto label60;
            case 140: goto label60;
            case 141: goto label60;
            case 142: goto label58;
            default: goto label60;
        };

     label01:
        $i2 = virtualinvoke r0.<org.mozilla.javascript.Node: int getExistingIntProp(int)>(1);

        $r7 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.ScriptOrFnNode: org.mozilla.javascript.FunctionNode getFunctionNode(int)>($i2);

        $i3 = virtualinvoke $r8.<org.mozilla.javascript.FunctionNode: int getFunctionType()>();

        if $i3 == 2 goto label02;

        $r9 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r9;

     label02:
        $i42 = (int) -19;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i42, $i2);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label03:
        $i14 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getLocalBlockRef(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>(53, $i14);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label04:
        $r13 = virtualinvoke r0.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getLastChild()>();

     label05:
        if r39 == $r13 goto label06;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>(r39, 0);

        $i44 = (int) -4;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i44);

        $i46 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i46);

        r39 = virtualinvoke r39.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        goto label05;

     label06:
        $i8 = i4 & 1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>(r39, $i8);

        goto label61;

     label07:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label08:
        if $i0 != 30 goto label09;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        goto label10;

     label09:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void generateCallFunAndThis(org.mozilla.javascript.Node)>($r1);

     label10:
        i29 = 0;

     label11:
        $r40 = virtualinvoke r39.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        r39 = $r40;

        if $r40 == null goto label12;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r40, 0);

        i29 = i29 + 1;

        goto label11;

     label12:
        $i21 = virtualinvoke r0.<org.mozilla.javascript.Node: int getIntProp(int,int)>(10, 0);

        if $i21 == 0 goto label15;

        $i48 = (int) -21;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i48, i29);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addUint8(int)>($i21);

        if $i0 != 30 goto label13;

        $b30 = 1;

        goto label14;

     label13:
        $b30 = 0;

     label14:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addUint8(int)>($b30);

        $i26 = r2.<org.mozilla.javascript.Interpreter: int itsLineNumber>;

        $i50 = (int) 65535;

        $i27 = $i26 & $i50;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addUint16(int)>($i27);

        goto label17;

     label15:
        if $i0 != 37 goto label16;

        $i25 = i4 & 1;

        if $i25 == 0 goto label16;

        $i52 = (int) -55;

        i28 = $i52;

     label16:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>(i28, i29);

     label17:
        if i28 != 30 goto label18;

        $i24 = neg i29;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i24);

        goto label19;

     label18:
        $i54 = (int) -1;

        $i22 = $i54 - i29;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i22);

     label19:
        $r33 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i23 = $r33.<org.mozilla.javascript.InterpreterData: int itsMaxCalleeArgs>;

        if i29 <= $i23 goto label61;

        $r34 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r34.<org.mozilla.javascript.InterpreterData: int itsMaxCalleeArgs> = i29;

        goto label61;

     label20:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $i56 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i56);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        i31 = r2.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        if $i0 != 101 goto label21;

        $b32 = 7;

        goto label22;

     label21:
        $b32 = 6;

     label22:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addGotoOp(int)>($b32);

        $i58 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i58);

        $i60 = (int) -4;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i60);

        $i62 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i62);

        $r10 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        $i5 = i4 & 1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r10, $i5);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void resolveForwardGoto(int)>(i31);

        goto label61;

     label23:
        $r11 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        $r12 = virtualinvoke $r11.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        i33 = r2.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addGotoOp(int)>(7);

        $i64 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i64);

        $i6 = i4 & 1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r11, $i6);

        i34 = r2.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addGotoOp(int)>(5);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void resolveForwardGoto(int)>(i33);

        r2.<org.mozilla.javascript.Interpreter: int itsStackDepth> = i1;

        $i7 = i4 & 1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r12, $i7);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void resolveForwardGoto(int)>(i34);

        goto label61;

     label24:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r31 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        $r32 = virtualinvoke $r31.<org.mozilla.javascript.Node: java.lang.String getString()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>(33, $r32);

        goto label61;

     label25:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r35 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r35, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>($i0);

        $i66 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i66);

        goto label61;

     label26:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        if $i0 != 122 goto label27;

        $i68 = (int) -4;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i68);

        $i70 = (int) -50;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i70);

        goto label61;

     label27:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>($i0);

        goto label61;

     label28:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>($i0);

        goto label61;

     label29:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r28 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        $r29 = virtualinvoke $r28.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $r30 = virtualinvoke $r28.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        if $i0 != 135 goto label30;

        $i72 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i72);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>(33, $r29);

        $i74 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i74);

     label30:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r30, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>(34, $r29);

        $i76 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i76);

        goto label61;

     label31:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r26 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r26, 0);

        $r27 = virtualinvoke $r26.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        if $i0 != 136 goto label32;

        $i78 = (int) -2;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i78);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(2);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(35);

        $i80 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i80);

        $i82 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i82);

     label32:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r27, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(36);

        $i84 = (int) -2;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i84);

        goto label61;

     label33:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r17 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        if $i0 != 138 goto label34;

        $i86 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i86);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(65);

        $i88 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i88);

     label34:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r17, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(66);

        $i90 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i90);

        goto label61;

     label35:
        $r36 = virtualinvoke $r1.<org.mozilla.javascript.Node: java.lang.String getString()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r37 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r37, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>(8, $r36);

        $i92 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i92);

        goto label61;

     label36:
        $r4 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $i94 = (int) -1;

        i35 = $i94;

        $z0 = r2.<org.mozilla.javascript.Interpreter: boolean itsInFunctionFlag>;

        if $z0 == 0 goto label37;

        $r5 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $z1 = $r5.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        if $z1 != 0 goto label37;

        $r6 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        i35 = virtualinvoke $r6.<org.mozilla.javascript.ScriptOrFnNode: int getParamOrVarIndex(java.lang.String)>($r4);

     label37:
        $i96 = (int) -1;

        if i35 != $i96 goto label38;

        $i98 = (int) -14;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>($i98, $r4);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label38:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addVarOp(int,int)>(54, i35);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(32);

        goto label61;

     label39:
        $r25 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.String getString()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>($i0, $r25);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label40:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitIncDec(org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r0, $r1);

        goto label61;

     label41:
        $d0 = virtualinvoke r0.<org.mozilla.javascript.Node: double getDouble()>();

        i36 = (int) $d0;

        $d1 = (double) i36;

        $b16 = $d1 cmpl $d0;

        if $b16 != 0 goto label45;

        if i36 != 0 goto label42;

        $i100 = (int) -51;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i100);

        $d2 = 1.0 / $d0;

        $b20 = $d2 cmpg 0.0;

        $i101 = (int) $b20;

        if $i101 >= 0 goto label46;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>(29);

        goto label46;

     label42:
        if i36 != 1 goto label43;

        $i103 = (int) -52;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i103);

        goto label46;

     label43:
        $s18 = (short) i36;

        $i104 = (int) $s18;

        if $i104 != i36 goto label44;

        $i106 = (int) -27;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i106);

        $i108 = (int) 65535;

        $i19 = i36 & $i108;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addUint16(int)>($i19);

        goto label46;

     label44:
        $i110 = (int) -28;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i110);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addInt(int)>(i36);

        goto label46;

     label45:
        $i17 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getDoubleIndex(double)>($d0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>(39, $i17);

     label46:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label47:
        $r22 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $z3 = $r22.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        if $z3 == 0 goto label48;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label48:
        $r23 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $r24 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i13 = virtualinvoke $r24.<org.mozilla.javascript.ScriptOrFnNode: int getParamOrVarIndex(java.lang.String)>($r23);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addVarOp(int,int)>(54, $i13);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label49:
        $r18 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $z2 = $r18.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        if $z2 == 0 goto label50;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label50:
        $r19 = virtualinvoke $r1.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $r20 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r20, 0);

        $r21 = r2.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i12 = virtualinvoke $r21.<org.mozilla.javascript.ScriptOrFnNode: int getParamOrVarIndex(java.lang.String)>($r19);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addVarOp(int,int)>(55, $i12);

        goto label61;

     label51:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>($i0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label52:
        $i11 = specialinvoke r2.<org.mozilla.javascript.Interpreter: int getLocalBlockRef(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i0, $i11);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label53:
        $i15 = virtualinvoke r0.<org.mozilla.javascript.Node: int getExistingIntProp(int)>(4);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>(47, $i15);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label61;

     label54:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitLiteral(org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r0, $r1);

        goto label61;

     label55:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $r15 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.Object getProp(int)>(17);

        $r16 = (java.lang.String) $r15;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>($i0, $r16);

        goto label61;

     label56:
        $i9 = virtualinvoke r0.<org.mozilla.javascript.Node: int getIntProp(int,int)>(16, 0);

        i37 = 0;

     label57:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>(r39, 0);

        i37 = i37 + 1;

        $r14 = virtualinvoke r39.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        r39 = $r14;

        if $r14 != null goto label57;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i0, $i9);

        $i10 = 1 - i37;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i10);

        goto label61;

     label58:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void updateLineNumber(org.mozilla.javascript.Node)>(r0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        $i112 = (int) -53;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i112);

        $i114 = (int) -1;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i114);

        i38 = r2.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r3, 0);

        $i116 = (int) -54;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addBackwardGoto(int,int)>($i116, i38);

        goto label61;

     label59:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r1, 0);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addToken(int)>($i0);

        goto label61;

     label60:
        $r38 = specialinvoke r2.<org.mozilla.javascript.Interpreter: java.lang.RuntimeException badTree(org.mozilla.javascript.Node)>(r0);

        throw $r38;

     label61:
        $i39 = i1 + 1;

        $i40 = r2.<org.mozilla.javascript.Interpreter: int itsStackDepth>;

        if $i39 == $i40 goto label62;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label62:
        return;
    }

    private void generateCallFunAndThis(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r2;
        org.mozilla.javascript.Node r0, $r3, $r4;
        int $i0, $i2, $i4, $i6, $i8;
        java.lang.String $r1, $r5;

        r2 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Node: int getType()>();

        lookupswitch($i0)
        {
            case 33: goto label2;
            case 35: goto label2;
            case 38: goto label1;
            default: goto label4;
        };

     label1:
        $r1 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $i2 = (int) -15;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>($i2, $r1);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(2);

        goto label5;

     label2:
        $r3 = virtualinvoke r0.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r3, 0);

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        if $i0 != 33 goto label3;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $i4 = (int) -16;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>($i4, $r5);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label5;

     label3:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r4, 0);

        $i6 = (int) -17;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i6);

        goto label5;

     label4:
        specialinvoke r2.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>(r0, 0);

        $i8 = (int) -18;

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i8);

        specialinvoke r2.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

     label5:
        return;
    }

    private void visitIncDec(org.mozilla.javascript.Node, org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r3;
        org.mozilla.javascript.Node r0, r1, $r2, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i10, $i12, $i14;
        org.mozilla.javascript.ScriptOrFnNode $r6;
        java.lang.String $r5, $r7, $r12;
        org.mozilla.javascript.InterpreterData $r4;
        boolean $z0;
        java.lang.RuntimeException $r13;

        r3 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        r1 := @parameter1: org.mozilla.javascript.Node;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Node: int getExistingIntProp(int)>(13);

        $i1 = virtualinvoke r1.<org.mozilla.javascript.Node: int getType()>();

        lookupswitch($i1)
        {
            case 33: goto label4;
            case 35: goto label5;
            case 38: goto label3;
            case 54: goto label1;
            case 65: goto label6;
            default: goto label7;
        };

     label1:
        $r4 = r3.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $z0 = $r4.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        if $z0 == 0 goto label2;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label2:
        $r5 = virtualinvoke r1.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $r6 = r3.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ScriptOrFnNode scriptOrFn>;

        $i2 = virtualinvoke $r6.<org.mozilla.javascript.ScriptOrFnNode: int getParamOrVarIndex(java.lang.String)>($r5);

        $i4 = (int) -7;

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addVarOp(int,int)>($i4, $i2);

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addUint8(int)>($i0);

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label8;

     label3:
        $r7 = virtualinvoke r1.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $i6 = (int) -8;

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>($i6, $r7);

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addUint8(int)>($i0);

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

        goto label8;

     label4:
        $r10 = virtualinvoke r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r10, 0);

        $r11 = virtualinvoke $r10.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        $r12 = virtualinvoke $r11.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $i8 = (int) -9;

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addStringOp(int,java.lang.String)>($i8, $r12);

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addUint8(int)>($i0);

        goto label8;

     label5:
        $r8 = virtualinvoke r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r8, 0);

        $r9 = virtualinvoke $r8.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r9, 0);

        $i10 = (int) -10;

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i10);

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addUint8(int)>($i0);

        $i12 = (int) -1;

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i12);

        goto label8;

     label6:
        $r2 = virtualinvoke r1.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>($r2, 0);

        $i14 = (int) -11;

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i14);

        specialinvoke r3.<org.mozilla.javascript.Interpreter: void addUint8(int)>($i0);

        goto label8;

     label7:
        $r13 = specialinvoke r3.<org.mozilla.javascript.Interpreter: java.lang.RuntimeException badTree(org.mozilla.javascript.Node)>(r0);

        throw $r13;

     label8:
        return;
    }

    private void visitLiteral(org.mozilla.javascript.Node, org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r1;
        java.lang.Object[] r10;
        int[] r12;
        org.mozilla.javascript.Node r0, r9, r11;
        int $i0, $i1, $i2, i3, $i5, $i7, $i9, $i11;
        java.lang.RuntimeException $r2;
        org.mozilla.javascript.ObjArray $r4, $r5, $r7, $r8;
        java.lang.Object $r3, $r6;

        r1 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        r9 := @parameter1: org.mozilla.javascript.Node;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Node: int getType()>();

        r10 = null;

        if $i0 != 63 goto label2;

        i3 = 0;

        r11 = r9;

     label1:
        if r11 == null goto label4;

        i3 = i3 + 1;

        r11 = virtualinvoke r11.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        goto label1;

     label2:
        if $i0 != 64 goto label3;

        $r3 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.Object getProp(int)>(12);

        r10 = (java.lang.Object[]) $r3;

        i3 = lengthof r10;

        goto label4;

     label3:
        $r2 = specialinvoke r1.<org.mozilla.javascript.Interpreter: java.lang.RuntimeException badTree(org.mozilla.javascript.Node)>(r0);

        throw $r2;

     label4:
        $i5 = (int) -29;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i5, i3);

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void stackChange(int)>(1);

     label5:
        if r9 == null goto label6;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void visitExpression(org.mozilla.javascript.Node,int)>(r9, 0);

        $i7 = (int) -30;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i7);

        $i9 = (int) -1;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void stackChange(int)>($i9);

        r9 = virtualinvoke r9.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        goto label5;

     label6:
        if $i0 != 63 goto label8;

        $r6 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.Object getProp(int)>(11);

        r12 = (int[]) $r6;

        if r12 != null goto label7;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void addToken(int)>(63);

        goto label9;

     label7:
        $r7 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjArray itsLiteralIds>;

        $i2 = virtualinvoke $r7.<org.mozilla.javascript.ObjArray: int size()>();

        $r8 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjArray itsLiteralIds>;

        virtualinvoke $r8.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>(r12);

        $i11 = (int) -31;

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>($i11, $i2);

        goto label9;

     label8:
        $r4 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjArray itsLiteralIds>;

        $i1 = virtualinvoke $r4.<org.mozilla.javascript.ObjArray: int size()>();

        $r5 = r1.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjArray itsLiteralIds>;

        virtualinvoke $r5.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>(r10);

        specialinvoke r1.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>(64, $i1);

     label9:
        return;
    }

    private int getLocalBlockRef(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r3;
        org.mozilla.javascript.Node r0, r2;
        int $i0;
        java.lang.Object $r1;

        r3 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.Node: java.lang.Object getProp(int)>(3);

        r2 = (org.mozilla.javascript.Node) $r1;

        $i0 = virtualinvoke r2.<org.mozilla.javascript.Node: int getExistingIntProp(int)>(2);

        return $i0;
    }

    private int getTargetLabel(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r1;
        int[] $r2, $r3, $r4, r5, $r6, $r7, $r8, $r9;
        org.mozilla.javascript.Node r0;
        int $i0, $i1, $i2, $i3, i4, $i5, $i7, $i9;

        r1 := @this: org.mozilla.javascript.Interpreter;

        r0 := @parameter0: org.mozilla.javascript.Node;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Node: int labelId()>();

        $i7 = (int) -1;

        if $i0 == $i7 goto label1;

        return $i0;

     label1:
        i4 = r1.<org.mozilla.javascript.Interpreter: int itsLabelTableTop>;

        $r2 = r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        if $r2 == null goto label2;

        $r8 = r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i3 = lengthof $r8;

        if i4 != $i3 goto label4;

     label2:
        $r3 = r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        if $r3 != null goto label3;

        $r7 = newarray (int)[32];

        r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable> = $r7;

        goto label4;

     label3:
        $r4 = r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i1 = lengthof $r4;

        $i2 = $i1 * 2;

        r5 = newarray (int)[$i2];

        $r6 = r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r5, 0, i4);

        r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable> = r5;

     label4:
        $i5 = i4 + 1;

        r1.<org.mozilla.javascript.Interpreter: int itsLabelTableTop> = $i5;

        $r9 = r1.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i9 = (int) -1;

        $r9[i4] = $i9;

        virtualinvoke r0.<org.mozilla.javascript.Node: void labelId(int)>(i4);

        return i4;
    }

    private void markTargetLabel(org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Interpreter r0;
        int[] $r2, $r3;
        org.mozilla.javascript.Node r1;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.mozilla.javascript.Interpreter;

        r1 := @parameter0: org.mozilla.javascript.Node;

        $i0 = specialinvoke r0.<org.mozilla.javascript.Interpreter: int getTargetLabel(org.mozilla.javascript.Node)>(r1);

        $r2 = r0.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i1 = $r2[$i0];

        $i4 = (int) -1;

        if $i1 == $i4 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r3 = r0.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i2 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $r3[$i0] = $i2;

        return;
    }

    private void addGoto(org.mozilla.javascript.Node, int)
    {
        org.mozilla.javascript.Interpreter r0;
        long $l10, $l11, $l12, $l13;
        long[] $r3, $r4, $r5, r6, $r7, $r8, $r9, $r10;
        int[] $r2;
        org.mozilla.javascript.Node r1;
        int $i0, $i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i15;

        r0 := @this: org.mozilla.javascript.Interpreter;

        r1 := @parameter0: org.mozilla.javascript.Node;

        i3 := @parameter1: int;

        $i0 = specialinvoke r0.<org.mozilla.javascript.Interpreter: int getTargetLabel(org.mozilla.javascript.Node)>(r1);

        $i1 = r0.<org.mozilla.javascript.Interpreter: int itsLabelTableTop>;

        if $i0 < $i1 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r2 = r0.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        $i8 = $r2[$i0];

        $i15 = (int) -1;

        if $i8 == $i15 goto label2;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addBackwardGoto(int,int)>(i3, $i8);

        goto label6;

     label2:
        i2 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addGotoOp(int)>(i3);

        i4 = r0.<org.mozilla.javascript.Interpreter: int itsFixupTableTop>;

        $r3 = r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable>;

        if $r3 == null goto label3;

        $r9 = r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable>;

        $i7 = lengthof $r9;

        if i4 != $i7 goto label5;

     label3:
        $r4 = r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable>;

        if $r4 != null goto label4;

        $r8 = newarray (long)[40];

        r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable> = $r8;

        goto label5;

     label4:
        $r5 = r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable>;

        $i5 = lengthof $r5;

        $i6 = $i5 * 2;

        r6 = newarray (long)[$i6];

        $r7 = r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r6, 0, i4);

        r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable> = r6;

     label5:
        $i9 = i4 + 1;

        r0.<org.mozilla.javascript.Interpreter: int itsFixupTableTop> = $i9;

        $r10 = r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable>;

        $l10 = (long) $i0;

        $l11 = $l10 << 32;

        $l12 = (long) i2;

        $l13 = $l11 | $l12;

        $r10[i4] = $l13;

     label6:
        return;
    }

    private void fixLabelGotos()
    {
        org.mozilla.javascript.Interpreter r0;
        long l1, $l2;
        java.lang.RuntimeException $r3;
        long[] $r1;
        int[] $r2;
        int $i0, i3, i4, i5, i6, $i8;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i6 = 0;

     label1:
        $i0 = r0.<org.mozilla.javascript.Interpreter: int itsFixupTableTop>;

        if i6 >= $i0 goto label3;

        $r1 = r0.<org.mozilla.javascript.Interpreter: long[] itsFixupTable>;

        l1 = $r1[i6];

        $l2 = l1 >> 32;

        i3 = (int) $l2;

        i4 = (int) l1;

        $r2 = r0.<org.mozilla.javascript.Interpreter: int[] itsLabelTable>;

        i5 = $r2[i3];

        $i8 = (int) -1;

        if i5 != $i8 goto label2;

        $r3 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r3;

     label2:
        specialinvoke r0.<org.mozilla.javascript.Interpreter: void resolveGoto(int,int)>(i4, i5);

        i6 = i6 + 1;

        goto label1;

     label3:
        r0.<org.mozilla.javascript.Interpreter: int itsFixupTableTop> = 0;

        return;
    }

    private void addBackwardGoto(int, int)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0, i1, i2;
        java.lang.RuntimeException $r1;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        i0 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        if i0 > i1 goto label1;

        $r1 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r1;

     label1:
        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addGotoOp(int)>(i2);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void resolveGoto(int,int)>(i0, i1);

        return;
    }

    private void resolveForwardGoto(int)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r1;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        $i2 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $i1 = i0 + 3;

        if $i2 >= $i1 goto label1;

        $r1 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r1;

     label1:
        $i3 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void resolveGoto(int,int)>(i0, $i3);

        return;
    }

    private void resolveGoto(int, int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte[] $r9;
        short $s2;
        byte $b6, $b8;
        int i0, i1, $i3, i4, $i5, $i7, $i9;
        org.mozilla.javascript.InterpreterData $r1, $r3, $r6, $r8;
        java.lang.RuntimeException $r7;
        org.mozilla.javascript.UintMap $r2, $r4, $r10;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i4 = i0 - i1;

        if 0 > i4 goto label1;

        if i4 > 2 goto label1;

        $r7 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r7;

     label1:
        $i3 = i1 + 1;

        $s2 = (short) i4;

        $i9 = (int) $s2;

        if i4 == $i9 goto label3;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r2 = $r1.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.UintMap longJumps>;

        if $r2 != null goto label2;

        $r6 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r10 = new org.mozilla.javascript.UintMap;

        specialinvoke $r10.<org.mozilla.javascript.UintMap: void <init>()>();

        $r6.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.UintMap longJumps> = $r10;

     label2:
        $r3 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r4 = $r3.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.UintMap longJumps>;

        virtualinvoke $r4.<org.mozilla.javascript.UintMap: void put(int,int)>($i3, i0);

        i4 = 0;

     label3:
        $r8 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r9 = $r8.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        $i5 = i4 >> 8;

        $b6 = (byte) $i5;

        $r9[$i3] = $b6;

        $i7 = $i3 + 1;

        $b8 = (byte) i4;

        $r9[$i7] = $b8;

        return;
    }

    private void addToken(int)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0;
        java.lang.RuntimeException $r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validTokenCode(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r1;

     label1:
        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addUint8(int)>(i0);

        return;
    }

    private void addIcode(int)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0, $i1;
        java.lang.RuntimeException $r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validIcode(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r1;

     label1:
        $i1 = i0 & 255;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addUint8(int)>($i1);

        return;
    }

    private void addUint8(int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte[] r3;
        java.lang.RuntimeException $r2;
        byte $b4;
        int i0, $i1, i2, $i3, $i5, $i7;
        org.mozilla.javascript.InterpreterData $r1;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        $i7 = (int) -256;

        $i1 = i0 & $i7;

        if $i1 == 0 goto label1;

        $r2 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r2;

     label1:
        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        r3 = $r1.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        i2 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $i3 = lengthof r3;

        if i2 != $i3 goto label2;

        r3 = specialinvoke r0.<org.mozilla.javascript.Interpreter: byte[] increaseICodeCapasity(int)>(1);

     label2:
        $b4 = (byte) i0;

        r3[i2] = $b4;

        $i5 = i2 + 1;

        r0.<org.mozilla.javascript.Interpreter: int itsICodeTop> = $i5;

        return;
    }

    private void addUint16(int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte[] r3;
        java.lang.RuntimeException $r2;
        byte $b6, $b7;
        int i0, $i1, i2, $i3, $i4, $i5, $i8, $i9;
        org.mozilla.javascript.InterpreterData $r1;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        $i1 = i0 & -65536;

        if $i1 == 0 goto label1;

        $r2 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r2;

     label1:
        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        r3 = $r1.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        i2 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $i4 = i2 + 2;

        $i3 = lengthof r3;

        if $i4 <= $i3 goto label2;

        r3 = specialinvoke r0.<org.mozilla.javascript.Interpreter: byte[] increaseICodeCapasity(int)>(2);

     label2:
        $i5 = i0 >>> 8;

        $b6 = (byte) $i5;

        r3[i2] = $b6;

        $i8 = i2 + 1;

        $b7 = (byte) i0;

        r3[$i8] = $b7;

        $i9 = i2 + 2;

        r0.<org.mozilla.javascript.Interpreter: int itsICodeTop> = $i9;

        return;
    }

    private void addInt(int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte[] r2;
        byte $b5, $b7, $b10, $b12;
        int i0, $i1, $i2, i3, $i4, $i6, $i8, $i9, $i11, $i13, $i14;
        org.mozilla.javascript.InterpreterData $r1;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i3 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        r2 = $r1.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        i0 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $i2 = i0 + 4;

        $i1 = lengthof r2;

        if $i2 <= $i1 goto label1;

        r2 = specialinvoke r0.<org.mozilla.javascript.Interpreter: byte[] increaseICodeCapasity(int)>(4);

     label1:
        $i4 = i3 >>> 24;

        $b5 = (byte) $i4;

        r2[i0] = $b5;

        $i8 = i0 + 1;

        $i6 = i3 >>> 16;

        $b7 = (byte) $i6;

        r2[$i8] = $b7;

        $i11 = i0 + 2;

        $i9 = i3 >>> 8;

        $b10 = (byte) $i9;

        r2[$i11] = $b10;

        $i13 = i0 + 3;

        $b12 = (byte) i3;

        r2[$i13] = $b12;

        $i14 = i0 + 4;

        r0.<org.mozilla.javascript.Interpreter: int itsICodeTop> = $i14;

        return;
    }

    private int getDoubleIndex(double)
    {
        org.mozilla.javascript.Interpreter r0;
        double[] $r2, r3, $r5, $r7, $r10;
        int i0, $i1, $i2, $i3;
        org.mozilla.javascript.InterpreterData $r1, $r4, $r6, $r8, $r9;
        double d0;

        r0 := @this: org.mozilla.javascript.Interpreter;

        d0 := @parameter0: double;

        i0 = r0.<org.mozilla.javascript.Interpreter: int itsDoubleTableTop>;

        if i0 != 0 goto label1;

        $r8 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r7 = newarray (double)[64];

        $r8.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable> = $r7;

        goto label2;

     label1:
        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r2 = $r1.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable>;

        $i1 = lengthof $r2;

        if $i1 != i0 goto label2;

        $i2 = i0 * 2;

        r3 = newarray (double)[$i2];

        $r4 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r5 = $r4.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, i0);

        $r6 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r6.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable> = r3;

     label2:
        $r9 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r10 = $r9.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable>;

        $r10[i0] = d0;

        $i3 = i0 + 1;

        r0.<org.mozilla.javascript.Interpreter: int itsDoubleTableTop> = $i3;

        return i0;
    }

    private void addGotoOp(int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte[] r2;
        byte $b4;
        int i0, $i1, $i2, i3, $i5, $i6;
        org.mozilla.javascript.InterpreterData $r1;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i3 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        r2 = $r1.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        i0 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $i2 = i0 + 3;

        $i1 = lengthof r2;

        if $i2 <= $i1 goto label1;

        r2 = specialinvoke r0.<org.mozilla.javascript.Interpreter: byte[] increaseICodeCapasity(int)>(3);

     label1:
        $b4 = (byte) i3;

        r2[i0] = $b4;

        $i5 = i0 + 1;

        $i6 = $i5 + 2;

        r0.<org.mozilla.javascript.Interpreter: int itsICodeTop> = $i6;

        return;
    }

    private void addVarOp(int, int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte $b2;
        int i0, i1, $i3;
        java.lang.RuntimeException $r1;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        lookupswitch(i0)
        {
            case -7: goto label4;
            case 54: goto label1;
            case 55: goto label1;
            default: goto label5;
        };

     label1:
        if i1 >= 128 goto label4;

        if i0 != 54 goto label2;

        $b2 = -48;

        goto label3;

     label2:
        $b2 = -49;

     label3:
        $i3 = (int) $b2;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i3);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addUint8(int)>(i1);

        return;

     label4:
        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIndexOp(int,int)>(i0, i1);

        return;

     label5:
        $r1 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r1;
    }

    private void addStringOp(int, java.lang.String)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addStringPrefix(java.lang.String)>(r1);

        $z0 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validIcode(int)>(i0);

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>(i0);

        goto label2;

     label1:
        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addToken(int)>(i0);

     label2:
        return;
    }

    private void addIndexOp(int, int)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIndexPrefix(int)>(i0);

        $z0 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validIcode(int)>(i1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>(i1);

        goto label2;

     label1:
        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addToken(int)>(i1);

     label2:
        return;
    }

    private void addStringPrefix(java.lang.String)
    {
        org.mozilla.javascript.Interpreter r0;
        int $i0, $i1, $i2, i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17;
        java.lang.String r1;
        org.mozilla.javascript.ObjToIntMap $r2, $r3, $r4;

        r0 := @this: org.mozilla.javascript.Interpreter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjToIntMap itsStrings>;

        $i5 = (int) -1;

        $i0 = virtualinvoke $r2.<org.mozilla.javascript.ObjToIntMap: int get(java.lang.Object,int)>(r1, $i5);

        i3 = $i0;

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        $r3 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjToIntMap itsStrings>;

        $i2 = virtualinvoke $r3.<org.mozilla.javascript.ObjToIntMap: int size()>();

        i3 = $i2;

        $r4 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.ObjToIntMap itsStrings>;

        virtualinvoke $r4.<org.mozilla.javascript.ObjToIntMap: void put(java.lang.Object,int)>(r1, $i2);

     label1:
        if i3 >= 4 goto label2;

        $i9 = (int) -41;

        $i1 = $i9 - i3;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i1);

        goto label5;

     label2:
        if i3 > 255 goto label3;

        $i11 = (int) -45;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i11);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addUint8(int)>(i3);

        goto label5;

     label3:
        $i13 = (int) 65535;

        if i3 > $i13 goto label4;

        $i15 = (int) -46;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i15);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addUint16(int)>(i3);

        goto label5;

     label4:
        $i17 = (int) -47;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i17);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addInt(int)>(i3);

     label5:
        return;
    }

    private void addIndexPrefix(int)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0, $i1, $i3, $i5, $i7, $i9, $i11;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        if i0 >= 6 goto label2;

        $i3 = (int) -32;

        $i1 = $i3 - i0;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i1);

        goto label5;

     label2:
        if i0 > 255 goto label3;

        $i5 = (int) -38;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i5);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addUint8(int)>(i0);

        goto label5;

     label3:
        $i7 = (int) 65535;

        if i0 > $i7 goto label4;

        $i9 = (int) -39;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i9);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addUint16(int)>(i0);

        goto label5;

     label4:
        $i11 = (int) -40;

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addIcode(int)>($i11);

        specialinvoke r0.<org.mozilla.javascript.Interpreter: void addInt(int)>(i0);

     label5:
        return;
    }

    private void addExceptionHandler(int, int, int, boolean, int, int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte $b16;
        int[] $r2, $r4, $r7, r8;
        int i0, $i1, i2, i3, i4, $i5, i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.mozilla.javascript.InterpreterData $r1, $r3, $r5, $r6;
        boolean z0;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        z0 := @parameter3: boolean;

        i6 := @parameter4: int;

        i8 := @parameter5: int;

        i0 = r0.<org.mozilla.javascript.Interpreter: int itsExceptionTableTop>;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        r8 = $r1.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable>;

        if r8 != null goto label2;

        if i0 == 0 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r7 = newarray (int)[12];

        r8 = $r7;

        $r6 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r6.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable> = $r7;

        goto label3;

     label2:
        $i1 = lengthof r8;

        if $i1 != i0 goto label3;

        $i11 = lengthof r8;

        $i12 = $i11 * 2;

        r8 = newarray (int)[$i12];

        $r3 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r4 = $r3.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r8, 0, i0);

        $r5 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r5.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable> = r8;

     label3:
        $i13 = i0 + 0;

        r8[$i13] = i2;

        $i14 = i0 + 1;

        r8[$i14] = i3;

        $i15 = i0 + 2;

        r8[$i15] = i4;

        $r2 = r8;

        $i5 = i0 + 3;

        if z0 == 0 goto label4;

        $b16 = 1;

        goto label5;

     label4:
        $b16 = 0;

     label5:
        $r2[$i5] = $b16;

        $i7 = i0 + 4;

        r8[$i7] = i6;

        $i9 = i0 + 5;

        r8[$i9] = i8;

        $i10 = i0 + 6;

        r0.<org.mozilla.javascript.Interpreter: int itsExceptionTableTop> = $i10;

        return;
    }

    private byte[] increaseICodeCapasity(int)
    {
        org.mozilla.javascript.Interpreter r0;
        byte[] $r2, $r4, $r6;
        java.lang.RuntimeException $r7;
        int i0, i1, $i2, $i3, i4, i5;
        org.mozilla.javascript.InterpreterData $r1, $r3, $r5;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i1 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r2 = $r1.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        i4 = lengthof $r2;

        i0 = r0.<org.mozilla.javascript.Interpreter: int itsICodeTop>;

        $i2 = i0 + i1;

        if $i2 > i4 goto label1;

        $r7 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r7;

     label1:
        i5 = i4 * 2;

        $i3 = i0 + i1;

        if $i3 <= i5 goto label2;

        i5 = i0 + i1;

     label2:
        $r6 = newarray (byte)[i5];

        $r3 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r4 = $r3.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r6, 0, i0);

        $r5 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r5.<org.mozilla.javascript.InterpreterData: byte[] itsICode> = $r6;

        return $r6;
    }

    private void stackChange(int)
    {
        org.mozilla.javascript.Interpreter r0;
        int i0, $i1, i2, $i3, $i4, $i5;
        org.mozilla.javascript.InterpreterData $r1, $r2;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $i4 = r0.<org.mozilla.javascript.Interpreter: int itsStackDepth>;

        $i5 = $i4 + i0;

        r0.<org.mozilla.javascript.Interpreter: int itsStackDepth> = $i5;

        goto label3;

     label1:
        $i1 = r0.<org.mozilla.javascript.Interpreter: int itsStackDepth>;

        i2 = $i1 + i0;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i3 = $r1.<org.mozilla.javascript.InterpreterData: int itsMaxStack>;

        if i2 <= $i3 goto label2;

        $r2 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $r2.<org.mozilla.javascript.InterpreterData: int itsMaxStack> = i2;

     label2:
        r0.<org.mozilla.javascript.Interpreter: int itsStackDepth> = i2;

     label3:
        return;
    }

    private int allocLocal()
    {
        org.mozilla.javascript.Interpreter r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.mozilla.javascript.InterpreterData $r1, $r2;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i0 = r0.<org.mozilla.javascript.Interpreter: int itsLocalTop>;

        $i1 = r0.<org.mozilla.javascript.Interpreter: int itsLocalTop>;

        $i2 = $i1 + 1;

        r0.<org.mozilla.javascript.Interpreter: int itsLocalTop> = $i2;

        $i4 = r0.<org.mozilla.javascript.Interpreter: int itsLocalTop>;

        $r1 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i3 = $r1.<org.mozilla.javascript.InterpreterData: int itsMaxLocals>;

        if $i4 <= $i3 goto label1;

        $r2 = r0.<org.mozilla.javascript.Interpreter: org.mozilla.javascript.InterpreterData itsData>;

        $i5 = r0.<org.mozilla.javascript.Interpreter: int itsLocalTop>;

        $r2.<org.mozilla.javascript.InterpreterData: int itsMaxLocals> = $i5;

     label1:
        return i0;
    }

    private void releaseLocal(int)
    {
        org.mozilla.javascript.Interpreter r0;
        int $i0, $i1, i2, $i3;

        r0 := @this: org.mozilla.javascript.Interpreter;

        i2 := @parameter0: int;

        $i0 = r0.<org.mozilla.javascript.Interpreter: int itsLocalTop>;

        $i1 = $i0 - 1;

        r0.<org.mozilla.javascript.Interpreter: int itsLocalTop> = $i1;

        $i3 = r0.<org.mozilla.javascript.Interpreter: int itsLocalTop>;

        if i2 == $i3 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        return;
    }

    private static int getShort(byte[], int)
    {
        byte[] r0;
        short $s4, $s8;
        byte $b1, $b3;
        int i0, $i2, $i5, $i6, $i7, $i9;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $i7 = (int) $b1;

        $i5 = $i7 << 8;

        $i2 = i0 + 1;

        $b3 = r0[$i2];

        $s8 = (short) $b3;

        $s4 = $s8 & 255;

        $i9 = (int) $s4;

        $i6 = $i5 | $i9;

        return $i6;
    }

    private static int getIndex(byte[], int)
    {
        byte[] r0;
        short $s2, $s5, $s8, $s10;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i9, $i11;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s8 = (short) $b1;

        $s2 = $s8 & 255;

        $i9 = (int) $s2;

        $i6 = $i9 << 8;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s10 = (short) $b4;

        $s5 = $s10 & 255;

        $i11 = (int) $s5;

        $i7 = $i6 | $i11;

        return $i7;
    }

    private static int getInt(byte[], int)
    {
        byte[] r0;
        short $s4, $s9, $s14, $s18, $s20, $s22;
        byte $b1, $b3, $b8, $b13;
        int i0, $i2, $i5, $i6, $i7, $i10, $i11, $i12, $i15, $i16, $i17, $i19, $i21, $i23;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $i17 = (int) $b1;

        $i6 = $i17 << 24;

        $i2 = i0 + 1;

        $b3 = r0[$i2];

        $s18 = (short) $b3;

        $s4 = $s18 & 255;

        $i19 = (int) $s4;

        $i5 = $i19 << 16;

        $i11 = $i6 | $i5;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        $s20 = (short) $b8;

        $s9 = $s20 & 255;

        $i21 = (int) $s9;

        $i10 = $i21 << 8;

        $i15 = $i11 | $i10;

        $i12 = i0 + 3;

        $b13 = r0[$i12];

        $s22 = (short) $b13;

        $s14 = $s22 & 255;

        $i23 = (int) $s14;

        $i16 = $i15 | $i23;

        return $i16;
    }

    private static int getExceptionHandler(org.mozilla.javascript.Interpreter$CallFrame, boolean)
    {
        int[] r2;
        int $i0, i1, $i2, $i3, i4, $i5, i6, $i7, $i8, i9, i10, i11, i12, $i14, $i16;
        org.mozilla.javascript.InterpreterData $r1;
        boolean z0;
        org.mozilla.javascript.Interpreter$CallFrame r0;

        r0 := @parameter0: org.mozilla.javascript.Interpreter$CallFrame;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        r2 = $r1.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable>;

        if r2 != null goto label1;

        $i14 = (int) -1;

        return $i14;

     label1:
        $i0 = r0.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        i1 = $i0 - 1;

        $i16 = (int) -1;

        i9 = $i16;

        i10 = 0;

        i11 = 0;

        i12 = 0;

     label2:
        $i2 = lengthof r2;

        if i12 == $i2 goto label9;

        $i3 = i12 + 0;

        i4 = r2[$i3];

        $i5 = i12 + 1;

        i6 = r2[$i5];

        if i4 > i1 goto label8;

        if i1 < i6 goto label3;

        goto label8;

     label3:
        if z0 == 0 goto label4;

        $i7 = i12 + 3;

        $i8 = r2[$i7];

        if $i8 == 1 goto label4;

        goto label8;

     label4:
        if i9 < 0 goto label7;

        if i11 >= i6 goto label5;

        goto label8;

     label5:
        if i10 <= i4 goto label6;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label6:
        if i11 != i6 goto label7;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label7:
        i9 = i12;

        i10 = i4;

        i11 = i6;

     label8:
        i12 = i12 + 6;

        goto label2;

     label9:
        return i9;
    }

    private static void dumpICode(org.mozilla.javascript.InterpreterData)
    {
        org.mozilla.javascript.InterpreterData r0;

        r0 := @parameter0: org.mozilla.javascript.InterpreterData;

        return;
    }

    private static int bytecodeSpan(int)
    {
        int i0;
        java.lang.RuntimeException $r0;
        boolean $z0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -54: goto label02;
            case -53: goto label16;
            case -52: goto label16;
            case -51: goto label16;
            case -50: goto label16;
            case -49: goto label14;
            case -48: goto label14;
            case -47: goto label13;
            case -46: goto label12;
            case -45: goto label11;
            case -44: goto label16;
            case -43: goto label16;
            case -42: goto label16;
            case -41: goto label16;
            case -40: goto label10;
            case -39: goto label09;
            case -38: goto label08;
            case -37: goto label16;
            case -36: goto label16;
            case -35: goto label16;
            case -34: goto label16;
            case -33: goto label16;
            case -32: goto label16;
            case -31: goto label16;
            case -30: goto label16;
            case -29: goto label16;
            case -28: goto label07;
            case -27: goto label06;
            case -26: goto label15;
            case -25: goto label16;
            case -24: goto label16;
            case -23: goto label02;
            case -22: goto label16;
            case -21: goto label03;
            case -20: goto label16;
            case -19: goto label16;
            case -18: goto label16;
            case -17: goto label16;
            case -16: goto label16;
            case -15: goto label16;
            case -14: goto label16;
            case -13: goto label16;
            case -12: goto label16;
            case -11: goto label05;
            case -10: goto label05;
            case -9: goto label05;
            case -8: goto label05;
            case -7: goto label05;
            case -6: goto label02;
            case -5: goto label16;
            case -4: goto label16;
            case -3: goto label16;
            case -2: goto label16;
            case -1: goto label16;
            case 0: goto label16;
            case 1: goto label16;
            case 2: goto label16;
            case 3: goto label16;
            case 4: goto label16;
            case 5: goto label02;
            case 6: goto label02;
            case 7: goto label02;
            case 8: goto label16;
            case 9: goto label16;
            case 10: goto label16;
            case 11: goto label16;
            case 12: goto label16;
            case 13: goto label16;
            case 14: goto label16;
            case 15: goto label16;
            case 16: goto label16;
            case 17: goto label16;
            case 18: goto label16;
            case 19: goto label16;
            case 20: goto label16;
            case 21: goto label16;
            case 22: goto label16;
            case 23: goto label16;
            case 24: goto label16;
            case 25: goto label16;
            case 26: goto label16;
            case 27: goto label16;
            case 28: goto label16;
            case 29: goto label16;
            case 30: goto label16;
            case 31: goto label16;
            case 32: goto label16;
            case 33: goto label16;
            case 34: goto label16;
            case 35: goto label16;
            case 36: goto label16;
            case 37: goto label16;
            case 38: goto label16;
            case 39: goto label16;
            case 40: goto label16;
            case 41: goto label16;
            case 42: goto label16;
            case 43: goto label16;
            case 44: goto label16;
            case 45: goto label16;
            case 46: goto label16;
            case 47: goto label16;
            case 48: goto label16;
            case 49: goto label01;
            case 50: goto label16;
            case 51: goto label16;
            case 52: goto label16;
            case 53: goto label16;
            case 54: goto label16;
            case 55: goto label16;
            case 56: goto label04;
            default: goto label16;
        };

     label01:
        return 3;

     label02:
        return 3;

     label03:
        return 5;

     label04:
        return 2;

     label05:
        return 2;

     label06:
        return 3;

     label07:
        return 5;

     label08:
        return 2;

     label09:
        return 3;

     label10:
        return 5;

     label11:
        return 2;

     label12:
        return 3;

     label13:
        return 5;

     label14:
        return 2;

     label15:
        return 3;

     label16:
        $z0 = staticinvoke <org.mozilla.javascript.Interpreter: boolean validBytecode(int)>(i0);

        if $z0 != 0 goto label17;

        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r0;

     label17:
        return 1;
    }

    static int[] getLineNumbers(org.mozilla.javascript.InterpreterData)
    {
        byte[] r2;
        org.mozilla.javascript.UintMap $r4;
        byte b1;
        int[] $r3;
        int i0, $i2, $i3, $i4, i5, $i6, $i7, $i9;
        org.mozilla.javascript.InterpreterData r1;

        r1 := @parameter0: org.mozilla.javascript.InterpreterData;

        $r4 = new org.mozilla.javascript.UintMap;

        specialinvoke $r4.<org.mozilla.javascript.UintMap: void <init>()>();

        r2 = r1.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        i0 = lengthof r2;

        i5 = 0;

     label1:
        if i5 == i0 goto label4;

        b1 = r2[i5];

        $i6 = (int) b1;

        $i2 = staticinvoke <org.mozilla.javascript.Interpreter: int bytecodeSpan(int)>($i6);

        $i7 = (int) b1;

        $i9 = (int) -26;

        if $i7 != $i9 goto label3;

        if $i2 == 3 goto label2;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label2:
        $i3 = i5 + 1;

        $i4 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>(r2, $i3);

        virtualinvoke $r4.<org.mozilla.javascript.UintMap: void put(int,int)>($i4, 0);

     label3:
        i5 = i5 + $i2;

        goto label1;

     label4:
        $r3 = virtualinvoke $r4.<org.mozilla.javascript.UintMap: int[] getKeys()>();

        return $r3;
    }

    static void captureInterpreterStackInfo(org.mozilla.javascript.RhinoException)
    {
        org.mozilla.javascript.RhinoException r1;
        int[] r15;
        org.mozilla.javascript.ObjArray $r3, $r5, $r6, $r7, $r10;
        org.mozilla.javascript.Interpreter$CallFrame[] $r11, r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, i9, i10, $i11, i12, i13, $i15, $i17, $i19;
        org.mozilla.javascript.Interpreter$CallFrame $r4, $r14, r16;
        org.mozilla.javascript.Context $r0;
        java.lang.Object $r2, $r8, $r9, $r13;

        r1 := @parameter0: org.mozilla.javascript.RhinoException;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

        if $r0 == null goto label01;

        $r2 = $r0.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame>;

        if $r2 != null goto label02;

     label01:
        r1.<org.mozilla.javascript.RhinoException: java.lang.Object interpreterStackInfo> = null;

        r1.<org.mozilla.javascript.RhinoException: int[] interpreterLineData> = null;

        return;

     label02:
        $r3 = $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        if $r3 == null goto label03;

        $r5 = $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        $i3 = virtualinvoke $r5.<org.mozilla.javascript.ObjArray: int size()>();

        if $i3 != 0 goto label04;

     label03:
        r12 = newarray (org.mozilla.javascript.Interpreter$CallFrame)[1];

        goto label06;

     label04:
        $r6 = $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        $i4 = virtualinvoke $r6.<org.mozilla.javascript.ObjArray: int size()>();

        i6 = $i4;

        $r7 = $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.ObjArray: java.lang.Object peek()>();

        $r9 = $r0.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame>;

        if $r8 != $r9 goto label05;

        $i15 = (int) -1;

        i6 = $i4 + $i15;

     label05:
        $i5 = i6 + 1;

        $r11 = newarray (org.mozilla.javascript.Interpreter$CallFrame)[$i5];

        r12 = $r11;

        $r10 = $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        virtualinvoke $r10.<org.mozilla.javascript.ObjArray: void toArray(java.lang.Object[])>($r11);

     label06:
        $i7 = lengthof r12;

        $i8 = $i7 - 1;

        $r13 = $r0.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame>;

        $r14 = (org.mozilla.javascript.Interpreter$CallFrame) $r13;

        r12[$i8] = $r14;

        i9 = 0;

        i10 = 0;

     label07:
        $i11 = lengthof r12;

        if i10 == $i11 goto label08;

        $r4 = r12[i10];

        $i1 = $r4.<org.mozilla.javascript.Interpreter$CallFrame: int frameIndex>;

        $i2 = 1 + $i1;

        i9 = i9 + $i2;

        i10 = i10 + 1;

        goto label07;

     label08:
        r15 = newarray (int)[i9];

        i12 = i9;

        i13 = lengthof r12;

     label09:
        if i13 == 0 goto label11;

        $i17 = (int) -1;

        i13 = i13 + $i17;

        r16 = r12[i13];

     label10:
        if r16 == null goto label09;

        $i19 = (int) -1;

        i12 = i12 + $i19;

        $i0 = r16.<org.mozilla.javascript.Interpreter$CallFrame: int pcSourceLineStart>;

        r15[i12] = $i0;

        r16 = r16.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        goto label10;

     label11:
        if i12 == 0 goto label12;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label12:
        r1.<org.mozilla.javascript.RhinoException: java.lang.Object interpreterStackInfo> = r12;

        r1.<org.mozilla.javascript.RhinoException: int[] interpreterLineData> = r15;

        return;
    }

    static java.lang.String getSourcePositionFromStack(org.mozilla.javascript.Context, int[])
    {
        org.mozilla.javascript.Interpreter$CallFrame r2;
        byte[] $r6;
        org.mozilla.javascript.Context r0;
        int[] r4;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.lang.String $r5;
        org.mozilla.javascript.InterpreterData r3;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: int[];

        $r1 = r0.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame>;

        r2 = (org.mozilla.javascript.Interpreter$CallFrame) $r1;

        r3 = r2.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $i0 = r2.<org.mozilla.javascript.Interpreter$CallFrame: int pcSourceLineStart>;

        if $i0 < 0 goto label1;

        $r6 = r3.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        $i1 = r2.<org.mozilla.javascript.Interpreter$CallFrame: int pcSourceLineStart>;

        $i2 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>($r6, $i1);

        r4[0] = $i2;

        goto label2;

     label1:
        r4[0] = 0;

     label2:
        $r5 = r3.<org.mozilla.javascript.InterpreterData: java.lang.String itsSourceFile>;

        return $r5;
    }

    static java.lang.String getPatchedStack(org.mozilla.javascript.RhinoException, java.lang.String)
    {
        byte[] $r11;
        org.mozilla.javascript.RhinoException r4;
        int[] r7;
        org.mozilla.javascript.Interpreter$CallFrame[] r6;
        java.lang.StringBuffer $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10, i11, $i12, $i14, $i15, $i16, $i18;
        java.lang.String r0, r2, $r3, $r8, $r9, $r10, $r12, $r13, $r15, $r17;
        org.mozilla.javascript.InterpreterData $r14;
        org.mozilla.javascript.Interpreter$CallFrame r16;
        char $c7;
        java.lang.Object $r5;

        r4 := @parameter0: org.mozilla.javascript.RhinoException;

        r2 := @parameter1: java.lang.String;

        r0 = "org.mozilla.javascript.Interpreter.interpretLoop";

        $r18 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = $i0 + 1000;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>(int)>($i1);

        $r3 = staticinvoke <org.mozilla.javascript.SecurityUtilities: java.lang.String getSystemProperty(java.lang.String)>("line.separator");

        $r5 = r4.<org.mozilla.javascript.RhinoException: java.lang.Object interpreterStackInfo>;

        r6 = (org.mozilla.javascript.Interpreter$CallFrame[]) $r5;

        r7 = r4.<org.mozilla.javascript.RhinoException: int[] interpreterLineData>;

        i8 = lengthof r6;

        i9 = lengthof r7;

        i10 = 0;

     label01:
        if i8 == 0 goto label10;

        $i14 = (int) -1;

        i8 = i8 + $i14;

        $i2 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>("org.mozilla.javascript.Interpreter.interpretLoop", i10);

        if $i2 >= 0 goto label02;

        goto label10;

     label02:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        i11 = $i2 + $i3;

     label03:
        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        if i11 == $i4 goto label05;

        $c7 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i11);

        $i15 = (int) $c7;

        if $i15 == 10 goto label05;

        $i16 = (int) $c7;

        if $i16 != 13 goto label04;

        goto label05;

     label04:
        i11 = i11 + 1;

        goto label03;

     label05:
        $r15 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i10, i11);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        i10 = i11;

        r16 = r6[i8];

     label06:
        if r16 == null goto label01;

        if i9 != 0 goto label07;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label07:
        $i18 = (int) -1;

        i9 = i9 + $i18;

        $r14 = r16.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tat script");

        $r10 = $r14.<org.mozilla.javascript.InterpreterData: java.lang.String itsName>;

        if $r10 == null goto label08;

        $r12 = $r14.<org.mozilla.javascript.InterpreterData: java.lang.String itsName>;

        $i6 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i6 == 0 goto label08;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r13 = $r14.<org.mozilla.javascript.InterpreterData: java.lang.String itsName>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label08:
        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r17 = $r14.<org.mozilla.javascript.InterpreterData: java.lang.String itsSourceFile>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $i12 = r7[i9];

        if $i12 < 0 goto label09;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r11 = $r14.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        $i5 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>($r11, $i12);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

     label09:
        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        r16 = r16.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        goto label06;

     label10:
        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i10);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    static java.lang.String getEncodedSource(org.mozilla.javascript.InterpreterData)
    {
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3;
        org.mozilla.javascript.InterpreterData r0;

        r0 := @parameter0: org.mozilla.javascript.InterpreterData;

        $r1 = r0.<org.mozilla.javascript.InterpreterData: java.lang.String encodedSource>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.mozilla.javascript.InterpreterData: java.lang.String encodedSource>;

        $i1 = r0.<org.mozilla.javascript.InterpreterData: int encodedSourceStart>;

        $i0 = r0.<org.mozilla.javascript.InterpreterData: int encodedSourceEnd>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        return $r3;
    }

    private static void initFunction(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.InterpretedFunction, int)
    {
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable r1;
        int i0, $i1;
        org.mozilla.javascript.InterpreterData $r4, $r5;
        org.mozilla.javascript.InterpretedFunction r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: org.mozilla.javascript.InterpretedFunction;

        i0 := @parameter3: int;

        $r3 = staticinvoke <org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpretedFunction createFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpretedFunction,int)>(r0, r1, r2, i0);

        $r4 = $r3.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpreterData idata>;

        $i1 = $r4.<org.mozilla.javascript.InterpreterData: int itsFunctionType>;

        $r5 = r2.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpreterData idata>;

        $z0 = $r5.<org.mozilla.javascript.InterpreterData: boolean evalScriptFlag>;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void initFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.NativeFunction,int,boolean)>(r0, r1, $r3, $i1, $z0);

        return;
    }

    static java.lang.Object interpret(org.mozilla.javascript.InterpretedFunction, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Throwable $r13;
        java.lang.Object[] r7;
        int $i0;
        boolean $z0;
        org.mozilla.javascript.Interpreter$CallFrame $r4;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.SecurityController $r11;
        org.mozilla.javascript.Scriptable r5, r6;
        java.lang.Object $r2, $r3, $r8, $r9, $r10, $r12, r14;
        org.mozilla.javascript.InterpretedFunction r1;

        r1 := @parameter0: org.mozilla.javascript.InterpretedFunction;

        r0 := @parameter1: org.mozilla.javascript.Context;

        r5 := @parameter2: org.mozilla.javascript.Scriptable;

        r6 := @parameter3: org.mozilla.javascript.Scriptable;

        r7 := @parameter4: java.lang.Object[];

        $z0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean hasTopCall(org.mozilla.javascript.Context)>(r0);

        if $z0 != 0 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r3 = r0.<org.mozilla.javascript.Context: java.lang.Object interpreterSecurityDomain>;

        $r2 = r1.<org.mozilla.javascript.InterpretedFunction: java.lang.Object securityDomain>;

        if $r3 == $r2 goto label6;

        r14 = r0.<org.mozilla.javascript.Context: java.lang.Object interpreterSecurityDomain>;

        $r9 = r1.<org.mozilla.javascript.InterpretedFunction: java.lang.Object securityDomain>;

        r0.<org.mozilla.javascript.Context: java.lang.Object interpreterSecurityDomain> = $r9;

     label2:
        $r11 = r1.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.SecurityController securityController>;

        $r10 = r1.<org.mozilla.javascript.InterpretedFunction: java.lang.Object securityDomain>;

        $r12 = virtualinvoke $r11.<org.mozilla.javascript.SecurityController: java.lang.Object callWithDomain(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>($r10, r0, r1, r5, r6, r7);

     label3:
        r0.<org.mozilla.javascript.Context: java.lang.Object interpreterSecurityDomain> = r14;

        return $r12;

     label4:
        $r13 := @caughtexception;

     label5:
        r0.<org.mozilla.javascript.Context: java.lang.Object interpreterSecurityDomain> = r14;

        throw $r13;

     label6:
        $r4 = new org.mozilla.javascript.Interpreter$CallFrame;

        specialinvoke $r4.<org.mozilla.javascript.Interpreter$CallFrame: void <init>(org.mozilla.javascript.Interpreter$1)>(null);

        $i0 = lengthof r7;

        staticinvoke <org.mozilla.javascript.Interpreter: void initFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],double[],int,int,org.mozilla.javascript.InterpretedFunction,org.mozilla.javascript.Interpreter$CallFrame,org.mozilla.javascript.Interpreter$CallFrame)>(r0, r5, r6, r7, null, 0, $i0, r1, null, $r4);

        $r8 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object interpretLoop(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object)>(r0, $r4, null);

        return $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static java.lang.Object restartContinuation(org.mozilla.javascript.continuations.Continuation, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.Interpreter$CallFrame $r6;
        java.lang.Object[] r1;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.continuations.Continuation r2;
        org.mozilla.javascript.Scriptable r7;
        org.mozilla.javascript.Interpreter$ContinuationJump $r4;
        int $i0;
        java.lang.Object $r3, $r5, $r8, r9;
        boolean $z0;

        r2 := @parameter0: org.mozilla.javascript.continuations.Continuation;

        r0 := @parameter1: org.mozilla.javascript.Context;

        r7 := @parameter2: org.mozilla.javascript.Scriptable;

        r1 := @parameter3: java.lang.Object[];

        $z0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean hasTopCall(org.mozilla.javascript.Context)>(r0);

        if $z0 != 0 goto label1;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object doTopCall(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r0, r7, null, r1);

        return $r8;

     label1:
        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

        r9 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label3;

     label2:
        r9 = r1[0];

     label3:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.continuations.Continuation: java.lang.Object getImplementation()>();

        $r6 = (org.mozilla.javascript.Interpreter$CallFrame) $r3;

        if $r6 != null goto label4;

        return r9;

     label4:
        $r4 = new org.mozilla.javascript.Interpreter$ContinuationJump;

        specialinvoke $r4.<org.mozilla.javascript.Interpreter$ContinuationJump: void <init>(org.mozilla.javascript.continuations.Continuation,org.mozilla.javascript.Interpreter$CallFrame)>(r2, null);

        $r4.<org.mozilla.javascript.Interpreter$ContinuationJump: java.lang.Object result> = r9;

        $r5 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object interpretLoop(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object)>(r0, null, $r4);

        return $r5;
    }

    private static java.lang.Object interpretLoop(org.mozilla.javascript.Context, org.mozilla.javascript.Interpreter$CallFrame, java.lang.Object)
    {
        java.lang.StringBuffer $r201, $r202, $r203, $r204, $r332;
        org.mozilla.javascript.JavaScriptException $r328;
        org.mozilla.javascript.Scriptable $r4, $r7, $r37, $r38, $r42, $r43, $r48, $r49, $r63, $r64, $r66, $r72, $r75, $r87, $r88, $r93, $r94, $r96, $r103, $r105, $r109, $r110, $r111, $r112, $r120, $r122, $r130, $r131, $r132, $r134, $r136, $r138, $r140, $r143, $r145, $r148, $r154, $r155, $r158, $r168, $r175, $r176, $r177, $r178, $r180, $r181, $r193, $r197, $r218, r283, r285, r298, r314;
        java.io.PrintStream $r229;
        java.lang.Error $r25, $r226;
        org.mozilla.javascript.Function r291;
        java.lang.String $r14, $r15, $r44, $r62, $r83, $r133, $r153, $r205, r233, r296;
        org.mozilla.javascript.Scriptable[] $r65;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, z39, $z40, $z41, $z42, z43, $z44, z45, $z46, z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54;
        org.mozilla.javascript.Interpreter$ContinuationJump r235, r322, $r330;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, d67, d68, d69, d70, d71, d72, $d73, d74, d75, d76, d77, d78, $d79, $d80, $d81;
        byte[] $r34, $r246;
        byte $b8, $b38, $b39, $b40, $b41, $b46, $b82, $b83, $b86, $b90, $b94, $b98, $b107, $b110, $b149, $b159, $b213, $b215, b219, b221, b222, b223;
        long $l35, $l36;
        org.mozilla.javascript.Interpreter$CallFrame $r55, $r56, $r57, $r58, $r206, $r207, $r208, $r209, $r210, $r211, $r214, r231, r237, r238, $r241, $r243, r287, $r321, $r329, $r331;
        org.mozilla.javascript.Interpreter$CallFrame[] r236;
        java.lang.Throwable $r39, $r225, $r228;
        org.mozilla.javascript.Ref $r5, $r8, $r9, $r12, $r17, $r22, $r195, r274, r276, r277;
        double[] $r74, $r240, $r244;
        org.mozilla.javascript.IdFunctionObject r288, r292;
        java.lang.IllegalStateException $r334;
        org.mozilla.javascript.continuations.Continuation $r187;
        java.lang.String[] $r41, $r47, $r119, $r248;
        org.mozilla.javascript.ObjArray $r27, $r28, $r221, $r223, $r325, $r327;
        int[] $r220, r315;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i37, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i84, $i85, $i87, $i88, $i89, $i91, $i92, $i93, $i95, $i96, $i97, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i108, $i109, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, i206, i207, i208, i209, i210, $i211, $i212, i214, i216, i217, i218, i220, $i225, $i227, $i228, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i238, $i239, $i241, $i242, $i244, $i245, $i247, $i249, $i251, $i253, $i255, $i256, $i258, $i259, $i261, $i263, $i264, $i266, $i268, $i270, $i271, $i273, $i275, $i277, $i278, $i280, $i281, $i283, $i284, $i285, $i286, $i288, $i289, $i291, $i292, $i293, $i294, $i295, $i297, $i299, $i301, $i302, $i303, $i305, $i307, $i309, $i311, $i313, $i314, $i315, $i317, $i319, $i321, $i322, $i324, $i325, $i327, $i329;
        java.lang.Boolean $r53, $r67, $r70, $r71, $r98, $r101, $r252;
        org.mozilla.javascript.Callable $r135, $r137, $r139, $r142, $r196, r284;
        java.lang.RuntimeException $r26, $r89, $r99, $r100, $r227, r324, $r333;
        org.mozilla.javascript.debug.DebugFrame $r59, $r162, $r163, $r323;
        org.mozilla.javascript.UniqueTag r0;
        java.lang.Object[] $r86, $r151, $r157, $r164, $r166, $r170, $r173, $r184, $r194, $r213, $r216, $r219, $r239, $r242, r312, r313;
        short $s122, $s160, $s282, $s323;
        org.mozilla.javascript.InterpreterData $r33, $r40, $r46, $r61, $r73, $r106, $r118, $r152, $r169, $r172, $r198, $r215, $r245, $r247;
        java.lang.Object r1, $r3, $r6, $r10, $r11, $r13, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r29, $r31, $r32, $r35, $r36, $r45, $r50, $r51, $r52, $r54, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r84, $r85, $r91, $r92, $r97, $r102, $r104, $r108, $r113, $r114, $r115, $r116, $r117, $r121, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r141, $r149, $r150, $r156, $r159, $r160, $r161, $r165, $r167, $r171, $r174, $r179, $r182, $r183, $r185, $r188, $r190, $r191, $r212, $r217, $r222, r232, r234, r249, r250, r251, r253, r254, r255, r256, r257, r258, r259, r260, r261, r262, r263, r264, r265, r266, r267, r268, r269, r270, r271, r272, r273, r275, r278, r279, r280, r281, r282, r289, r293, r294, r295, r297, r299, r300, $r301, r302, r303, r304, r305, r306, r307, r308, r309, r310, r311, r316, r317, r318, r319, $r320, $r326;
        org.mozilla.javascript.InterpretedFunction $r30, $r90, $r144, $r146, $r147, $r189, r286, r290;
        java.lang.Number $r68, $r69;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.UintMap $r107;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r231 := @parameter1: org.mozilla.javascript.Interpreter$CallFrame;

        r232 := @parameter2: java.lang.Object;

        r0 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        $i0 = r2.<org.mozilla.javascript.Context: int instructionThreshold>;

        if $i0 == 0 goto label001;

        $z37 = 1;

        goto label002;

     label001:
        $z37 = 0;

     label002:
        z0 = $z37;

        r233 = null;

        $i225 = (int) -1;

        i206 = $i225;

        $r3 = r2.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame>;

        if $r3 == null goto label004;

        $r221 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        if $r221 != null goto label003;

        $r327 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r327.<org.mozilla.javascript.ObjArray: void <init>()>();

        r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations> = $r327;

     label003:
        $r223 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        $r222 = r2.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame>;

        virtualinvoke $r223.<org.mozilla.javascript.ObjArray: void push(java.lang.Object)>($r222);

     label004:
        if r232 == null goto label005;

        $z36 = r232 instanceof org.mozilla.javascript.Interpreter$ContinuationJump;

        if $z36 != 0 goto label005;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label005:
        r234 = null;

        d67 = 0.0;

     label006:
        if r232 == null goto label019;

        if i206 < 0 goto label009;

        $z35 = r231.<org.mozilla.javascript.Interpreter$CallFrame: boolean frozen>;

        if $z35 == 0 goto label007;

        r231 = virtualinvoke r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame cloneFrozen()>();

     label007:
        $r215 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r220 = $r215.<org.mozilla.javascript.InterpreterData: int[] itsExceptionTable>;

        $i194 = i206 + 2;

        $i195 = $r220[$i194];

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i195;

        if z0 == 0 goto label008;

        $i203 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pcPrevBranch> = $i203;

     label008:
        $i196 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int emptyStackTop>;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop> = $i196;

        $i199 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        $i197 = i206 + 5;

        $i198 = $r220[$i197];

        $i204 = $i199 + $i198;

        $i202 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        $i200 = i206 + 4;

        $i201 = $r220[$i200];

        $i205 = $i202 + $i201;

        $r216 = r231.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $r217 = $r216[$i204];

        $r218 = (org.mozilla.javascript.Scriptable) $r217;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope> = $r218;

        $r219 = r231.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $r219[$i205] = r232;

        r232 = null;

        goto label020;

     label009:
        r235 = (org.mozilla.javascript.Interpreter$ContinuationJump) r232;

        r232 = null;

        $r206 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame branchFrame>;

        if $r206 == r231 goto label010;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label010:
        $r207 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame capturedFrame>;

        if $r207 != null goto label011;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label011:
        $r208 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame capturedFrame>;

        $i190 = $r208.<org.mozilla.javascript.Interpreter$CallFrame: int frameIndex>;

        $i193 = $i190 + 1;

        i207 = $i193;

        $r209 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame branchFrame>;

        if $r209 == null goto label012;

        $r214 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame branchFrame>;

        $i192 = $r214.<org.mozilla.javascript.Interpreter$CallFrame: int frameIndex>;

        i207 = $i193 - $i192;

     label012:
        i208 = 0;

        r236 = null;

        r237 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame capturedFrame>;

        i209 = 0;

     label013:
        if i209 == i207 goto label017;

        $z33 = r237.<org.mozilla.javascript.Interpreter$CallFrame: boolean frozen>;

        if $z33 != 0 goto label014;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label014:
        $z34 = staticinvoke <org.mozilla.javascript.Interpreter: boolean isFrameEnterExitRequired(org.mozilla.javascript.Interpreter$CallFrame)>(r237);

        if $z34 == 0 goto label016;

        if r236 != null goto label015;

        $i191 = i207 - i209;

        r236 = newarray (org.mozilla.javascript.Interpreter$CallFrame)[$i191];

     label015:
        r236[i208] = r237;

        i208 = i208 + 1;

     label016:
        r237 = r237.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        i209 = i209 + 1;

        goto label013;

     label017:
        if i208 == 0 goto label018;

        $i227 = (int) -1;

        i208 = i208 + $i227;

        r238 = r236[i208];

        $r213 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        staticinvoke <org.mozilla.javascript.Interpreter: void enterFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],boolean)>(r2, r238, $r213, 1);

        goto label017;

     label018:
        $r210 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame capturedFrame>;

        $r211 = virtualinvoke $r210.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame cloneFrozen()>();

        r231 = $r211;

        $r212 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: java.lang.Object result>;

        $d66 = r235.<org.mozilla.javascript.Interpreter$ContinuationJump: double resultDbl>;

        staticinvoke <org.mozilla.javascript.Interpreter: void setCallResult(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object,double)>($r211, $r212, $d66);

        goto label020;

     label019:
        $z1 = r231.<org.mozilla.javascript.Interpreter$CallFrame: boolean frozen>;

        if $z1 == 0 goto label020;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label020:
        $r239 = r231.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $r240 = r231.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl>;

        $r241 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame varSource>;

        $r242 = $r241.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $r243 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame varSource>;

        $r244 = $r243.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl>;

        $r245 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r246 = $r245.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        $r247 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r248 = $r247.<org.mozilla.javascript.InterpreterData: java.lang.String[] itsStringTable>;

        i210 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop>;

        r2.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame> = r231;

     label021:
        $i211 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i212 = $i211 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i212;

        $b213 = $r246[$i211];

        $i228 = (int) $b213;

        tableswitch($i228)
        {
            case -56: goto label149;
            case -55: goto label165;
            case -54: goto label262;
            case -53: goto label260;
            case -52: goto label212;
            case -51: goto label211;
            case -50: goto label218;
            case -49: goto label195;
            case -48: goto label199;
            case -47: goto label285;
            case -46: goto label284;
            case -45: goto label283;
            case -44: goto label282;
            case -43: goto label281;
            case -42: goto label280;
            case -41: goto label279;
            case -40: goto label278;
            case -39: goto label277;
            case -38: goto label276;
            case -37: goto label275;
            case -36: goto label274;
            case -35: goto label273;
            case -34: goto label272;
            case -33: goto label271;
            case -32: goto label270;
            case -31: goto label256;
            case -30: goto label254;
            case -29: goto label253;
            case -28: goto label191;
            case -27: goto label190;
            case -26: goto label268;
            case -25: goto label085;
            case -24: goto label083;
            case -23: goto label082;
            case -22: goto label096;
            case -21: goto label158;
            case -20: goto label251;
            case -19: goto label250;
            case -18: goto label156;
            case -17: goto label153;
            case -16: goto label151;
            case -15: goto label150;
            case -14: goto label188;
            case -13: goto label249;
            case -12: goto label248;
            case -11: goto label147;
            case -10: goto label140;
            case -9: goto label129;
            case -8: goto label194;
            case -7: goto label202;
            case -6: goto label079;
            case -5: goto label090;
            case -4: goto label089;
            case -3: goto label093;
            case -2: goto label092;
            case -1: goto label091;
            case 0: goto label286;
            case 1: goto label286;
            case 2: goto label219;
            case 3: goto label221;
            case 4: goto label094;
            case 5: goto label081;
            case 6: goto label078;
            case 7: goto label077;
            case 8: goto label119;
            case 9: goto label098;
            case 10: goto label098;
            case 11: goto label098;
            case 12: goto label055;
            case 13: goto label055;
            case 14: goto label027;
            case 15: goto label027;
            case 16: goto label027;
            case 17: goto label027;
            case 18: goto label098;
            case 19: goto label098;
            case 20: goto label105;
            case 21: goto label108;
            case 22: goto label109;
            case 23: goto label109;
            case 24: goto label109;
            case 25: goto label109;
            case 26: goto label115;
            case 27: goto label097;
            case 28: goto label106;
            case 29: goto label106;
            case 30: goto label179;
            case 31: goto label121;
            case 32: goto label186;
            case 33: goto label124;
            case 34: goto label126;
            case 35: goto label131;
            case 36: goto label135;
            case 37: goto label165;
            case 38: goto label193;
            case 39: goto label192;
            case 40: goto label189;
            case 41: goto label213;
            case 42: goto label214;
            case 43: goto label216;
            case 44: goto label217;
            case 45: goto label064;
            case 46: goto label064;
            case 47: goto label252;
            case 48: goto label118;
            case 49: goto label022;
            case 50: goto label025;
            case 51: goto label050;
            case 52: goto label050;
            case 53: goto label148;
            case 54: goto label200;
            case 55: goto label196;
            case 56: goto label222;
            case 57: goto label227;
            case 58: goto label227;
            case 59: goto label231;
            case 60: goto label231;
            case 61: goto label215;
            case 62: goto label095;
            case 63: goto label256;
            case 64: goto label256;
            case 65: goto label143;
            case 66: goto label144;
            case 67: goto label146;
            case 68: goto label165;
            case 69: goto label234;
            case 70: goto label264;
            case 71: goto label266;
            case 72: goto label267;
            case 73: goto label236;
            case 74: goto label239;
            case 75: goto label243;
            case 76: goto label245;
            default: goto label286;
        };

     label022:
        r249 = $r239[i210];

        if r249 != r0 goto label023;

        $d18 = $r240[i210];

        r249 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d18);

     label023:
        $i15 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i16 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>($r246, $i15);

        $r328 = new org.mozilla.javascript.JavaScriptException;

        $r61 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r62 = $r61.<org.mozilla.javascript.InterpreterData: java.lang.String itsSourceFile>;

        specialinvoke $r328.<org.mozilla.javascript.JavaScriptException: void <init>(java.lang.Object,java.lang.String,int)>(r249, $r62, $i16);

        r232 = $r328;

     label024:
        goto label297;

     label025:
        $i13 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i214 = i206 + $i13;

        r232 = $r239[i214];

     label026:
        goto label297;

     label027:
        $i230 = (int) -1;

        i210 = i210 + $i230;

        $i37 = i210 + 1;

        r250 = $r239[$i37];

        r251 = $r239[i210];

        if r250 != r0 goto label028;

        $i42 = i210 + 1;

        d68 = $r240[$i42];

        d69 = staticinvoke <org.mozilla.javascript.Interpreter: double stack_double(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        goto label029;

     label028:
        if r251 != r0 goto label043;

        d68 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r250);

        d69 = $r240[i210];

     label029:
        $i231 = (int) $b213;

        tableswitch($i231)
        {
            case 14: goto label039;
            case 15: goto label033;
            case 16: goto label036;
            case 17: goto label030;
            default: goto label042;
        };

     label030:
        $b38 = d69 cmpl d68;

        $i232 = (int) $b38;

        if $i232 < 0 goto label031;

        $z38 = 1;

        goto label032;

     label031:
        $z38 = 0;

     label032:
        z39 = $z38;

        goto label049;

     label033:
        $b40 = d69 cmpg d68;

        $i233 = (int) $b40;

        if $i233 > 0 goto label034;

        $z40 = 1;

        goto label035;

     label034:
        $z40 = 0;

     label035:
        z39 = $z40;

        goto label049;

     label036:
        $b39 = d69 cmpl d68;

        $i234 = (int) $b39;

        if $i234 <= 0 goto label037;

        $z41 = 1;

        goto label038;

     label037:
        $z41 = 0;

     label038:
        z39 = $z41;

        goto label049;

     label039:
        $b41 = d69 cmpg d68;

        $i235 = (int) $b41;

        if $i235 >= 0 goto label040;

        $z42 = 1;

        goto label041;

     label040:
        $z42 = 0;

     label041:
        z39 = $z42;

        goto label049;

     label042:
        $r100 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r100;

     label043:
        $i236 = (int) $b213;

        tableswitch($i236)
        {
            case 14: goto label047;
            case 15: goto label045;
            case 16: goto label046;
            case 17: goto label044;
            default: goto label048;
        };

     label044:
        z39 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean cmp_LE(java.lang.Object,java.lang.Object)>(r250, r251);

        goto label049;

     label045:
        z39 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean cmp_LE(java.lang.Object,java.lang.Object)>(r251, r250);

        goto label049;

     label046:
        z39 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean cmp_LT(java.lang.Object,java.lang.Object)>(r250, r251);

        goto label049;

     label047:
        z39 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean cmp_LT(java.lang.Object,java.lang.Object)>(r251, r250);

        goto label049;

     label048:
        $r99 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r99;

     label049:
        $r252 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>(z39);

        $r239[i210] = $r252;

        goto label021;

     label050:
        r253 = $r239[i210];

        if r253 != r0 goto label051;

        $d17 = $r240[i210];

        r253 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d17);

     label051:
        $i238 = (int) -1;

        i210 = i210 + $i238;

        $r54 = $r239[i210];

        r254 = $r54;

        if $r54 != r0 goto label052;

        $d16 = $r240[i210];

        r254 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d16);

     label052:
        $i239 = (int) $b213;

        if $i239 != 51 goto label053;

        z43 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean in(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r254, r253, r2);

        goto label054;

     label053:
        z43 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean instanceOf(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r254, r253, r2);

     label054:
        $r53 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>(z43);

        $r239[i210] = $r53;

        goto label021;

     label055:
        $i241 = (int) -1;

        i210 = i210 + $i241;

        $i43 = i210 + 1;

        r255 = $r239[$i43];

        r256 = $r239[i210];

        if r255 != r0 goto label059;

        if r256 != r0 goto label058;

        $d39 = $r240[i210];

        $i45 = i210 + 1;

        $d38 = $r240[$i45];

        $b46 = $d39 cmpl $d38;

        if $b46 != 0 goto label056;

        $z44 = 1;

        goto label057;

     label056:
        $z44 = 0;

     label057:
        z45 = $z44;

        goto label061;

     label058:
        $i44 = i210 + 1;

        $d37 = $r240[$i44];

        z45 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqNumber(double,java.lang.Object)>($d37, r256);

        goto label061;

     label059:
        if r256 != r0 goto label060;

        $d36 = $r240[i210];

        z45 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqNumber(double,java.lang.Object)>($d36, r255);

        goto label061;

     label060:
        z45 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eq(java.lang.Object,java.lang.Object)>(r256, r255);

     label061:
        $z21 = z45;

        $i242 = (int) $b213;

        if $i242 != 13 goto label062;

        $z46 = 1;

        goto label063;

     label062:
        $z46 = 0;

     label063:
        $z22 = $z21 ^ $z46;

        $r101 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z22);

        $r239[i210] = $r101;

        goto label021;

     label064:
        $i244 = (int) -1;

        i210 = i210 + $i244;

        $i17 = i210 + 1;

        r257 = $r239[$i17];

        r258 = $r239[i210];

        if r257 != r0 goto label067;

        $i19 = i210 + 1;

        d70 = $r240[$i19];

        if r258 != r0 goto label065;

        d71 = $r240[i210];

        goto label071;

     label065:
        $z15 = r258 instanceof java.lang.Number;

        if $z15 == 0 goto label066;

        $r69 = (java.lang.Number) r258;

        d71 = virtualinvoke $r69.<java.lang.Number: double doubleValue()>();

        goto label071;

     label066:
        z47 = 0;

        goto label074;

     label067:
        if r258 != r0 goto label070;

        d71 = $r240[i210];

        if r257 != r0 goto label068;

        $i18 = i210 + 1;

        d70 = $r240[$i18];

        goto label071;

     label068:
        $z14 = r257 instanceof java.lang.Number;

        if $z14 == 0 goto label069;

        $r68 = (java.lang.Number) r257;

        d70 = virtualinvoke $r68.<java.lang.Number: double doubleValue()>();

        goto label071;

     label069:
        z47 = 0;

        goto label074;

     label070:
        z47 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean shallowEq(java.lang.Object,java.lang.Object)>(r258, r257);

        goto label074;

     label071:
        $b215 = d71 cmpl d70;

        if $b215 != 0 goto label072;

        $z48 = 1;

        goto label073;

     label072:
        $z48 = 0;

     label073:
        z47 = $z48;

     label074:
        $z12 = z47;

        $i245 = (int) $b213;

        if $i245 != 46 goto label075;

        $z49 = 1;

        goto label076;

     label075:
        $z49 = 0;

     label076:
        $z13 = $z12 ^ $z49;

        $r67 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z13);

        $r239[i210] = $r67;

        goto label021;

     label077:
        $i49 = i210;

        i210 = i210 - 1;

        $z23 = staticinvoke <org.mozilla.javascript.Interpreter: boolean stack_boolean(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, $i49);

        if $z23 == 0 goto label287;

        $i58 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i59 = $i58 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i59;

        goto label021;

     label078:
        $i60 = i210;

        i210 = i210 - 1;

        $z24 = staticinvoke <org.mozilla.javascript.Interpreter: boolean stack_boolean(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, $i60);

        if $z24 != 0 goto label287;

        $i61 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i62 = $i61 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i62;

        goto label021;

     label079:
        $i75 = i210;

        i210 = i210 - 1;

        $z25 = staticinvoke <org.mozilla.javascript.Interpreter: boolean stack_boolean(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, $i75);

        if $z25 != 0 goto label080;

        $i77 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i78 = $i77 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i78;

        goto label021;

     label080:
        $i76 = i210;

        i210 = i210 - 1;

        $r239[$i76] = null;

        goto label287;

     label081:
        goto label287;

     label082:
        i210 = i210 + 1;

        $r239[i210] = r0;

        $i123 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i124 = $i123 + 2;

        $d56 = (double) $i124;

        $r240[i210] = $d56;

        goto label287;

     label083:
        $i125 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int emptyStackTop>;

        $i126 = $i125 + 1;

        if i210 != $i126 goto label084;

        $i128 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i206 = i206 + $i128;

        $r160 = $r239[i210];

        $r239[i206] = $r160;

        $d57 = $r240[i210];

        $r240[i206] = $d57;

        $i247 = (int) -1;

        i210 = i210 + $i247;

        goto label021;

     label084:
        $i127 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int emptyStackTop>;

        if i210 == $i127 goto label021;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        goto label021;

     label085:
        if z0 == 0 goto label086;

        staticinvoke <org.mozilla.javascript.Interpreter: void addInstructionCount(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int)>(r2, r231, 0);

     label086:
        $i129 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        $i132 = i206 + $i129;

        i206 = $i132;

        $r161 = $r239[$i132];

        if $r161 == r0 goto label088;

        r232 = $r161;

     label087:
        goto label297;

     label088:
        $d58 = $r240[$i132];

        $i130 = (int) $d58;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i130;

        if z0 == 0 goto label021;

        $i131 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pcPrevBranch> = $i131;

        goto label021;

     label089:
        $r239[i210] = null;

        $i249 = (int) -1;

        i210 = i210 + $i249;

        goto label021;

     label090:
        $r117 = $r239[i210];

        r231.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object result> = $r117;

        $d47 = $r240[i210];

        r231.<org.mozilla.javascript.Interpreter$CallFrame: double resultDbl> = $d47;

        $r239[i210] = null;

        $i251 = (int) -1;

        i210 = i210 + $i251;

        goto label021;

     label091:
        $i63 = i210 + 1;

        $r113 = $r239[i210];

        $r239[$i63] = $r113;

        $i64 = i210 + 1;

        $d43 = $r240[i210];

        $r240[$i64] = $d43;

        i210 = i210 + 1;

        goto label021;

     label092:
        $i66 = i210 + 1;

        $i65 = i210 - 1;

        $r114 = $r239[$i65];

        $r239[$i66] = $r114;

        $i68 = i210 + 1;

        $i67 = i210 - 1;

        $d44 = $r240[$i67];

        $r240[$i68] = $d44;

        $i69 = i210 + 2;

        $r115 = $r239[i210];

        $r239[$i69] = $r115;

        $i70 = i210 + 2;

        $d45 = $r240[i210];

        $r240[$i70] = $d45;

        i210 = i210 + 2;

        goto label021;

     label093:
        r259 = $r239[i210];

        $i71 = i210 - 1;

        $r116 = $r239[$i71];

        $r239[i210] = $r116;

        $i72 = i210 - 1;

        $r239[$i72] = r259;

        d72 = $r240[i210];

        $i73 = i210 - 1;

        $d46 = $r240[$i73];

        $r240[i210] = $d46;

        $i74 = i210 - 1;

        $r240[$i74] = d72;

        goto label021;

     label094:
        $r108 = $r239[i210];

        r231.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object result> = $r108;

        $d41 = $r240[i210];

        r231.<org.mozilla.javascript.Interpreter$CallFrame: double resultDbl> = $d41;

        goto label291;

     label095:
        goto label291;

     label096:
        r231.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object result> = r1;

        goto label291;

     label097:
        $i31 = staticinvoke <org.mozilla.javascript.Interpreter: int stack_int32(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        $r239[i210] = r0;

        $i253 = (int) -1;

        $i32 = $i31 ^ $i253;

        $d31 = (double) $i32;

        $r240[i210] = $d31;

        goto label021;

     label098:
        $i47 = staticinvoke <org.mozilla.javascript.Interpreter: int stack_int32(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        $i255 = (int) -1;

        i210 = i210 + $i255;

        $i48 = staticinvoke <org.mozilla.javascript.Interpreter: int stack_int32(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        i216 = $i48;

        $r239[i210] = r0;

        $i256 = (int) $b213;

        tableswitch($i256)
        {
            case 9: goto label100;
            case 10: goto label101;
            case 11: goto label099;
            case 12: goto label104;
            case 13: goto label104;
            case 14: goto label104;
            case 15: goto label104;
            case 16: goto label104;
            case 17: goto label104;
            case 18: goto label102;
            case 19: goto label103;
            default: goto label104;
        };

     label099:
        i216 = $i48 & $i47;

        goto label104;

     label100:
        i216 = $i48 | $i47;

        goto label104;

     label101:
        i216 = $i48 ^ $i47;

        goto label104;

     label102:
        i216 = $i48 << $i47;

        goto label104;

     label103:
        i216 = $i48 >> $i47;

     label104:
        $d73 = (double) i216;

        $r240[i210] = $d73;

        goto label021;

     label105:
        $i34 = staticinvoke <org.mozilla.javascript.Interpreter: int stack_int32(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        i217 = $i34 & 31;

        $i258 = (int) -1;

        i210 = i210 + $i258;

        $d34 = staticinvoke <org.mozilla.javascript.Interpreter: double stack_double(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        $r239[i210] = r0;

        $l35 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long toUint32(double)>($d34);

        $l36 = $l35 >>> i217;

        $d35 = (double) $l36;

        $r240[i210] = $d35;

        goto label021;

     label106:
        $d30 = staticinvoke <org.mozilla.javascript.Interpreter: double stack_double(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        d74 = $d30;

        $r239[i210] = r0;

        $i259 = (int) $b213;

        if $i259 != 29 goto label107;

        d74 = neg $d30;

     label107:
        $r240[i210] = d74;

        goto label021;

     label108:
        $i261 = (int) -1;

        i210 = i210 + $i261;

        staticinvoke <org.mozilla.javascript.Interpreter: void do_add(java.lang.Object[],double[],int,org.mozilla.javascript.Context)>($r239, $r240, i210, r2);

        goto label021;

     label109:
        $d32 = staticinvoke <org.mozilla.javascript.Interpreter: double stack_double(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        $i263 = (int) -1;

        i210 = i210 + $i263;

        $d33 = staticinvoke <org.mozilla.javascript.Interpreter: double stack_double(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        d75 = $d33;

        $r239[i210] = r0;

        $i264 = (int) $b213;

        tableswitch($i264)
        {
            case 22: goto label110;
            case 23: goto label111;
            case 24: goto label112;
            case 25: goto label113;
            default: goto label114;
        };

     label110:
        d75 = $d33 - $d32;

        goto label114;

     label111:
        d75 = $d33 * $d32;

        goto label114;

     label112:
        d75 = $d33 / $d32;

        goto label114;

     label113:
        d75 = $d33 % $d32;

     label114:
        $r240[i210] = d75;

        goto label021;

     label115:
        $i33 = i210;

        $z20 = staticinvoke <org.mozilla.javascript.Interpreter: boolean stack_boolean(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        if $z20 != 0 goto label116;

        $z50 = 1;

        goto label117;

     label116:
        $z50 = 0;

     label117:
        $r98 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z50);

        $r239[$i33] = $r98;

        goto label021;

     label118:
        i210 = i210 + 1;

        $r63 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r64 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable bind(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>(r2, $r63, r233);

        $r239[i210] = $r64;

        goto label021;

     label119:
        r260 = $r239[i210];

        if r260 != r0 goto label120;

        $d40 = $r240[i210];

        r260 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d40);

     label120:
        $i266 = (int) -1;

        i210 = i210 + $i266;

        $r102 = $r239[i210];

        $r105 = (org.mozilla.javascript.Scriptable) $r102;

        $r103 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r104 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setName(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>($r105, r260, r2, $r103, r233);

        $r239[i210] = $r104;

        goto label021;

     label121:
        r261 = $r239[i210];

        if r261 != r0 goto label122;

        $d28 = $r240[i210];

        r261 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d28);

     label122:
        $i268 = (int) -1;

        i210 = i210 + $i268;

        $r85 = $r239[i210];

        r262 = $r85;

        if $r85 != r0 goto label123;

        $d27 = $r240[i210];

        r262 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d27);

     label123:
        $r84 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object delete(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r262, r261, r2);

        $r239[i210] = $r84;

        goto label021;

     label124:
        r263 = $r239[i210];

        if r263 != r0 goto label125;

        $d25 = $r240[i210];

        r263 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d25);

     label125:
        $r82 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectProp(java.lang.Object,java.lang.String,org.mozilla.javascript.Context)>(r263, r233, r2);

        $r239[i210] = $r82;

        goto label021;

     label126:
        r264 = $r239[i210];

        if r264 != r0 goto label127;

        $d24 = $r240[i210];

        r264 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d24);

     label127:
        $i270 = (int) -1;

        i210 = i210 + $i270;

        $r81 = $r239[i210];

        r265 = $r81;

        if $r81 != r0 goto label128;

        $d23 = $r240[i210];

        r265 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d23);

     label128:
        $r80 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectProp(java.lang.Object,java.lang.String,java.lang.Object,org.mozilla.javascript.Context)>(r265, r233, r264, r2);

        $r239[i210] = $r80;

        goto label021;

     label129:
        r266 = $r239[i210];

        if r266 != r0 goto label130;

        $d48 = $r240[i210];

        r266 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d48);

     label130:
        $i89 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b90 = $r246[$i89];

        $i271 = (int) $b90;

        $r124 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object propIncrDecr(java.lang.Object,java.lang.String,org.mozilla.javascript.Context,int)>(r266, r233, r2, $i271);

        $r239[i210] = $r124;

        $i91 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i92 = $i91 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i92;

        goto label021;

     label131:
        $i273 = (int) -1;

        i210 = i210 + $i273;

        r267 = $r239[i210];

        if r267 != r0 goto label132;

        $d22 = $r240[i210];

        r267 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d22);

     label132:
        $i24 = i210 + 1;

        $r79 = $r239[$i24];

        if $r79 == r0 goto label133;

        r268 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectElem(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r267, $r79, r2);

        goto label134;

     label133:
        $i25 = i210 + 1;

        d76 = $r240[$i25];

        r268 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectIndex(java.lang.Object,double,org.mozilla.javascript.Context)>(r267, d76, r2);

     label134:
        $r239[i210] = r268;

        goto label021;

     label135:
        $i275 = (int) -2;

        i210 = i210 + $i275;

        $i20 = i210 + 2;

        r269 = $r239[$i20];

        if r269 != r0 goto label136;

        $i23 = i210 + 2;

        $d21 = $r240[$i23];

        r269 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d21);

     label136:
        $r78 = $r239[i210];

        r270 = $r78;

        if $r78 != r0 goto label137;

        $d20 = $r240[i210];

        r270 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d20);

     label137:
        $i21 = i210 + 1;

        $r77 = $r239[$i21];

        if $r77 == r0 goto label138;

        r271 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectElem(java.lang.Object,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r270, $r77, r269, r2);

        goto label139;

     label138:
        $i22 = i210 + 1;

        d77 = $r240[$i22];

        r271 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectIndex(java.lang.Object,double,java.lang.Object,org.mozilla.javascript.Context)>(r270, d77, r269, r2);

     label139:
        $r239[i210] = r271;

        goto label021;

     label140:
        r272 = $r239[i210];

        if r272 != r0 goto label141;

        $d50 = $r240[i210];

        r272 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d50);

     label141:
        $i277 = (int) -1;

        i210 = i210 + $i277;

        $r126 = $r239[i210];

        r273 = $r126;

        if $r126 != r0 goto label142;

        $d49 = $r240[i210];

        r273 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d49);

     label142:
        $i93 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b94 = $r246[$i93];

        $i278 = (int) $b94;

        $r125 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object elemIncrDecr(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,int)>(r273, r272, r2, $i278);

        $r239[i210] = $r125;

        $i95 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i96 = $i95 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i96;

        goto label021;

     label143:
        $r23 = $r239[i210];

        r274 = (org.mozilla.javascript.Ref) $r23;

        $r24 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object refGet(org.mozilla.javascript.Ref,org.mozilla.javascript.Context)>(r274, r2);

        $r239[i210] = $r24;

        goto label021;

     label144:
        r275 = $r239[i210];

        if r275 != r0 goto label145;

        $d10 = $r240[i210];

        r275 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d10);

     label145:
        $i280 = (int) -1;

        i210 = i210 + $i280;

        $r20 = $r239[i210];

        $r22 = (org.mozilla.javascript.Ref) $r20;

        $r21 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object refSet(org.mozilla.javascript.Ref,java.lang.Object,org.mozilla.javascript.Context)>($r22, r275, r2);

        $r239[i210] = $r21;

        goto label021;

     label146:
        $r18 = $r239[i210];

        r276 = (org.mozilla.javascript.Ref) $r18;

        $r19 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object refDel(org.mozilla.javascript.Ref,org.mozilla.javascript.Context)>(r276, r2);

        $r239[i210] = $r19;

        goto label021;

     label147:
        $r127 = $r239[i210];

        r277 = (org.mozilla.javascript.Ref) $r127;

        $i97 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b98 = $r246[$i97];

        $i281 = (int) $b98;

        $r128 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object refIncrDecr(org.mozilla.javascript.Ref,org.mozilla.javascript.Context,int)>(r277, r2, $i281);

        $r239[i210] = $r128;

        $i99 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i100 = $i99 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i100;

        goto label021;

     label148:
        i210 = i210 + 1;

        $i12 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i206 = i206 + $i12;

        $r52 = $r239[i206];

        $r239[i210] = $r52;

        $d15 = $r240[i206];

        $r240[i210] = $d15;

        goto label021;

     label149:
        $i187 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i206 = i206 + $i187;

        $r239[i206] = null;

        goto label021;

     label150:
        i218 = i210 + 1;

        $r134 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r135 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getNameFunctionAndThis(java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r233, r2, $r134);

        $r239[i218] = $r135;

        i210 = i218 + 1;

        $r136 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r2);

        $r239[i210] = $r136;

        goto label021;

     label151:
        r278 = $r239[i210];

        if r278 != r0 goto label152;

        $d51 = $r240[i210];

        r278 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d51);

     label152:
        $r137 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getPropFunctionAndThis(java.lang.Object,java.lang.String,org.mozilla.javascript.Context)>(r278, r233, r2);

        $r239[i210] = $r137;

        i210 = i210 + 1;

        $r138 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r2);

        $r239[i210] = $r138;

        goto label021;

     label153:
        $i103 = i210 - 1;

        r279 = $r239[$i103];

        if r279 != r0 goto label154;

        $i105 = i210 - 1;

        $d53 = $r240[$i105];

        r279 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d53);

     label154:
        $r141 = $r239[i210];

        r280 = $r141;

        if $r141 != r0 goto label155;

        $d52 = $r240[i210];

        r280 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d52);

     label155:
        $i104 = i210 - 1;

        $r139 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getElemFunctionAndThis(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r279, r280, r2);

        $r239[$i104] = $r139;

        $r140 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r2);

        $r239[i210] = $r140;

        goto label021;

     label156:
        r281 = $r239[i210];

        if r281 != r0 goto label157;

        $d54 = $r240[i210];

        r281 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d54);

     label157:
        $r142 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getValueFunctionAndThis(java.lang.Object,org.mozilla.javascript.Context)>(r281, r2);

        $r239[i210] = $r142;

        i210 = i210 + 1;

        $r143 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r2);

        $r239[i210] = $r143;

        goto label021;

     label158:
        if z0 == 0 goto label159;

        $i120 = r2.<org.mozilla.javascript.Context: int instructionCount>;

        $i121 = $i120 + 100;

        r2.<org.mozilla.javascript.Context: int instructionCount> = $i121;

     label159:
        $i106 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b107 = $r246[$i106];

        $s282 = (short) $b107;

        $s122 = $s282 & 255;

        $i108 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i109 = $i108 + 1;

        $b110 = $r246[$i109];

        if $b110 == 0 goto label160;

        $z51 = 1;

        goto label161;

     label160:
        $z51 = 0;

     label161:
        $i111 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i112 = $i111 + 2;

        $i113 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>($r246, $i112);

        if $z51 == 0 goto label163;

        i210 = i210 - i206;

        r282 = $r239[i210];

        if r282 != r0 goto label162;

        $d55 = $r240[i210];

        r282 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d55);

     label162:
        $i119 = i210 + 1;

        $r157 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object[] getArgsArray(java.lang.Object[],double[],int,int)>($r239, $r240, $i119, i206);

        $r158 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $i283 = (int) $s122;

        $r159 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object newSpecial(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object[],org.mozilla.javascript.Scriptable,int)>(r2, r282, $r157, $r158, $i283);

        $r239[i210] = $r159;

        goto label164;

     label163:
        $i114 = 1 + i206;

        i210 = i210 - $i114;

        $i115 = i210 + 1;

        $r149 = $r239[$i115];

        r283 = (org.mozilla.javascript.Scriptable) $r149;

        $r150 = $r239[i210];

        r284 = (org.mozilla.javascript.Callable) $r150;

        $i116 = i210 + 2;

        $r151 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object[] getArgsArray(java.lang.Object[],double[],int,int)>($r239, $r240, $i116, i206);

        $r155 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r154 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable thisObj>;

        $r152 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r153 = $r152.<org.mozilla.javascript.InterpreterData: java.lang.String itsSourceFile>;

        $i284 = (int) $s122;

        $r156 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object callSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,int,java.lang.String,int)>(r2, r284, r283, $r151, $r155, $r154, $i284, $r153, $i113);

        $r239[i210] = $r156;

     label164:
        $i117 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i118 = $i117 + 4;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i118;

        goto label021;

     label165:
        if z0 == 0 goto label166;

        $i184 = r2.<org.mozilla.javascript.Context: int instructionCount>;

        $i185 = $i184 + 100;

        r2.<org.mozilla.javascript.Context: int instructionCount> = $i185;

     label166:
        $i177 = 1 + i206;

        $i186 = i210 - $i177;

        i210 = $i186;

        $r182 = $r239[$i186];

        $r196 = (org.mozilla.javascript.Callable) $r182;

        $i178 = $i186 + 1;

        $r183 = $r239[$i178];

        $r197 = (org.mozilla.javascript.Scriptable) $r183;

        $i285 = (int) $b213;

        if $i285 != 68 goto label167;

        $i183 = $i186 + 2;

        $r194 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object[] getArgsArray(java.lang.Object[],double[],int,int)>($r239, $r240, $i183, i206);

        $r195 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Ref callRef(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Context)>($r196, $r197, $r194, r2);

        $r239[$i186] = $r195;

        goto label021;

     label167:
        r285 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $z28 = r231.<org.mozilla.javascript.Interpreter$CallFrame: boolean useActivation>;

        if $z28 == 0 goto label168;

        $r193 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        r285 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>($r193);

     label168:
        $z29 = $r196 instanceof org.mozilla.javascript.InterpretedFunction;

        if $z29 == 0 goto label173;

        r286 = (org.mozilla.javascript.InterpretedFunction) $r196;

        $r189 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpretedFunction fnOrScript>;

        $r191 = $r189.<org.mozilla.javascript.InterpretedFunction: java.lang.Object securityDomain>;

        $r190 = r286.<org.mozilla.javascript.InterpretedFunction: java.lang.Object securityDomain>;

        if $r191 != $r190 goto label173;

        r287 = r231;

        $r329 = new org.mozilla.javascript.Interpreter$CallFrame;

        specialinvoke $r329.<org.mozilla.javascript.Interpreter$CallFrame: void <init>(org.mozilla.javascript.Interpreter$1)>(null);

        $i286 = (int) $b213;

        $i288 = (int) -55;

        if $i286 != $i288 goto label169;

        r287 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

     label169:
        $i182 = $i186 + 2;

        staticinvoke <org.mozilla.javascript.Interpreter: void initFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],double[],int,int,org.mozilla.javascript.InterpretedFunction,org.mozilla.javascript.Interpreter$CallFrame,org.mozilla.javascript.Interpreter$CallFrame)>(r2, r285, $r197, $r239, $r240, $i182, i206, r286, r287, $r329);

        $i289 = (int) $b213;

        $i291 = (int) -55;

        if $i289 != $i291 goto label170;

        staticinvoke <org.mozilla.javascript.Interpreter: void exitFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object)>(r2, r231, null);

        goto label171;

     label170:
        r231.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop> = $i186;

        $i292 = (int) $b213;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp> = $i292;

     label171:
        r231 = $r329;

     label172:
        goto label006;

     label173:
        $z30 = $r196 instanceof org.mozilla.javascript.continuations.Continuation;

        if $z30 == 0 goto label177;

        $r330 = new org.mozilla.javascript.Interpreter$ContinuationJump;

        $r187 = (org.mozilla.javascript.continuations.Continuation) $r196;

        specialinvoke $r330.<org.mozilla.javascript.Interpreter$ContinuationJump: void <init>(org.mozilla.javascript.continuations.Continuation,org.mozilla.javascript.Interpreter$CallFrame)>($r187, r231);

        if i206 != 0 goto label174;

        $r330.<org.mozilla.javascript.Interpreter$ContinuationJump: java.lang.Object result> = r1;

        goto label175;

     label174:
        $i180 = $i186 + 2;

        $r188 = $r239[$i180];

        $r330.<org.mozilla.javascript.Interpreter$ContinuationJump: java.lang.Object result> = $r188;

        $i181 = $i186 + 2;

        $d65 = $r240[$i181];

        $r330.<org.mozilla.javascript.Interpreter$ContinuationJump: double resultDbl> = $d65;

     label175:
        r232 = $r330;

     label176:
        goto label297;

     label177:
        $z31 = $r196 instanceof org.mozilla.javascript.IdFunctionObject;

        if $z31 == 0 goto label178;

        r288 = (org.mozilla.javascript.IdFunctionObject) $r196;

        $z32 = staticinvoke <org.mozilla.javascript.continuations.Continuation: boolean isContinuationConstructor(org.mozilla.javascript.IdFunctionObject)>(r288);

        if $z32 == 0 goto label178;

        staticinvoke <org.mozilla.javascript.Interpreter: void captureContinuation(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int)>(r2, r231, $i186);

        goto label021;

     label178:
        $i179 = $i186 + 2;

        $r184 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object[] getArgsArray(java.lang.Object[],double[],int,int)>($r239, $r240, $i179, i206);

        $r185 = interfaceinvoke $r196.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r285, $r197, $r184);

        $r239[$i186] = $r185;

        goto label021;

     label179:
        if z0 == 0 goto label180;

        $i28 = r2.<org.mozilla.javascript.Context: int instructionCount>;

        $i29 = $i28 + 100;

        r2.<org.mozilla.javascript.Context: int instructionCount> = $i29;

     label180:
        $i30 = i210 - i206;

        i210 = $i30;

        $r97 = $r239[$i30];

        r289 = $r97;

        $z16 = $r97 instanceof org.mozilla.javascript.InterpretedFunction;

        if $z16 == 0 goto label182;

        r290 = (org.mozilla.javascript.InterpretedFunction) $r97;

        $r90 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpretedFunction fnOrScript>;

        $r92 = $r90.<org.mozilla.javascript.InterpretedFunction: java.lang.Object securityDomain>;

        $r91 = r290.<org.mozilla.javascript.InterpretedFunction: java.lang.Object securityDomain>;

        if $r92 != $r91 goto label182;

        $r93 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r94 = virtualinvoke r290.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.Scriptable createObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r2, $r93);

        $r331 = new org.mozilla.javascript.Interpreter$CallFrame;

        specialinvoke $r331.<org.mozilla.javascript.Interpreter$CallFrame: void <init>(org.mozilla.javascript.Interpreter$1)>(null);

        $r96 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $i27 = $i30 + 1;

        staticinvoke <org.mozilla.javascript.Interpreter: void initFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],double[],int,int,org.mozilla.javascript.InterpretedFunction,org.mozilla.javascript.Interpreter$CallFrame,org.mozilla.javascript.Interpreter$CallFrame)>(r2, $r96, $r94, $r239, $r240, $i27, i206, r290, r231, $r331);

        $r239[$i30] = $r94;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop> = $i30;

        $i293 = (int) $b213;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp> = $i293;

        r231 = $r331;

     label181:
        goto label006;

     label182:
        $z17 = $r97 instanceof org.mozilla.javascript.Function;

        if $z17 != 0 goto label184;

        if $r97 != r0 goto label183;

        $d29 = $r240[$i30];

        r289 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d29);

     label183:
        $r89 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object)>(r289);

        throw $r89;

     label184:
        r291 = (org.mozilla.javascript.Function) $r97;

        $z18 = r291 instanceof org.mozilla.javascript.IdFunctionObject;

        if $z18 == 0 goto label185;

        r292 = (org.mozilla.javascript.IdFunctionObject) r291;

        $z19 = staticinvoke <org.mozilla.javascript.continuations.Continuation: boolean isContinuationConstructor(org.mozilla.javascript.IdFunctionObject)>(r292);

        if $z19 == 0 goto label185;

        staticinvoke <org.mozilla.javascript.Interpreter: void captureContinuation(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int)>(r2, r231, $i30);

        goto label021;

     label185:
        $i26 = $i30 + 1;

        $r86 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object[] getArgsArray(java.lang.Object[],double[],int,int)>($r239, $r240, $i26, i206);

        $r87 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r88 = interfaceinvoke r291.<org.mozilla.javascript.Function: org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, $r87, $r86);

        $r239[$i30] = $r88;

        goto label021;

     label186:
        r293 = $r239[i210];

        if r293 != r0 goto label187;

        $d26 = $r240[i210];

        r293 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d26);

     label187:
        $r83 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String typeof(java.lang.Object)>(r293);

        $r239[i210] = $r83;

        goto label021;

     label188:
        i210 = i210 + 1;

        $r132 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r133 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String typeofName(org.mozilla.javascript.Scriptable,java.lang.String)>($r132, r233);

        $r239[i210] = $r133;

        goto label021;

     label189:
        i210 = i210 + 1;

        $r239[i210] = r233;

        goto label021;

     label190:
        i210 = i210 + 1;

        $r239[i210] = r0;

        $i138 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i139 = staticinvoke <org.mozilla.javascript.Interpreter: int getShort(byte[],int)>($r246, $i138);

        $d59 = (double) $i139;

        $r240[i210] = $d59;

        $i140 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i141 = $i140 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i141;

        goto label021;

     label191:
        i210 = i210 + 1;

        $r239[i210] = r0;

        $i142 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i143 = staticinvoke <org.mozilla.javascript.Interpreter: int getInt(byte[],int)>($r246, $i142);

        $d60 = (double) $i143;

        $r240[i210] = $d60;

        $i144 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i145 = $i144 + 4;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i145;

        goto label021;

     label192:
        i210 = i210 + 1;

        $r239[i210] = r0;

        $r73 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r74 = $r73.<org.mozilla.javascript.InterpreterData: double[] itsDoubleTable>;

        $d19 = $r74[i206];

        $r240[i210] = $d19;

        goto label021;

     label193:
        i210 = i210 + 1;

        $r75 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r76 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object name(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>(r2, $r75, r233);

        $r239[i210] = $r76;

        goto label021;

     label194:
        i210 = i210 + 1;

        $r122 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $i85 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b86 = $r246[$i85];

        $i294 = (int) $b86;

        $r123 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object nameIncrDecr(org.mozilla.javascript.Scriptable,java.lang.String,int)>($r122, r233, $i294);

        $r239[i210] = $r123;

        $i87 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i88 = $i87 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i88;

        goto label021;

     label195:
        $i173 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i174 = $i173 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i174;

        i206 = $r246[$i173];

     label196:
        $z4 = r231.<org.mozilla.javascript.Interpreter$CallFrame: boolean useActivation>;

        if $z4 != 0 goto label197;

        $r45 = $r239[i210];

        $r242[i206] = $r45;

        $d13 = $r240[i210];

        $r244[i206] = $d13;

        goto label021;

     label197:
        r294 = $r239[i210];

        if r294 != r0 goto label198;

        $d12 = $r240[i210];

        r294 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d12);

     label198:
        $r40 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r41 = $r40.<org.mozilla.javascript.InterpreterData: java.lang.String[] argNames>;

        $r44 = $r41[i206];

        r233 = $r44;

        $r43 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r42 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        interfaceinvoke $r43.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>($r44, $r42, r294);

        goto label021;

     label199:
        $i171 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i172 = $i171 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i172;

        i206 = $r246[$i171];

     label200:
        i210 = i210 + 1;

        $z5 = r231.<org.mozilla.javascript.Interpreter$CallFrame: boolean useActivation>;

        if $z5 != 0 goto label201;

        $r51 = $r242[i206];

        $r239[i210] = $r51;

        $d14 = $r244[i206];

        $r240[i210] = $d14;

        goto label021;

     label201:
        $r46 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r47 = $r46.<org.mozilla.javascript.InterpreterData: java.lang.String[] argNames>;

        r233 = $r47[i206];

        $r49 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r48 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r50 = interfaceinvoke $r49.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r233, $r48);

        $r239[i210] = $r50;

        goto label021;

     label202:
        i210 = i210 + 1;

        $i79 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        b219 = $r246[$i79];

        $z26 = r231.<org.mozilla.javascript.Interpreter$CallFrame: boolean useActivation>;

        if $z26 != 0 goto label209;

        $r239[i210] = r0;

        r295 = $r242[i206];

        if r295 != r0 goto label203;

        d78 = $r244[i206];

        goto label204;

     label203:
        d78 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r295);

        $r242[i206] = r0;

     label204:
        $b82 = b219 & 1;

        if $b82 != 0 goto label205;

        $d79 = d78 + 1.0;

        goto label206;

     label205:
        $d79 = d78 - 1.0;

     label206:
        $r244[i206] = $d79;

        $i84 = i210;

        $b83 = b219 & 2;

        if $b83 != 0 goto label207;

        $d80 = $d79;

        goto label208;

     label207:
        $d80 = d78;

     label208:
        $r240[$i84] = $d80;

        goto label210;

     label209:
        $r118 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r119 = $r118.<org.mozilla.javascript.InterpreterData: java.lang.String[] argNames>;

        r296 = $r119[i206];

        $r120 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $i295 = (int) b219;

        $r121 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object nameIncrDecr(org.mozilla.javascript.Scriptable,java.lang.String,int)>($r120, r296, $i295);

        $r239[i210] = $r121;

     label210:
        $i80 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i81 = $i80 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i81;

        goto label021;

     label211:
        i210 = i210 + 1;

        $r239[i210] = r0;

        $r240[i210] = 0.0;

        goto label021;

     label212:
        i210 = i210 + 1;

        $r239[i210] = r0;

        $r240[i210] = 1.0;

        goto label021;

     label213:
        i210 = i210 + 1;

        $r239[i210] = null;

        goto label021;

     label214:
        i210 = i210 + 1;

        $r72 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable thisObj>;

        $r239[i210] = $r72;

        goto label021;

     label215:
        i210 = i210 + 1;

        $r30 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpretedFunction fnOrScript>;

        $r239[i210] = $r30;

        goto label021;

     label216:
        i210 = i210 + 1;

        $r71 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r239[i210] = $r71;

        goto label021;

     label217:
        i210 = i210 + 1;

        $r70 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r239[i210] = $r70;

        goto label021;

     label218:
        i210 = i210 + 1;

        $r239[i210] = r1;

        goto label021;

     label219:
        r297 = $r239[i210];

        if r297 != r0 goto label220;

        $d42 = $r240[i210];

        r297 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d42);

     label220:
        $i297 = (int) -1;

        i210 = i210 + $i297;

        $r111 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r112 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable enterWith(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r297, r2, $r111);

        r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope> = $r112;

        goto label021;

     label221:
        $r109 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r110 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable leaveWith(org.mozilla.javascript.Scriptable)>($r109);

        r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope> = $r110;

        goto label021;

     label222:
        $i299 = (int) -1;

        i210 = i210 + $i299;

        $i6 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i206 = i206 + $i6;

        $r33 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r34 = $r33.<org.mozilla.javascript.InterpreterData: byte[] itsICode>;

        $i7 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b8 = $r34[$i7];

        if $b8 == 0 goto label223;

        $z52 = 1;

        goto label224;

     label223:
        $z52 = 0;

     label224:
        $i9 = i210 + 1;

        $r35 = $r239[$i9];

        $r39 = (java.lang.Throwable) $r35;

        if $z52 != 0 goto label225;

        r298 = null;

        goto label226;

     label225:
        $r36 = $r239[i206];

        r298 = (org.mozilla.javascript.Scriptable) $r36;

     label226:
        $r37 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r38 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newCatchScope(java.lang.Throwable,org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>($r39, r298, r233, r2, $r37);

        $r239[i206] = $r38;

        $i10 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i11 = $i10 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i11;

        goto label021;

     label227:
        r299 = $r239[i210];

        if r299 != r0 goto label228;

        $d11 = $r240[i210];

        r299 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d11);

     label228:
        $i301 = (int) -1;

        i210 = i210 + $i301;

        $i4 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        $i5 = i206 + $i4;

        i206 = $i5;

        $r32 = r299;

        $i302 = (int) $b213;

        if $i302 != 58 goto label229;

        $z53 = 1;

        goto label230;

     label229:
        $z53 = 0;

     label230:
        $r31 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object enumInit(java.lang.Object,org.mozilla.javascript.Context,boolean)>($r32, r2, $z53);

        $r239[$i5] = $r31;

        goto label021;

     label231:
        $i2 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i206 = i206 + $i2;

        r300 = $r239[i206];

        i210 = i210 + 1;

        $i3 = i210;

        $i303 = (int) $b213;

        if $i303 != 59 goto label232;

        $r301 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean enumNext(java.lang.Object)>(r300);

        goto label233;

     label232:
        $r301 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object enumId(java.lang.Object,org.mozilla.javascript.Context)>(r300, r2);

     label233:
        $r239[$i3] = $r301;

        goto label021;

     label234:
        r302 = $r239[i210];

        if r302 != r0 goto label235;

        $d9 = $r240[i210];

        r302 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d9);

     label235:
        $r17 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Ref specialRef(java.lang.Object,java.lang.String,org.mozilla.javascript.Context)>(r302, r233, r2);

        $r239[i210] = $r17;

        goto label021;

     label236:
        r303 = $r239[i210];

        if r303 != r0 goto label237;

        $d7 = $r240[i210];

        r303 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d7);

     label237:
        $i305 = (int) -1;

        i210 = i210 + $i305;

        $r13 = $r239[i210];

        r304 = $r13;

        if $r13 != r0 goto label238;

        $d6 = $r240[i210];

        r304 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d6);

     label238:
        $r12 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Ref memberRef(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,int)>(r304, r303, r2, i206);

        $r239[i210] = $r12;

        goto label021;

     label239:
        r305 = $r239[i210];

        if r305 != r0 goto label240;

        $d5 = $r240[i210];

        r305 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d5);

     label240:
        $i307 = (int) -1;

        i220 = i210 + $i307;

        $r11 = $r239[i220];

        r306 = $r11;

        if $r11 != r0 goto label241;

        $d4 = $r240[i220];

        r306 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d4);

     label241:
        $i309 = (int) -1;

        i210 = i220 + $i309;

        $r10 = $r239[i210];

        r307 = $r10;

        if $r10 != r0 goto label242;

        $d3 = $r240[i210];

        r307 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d3);

     label242:
        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Ref memberRef(java.lang.Object,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,int)>(r307, r306, r305, r2, i206);

        $r239[i210] = $r9;

        goto label021;

     label243:
        r308 = $r239[i210];

        if r308 != r0 goto label244;

        $d2 = $r240[i210];

        r308 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d2);

     label244:
        $r7 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Ref nameRef(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int)>(r308, r2, $r7, i206);

        $r239[i210] = $r8;

        goto label021;

     label245:
        r309 = $r239[i210];

        if r309 != r0 goto label246;

        $d1 = $r240[i210];

        r309 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d1);

     label246:
        $i311 = (int) -1;

        i210 = i210 + $i311;

        $r6 = $r239[i210];

        r310 = $r6;

        if $r6 != r0 goto label247;

        $d0 = $r240[i210];

        r310 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

     label247:
        $r4 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Ref nameRef(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int)>(r310, r309, r2, $r4, i206);

        $r239[i210] = $r5;

        goto label021;

     label248:
        $i101 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i206 = i206 + $i101;

        $r129 = $r239[i206];

        $r130 = (org.mozilla.javascript.Scriptable) $r129;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope> = $r130;

        goto label021;

     label249:
        $i102 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int localShift>;

        i206 = i206 + $i102;

        $r131 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r239[i206] = $r131;

        goto label021;

     label250:
        i210 = i210 + 1;

        $r145 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r144 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpretedFunction fnOrScript>;

        $r146 = staticinvoke <org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpretedFunction createFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpretedFunction,int)>(r2, $r145, $r144, i206);

        $r239[i210] = $r146;

        goto label021;

     label251:
        $r148 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r147 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpretedFunction fnOrScript>;

        staticinvoke <org.mozilla.javascript.Interpreter: void initFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpretedFunction,int)>(r2, $r148, $r147, i206);

        goto label021;

     label252:
        i210 = i210 + 1;

        $r65 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable[] scriptRegExps>;

        $r66 = $r65[i206];

        $r239[i210] = $r66;

        goto label021;

     label253:
        i210 = i210 + 1;

        $r164 = newarray (java.lang.Object)[i206];

        $r239[i210] = $r164;

        $r240[i210] = 0.0;

        goto label021;

     label254:
        r311 = $r239[i210];

        if r311 != r0 goto label255;

        $d63 = $r240[i210];

        r311 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d63);

     label255:
        $i313 = (int) -1;

        i210 = i210 + $i313;

        $d61 = $r240[i210];

        $i147 = (int) $d61;

        $r165 = $r239[i210];

        $r166 = (java.lang.Object[]) $r165;

        $r166[$i147] = r311;

        $i146 = $i147 + 1;

        $d62 = (double) $i146;

        $r240[i210] = $d62;

        goto label021;

     label256:
        $r167 = $r239[i210];

        r312 = (java.lang.Object[]) $r167;

        $i314 = (int) $b213;

        if $i314 != 64 goto label257;

        $r172 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r173 = $r172.<org.mozilla.javascript.InterpreterData: java.lang.Object[] literalIds>;

        $r174 = $r173[i206];

        r313 = (java.lang.Object[]) $r174;

        $r175 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        r314 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObjectLiteral(java.lang.Object[],java.lang.Object[],org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r313, r312, r2, $r175);

        goto label259;

     label257:
        r315 = null;

        $i315 = (int) $b213;

        $i317 = (int) -31;

        if $i315 != $i317 goto label258;

        $r169 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r170 = $r169.<org.mozilla.javascript.InterpreterData: java.lang.Object[] literalIds>;

        $r171 = $r170[i206];

        r315 = (int[]) $r171;

     label258:
        $r168 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        r314 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newArrayLiteral(java.lang.Object[],int[],org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r312, r315, r2, $r168);

     label259:
        $r239[i210] = r314;

        goto label021;

     label260:
        r316 = $r239[i210];

        if r316 != r0 goto label261;

        $d64 = $r240[i210];

        r316 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d64);

     label261:
        $i319 = (int) -1;

        i210 = i210 + $i319;

        $r176 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r177 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable enterDotQuery(java.lang.Object,org.mozilla.javascript.Scriptable)>(r316, $r176);

        r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope> = $r177;

        goto label021;

     label262:
        $z27 = staticinvoke <org.mozilla.javascript.Interpreter: boolean stack_boolean(org.mozilla.javascript.Interpreter$CallFrame,int)>(r231, i210);

        $r178 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r179 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object updateDotQuery(boolean,org.mozilla.javascript.Scriptable)>($z27, $r178);

        if $r179 == null goto label263;

        $r239[i210] = $r179;

        $r180 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        $r181 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable leaveDotQuery(org.mozilla.javascript.Scriptable)>($r180);

        r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope> = $r181;

        $i175 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i176 = $i175 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i176;

        goto label021;

     label263:
        $i321 = (int) -1;

        i210 = i210 + $i321;

        goto label287;

     label264:
        r317 = $r239[i210];

        if r317 != r0 goto label265;

        $d8 = $r240[i210];

        r317 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d8);

     label265:
        $r16 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setDefaultNamespace(java.lang.Object,org.mozilla.javascript.Context)>(r317, r2);

        $r239[i210] = $r16;

        goto label021;

     label266:
        r318 = $r239[i210];

        if r318 == r0 goto label021;

        $r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeAttributeValue(java.lang.Object,org.mozilla.javascript.Context)>(r318, r2);

        $r239[i210] = $r15;

        goto label021;

     label267:
        r319 = $r239[i210];

        if r319 == r0 goto label021;

        $r14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeTextValue(java.lang.Object,org.mozilla.javascript.Context)>(r319, r2);

        $r239[i210] = $r14;

        goto label021;

     label268:
        $i133 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pcSourceLineStart> = $i133;

        $r162 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        if $r162 == null goto label269;

        $i136 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i137 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>($r246, $i136);

        $r163 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        interfaceinvoke $r163.<org.mozilla.javascript.debug.DebugFrame: void onLineChange(org.mozilla.javascript.Context,int)>(r2, $i137);

     label269:
        $i134 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i135 = $i134 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i135;

        goto label021;

     label270:
        i206 = 0;

        goto label021;

     label271:
        i206 = 1;

        goto label021;

     label272:
        i206 = 2;

        goto label021;

     label273:
        i206 = 3;

        goto label021;

     label274:
        i206 = 4;

        goto label021;

     label275:
        i206 = 5;

        goto label021;

     label276:
        $i148 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b149 = $r246[$i148];

        $i322 = (int) $b149;

        i206 = 255 & $i322;

        $i150 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i151 = $i150 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i151;

        goto label021;

     label277:
        $i152 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        i206 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>($r246, $i152);

        $i153 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i154 = $i153 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i154;

        goto label021;

     label278:
        $i155 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        i206 = staticinvoke <org.mozilla.javascript.Interpreter: int getInt(byte[],int)>($r246, $i155);

        $i156 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i157 = $i156 + 4;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i157;

        goto label021;

     label279:
        r233 = $r248[0];

        goto label021;

     label280:
        r233 = $r248[1];

        goto label021;

     label281:
        r233 = $r248[2];

        goto label021;

     label282:
        r233 = $r248[3];

        goto label021;

     label283:
        $i158 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $b159 = $r246[$i158];

        $s323 = (short) $b159;

        $s160 = 255 & $s323;

        $i324 = (int) $s160;

        r233 = $r248[$i324];

        $i161 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i162 = $i161 + 1;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i162;

        goto label021;

     label284:
        $i163 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i164 = staticinvoke <org.mozilla.javascript.Interpreter: int getIndex(byte[],int)>($r246, $i163);

        r233 = $r248[$i164];

        $i165 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i166 = $i165 + 2;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i166;

        goto label021;

     label285:
        $i167 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i168 = staticinvoke <org.mozilla.javascript.Interpreter: int getInt(byte[],int)>($r246, $i167);

        r233 = $r248[$i168];

        $i169 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i170 = $i169 + 4;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i170;

        goto label021;

     label286:
        $r198 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        staticinvoke <org.mozilla.javascript.Interpreter: void dumpICode(org.mozilla.javascript.InterpreterData)>($r198);

        $r333 = new java.lang.RuntimeException;

        $r332 = new java.lang.StringBuffer;

        specialinvoke $r332.<java.lang.StringBuffer: void <init>()>();

        $r201 = virtualinvoke $r332.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown icode : ");

        $i325 = (int) $b213;

        $r202 = virtualinvoke $r201.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i325);

        $r203 = virtualinvoke $r202.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" @ pc : ");

        $i188 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i189 = $i188 - 1;

        $r204 = virtualinvoke $r203.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i189);

        $r205 = virtualinvoke $r204.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r333.<java.lang.RuntimeException: void <init>(java.lang.String)>($r205);

        throw $r333;

     label287:
        if z0 == 0 goto label288;

        staticinvoke <org.mozilla.javascript.Interpreter: void addInstructionCount(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int)>(r2, r231, 2);

     label288:
        $i50 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i51 = staticinvoke <org.mozilla.javascript.Interpreter: int getShort(byte[],int)>($r246, $i50);

        if $i51 == 0 goto label289;

        $i56 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i55 = $i51 - 1;

        $i57 = $i56 + $i55;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i57;

        goto label290;

     label289:
        $r106 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $r107 = $r106.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.UintMap longJumps>;

        $i52 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i53 = virtualinvoke $r107.<org.mozilla.javascript.UintMap: int getExistingInt(int)>($i52);

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = $i53;

     label290:
        if z0 == 0 goto label021;

        $i54 = r231.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        r231.<org.mozilla.javascript.Interpreter$CallFrame: int pcPrevBranch> = $i54;

        goto label021;

     label291:
        staticinvoke <org.mozilla.javascript.Interpreter: void exitFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object)>(r2, r231, null);

        $r320 = r231.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object result>;

        r234 = $r320;

        $d81 = r231.<org.mozilla.javascript.Interpreter$CallFrame: double resultDbl>;

        d67 = $d81;

        $r321 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        if $r321 == null goto label294;

        r231 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        $z3 = r231.<org.mozilla.javascript.Interpreter$CallFrame: boolean frozen>;

        if $z3 == 0 goto label292;

        r231 = virtualinvoke r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame cloneFrozen()>();

     label292:
        staticinvoke <org.mozilla.javascript.Interpreter: void setCallResult(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object,double)>(r231, $r320, $d81);

        r234 = null;

     label293:
        goto label006;

     label294:
        goto label321;

     label295:
        $r228 := @caughtexception;

        if r232 == null goto label296;

        $r229 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r228.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r229);

        $r334 = new java.lang.IllegalStateException;

        specialinvoke $r334.<java.lang.IllegalStateException: void <init>()>();

        throw $r334;

     label296:
        r232 = $r228;

     label297:
        if r232 != null goto label298;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label298:
        r322 = null;

        $z6 = r232 instanceof org.mozilla.javascript.JavaScriptException;

        if $z6 == 0 goto label299;

        b221 = 2;

        b223 = 2;

        b222 = 2;

        goto label304;

     label299:
        $z7 = r232 instanceof org.mozilla.javascript.EcmaError;

        if $z7 == 0 goto label300;

        b221 = 2;

        b223 = 2;

        b222 = 2;

        goto label304;

     label300:
        $z8 = r232 instanceof org.mozilla.javascript.EvaluatorException;

        if $z8 == 0 goto label301;

        b221 = 2;

        b223 = 2;

        b222 = 2;

        goto label304;

     label301:
        $z9 = r232 instanceof java.lang.RuntimeException;

        if $z9 == 0 goto label302;

        b221 = 1;

        b223 = 1;

        b222 = 1;

        goto label304;

     label302:
        $z10 = r232 instanceof java.lang.Error;

        if $z10 == 0 goto label303;

        b221 = 0;

        b223 = 0;

        b222 = 0;

        goto label304;

     label303:
        b221 = 1;

        b223 = 1;

        b222 = 1;

        r322 = (org.mozilla.javascript.Interpreter$ContinuationJump) r232;

     label304:
        if z0 == 0 goto label309;

     label305:
        staticinvoke <org.mozilla.javascript.Interpreter: void addInstructionCount(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int)>(r2, r231, 100);

     label306:
        goto label309;

     label307:
        $r227 := @caughtexception;

        r232 = $r227;

        b221 = 1;

        b223 = 1;

        b222 = 1;

        goto label309;

     label308:
        $r226 := @caughtexception;

        r232 = $r226;

        r322 = null;

        b221 = 0;

        b223 = 0;

        b222 = 0;

     label309:
        $r323 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        if $r323 == null goto label313;

        $z11 = r232 instanceof java.lang.RuntimeException;

        if $z11 == 0 goto label313;

        r324 = (java.lang.RuntimeException) r232;

     label310:
        $r59 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        interfaceinvoke $r59.<org.mozilla.javascript.debug.DebugFrame: void onExceptionThrown(org.mozilla.javascript.Context,java.lang.Throwable)>(r2, r324);

     label311:
        goto label313;

     label312:
        $r225 := @caughtexception;

        r232 = $r225;

        r322 = null;

        b221 = 0;

        b223 = 0;

        b222 = 0;

     label313:
        if b223 == 0 goto label316;

        if b222 == 2 goto label314;

        $z54 = 1;

        goto label315;

     label314:
        $z54 = 0;

     label315:
        $i14 = staticinvoke <org.mozilla.javascript.Interpreter: int getExceptionHandler(org.mozilla.javascript.Interpreter$CallFrame,boolean)>(r231, $z54);

        i206 = $i14;

        if $i14 < 0 goto label316;

        goto label006;

     label316:
        staticinvoke <org.mozilla.javascript.Interpreter: void exitFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object)>(r2, r231, r232);

        $r58 = r231.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        r231 = $r58;

        if $r58 != null goto label317;

        goto label318;

     label317:
        if r322 == null goto label313;

        $r55 = r322.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame branchFrame>;

        if $r55 != $r58 goto label313;

        $i327 = (int) -1;

        i206 = $i327;

        goto label006;

     label318:
        if r322 == null goto label321;

        $r56 = r322.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame branchFrame>;

        if $r56 == null goto label319;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label319:
        $r57 = r322.<org.mozilla.javascript.Interpreter$ContinuationJump: org.mozilla.javascript.Interpreter$CallFrame capturedFrame>;

        if $r57 == null goto label320;

        $i329 = (int) -1;

        i206 = $i329;

        goto label006;

     label320:
        r234 = r322.<org.mozilla.javascript.Interpreter$ContinuationJump: java.lang.Object result>;

        d67 = r322.<org.mozilla.javascript.Interpreter$ContinuationJump: double resultDbl>;

        r232 = null;

        goto label321;

     label321:
        $r325 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        if $r325 == null goto label322;

        $r27 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        $i1 = virtualinvoke $r27.<org.mozilla.javascript.ObjArray: int size()>();

        if $i1 == 0 goto label322;

        $r28 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations>;

        $r29 = virtualinvoke $r28.<org.mozilla.javascript.ObjArray: java.lang.Object pop()>();

        r2.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame> = $r29;

        goto label323;

     label322:
        r2.<org.mozilla.javascript.Context: java.lang.Object lastInterpreterFrame> = null;

        r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjArray previousInterpreterInvocations> = null;

     label323:
        if r232 == null goto label325;

        $z2 = r232 instanceof java.lang.RuntimeException;

        if $z2 == 0 goto label324;

        $r26 = (java.lang.RuntimeException) r232;

        throw $r26;

     label324:
        $r25 = (java.lang.Error) r232;

        throw $r25;

     label325:
        if r234 == r0 goto label326;

        $r326 = r234;

        goto label327;

     label326:
        $r326 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d67);

     label327:
        return $r326;

        catch java.lang.Throwable from label006 to label024 with label295;
        catch java.lang.Throwable from label025 to label026 with label295;
        catch java.lang.Throwable from label027 to label087 with label295;
        catch java.lang.Throwable from label088 to label172 with label295;
        catch java.lang.Throwable from label173 to label176 with label295;
        catch java.lang.Throwable from label177 to label181 with label295;
        catch java.lang.Throwable from label182 to label293 with label295;
        catch java.lang.RuntimeException from label305 to label306 with label307;
        catch java.lang.Error from label305 to label306 with label308;
        catch java.lang.Throwable from label310 to label311 with label312;
    }

    private static void initFrame(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[], double[], int, int, org.mozilla.javascript.InterpretedFunction, org.mozilla.javascript.Interpreter$CallFrame, org.mozilla.javascript.Interpreter$CallFrame)
    {
        org.mozilla.javascript.Scriptable[] r25;
        boolean $z0, $z1, $z2, z3, z4;
        org.mozilla.javascript.debug.Debugger $r3, $r16;
        org.mozilla.javascript.Scriptable r4, r5, r21;
        org.mozilla.javascript.InterpretedFunction r0;
        java.lang.Object[] $r7, $r9, $r14, r18, r26;
        org.mozilla.javascript.InterpreterData[] $r15, $r22, $r23;
        double[] r19, r27;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, i26, $i27, i28;
        org.mozilla.javascript.InterpreterData r1, $r6, r24;
        org.mozilla.javascript.Interpreter$CallFrame r8, r10;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.EvaluatorException $r13;
        org.mozilla.javascript.debug.DebugFrame $r17, r20;
        java.lang.Object $r11, $r12;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r5 := @parameter2: org.mozilla.javascript.Scriptable;

        r18 := @parameter3: java.lang.Object[];

        r19 := @parameter4: double[];

        i11 := @parameter5: int;

        i0 := @parameter6: int;

        r0 := @parameter7: org.mozilla.javascript.InterpretedFunction;

        r10 := @parameter8: org.mozilla.javascript.Interpreter$CallFrame;

        r8 := @parameter9: org.mozilla.javascript.Interpreter$CallFrame;

        r1 = r0.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpreterData idata>;

        z3 = r1.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        r20 = null;

        $r3 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.debug.Debugger debugger>;

        if $r3 == null goto label01;

        $r16 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.debug.Debugger debugger>;

        $r17 = interfaceinvoke $r16.<org.mozilla.javascript.debug.Debugger: org.mozilla.javascript.debug.DebugFrame getFrame(org.mozilla.javascript.Context,org.mozilla.javascript.debug.DebuggableScript)>(r2, r1);

        r20 = $r17;

        if $r17 == null goto label01;

        z3 = 1;

     label01:
        if z3 == 0 goto label03;

        if r19 == null goto label02;

        r18 = staticinvoke <org.mozilla.javascript.Interpreter: java.lang.Object[] getArgsArray(java.lang.Object[],double[],int,int)>(r18, r19, i11, i0);

     label02:
        i11 = 0;

        r19 = null;

     label03:
        $i12 = r1.<org.mozilla.javascript.InterpreterData: int itsFunctionType>;

        if $i12 == 0 goto label06;

        $z2 = r1.<org.mozilla.javascript.InterpreterData: boolean useDynamicScope>;

        if $z2 != 0 goto label04;

        r21 = virtualinvoke r0.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.Scriptable getParentScope()>();

        goto label05;

     label04:
        r21 = r4;

     label05:
        if z3 == 0 goto label07;

        r21 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable createFunctionActivation(org.mozilla.javascript.NativeFunction,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r21, r18);

        goto label07;

     label06:
        r21 = r4;

        $r6 = r0.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpreterData idata>;

        $z0 = $r6.<org.mozilla.javascript.InterpreterData: boolean evalScriptFlag>;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void initScript(org.mozilla.javascript.NativeFunction,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean)>(r0, r5, r2, r4, $z0);

     label07:
        $r22 = r1.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.InterpreterData[] itsNestedFunctions>;

        if $r22 == null goto label11;

        $i9 = r1.<org.mozilla.javascript.InterpreterData: int itsFunctionType>;

        if $i9 == 0 goto label08;

        $z1 = r1.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        if $z1 != 0 goto label08;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label08:
        i13 = 0;

     label09:
        $r23 = r1.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.InterpreterData[] itsNestedFunctions>;

        $i14 = lengthof $r23;

        if i13 >= $i14 goto label11;

        $r15 = r1.<org.mozilla.javascript.InterpreterData: org.mozilla.javascript.InterpreterData[] itsNestedFunctions>;

        r24 = $r15[i13];

        $i10 = r24.<org.mozilla.javascript.InterpreterData: int itsFunctionType>;

        if $i10 != 1 goto label10;

        staticinvoke <org.mozilla.javascript.Interpreter: void initFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpretedFunction,int)>(r2, r21, r0, i13);

     label10:
        i13 = i13 + 1;

        goto label09;

     label11:
        r25 = null;

        $r7 = r1.<org.mozilla.javascript.InterpreterData: java.lang.Object[] itsRegExpLiterals>;

        if $r7 == null goto label13;

        $i8 = r1.<org.mozilla.javascript.InterpreterData: int itsFunctionType>;

        if $i8 == 0 goto label12;

        r25 = r0.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.Scriptable[] functionRegExps>;

        goto label13;

     label12:
        r25 = virtualinvoke r0.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.Scriptable[] createRegExpWraps(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r2, r21);

     label13:
        $i15 = r1.<org.mozilla.javascript.InterpreterData: int itsMaxVars>;

        $i16 = r1.<org.mozilla.javascript.InterpreterData: int itsMaxLocals>;

        $i17 = $i15 + $i16;

        $i18 = $i17 - 1;

        $i19 = r1.<org.mozilla.javascript.InterpreterData: int itsMaxFrameArray>;

        $i20 = r1.<org.mozilla.javascript.InterpreterData: int itsMaxStack>;

        $i21 = $i18 + $i20;

        $i22 = $i21 + 1;

        if $i19 == $i22 goto label14;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label14:
        $r9 = r8.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        if $r9 == null goto label15;

        $r14 = r8.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $i7 = lengthof $r14;

        if $i19 > $i7 goto label15;

        z4 = 1;

        r26 = r8.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        r27 = r8.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl>;

        goto label16;

     label15:
        z4 = 0;

        r26 = newarray (java.lang.Object)[$i19];

        r27 = newarray (double)[$i19];

     label16:
        $i23 = r1.<org.mozilla.javascript.InterpreterData: int argCount>;

        i24 = $i23;

        if $i23 <= i0 goto label17;

        i24 = i0;

     label17:
        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame> = r10;

        if r10 != null goto label18;

        $i25 = 0;

        goto label19;

     label18:
        $i1 = r10.<org.mozilla.javascript.Interpreter$CallFrame: int frameIndex>;

        $i25 = $i1 + 1;

     label19:
        r8.<org.mozilla.javascript.Interpreter$CallFrame: int frameIndex> = $i25;

        $i2 = r8.<org.mozilla.javascript.Interpreter$CallFrame: int frameIndex>;

        $i3 = virtualinvoke r2.<org.mozilla.javascript.Context: int getMaximumInterpreterStackDepth()>();

        if $i2 <= $i3 goto label20;

        $r13 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("Exceeded maximum stack depth");

        throw $r13;

     label20:
        r8.<org.mozilla.javascript.Interpreter$CallFrame: boolean frozen> = 0;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpretedFunction fnOrScript> = r0;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata> = r1;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack> = r26;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl> = r27;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame varSource> = r8;

        $i4 = r1.<org.mozilla.javascript.InterpreterData: int itsMaxVars>;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: int localShift> = $i4;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: int emptyStackTop> = $i18;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame> = r20;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: boolean useActivation> = z3;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable thisObj> = r5;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable[] scriptRegExps> = r25;

        $r11 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object result> = $r11;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: int pc> = 0;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: int pcPrevBranch> = 0;

        $i5 = r1.<org.mozilla.javascript.InterpreterData: int firstLinePC>;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: int pcSourceLineStart> = $i5;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope> = r21;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop> = $i18;

        r8.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp> = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, i11, r26, 0, i24);

        if r19 == null goto label21;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, i11, r27, 0, i24);

     label21:
        i26 = i24;

     label22:
        $i27 = r1.<org.mozilla.javascript.InterpreterData: int itsMaxVars>;

        if i26 == $i27 goto label23;

        $r12 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        r26[i26] = $r12;

        i26 = i26 + 1;

        goto label22;

     label23:
        if z4 == 0 goto label25;

        i28 = $i18 + 1;

     label24:
        $i6 = lengthof r26;

        if i28 == $i6 goto label25;

        r26[i28] = null;

        i28 = i28 + 1;

        goto label24;

     label25:
        staticinvoke <org.mozilla.javascript.Interpreter: void enterFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],boolean)>(r2, r8, r18, 0);

        return;
    }

    private static boolean isFrameEnterExitRequired(org.mozilla.javascript.Interpreter$CallFrame)
    {
        org.mozilla.javascript.Interpreter$CallFrame r0;
        org.mozilla.javascript.debug.DebugFrame $r1;
        org.mozilla.javascript.InterpreterData $r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.mozilla.javascript.Interpreter$CallFrame;

        $r1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        if $r1 != null goto label1;

        $r2 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $z0 = $r2.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static void enterFrame(org.mozilla.javascript.Context, org.mozilla.javascript.Interpreter$CallFrame, java.lang.Object[], boolean)
    {
        java.lang.Object[] r4;
        org.mozilla.javascript.InterpreterData $r1;
        boolean z0, z1, z2, $z4, $z5, $z6;
        org.mozilla.javascript.Interpreter$CallFrame r0, $r8, $r9;
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.Scriptable $r5, $r7, $r10, $r11, r12;
        org.mozilla.javascript.debug.DebugFrame $r2, $r6;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Interpreter$CallFrame;

        r4 := @parameter2: java.lang.Object[];

        z2 := @parameter3: boolean;

        $r1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        z0 = $r1.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        $r2 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        if $r2 == null goto label01;

        $z6 = 1;

        $z5 = 1;

        goto label02;

     label01:
        $z6 = 0;

        $z5 = 0;

     label02:
        z1 = $z5;

        if z0 != 0 goto label03;

        if $z6 == 0 goto label10;

     label03:
        $r11 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        r12 = $r11;

        if $r11 != null goto label04;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        goto label08;

     label04:
        if z2 == 0 goto label08;

     label05:
        $z4 = r12 instanceof org.mozilla.javascript.NativeCall;

        if $z4 == 0 goto label06;

        goto label08;

     label06:
        $r7 = interfaceinvoke r12.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        r12 = $r7;

        if $r7 == null goto label07;

        $r8 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        if $r8 == null goto label05;

        $r9 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        $r10 = $r9.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable scope>;

        if $r10 != $r7 goto label05;

     label07:
        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        goto label08;

     label08:
        if z1 == 0 goto label09;

        $r6 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        $r5 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Scriptable thisObj>;

        interfaceinvoke $r6.<org.mozilla.javascript.debug.DebugFrame: void onEnter(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r12, $r5, r4);

     label09:
        if z0 == 0 goto label10;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void enterActivationFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r3, r12);

     label10:
        return;
    }

    private static void exitFrame(org.mozilla.javascript.Context, org.mozilla.javascript.Interpreter$CallFrame, java.lang.Object)
    {
        java.lang.Throwable $r8;
        org.mozilla.javascript.UniqueTag $r5;
        org.mozilla.javascript.InterpreterData $r1;
        boolean $z0, $z1;
        double d0;
        java.io.PrintStream $r9, $r10;
        org.mozilla.javascript.Interpreter$CallFrame r0;
        org.mozilla.javascript.Context r6;
        org.mozilla.javascript.Interpreter$ContinuationJump r4;
        org.mozilla.javascript.debug.DebugFrame $r2, $r7, $r12;
        java.lang.Object r3, r11;

        r6 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Interpreter$CallFrame;

        r3 := @parameter2: java.lang.Object;

        $r1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.InterpreterData idata>;

        $z0 = $r1.<org.mozilla.javascript.InterpreterData: boolean itsNeedsActivation>;

        if $z0 == 0 goto label01;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void exitActivationFunction(org.mozilla.javascript.Context)>(r6);

     label01:
        $r2 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        if $r2 == null goto label11;

     label02:
        $z1 = r3 instanceof java.lang.Throwable;

        if $z1 == 0 goto label03;

        $r7 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        interfaceinvoke $r7.<org.mozilla.javascript.debug.DebugFrame: void onExit(org.mozilla.javascript.Context,boolean,java.lang.Object)>(r6, 1, r3);

        goto label09;

     label03:
        r4 = (org.mozilla.javascript.Interpreter$ContinuationJump) r3;

        if r4 != null goto label04;

        r11 = r0.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object result>;

        goto label05;

     label04:
        r11 = r4.<org.mozilla.javascript.Interpreter$ContinuationJump: java.lang.Object result>;

     label05:
        $r5 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r11 != $r5 goto label08;

        if r4 != null goto label06;

        d0 = r0.<org.mozilla.javascript.Interpreter$CallFrame: double resultDbl>;

        goto label07;

     label06:
        d0 = r4.<org.mozilla.javascript.Interpreter$ContinuationJump: double resultDbl>;

     label07:
        r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d0);

     label08:
        $r12 = r0.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.debug.DebugFrame debuggerFrame>;

        interfaceinvoke $r12.<org.mozilla.javascript.debug.DebugFrame: void onExit(org.mozilla.javascript.Context,boolean,java.lang.Object)>(r6, 0, r11);

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("RHINO USAGE WARNING: onExit terminated with exception");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r10);

     label11:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
    }

    private static void setCallResult(org.mozilla.javascript.Interpreter$CallFrame, java.lang.Object, double)
    {
        org.mozilla.javascript.Interpreter$CallFrame r0;
        java.lang.Object[] $r2, $r3;
        double[] $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1;
        boolean $z0;
        double d0;

        r0 := @parameter0: org.mozilla.javascript.Interpreter$CallFrame;

        r1 := @parameter1: java.lang.Object;

        d0 := @parameter2: double;

        $i0 = r0.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp>;

        if $i0 != 37 goto label1;

        $r3 = r0.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $i3 = r0.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop>;

        $r3[$i3] = r1;

        $r4 = r0.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl>;

        $i4 = r0.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop>;

        $r4[$i4] = d0;

        goto label3;

     label1:
        $i1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp>;

        if $i1 != 30 goto label2;

        $z0 = r1 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label3;

        $r2 = r0.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $i2 = r0.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop>;

        $r2[$i2] = r1;

        goto label3;

     label2:
        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label3:
        r0.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp> = 0;

        return;
    }

    private static void captureContinuation(org.mozilla.javascript.Context, org.mozilla.javascript.Interpreter$CallFrame, int)
    {
        java.lang.Object[] $r5, $r6, $r7, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;
        org.mozilla.javascript.Interpreter$CallFrame r3, $r4, r9;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.continuations.Continuation $r0;
        org.mozilla.javascript.Scriptable $r2;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Interpreter$CallFrame;

        i0 := @parameter2: int;

        $r0 = new org.mozilla.javascript.continuations.Continuation;

        specialinvoke $r0.<org.mozilla.javascript.continuations.Continuation: void <init>()>();

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable getTopCallScope(org.mozilla.javascript.Context)>(r1);

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void setObjectProtoAndParent(org.mozilla.javascript.ScriptableObject,org.mozilla.javascript.Scriptable)>($r0, $r2);

        r9 = r3.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

     label1:
        if r9 == null goto label6;

        $z0 = r9.<org.mozilla.javascript.Interpreter$CallFrame: boolean frozen>;

        if $z0 != 0 goto label6;

        r9.<org.mozilla.javascript.Interpreter$CallFrame: boolean frozen> = 1;

        $i1 = r9.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop>;

        i6 = $i1 + 1;

     label2:
        $r6 = r9.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $i2 = lengthof $r6;

        if i6 == $i2 goto label3;

        $r8 = r9.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $r8[i6] = null;

        i6 = i6 + 1;

        goto label2;

     label3:
        $i3 = r9.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp>;

        if $i3 != 37 goto label4;

        $r7 = r9.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $i5 = r9.<org.mozilla.javascript.Interpreter$CallFrame: int savedStackTop>;

        $r7[$i5] = null;

        goto label5;

     label4:
        $i4 = r9.<org.mozilla.javascript.Interpreter$CallFrame: int savedCallOp>;

        if $i4 == 30 goto label5;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label5:
        r9 = r9.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        goto label1;

     label6:
        $r4 = r3.<org.mozilla.javascript.Interpreter$CallFrame: org.mozilla.javascript.Interpreter$CallFrame parentFrame>;

        virtualinvoke $r0.<org.mozilla.javascript.continuations.Continuation: void initImplementation(java.lang.Object)>($r4);

        $r5 = r3.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        $r5[i0] = $r0;

        return;
    }

    private static int stack_int32(org.mozilla.javascript.Interpreter$CallFrame, int)
    {
        org.mozilla.javascript.Interpreter$CallFrame r0;
        java.lang.Object[] $r1;
        double[] $r4;
        org.mozilla.javascript.UniqueTag $r3;
        int i0, $i1;
        java.lang.Object r2;
        double d0;

        r0 := @parameter0: org.mozilla.javascript.Interpreter$CallFrame;

        i0 := @parameter1: int;

        $r1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        r2 = $r1[i0];

        $r3 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r2 != $r3 goto label1;

        $r4 = r0.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl>;

        d0 = $r4[i0];

        goto label2;

     label1:
        d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r2);

     label2:
        $i1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(double)>(d0);

        return $i1;
    }

    private static double stack_double(org.mozilla.javascript.Interpreter$CallFrame, int)
    {
        org.mozilla.javascript.Interpreter$CallFrame r0;
        java.lang.Object[] $r1;
        double[] $r4;
        org.mozilla.javascript.UniqueTag $r3;
        int i0;
        java.lang.Object r2;
        double $d0, $d1;

        r0 := @parameter0: org.mozilla.javascript.Interpreter$CallFrame;

        i0 := @parameter1: int;

        $r1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        r2 = $r1[i0];

        $r3 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r2 == $r3 goto label1;

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r2);

        return $d1;

     label1:
        $r4 = r0.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl>;

        $d0 = $r4[i0];

        return $d0;
    }

    private static boolean stack_boolean(org.mozilla.javascript.Interpreter$CallFrame, int)
    {
        java.lang.Object[] $r1;
        double[] $r9;
        org.mozilla.javascript.UniqueTag $r5;
        byte $b1, $b2, $b3, $b4;
        int i0;
        java.lang.Boolean $r3, $r4, $r7;
        java.lang.Number $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0, d1;
        org.mozilla.javascript.Interpreter$CallFrame r0;
        java.lang.Object r2, $r6;

        r0 := @parameter0: org.mozilla.javascript.Interpreter$CallFrame;

        i0 := @parameter1: int;

        $r1 = r0.<org.mozilla.javascript.Interpreter$CallFrame: java.lang.Object[] stack>;

        r2 = $r1[i0];

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if r2 != $r3 goto label01;

        return 1;

     label01:
        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if r2 != $r4 goto label02;

        return 0;

     label02:
        $r5 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r2 != $r5 goto label05;

        $r9 = r0.<org.mozilla.javascript.Interpreter$CallFrame: double[] sDbl>;

        d1 = $r9[i0];

        $b3 = d1 cmpl d1;

        if $b3 != 0 goto label03;

        $b4 = d1 cmpl 0.0;

        if $b4 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        return $z4;

     label05:
        if r2 == null goto label06;

        $r6 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r2 != $r6 goto label07;

     label06:
        return 0;

     label07:
        $z0 = r2 instanceof java.lang.Number;

        if $z0 == 0 goto label10;

        $r8 = (java.lang.Number) r2;

        $d0 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        $b1 = $d0 cmpl $d0;

        if $b1 != 0 goto label08;

        $b2 = $d0 cmpl 0.0;

        if $b2 == 0 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        return $z5;

     label10:
        $z1 = r2 instanceof java.lang.Boolean;

        if $z1 == 0 goto label11;

        $r7 = (java.lang.Boolean) r2;

        $z3 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;

     label11:
        $z2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>(r2);

        return $z2;
    }

    private static void do_add(java.lang.Object[], double[], int, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.UniqueTag $r1, $r2, $r5, $r13, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11;
        java.lang.Object[] r0;
        double[] r6;
        int i0, $i1, $i2;
        java.lang.String $r9, $r10, $r11, $r12, $r15, $r16, $r17, r23, r24, r27;
        java.lang.Number $r7, $r8, $r14, $r18;
        double $d0, $d1, $d2, $d3, d4, $d5, d6, $d7, $d8;
        org.mozilla.javascript.Context r3;
        java.lang.Object $r4, $r19, r21, r22, r25, r26;

        r0 := @parameter0: java.lang.Object[];

        r6 := @parameter1: double[];

        i0 := @parameter2: int;

        r3 := @parameter3: org.mozilla.javascript.Context;

        $i1 = i0 + 1;

        r21 = r0[$i1];

        r22 = r0[i0];

        $r1 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r21 != $r1 goto label02;

        $i2 = i0 + 1;

        d4 = r6[$i2];

        $r20 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r22 != $r20 goto label01;

        $d2 = r6[i0];

        $d3 = $d2 + d4;

        r6[i0] = $d3;

        return;

     label01:
        z9 = 1;

        z11 = 1;

        z10 = 1;

        goto label13;

     label02:
        $r2 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r22 != $r2 goto label03;

        d4 = r6[i0];

        r22 = r21;

        z9 = 0;

        z11 = 0;

        z10 = 0;

        goto label13;

     label03:
        $z0 = r22 instanceof org.mozilla.javascript.Scriptable;

        if $z0 != 0 goto label04;

        $z1 = r21 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label05;

     label04:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object add(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r22, r21, r3);

        r0[i0] = $r4;

        goto label12;

     label05:
        $z2 = r22 instanceof java.lang.String;

        if $z2 == 0 goto label06;

        r23 = (java.lang.String) r22;

        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r21);

        $r12 = virtualinvoke r23.<java.lang.String: java.lang.String concat(java.lang.String)>($r11);

        r0[i0] = $r12;

        goto label12;

     label06:
        $z3 = r21 instanceof java.lang.String;

        if $z3 == 0 goto label07;

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r22);

        r24 = (java.lang.String) r21;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>(r24);

        r0[i0] = $r10;

        goto label12;

     label07:
        $z4 = r22 instanceof java.lang.Number;

        if $z4 == 0 goto label08;

        $r8 = (java.lang.Number) r22;

        $d5 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        goto label09;

     label08:
        $d5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r22);

     label09:
        d6 = $d5;

        $z5 = r21 instanceof java.lang.Number;

        if $z5 == 0 goto label10;

        $r7 = (java.lang.Number) r21;

        $d7 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        goto label11;

     label10:
        $d7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r21);

     label11:
        $r5 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        r0[i0] = $r5;

        $d0 = d6 + $d7;

        r6[i0] = $d0;

     label12:
        return;

     label13:
        $z6 = r22 instanceof org.mozilla.javascript.Scriptable;

        if $z6 == 0 goto label15;

        $r18 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d4);

        r25 = $r18;

        if z11 != 0 goto label14;

        r26 = r22;

        r22 = $r18;

        r25 = r26;

     label14:
        $r19 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object add(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r22, r25, r3);

        r0[i0] = $r19;

        goto label20;

     label15:
        $z7 = r22 instanceof java.lang.String;

        if $z7 == 0 goto label17;

        r27 = (java.lang.String) r22;

        $r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>(d4);

        if z10 == 0 goto label16;

        $r17 = virtualinvoke r27.<java.lang.String: java.lang.String concat(java.lang.String)>($r15);

        r0[i0] = $r17;

        goto label20;

     label16:
        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String concat(java.lang.String)>(r27);

        r0[i0] = $r16;

        goto label20;

     label17:
        $z8 = r22 instanceof java.lang.Number;

        if $z8 == 0 goto label18;

        $r14 = (java.lang.Number) r22;

        $d8 = virtualinvoke $r14.<java.lang.Number: double doubleValue()>();

        goto label19;

     label18:
        $d8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r22);

     label19:
        $r13 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        r0[i0] = $r13;

        $d1 = $d8 + d4;

        r6[i0] = $d1;

     label20:
        return;
    }

    private static java.lang.Object[] getArgsArray(java.lang.Object[], double[], int, int)
    {
        java.lang.Object[] r0, r1, $r4;
        double[] r3;
        org.mozilla.javascript.UniqueTag $r2;
        int i0, i1, i2;
        java.lang.Object r5;
        double $d0;

        r1 := @parameter0: java.lang.Object[];

        r3 := @parameter1: double[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        if i0 != 0 goto label1;

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        return $r4;

     label1:
        r0 = newarray (java.lang.Object)[i0];

        i2 = 0;

     label2:
        if i2 == i0 goto label4;

        r5 = r1[i1];

        $r2 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag DOUBLE_MARK>;

        if r5 != $r2 goto label3;

        $d0 = r3[i1];

        r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

     label3:
        r0[i2] = r5;

        i2 = i2 + 1;

        i1 = i1 + 1;

        goto label2;

     label4:
        return r0;
    }

    private static void addInstructionCount(org.mozilla.javascript.Context, org.mozilla.javascript.Interpreter$CallFrame, int)
    {
        org.mozilla.javascript.Interpreter$CallFrame r1;
        org.mozilla.javascript.Context r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Interpreter$CallFrame;

        i2 := @parameter2: int;

        $i5 = r0.<org.mozilla.javascript.Context: int instructionCount>;

        $i1 = r1.<org.mozilla.javascript.Interpreter$CallFrame: int pc>;

        $i0 = r1.<org.mozilla.javascript.Interpreter$CallFrame: int pcPrevBranch>;

        $i3 = $i1 - $i0;

        $i4 = $i3 + i2;

        $i6 = $i5 + $i4;

        r0.<org.mozilla.javascript.Context: int instructionCount> = $i6;

        $i8 = r0.<org.mozilla.javascript.Context: int instructionCount>;

        $i7 = r0.<org.mozilla.javascript.Context: int instructionThreshold>;

        if $i8 <= $i7 goto label1;

        $i9 = r0.<org.mozilla.javascript.Context: int instructionCount>;

        virtualinvoke r0.<org.mozilla.javascript.Context: void observeInstructionCount(int)>($i9);

        r0.<org.mozilla.javascript.Context: int instructionCount> = 0;

     label1:
        return;
    }

    static void <clinit>()
    {
        <org.mozilla.javascript.Interpreter: int ECF_TAIL> = 1;

        <org.mozilla.javascript.Interpreter: int EXCEPTION_SLOT_SIZE> = 6;

        <org.mozilla.javascript.Interpreter: int EXCEPTION_SCOPE_SLOT> = 5;

        <org.mozilla.javascript.Interpreter: int EXCEPTION_LOCAL_SLOT> = 4;

        <org.mozilla.javascript.Interpreter: int EXCEPTION_TYPE_SLOT> = 3;

        <org.mozilla.javascript.Interpreter: int EXCEPTION_HANDLER_SLOT> = 2;

        <org.mozilla.javascript.Interpreter: int EXCEPTION_TRY_END_SLOT> = 1;

        <org.mozilla.javascript.Interpreter: int EXCEPTION_TRY_START_SLOT> = 0;

        <org.mozilla.javascript.Interpreter: int MIN_FIXUP_TABLE_SIZE> = 40;

        <org.mozilla.javascript.Interpreter: int MIN_LABEL_TABLE_SIZE> = 32;

        <org.mozilla.javascript.Interpreter: int MIN_ICODE> = -56;

        <org.mozilla.javascript.Interpreter: int Icode_LOCAL_CLEAR> = -56;

        <org.mozilla.javascript.Interpreter: int Icode_TAIL_CALL> = -55;

        <org.mozilla.javascript.Interpreter: int Icode_LEAVEDQ> = -54;

        <org.mozilla.javascript.Interpreter: int Icode_ENTERDQ> = -53;

        <org.mozilla.javascript.Interpreter: int Icode_ONE> = -52;

        <org.mozilla.javascript.Interpreter: int Icode_ZERO> = -51;

        <org.mozilla.javascript.Interpreter: int Icode_UNDEF> = -50;

        <org.mozilla.javascript.Interpreter: int Icode_SETVAR1> = -49;

        <org.mozilla.javascript.Interpreter: int Icode_GETVAR1> = -48;

        <org.mozilla.javascript.Interpreter: int Icode_REG_STR4> = -47;

        <org.mozilla.javascript.Interpreter: int Icode_REG_STR2> = -46;

        <org.mozilla.javascript.Interpreter: int Icode_REG_STR1> = -45;

        <org.mozilla.javascript.Interpreter: int Icode_REG_STR_C3> = -44;

        <org.mozilla.javascript.Interpreter: int Icode_REG_STR_C2> = -43;

        <org.mozilla.javascript.Interpreter: int Icode_REG_STR_C1> = -42;

        <org.mozilla.javascript.Interpreter: int Icode_REG_STR_C0> = -41;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND4> = -40;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND2> = -39;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND1> = -38;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND_C5> = -37;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND_C4> = -36;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND_C3> = -35;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND_C2> = -34;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND_C1> = -33;

        <org.mozilla.javascript.Interpreter: int Icode_REG_IND_C0> = -32;

        <org.mozilla.javascript.Interpreter: int Icode_SPARE_ARRAYLIT> = -31;

        <org.mozilla.javascript.Interpreter: int Icode_LITERAL_SET> = -30;

        <org.mozilla.javascript.Interpreter: int Icode_LITERAL_NEW> = -29;

        <org.mozilla.javascript.Interpreter: int Icode_INTNUMBER> = -28;

        <org.mozilla.javascript.Interpreter: int Icode_SHORTNUMBER> = -27;

        <org.mozilla.javascript.Interpreter: int Icode_LINE> = -26;

        <org.mozilla.javascript.Interpreter: int Icode_RETSUB> = -25;

        <org.mozilla.javascript.Interpreter: int Icode_STARTSUB> = -24;

        <org.mozilla.javascript.Interpreter: int Icode_GOSUB> = -23;

        <org.mozilla.javascript.Interpreter: int Icode_RETUNDEF> = -22;

        <org.mozilla.javascript.Interpreter: int Icode_CALLSPECIAL> = -21;

        <org.mozilla.javascript.Interpreter: int Icode_CLOSURE_STMT> = -20;

        <org.mozilla.javascript.Interpreter: int Icode_CLOSURE_EXPR> = -19;

        <org.mozilla.javascript.Interpreter: int Icode_VALUE_AND_THIS> = -18;

        <org.mozilla.javascript.Interpreter: int Icode_ELEM_AND_THIS> = -17;

        <org.mozilla.javascript.Interpreter: int Icode_PROP_AND_THIS> = -16;

        <org.mozilla.javascript.Interpreter: int Icode_NAME_AND_THIS> = -15;

        <org.mozilla.javascript.Interpreter: int Icode_TYPEOFNAME> = -14;

        <org.mozilla.javascript.Interpreter: int Icode_SCOPE_SAVE> = -13;

        <org.mozilla.javascript.Interpreter: int Icode_SCOPE_LOAD> = -12;

        <org.mozilla.javascript.Interpreter: int Icode_REF_INC_DEC> = -11;

        <org.mozilla.javascript.Interpreter: int Icode_ELEM_INC_DEC> = -10;

        <org.mozilla.javascript.Interpreter: int Icode_PROP_INC_DEC> = -9;

        <org.mozilla.javascript.Interpreter: int Icode_NAME_INC_DEC> = -8;

        <org.mozilla.javascript.Interpreter: int Icode_VAR_INC_DEC> = -7;

        <org.mozilla.javascript.Interpreter: int Icode_IFEQ_POP> = -6;

        <org.mozilla.javascript.Interpreter: int Icode_POP_RESULT> = -5;

        <org.mozilla.javascript.Interpreter: int Icode_POP> = -4;

        <org.mozilla.javascript.Interpreter: int Icode_SWAP> = -3;

        <org.mozilla.javascript.Interpreter: int Icode_DUP2> = -2;

        <org.mozilla.javascript.Interpreter: int Icode_DUP> = -1;

        return;
    }
}
