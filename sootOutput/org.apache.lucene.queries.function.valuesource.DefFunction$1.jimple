class org.apache.lucene.queries.function.valuesource.DefFunction$1 extends org.apache.lucene.queries.function.valuesource.MultiFunction$Values
{
    final int upto;
    final org.apache.lucene.queries.function.valuesource.DefFunction this$0;

    void <init>(org.apache.lucene.queries.function.valuesource.DefFunction, org.apache.lucene.queries.function.FunctionValues[])
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        org.apache.lucene.queries.function.valuesource.DefFunction r1;
        org.apache.lucene.queries.function.FunctionValues[] r2, $r3;
        int $i0, $i1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.DefFunction;

        r2 := @parameter1: org.apache.lucene.queries.function.FunctionValues[];

        r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.valuesource.DefFunction this$0> = r1;

        specialinvoke r0.<org.apache.lucene.queries.function.valuesource.MultiFunction$Values: void <init>(org.apache.lucene.queries.function.valuesource.MultiFunction,org.apache.lucene.queries.function.FunctionValues[])>(r1, r2);

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues[] valsArr>;

        $i0 = lengthof $r3;

        $i1 = $i0 - 1;

        r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: int upto> = $i1;

        return;
    }

    private org.apache.lucene.queries.function.FunctionValues get(int)
    {
        org.apache.lucene.queries.function.FunctionValues[] $r1, $r3;
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int $i0, $i1, i2, i3;
        org.apache.lucene.queries.function.FunctionValues $r2, r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i2 := @parameter0: int;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: int upto>;

        if i3 >= $i0 goto label3;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues[] valsArr>;

        r4 = $r3[i3];

        $z0 = virtualinvoke r4.<org.apache.lucene.queries.function.FunctionValues: boolean exists(int)>(i2);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues[] valsArr>;

        $i1 = r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: int upto>;

        $r2 = $r1[$i1];

        return $r2;
    }

    public byte byteVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        byte $b1;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $b1 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: byte byteVal(int)>(i0);

        return $b1;
    }

    public short shortVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        short $s1;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $s1 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: short shortVal(int)>(i0);

        return $s1;
    }

    public float floatVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int i0;
        float $f0;
        org.apache.lucene.queries.function.FunctionValues $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $f0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>(i0);

        return $f0;
    }

    public int intVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int i0, $i1;
        org.apache.lucene.queries.function.FunctionValues $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $i1 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: int intVal(int)>(i0);

        return $i1;
    }

    public long longVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;
        long $l1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $l1 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: long longVal(int)>(i0);

        return $l1;
    }

    public double doubleVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;
        double $d0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $d0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: double doubleVal(int)>(i0);

        return $d0;
    }

    public java.lang.String strVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: java.lang.String strVal(int)>(i0);

        return $r2;
    }

    public boolean boolVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        return $z0;
    }

    public boolean bytesVal(int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        org.apache.lucene.util.BytesRef r2;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean bytesVal(int,org.apache.lucene.util.BytesRef)>(i0, r2);

        return $z0;
    }

    public java.lang.Object objectVal(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues get(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: java.lang.Object objectVal(int)>(i0);

        return $r2;
    }

    public boolean exists(int)
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        org.apache.lucene.queries.function.FunctionValues[] r1;
        int i0, i1, i2;
        org.apache.lucene.queries.function.FunctionValues r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        i1 := @parameter0: int;

        r1 = r0.<org.apache.lucene.queries.function.valuesource.DefFunction$1: org.apache.lucene.queries.function.FunctionValues[] valsArr>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r2 = r1[i2];

        $z0 = virtualinvoke r2.<org.apache.lucene.queries.function.FunctionValues: boolean exists(int)>(i1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()
    {
        org.apache.lucene.queries.function.valuesource.DefFunction$1 r0;
        org.apache.lucene.queries.function.FunctionValues$ValueFiller $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DefFunction$1;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.valuesource.MultiFunction$Values: org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()>();

        return $r1;
    }
}
