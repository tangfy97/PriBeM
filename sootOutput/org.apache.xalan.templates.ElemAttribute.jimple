public class org.apache.xalan.templates.ElemAttribute extends org.apache.xalan.templates.ElemElement
{

    public void <init>()
    {
        org.apache.xalan.templates.ElemAttribute r0;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        specialinvoke r0.<org.apache.xalan.templates.ElemElement: void <init>()>();

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemAttribute r0;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        return 48;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemAttribute r0;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        return "attribute";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemAttribute r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r1 := @this: org.apache.xalan.templates.ElemAttribute;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        specialinvoke r1.<org.apache.xalan.templates.ElemElement: void execute(org.apache.xalan.transformer.TransformerImpl)>(r0);

        return;
    }

    protected java.lang.String resolvePrefix(org.apache.xml.serializer.SerializationHandler, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.SerializationHandler r0;
        int $i0, $i1, $i2;
        java.lang.String r1, $r2, r5;
        org.apache.xml.serializer.NamespaceMappings $r3;
        org.apache.xalan.templates.ElemAttribute r4;
        boolean $z0, $z1;

        r4 := @this: org.apache.xalan.templates.ElemAttribute;

        r0 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if null == r5 goto label4;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label4;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.xml.serializer.ExtendedContentHandler: java.lang.String getPrefix(java.lang.String)>(r1);

        r5 = $r2;

        if null == $r2 goto label2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label4;

     label2:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label3;

        $r3 = interfaceinvoke r0.<org.apache.xml.serializer.ExtendedContentHandler: org.apache.xml.serializer.NamespaceMappings getNamespaceMappings()>();

        r5 = virtualinvoke $r3.<org.apache.xml.serializer.NamespaceMappings: java.lang.String generateNextPrefix()>();

        goto label4;

     label3:
        r5 = "";

     label4:
        return r5;
    }

    protected boolean validateNodeName(java.lang.String)
    {
        java.lang.String r0;
        org.apache.xalan.templates.ElemAttribute r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.xalan.templates.ElemAttribute;

        r0 := @parameter0: java.lang.String;

        if null != r0 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidQName(java.lang.String)>(r0);

        return $z1;
    }

    void constructNode(java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException $r8;
        org.apache.xml.serializer.SerializationHandler $r2;
        org.xml.sax.SAXException $r6, $r7;
        int $i0, $i1, $i2;
        java.lang.String r0, r3, r5, $r9, $r10;
        org.apache.xalan.templates.ElemAttribute r4;
        org.apache.xalan.transformer.TransformerImpl r1;

        r4 := @this: org.apache.xalan.templates.ElemAttribute;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r1 := @parameter3: org.apache.xalan.transformer.TransformerImpl;

        if null == r0 goto label9;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label9;

        $r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        if r3 == null goto label4;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

     label1:
        interfaceinvoke $r2.<org.apache.xml.serializer.ExtendedContentHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r3, r5, 0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new javax.xml.transform.TransformerException;

        specialinvoke $r8.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r9 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)>(r4);

        $r10 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r0);

     label5:
        if r3 == null goto label6;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i1 <= 0 goto label6;

        interfaceinvoke $r2.<org.apache.xml.serializer.ExtendedContentHandler: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r5, $r10, r0, "CDATA", $r9);

        goto label7;

     label6:
        interfaceinvoke $r2.<org.apache.xml.serializer.ExtendedContentHandler: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("", $r10, r0, "CDATA", $r9);

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;

     label9:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label5 to label7 with label8;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        java.lang.Object[] $r3;
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;
        int $i0;
        org.apache.xalan.templates.ElemAttribute r1;
        java.lang.String $r4, $r5;

        r1 := @this: org.apache.xalan.templates.ElemAttribute;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        lookupswitch($i0)
        {
            case 9: goto label1;
            case 17: goto label1;
            case 28: goto label1;
            case 30: goto label1;
            case 35: goto label1;
            case 36: goto label1;
            case 37: goto label1;
            case 42: goto label1;
            case 50: goto label1;
            case 72: goto label1;
            case 73: goto label1;
            case 74: goto label1;
            case 75: goto label1;
            case 78: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r1.<org.apache.xalan.templates.ElemAttribute: java.lang.String getNodeName()>();

        $r3[1] = $r5;

        virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", $r3);

     label3:
        $r2 = specialinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        return $r2;
    }

    public void setName(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xalan.templates.ElemAttribute r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0, $z1;

        r1 := @this: org.apache.xalan.templates.ElemAttribute;

        r0 := @parameter0: org.apache.xalan.templates.AVT;

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.AVT: java.lang.String getSimpleString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        specialinvoke r1.<org.apache.xalan.templates.ElemElement: void setName(org.apache.xalan.templates.AVT)>(r0);

        return;
    }
}
