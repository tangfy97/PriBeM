public class arq.cmdline.ModDatasetGeneral extends arq.cmdline.ModDataset
{
    protected final arq.cmdline.ArgDecl graphDecl;
    protected final arq.cmdline.ArgDecl dataDecl;
    protected final arq.cmdline.ArgDecl namedGraphDecl;
    protected final arq.cmdline.ArgDecl lmapDecl;
    private java.util.List dataURLs;
    private java.util.List graphURLs;
    private java.util.List namedGraphURLs;
    private com.hp.hpl.jena.sparql.core.DataFormat dataSyntax;
    private com.hp.hpl.jena.util.FileManager fileManager;

    protected void <init>()
    {
        arq.cmdline.ModDatasetGeneral r0;
        arq.cmdline.ArgDecl $r1, $r3, $r5, $r7;
        java.lang.String[] $r2, $r4, $r6, $r8;
        com.hp.hpl.jena.util.FileManager $r9;

        r0 := @this: arq.cmdline.ModDatasetGeneral;

        specialinvoke r0.<arq.cmdline.ModDataset: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "graph", $r2);

        r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl graphDecl> = $r1;

        $r3 = new arq.cmdline.ArgDecl;

        $r4 = newarray (java.lang.String)[0];

        specialinvoke $r3.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "data", $r4);

        r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl dataDecl> = $r3;

        $r5 = new arq.cmdline.ArgDecl;

        $r6 = newarray (java.lang.String)[4];

        $r6[0] = "namedgraph";

        $r6[1] = "namedGraph";

        $r6[2] = "namedData";

        $r6[3] = "nameddata";

        specialinvoke $r5.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "named", $r6);

        r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl namedGraphDecl> = $r5;

        $r7 = new arq.cmdline.ArgDecl;

        $r8 = newarray (java.lang.String)[0];

        specialinvoke $r7.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "lmap", $r8);

        r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl lmapDecl> = $r7;

        r0.<arq.cmdline.ModDatasetGeneral: java.util.List dataURLs> = null;

        r0.<arq.cmdline.ModDatasetGeneral: java.util.List graphURLs> = null;

        r0.<arq.cmdline.ModDatasetGeneral: java.util.List namedGraphURLs> = null;

        r0.<arq.cmdline.ModDatasetGeneral: com.hp.hpl.jena.sparql.core.DataFormat dataSyntax> = null;

        $r9 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        r0.<arq.cmdline.ModDatasetGeneral: com.hp.hpl.jena.util.FileManager fileManager> = $r9;

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.Usage $r1;
        arq.cmdline.ModDatasetGeneral r2;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r3, $r4, $r5, $r6;

        r2 := @this: arq.cmdline.ModDatasetGeneral;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r1.<arq.cmdline.Usage: void startCategory(java.lang.String)>("Dataset");

        $r3 = r2.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl dataDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--data=FILE", "Data for the datset - triple or quad formats");

        $r4 = r2.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl graphDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r4, "--graph=FILE", "Graph for default graph of the datset");

        $r5 = r2.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl namedGraphDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r5, "--namedGraph=FILE", "Add a graph into the dataset as a named graph");

        $r6 = r2.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl lmapDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r6, "--lmap", "Specify a location mapping file");

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.ModDatasetGeneral r0;
        com.hp.hpl.jena.util.LocationMapper $r11;
        arq.cmdline.ArgDecl $r2, $r4, $r6, $r8, $r9;
        arq.cmdline.CmdArgModule r1;
        java.util.List $r3, $r5, $r7;
        com.hp.hpl.jena.util.FileManager $r12;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: arq.cmdline.ModDatasetGeneral;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl dataDecl>;

        $r3 = virtualinvoke r1.<arq.cmdline.CmdArgModule: java.util.List getValues(arq.cmdline.ArgDecl)>($r2);

        r0.<arq.cmdline.ModDatasetGeneral: java.util.List dataURLs> = $r3;

        $r4 = r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl graphDecl>;

        $r5 = virtualinvoke r1.<arq.cmdline.CmdArgModule: java.util.List getValues(arq.cmdline.ArgDecl)>($r4);

        r0.<arq.cmdline.ModDatasetGeneral: java.util.List graphURLs> = $r5;

        $r6 = r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl namedGraphDecl>;

        $r7 = virtualinvoke r1.<arq.cmdline.CmdArgModule: java.util.List getValues(arq.cmdline.ArgDecl)>($r6);

        r0.<arq.cmdline.ModDatasetGeneral: java.util.List namedGraphURLs> = $r7;

        $r8 = r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl lmapDecl>;

        $z0 = virtualinvoke r1.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r8);

        if $z0 == 0 goto label1;

        $r9 = r0.<arq.cmdline.ModDatasetGeneral: arq.cmdline.ArgDecl lmapDecl>;

        $r10 = virtualinvoke r1.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r9);

        $r11 = new com.hp.hpl.jena.util.LocationMapper;

        specialinvoke $r11.<com.hp.hpl.jena.util.LocationMapper: void <init>(java.lang.String)>($r10);

        $r12 = new com.hp.hpl.jena.util.FileManager;

        specialinvoke $r12.<com.hp.hpl.jena.util.FileManager: void <init>(com.hp.hpl.jena.util.LocationMapper)>($r11);

        r0.<arq.cmdline.ModDatasetGeneral: com.hp.hpl.jena.util.FileManager fileManager> = $r12;

     label1:
        return;
    }

    public com.hp.hpl.jena.query.Dataset createDataset()
    {
        arq.cmdline.ModDatasetGeneral r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r7;
        java.util.List $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.query.Dataset $r8, $r9;

        r0 := @this: arq.cmdline.ModDatasetGeneral;

        $r1 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List dataURLs>;

        if $r1 == null goto label1;

        $r6 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List dataURLs>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i2 != 0 goto label4;

     label1:
        $r2 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List graphURLs>;

        if $r2 == null goto label2;

        $r5 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List graphURLs>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 != 0 goto label4;

     label2:
        $r3 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List namedGraphURLs>;

        if $r3 == null goto label3;

        $r4 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List namedGraphURLs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

     label3:
        return null;

     label4:
        $r7 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphFactory: com.hp.hpl.jena.sparql.core.DatasetGraph createMem()>();

        $r8 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset create(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r7);

        virtualinvoke r0.<arq.cmdline.ModDatasetGeneral: void addGraphs(com.hp.hpl.jena.query.Dataset)>($r8);

        r0.<arq.cmdline.ModDatasetGeneral: com.hp.hpl.jena.query.Dataset dataset> = $r8;

        $r9 = r0.<arq.cmdline.ModDatasetGeneral: com.hp.hpl.jena.query.Dataset dataset>;

        return $r9;
    }

    protected void addGraphs(com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.shared.JenaException $r13;
        arq.cmdline.ModDatasetGeneral r0;
        com.hp.hpl.jena.util.FileManager $r3;
        java.lang.String r10, $r16;
        boolean $z0;
        java.util.Iterator $r8;
        com.hp.hpl.jena.query.LabelExistsException $r14;
        java.lang.Exception $r11;
        java.util.List $r1, $r2, $r4, $r5, $r6, $r7;
        arq.cmd.CmdException $r12, $r15;
        com.hp.hpl.jena.query.Dataset r17;
        java.lang.Object $r9;

        r0 := @this: arq.cmdline.ModDatasetGeneral;

        r17 := @parameter0: com.hp.hpl.jena.query.Dataset;

     label1:
        $r1 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List dataURLs>;

        if $r1 == null goto label3;

        $r7 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List dataURLs>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        staticinvoke <org.apache.jena.riot.RDFDataMgr: void read(com.hp.hpl.jena.query.Dataset,java.lang.String)>(r17, r10);

        goto label2;

     label3:
        $r2 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List graphURLs>;

        if $r2 != null goto label4;

        $r6 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List namedGraphURLs>;

        if $r6 == null goto label5;

     label4:
        $r5 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List graphURLs>;

        $r4 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List namedGraphURLs>;

        $r3 = r0.<arq.cmdline.ModDatasetGeneral: com.hp.hpl.jena.util.FileManager fileManager>;

        staticinvoke <com.hp.hpl.jena.sparql.util.DatasetUtils: com.hp.hpl.jena.query.Dataset addInGraphs(com.hp.hpl.jena.query.Dataset,java.util.List,java.util.List,com.hp.hpl.jena.util.FileManager,java.lang.String)>(r17, $r5, $r4, $r3, null);

     label5:
        goto label9;

     label6:
        $r14 := @caughtexception;

        $r15 = new arq.cmd.CmdException;

        $r16 = virtualinvoke $r14.<com.hp.hpl.jena.query.LabelExistsException: java.lang.String getMessage()>();

        specialinvoke $r15.<arq.cmd.CmdException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label7:
        $r13 := @caughtexception;

        throw $r13;

     label8:
        $r11 := @caughtexception;

        $r12 = new arq.cmd.CmdException;

        specialinvoke $r12.<arq.cmd.CmdException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating dataset", $r11);

        throw $r12;

     label9:
        return;

        catch com.hp.hpl.jena.query.LabelExistsException from label1 to label5 with label6;
        catch com.hp.hpl.jena.shared.JenaException from label1 to label5 with label7;
        catch java.lang.Exception from label1 to label5 with label8;
    }

    public java.util.List getGraphURLs()
    {
        java.util.List $r1;
        arq.cmdline.ModDatasetGeneral r0;

        r0 := @this: arq.cmdline.ModDatasetGeneral;

        $r1 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List graphURLs>;

        return $r1;
    }

    public java.util.List getNamedGraphURLs()
    {
        java.util.List $r1;
        arq.cmdline.ModDatasetGeneral r0;

        r0 := @this: arq.cmdline.ModDatasetGeneral;

        $r1 = r0.<arq.cmdline.ModDatasetGeneral: java.util.List namedGraphURLs>;

        return $r1;
    }
}
