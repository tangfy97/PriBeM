public class com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug extends java.lang.Object implements com.hp.hpl.jena.sparql.sse.lang.ParseHandler
{
    int count;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: int count> = 0;

        return;
    }

    private void indent()
    {
        java.io.PrintStream $r1;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int $i0, i1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i1 = 0;

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: int count>;

        if i1 >= $i0 goto label2;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("  ");

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void start(int, int)
    {
        java.io.PrintStream $r1;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r8;
        int i0, i1;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r8 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]  ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r7);

        specialinvoke r8.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void indent()>();

        return;
    }

    public com.hp.hpl.jena.sparql.sse.Item getItem()
    {
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        return null;
    }

    public void parseStart()
    {
        java.io.PrintStream $r0;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r1;

        r1 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("<<<<");

        return;
    }

    public void parseFinish()
    {
        java.io.PrintStream $r0;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r1;

        r1 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(">>>>");

        return;
    }

    public void listStart(int, int)
    {
        java.io.PrintStream $r1;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int i0, i1, $i2, $i3;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i0, i1);

        $i2 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: int count>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: int count> = $i3;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("(");

        return;
    }

    public void listFinish(int, int)
    {
        java.io.PrintStream $r1;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int $i0, $i1, i2, i3;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: int count>;

        $i1 = $i0 - 1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: int count> = $i1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i2, i3);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(")");

        return;
    }

    public void emitBNode(int, int, java.lang.String)
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r4, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i0, i1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BNode: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public void emitIRI(int, int, java.lang.String)
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r4, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i0, i1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IRI: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public void emitLiteral(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        int i0, i1;
        java.lang.String r1, r2, r3, r7, $r11, $r18, $r25;
        java.io.PrintStream $r5, $r13, $r20;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        java.lang.StringBuilder $r4, $r6, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r23, $r24;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i0, i1);

        if r1 == null goto label1;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Literal: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r25);

        goto label3;

     label1:
        if r2 == null goto label2;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Literal: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ^^");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18);

        goto label3;

     label2:
        if r3 == null goto label3;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Literal: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ^^");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label3:
        return;
    }

    public void emitPName(int, int, java.lang.String)
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r4, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i0, i1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PName: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public void emitSymbol(int, int, java.lang.String)
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r4, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i0, i1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Symbol: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public void emitVar(int, int, java.lang.String)
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r4, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerDebug: void start(int,int)>(i0, i1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Var: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }
}
