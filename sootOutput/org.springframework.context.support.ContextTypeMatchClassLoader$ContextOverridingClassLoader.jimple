class org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader extends org.springframework.core.OverridingClassLoader
{
    final org.springframework.context.support.ContextTypeMatchClassLoader this$0;

    public void <init>(org.springframework.context.support.ContextTypeMatchClassLoader, java.lang.ClassLoader)
    {
        java.lang.ClassLoader r2;
        org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader r0;
        org.springframework.context.support.ContextTypeMatchClassLoader r1;

        r0 := @this: org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader;

        r1 := @parameter0: org.springframework.context.support.ContextTypeMatchClassLoader;

        r2 := @parameter1: java.lang.ClassLoader;

        r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: org.springframework.context.support.ContextTypeMatchClassLoader this$0> = r1;

        specialinvoke r0.<org.springframework.core.OverridingClassLoader: void <init>(java.lang.ClassLoader)>(r2);

        return;
    }

    protected boolean isEligibleForOverriding(java.lang.String)
    {
        java.lang.Object[] $r5;
        org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader r0;
        org.springframework.context.support.ContextTypeMatchClassLoader $r2;
        java.lang.Object $r6;
        java.lang.String r1;
        java.lang.ClassLoader r7;
        java.lang.reflect.Method $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: boolean isExcluded(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: org.springframework.context.support.ContextTypeMatchClassLoader this$0>;

        $z1 = staticinvoke <org.springframework.context.support.ContextTypeMatchClassLoader: boolean access$0(org.springframework.context.support.ContextTypeMatchClassLoader,java.lang.String)>($r2, r1);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = staticinvoke <org.springframework.context.support.ContextTypeMatchClassLoader: java.lang.reflect.Method access$1()>();

        staticinvoke <org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Method)>($r3);

        r7 = virtualinvoke r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: java.lang.ClassLoader getParent()>();

        goto label5;

     label3:
        $r4 = staticinvoke <org.springframework.context.support.ContextTypeMatchClassLoader: java.lang.reflect.Method access$1()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r6 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r4, r7, $r5);

        if $r6 == null goto label4;

        return 0;

     label4:
        r7 = virtualinvoke r7.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label5:
        if r7 != null goto label3;

        return 1;
    }

    protected java.lang.Class loadClassForOverriding(java.lang.String) throws java.lang.ClassNotFoundException
    {
        byte[] $r6, r9;
        org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader r0;
        org.springframework.context.support.ContextTypeMatchClassLoader $r1, $r7;
        java.util.Map $r2, $r8;
        int $i0;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.lang.String r3;

        r0 := @this: org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: org.springframework.context.support.ContextTypeMatchClassLoader this$0>;

        $r2 = staticinvoke <org.springframework.context.support.ContextTypeMatchClassLoader: java.util.Map access$2(org.springframework.context.support.ContextTypeMatchClassLoader)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r9 = (byte[]) $r4;

        if r9 != null goto label2;

        $r6 = virtualinvoke r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: byte[] loadBytesForClass(java.lang.String)>(r3);

        r9 = $r6;

        if $r6 == null goto label1;

        $r7 = r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: org.springframework.context.support.ContextTypeMatchClassLoader this$0>;

        $r8 = staticinvoke <org.springframework.context.support.ContextTypeMatchClassLoader: java.util.Map access$2(org.springframework.context.support.ContextTypeMatchClassLoader)>($r7);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r6);

        goto label2;

     label1:
        return null;

     label2:
        $i0 = lengthof r9;

        $r5 = virtualinvoke r0.<org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>(r3, r9, 0, $i0);

        return $r5;
    }
}
