public class org.mozilla.javascript.NativeArray extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final java.lang.Object ARRAY_TAG;
    private static final java.lang.Integer NEGATIVE_ONE;
    private static final int Id_length;
    private static final int MAX_INSTANCE_ID;
    private static final int Id_constructor;
    private static final int Id_toString;
    private static final int Id_toLocaleString;
    private static final int Id_toSource;
    private static final int Id_join;
    private static final int Id_reverse;
    private static final int Id_sort;
    private static final int Id_push;
    private static final int Id_pop;
    private static final int Id_shift;
    private static final int Id_unshift;
    private static final int Id_splice;
    private static final int Id_concat;
    private static final int Id_slice;
    private static final int Id_indexOf;
    private static final int Id_lastIndexOf;
    private static final int Id_every;
    private static final int Id_filter;
    private static final int Id_forEach;
    private static final int Id_map;
    private static final int Id_some;
    private static final int MAX_PROTOTYPE_ID;
    private long length;
    private java.lang.Object[] dense;
    private static final int maximumDenseLength;

    static void init(org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.NativeArray $r0;
        org.mozilla.javascript.Scriptable r1;
        boolean z0;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        z0 := @parameter1: boolean;

        $r0 = new org.mozilla.javascript.NativeArray;

        specialinvoke $r0.<org.mozilla.javascript.NativeArray: void <init>()>();

        virtualinvoke $r0.<org.mozilla.javascript.NativeArray: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(21, r1, z0);

        return;
    }

    private void <init>()
    {
        org.mozilla.javascript.NativeArray r0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense> = null;

        r0.<org.mozilla.javascript.NativeArray: long length> = 0L;

        return;
    }

    public void <init>(long)
    {
        org.mozilla.javascript.NativeArray r0;
        java.lang.Object[] $r1, $r3;
        long l0, $l1;
        byte $b2;
        int i3, i4;
        java.lang.Object $r2;

        r0 := @this: org.mozilla.javascript.NativeArray;

        l0 := @parameter0: long;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        i3 = (int) l0;

        $l1 = (long) i3;

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label3;

        if i3 <= 0 goto label3;

        if i3 <= 10000 goto label1;

        i3 = 10000;

     label1:
        $r1 = newarray (java.lang.Object)[i3];

        r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense> = $r1;

        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        $r3 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $r2 = <org.mozilla.javascript.NativeArray: java.lang.Object NOT_FOUND>;

        $r3[i4] = $r2;

        i4 = i4 + 1;

        goto label2;

     label3:
        r0.<org.mozilla.javascript.NativeArray: long length> = l0;

        return;
    }

    public void <init>(java.lang.Object[])
    {
        org.mozilla.javascript.NativeArray r0;
        java.lang.Object[] r1;
        int $i0;
        long $l1;

        r0 := @this: org.mozilla.javascript.NativeArray;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense> = r1;

        $i0 = lengthof r1;

        $l1 = (long) $i0;

        r0.<org.mozilla.javascript.NativeArray: long length> = $l1;

        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeArray r0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        return "Array";
    }

    protected int getMaxInstanceId()
    {
        org.mozilla.javascript.NativeArray r0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        return 1;
    }

    protected int findInstanceIdInfo(java.lang.String)
    {
        org.mozilla.javascript.NativeArray r1;
        int $i0, $i1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.NativeArray;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("length");

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <org.mozilla.javascript.NativeArray: int instanceIdInfo(int,int)>(6, 1);

        return $i1;

     label1:
        $i0 = specialinvoke r1.<org.mozilla.javascript.IdScriptableObject: int findInstanceIdInfo(java.lang.String)>(r0);

        return $i0;
    }

    protected java.lang.String getInstanceIdName(int)
    {
        int i0;
        org.mozilla.javascript.NativeArray r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return "length";

     label1:
        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.String getInstanceIdName(int)>(i0);

        return $r1;
    }

    protected java.lang.Object getInstanceIdValue(int)
    {
        org.mozilla.javascript.NativeArray r0;
        int i0;
        java.lang.Object $r1;
        long $l1;
        java.lang.Number $r2;
        double $d0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $l1 = r0.<org.mozilla.javascript.NativeArray: long length>;

        $d0 = (double) $l1;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

        return $r2;

     label1:
        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object getInstanceIdValue(int)>(i0);

        return $r1;
    }

    protected void setInstanceIdValue(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1;
        org.mozilla.javascript.NativeArray r0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 != 1 goto label1;

        specialinvoke r0.<org.mozilla.javascript.NativeArray: void setLength(java.lang.Object)>(r1);

        return;

     label1:
        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void setInstanceIdValue(int,java.lang.Object)>(i0, r1);

        return;
    }

    protected void initPrototypeId(int)
    {
        org.mozilla.javascript.NativeArray r0;
        byte b1;
        int i0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label19;
            case 20: goto label20;
            case 21: goto label21;
            default: goto label22;
        };

     label01:
        b1 = 1;

        r3 = "constructor";

        goto label23;

     label02:
        b1 = 0;

        r3 = "toString";

        goto label23;

     label03:
        b1 = 1;

        r3 = "toLocaleString";

        goto label23;

     label04:
        b1 = 0;

        r3 = "toSource";

        goto label23;

     label05:
        b1 = 1;

        r3 = "join";

        goto label23;

     label06:
        b1 = 0;

        r3 = "reverse";

        goto label23;

     label07:
        b1 = 1;

        r3 = "sort";

        goto label23;

     label08:
        b1 = 1;

        r3 = "push";

        goto label23;

     label09:
        b1 = 1;

        r3 = "pop";

        goto label23;

     label10:
        b1 = 1;

        r3 = "shift";

        goto label23;

     label11:
        b1 = 1;

        r3 = "unshift";

        goto label23;

     label12:
        b1 = 1;

        r3 = "splice";

        goto label23;

     label13:
        b1 = 1;

        r3 = "concat";

        goto label23;

     label14:
        b1 = 1;

        r3 = "slice";

        goto label23;

     label15:
        b1 = 1;

        r3 = "indexOf";

        goto label23;

     label16:
        b1 = 1;

        r3 = "lastIndexOf";

        goto label23;

     label17:
        b1 = 1;

        r3 = "every";

        goto label23;

     label18:
        b1 = 1;

        r3 = "filter";

        goto label23;

     label19:
        b1 = 1;

        r3 = "forEach";

        goto label23;

     label20:
        b1 = 1;

        r3 = "map";

        goto label23;

     label21:
        b1 = 1;

        r3 = "some";

        goto label23;

     label22:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label23:
        $r4 = <org.mozilla.javascript.NativeArray: java.lang.Object ARRAY_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.NativeArray: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.NativeArray r2;
        org.mozilla.javascript.Scriptable r4, r5, $r10, $r11, $r17, $r18, $r24;
        java.lang.Object[] r6;
        org.mozilla.javascript.IdFunctionObject r0;
        int $i0;
        java.lang.String $r19, $r20, $r21, $r22, $r26;
        org.mozilla.javascript.Context r3;
        java.lang.IllegalArgumentException $r25;
        java.lang.Object $r1, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r23, $r27;

        r2 := @this: org.mozilla.javascript.NativeArray;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r3 := @parameter1: org.mozilla.javascript.Context;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        r5 := @parameter3: org.mozilla.javascript.Scriptable;

        r6 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeArray: java.lang.Object ARRAY_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label01;

        $r27 = specialinvoke r2.<org.mozilla.javascript.IdScriptableObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r3, r4, r5, r6);

        return $r27;

     label01:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label19;
            case 16: goto label20;
            case 17: goto label21;
            case 18: goto label21;
            case 19: goto label21;
            case 20: goto label21;
            case 21: goto label21;
            default: goto label22;
        };

     label02:
        if r5 != null goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        if $z2 != 0 goto label05;

        $r24 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r4, r6);

        return $r24;

     label05:
        $r23 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object jsConstructor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r4, r6);

        return $r23;

     label06:
        $z1 = virtualinvoke r3.<org.mozilla.javascript.Context: boolean hasFeature(int)>(4);

        $r22 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.String toStringHelper(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,boolean,boolean)>(r3, r4, r5, $z1, 0);

        return $r22;

     label07:
        $r21 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.String toStringHelper(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,boolean,boolean)>(r3, r4, r5, 0, 1);

        return $r21;

     label08:
        $r20 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.String toStringHelper(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,boolean,boolean)>(r3, r4, r5, 1, 0);

        return $r20;

     label09:
        $r19 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.String js_join(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r5, r6);

        return $r19;

     label10:
        $r18 = staticinvoke <org.mozilla.javascript.NativeArray: org.mozilla.javascript.Scriptable js_reverse(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r5, r6);

        return $r18;

     label11:
        $r17 = staticinvoke <org.mozilla.javascript.NativeArray: org.mozilla.javascript.Scriptable js_sort(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r4, r5, r6);

        return $r17;

     label12:
        $r16 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object js_push(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r5, r6);

        return $r16;

     label13:
        $r15 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object js_pop(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r5, r6);

        return $r15;

     label14:
        $r14 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object js_shift(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r5, r6);

        return $r14;

     label15:
        $r13 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object js_unshift(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r5, r6);

        return $r13;

     label16:
        $r12 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object js_splice(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r4, r5, r6);

        return $r12;

     label17:
        $r11 = staticinvoke <org.mozilla.javascript.NativeArray: org.mozilla.javascript.Scriptable js_concat(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r4, r5, r6);

        return $r11;

     label18:
        $r10 = specialinvoke r2.<org.mozilla.javascript.NativeArray: org.mozilla.javascript.Scriptable js_slice(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r5, r6);

        return $r10;

     label19:
        $r9 = specialinvoke r2.<org.mozilla.javascript.NativeArray: java.lang.Object indexOfHelper(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],boolean)>(r3, r5, r6, 0);

        return $r9;

     label20:
        $r8 = specialinvoke r2.<org.mozilla.javascript.NativeArray: java.lang.Object indexOfHelper(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],boolean)>(r3, r5, r6, 1);

        return $r8;

     label21:
        $r7 = specialinvoke r2.<org.mozilla.javascript.NativeArray: java.lang.Object iterativeMethod(org.mozilla.javascript.Context,int,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, $i0, r4, r5, r6);

        return $r7;

     label22:
        $r25 = new java.lang.IllegalArgumentException;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r25;
    }

    public java.lang.Object get(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeArray r0;
        java.lang.Object[] $r1, $r3, $r4;
        org.mozilla.javascript.Scriptable r2;
        int i0, $i1;
        java.lang.Object $r5, $r6;

        r0 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $r1 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        if $r1 == null goto label1;

        if 0 > i0 goto label1;

        $r3 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label1;

        $r4 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $r5 = $r4[i0];

        return $r5;

     label1:
        $r6 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object get(int,org.mozilla.javascript.Scriptable)>(i0, r2);

        return $r6;
    }

    public boolean has(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeArray r0;
        java.lang.Object[] $r1, $r3, $r4;
        org.mozilla.javascript.Scriptable r2;
        int i0, $i1;
        java.lang.Object $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $r1 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        if $r1 == null goto label3;

        if 0 > i0 goto label3;

        $r3 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $r6 = $r4[i0];

        $r5 = <org.mozilla.javascript.NativeArray: java.lang.Object NOT_FOUND>;

        if $r6 == $r5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $z1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: boolean has(int,org.mozilla.javascript.Scriptable)>(i0, r2);

        return $z1;
    }

    private static long toArrayIndex(java.lang.String)
    {
        long $l1;
        byte $b0, $b2, $b3;
        java.lang.String r0, $r1;
        double $d0, $d1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.String)>(r0);

        $b0 = $d0 cmpl $d0;

        if $b0 != 0 goto label1;

        $l1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long toUint32(double)>($d0);

        $d1 = (double) $l1;

        $b2 = $d1 cmpl $d0;

        if $b2 != 0 goto label1;

        $b3 = $l1 cmp 4294967295L;

        if $b3 == 0 goto label1;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return $l1;

     label1:
        return -1L;
    }

    public void put(java.lang.String, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.NativeArray r0;
        long $l0, $l1, $l3;
        org.mozilla.javascript.Scriptable r2;
        byte $b2;
        int $i4;
        java.lang.Object r3;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.NativeArray;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>(r1, r2, r3);

        if r2 != r0 goto label1;

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long toArrayIndex(java.lang.String)>(r1);

        $l1 = r0.<org.mozilla.javascript.NativeArray: long length>;

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 < 0 goto label1;

        $l3 = $l0 + 1L;

        r0.<org.mozilla.javascript.NativeArray: long length> = $l3;

     label1:
        return;
    }

    public void put(int, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.NativeArray r1;
        java.lang.Object[] $r3, $r4, $r5;
        long $l1, $l2, $l4, $l5;
        org.mozilla.javascript.Scriptable r0;
        byte $b3;
        int i0, $i6, $i7;
        java.lang.Object r2;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object;

        if r0 != r1 goto label1;

        $z0 = virtualinvoke r1.<org.mozilla.javascript.NativeArray: boolean isSealed()>();

        if $z0 != 0 goto label1;

        $r3 = r1.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        if $r3 == null goto label1;

        if 0 > i0 goto label1;

        $r4 = r1.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $i6 = lengthof $r4;

        if i0 >= $i6 goto label1;

        $r5 = r1.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $r5[i0] = r2;

        goto label2;

     label1:
        specialinvoke r1.<org.mozilla.javascript.IdScriptableObject: void put(int,org.mozilla.javascript.Scriptable,java.lang.Object)>(i0, r0, r2);

     label2:
        if r0 != r1 goto label3;

        $l2 = r1.<org.mozilla.javascript.NativeArray: long length>;

        $l1 = (long) i0;

        $b3 = $l2 cmp $l1;

        $i7 = (int) $b3;

        if $i7 > 0 goto label3;

        $l4 = (long) i0;

        $l5 = $l4 + 1L;

        r1.<org.mozilla.javascript.NativeArray: long length> = $l5;

     label3:
        return;
    }

    public void delete(int)
    {
        org.mozilla.javascript.NativeArray r0;
        java.lang.Object[] $r1, $r2, $r4;
        int i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.NativeArray: boolean isSealed()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        if $r1 == null goto label1;

        if 0 > i0 goto label1;

        $r2 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label1;

        $r4 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        $r3 = <org.mozilla.javascript.NativeArray: java.lang.Object NOT_FOUND>;

        $r4[i0] = $r3;

        goto label2;

     label1:
        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void delete(int)>(i0);

     label2:
        return;
    }

    public java.lang.Object[] getIds()
    {
        java.lang.Object[] $r1, $r2, $r3, $r4, r8, r9;
        long l0, $l1;
        java.lang.Integer $r10;
        byte $b2;
        int i3, $i4, $i5, i6, i7, i8, $i9;
        org.mozilla.javascript.NativeArray r0;
        java.lang.Object $r5, $r6;

        r0 := @this: org.mozilla.javascript.NativeArray;

        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object[] getIds()>();

        $r2 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        if $r2 != null goto label1;

        return $r1;

     label1:
        $r3 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        i6 = lengthof $r3;

        l0 = r0.<org.mozilla.javascript.NativeArray: long length>;

        $l1 = (long) i6;

        $b2 = $l1 cmp l0;

        $i9 = (int) $b2;

        if $i9 <= 0 goto label2;

        i6 = (int) l0;

     label2:
        if i6 != 0 goto label3;

        return $r1;

     label3:
        i3 = lengthof $r1;

        $i4 = i6 + i3;

        r8 = newarray (java.lang.Object)[$i4];

        $r4 = r0.<org.mozilla.javascript.NativeArray: java.lang.Object[] dense>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r8, 0, i6);

        i7 = 0;

        i8 = 0;

     label4:
        if i8 == i6 goto label6;

        $r6 = r8[i8];

        $r5 = <org.mozilla.javascript.NativeArray: java.lang.Object NOT_FOUND>;

        if $r6 == $r5 goto label5;

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i8);

        r8[i7] = $r10;

        i7 = i7 + 1;

     label5:
        i8 = i8 + 1;

        goto label4;

     label6:
        if i7 == i6 goto label7;

        $i5 = i7 + i3;

        r9 = newarray (java.lang.Object)[$i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r9, 0, i7);

        r8 = r9;

     label7:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r8, i7, i3);

        return r8;
    }

    public java.lang.Object getDefaultValue(java.lang.Class)
    {
        org.mozilla.javascript.NativeArray r2;
        org.mozilla.javascript.Context $r4;
        long $l1;
        java.lang.Long $r5;
        int $i0;
        java.lang.Class r0, $r1;
        java.lang.Object $r3;

        r2 := @this: org.mozilla.javascript.NativeArray;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        if r0 != $r1 goto label1;

        $r4 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $i0 = virtualinvoke $r4.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i0 != 120 goto label1;

        $r5 = new java.lang.Long;

        $l1 = r2.<org.mozilla.javascript.NativeArray: long length>;

        specialinvoke $r5.<java.lang.Long: void <init>(long)>($l1);

        return $r5;

     label1:
        $r3 = specialinvoke r2.<org.mozilla.javascript.IdScriptableObject: java.lang.Object getDefaultValue(java.lang.Class)>(r0);

        return $r3;
    }

    private static java.lang.Object jsConstructor(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r0;
        long $l3;
        byte $b4;
        int $i0, $i1, $i2;
        java.lang.Number $r4;
        boolean $z0;
        double $d0, $d1;
        org.mozilla.javascript.NativeArray $r3, $r5, $r7, $r8;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.EvaluatorException $r6;
        org.mozilla.javascript.Scriptable r9;
        java.lang.Object r2;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r9 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r8 = new org.mozilla.javascript.NativeArray;

        specialinvoke $r8.<org.mozilla.javascript.NativeArray: void <init>()>();

        return $r8;

     label1:
        $i1 = virtualinvoke r1.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i1 != 120 goto label2;

        $r7 = new org.mozilla.javascript.NativeArray;

        specialinvoke $r7.<org.mozilla.javascript.NativeArray: void <init>(java.lang.Object[])>(r0);

        return $r7;

     label2:
        r2 = r0[0];

        $i2 = lengthof r0;

        if $i2 > 1 goto label3;

        $z0 = r2 instanceof java.lang.Number;

        if $z0 != 0 goto label4;

     label3:
        $r3 = new org.mozilla.javascript.NativeArray;

        specialinvoke $r3.<org.mozilla.javascript.NativeArray: void <init>(java.lang.Object[])>(r0);

        return $r3;

     label4:
        $l3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long toUint32(java.lang.Object)>(r2);

        $d0 = (double) $l3;

        $r4 = (java.lang.Number) r2;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $b4 = $d0 cmpl $d1;

        if $b4 == 0 goto label5;

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.arraylength.bad");

        throw $r6;

     label5:
        $r5 = new org.mozilla.javascript.NativeArray;

        specialinvoke $r5.<org.mozilla.javascript.NativeArray: void <init>(long)>($l3);

        return $r5;
    }

    public long getLength()
    {
        long $l0;
        org.mozilla.javascript.NativeArray r0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        $l0 = r0.<org.mozilla.javascript.NativeArray: long length>;

        return $l0;
    }

    public long jsGet_length()
    {
        long $l0;
        org.mozilla.javascript.NativeArray r0;

        r0 := @this: org.mozilla.javascript.NativeArray;

        $l0 = virtualinvoke r0.<org.mozilla.javascript.NativeArray: long getLength()>();

        return $l0;
    }

    private void setLength(java.lang.Object)
    {
        java.lang.Integer $r4;
        byte $b1, $b3, $b6, $b8, $b12, $b14;
        boolean $z0;
        org.mozilla.javascript.NativeArray r1;
        java.lang.Object[] $r2;
        long $l0, $l2, $l4, $l5, $l7, $l11, $l13, l16;
        int $i9, $i10, i15, $i17, $i18, $i19, $i20, $i21;
        java.lang.String r6;
        double $d0, $d1;
        org.mozilla.javascript.EvaluatorException $r5;
        java.lang.Object r0, r3;

        r1 := @this: org.mozilla.javascript.NativeArray;

        r0 := @parameter0: java.lang.Object;

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r0);

        $l0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long toUint32(double)>($d0);

        $d1 = (double) $l0;

        $b1 = $d1 cmpl $d0;

        if $b1 == 0 goto label1;

        $r5 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.arraylength.bad");

        throw $r5;

     label1:
        $l2 = r1.<org.mozilla.javascript.NativeArray: long length>;

        $b3 = $l0 cmp $l2;

        $i17 = (int) $b3;

        if $i17 >= 0 goto label7;

        $l4 = r1.<org.mozilla.javascript.NativeArray: long length>;

        $l5 = $l4 - $l0;

        $b6 = $l5 cmp 4096L;

        $i18 = (int) $b6;

        if $i18 <= 0 goto label5;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeArray: java.lang.Object[] getIds()>();

        i15 = 0;

     label2:
        $i9 = lengthof $r2;

        if i15 >= $i9 goto label7;

        r3 = $r2[i15];

        $z0 = r3 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        r6 = (java.lang.String) r3;

        $l13 = staticinvoke <org.mozilla.javascript.NativeArray: long toArrayIndex(java.lang.String)>(r6);

        $b14 = $l13 cmp $l0;

        $i19 = (int) $b14;

        if $i19 < 0 goto label4;

        virtualinvoke r1.<org.mozilla.javascript.NativeArray: void delete(java.lang.String)>(r6);

        goto label4;

     label3:
        $r4 = (java.lang.Integer) r3;

        $i10 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $l11 = (long) $i10;

        $b12 = $l11 cmp $l0;

        $i20 = (int) $b12;

        if $i20 < 0 goto label4;

        virtualinvoke r1.<org.mozilla.javascript.NativeArray: void delete(int)>($i10);

     label4:
        i15 = i15 + 1;

        goto label2;

     label5:
        l16 = $l0;

     label6:
        $l7 = r1.<org.mozilla.javascript.NativeArray: long length>;

        $b8 = l16 cmp $l7;

        $i21 = (int) $b8;

        if $i21 >= 0 goto label7;

        staticinvoke <org.mozilla.javascript.NativeArray: void deleteElem(org.mozilla.javascript.Scriptable,long)>(r1, l16);

        l16 = l16 + 1L;

        goto label6;

     label7:
        r1.<org.mozilla.javascript.NativeArray: long length> = $l0;

        return;
    }

    static long getLengthProperty(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeArray $r3;
        org.mozilla.javascript.Context r1;
        long $l0, $l1, $l3;
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.NativeString $r4;
        int $i2;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        $z0 = r0 instanceof org.mozilla.javascript.NativeString;

        if $z0 == 0 goto label1;

        $r4 = (org.mozilla.javascript.NativeString) r0;

        $i2 = virtualinvoke $r4.<org.mozilla.javascript.NativeString: int getLength()>();

        $l3 = (long) $i2;

        return $l3;

     label1:
        $z1 = r0 instanceof org.mozilla.javascript.NativeArray;

        if $z1 == 0 goto label2;

        $r3 = (org.mozilla.javascript.NativeArray) r0;

        $l1 = virtualinvoke $r3.<org.mozilla.javascript.NativeArray: long getLength()>();

        return $l1;

     label2:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context)>(r0, "length", r1);

        $l0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long toUint32(java.lang.Object)>($r2);

        return $l0;
    }

    private static java.lang.Object setLengthProperty(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, long)
    {
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.Context r2;
        long l0;
        java.lang.Object $r3;
        java.lang.Number $r1;
        double $d0;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        l0 := @parameter2: long;

        $d0 = (double) l0;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,org.mozilla.javascript.Context)>(r0, "length", $r1, r2);

        return $r3;
    }

    private static void deleteElem(org.mozilla.javascript.Scriptable, long)
    {
        org.mozilla.javascript.Scriptable r0;
        byte $b3;
        int i1;
        long l0, $l2;
        java.lang.String $r1;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        l0 := @parameter1: long;

        i1 = (int) l0;

        $l2 = (long) i1;

        $b3 = $l2 cmp l0;

        if $b3 != 0 goto label1;

        interfaceinvoke r0.<org.mozilla.javascript.Scriptable: void delete(int)>(i1);

        goto label2;

     label1:
        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r0.<org.mozilla.javascript.Scriptable: void delete(java.lang.String)>($r1);

     label2:
        return;
    }

    private static java.lang.Object getElem(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, long)
    {
        org.mozilla.javascript.Context r1;
        long l0;
        org.mozilla.javascript.Scriptable r0;
        byte $b1;
        int $i2, $i3;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        l0 := @parameter2: long;

        $b1 = l0 cmp 2147483647L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context)>(r0, $r3, r1);

        return $r4;

     label1:
        $i2 = (int) l0;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectIndex(org.mozilla.javascript.Scriptable,int,org.mozilla.javascript.Context)>(r0, $i2, r1);

        return $r2;
    }

    private static void setElem(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, long, java.lang.Object)
    {
        org.mozilla.javascript.Context r2;
        long l0;
        org.mozilla.javascript.Scriptable r0;
        byte $b1;
        int $i2, $i3;
        java.lang.Object r1;
        java.lang.String $r3;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        l0 := @parameter2: long;

        r1 := @parameter3: java.lang.Object;

        $b1 = l0 cmp 2147483647L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,org.mozilla.javascript.Context)>(r0, $r3, r1, r2);

        goto label2;

     label1:
        $i2 = (int) l0;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectIndex(org.mozilla.javascript.Scriptable,int,java.lang.Object,org.mozilla.javascript.Context)>(r0, $i2, r1, r2);

     label2:
        return;
    }

    private static java.lang.String toStringHelper(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, boolean, boolean)
    {
        byte $b1, $b2, $b3;
        boolean z0, $z1, z2, z3, z4, z5, z6, z7;
        org.mozilla.javascript.Scriptable r1, $r10, r11;
        java.lang.Throwable $r16;
        java.lang.Object[] $r12;
        org.mozilla.javascript.Callable $r9;
        long $l0, l4;
        java.lang.StringBuffer $r21;
        int $i5, $i6, $i7;
        java.lang.String $r8, $r13, $r14, r17, r19, $r20;
        org.mozilla.javascript.Context r0;
        java.lang.Object $r6, $r7, r18;
        org.mozilla.javascript.ObjToIntMap $r3, $r4, $r5, $r22;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r11 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: org.mozilla.javascript.Scriptable;

        z0 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>(int)>(256);

        if z0 == 0 goto label01;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        r17 = ", ";

        goto label02;

     label01:
        r17 = ",";

     label02:
        z3 = 0;

        l4 = 0L;

        $r3 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating>;

        if $r3 != null goto label03;

        z4 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 0;

        $r22 = new org.mozilla.javascript.ObjToIntMap;

        specialinvoke $r22.<org.mozilla.javascript.ObjToIntMap: void <init>(int)>(31);

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating> = $r22;

        goto label04;

     label03:
        z4 = 0;

        z7 = 0;

        z6 = 0;

        $r4 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating>;

        z5 = virtualinvoke $r4.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>(r1);

     label04:
        if z5 != 0 goto label14;

        $r5 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating>;

        virtualinvoke $r5.<org.mozilla.javascript.ObjToIntMap: void put(java.lang.Object,int)>(r1, 0);

        l4 = 0L;

     label05:
        $b2 = l4 cmp $l0;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label14;

        $b3 = l4 cmp 0L;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label06;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

     label06:
        $r6 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l4);

        r18 = $r6;

        if $r6 == null goto label07;

        $r7 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if $r6 != $r7 goto label08;

     label07:
        z3 = 0;

        goto label13;

     label08:
        z3 = 1;

        if z0 == 0 goto label09;

        $r14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String uneval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r0, r11, $r6);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        goto label13;

     label09:
        $z1 = $r6 instanceof java.lang.String;

        if $z1 == 0 goto label11;

        r19 = (java.lang.String) $r6;

        if z0 == 0 goto label10;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeString(java.lang.String)>(r19);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label13;

     label10:
        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r19);

        goto label13;

     label11:
        if z2 == 0 goto label12;

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getPropFunctionAndThis(java.lang.Object,java.lang.String,org.mozilla.javascript.Context)>($r6, "toLocaleString", r0);

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r0);

        $r12 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        r18 = interfaceinvoke $r9.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r11, $r10, $r12);

     label12:
        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r18);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label13:
        l4 = l4 + 1L;

        goto label05;

     label14:
        if z6 == 0 goto label18;

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating> = null;

        goto label18;

     label15:
        $r16 := @caughtexception;

     label16:
        if z7 == 0 goto label17;

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating> = null;

     label17:
        throw $r16;

     label18:
        if z0 == 0 goto label20;

        if z3 != 0 goto label19;

        $b1 = l4 cmp 0L;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label19;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ]");

        goto label20;

     label19:
        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

     label20:
        $r20 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;

        catch java.lang.Throwable from label04 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private static java.lang.String js_join(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r2;
        long $l0, $l2, $l8;
        java.lang.String[] r3;
        byte $b3;
        java.lang.StringBuffer $r4;
        int i1, $i4, $i5, $i6, $i7, $i9, i10, i11, i12, i13;
        java.lang.String $r5, $r6, $r9, $r13, r15;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.EvaluatorException $r14;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object $r7, $r8, $r10, $r11, $r12;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object[];

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        i1 = (int) $l0;

        $l2 = (long) i1;

        $b3 = $l0 cmp $l2;

        if $b3 == 0 goto label01;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r14 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.arraylength.too.big", $r13);

        throw $r14;

     label01:
        $i4 = lengthof r2;

        if $i4 < 1 goto label02;

        $r11 = r2[0];

        $r10 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if $r11 != $r10 goto label03;

     label02:
        r15 = ",";

        goto label04;

     label03:
        $r12 = r2[0];

        r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r12);

     label04:
        if i1 != 0 goto label05;

        return "";

     label05:
        r3 = newarray (java.lang.String)[i1];

        i10 = 0;

        i11 = 0;

     label06:
        if i11 == i1 goto label08;

        $l8 = (long) i11;

        $r7 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, $l8);

        if $r7 == null goto label07;

        $r8 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if $r7 == $r8 goto label07;

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r7);

        $i9 = virtualinvoke $r9.<java.lang.String: int length()>();

        i10 = i10 + $i9;

        r3[i11] = $r9;

     label07:
        i11 = i11 + 1;

        goto label06;

     label08:
        $i5 = i1 - 1;

        $i6 = virtualinvoke r15.<java.lang.String: int length()>();

        $i7 = $i5 * $i6;

        i12 = i10 + $i7;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>(i12);

        i13 = 0;

     label09:
        if i13 == i1 goto label12;

        if i13 == 0 goto label10;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

     label10:
        $r6 = r3[i13];

        if $r6 == null goto label11;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label11:
        i13 = i13 + 1;

        goto label09;

     label12:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private static org.mozilla.javascript.Scriptable js_reverse(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r0;
        long $l0, l1, $l3, l4, l5;
        org.mozilla.javascript.Scriptable r1;
        byte $b2;
        int $i6;
        java.lang.Object $r2, $r3;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: java.lang.Object[];

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        l1 = $l0 / 2L;

        l5 = 0L;

     label1:
        $b2 = l5 cmp l1;

        $i6 = (int) $b2;

        if $i6 >= 0 goto label2;

        $l3 = $l0 - l5;

        l4 = $l3 - 1L;

        $r2 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l5);

        $r3 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l4);

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, l5, $r3);

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, l4, $r2);

        l5 = l5 + 1L;

        goto label1;

     label2:
        return r1;
    }

    private static org.mozilla.javascript.Scriptable js_sort(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r2, r3, r10;
        long $l0, $l4, $l5;
        byte $b1, $b6;
        int $i2, i3, i7, i8, $i9, $i10;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable r1, r4;
        java.lang.Object $r5, $r6, $r7, $r8, r9;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: org.mozilla.javascript.Scriptable;

        r2 := @parameter3: java.lang.Object[];

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        $b1 = $l0 cmp 1L;

        $i9 = (int) $b1;

        if $i9 > 0 goto label1;

        return r1;

     label1:
        $i2 = lengthof r2;

        if $i2 <= 0 goto label2;

        $r8 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        $r7 = r2[0];

        if $r8 == $r7 goto label2;

        r9 = r2[0];

        r10 = newarray (java.lang.Object)[2];

        goto label3;

     label2:
        r9 = null;

        r10 = null;

     label3:
        $b6 = $l0 cmp 2147483647L;

        $i10 = (int) $b6;

        if $i10 < 0 goto label4;

        staticinvoke <org.mozilla.javascript.NativeArray: void heapsort_extended(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,long,java.lang.Object,java.lang.Object[])>(r0, r4, r1, $l0, r9, r10);

        goto label8;

     label4:
        i3 = (int) $l0;

        r3 = newarray (java.lang.Object)[i3];

        i7 = 0;

     label5:
        if i7 == i3 goto label6;

        $l5 = (long) i7;

        $r6 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, $l5);

        r3[i7] = $r6;

        i7 = i7 + 1;

        goto label5;

     label6:
        staticinvoke <org.mozilla.javascript.NativeArray: void heapsort(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],int,java.lang.Object,java.lang.Object[])>(r0, r4, r3, i3, r9, r10);

        i8 = 0;

     label7:
        if i8 == i3 goto label8;

        $l4 = (long) i8;

        $r5 = r3[i8];

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, $l4, $r5);

        i8 = i8 + 1;

        goto label7;

     label8:
        return r1;
    }

    private static boolean isBigger(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r1;
        org.mozilla.javascript.Callable $r5;
        byte $b0;
        int $i1, $i2, $i3;
        java.lang.String $r9, $r10;
        double $d0;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.Scriptable $r6, r7;
        java.lang.Object r0, r2, r3, $r8, $r11;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r7 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object;

        r2 := @parameter3: java.lang.Object;

        r0 := @parameter4: java.lang.Object;

        r1 := @parameter5: java.lang.Object[];

        if r0 != null goto label01;

        if r1 == null goto label03;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        goto label03;

     label01:
        if r1 == null goto label02;

        $i2 = lengthof r1;

        if $i2 == 2 goto label03;

     label02:
        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label03:
        $r11 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if $r11 != r2 goto label04;

        return 0;

     label04:
        if $r11 != r3 goto label05;

        return 1;

     label05:
        if r0 != null goto label08;

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r3);

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r2);

        $i1 = virtualinvoke $r9.<java.lang.String: int compareTo(java.lang.String)>($r10);

        if $i1 <= 0 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        return $z0;

     label08:
        r1[0] = r3;

        r1[1] = r2;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getValueFunctionAndThis(java.lang.Object,org.mozilla.javascript.Context)>(r0, r4);

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r4);

        $r8 = interfaceinvoke $r5.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r4, r7, $r6, r1);

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r8);

        $b0 = $d0 cmpl 0.0;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label09;

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        return $z1;
    }

    private static void heapsort(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], int, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r0, r5;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Scriptable r3;
        int i0, i1, i2, $i4, $i6;
        java.lang.Object $r1, r4, r6, r7;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object[];

        if i0 > 1 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        i1 = i0 / 2;

     label2:
        if i1 == 0 goto label3;

        $i4 = (int) -1;

        i1 = i1 + $i4;

        r6 = r0[i1];

        staticinvoke <org.mozilla.javascript.NativeArray: void heapify(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object[],int,int,java.lang.Object,java.lang.Object[])>(r2, r3, r6, r0, i1, i0, r4, r5);

        goto label2;

     label3:
        i2 = i0;

     label4:
        if i2 == 1 goto label5;

        $i6 = (int) -1;

        i2 = i2 + $i6;

        r7 = r0[i2];

        $r1 = r0[0];

        r0[i2] = $r1;

        staticinvoke <org.mozilla.javascript.NativeArray: void heapify(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object[],int,int,java.lang.Object,java.lang.Object[])>(r2, r3, r7, r0, 0, i2, r4, r5);

        goto label4;

     label5:
        return;
    }

    private static void heapify(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Object[], int, int, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r0, r5;
        int $i0, i1, $i2, $i3, $i4, i5, i6;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Scriptable r2;
        java.lang.Object r3, r4, r6, r7;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object;

        r0 := @parameter3: java.lang.Object[];

        i5 := @parameter4: int;

        i1 := @parameter5: int;

        r4 := @parameter6: java.lang.Object;

        r5 := @parameter7: java.lang.Object[];

     label1:
        $i0 = i5 * 2;

        $i3 = $i0 + 1;

        i6 = $i3;

        if $i3 < i1 goto label2;

        goto label5;

     label2:
        r7 = r0[$i3];

        $i2 = $i3 + 1;

        if $i2 >= i1 goto label3;

        $i4 = $i3 + 1;

        r6 = r0[$i4];

        $z0 = staticinvoke <org.mozilla.javascript.NativeArray: boolean isBigger(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>(r1, r2, r6, r7, r4, r5);

        if $z0 == 0 goto label3;

        i6 = $i3 + 1;

        r7 = r6;

     label3:
        $z1 = staticinvoke <org.mozilla.javascript.NativeArray: boolean isBigger(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>(r1, r2, r7, r3, r4, r5);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        r0[i5] = r7;

        i5 = i6;

        goto label1;

     label5:
        r0[i5] = r3;

        return;
    }

    private static void heapsort_extended(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, long, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r6;
        org.mozilla.javascript.Context r0;
        long l0, l3, l5;
        org.mozilla.javascript.Scriptable r1, r4;
        byte $b1, $b2, $b4;
        int $i6;
        java.lang.Object $r2, $r3, r5, $r7;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: org.mozilla.javascript.Scriptable;

        l0 := @parameter3: long;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object[];

        $b1 = l0 cmp 1L;

        $i6 = (int) $b1;

        if $i6 > 0 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        l3 = l0 / 2L;

     label2:
        $b4 = l3 cmp 0L;

        if $b4 == 0 goto label3;

        l3 = l3 - 1L;

        $r7 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l3);

        staticinvoke <org.mozilla.javascript.NativeArray: void heapify_extended(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Scriptable,long,long,java.lang.Object,java.lang.Object[])>(r0, r4, $r7, r1, l3, l0, r5, r6);

        goto label2;

     label3:
        l5 = l0;

     label4:
        $b2 = l5 cmp 1L;

        if $b2 == 0 goto label5;

        l5 = l5 - 1L;

        $r2 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l5);

        $r3 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, 0L);

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, l5, $r3);

        staticinvoke <org.mozilla.javascript.NativeArray: void heapify_extended(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Scriptable,long,long,java.lang.Object,java.lang.Object[])>(r0, r4, $r2, r1, 0L, l5, r5, r6);

        goto label4;

     label5:
        return;
    }

    private static void heapify_extended(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, org.mozilla.javascript.Scriptable, long, long, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r6;
        long $l0, l1, $l3, $l5, $l6, l7, l8;
        byte $b2, $b4;
        int $i9, $i10;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable r1, r3;
        java.lang.Object $r2, r4, r5, $r7, r8;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: java.lang.Object;

        r1 := @parameter3: org.mozilla.javascript.Scriptable;

        l7 := @parameter4: long;

        l1 := @parameter5: long;

        r5 := @parameter6: java.lang.Object;

        r6 := @parameter7: java.lang.Object[];

     label1:
        $l0 = l7 * 2L;

        $l5 = $l0 + 1L;

        l8 = $l5;

        $b2 = $l5 cmp l1;

        $i9 = (int) $b2;

        if $i9 < 0 goto label2;

        goto label5;

     label2:
        $r2 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, $l5);

        r8 = $r2;

        $l3 = $l5 + 1L;

        $b4 = $l3 cmp l1;

        $i10 = (int) $b4;

        if $i10 >= 0 goto label3;

        $l6 = $l5 + 1L;

        $r7 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, $l6);

        $z0 = staticinvoke <org.mozilla.javascript.NativeArray: boolean isBigger(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>(r0, r3, $r7, $r2, r5, r6);

        if $z0 == 0 goto label3;

        l8 = $l5 + 1L;

        r8 = $r7;

     label3:
        $z1 = staticinvoke <org.mozilla.javascript.NativeArray: boolean isBigger(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>(r0, r3, r8, r4, r5, r6);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, l7, r8);

        l7 = l8;

        goto label1;

     label5:
        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, l7, r4);

        return;
    }

    private static java.lang.Object js_push(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r2;
        long $l0, $l3, $l8, $l9, l11;
        int $i1, $i2, $i4, $i5, $i6, $i7, i10;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object $r3, $r4, $r5;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object[];

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        i10 = 0;

     label1:
        $i1 = lengthof r2;

        if i10 >= $i1 goto label2;

        $l8 = (long) i10;

        $l9 = $l0 + $l8;

        $r4 = r2[i10];

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, $l9, $r4);

        i10 = i10 + 1;

        goto label1;

     label2:
        $i2 = lengthof r2;

        $l3 = (long) $i2;

        l11 = $l0 + $l3;

        $r3 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object setLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l11);

        $i4 = virtualinvoke r0.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i4 != 120 goto label5;

        $i5 = lengthof r2;

        if $i5 != 0 goto label3;

        $r5 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label4;

     label3:
        $i6 = lengthof r2;

        $i7 = $i6 - 1;

        $r5 = r2[$i7];

     label4:
        return $r5;

     label5:
        return $r3;
    }

    private static java.lang.Object js_pop(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.mozilla.javascript.Context r0;
        long $l0, l2;
        org.mozilla.javascript.Scriptable r1;
        byte $b1;
        int $i3;
        java.lang.Object r3;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object[];

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        l2 = $l0;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        l2 = $l0 - 1L;

        r3 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l2);

        goto label2;

     label1:
        r3 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label2:
        staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object setLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l2);

        return r3;
    }

    private static java.lang.Object js_shift(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r3;
        org.mozilla.javascript.Context r0;
        long $l0, $l4, l5, l6;
        org.mozilla.javascript.Scriptable r1;
        byte $b1, $b2, $b3;
        int $i7, $i8, $i9;
        java.lang.Object $r2, r4;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object[];

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        l5 = $l0;

        $b1 = $l0 cmp 0L;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label2;

        l5 = $l0 - 1L;

        r4 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, 0L);

        $b2 = l5 cmp 0L;

        $i8 = (int) $b2;

        if $i8 <= 0 goto label3;

        l6 = 1L;

     label1:
        $b3 = l6 cmp l5;

        $i9 = (int) $b3;

        if $i9 > 0 goto label3;

        $r2 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l6);

        $l4 = l6 - 1L;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, $l4, $r2);

        l6 = l6 + 1L;

        goto label1;

     label2:
        r4 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label3:
        staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object setLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l5);

        return r4;
    }

    private static java.lang.Object js_unshift(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r2;
        long $l0, $l5, $l6, $l8, $l9, l10, l13;
        byte $b3, $b7;
        int i1, $i2, $i4, i11, $i12, $i14, $i15;
        java.lang.Number $r3;
        double $d0;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object $r4, $r5, $r6;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object[];

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1);

        i1 = lengthof r2;

        $i2 = lengthof r2;

        if $i2 <= 0 goto label5;

        $b3 = $l0 cmp 0L;

        $i14 = (int) $b3;

        if $i14 <= 0 goto label2;

        l10 = $l0 - 1L;

     label1:
        $b7 = l10 cmp 0L;

        $i15 = (int) $b7;

        if $i15 < 0 goto label2;

        $r6 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l10);

        $l8 = (long) i1;

        $l9 = l10 + $l8;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, $l9, $r6);

        l10 = l10 - 1L;

        goto label1;

     label2:
        i11 = 0;

     label3:
        $i12 = lengthof r2;

        if i11 >= $i12 goto label4;

        $l6 = (long) i11;

        $r5 = r2[i11];

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r0, r1, $l6, $r5);

        i11 = i11 + 1;

        goto label3;

     label4:
        $i4 = lengthof r2;

        $l5 = (long) $i4;

        l13 = $l0 + $l5;

        $r4 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object setLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r0, r1, l13);

        return $r4;

     label5:
        $d0 = (double) $l0;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

        return $r3;
    }

    private static java.lang.Object js_splice(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        byte $b3, $b5, $b6, $b7, $b12, $b14, $b17, $b24, $b26, $b29;
        org.mozilla.javascript.Scriptable $r0, $r2, r4, r11, r13;
        java.lang.Object[] r3;
        long $l0, $l1, $l4, $l8, $l9, $l11, $l13, $l15, $l18, l22, $l23, l25, $l27, $l28, l30, l31;
        int $i2, $i10, $i16, $i19, i20, i21, $i32, $i33, i34, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44;
        double $d0, $d1, $d2;
        org.mozilla.javascript.Context r1;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10, r12;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r11 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        r3 := @parameter3: java.lang.Object[];

        $r0 = staticinvoke <org.mozilla.javascript.NativeArray: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r11);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r1, $r0, "Array", null);

        r12 = $r2;

        i20 = lengthof r3;

        if i20 != 0 goto label01;

        return $r2;

     label01:
        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r1, r4);

        $r5 = r3[0];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r5);

        $l1 = staticinvoke <org.mozilla.javascript.NativeArray: long toSliceIndex(double,long)>($d0, $l0);

        $i36 = (int) -1;

        i21 = i20 + $i36;

        $i2 = lengthof r3;

        if $i2 != 1 goto label02;

        l22 = $l0 - $l1;

        goto label06;

     label02:
        $r6 = r3[1];

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r6);

        $b3 = $d1 cmpg 0.0;

        $i37 = (int) $b3;

        if $i37 >= 0 goto label03;

        l22 = 0L;

        goto label05;

     label03:
        $l4 = $l0 - $l1;

        $d2 = (double) $l4;

        $b5 = $d1 cmpl $d2;

        $i38 = (int) $b5;

        if $i38 <= 0 goto label04;

        l22 = $l0 - $l1;

        goto label05;

     label04:
        l22 = (long) $d1;

     label05:
        $i40 = (int) -1;

        i21 = i21 + $i40;

     label06:
        $l23 = $l1 + l22;

        $b24 = l22 cmp 0L;

        if $b24 == 0 goto label09;

        $b17 = l22 cmp 1L;

        if $b17 != 0 goto label07;

        $i19 = virtualinvoke r1.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i19 != 120 goto label07;

        r12 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r1, r4, $l1);

        goto label10;

     label07:
        l25 = $l1;

     label08:
        $b26 = l25 cmp $l23;

        if $b26 == 0 goto label10;

        r13 = (org.mozilla.javascript.Scriptable) $r2;

        $r10 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r1, r4, l25);

        $l18 = l25 - $l1;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, r13, $l18, $r10);

        l25 = l25 + 1L;

        goto label08;

     label09:
        $b6 = l22 cmp 0L;

        if $b6 != 0 goto label10;

        $i16 = virtualinvoke r1.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i16 != 120 goto label10;

        r12 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label10:
        $l27 = (long) i21;

        $l28 = $l27 - l22;

        $b29 = $l28 cmp 0L;

        $i41 = (int) $b29;

        if $i41 <= 0 goto label12;

        l30 = $l0 - 1L;

     label11:
        $b14 = l30 cmp $l23;

        $i42 = (int) $b14;

        if $i42 < 0 goto label14;

        $r9 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r1, r4, l30);

        $l15 = l30 + $l28;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, r4, $l15, $r9);

        l30 = l30 - 1L;

        goto label11;

     label12:
        $b7 = $l28 cmp 0L;

        $i43 = (int) $b7;

        if $i43 >= 0 goto label14;

        l31 = $l23;

     label13:
        $b12 = l31 cmp $l0;

        $i44 = (int) $b12;

        if $i44 >= 0 goto label14;

        $r8 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r1, r4, l31);

        $l13 = l31 + $l28;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, r4, $l13, $r8);

        l31 = l31 + 1L;

        goto label13;

     label14:
        $i32 = lengthof r3;

        $i33 = $i32 - i21;

        i34 = 0;

     label15:
        if i34 >= i21 goto label16;

        $l9 = (long) i34;

        $l11 = $l1 + $l9;

        $i10 = i34 + $i33;

        $r7 = r3[$i10];

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, r4, $l11, $r7);

        i34 = i34 + 1;

        goto label15;

     label16:
        $l8 = $l0 + $l28;

        staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object setLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r1, r4, $l8);

        return r12;
    }

    private static org.mozilla.javascript.Scriptable js_concat(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] $r3, r6;
        long $l0, $l1, $l3, l5, l8;
        byte $b2, $b4;
        int i6, $i7, $i9, $i10;
        org.mozilla.javascript.Function $r2;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Scriptable $r0, $r4, r5, r10, r13;
        java.lang.Object $r7, $r8, $r9, $r11, $r12;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r13 := @parameter1: org.mozilla.javascript.Scriptable;

        r5 := @parameter2: org.mozilla.javascript.Scriptable;

        r6 := @parameter3: java.lang.Object[];

        $r0 = staticinvoke <org.mozilla.javascript.NativeArray: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r13);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Function getExistingCtor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>(r1, $r0, "Array");

        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r4 = interfaceinvoke $r2.<org.mozilla.javascript.Function: org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, $r0, $r3);

        $z0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean instanceOf(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r5, $r2, r1);

        if $z0 == 0 goto label2;

        $l3 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r1, r5);

        l5 = 0L;

     label1:
        $b4 = l5 cmp $l3;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label3;

        $r12 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r1, r5, l5);

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, $r4, l5, $r12);

        l5 = l5 + 1L;

        goto label1;

     label2:
        l5 = 1L;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, $r4, 0L, r5);

     label3:
        i6 = 0;

     label4:
        $i7 = lengthof r6;

        if i6 >= $i7 goto label8;

        $r7 = r6[i6];

        $z1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean instanceOf(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>($r7, $r2, r1);

        if $z1 == 0 goto label6;

        $r9 = r6[i6];

        r10 = (org.mozilla.javascript.Scriptable) $r9;

        $l1 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r1, r10);

        l8 = 0L;

     label5:
        $b2 = l8 cmp $l1;

        $i10 = (int) $b2;

        if $i10 >= 0 goto label7;

        $r11 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r1, r10, l8);

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, $r4, l5, $r11);

        l8 = l8 + 1L;

        l5 = l5 + 1L;

        goto label5;

     label6:
        $l0 = l5;

        l5 = l5 + 1L;

        $r8 = r6[i6];

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r1, $r4, $l0, $r8);

     label7:
        i6 = i6 + 1;

        goto label4;

     label8:
        return $r4;
    }

    private org.mozilla.javascript.Scriptable js_slice(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r5;
        long $l0, $l3, l4, l5, l6;
        byte $b7;
        int $i1, $i2, $i8;
        double $d0, $d1;
        org.mozilla.javascript.NativeArray r0;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Scriptable $r1, $r3, r4;
        java.lang.Object $r6, $r7, $r8;

        r0 := @this: org.mozilla.javascript.NativeArray;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r5 := @parameter2: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.NativeArray: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r0);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r2, $r1, "Array", null);

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r2, r4);

        $i1 = lengthof r5;

        if $i1 != 0 goto label1;

        l4 = 0L;

        l5 = $l0;

        goto label3;

     label1:
        $r6 = r5[0];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r6);

        l4 = staticinvoke <org.mozilla.javascript.NativeArray: long toSliceIndex(double,long)>($d0, $l0);

        $i2 = lengthof r5;

        if $i2 != 1 goto label2;

        l5 = $l0;

        goto label3;

     label2:
        $r7 = r5[1];

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r7);

        l5 = staticinvoke <org.mozilla.javascript.NativeArray: long toSliceIndex(double,long)>($d1, $l0);

     label3:
        l6 = l4;

     label4:
        $b7 = l6 cmp l5;

        $i8 = (int) $b7;

        if $i8 >= 0 goto label5;

        $r8 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r2, r4, l6);

        $l3 = l6 - l4;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r2, $r3, $l3, $r8);

        l6 = l6 + 1L;

        goto label4;

     label5:
        return $r3;
    }

    private static long toSliceIndex(double, long)
    {
        long l1, l4;
        byte $b0, $b2, $b3;
        int $i5, $i6, $i7;
        double d0, $d1, $d2, $d3, $d4, $d5;

        d0 := @parameter0: double;

        l1 := @parameter1: long;

        $b0 = d0 cmpg 0.0;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label2;

        $d2 = (double) l1;

        $d3 = d0 + $d2;

        $b3 = $d3 cmpg 0.0;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label1;

        l4 = 0L;

        goto label4;

     label1:
        $d4 = (double) l1;

        $d5 = d0 + $d4;

        l4 = (long) $d5;

        goto label4;

     label2:
        $d1 = (double) l1;

        $b2 = d0 cmpl $d1;

        $i7 = (int) $b2;

        if $i7 <= 0 goto label3;

        l4 = l1;

        goto label4;

     label3:
        l4 = (long) d0;

     label4:
        return l4;
    }

    private java.lang.Object indexOfHelper(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[], boolean)
    {
        java.lang.Integer $r4;
        byte $b3, $b4, $b5, $b9;
        java.lang.Long $r12, $r13;
        boolean z0, $z1, $z2;
        org.mozilla.javascript.NativeArray r10;
        org.mozilla.javascript.Scriptable r3;
        java.lang.Object[] r0;
        long $l1, $l7, l8, l10, l11;
        int $i0, $i2, $i6, $i12, $i13, $i14, $i15;
        double $d0;
        org.mozilla.javascript.Context r2;
        java.lang.Object r1, $r5, $r7, $r9, $r11;

        r10 := @this: org.mozilla.javascript.NativeArray;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        z0 := @parameter3: boolean;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label01;

        $r11 = r0[0];

        goto label02;

     label01:
        $r11 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label02:
        r1 = $r11;

        $l1 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r2, r3);

        $i2 = lengthof r0;

        if $i2 <= 1 goto label03;

        $r9 = r0[1];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r9);

        $i6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(double)>($d0);

        $l7 = (long) $i6;

        goto label05;

     label03:
        if z0 == 0 goto label04;

        $l7 = $l1;

        goto label05;

     label04:
        $l7 = 0L;

     label05:
        l8 = $l7;

        $b9 = $l7 cmp 0L;

        $i12 = (int) $b9;

        if $i12 >= 0 goto label06;

        l8 = $l7 + $l1;

        $b5 = l8 cmp 0L;

        $i13 = (int) $b5;

        if $i13 >= 0 goto label06;

        l8 = 0L;

     label06:
        if z0 == 0 goto label09;

        l10 = l8;

     label07:
        $b4 = l10 cmp 0L;

        $i14 = (int) $b4;

        if $i14 < 0 goto label12;

        $r7 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r2, r3, l10);

        $z2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean shallowEq(java.lang.Object,java.lang.Object)>($r7, r1);

        if $z2 == 0 goto label08;

        $r12 = new java.lang.Long;

        specialinvoke $r12.<java.lang.Long: void <init>(long)>(l10);

        return $r12;

     label08:
        l10 = l10 - 1L;

        goto label07;

     label09:
        l11 = l8;

     label10:
        $b3 = l11 cmp $l1;

        $i15 = (int) $b3;

        if $i15 >= 0 goto label12;

        $r5 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r2, r3, l11);

        $z1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean shallowEq(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z1 == 0 goto label11;

        $r13 = new java.lang.Long;

        specialinvoke $r13.<java.lang.Long: void <init>(long)>(l11);

        return $r13;

     label11:
        l11 = l11 + 1L;

        goto label10;

     label12:
        $r4 = <org.mozilla.javascript.NativeArray: java.lang.Integer NEGATIVE_ONE>;

        return $r4;
    }

    private java.lang.Object iterativeMethod(org.mozilla.javascript.Context, int, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        byte $b8;
        java.lang.Long $r28, $r29;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.mozilla.javascript.NativeArray r23;
        org.mozilla.javascript.Scriptable $r5, r6, r8, r20, $r25, r26;
        java.lang.Object[] r0, $r18, $r27;
        long $l3, $l4, $l5, l6, l7;
        int $i0, $i1, i2, $i9;
        java.lang.Boolean $r9, $r10, $r15, $r17;
        org.mozilla.javascript.Function r4;
        java.lang.String $r2;
        org.mozilla.javascript.Context r7;
        java.lang.RuntimeException $r3;
        java.lang.Object r1, $r11, $r12, $r14, $r16, $r21, $r22, $r24;

        r23 := @this: org.mozilla.javascript.NativeArray;

        r7 := @parameter0: org.mozilla.javascript.Context;

        i2 := @parameter1: int;

        r20 := @parameter2: org.mozilla.javascript.Scriptable;

        r8 := @parameter3: org.mozilla.javascript.Scriptable;

        r0 := @parameter4: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label01;

        $r24 = r0[0];

        goto label02;

     label01:
        $r24 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label02:
        r1 = $r24;

        if $r24 == null goto label03;

        $z0 = $r24 instanceof org.mozilla.javascript.Function;

        if $z0 != 0 goto label04;

     label03:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object)>($r2);

        throw $r3;

     label04:
        r4 = (org.mozilla.javascript.Function) $r24;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r4);

        $i1 = lengthof r0;

        if $i1 <= 1 goto label05;

        $r21 = r0[1];

        $z4 = $r21 instanceof org.mozilla.javascript.Scriptable;

        if $z4 == 0 goto label05;

        $r22 = r0[1];

        $r25 = (org.mozilla.javascript.Scriptable) $r22;

        goto label06;

     label05:
        $r25 = $r5;

     label06:
        r6 = $r25;

        $l5 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r7, r8);

        r26 = null;

        if i2 != 18 goto label07;

        r26 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r7, r20, "Array", null);

        goto label08;

     label07:
        if i2 != 20 goto label08;

        $r18 = newarray (java.lang.Object)[1];

        $r28 = new java.lang.Long;

        specialinvoke $r28.<java.lang.Long: void <init>(long)>($l5);

        $r18[0] = $r28;

        r26 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r7, r20, "Array", $r18);

     label08:
        $r27 = newarray (java.lang.Object)[3];

        l6 = 0L;

        l7 = 0L;

     label09:
        $b8 = l7 cmp $l5;

        $i9 = (int) $b8;

        if $i9 >= 0 goto label16;

        $r12 = staticinvoke <org.mozilla.javascript.NativeArray: java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long)>(r7, r8, l7);

        $r27[0] = $r12;

        $r29 = new java.lang.Long;

        specialinvoke $r29.<java.lang.Long: void <init>(long)>(l7);

        $r27[1] = $r29;

        $r27[2] = r8;

        $r14 = interfaceinvoke r4.<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r7, $r5, r6, $r27);

        tableswitch(i2)
        {
            case 17: goto label10;
            case 18: goto label11;
            case 19: goto label12;
            case 20: goto label13;
            case 21: goto label14;
            default: goto label15;
        };

     label10:
        $z3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>($r14);

        if $z3 != 0 goto label15;

        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r17;

     label11:
        $z2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>($r14);

        if $z2 == 0 goto label15;

        $l4 = l6;

        l6 = l6 + 1L;

        $r16 = $r27[0];

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r7, r26, $l4, $r16);

        goto label15;

     label12:
        goto label15;

     label13:
        $l3 = l6;

        l6 = l6 + 1L;

        staticinvoke <org.mozilla.javascript.NativeArray: void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object)>(r7, r26, $l3, $r14);

        goto label15;

     label14:
        $z1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>($r14);

        if $z1 == 0 goto label15;

        $r15 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r15;

     label15:
        l7 = l7 + 1L;

        goto label09;

     label16:
        tableswitch(i2)
        {
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label20;
            case 20: goto label18;
            case 21: goto label19;
            default: goto label20;
        };

     label17:
        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r10;

     label18:
        return r26;

     label19:
        $r9 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r9;

     label20:
        $r11 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r11;
    }

    protected int findPrototypeId(java.lang.String)
    {
        byte b12;
        boolean $z0;
        org.mozilla.javascript.NativeArray r1;
        int $i0, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        java.lang.String r0, r2, r3, r4, r5;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11;

        r1 := @this: org.mozilla.javascript.NativeArray;

        r0 := @parameter0: java.lang.String;

        b12 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        tableswitch($i0)
        {
            case 3: goto label01;
            case 4: goto label03;
            case 5: goto label09;
            case 6: goto label12;
            case 7: goto label15;
            case 8: goto label21;
            case 9: goto label26;
            case 10: goto label26;
            case 11: goto label23;
            case 12: goto label26;
            case 13: goto label26;
            case 14: goto label25;
            default: goto label26;
        };

     label01:
        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i13 = (int) $c7;

        if $i13 != 109 goto label02;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i14 = (int) $c10;

        if $i14 != 112 goto label26;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i15 = (int) $c11;

        if $i15 != 97 goto label26;

        b12 = 20;

        goto label27;

     label02:
        $i16 = (int) $c7;

        if $i16 != 112 goto label26;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i17 = (int) $c8;

        if $i17 != 112 goto label26;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i18 = (int) $c9;

        if $i18 != 111 goto label26;

        b12 = 9;

        goto label27;

     label03:
        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i19 = (int) $c6;

        lookupswitch($i19)
        {
            case 105: goto label04;
            case 109: goto label05;
            case 114: goto label06;
            case 115: goto label07;
            default: goto label08;
        };

     label04:
        r2 = "join";

        r5 = "join";

        r4 = "join";

        r3 = "join";

        b12 = 5;

        goto label26;

     label05:
        r2 = "some";

        r5 = "some";

        r4 = "some";

        r3 = "some";

        b12 = 21;

        goto label26;

     label06:
        r2 = "sort";

        r5 = "sort";

        r4 = "sort";

        r3 = "sort";

        b12 = 7;

        goto label26;

     label07:
        r2 = "push";

        r5 = "push";

        r4 = "push";

        r3 = "push";

        b12 = 8;

        goto label26;

     label08:
        goto label26;

     label09:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i20 = (int) $c5;

        if $i20 != 104 goto label10;

        r2 = "shift";

        r5 = "shift";

        r4 = "shift";

        r3 = "shift";

        b12 = 10;

        goto label26;

     label10:
        $i21 = (int) $c5;

        if $i21 != 108 goto label11;

        r2 = "slice";

        r5 = "slice";

        r4 = "slice";

        r3 = "slice";

        b12 = 14;

        goto label26;

     label11:
        $i22 = (int) $c5;

        if $i22 != 118 goto label26;

        r2 = "every";

        r5 = "every";

        r4 = "every";

        r3 = "every";

        b12 = 17;

        goto label26;

     label12:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i23 = (int) $c4;

        if $i23 != 99 goto label13;

        r2 = "concat";

        r5 = "concat";

        r4 = "concat";

        r3 = "concat";

        b12 = 13;

        goto label26;

     label13:
        $i24 = (int) $c4;

        if $i24 != 102 goto label14;

        r2 = "filter";

        r5 = "filter";

        r4 = "filter";

        r3 = "filter";

        b12 = 18;

        goto label26;

     label14:
        $i25 = (int) $c4;

        if $i25 != 115 goto label26;

        r2 = "splice";

        r5 = "splice";

        r4 = "splice";

        r3 = "splice";

        b12 = 12;

        goto label26;

     label15:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i26 = (int) $c3;

        lookupswitch($i26)
        {
            case 102: goto label16;
            case 105: goto label17;
            case 114: goto label18;
            case 117: goto label19;
            default: goto label20;
        };

     label16:
        r2 = "forEach";

        r5 = "forEach";

        r4 = "forEach";

        r3 = "forEach";

        b12 = 19;

        goto label26;

     label17:
        r2 = "indexOf";

        r5 = "indexOf";

        r4 = "indexOf";

        r3 = "indexOf";

        b12 = 15;

        goto label26;

     label18:
        r2 = "reverse";

        r5 = "reverse";

        r4 = "reverse";

        r3 = "reverse";

        b12 = 6;

        goto label26;

     label19:
        r2 = "unshift";

        r5 = "unshift";

        r4 = "unshift";

        r3 = "unshift";

        b12 = 11;

        goto label26;

     label20:
        goto label26;

     label21:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i27 = (int) $c2;

        if $i27 != 111 goto label22;

        r2 = "toSource";

        r5 = "toSource";

        r4 = "toSource";

        r3 = "toSource";

        b12 = 4;

        goto label26;

     label22:
        $i28 = (int) $c2;

        if $i28 != 116 goto label26;

        r2 = "toString";

        r5 = "toString";

        r4 = "toString";

        r3 = "toString";

        b12 = 2;

        goto label26;

     label23:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i29 = (int) $c1;

        if $i29 != 99 goto label24;

        r2 = "constructor";

        r5 = "constructor";

        r4 = "constructor";

        r3 = "constructor";

        b12 = 1;

        goto label26;

     label24:
        $i30 = (int) $c1;

        if $i30 != 108 goto label26;

        r2 = "lastIndexOf";

        r5 = "lastIndexOf";

        r4 = "lastIndexOf";

        r3 = "lastIndexOf";

        b12 = 16;

        goto label26;

     label25:
        r2 = "toLocaleString";

        r5 = "toLocaleString";

        r4 = "toLocaleString";

        r3 = "toLocaleString";

        b12 = 3;

        goto label26;

     label26:
        if r4 == null goto label27;

        if r5 == r0 goto label27;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label27;

        b12 = 0;

     label27:
        return b12;
    }

    static void <clinit>()
    {
        int $i1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        <org.mozilla.javascript.NativeArray: int maximumDenseLength> = 10000;

        <org.mozilla.javascript.NativeArray: int MAX_PROTOTYPE_ID> = 21;

        <org.mozilla.javascript.NativeArray: int Id_some> = 21;

        <org.mozilla.javascript.NativeArray: int Id_map> = 20;

        <org.mozilla.javascript.NativeArray: int Id_forEach> = 19;

        <org.mozilla.javascript.NativeArray: int Id_filter> = 18;

        <org.mozilla.javascript.NativeArray: int Id_every> = 17;

        <org.mozilla.javascript.NativeArray: int Id_lastIndexOf> = 16;

        <org.mozilla.javascript.NativeArray: int Id_indexOf> = 15;

        <org.mozilla.javascript.NativeArray: int Id_slice> = 14;

        <org.mozilla.javascript.NativeArray: int Id_concat> = 13;

        <org.mozilla.javascript.NativeArray: int Id_splice> = 12;

        <org.mozilla.javascript.NativeArray: int Id_unshift> = 11;

        <org.mozilla.javascript.NativeArray: int Id_shift> = 10;

        <org.mozilla.javascript.NativeArray: int Id_pop> = 9;

        <org.mozilla.javascript.NativeArray: int Id_push> = 8;

        <org.mozilla.javascript.NativeArray: int Id_sort> = 7;

        <org.mozilla.javascript.NativeArray: int Id_reverse> = 6;

        <org.mozilla.javascript.NativeArray: int Id_join> = 5;

        <org.mozilla.javascript.NativeArray: int Id_toSource> = 4;

        <org.mozilla.javascript.NativeArray: int Id_toLocaleString> = 3;

        <org.mozilla.javascript.NativeArray: int Id_toString> = 2;

        <org.mozilla.javascript.NativeArray: int Id_constructor> = 1;

        <org.mozilla.javascript.NativeArray: int MAX_INSTANCE_ID> = 1;

        <org.mozilla.javascript.NativeArray: int Id_length> = 1;

        <org.mozilla.javascript.NativeArray: long serialVersionUID> = 7331366857676127338L;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeArray: java.lang.Object ARRAY_TAG> = $r2;

        $r3 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i1);

        <org.mozilla.javascript.NativeArray: java.lang.Integer NEGATIVE_ONE> = $r3;

        return;
    }
}
