public class com.google.inject.matcher.Matchers extends java.lang.Object
{
    private static final com.google.inject.matcher.Matcher ANY;

    private void <init>()
    {
        com.google.inject.matcher.Matchers r0;

        r0 := @this: com.google.inject.matcher.Matchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.inject.matcher.Matcher any()
    {
        com.google.inject.matcher.Matcher $r0;

        $r0 = <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher ANY>;

        return $r0;
    }

    public static com.google.inject.matcher.Matcher not(com.google.inject.matcher.Matcher)
    {
        com.google.inject.matcher.Matchers$Not $r0;
        com.google.inject.matcher.Matcher r1;

        r1 := @parameter0: com.google.inject.matcher.Matcher;

        $r0 = new com.google.inject.matcher.Matchers$Not;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$Not: void <init>(com.google.inject.matcher.Matcher,com.google.inject.matcher.Matchers$1)>(r1, null);

        return $r0;
    }

    private static void checkForRuntimeRetention(java.lang.Class)
    {
        java.lang.'annotation'.Retention r2;
        java.lang.'annotation'.Annotation $r1;
        java.lang.Class r0;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String $r7, $r10;
        java.lang.'annotation'.RetentionPolicy $r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljava/lang/annotation/Retention;");

        r2 = (java.lang.'annotation'.Retention) $r1;

        if r2 == null goto label1;

        $r3 = interfaceinvoke r2.<java.lang.'annotation'.Retention: java.lang.'annotation'.RetentionPolicy value()>();

        $r4 = <java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy RUNTIME>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Annotation ");

        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing RUNTIME retention");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r10);

        return;
    }

    public static com.google.inject.matcher.Matcher annotatedWith(java.lang.Class)
    {
        com.google.inject.matcher.Matchers$AnnotatedWithType $r0;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.google.inject.matcher.Matchers$AnnotatedWithType;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$AnnotatedWithType: void <init>(java.lang.Class)>(r1);

        return $r0;
    }

    public static com.google.inject.matcher.Matcher annotatedWith(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r1;
        com.google.inject.matcher.Matchers$AnnotatedWith $r0;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r0 = new com.google.inject.matcher.Matchers$AnnotatedWith;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$AnnotatedWith: void <init>(java.lang.'annotation'.Annotation)>(r1);

        return $r0;
    }

    public static com.google.inject.matcher.Matcher subclassesOf(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.inject.matcher.Matchers$SubclassesOf $r0;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.google.inject.matcher.Matchers$SubclassesOf;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$SubclassesOf: void <init>(java.lang.Class)>(r1);

        return $r0;
    }

    public static com.google.inject.matcher.Matcher only(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.inject.matcher.Matchers$Only $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.google.inject.matcher.Matchers$Only;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$Only: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public static com.google.inject.matcher.Matcher identicalTo(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.inject.matcher.Matchers$IdenticalTo $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.google.inject.matcher.Matchers$IdenticalTo;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$IdenticalTo: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public static com.google.inject.matcher.Matcher inPackage(java.lang.Package)
    {
        com.google.inject.matcher.Matchers$InPackage $r0;
        java.lang.Package r1;

        r1 := @parameter0: java.lang.Package;

        $r0 = new com.google.inject.matcher.Matchers$InPackage;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$InPackage: void <init>(java.lang.Package)>(r1);

        return $r0;
    }

    public static com.google.inject.matcher.Matcher inSubpackage(java.lang.String)
    {
        com.google.inject.matcher.Matchers$InSubpackage $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.google.inject.matcher.Matchers$InSubpackage;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$InSubpackage: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    public static com.google.inject.matcher.Matcher returns(com.google.inject.matcher.Matcher)
    {
        com.google.inject.matcher.Matcher r1;
        com.google.inject.matcher.Matchers$Returns $r0;

        r1 := @parameter0: com.google.inject.matcher.Matcher;

        $r0 = new com.google.inject.matcher.Matchers$Returns;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$Returns: void <init>(com.google.inject.matcher.Matcher)>(r1);

        return $r0;
    }

    static void access$200(java.lang.Class)
    {
        java.lang.Class r0;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <com.google.inject.matcher.Matchers: void checkForRuntimeRetention(java.lang.Class)>(r0);

        return;
    }

    static void <clinit>()
    {
        com.google.inject.matcher.Matchers$Any $r0;

        $r0 = new com.google.inject.matcher.Matchers$Any;

        specialinvoke $r0.<com.google.inject.matcher.Matchers$Any: void <init>(com.google.inject.matcher.Matchers$1)>(null);

        <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher ANY> = $r0;

        return;
    }
}
