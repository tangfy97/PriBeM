class bsh.Name extends java.lang.Object implements java.io.Serializable
{
    public bsh.NameSpace namespace;
    java.lang.String value;
    private java.lang.String evalName;
    private java.lang.String lastEvalName;
    private static java.lang.String FINISHED;
    private java.lang.Object evalBaseObject;
    private int callstackDepth;
    java.lang.Class asClass;
    java.lang.Class classOfStaticMethod;

    private void reset()
    {
        java.lang.String $r1;
        bsh.Name r0;

        r0 := @this: bsh.Name;

        $r1 = r0.<bsh.Name: java.lang.String value>;

        r0.<bsh.Name: java.lang.String evalName> = $r1;

        r0.<bsh.Name: java.lang.Object evalBaseObject> = null;

        r0.<bsh.Name: int callstackDepth> = 0;

        return;
    }

    void <init>(bsh.NameSpace, java.lang.String)
    {
        java.lang.String r2;
        bsh.Name r0;
        bsh.NameSpace r1;

        r0 := @this: bsh.Name;

        r1 := @parameter0: bsh.NameSpace;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<bsh.Name: java.lang.String value> = null;

        r0.<bsh.Name: bsh.NameSpace namespace> = r1;

        r0.<bsh.Name: java.lang.String value> = r2;

        return;
    }

    public java.lang.Object toObject(bsh.CallStack, bsh.Interpreter) throws bsh.UtilEvalError
    {
        bsh.Interpreter r2;
        bsh.Name r0;
        java.lang.Object $r3;
        bsh.CallStack r1;

        r0 := @this: bsh.Name;

        r1 := @parameter0: bsh.CallStack;

        r2 := @parameter1: bsh.Interpreter;

        $r3 = virtualinvoke r0.<bsh.Name: java.lang.Object toObject(bsh.CallStack,bsh.Interpreter,boolean)>(r1, r2, 0);

        return $r3;
    }

    public synchronized java.lang.Object toObject(bsh.CallStack, bsh.Interpreter, boolean) throws bsh.UtilEvalError
    {
        bsh.Interpreter r3;
        bsh.Name r0;
        java.lang.Object r5;
        java.lang.String $r1;
        bsh.InterpreterError $r4;
        bsh.CallStack r2;
        boolean z0;

        r0 := @this: bsh.Name;

        r2 := @parameter0: bsh.CallStack;

        r3 := @parameter1: bsh.Interpreter;

        z0 := @parameter2: boolean;

        specialinvoke r0.<bsh.Name: void reset()>();

        r5 = null;

        goto label2;

     label1:
        r5 = specialinvoke r0.<bsh.Name: java.lang.Object consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean)>(r2, r3, z0, 0);

     label2:
        $r1 = r0.<bsh.Name: java.lang.String evalName>;

        if $r1 != null goto label1;

        if r5 != null goto label3;

        $r4 = new bsh.InterpreterError;

        specialinvoke $r4.<bsh.InterpreterError: void <init>(java.lang.String)>("null value in toObject()");

        throw $r4;

     label3:
        return r5;
    }

    private java.lang.Object completeRound(java.lang.String, java.lang.String, java.lang.Object)
    {
        bsh.Name r1;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.lang.Object r0;
        java.lang.String r2, r3, $r8;
        bsh.InterpreterError $r4;

        r1 := @this: bsh.Name;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        $r4 = new bsh.InterpreterError;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lastEvalName = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<bsh.InterpreterError: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        r1.<bsh.Name: java.lang.String lastEvalName> = r2;

        r1.<bsh.Name: java.lang.String evalName> = r3;

        r1.<bsh.Name: java.lang.Object evalBaseObject> = r0;

        return r0;
    }

    private java.lang.Object consumeNextObjectField(bsh.CallStack, bsh.Interpreter, boolean, boolean) throws bsh.UtilEvalError
    {
        bsh.UtilEvalError $r22, $r36, $r65, $r70, $r76, $r90, $r165;
        java.lang.StringBuffer $r23, $r25, $r26, $r37, $r38, $r39, $r40, $r41, $r43, $r45, $r46, $r47, $r52, $r53, $r54, $r55, $r56, $r66, $r67, $r68, $r71, $r72, $r74, $r77, $r78, $r80, $r84, $r85, $r87, $r91, $r92, $r94, $r104, $r105, $r106, $r119, $r120, $r122, $r129, $r130, $r132, $r143, $r144, $r145, $r146, $r148, $r151, $r152, $r153, $r166, $r167, $r168, $r169, $r171, $r174, $r175, $r176;
        bsh.Interpreter r108;
        bsh.CallStack r135;
        int $i0, $i1, $i2, $i3, i4;
        bsh.ReflectError $r164, $r173;
        bsh.Primitive $r2, $r4, $r17, $r96, $r139, $r160;
        java.lang.Object $r1, $r3, $r5, $r6, $r7, $r10, $r11, $r14, $r15, $r18, $r21, $r28, $r35, $r58, $r59, $r63, $r64, $r99, $r100, $r101, $r112, $r113, $r128, $r134, $r136, $r142, $r155, $r159, $r163, $r170, $r180, r181, $r182, $r185, $r187, r189;
        java.lang.Class $r16, $r30, $r50, $r60, $r118, r183;
        bsh.UtilTargetError $r82;
        bsh.NameSpace $r49, $r103, $r117, $r138, $r147, $r150, $r158, $r186, r188;
        java.lang.String $r8, $r9, $r12, $r13, $r19, $r20, $r24, $r27, $r31, $r32, $r33, $r34, $r42, $r44, $r48, $r57, $r61, $r62, $r69, $r73, $r75, $r79, $r81, $r86, $r88, $r89, $r93, $r95, $r97, $r98, $r107, $r110, $r111, $r114, $r115, $r116, $r121, $r123, $r124, $r125, $r126, $r131, $r133, $r140, $r141, $r149, $r154, $r156, $r157, $r161, $r162, $r172, $r177, $r178, $r179, r184;
        java.lang.NullPointerException $r83;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        bsh.Name r0;
        bsh.This $r102, $r109, $r137;
        bsh.ClassIdentifier $r29, $r51, $r127;

        r0 := @this: bsh.Name;

        r135 := @parameter0: bsh.CallStack;

        r108 := @parameter1: bsh.Interpreter;

        z0 := @parameter2: boolean;

        z8 := @parameter3: boolean;

        $r1 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        if $r1 != null goto label01;

        $r156 = r0.<bsh.Name: java.lang.String evalName>;

        $z15 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>($r156);

        if $z15 != 0 goto label01;

        if z0 != 0 goto label01;

        $r158 = r0.<bsh.Name: bsh.NameSpace namespace>;

        $r157 = r0.<bsh.Name: java.lang.String evalName>;

        $r159 = virtualinvoke r0.<bsh.Name: java.lang.Object resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean)>(r135, $r158, r108, $r157, 0);

        $r160 = <bsh.Primitive: bsh.Primitive VOID>;

        if $r159 == $r160 goto label01;

        $r162 = r0.<bsh.Name: java.lang.String evalName>;

        $r161 = <bsh.Name: java.lang.String FINISHED>;

        $r163 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r162, $r161, $r159);

        return $r163;

     label01:
        $r178 = r0.<bsh.Name: java.lang.String evalName>;

        $r179 = staticinvoke <bsh.Name: java.lang.String prefix(java.lang.String,int)>($r178, 1);

        $r180 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        if $r180 == null goto label02;

        $r155 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $z14 = $r155 instanceof bsh.This;

        if $z14 == 0 goto label07;

     label02:
        if z0 != 0 goto label07;

        $z12 = <bsh.Interpreter: boolean DEBUG>;

        if $z12 == 0 goto label03;

        $r151 = new java.lang.StringBuffer;

        specialinvoke $r151.<java.lang.StringBuffer: void <init>()>();

        $r152 = virtualinvoke $r151.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trying to resolve variable: ");

        $r153 = virtualinvoke $r152.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r179);

        $r154 = virtualinvoke $r153.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r154);

     label03:
        $r134 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        if $r134 != null goto label04;

        $r150 = r0.<bsh.Name: bsh.NameSpace namespace>;

        r181 = virtualinvoke r0.<bsh.Name: java.lang.Object resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean)>(r135, $r150, r108, $r179, 0);

        goto label05;

     label04:
        $r136 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r137 = (bsh.This) $r136;

        $r138 = $r137.<bsh.This: bsh.NameSpace namespace>;

        r181 = virtualinvoke r0.<bsh.Name: java.lang.Object resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean)>(r135, $r138, r108, $r179, 1);

     label05:
        $r139 = <bsh.Primitive: bsh.Primitive VOID>;

        if r181 == $r139 goto label07;

        $z13 = <bsh.Interpreter: boolean DEBUG>;

        if $z13 == 0 goto label06;

        $r143 = new java.lang.StringBuffer;

        specialinvoke $r143.<java.lang.StringBuffer: void <init>()>();

        $r144 = virtualinvoke $r143.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("resolved variable: ");

        $r145 = virtualinvoke $r144.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r179);

        $r146 = virtualinvoke $r145.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in namespace: ");

        $r147 = r0.<bsh.Name: bsh.NameSpace namespace>;

        $r148 = virtualinvoke $r146.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r147);

        $r149 = virtualinvoke $r148.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r149);

     label06:
        $r140 = r0.<bsh.Name: java.lang.String evalName>;

        $r141 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String)>($r140);

        $r142 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r179, $r141, r181);

        return $r142;

     label07:
        $r182 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        if $r182 != null goto label14;

        $z10 = <bsh.Interpreter: boolean DEBUG>;

        if $z10 == 0 goto label08;

        $r129 = new java.lang.StringBuffer;

        specialinvoke $r129.<java.lang.StringBuffer: void <init>()>();

        $r130 = virtualinvoke $r129.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trying class: ");

        $r131 = r0.<bsh.Name: java.lang.String evalName>;

        $r132 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r133);

     label08:
        r183 = null;

        i4 = 1;

        r184 = null;

        goto label11;

     label09:
        $r115 = r0.<bsh.Name: java.lang.String evalName>;

        $r116 = staticinvoke <bsh.Name: java.lang.String prefix(java.lang.String,int)>($r115, i4);

        r184 = $r116;

        $r117 = r0.<bsh.Name: bsh.NameSpace namespace>;

        $r118 = virtualinvoke $r117.<bsh.NameSpace: java.lang.Class getClass(java.lang.String)>($r116);

        r183 = $r118;

        if $r118 == null goto label10;

        goto label12;

     label10:
        i4 = i4 + 1;

     label11:
        $r114 = r0.<bsh.Name: java.lang.String evalName>;

        $i1 = staticinvoke <bsh.Name: int countParts(java.lang.String)>($r114);

        if i4 <= $i1 goto label09;

     label12:
        if r183 == null goto label13;

        $r125 = r0.<bsh.Name: java.lang.String evalName>;

        $r124 = r0.<bsh.Name: java.lang.String evalName>;

        $i2 = staticinvoke <bsh.Name: int countParts(java.lang.String)>($r124);

        $i3 = $i2 - i4;

        $r126 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String,int)>($r125, $i3);

        $r127 = new bsh.ClassIdentifier;

        specialinvoke $r127.<bsh.ClassIdentifier: void <init>(java.lang.Class)>(r183);

        $r128 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>(r184, $r126, $r127);

        return $r128;

     label13:
        $z11 = <bsh.Interpreter: boolean DEBUG>;

        if $z11 == 0 goto label14;

        $r119 = new java.lang.StringBuffer;

        specialinvoke $r119.<java.lang.StringBuffer: void <init>()>();

        $r120 = virtualinvoke $r119.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("not a class, trying var prefix ");

        $r121 = r0.<bsh.Name: java.lang.String evalName>;

        $r122 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r121);

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r123);

     label14:
        $r185 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        if $r185 == null goto label15;

        $r113 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $z9 = $r113 instanceof bsh.This;

        if $z9 == 0 goto label18;

     label15:
        if z0 != 0 goto label18;

        if z8 == 0 goto label18;

        $r100 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        if $r100 != null goto label16;

        $r186 = r0.<bsh.Name: bsh.NameSpace namespace>;

        goto label17;

     label16:
        $r101 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r102 = (bsh.This) $r101;

        $r186 = $r102.<bsh.This: bsh.NameSpace namespace>;

     label17:
        $r103 = new bsh.NameSpace;

        $r104 = new java.lang.StringBuffer;

        specialinvoke $r104.<java.lang.StringBuffer: void <init>()>();

        $r105 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("auto: ");

        $r106 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r179);

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r103.<bsh.NameSpace: void <init>(bsh.NameSpace,java.lang.String)>($r186, $r107);

        $r109 = virtualinvoke $r103.<bsh.NameSpace: bsh.This getThis(bsh.Interpreter)>(r108);

        virtualinvoke $r186.<bsh.NameSpace: void setVariable(java.lang.String,java.lang.Object,boolean)>($r179, $r109, 0);

        $r110 = r0.<bsh.Name: java.lang.String evalName>;

        $r111 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String)>($r110);

        $r112 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r179, $r111, $r109);

        return $r112;

     label18:
        $r187 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        if $r187 != null goto label20;

        $r89 = r0.<bsh.Name: java.lang.String evalName>;

        $z7 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>($r89);

        if $z7 != 0 goto label19;

        $r98 = r0.<bsh.Name: java.lang.String evalName>;

        $r97 = <bsh.Name: java.lang.String FINISHED>;

        $r96 = <bsh.Primitive: bsh.Primitive VOID>;

        $r99 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r98, $r97, $r96);

        return $r99;

     label19:
        $r90 = new bsh.UtilEvalError;

        $r91 = new java.lang.StringBuffer;

        specialinvoke $r91.<java.lang.StringBuffer: void <init>()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Class or variable not found: ");

        $r93 = r0.<bsh.Name: java.lang.String evalName>;

        $r94 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r90.<bsh.UtilEvalError: void <init>(java.lang.String)>($r95);

        throw $r90;

     label20:
        $r3 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r2 = <bsh.Primitive: bsh.Primitive NULL>;

        if $r3 != $r2 goto label21;

        $r82 = new bsh.UtilTargetError;

        $r83 = new java.lang.NullPointerException;

        $r84 = new java.lang.StringBuffer;

        specialinvoke $r84.<java.lang.StringBuffer: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Null Pointer while evaluating: ");

        $r86 = r0.<bsh.Name: java.lang.String value>;

        $r87 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r83.<java.lang.NullPointerException: void <init>(java.lang.String)>($r88);

        specialinvoke $r82.<bsh.UtilTargetError: void <init>(java.lang.Throwable)>($r83);

        throw $r82;

     label21:
        $r5 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r4 = <bsh.Primitive: bsh.Primitive VOID>;

        if $r5 != $r4 goto label22;

        $r76 = new bsh.UtilEvalError;

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Undefined variable or class name while evaluating: ");

        $r79 = r0.<bsh.Name: java.lang.String value>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r76.<bsh.UtilEvalError: void <init>(java.lang.String)>($r81);

        throw $r76;

     label22:
        $r6 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $z1 = $r6 instanceof bsh.Primitive;

        if $z1 == 0 goto label23;

        $r70 = new bsh.UtilEvalError;

        $r71 = new java.lang.StringBuffer;

        specialinvoke $r71.<java.lang.StringBuffer: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t treat primitive like an object. Error while evaluating: ");

        $r73 = r0.<bsh.Name: java.lang.String value>;

        $r74 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r70.<bsh.UtilEvalError: void <init>(java.lang.String)>($r75);

        throw $r70;

     label23:
        $r7 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $z2 = $r7 instanceof bsh.ClassIdentifier;

        if $z2 == 0 goto label36;

        $r28 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r29 = (bsh.ClassIdentifier) $r28;

        $r30 = virtualinvoke $r29.<bsh.ClassIdentifier: java.lang.Class getTargetClass()>();

        $r31 = r0.<bsh.Name: java.lang.String evalName>;

        $r32 = staticinvoke <bsh.Name: java.lang.String prefix(java.lang.String,int)>($r31, 1);

        $z5 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $z5 == 0 goto label27;

        r188 = r0.<bsh.Name: bsh.NameSpace namespace>;

        goto label26;

     label24:
        $r58 = r188.<bsh.NameSpace: java.lang.Object classInstance>;

        if $r58 == null goto label25;

        $r59 = r188.<bsh.NameSpace: java.lang.Object classInstance>;

        $r60 = virtualinvoke $r59.<java.lang.Object: java.lang.Class getClass()>();

        if $r60 != $r30 goto label25;

        $r61 = r0.<bsh.Name: java.lang.String evalName>;

        $r62 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String)>($r61);

        $r63 = r188.<bsh.NameSpace: java.lang.Object classInstance>;

        $r64 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r32, $r62, $r63);

        return $r64;

     label25:
        r188 = virtualinvoke r188.<bsh.NameSpace: bsh.NameSpace getParent()>();

     label26:
        if r188 != null goto label24;

        $r65 = new bsh.UtilEvalError;

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t find enclosing \'this\' instance of class: ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r30);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r65.<bsh.UtilEvalError: void <init>(java.lang.String)>($r69);

        throw $r65;

     label27:
        r189 = null;

     label28:
        $z6 = <bsh.Interpreter: boolean DEBUG>;

        if $z6 == 0 goto label29;

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Name call to getStaticFieldValue, class: ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r30);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", field:");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r57);

     label29:
        r189 = staticinvoke <bsh.Reflect: java.lang.Object getStaticFieldValue(java.lang.Class,java.lang.String)>($r30, $r32);

     label30:
        goto label33;

     label31:
        $r173 := @caughtexception;

        $z16 = <bsh.Interpreter: boolean DEBUG>;

        if $z16 == 0 goto label32;

        $r174 = new java.lang.StringBuffer;

        specialinvoke $r174.<java.lang.StringBuffer: void <init>()>();

        $r175 = virtualinvoke $r174.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("field reflect error: ");

        $r176 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r173);

        $r177 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r177);

     label32:
        goto label33;

     label33:
        if r189 != null goto label34;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        $r49 = r0.<bsh.Name: bsh.NameSpace namespace>;

        $r50 = virtualinvoke $r49.<bsh.NameSpace: java.lang.Class getClass(java.lang.String)>($r48);

        if $r50 == null goto label34;

        $r51 = new bsh.ClassIdentifier;

        specialinvoke $r51.<bsh.ClassIdentifier: void <init>(java.lang.Class)>($r50);

        r189 = $r51;

     label34:
        if r189 != null goto label35;

        $r36 = new bsh.UtilEvalError;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No static field or inner class: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" of ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r30);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r36.<bsh.UtilEvalError: void <init>(java.lang.String)>($r42);

        throw $r36;

     label35:
        $r33 = r0.<bsh.Name: java.lang.String evalName>;

        $r34 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String)>($r33);

        $r35 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r32, $r34, r189);

        return $r35;

     label36:
        if z0 == 0 goto label37;

        $r22 = new bsh.UtilEvalError;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = r0.<bsh.Name: java.lang.String value>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not resolve to a class name.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<bsh.UtilEvalError: void <init>(java.lang.String)>($r27);

        throw $r22;

     label37:
        $r8 = r0.<bsh.Name: java.lang.String evalName>;

        $r9 = staticinvoke <bsh.Name: java.lang.String prefix(java.lang.String,int)>($r8, 1);

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("length");

        if $z3 == 0 goto label38;

        $r15 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke $r16.<java.lang.Class: boolean isArray()>();

        if $z4 == 0 goto label38;

        $r17 = new bsh.Primitive;

        $r18 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r18);

        specialinvoke $r17.<bsh.Primitive: void <init>(int)>($i0);

        $r19 = r0.<bsh.Name: java.lang.String evalName>;

        $r20 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String)>($r19);

        $r21 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r9, $r20, $r17);

        return $r21;

     label38:
        $r10 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r11 = staticinvoke <bsh.Reflect: java.lang.Object getObjectFieldValue(java.lang.Object,java.lang.String)>($r10, $r9);

        $r12 = r0.<bsh.Name: java.lang.String evalName>;

        $r13 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String)>($r12);

        $r14 = specialinvoke r0.<bsh.Name: java.lang.Object completeRound(java.lang.String,java.lang.String,java.lang.Object)>($r9, $r13, $r11);

     label39:
        return $r14;

     label40:
        $r164 := @caughtexception;

        goto label41;

     label41:
        $r165 = new bsh.UtilEvalError;

        $r166 = new java.lang.StringBuffer;

        specialinvoke $r166.<java.lang.StringBuffer: void <init>()>();

        $r167 = virtualinvoke $r166.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot access field: ");

        $r168 = virtualinvoke $r167.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r169 = virtualinvoke $r168.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", on object: ");

        $r170 = r0.<bsh.Name: java.lang.Object evalBaseObject>;

        $r171 = virtualinvoke $r169.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r170);

        $r172 = virtualinvoke $r171.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r165.<bsh.UtilEvalError: void <init>(java.lang.String)>($r172);

        throw $r165;

        catch bsh.ReflectError from label28 to label30 with label31;
        catch bsh.ReflectError from label38 to label39 with label40;
    }

    java.lang.Object resolveThisFieldReference(bsh.CallStack, bsh.NameSpace, bsh.Interpreter, java.lang.String, boolean) throws bsh.UtilEvalError
    {
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        bsh.Interpreter r13;
        bsh.InterpreterError $r1, $r10, $r15;
        bsh.Name r6;
        bsh.NameSpace $r12, $r21, $r22, $r23, $r24, $r26, $r27, r30;
        bsh.UtilEvalError $r8, $r17, $r19, $r29;
        bsh.CallStack r9;
        bsh.This $r14, $r20, $r25, r32;
        java.lang.StringBuffer $r2, $r3, $r4;
        int $i0, $i1;
        java.lang.String r0, $r5, $r7, $r11, $r16, $r18, $r28;
        java.lang.Object r31, r33;

        r6 := @this: bsh.Name;

        r9 := @parameter0: bsh.CallStack;

        r30 := @parameter1: bsh.NameSpace;

        r13 := @parameter2: bsh.Interpreter;

        r0 := @parameter3: java.lang.String;

        z3 := @parameter4: boolean;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $z0 == 0 goto label04;

        if z3 == 0 goto label01;

        $r29 = new bsh.UtilEvalError;

        specialinvoke $r29.<bsh.UtilEvalError: void <init>(java.lang.String)>("Redundant to call .this on This type");

        throw $r29;

     label01:
        $r25 = virtualinvoke r30.<bsh.NameSpace: bsh.This getThis(bsh.Interpreter)>(r13);

        $r26 = virtualinvoke $r25.<bsh.This: bsh.NameSpace getNameSpace()>();

        r31 = $r25;

        $r27 = staticinvoke <bsh.Name: bsh.NameSpace getClassNameSpace(bsh.NameSpace)>($r26);

        if $r27 == null goto label03;

        $r28 = r6.<bsh.Name: java.lang.String evalName>;

        $z15 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>($r28);

        if $z15 == 0 goto label02;

        r31 = virtualinvoke $r27.<bsh.NameSpace: bsh.This getThis(bsh.Interpreter)>(r13);

        goto label03;

     label02:
        r31 = virtualinvoke $r27.<bsh.NameSpace: java.lang.Object getClassInstance()>();

     label03:
        return r31;

     label04:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("super");

        if $z1 == 0 goto label06;

        $r20 = virtualinvoke r30.<bsh.NameSpace: bsh.This getSuper(bsh.Interpreter)>(r13);

        r32 = $r20;

        $r21 = virtualinvoke $r20.<bsh.This: bsh.NameSpace getNameSpace()>();

        $r22 = virtualinvoke $r21.<bsh.NameSpace: bsh.NameSpace getParent()>();

        if $r22 == null goto label05;

        $r23 = virtualinvoke $r21.<bsh.NameSpace: bsh.NameSpace getParent()>();

        $z14 = $r23.<bsh.NameSpace: boolean isClass>;

        if $z14 == 0 goto label05;

        $r24 = virtualinvoke $r21.<bsh.NameSpace: bsh.NameSpace getParent()>();

        r32 = virtualinvoke $r24.<bsh.NameSpace: bsh.This getThis(bsh.Interpreter)>(r13);

     label05:
        return r32;

     label06:
        r33 = null;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("global");

        if $z2 == 0 goto label07;

        r33 = virtualinvoke r30.<bsh.NameSpace: bsh.This getGlobal(bsh.Interpreter)>(r13);

     label07:
        if r33 != null goto label12;

        if z3 == 0 goto label12;

        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("namespace");

        if $z9 == 0 goto label08;

        r33 = r30;

        goto label12;

     label08:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("variables");

        if $z10 == 0 goto label09;

        r33 = virtualinvoke r30.<bsh.NameSpace: java.lang.String[] getVariableNames()>();

        goto label12;

     label09:
        $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("methods");

        if $z11 == 0 goto label10;

        r33 = virtualinvoke r30.<bsh.NameSpace: java.lang.String[] getMethodNames()>();

        goto label12;

     label10:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("interpreter");

        if $z12 == 0 goto label12;

        $r18 = r6.<bsh.Name: java.lang.String lastEvalName>;

        $z13 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $z13 == 0 goto label11;

        r33 = r13;

        goto label12;

     label11:
        $r19 = new bsh.UtilEvalError;

        specialinvoke $r19.<bsh.UtilEvalError: void <init>(java.lang.String)>("Can only call .interpreter on literal \'this\'");

        throw $r19;

     label12:
        if r33 != null goto label17;

        if z3 == 0 goto label17;

        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("caller");

        if $z6 == 0 goto label17;

        $r11 = r6.<bsh.Name: java.lang.String lastEvalName>;

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $z7 != 0 goto label13;

        $r16 = r6.<bsh.Name: java.lang.String lastEvalName>;

        $z8 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("caller");

        if $z8 == 0 goto label15;

     label13:
        if r9 != null goto label14;

        $r15 = new bsh.InterpreterError;

        specialinvoke $r15.<bsh.InterpreterError: void <init>(java.lang.String)>("no callstack");

        throw $r15;

     label14:
        $i0 = r6.<bsh.Name: int callstackDepth>;

        $i1 = $i0 + 1;

        r6.<bsh.Name: int callstackDepth> = $i1;

        $r12 = virtualinvoke r9.<bsh.CallStack: bsh.NameSpace get(int)>($i1);

        $r14 = virtualinvoke $r12.<bsh.NameSpace: bsh.This getThis(bsh.Interpreter)>(r13);

        goto label16;

     label15:
        $r17 = new bsh.UtilEvalError;

        specialinvoke $r17.<bsh.UtilEvalError: void <init>(java.lang.String)>("Can only call .caller on literal \'this\' or literal \'.caller\'");

        throw $r17;

     label16:
        return $r14;

     label17:
        if r33 != null goto label20;

        if z3 == 0 goto label20;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("callstack");

        if $z4 == 0 goto label20;

        $r7 = r6.<bsh.Name: java.lang.String lastEvalName>;

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $z5 == 0 goto label19;

        if r9 != null goto label18;

        $r10 = new bsh.InterpreterError;

        specialinvoke $r10.<bsh.InterpreterError: void <init>(java.lang.String)>("no callstack");

        throw $r10;

     label18:
        r33 = r9;

        goto label20;

     label19:
        $r8 = new bsh.UtilEvalError;

        specialinvoke $r8.<bsh.UtilEvalError: void <init>(java.lang.String)>("Can only call .callstack on literal \'this\'");

        throw $r8;

     label20:
        if r33 != null goto label21;

        r33 = virtualinvoke r30.<bsh.NameSpace: java.lang.Object getVariable(java.lang.String)>(r0);

     label21:
        if r33 != null goto label22;

        $r1 = new bsh.InterpreterError;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null this field ref:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<bsh.InterpreterError: void <init>(java.lang.String)>($r5);

        throw $r1;

     label22:
        return r33;
    }

    static bsh.NameSpace getClassNameSpace(bsh.NameSpace)
    {
        bsh.NameSpace r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: bsh.NameSpace;

        $z0 = r0.<bsh.NameSpace: boolean isClass>;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z1 = r0.<bsh.NameSpace: boolean isMethod>;

        if $z1 == 0 goto label2;

        $r1 = virtualinvoke r0.<bsh.NameSpace: bsh.NameSpace getParent()>();

        if $r1 == null goto label2;

        $r2 = virtualinvoke r0.<bsh.NameSpace: bsh.NameSpace getParent()>();

        $z2 = $r2.<bsh.NameSpace: boolean isClass>;

        if $z2 == 0 goto label2;

        $r3 = virtualinvoke r0.<bsh.NameSpace: bsh.NameSpace getParent()>();

        return $r3;

     label2:
        return null;
    }

    public synchronized java.lang.Class toClass() throws java.lang.ClassNotFoundException, bsh.UtilEvalError
    {
        bsh.Name r0;
        bsh.NameSpace $r4;
        bsh.UtilEvalError $r16;
        java.lang.StringBuffer $r8, $r9, $r11, $r12;
        java.lang.String $r2, $r3, $r10, $r13;
        boolean $z0, $z1;
        bsh.ClassIdentifier $r14;
        java.lang.Class $r1, $r5, $r6, $r15, r17;
        java.lang.ClassNotFoundException $r7;
        java.lang.Object r18;

        r0 := @this: bsh.Name;

        $r1 = r0.<bsh.Name: java.lang.Class asClass>;

        if $r1 == null goto label1;

        $r15 = r0.<bsh.Name: java.lang.Class asClass>;

        return $r15;

     label1:
        specialinvoke r0.<bsh.Name: void reset()>();

        $r2 = r0.<bsh.Name: java.lang.String evalName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("var");

        if $z0 == 0 goto label2;

        r0.<bsh.Name: java.lang.Class asClass> = null;

        return null;

     label2:
        $r4 = r0.<bsh.Name: bsh.NameSpace namespace>;

        $r3 = r0.<bsh.Name: java.lang.String evalName>;

        $r5 = virtualinvoke $r4.<bsh.NameSpace: java.lang.Class getClass(java.lang.String)>($r3);

        r17 = $r5;

        if $r5 != null goto label7;

        r18 = null;

     label3:
        r18 = virtualinvoke r0.<bsh.Name: java.lang.Object toObject(bsh.CallStack,bsh.Interpreter,boolean)>(null, null, 1);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        goto label6;

     label6:
        $z1 = r18 instanceof bsh.ClassIdentifier;

        if $z1 == 0 goto label7;

        $r14 = (bsh.ClassIdentifier) r18;

        r17 = virtualinvoke $r14.<bsh.ClassIdentifier: java.lang.Class getTargetClass()>();

     label7:
        if r17 != null goto label8;

        $r7 = new java.lang.ClassNotFoundException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Class: ");

        $r10 = r0.<bsh.Name: java.lang.String value>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found in namespace");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label8:
        r0.<bsh.Name: java.lang.Class asClass> = r17;

        $r6 = r0.<bsh.Name: java.lang.Class asClass>;

        return $r6;

        catch bsh.UtilEvalError from label3 to label4 with label5;
    }

    public synchronized bsh.LHS toLHS(bsh.CallStack, bsh.Interpreter) throws bsh.UtilEvalError
    {
        bsh.LHS $r7, $r11, $r17, $r37;
        bsh.InterpreterError $r5;
        bsh.NameSpace $r20, $r39;
        bsh.UtilEvalError $r21, $r27, $r40, $r42, $r47, $r48, $r55;
        java.lang.StringBuffer $r22, $r23, $r25, $r28, $r29, $r31, $r43, $r44, $r45, $r49, $r50, $r52, $r56, $r57, $r59;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r10, $r12, $r13, $r14, $r15, $r16, $r19, $r24, $r26, $r30, $r32, $r33, $r36, $r38, $r46, $r51, $r53, $r58, $r60;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        bsh.Interpreter r35;
        bsh.Name r0;
        bsh.CallStack r34;
        bsh.This $r18;
        bsh.ReflectError $r41;
        bsh.ClassIdentifier $r8;
        java.lang.Class $r9;
        java.lang.Object r54;

        r0 := @this: bsh.Name;

        r34 := @parameter0: bsh.CallStack;

        r35 := @parameter1: bsh.Interpreter;

        specialinvoke r0.<bsh.Name: void reset()>();

        $r1 = r0.<bsh.Name: java.lang.String evalName>;

        $z0 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>($r1);

        if $z0 != 0 goto label02;

        $r36 = r0.<bsh.Name: java.lang.String evalName>;

        $z10 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $z10 == 0 goto label01;

        $r40 = new bsh.UtilEvalError;

        specialinvoke $r40.<bsh.UtilEvalError: void <init>(java.lang.String)>("Can\'t assign to \'this\'.");

        throw $r40;

     label01:
        $r37 = new bsh.LHS;

        $r39 = r0.<bsh.Name: bsh.NameSpace namespace>;

        $r38 = r0.<bsh.Name: java.lang.String evalName>;

        specialinvoke $r37.<bsh.LHS: void <init>(bsh.NameSpace,java.lang.String,boolean)>($r39, $r38, 0);

        return $r37;

     label02:
        r54 = null;

     label03:
        goto label05;

     label04:
        r54 = specialinvoke r0.<bsh.Name: java.lang.Object consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean)>(r34, r35, 0, 1);

     label05:
        $r2 = r0.<bsh.Name: java.lang.String evalName>;

        if $r2 == null goto label06;

        $r33 = r0.<bsh.Name: java.lang.String evalName>;

        $z9 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>($r33);

        if $z9 != 0 goto label04;

     label06:
        goto label08;

     label07:
        $r47 := @caughtexception;

        $r48 = new bsh.UtilEvalError;

        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LHS evaluation: ");

        $r51 = virtualinvoke $r47.<bsh.UtilEvalError: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r48.<bsh.UtilEvalError: void <init>(java.lang.String)>($r53);

        throw $r48;

     label08:
        $r3 = r0.<bsh.Name: java.lang.String evalName>;

        if $r3 != null goto label09;

        $z8 = r54 instanceof bsh.ClassIdentifier;

        if $z8 == 0 goto label09;

        $r27 = new bsh.UtilEvalError;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t assign to class: ");

        $r30 = r0.<bsh.Name: java.lang.String value>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r27.<bsh.UtilEvalError: void <init>(java.lang.String)>($r32);

        throw $r27;

     label09:
        if r54 != null goto label10;

        $r21 = new bsh.UtilEvalError;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error in LHS: ");

        $r24 = r0.<bsh.Name: java.lang.String value>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<bsh.UtilEvalError: void <init>(java.lang.String)>($r26);

        throw $r21;

     label10:
        $z1 = r54 instanceof bsh.This;

        if $z1 == 0 goto label15;

        $r12 = r0.<bsh.Name: java.lang.String evalName>;

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("namespace");

        if $z3 != 0 goto label11;

        $r13 = r0.<bsh.Name: java.lang.String evalName>;

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("variables");

        if $z4 != 0 goto label11;

        $r14 = r0.<bsh.Name: java.lang.String evalName>;

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("methods");

        if $z5 != 0 goto label11;

        $r15 = r0.<bsh.Name: java.lang.String evalName>;

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("caller");

        if $z6 == 0 goto label12;

     label11:
        $r55 = new bsh.UtilEvalError;

        $r56 = new java.lang.StringBuffer;

        specialinvoke $r56.<java.lang.StringBuffer: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t assign to special variable: ");

        $r58 = r0.<bsh.Name: java.lang.String evalName>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r55.<bsh.UtilEvalError: void <init>(java.lang.String)>($r60);

        throw $r55;

     label12:
        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>("found This reference evaluating LHS");

        $r16 = r0.<bsh.Name: java.lang.String lastEvalName>;

        $z7 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("super");

        if $z7 != 0 goto label13;

        $z11 = 1;

        goto label14;

     label13:
        $z11 = 0;

     label14:
        $r17 = new bsh.LHS;

        $r18 = (bsh.This) r54;

        $r20 = $r18.<bsh.This: bsh.NameSpace namespace>;

        $r19 = r0.<bsh.Name: java.lang.String evalName>;

        specialinvoke $r17.<bsh.LHS: void <init>(bsh.NameSpace,java.lang.String,boolean)>($r20, $r19, $z11);

        return $r17;

     label15:
        $r4 = r0.<bsh.Name: java.lang.String evalName>;

        if $r4 == null goto label21;

     label16:
        $z2 = r54 instanceof bsh.ClassIdentifier;

        if $z2 == 0 goto label18;

        $r8 = (bsh.ClassIdentifier) r54;

        $r9 = virtualinvoke $r8.<bsh.ClassIdentifier: java.lang.Class getTargetClass()>();

        $r10 = r0.<bsh.Name: java.lang.String evalName>;

        $r11 = staticinvoke <bsh.Reflect: bsh.LHS getLHSStaticField(java.lang.Class,java.lang.String)>($r9, $r10);

     label17:
        return $r11;

     label18:
        $r6 = r0.<bsh.Name: java.lang.String evalName>;

        $r7 = staticinvoke <bsh.Reflect: bsh.LHS getLHSObjectField(java.lang.Object,java.lang.String)>(r54, $r6);

     label19:
        return $r7;

     label20:
        $r41 := @caughtexception;

        $r42 = new bsh.UtilEvalError;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Field access: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r41);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r42.<bsh.UtilEvalError: void <init>(java.lang.String)>($r46);

        throw $r42;

     label21:
        $r5 = new bsh.InterpreterError;

        specialinvoke $r5.<bsh.InterpreterError: void <init>(java.lang.String)>("Internal error in lhs...");

        throw $r5;

        catch bsh.UtilEvalError from label03 to label06 with label07;
        catch bsh.ReflectError from label16 to label17 with label20;
        catch bsh.ReflectError from label18 to label19 with label20;
    }

    public java.lang.Object invokeMethod(bsh.Interpreter, java.lang.Object[], bsh.CallStack, bsh.SimpleNode) throws bsh.UtilEvalError, bsh.EvalError, bsh.ReflectError, java.lang.reflect.InvocationTargetException
    {
        bsh.UtilTargetError $r26;
        bsh.SimpleNode r24;
        bsh.BshClassManager $r4;
        java.lang.NullPointerException $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        bsh.Interpreter r3;
        java.lang.Object[] r18;
        bsh.Name r0, $r45;
        bsh.NameSpace $r6, $r37, $r38;
        bsh.UtilEvalError $r13, $r28;
        bsh.CallStack r5;
        bsh.ClassGenerator $r40;
        bsh.This $r36;
        java.lang.StringBuffer $r14, $r15, $r16, $r20, $r21, $r22, $r29, $r30, $r31, $r32, $r33;
        int $i0;
        java.lang.String $r1, $r2, $r8, $r9, $r10, $r17, $r23, $r34, $r35;
        bsh.ClassIdentifier $r11;
        bsh.Primitive $r25, $r47;
        java.lang.Class $r7, $r12, $r43;
        java.lang.Object $r19, $r39, $r41, $r42, $r44, $r46, $r48;

        r0 := @this: bsh.Name;

        r3 := @parameter0: bsh.Interpreter;

        r18 := @parameter1: java.lang.Object[];

        r5 := @parameter2: bsh.CallStack;

        r24 := @parameter3: bsh.SimpleNode;

        $r1 = r0.<bsh.Name: java.lang.String value>;

        $r2 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String,int)>($r1, 1);

        $r4 = virtualinvoke r3.<bsh.Interpreter: bsh.BshClassManager getClassManager()>();

        $r6 = virtualinvoke r5.<bsh.CallStack: bsh.NameSpace top()>();

        $r7 = r0.<bsh.Name: java.lang.Class classOfStaticMethod>;

        if $r7 == null goto label1;

        $r43 = r0.<bsh.Name: java.lang.Class classOfStaticMethod>;

        $r44 = staticinvoke <bsh.Reflect: java.lang.Object invokeStaticMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Object[])>($r4, $r43, $r2, r18);

        return $r44;

     label1:
        $r8 = r0.<bsh.Name: java.lang.String value>;

        $z0 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>($r8);

        if $z0 != 0 goto label2;

        $r42 = specialinvoke r0.<bsh.Name: java.lang.Object invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode)>(r3, r18, r5, r24);

        return $r42;

     label2:
        $r9 = r0.<bsh.Name: java.lang.String value>;

        $r10 = staticinvoke <bsh.Name: java.lang.String prefix(java.lang.String)>($r9);

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("super");

        if $z1 == 0 goto label3;

        $r35 = r0.<bsh.Name: java.lang.String value>;

        $i0 = staticinvoke <bsh.Name: int countParts(java.lang.String)>($r35);

        if $i0 != 2 goto label3;

        $r36 = virtualinvoke $r6.<bsh.NameSpace: bsh.This getThis(bsh.Interpreter)>(r3);

        $r37 = virtualinvoke $r36.<bsh.This: bsh.NameSpace getNameSpace()>();

        $r38 = staticinvoke <bsh.Name: bsh.NameSpace getClassNameSpace(bsh.NameSpace)>($r37);

        if $r38 == null goto label3;

        $r39 = virtualinvoke $r38.<bsh.NameSpace: java.lang.Object getClassInstance()>();

        $r40 = staticinvoke <bsh.ClassGenerator: bsh.ClassGenerator getClassGenerator()>();

        $r41 = virtualinvoke $r40.<bsh.ClassGenerator: java.lang.Object invokeSuperclassMethod(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[])>($r4, $r39, $r2, r18);

        return $r41;

     label3:
        $r45 = virtualinvoke $r6.<bsh.NameSpace: bsh.Name getNameResolver(java.lang.String)>($r10);

        $r46 = virtualinvoke $r45.<bsh.Name: java.lang.Object toObject(bsh.CallStack,bsh.Interpreter)>(r5, r3);

        $r47 = <bsh.Primitive: bsh.Primitive VOID>;

        if $r46 != $r47 goto label4;

        $r28 = new bsh.UtilEvalError;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attempt to resolve method: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("() on undefined variable or class name: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r45);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<bsh.UtilEvalError: void <init>(java.lang.String)>($r34);

        throw $r28;

     label4:
        $z2 = $r46 instanceof bsh.ClassIdentifier;

        if $z2 != 0 goto label7;

        $z4 = $r46 instanceof bsh.Primitive;

        if $z4 == 0 goto label6;

        $r25 = <bsh.Primitive: bsh.Primitive NULL>;

        if $r46 != $r25 goto label5;

        $r26 = new bsh.UtilTargetError;

        $r27 = new java.lang.NullPointerException;

        specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null Pointer in Method Invocation");

        specialinvoke $r26.<bsh.UtilTargetError: void <init>(java.lang.Throwable)>($r27);

        throw $r26;

     label5:
        $z5 = <bsh.Interpreter: boolean DEBUG>;

        if $z5 == 0 goto label6;

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>("Attempt to access method on primitive... allowing bsh.Primitive to peek through for debugging");

     label6:
        $r48 = staticinvoke <bsh.Reflect: java.lang.Object invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)>($r46, $r2, r18, r3, r5, r24);

        return $r48;

     label7:
        $z3 = <bsh.Interpreter: boolean DEBUG>;

        if $z3 == 0 goto label8;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("invokeMethod: trying static - ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r45);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r23);

     label8:
        $r11 = (bsh.ClassIdentifier) $r46;

        $r12 = virtualinvoke $r11.<bsh.ClassIdentifier: java.lang.Class getTargetClass()>();

        r0.<bsh.Name: java.lang.Class classOfStaticMethod> = $r12;

        if $r12 == null goto label9;

        $r19 = staticinvoke <bsh.Reflect: java.lang.Object invokeStaticMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Object[])>($r4, $r12, $r2, r18);

        return $r19;

     label9:
        $r13 = new bsh.UtilEvalError;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("invokeMethod: unknown target: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r45);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<bsh.UtilEvalError: void <init>(java.lang.String)>($r17);

        throw $r13;
    }

    private java.lang.Object invokeLocalMethod(bsh.Interpreter, java.lang.Object[], bsh.CallStack, bsh.SimpleNode) throws bsh.EvalError
    {
        bsh.SimpleNode r13;
        boolean $z0, $z1, $z2;
        bsh.Interpreter r0;
        bsh.InterpreterError $r9, $r28;
        java.lang.Object[] r3, $r25;
        bsh.Name r1;
        bsh.NameSpace $r5, $r7, $r17;
        bsh.UtilEvalError $r34, $r36, $r38, $r40;
        bsh.CallStack r10;
        java.lang.StringBuffer $r20, $r21, $r23, $r29, $r30, $r32;
        java.lang.String r2, $r22, $r24, $r31, $r33;
        bsh.EvalError $r19, $r35, $r37, $r39, $r41;
        java.lang.Class[] $r4, $r16;
        bsh.BshMethod $r6, $r14, $r18;
        java.lang.Object $r8, $r12, $r15, $r26, $r27;
        java.lang.Class $r11;

        r1 := @this: bsh.Name;

        r0 := @parameter0: bsh.Interpreter;

        r3 := @parameter1: java.lang.Object[];

        r10 := @parameter2: bsh.CallStack;

        r13 := @parameter3: bsh.SimpleNode;

        $z0 = <bsh.Interpreter: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("invokeLocalMethod: ");

        $r31 = r1.<bsh.Name: java.lang.String value>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r33);

     label01:
        if r0 != null goto label02;

        $r28 = new bsh.InterpreterError;

        specialinvoke $r28.<bsh.InterpreterError: void <init>(java.lang.String)>("invokeLocalMethod: interpreter = null");

        throw $r28;

     label02:
        r2 = r1.<bsh.Name: java.lang.String value>;

        $r4 = staticinvoke <bsh.Types: java.lang.Class[] getTypes(java.lang.Object[])>(r3);

     label03:
        $r5 = r1.<bsh.Name: bsh.NameSpace namespace>;

        $r6 = virtualinvoke $r5.<bsh.NameSpace: bsh.BshMethod getMethod(java.lang.String,java.lang.Class[])>(r2, $r4);

     label04:
        goto label06;

     label05:
        $r40 := @caughtexception;

        $r41 = virtualinvoke $r40.<bsh.UtilEvalError: bsh.EvalError toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Local method invocation", r13, r10);

        throw $r41;

     label06:
        if $r6 == null goto label07;

        $r27 = virtualinvoke $r6.<bsh.BshMethod: java.lang.Object invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)>(r3, r0, r10, r13);

        return $r27;

     label07:
        virtualinvoke r0.<bsh.Interpreter: bsh.BshClassManager getClassManager()>();

     label08:
        $r7 = r1.<bsh.Name: bsh.NameSpace namespace>;

        $r8 = virtualinvoke $r7.<bsh.NameSpace: java.lang.Object getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter)>(r2, $r4, r0);

     label09:
        goto label11;

     label10:
        $r38 := @caughtexception;

        $r39 = virtualinvoke $r38.<bsh.UtilEvalError: bsh.EvalError toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Error loading command: ", r13, r10);

        throw $r39;

     label11:
        if $r8 != null goto label17;

     label12:
        $r17 = r1.<bsh.Name: bsh.NameSpace namespace>;

        $r16 = newarray (java.lang.Class)[2];

        $r16[0] = null;

        $r16[1] = null;

        $r18 = virtualinvoke $r17.<bsh.NameSpace: bsh.BshMethod getMethod(java.lang.String,java.lang.Class[])>("invoke", $r16);

     label13:
        goto label15;

     label14:
        $r36 := @caughtexception;

        $r37 = virtualinvoke $r36.<bsh.UtilEvalError: bsh.EvalError toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Local method invocation", r13, r10);

        throw $r37;

     label15:
        if $r18 == null goto label16;

        $r25 = newarray (java.lang.Object)[2];

        $r25[0] = r2;

        $r25[1] = r3;

        $r26 = virtualinvoke $r18.<bsh.BshMethod: java.lang.Object invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)>($r25, r0, r10, r13);

        return $r26;

     label16:
        $r19 = new bsh.EvalError;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Command not found: ");

        $r22 = staticinvoke <bsh.StringUtil: java.lang.String methodString(java.lang.String,java.lang.Class[])>(r2, $r4);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>($r24, r13, r10);

        throw $r19;

     label17:
        $z1 = $r8 instanceof bsh.BshMethod;

        if $z1 == 0 goto label18;

        $r14 = (bsh.BshMethod) $r8;

        $r15 = virtualinvoke $r14.<bsh.BshMethod: java.lang.Object invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)>(r3, r0, r10, r13);

        return $r15;

     label18:
        $z2 = $r8 instanceof java.lang.Class;

        if $z2 == 0 goto label22;

     label19:
        $r11 = (java.lang.Class) $r8;

        $r12 = staticinvoke <bsh.Reflect: java.lang.Object invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack)>($r11, r3, r0, r10);

     label20:
        return $r12;

     label21:
        $r34 := @caughtexception;

        $r35 = virtualinvoke $r34.<bsh.UtilEvalError: bsh.EvalError toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Error invoking compiled command: ", r13, r10);

        throw $r35;

     label22:
        $r9 = new bsh.InterpreterError;

        specialinvoke $r9.<bsh.InterpreterError: void <init>(java.lang.String)>("invalid command type");

        throw $r9;

        catch bsh.UtilEvalError from label03 to label04 with label05;
        catch bsh.UtilEvalError from label08 to label09 with label10;
        catch bsh.UtilEvalError from label12 to label13 with label14;
        catch bsh.UtilEvalError from label19 to label20 with label21;
    }

    public static boolean isCompound(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static int countParts(java.lang.String)
    {
        int $i0, $i1, $i2, i3, i4, $i6, $i8;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 0;

        $i6 = (int) -1;

        i4 = $i6;

        goto label3;

     label2:
        i3 = i3 + 1;

     label3:
        $i0 = i4 + 1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(46, $i0);

        i4 = $i1;

        $i8 = (int) -1;

        if $i1 != $i8 goto label2;

        $i2 = i3 + 1;

        return $i2;
    }

    static java.lang.String prefix(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i0 = staticinvoke <bsh.Name: int countParts(java.lang.String)>(r0);

        $i1 = $i0 - 1;

        $r1 = staticinvoke <bsh.Name: java.lang.String prefix(java.lang.String,int)>(r0, $i1);

        return $r1;
    }

    static java.lang.String prefix(java.lang.String, int)
    {
        int i0, $i1, $i2, i3, i4, $i6, $i8, $i10;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 1 goto label1;

        return null;

     label1:
        i3 = 0;

        $i6 = (int) -1;

        i4 = $i6;

        goto label2;

     label2:
        $i1 = i4 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(46, $i1);

        i4 = $i2;

        $i8 = (int) -1;

        if $i2 == $i8 goto label3;

        i3 = i3 + 1;

        if i3 < i0 goto label2;

     label3:
        $i10 = (int) -1;

        if $i2 != $i10 goto label4;

        $r1 = r0;

        goto label5;

     label4:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label5:
        return $r1;
    }

    static java.lang.String suffix(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <bsh.Name: boolean isCompound(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i0 = staticinvoke <bsh.Name: int countParts(java.lang.String)>(r0);

        $i1 = $i0 - 1;

        $r1 = staticinvoke <bsh.Name: java.lang.String suffix(java.lang.String,int)>(r0, $i1);

        return $r1;
    }

    public static java.lang.String suffix(java.lang.String, int)
    {
        int i0, $i1, $i2, $i3, $i4, i5, i6, $i8, $i10;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 1 goto label1;

        return null;

     label1:
        i5 = 0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        i6 = $i1 + 1;

        goto label2;

     label2:
        $i2 = i6 - 1;

        $i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(46, $i2);

        i6 = $i3;

        $i8 = (int) -1;

        if $i3 == $i8 goto label3;

        i5 = i5 + 1;

        if i5 < i0 goto label2;

     label3:
        $i10 = (int) -1;

        if $i3 != $i10 goto label4;

        $r1 = r0;

        goto label5;

     label4:
        $i4 = $i3 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

     label5:
        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        bsh.Name r0;

        r0 := @this: bsh.Name;

        $r1 = r0.<bsh.Name: java.lang.String value>;

        return $r1;
    }

    static void <clinit>()
    {
        <bsh.Name: java.lang.String FINISHED> = null;

        return;
    }
}
