public final class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator extends org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$FollowingSiblingIterator
{
    private final int _nodeType;
    private final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2, int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        int i0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$FollowingSiblingIterator: void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: int _nodeType> = i0;

        return;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2, $r3, $r4, $r5;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i10, $i12, $i14, $i16, $i18, $i20;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i10 = (int) -1;

        if $i0 != $i10 goto label1;

        $i12 = (int) -1;

        return $i12;

     label1:
        i7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: int _nodeType>;

        if i1 == 1 goto label3;

        goto label2;

     label2:
        $r4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i5 = virtualinvoke $r4.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _nextsib2(int)>(i7);

        i7 = $i5;

        $i14 = (int) -1;

        if $i5 == $i14 goto label4;

        $r5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i6 = virtualinvoke $r5.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>($i5);

        if $i6 != i1 goto label2;

        goto label4;

     label3:
        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _nextsib2(int)>(i7);

        i7 = $i2;

        $i16 = (int) -1;

        if $i2 == $i16 goto label4;

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i4 = virtualinvoke $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>($i2);

        if $i4 < 14 goto label3;

     label4:
        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = i7;

        $i18 = (int) -1;

        if i7 != $i18 goto label5;

        $i20 = (int) -1;

        $i8 = $i20;

        goto label6;

     label5:
        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedFollowingSiblingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i3 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i7);

        $i8 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i3);

     label6:
        return $i8;
    }
}
