final class org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl extends java.lang.Object implements java.util.Iterator
{
    private final org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets;
    private org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket;
    private int _nextBucketIndex;

    public void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[])
    {
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket r4;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl r0;
        int i0, $i1, i2;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl;

        r1 := @parameter0: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets> = r1;

        i2 = 0;

        $r2 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        i0 = lengthof $r2;

     label1:
        if i2 >= i0 goto label3;

        $r3 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        $i1 = i2;

        i2 = i2 + 1;

        r4 = $r3[$i1];

        if r4 == null goto label2;

        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket> = r4;

        goto label3;

     label2:
        goto label1;

     label3:
        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: int _nextBucketIndex> = i2;

        return;
    }

    public boolean hasNext()
    {
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket $r1;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.jackson.map.deser.SettableBeanProperty next()
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r2;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket r1, r6;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl r0;
        int $i0, $i1, $i2, $i3;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] $r3, $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl;

        r1 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket>;

        if r1 != null goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        r6 = r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next>;

     label2:
        if r6 != null goto label3;

        $i1 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: int _nextBucketIndex>;

        $r3 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        $i0 = lengthof $r3;

        if $i1 >= $i0 goto label3;

        $r4 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets>;

        $i2 = r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: int _nextBucketIndex>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: int _nextBucketIndex> = $i3;

        r6 = $r4[$i2];

        goto label2;

     label3:
        r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket> = r6;

        $r2 = r1.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: org.codehaus.jackson.map.deser.SettableBeanProperty value>;

        return $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl r1;

        r1 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r1;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl r0;

        r0 := @this: org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.SettableBeanProperty next()>();

        return $r1;
    }
}
