interface  com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ValueReference extends java.lang.Object
{

    public abstract java.lang.Object get();

    public abstract java.lang.Object waitForValue() throws java.util.concurrent.ExecutionException;

    public abstract com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry getEntry();

    public abstract com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ValueReference copyFor(java.lang.ref.ReferenceQueue, com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ReferenceEntry);

    public abstract void clear(com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$ValueReference);

    public abstract boolean isComputingReference();
}
