public class org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH extends org.bouncycastle.jce.provider.JDKKeyPairGenerator
{
    private static java.util.Hashtable params;
    org.bouncycastle.crypto.params.DHKeyGenerationParameters param;
    org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine;
    int strength;
    int certainty;
    java.security.SecureRandom random;
    boolean initialised;

    public void <init>()
    {
        java.security.SecureRandom $r2;
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH r0;
        org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r1;

        r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator: void <init>(java.lang.String)>("DH");

        $r1 = new org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator;

        specialinvoke $r1.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine> = $r1;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int strength> = 1024;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int certainty> = 20;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random> = $r2;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised> = 0;

        return;
    }

    public void initialize(int, java.security.SecureRandom)
    {
        int i0;
        java.security.SecureRandom r1;
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.SecureRandom;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int strength> = i0;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random> = r1;

        return;
    }

    public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH r2;
        javax.crypto.spec.DHParameterSpec r1;
        java.security.InvalidAlgorithmParameterException $r10;
        java.security.SecureRandom r4;
        org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r9;
        org.bouncycastle.crypto.params.DHKeyGenerationParameters $r3, $r8;
        int $i0;
        java.math.BigInteger $r6, $r7;
        java.security.spec.AlgorithmParameterSpec r0;
        org.bouncycastle.crypto.params.DHParameters $r5;
        boolean $z0;

        r2 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r4 := @parameter1: java.security.SecureRandom;

        $z0 = r0 instanceof javax.crypto.spec.DHParameterSpec;

        if $z0 != 0 goto label1;

        $r10 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r10.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("parameter object not a DHParameterSpec");

        throw $r10;

     label1:
        r1 = (javax.crypto.spec.DHParameterSpec) r0;

        $r3 = new org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r5 = new org.bouncycastle.crypto.params.DHParameters;

        $r6 = virtualinvoke r1.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r7 = virtualinvoke r1.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $i0 = virtualinvoke r1.<javax.crypto.spec.DHParameterSpec: int getL()>();

        specialinvoke $r5.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r6, $r7, null, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters)>(r4, $r5);

        r2.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r3;

        $r9 = r2.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r8 = r2.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r9.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r8);

        r2.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised> = 1;

        return;
    }

    public java.security.KeyPair generateKeyPair()
    {
        java.security.KeyPair $r21;
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH r0;
        java.lang.Integer $r1;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r20;
        java.security.SecureRandom $r4, $r6;
        org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r11, $r15;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r16;
        org.bouncycastle.crypto.params.DHKeyGenerationParameters $r5, $r8, $r10, $r14;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.generators.DHParametersGenerator $r3;
        java.util.Hashtable $r2, $r9, $r12;
        boolean $z0, $z1;
        org.bouncycastle.crypto.CipherParameters $r17, $r19;
        org.bouncycastle.crypto.params.DHPublicKeyParameters $r18;
        org.bouncycastle.jce.provider.JCEDHPrivateKey $r23;
        org.bouncycastle.jce.provider.JCEDHPublicKey $r22;
        java.lang.Object $r13;
        org.bouncycastle.crypto.params.DHParameters $r7;

        r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        $z0 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised>;

        if $z0 != 0 goto label3;

        $r1 = new java.lang.Integer;

        $i0 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int strength>;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i0);

        $r2 = <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.util.Hashtable params>;

        $z1 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        $r12 = <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.util.Hashtable params>;

        $r13 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r14 = (org.bouncycastle.crypto.params.DHKeyGenerationParameters) $r13;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r14;

        goto label2;

     label1:
        $r3 = new org.bouncycastle.crypto.generators.DHParametersGenerator;

        specialinvoke $r3.<org.bouncycastle.crypto.generators.DHParametersGenerator: void <init>()>();

        $i2 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int strength>;

        $i1 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int certainty>;

        $r4 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random>;

        virtualinvoke $r3.<org.bouncycastle.crypto.generators.DHParametersGenerator: void init(int,int,java.security.SecureRandom)>($i2, $i1, $r4);

        $r5 = new org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r6 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random>;

        $r7 = virtualinvoke $r3.<org.bouncycastle.crypto.generators.DHParametersGenerator: org.bouncycastle.crypto.params.DHParameters generateParameters()>();

        specialinvoke $r5.<org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters)>($r6, $r7);

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r5;

        $r9 = <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.util.Hashtable params>;

        $r8 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

     label2:
        $r11 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r10 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r11.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r10);

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised> = 1;

     label3:
        $r15 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r16 = virtualinvoke $r15.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r17 = virtualinvoke $r16.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPublic()>();

        $r18 = (org.bouncycastle.crypto.params.DHPublicKeyParameters) $r17;

        $r19 = virtualinvoke $r16.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPrivate()>();

        $r20 = (org.bouncycastle.crypto.params.DHPrivateKeyParameters) $r19;

        $r21 = new java.security.KeyPair;

        $r22 = new org.bouncycastle.jce.provider.JCEDHPublicKey;

        specialinvoke $r22.<org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.crypto.params.DHPublicKeyParameters)>($r18);

        $r23 = new org.bouncycastle.jce.provider.JCEDHPrivateKey;

        specialinvoke $r23.<org.bouncycastle.jce.provider.JCEDHPrivateKey: void <init>(org.bouncycastle.crypto.params.DHPrivateKeyParameters)>($r20);

        specialinvoke $r21.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r22, $r23);

        return $r21;
    }

    static void <clinit>()
    {
        java.util.Hashtable $r0;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.util.Hashtable params> = $r0;

        return;
    }
}
