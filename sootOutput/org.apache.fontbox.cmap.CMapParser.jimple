public class org.apache.fontbox.cmap.CMapParser extends java.lang.Object
{
    private static final java.lang.String BEGIN_CODESPACE_RANGE;
    private static final java.lang.String BEGIN_BASE_FONT_CHAR;
    private static final java.lang.String BEGIN_BASE_FONT_RANGE;
    private static final java.lang.String BEGIN_CID_CHAR;
    private static final java.lang.String BEGIN_CID_RANGE;
    private static final java.lang.String USECMAP;
    private static final java.lang.String END_CODESPACE_RANGE;
    private static final java.lang.String END_BASE_FONT_CHAR;
    private static final java.lang.String END_BASE_FONT_RANGE;
    private static final java.lang.String END_CID_CHAR;
    private static final java.lang.String END_CID_RANGE;
    private static final java.lang.String END_CMAP;
    private static final java.lang.String WMODE;
    private static final java.lang.String CMAP_NAME;
    private static final java.lang.String CMAP_VERSION;
    private static final java.lang.String CMAP_TYPE;
    private static final java.lang.String REGISTRY;
    private static final java.lang.String ORDERING;
    private static final java.lang.String SUPPLEMENT;
    private static final java.lang.String MARK_END_OF_DICTIONARY;
    private static final java.lang.String MARK_END_OF_ARRAY;
    private byte[] tokenParserByteBuffer;

    public void <init>()
    {
        byte[] $r1;
        org.apache.fontbox.cmap.CMapParser r0;

        r0 := @this: org.apache.fontbox.cmap.CMapParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[512];

        r0.<org.apache.fontbox.cmap.CMapParser: byte[] tokenParserByteBuffer> = $r1;

        return;
    }

    public org.apache.fontbox.cmap.CMap parse(java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r10;
        java.io.FileInputStream $r7, r11;
        java.io.File r1;
        org.apache.fontbox.cmap.CMapParser r8;
        org.apache.fontbox.cmap.CMap $r9;
        java.lang.StringBuilder $r0, $r3, $r5;
        java.lang.String $r2, $r4, $r6;

        r8 := @this: org.apache.fontbox.cmap.CMapParser;

        r1 := @parameter0: java.io.File;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getParent()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r11 = null;

     label1:
        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r11 = $r7;

        $r9 = virtualinvoke r8.<org.apache.fontbox.cmap.CMapParser: org.apache.fontbox.cmap.CMap parse(java.lang.String,java.io.InputStream)>($r6, $r7);

     label2:
        if $r7 == null goto label3;

        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label3:
        return $r9;

     label4:
        $r10 := @caughtexception;

     label5:
        if r11 == null goto label6;

        virtualinvoke r11.<java.io.FileInputStream: void close()>();

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.fontbox.cmap.CMap parse(java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r45, $r47, $r61, $r75, $r77, $r79, $r82, $r94, $r103, $r115, $r117, r146, r147, r149, r150, r152, r153, r155, r157, r158, r159;
        java.io.PushbackInputStream $r0;
        java.lang.Integer $r20, $r26, $r35, $r43, $r49, $r63;
        org.apache.fontbox.cmap.CMapParser r3;
        java.lang.StringBuilder $r54, $r55, $r58, $r68, $r69, $r72, $r87, $r88, $r91, $r97, $r98, $r99, $r108, $r109, $r112, $r122, $r123, $r126, $r128, $r130, $r132, $r137, $r138, $r140;
        java.io.IOException $r53, $r67, $r86, $r96, $r107, $r121, $r136;
        org.apache.fontbox.cmap.CMap $r2, $r135;
        org.apache.fontbox.cmap.CMapParser$LiteralName $r32, $r101, r144, r160;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, i27;
        org.apache.fontbox.cmap.CMapParser$Operator $r51, $r56, $r65, $r70, $r84, $r89, $r105, $r110, $r119, $r124, r143;
        java.lang.Object $r4, $r19, $r21, $r23, $r25, $r27, $r31, $r34, $r44, $r46, $r48, $r60, $r62, $r74, $r76, $r78, $r81, $r83, $r93, $r95, $r114, $r116, r142;
        org.apache.fontbox.cmap.CodespaceRange $r118;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r22, $r24, $r28, $r30, $r33, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r50, $r52, $r57, $r59, $r64, $r66, $r71, $r73, $r80, $r85, $r90, $r92, $r100, $r102, $r104, $r106, $r111, $r113, $r120, $r125, $r127, r129, $r131, $r133, $r139, $r141;
        java.lang.Number $r29, r145, r148, r151, r156;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, z38;
        java.util.List r154;
        char $c12, $c13;
        java.io.InputStream r1, $r134;

        r3 := @this: org.apache.fontbox.cmap.CMapParser;

        r129 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.InputStream;

        $r0 = new java.io.PushbackInputStream;

        specialinvoke $r0.<java.io.PushbackInputStream: void <init>(java.io.InputStream)>(r1);

        $r2 = new org.apache.fontbox.cmap.CMap;

        specialinvoke $r2.<org.apache.fontbox.cmap.CMap: void <init>()>();

        r142 = null;

     label01:
        $r4 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        if $r4 == null goto label52;

        $z0 = $r4 instanceof org.apache.fontbox.cmap.CMapParser$Operator;

        if $z0 == 0 goto label37;

        r143 = (org.apache.fontbox.cmap.CMapParser$Operator) $r4;

        $r36 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>(r143);

        $z17 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("usecmap");

        if $z17 == 0 goto label03;

        r144 = (org.apache.fontbox.cmap.CMapParser$LiteralName) r142;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r129);

        $r131 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r144);

        $r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        $r134 = staticinvoke <org.apache.fontbox.util.ResourceLoader: java.io.InputStream loadResource(java.lang.String)>($r133);

        if $r134 != null goto label02;

        $r136 = new java.io.IOException;

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Could not find referenced cmap stream ");

        $r139 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r144);

        $r140 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r139);

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r136.<java.io.IOException: void <init>(java.lang.String)>($r141);

        throw $r136;

     label02:
        $r135 = virtualinvoke r3.<org.apache.fontbox.cmap.CMapParser: org.apache.fontbox.cmap.CMap parse(java.lang.String,java.io.InputStream)>(r129, $r134);

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void useCmap(org.apache.fontbox.cmap.CMap)>($r135);

        goto label36;

     label03:
        $r37 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>(r143);

        $z18 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>("endcmap");

        if $z18 == 0 goto label04;

        goto label52;

     label04:
        $r38 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>(r143);

        $z19 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>("begincodespacerange");

        if $z19 == 0 goto label08;

        r145 = (java.lang.Number) r142;

        i21 = 0;

     label05:
        $i20 = virtualinvoke r145.<java.lang.Number: int intValue()>();

        if i21 >= $i20 goto label07;

        $r114 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z36 = $r114 instanceof org.apache.fontbox.cmap.CMapParser$Operator;

        if $z36 == 0 goto label06;

        $r119 = (org.apache.fontbox.cmap.CMapParser$Operator) $r114;

        $r120 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r119);

        $z37 = virtualinvoke $r120.<java.lang.String: boolean equals(java.lang.Object)>("endcodespacerange");

        if $z37 != 0 goto label07;

        $r121 = new java.io.IOException;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error : ~codespacerange contains an unexpected operator : ");

        $r124 = (org.apache.fontbox.cmap.CMapParser$Operator) $r114;

        $r125 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r124);

        $r126 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r125);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r121.<java.io.IOException: void <init>(java.lang.String)>($r127);

        throw $r121;

     label06:
        $r115 = (byte[]) $r114;

        r146 = (byte[]) $r115;

        $r116 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $r117 = (byte[]) $r116;

        r147 = (byte[]) $r117;

        $r118 = new org.apache.fontbox.cmap.CodespaceRange;

        specialinvoke $r118.<org.apache.fontbox.cmap.CodespaceRange: void <init>()>();

        virtualinvoke $r118.<org.apache.fontbox.cmap.CodespaceRange: void setStart(byte[])>(r146);

        virtualinvoke $r118.<org.apache.fontbox.cmap.CodespaceRange: void setEnd(byte[])>(r147);

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void addCodespaceRange(org.apache.fontbox.cmap.CodespaceRange)>($r118);

        i21 = i21 + 1;

        goto label05;

     label07:
        goto label36;

     label08:
        $r39 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>(r143);

        $z20 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>("beginbfchar");

        if $z20 == 0 goto label15;

        r148 = (java.lang.Number) r142;

        i22 = 0;

     label09:
        $i19 = virtualinvoke r148.<java.lang.Number: int intValue()>();

        if i22 >= $i19 goto label14;

        $r93 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z32 = $r93 instanceof org.apache.fontbox.cmap.CMapParser$Operator;

        if $z32 == 0 goto label10;

        $r105 = (org.apache.fontbox.cmap.CMapParser$Operator) $r93;

        $r106 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r105);

        $z35 = virtualinvoke $r106.<java.lang.String: boolean equals(java.lang.Object)>("endbfchar");

        if $z35 != 0 goto label14;

        $r107 = new java.io.IOException;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error : ~bfchar contains an unexpected operator : ");

        $r110 = (org.apache.fontbox.cmap.CMapParser$Operator) $r93;

        $r111 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r110);

        $r112 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r107.<java.io.IOException: void <init>(java.lang.String)>($r113);

        throw $r107;

     label10:
        $r94 = (byte[]) $r93;

        r149 = (byte[]) $r94;

        $r95 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z33 = $r95 instanceof byte[];

        if $z33 == 0 goto label11;

        $r103 = (byte[]) $r95;

        r150 = (byte[]) $r103;

        $r104 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.String createStringFromBytes(byte[])>(r150);

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void addMapping(byte[],java.lang.String)>(r149, $r104);

        goto label13;

     label11:
        $z34 = $r95 instanceof org.apache.fontbox.cmap.CMapParser$LiteralName;

        if $z34 == 0 goto label12;

        $r101 = (org.apache.fontbox.cmap.CMapParser$LiteralName) $r95;

        $r102 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>($r101);

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void addMapping(byte[],java.lang.String)>(r149, $r102);

        goto label13;

     label12:
        $r96 = new java.io.IOException;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing CMap beginbfchar, expected{COSString or COSName} and not ");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r95);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r96.<java.io.IOException: void <init>(java.lang.String)>($r100);

        throw $r96;

     label13:
        i22 = i22 + 1;

        goto label09;

     label14:
        goto label36;

     label15:
        $r40 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>(r143);

        $z21 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("beginbfrange");

        if $z21 == 0 goto label26;

        r151 = (java.lang.Number) r142;

        i23 = 0;

     label16:
        $i16 = virtualinvoke r151.<java.lang.Number: int intValue()>();

        if i23 >= $i16 goto label25;

        $r74 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z28 = $r74 instanceof org.apache.fontbox.cmap.CMapParser$Operator;

        if $z28 == 0 goto label17;

        $r84 = (org.apache.fontbox.cmap.CMapParser$Operator) $r74;

        $r85 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r84);

        $z31 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>("endbfrange");

        if $z31 != 0 goto label25;

        $r86 = new java.io.IOException;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error : ~bfrange contains an unexpected operator : ");

        $r89 = (org.apache.fontbox.cmap.CMapParser$Operator) $r74;

        $r90 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r89);

        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r86.<java.io.IOException: void <init>(java.lang.String)>($r92);

        throw $r86;

     label17:
        $r75 = (byte[]) $r74;

        r152 = (byte[]) $r75;

        $r76 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $r77 = (byte[]) $r76;

        r153 = (byte[]) $r77;

        $r78 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        r154 = null;

        $z29 = $r78 instanceof java.util.List;

        if $z29 == 0 goto label18;

        r154 = (java.util.List) $r78;

        $r83 = interfaceinvoke r154.<java.util.List: java.lang.Object get(int)>(0);

        r155 = (byte[]) $r83;

        goto label19;

     label18:
        $r79 = (byte[]) $r78;

        r155 = (byte[]) $r79;

     label19:
        z38 = 0;

        $z30 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r152, r155);

        if $z30 == 0 goto label20;

        z38 = 1;

     label20:
        i24 = 0;

     label21:
        if z38 != 0 goto label24;

        $i17 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: int compare(byte[],byte[])>(r152, r153);

        if $i17 < 0 goto label22;

        z38 = 1;

     label22:
        $r80 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.String createStringFromBytes(byte[])>(r155);

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void addMapping(byte[],java.lang.String)>(r152, $r80);

        specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: void increment(byte[])>(r152);

        if r154 != null goto label23;

        specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: void increment(byte[])>(r155);

        goto label21;

     label23:
        i24 = i24 + 1;

        $i18 = interfaceinvoke r154.<java.util.List: int size()>();

        if i24 >= $i18 goto label21;

        $r81 = interfaceinvoke r154.<java.util.List: java.lang.Object get(int)>(i24);

        $r82 = (byte[]) $r81;

        r155 = (byte[]) $r82;

        goto label21;

     label24:
        i23 = i23 + 1;

        goto label16;

     label25:
        goto label36;

     label26:
        $r41 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>(r143);

        $z22 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("begincidchar");

        if $z22 == 0 goto label30;

        r156 = (java.lang.Number) r142;

        i25 = 0;

     label27:
        $i14 = virtualinvoke r156.<java.lang.Number: int intValue()>();

        if i25 >= $i14 goto label29;

        $r60 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z26 = $r60 instanceof org.apache.fontbox.cmap.CMapParser$Operator;

        if $z26 == 0 goto label28;

        $r65 = (org.apache.fontbox.cmap.CMapParser$Operator) $r60;

        $r66 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r65);

        $z27 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>("endcidchar");

        if $z27 != 0 goto label29;

        $r67 = new java.io.IOException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error : ~cidchar contains an unexpected operator : ");

        $r70 = (org.apache.fontbox.cmap.CMapParser$Operator) $r60;

        $r71 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r70);

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r67.<java.io.IOException: void <init>(java.lang.String)>($r73);

        throw $r67;

     label28:
        $r61 = (byte[]) $r60;

        r157 = (byte[]) $r61;

        $r62 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $r63 = (java.lang.Integer) $r62;

        $i15 = virtualinvoke $r63.<java.lang.Integer: int intValue()>();

        $r64 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.String createStringFromBytes(byte[])>(r157);

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void addCIDMapping(int,java.lang.String)>($i15, $r64);

        i25 = i25 + 1;

        goto label27;

     label29:
        goto label36;

     label30:
        $r42 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>(r143);

        $z23 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("begincidrange");

        if $z23 == 0 goto label36;

        $r43 = (java.lang.Integer) r142;

        $i3 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        i26 = 0;

     label31:
        if i26 >= $i3 goto label36;

        $r44 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z24 = $r44 instanceof org.apache.fontbox.cmap.CMapParser$Operator;

        if $z24 == 0 goto label32;

        $r51 = (org.apache.fontbox.cmap.CMapParser$Operator) $r44;

        $r52 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r51);

        $z25 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>("endcidrange");

        if $z25 != 0 goto label36;

        $r53 = new java.io.IOException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error : ~cidrange contains an unexpected operator : ");

        $r56 = (org.apache.fontbox.cmap.CMapParser$Operator) $r44;

        $r57 = staticinvoke <org.apache.fontbox.cmap.CMapParser$Operator: java.lang.String access$000(org.apache.fontbox.cmap.CMapParser$Operator)>($r56);

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.io.IOException: void <init>(java.lang.String)>($r59);

        throw $r53;

     label32:
        $r45 = (byte[]) $r44;

        r158 = (byte[]) $r45;

        $i4 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: int createIntFromBytes(byte[])>(r158);

        $r46 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $r47 = (byte[]) $r46;

        r159 = (byte[]) $r47;

        $i5 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: int createIntFromBytes(byte[])>(r159);

        $r48 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $r49 = (java.lang.Integer) $r48;

        $i6 = virtualinvoke $r49.<java.lang.Integer: int intValue()>();

        i27 = $i6;

        $i7 = lengthof r158;

        if $i7 > 2 goto label33;

        $i10 = lengthof r159;

        if $i10 > 2 goto label33;

        $c13 = (char) $i4;

        $c12 = (char) $i5;

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void addCIDRange(char,char,int)>($c13, $c12, $i6);

        goto label35;

     label33:
        $i8 = $i6 + $i5;

        $i11 = $i8 - $i4;

     label34:
        if i27 > $i11 goto label35;

        $r50 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.String createStringFromBytes(byte[])>(r158);

        $i9 = i27;

        i27 = i27 + 1;

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void addCIDMapping(int,java.lang.String)>($i9, $r50);

        specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: void increment(byte[])>(r158);

        goto label34;

     label35:
        i26 = i26 + 1;

        goto label31;

     label36:
        goto label51;

     label37:
        $z1 = $r4 instanceof org.apache.fontbox.cmap.CMapParser$LiteralName;

        if $z1 == 0 goto label51;

        r160 = (org.apache.fontbox.cmap.CMapParser$LiteralName) $r4;

        $r5 = "WMode";

        $r6 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r160);

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label39;

        $r34 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z16 = $r34 instanceof java.lang.Integer;

        if $z16 == 0 goto label38;

        $r35 = (java.lang.Integer) $r34;

        $i2 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setWMode(int)>($i2);

     label38:
        goto label51;

     label39:
        $r7 = "CMapName";

        $r8 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r160);

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label41;

        $r31 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z15 = $r31 instanceof org.apache.fontbox.cmap.CMapParser$LiteralName;

        if $z15 == 0 goto label40;

        $r32 = (org.apache.fontbox.cmap.CMapParser$LiteralName) $r31;

        $r33 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>($r32);

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setName(java.lang.String)>($r33);

     label40:
        goto label51;

     label41:
        $r9 = "CMapVersion";

        $r10 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r160);

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label44;

        $r27 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z13 = $r27 instanceof java.lang.Number;

        if $z13 == 0 goto label42;

        $r29 = (java.lang.Number) $r27;

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setVersion(java.lang.String)>($r30);

        goto label43;

     label42:
        $z14 = $r27 instanceof java.lang.String;

        if $z14 == 0 goto label43;

        $r28 = (java.lang.String) $r27;

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setVersion(java.lang.String)>($r28);

     label43:
        goto label51;

     label44:
        $r11 = "CMapType";

        $r12 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r160);

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z5 == 0 goto label46;

        $r25 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z12 = $r25 instanceof java.lang.Integer;

        if $z12 == 0 goto label45;

        $r26 = (java.lang.Integer) $r25;

        $i1 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setType(int)>($i1);

     label45:
        goto label51;

     label46:
        $r13 = "Registry";

        $r14 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r160);

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 == 0 goto label48;

        $r23 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z11 = $r23 instanceof java.lang.String;

        if $z11 == 0 goto label47;

        $r24 = (java.lang.String) $r23;

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setRegistry(java.lang.String)>($r24);

     label47:
        goto label51;

     label48:
        $r15 = "Ordering";

        $r16 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r160);

        $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z7 == 0 goto label50;

        $r21 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z10 = $r21 instanceof java.lang.String;

        if $z10 == 0 goto label49;

        $r22 = (java.lang.String) $r21;

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setOrdering(java.lang.String)>($r22);

     label49:
        goto label51;

     label50:
        $r17 = "Supplement";

        $r18 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>(r160);

        $z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z8 == 0 goto label51;

        $r19 = specialinvoke r3.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>($r0);

        $z9 = $r19 instanceof java.lang.Integer;

        if $z9 == 0 goto label51;

        $r20 = (java.lang.Integer) $r19;

        $i0 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<org.apache.fontbox.cmap.CMap: void setSupplement(int)>($i0);

     label51:
        r142 = $r4;

        goto label01;

     label52:
        return $r2;
    }

    private java.lang.Object parseNextToken(java.io.PushbackInputStream) throws java.io.IOException
    {
        byte[] $r4, $r5, $r13, $r14;
        java.io.PushbackInputStream r0;
        java.lang.Integer $r45;
        org.apache.fontbox.cmap.CMapParser r2;
        byte $b6, $b8, b22, b29, b30;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r39;
        java.lang.Double $r44;
        java.util.ArrayList $r37;
        java.lang.StringBuffer $r34, $r35, $r41, $r43, $r46;
        java.lang.String $r12, $r18, $r20, $r25, $r30;
        java.io.IOException $r36, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.HashMap $r38;
        org.apache.fontbox.cmap.CMapParser$LiteralName $r17, $r42;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9, $i11, i19, i20, i21, i23, i24, $i25, i26, i27, i28, $i32, $i34, $i36, $i37;
        char $c4, $c10, $c12, $c13, $c14, $c15, $c16, $c17, $c18;
        org.apache.fontbox.cmap.CMapParser$Operator $r47;
        java.lang.Object $r16, r31, r32, r33;

        r2 := @this: org.apache.fontbox.cmap.CMapParser;

        r0 := @parameter0: java.io.PushbackInputStream;

        r31 = null;

        i19 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

     label01:
        if i19 == 9 goto label02;

        if i19 == 32 goto label02;

        if i19 == 13 goto label02;

        if i19 != 10 goto label03;

     label02:
        i19 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        goto label01;

     label03:
        lookupswitch(i19)
        {
            case -1: goto label30;
            case 37: goto label04;
            case 40: goto label05;
            case 47: goto label27;
            case 48: goto label31;
            case 49: goto label31;
            case 50: goto label31;
            case 51: goto label31;
            case 52: goto label31;
            case 53: goto label31;
            case 54: goto label31;
            case 55: goto label31;
            case 56: goto label31;
            case 57: goto label31;
            case 60: goto label14;
            case 62: goto label08;
            case 91: goto label11;
            case 93: goto label10;
            default: goto label36;
        };

     label04:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $c16 = (char) i19;

        virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c16);

        specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: void readUntilEndOfLine(java.io.InputStream,java.lang.StringBuffer)>(r0, $r34);

        r31 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label40;

     label05:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        i20 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

     label06:
        $i32 = (int) -1;

        if i20 == $i32 goto label07;

        if i20 == 41 goto label07;

        $c15 = (char) i20;

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c15);

        i20 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        goto label06;

     label07:
        r31 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label40;

     label08:
        $i0 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        if $i0 != 62 goto label09;

        r31 = ">>";

        goto label40;

     label09:
        $r36 = new java.io.IOException;

        specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>("Error: expected the end of a dictionary.");

        throw $r36;

     label10:
        r31 = "]";

        goto label40;

     label11:
        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        r32 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>(r0);

     label12:
        if r32 == null goto label13;

        if r32 == "]" goto label13;

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>(r32);

        r32 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>(r0);

        goto label12;

     label13:
        r31 = $r37;

        goto label40;

     label14:
        $i1 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        i21 = $i1;

        if $i1 != 60 goto label17;

        $r38 = new java.util.HashMap;

        specialinvoke $r38.<java.util.HashMap: void <init>()>();

        r33 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>(r0);

     label15:
        $z1 = r33 instanceof org.apache.fontbox.cmap.CMapParser$LiteralName;

        if $z1 == 0 goto label16;

        if r33 == ">>" goto label16;

        $r16 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>(r0);

        $r17 = (org.apache.fontbox.cmap.CMapParser$LiteralName) r33;

        $r18 = staticinvoke <org.apache.fontbox.cmap.CMapParser$LiteralName: java.lang.String access$100(org.apache.fontbox.cmap.CMapParser$LiteralName)>($r17);

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r16);

        r33 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>(r0);

        goto label15;

     label16:
        r31 = $r38;

        goto label40;

     label17:
        b22 = 16;

        b30 = 16;

        b29 = 16;

        $i34 = (int) -1;

        i23 = $i34;

     label18:
        $i36 = (int) -1;

        if i21 == $i36 goto label26;

        if i21 == 62 goto label26;

        if i21 < 48 goto label19;

        if i21 > 57 goto label19;

        i24 = i21 - 48;

        goto label23;

     label19:
        if i21 < 65 goto label20;

        if i21 > 70 goto label20;

        $i9 = 10 + i21;

        i24 = $i9 - 65;

        goto label23;

     label20:
        if i21 < 97 goto label21;

        if i21 > 102 goto label21;

        $i5 = 10 + i21;

        i24 = $i5 - 97;

        goto label23;

     label21:
        $z0 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: boolean isWhitespaceOrEOF(int)>(i21);

        if $z0 == 0 goto label22;

        i21 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        goto label18;

     label22:
        $r40 = new java.io.IOException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected hex character and not ");

        $c4 = (char) i21;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r40;

     label23:
        $i25 = i24 * b29;

        if b30 != 16 goto label24;

        i23 = i23 + 1;

        $r14 = r2.<org.apache.fontbox.cmap.CMapParser: byte[] tokenParserByteBuffer>;

        $r14[i23] = 0;

        b22 = 1;

        b30 = 1;

        b29 = 1;

        goto label25;

     label24:
        b22 = 16;

        b30 = 16;

        b29 = 16;

     label25:
        $r13 = r2.<org.apache.fontbox.cmap.CMapParser: byte[] tokenParserByteBuffer>;

        $b6 = $r13[i23];

        $i37 = (int) $b6;

        $i7 = $i37 + $i25;

        $b8 = (byte) $i7;

        $r13[i23] = $b8;

        i21 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        goto label18;

     label26:
        $i2 = i23 + 1;

        $r5 = newarray (byte)[$i2];

        $r4 = r2.<org.apache.fontbox.cmap.CMapParser: byte[] tokenParserByteBuffer>;

        $i3 = i23 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3);

        r31 = $r5;

        goto label40;

     label27:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        i26 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

     label28:
        $z4 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: boolean isWhitespaceOrEOF(int)>(i26);

        if $z4 != 0 goto label29;

        $c14 = (char) i26;

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c14);

        i26 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        goto label28;

     label29:
        $r42 = new org.apache.fontbox.cmap.CMapParser$LiteralName;

        $r25 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r42.<org.apache.fontbox.cmap.CMapParser$LiteralName: void <init>(org.apache.fontbox.cmap.CMapParser,java.lang.String,org.apache.fontbox.cmap.CMapParser$1)>(r2, $r25, null);

        r31 = $r42;

        goto label40;

     label30:
        goto label40;

     label31:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $c10 = (char) i19;

        virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

        i27 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

     label32:
        $z2 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: boolean isWhitespaceOrEOF(int)>(i27);

        if $z2 != 0 goto label34;

        $c12 = (char) i27;

        $z3 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c12);

        if $z3 != 0 goto label33;

        if i27 != 46 goto label34;

     label33:
        $c13 = (char) i27;

        virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c13);

        i27 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        goto label32;

     label34:
        virtualinvoke r0.<java.io.PushbackInputStream: void unread(int)>(i27);

        $r20 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        $i11 = virtualinvoke $r20.<java.lang.String: int indexOf(int)>(46);

        if $i11 < 0 goto label35;

        $r44 = new java.lang.Double;

        specialinvoke $r44.<java.lang.Double: void <init>(java.lang.String)>($r20);

        r31 = $r44;

        goto label40;

     label35:
        $r45 = new java.lang.Integer;

        specialinvoke $r45.<java.lang.Integer: void <init>(java.lang.String)>($r20);

        r31 = $r45;

        goto label40;

     label36:
        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $c17 = (char) i19;

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c17);

        i28 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

     label37:
        $z5 = specialinvoke r2.<org.apache.fontbox.cmap.CMapParser: boolean isWhitespaceOrEOF(int)>(i28);

        if $z5 != 0 goto label38;

        if i28 == 60 goto label38;

        $c18 = (char) i28;

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c18);

        i28 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        goto label37;

     label38:
        if i28 != 60 goto label39;

        virtualinvoke r0.<java.io.PushbackInputStream: void unread(int)>(i28);

     label39:
        $r47 = new org.apache.fontbox.cmap.CMapParser$Operator;

        $r30 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r47.<org.apache.fontbox.cmap.CMapParser$Operator: void <init>(org.apache.fontbox.cmap.CMapParser,java.lang.String,org.apache.fontbox.cmap.CMapParser$1)>(r2, $r30, null);

        r31 = $r47;

        goto label40;

     label40:
        return r31;
    }

    private void readUntilEndOfLine(java.io.InputStream, java.lang.StringBuffer) throws java.io.IOException
    {
        java.lang.StringBuffer r1;
        int i1, $i3;
        char $c0;
        java.io.InputStream r0;
        org.apache.fontbox.cmap.CMapParser r2;

        r2 := @this: org.apache.fontbox.cmap.CMapParser;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.StringBuffer;

        i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

     label1:
        $i3 = (int) -1;

        if i1 == $i3 goto label2;

        if i1 == 13 goto label2;

        if i1 == 10 goto label2;

        $c0 = (char) i1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        goto label1;

     label2:
        return;
    }

    private boolean isWhitespaceOrEOF(int)
    {
        int i0, $i2;
        org.apache.fontbox.cmap.CMapParser r0;
        boolean $z0;

        r0 := @this: org.apache.fontbox.cmap.CMapParser;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        if i0 == $i2 goto label1;

        if i0 == 32 goto label1;

        if i0 == 13 goto label1;

        if i0 != 10 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void increment(byte[])
    {
        byte[] r1;
        int $i0, $i1;
        org.apache.fontbox.cmap.CMapParser r0;

        r0 := @this: org.apache.fontbox.cmap.CMapParser;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = $i0 - 1;

        specialinvoke r0.<org.apache.fontbox.cmap.CMapParser: void increment(byte[],int)>(r1, $i1);

        return;
    }

    private void increment(byte[], int)
    {
        byte[] r0;
        org.apache.fontbox.cmap.CMapParser r1;
        byte $b1, $b3, $b4;
        int i0, $i2, $i5, $i6, $i7, $i8, $i9;

        r1 := @this: org.apache.fontbox.cmap.CMapParser;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        if i0 <= 0 goto label1;

        $b4 = r0[i0];

        $i8 = (int) $b4;

        $i5 = $i8 + 256;

        $i6 = $i5 % 256;

        if $i6 != 255 goto label1;

        r0[i0] = 0;

        $i7 = i0 - 1;

        specialinvoke r1.<org.apache.fontbox.cmap.CMapParser: void increment(byte[],int)>(r0, $i7);

        goto label2;

     label1:
        $b1 = r0[i0];

        $i9 = (int) $b1;

        $i2 = $i9 + 1;

        $b3 = (byte) $i2;

        r0[i0] = $b3;

     label2:
        return;
    }

    private int createIntFromBytes(byte[])
    {
        byte[] r0;
        org.apache.fontbox.cmap.CMapParser r1;
        byte $b0, $b3;
        int $i1, $i2, $i4, $i5, i6, i7, $i8, $i9;

        r1 := @this: org.apache.fontbox.cmap.CMapParser;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        $i8 = (int) $b0;

        $i1 = $i8 + 256;

        i6 = $i1 % 256;

        $i2 = lengthof r0;

        if $i2 != 2 goto label1;

        i7 = i6 << 8;

        $b3 = r0[1];

        $i9 = (int) $b3;

        $i4 = $i9 + 256;

        $i5 = $i4 % 256;

        i6 = i7 + $i5;

     label1:
        return i6;
    }

    private java.lang.String createStringFromBytes(byte[]) throws java.io.IOException
    {
        byte[] r0;
        int $i0;
        java.lang.String $r1, $r2, r4;
        org.apache.fontbox.cmap.CMapParser r3;

        r3 := @this: org.apache.fontbox.cmap.CMapParser;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 != 1 goto label1;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "ISO-8859-1");

        r4 = $r2;

        goto label2;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "UTF-16BE");

        r4 = $r1;

     label2:
        return r4;
    }

    private int compare(byte[], byte[])
    {
        byte[] r0, r1;
        org.apache.fontbox.cmap.CMapParser r2;
        byte $b1, $b2, $b3, $b5, b9;
        int i0, $i4, $i6, $i7, $i8, i10, $i11, $i12, $i13, $i14;

        r2 := @this: org.apache.fontbox.cmap.CMapParser;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        b9 = 1;

        i0 = lengthof r0;

        i10 = 0;

     label1:
        if i10 >= i0 goto label5;

        $b2 = r0[i10];

        $b1 = r1[i10];

        $i11 = (int) $b2;

        $i12 = (int) $b1;

        if $i11 != $i12 goto label2;

        goto label4;

     label2:
        $b3 = r0[i10];

        $i13 = (int) $b3;

        $i4 = $i13 + 256;

        $i8 = $i4 % 256;

        $b5 = r1[i10];

        $i14 = (int) $b5;

        $i6 = $i14 + 256;

        $i7 = $i6 % 256;

        if $i8 >= $i7 goto label3;

        b9 = -1;

        goto label5;

     label3:
        b9 = 1;

        goto label5;

     label4:
        i10 = i10 + 1;

        goto label1;

     label5:
        return b9;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r6, $r10;
        java.lang.String[] r0;
        java.io.File $r12;
        org.apache.fontbox.cmap.CMap $r4;
        org.apache.fontbox.cmap.CMapParser $r11;
        int $i0, $i2;
        java.lang.StringBuilder $r7, $r8, $r13;
        java.lang.String $r3, $r9;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 1 goto label1;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("usage: java org.apache.fontbox.cmap.CMapParser <CMAP File>");

        $i2 = (int) -1;

        staticinvoke <java.lang.System: void exit(int)>($i2);

     label1:
        $r11 = new org.apache.fontbox.cmap.CMapParser;

        specialinvoke $r11.<org.apache.fontbox.cmap.CMapParser: void <init>()>();

        $r12 = new java.io.File;

        $r3 = r0[0];

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r11.<org.apache.fontbox.cmap.CMapParser: org.apache.fontbox.cmap.CMap parse(java.io.File)>($r12);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Result:");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.fontbox.cmap.CMapParser: java.lang.String MARK_END_OF_ARRAY> = "]";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String MARK_END_OF_DICTIONARY> = ">>";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String SUPPLEMENT> = "Supplement";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String ORDERING> = "Ordering";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String REGISTRY> = "Registry";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String CMAP_TYPE> = "CMapType";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String CMAP_VERSION> = "CMapVersion";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String CMAP_NAME> = "CMapName";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String WMODE> = "WMode";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String END_CMAP> = "endcmap";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String END_CID_RANGE> = "endcidrange";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String END_CID_CHAR> = "endcidchar";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String END_BASE_FONT_RANGE> = "endbfrange";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String END_BASE_FONT_CHAR> = "endbfchar";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String END_CODESPACE_RANGE> = "endcodespacerange";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String USECMAP> = "usecmap";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String BEGIN_CID_RANGE> = "begincidrange";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String BEGIN_CID_CHAR> = "begincidchar";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String BEGIN_BASE_FONT_RANGE> = "beginbfrange";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String BEGIN_BASE_FONT_CHAR> = "beginbfchar";

        <org.apache.fontbox.cmap.CMapParser: java.lang.String BEGIN_CODESPACE_RANGE> = "begincodespacerange";

        return;
    }
}
