class ucar.nc2.iosp.hdf4.H4header$TagSDminmax extends ucar.nc2.iosp.hdf4.H4header$Tag
{
    java.nio.ByteBuffer bb;
    ucar.ma2.DataType dt;
    final ucar.nc2.iosp.hdf4.H4header this$0;

    void <init>(ucar.nc2.iosp.hdf4.H4header, short) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf4.H4header$TagSDminmax r0;
        short s0;
        ucar.nc2.iosp.hdf4.H4header r1;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$TagSDminmax;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4header;

        s0 := @parameter1: short;

        r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: ucar.nc2.iosp.hdf4.H4header this$0> = r1;

        specialinvoke r0.<ucar.nc2.iosp.hdf4.H4header$Tag: void <init>(ucar.nc2.iosp.hdf4.H4header,short)>(r1, s0);

        return;
    }

    void read() throws java.io.IOException
    {
        byte[] r3;
        ucar.unidata.io.RandomAccessFile $r2, $r5;
        ucar.nc2.iosp.hdf4.H4header $r1, $r4;
        long $l1;
        java.nio.ByteBuffer $r6;
        int $i0, $i2;
        ucar.nc2.iosp.hdf4.H4header$TagSDminmax r0;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$TagSDminmax;

        $r1 = r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r1);

        $i0 = r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: int offset>;

        $l1 = (long) $i0;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $i2 = r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: int length>;

        r3 = newarray (byte)[$i2];

        $r4 = r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: ucar.nc2.iosp.hdf4.H4header this$0>;

        $r5 = staticinvoke <ucar.nc2.iosp.hdf4.H4header: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.hdf4.H4header)>($r4);

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r3);

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.nio.ByteBuffer bb> = $r6;

        return;
    }

    java.lang.Number getMin(ucar.ma2.DataType)
    {
        ucar.ma2.DataType r1;
        ucar.nc2.iosp.hdf4.H4header$TagSDminmax r0;
        java.lang.Number $r2;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$TagSDminmax;

        r1 := @parameter0: ucar.ma2.DataType;

        r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: ucar.ma2.DataType dt> = r1;

        $r2 = virtualinvoke r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.lang.Number get(ucar.ma2.DataType,int)>(r1, 1);

        return $r2;
    }

    java.lang.Number getMax(ucar.ma2.DataType)
    {
        ucar.ma2.DataType r1;
        ucar.nc2.iosp.hdf4.H4header$TagSDminmax r0;
        java.lang.Number $r2;

        r0 := @this: ucar.nc2.iosp.hdf4.H4header$TagSDminmax;

        r1 := @parameter0: ucar.ma2.DataType;

        r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: ucar.ma2.DataType dt> = r1;

        $r2 = virtualinvoke r0.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.lang.Number get(ucar.ma2.DataType,int)>(r1, 0);

        return $r2;
    }

    java.lang.Number get(ucar.ma2.DataType, int)
    {
        java.lang.Float $r14;
        java.nio.FloatBuffer $r13;
        java.lang.Integer $r20;
        java.nio.ByteBuffer $r9, $r12, $r15, $r18, $r21, $r24;
        byte $b4;
        java.lang.Long $r17;
        java.nio.IntBuffer $r19;
        java.lang.Short $r23;
        java.lang.Byte $r25;
        ucar.ma2.DataType r0, $r1, $r2, $r3, $r4, $r5, $r6;
        float $f0;
        java.lang.Double $r7, $r11;
        java.nio.ShortBuffer $r22;
        long $l1;
        short $s3;
        int i0, $i2;
        ucar.nc2.iosp.hdf4.H4header$TagSDminmax r8;
        double $d0;
        java.nio.DoubleBuffer $r10;
        java.nio.LongBuffer $r16;

        r8 := @this: ucar.nc2.iosp.hdf4.H4header$TagSDminmax;

        r0 := @parameter0: ucar.ma2.DataType;

        i0 := @parameter1: int;

        $r1 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if r0 != $r1 goto label1;

        $r24 = r8.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.nio.ByteBuffer bb>;

        $b4 = virtualinvoke $r24.<java.nio.ByteBuffer: byte get(int)>(i0);

        $r25 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4);

        return $r25;

     label1:
        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if r0 != $r2 goto label2;

        $r21 = r8.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.nio.ByteBuffer bb>;

        $r22 = virtualinvoke $r21.<java.nio.ByteBuffer: java.nio.ShortBuffer asShortBuffer()>();

        $s3 = virtualinvoke $r22.<java.nio.ShortBuffer: short get(int)>(i0);

        $r23 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        return $r23;

     label2:
        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if r0 != $r3 goto label3;

        $r18 = r8.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.nio.ByteBuffer bb>;

        $r19 = virtualinvoke $r18.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        $i2 = virtualinvoke $r19.<java.nio.IntBuffer: int get(int)>(i0);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r20;

     label3:
        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if r0 != $r4 goto label4;

        $r15 = r8.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.nio.ByteBuffer bb>;

        $r16 = virtualinvoke $r15.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>();

        $l1 = virtualinvoke $r16.<java.nio.LongBuffer: long get(int)>(i0);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r17;

     label4:
        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if r0 != $r5 goto label5;

        $r12 = r8.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.nio.ByteBuffer bb>;

        $r13 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        $f0 = virtualinvoke $r13.<java.nio.FloatBuffer: float get(int)>(i0);

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r14;

     label5:
        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if r0 != $r6 goto label6;

        $r9 = r8.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.nio.ByteBuffer bb>;

        $r10 = virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>();

        $d0 = virtualinvoke $r10.<java.nio.DoubleBuffer: double get(int)>(i0);

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r11;

     label6:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        return $r7;
    }

    public java.lang.String detail()
    {
        ucar.ma2.DataType $r4, $r7;
        java.lang.StringBuilder $r0, $r3, $r6;
        ucar.nc2.iosp.hdf4.H4header$TagSDminmax r1;
        java.lang.String $r2, $r9;
        java.lang.Number $r5, $r8;

        r1 := @this: ucar.nc2.iosp.hdf4.H4header$TagSDminmax;

        $r0 = new java.lang.StringBuilder;

        $r2 = specialinvoke r1.<ucar.nc2.iosp.hdf4.H4header$Tag: java.lang.String detail()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   min= ");

        $r4 = r1.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: ucar.ma2.DataType dt>;

        $r5 = virtualinvoke r1.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.lang.Number getMin(ucar.ma2.DataType)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   max= ");

        $r7 = r1.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: ucar.ma2.DataType dt>;

        $r8 = virtualinvoke r1.<ucar.nc2.iosp.hdf4.H4header$TagSDminmax: java.lang.Number getMax(ucar.ma2.DataType)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
