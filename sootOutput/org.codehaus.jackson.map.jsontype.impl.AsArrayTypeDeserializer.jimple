public class org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer extends org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase
{

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r0;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.Class)>(r1, r2, r3, null);

        return;
    }

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty, java.lang.Class)
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.Class r4;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r0;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        r4 := @parameter3: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.Class)>(r1, r2, r3, r4);

        return;
    }

    public org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r0;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r1;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY>;

        return $r0;
    }

    public java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object $r3;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object $r3;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object $r3;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object $r3;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    private final java.lang.Object _deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r6, $r7, $r8;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r1;
        org.codehaus.jackson.map.DeserializationContext r2;
        org.codehaus.jackson.map.JsonMappingException $r9;
        org.codehaus.jackson.map.JsonDeserializer $r4;
        java.lang.Object $r5;
        java.lang.String $r3;
        org.codehaus.jackson.JsonParser r0;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        $r3 = virtualinvoke r1.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.String _locateTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r2);

        $r4 = virtualinvoke r1.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String)>(r2, $r3);

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r2);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r6 == $r7 goto label1;

        $r8 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        $r9 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>(r0, $r8, "expected closing END_ARRAY after type information and deserialized value");

        throw $r9;

     label1:
        return $r5;
    }

    protected final java.lang.String _locateTypeId(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r8, $r21;
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer r4;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r20, $r22, $r24;
        org.codehaus.jackson.map.DeserializationContext r6;
        org.codehaus.jackson.map.JsonMappingException $r14, $r26;
        org.codehaus.jackson.type.JavaType $r15, $r27;
        java.lang.String $r3, $r10, $r13, $r18, $r23, $r25, $r30;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r5, $r16, $r19, $r28;
        org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase $r17, $r29;

        r4 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r6 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label2;

        $r19 = r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $z2 = $r19 instanceof org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase;

        if $z2 == 0 goto label1;

        $r27 = r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.type.JavaType _defaultImpl>;

        if $r27 == null goto label1;

        $r28 = r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r29 = (org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase) $r28;

        $r30 = virtualinvoke $r29.<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: java.lang.String idFromBaseType()>();

        return $r30;

     label1:
        $r21 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need JSON Array to contain As.WRAPPER_ARRAY type information for class ");

        $r23 = virtualinvoke r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.String baseTypeName()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>(r0, $r21, $r25);

        throw $r26;

     label2:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r1 == $r2 goto label4;

        $r5 = r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $z1 = $r5 instanceof org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase;

        if $z1 == 0 goto label3;

        $r15 = r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.type.JavaType _defaultImpl>;

        if $r15 == null goto label3;

        $r16 = r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r17 = (org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase) $r16;

        $r18 = virtualinvoke $r17.<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: java.lang.String idFromBaseType()>();

        return $r18;

     label3:
        $r8 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need JSON String that contains type id (for subtype of ");

        $r10 = virtualinvoke r4.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.String baseTypeName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>(r0, $r8, $r13);

        throw $r14;

     label4:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        return $r3;
    }
}
