class org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection extends org.eclipse.jetty.io.AbstractConnection implements org.eclipse.jetty.io.nio.AsyncConnection
{
    private final org.eclipse.jetty.io.AsyncEndPoint _endp;
    private final org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future;
    private final java.lang.String _key;
    private final org.eclipse.jetty.http.HttpParser _parser;
    private java.lang.String _accept;
    private java.lang.String _error;
    private org.eclipse.jetty.io.ByteArrayBuffer _handshake;
    final org.eclipse.jetty.websocket.WebSocketClientFactory this$0;

    public void <init>(org.eclipse.jetty.websocket.WebSocketClientFactory, org.eclipse.jetty.io.AsyncEndPoint, org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture)
    {
        org.eclipse.jetty.websocket.WebSocketBuffers $r9;
        byte[] r4;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r3;
        long $l0;
        java.util.Random $r5;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;
        org.eclipse.jetty.websocket.WebSocketClientFactory r1;
        org.eclipse.jetty.http.HttpParser $r11;
        org.eclipse.jetty.io.AsyncEndPoint r2, $r13;
        org.eclipse.jetty.io.SimpleBuffers $r8;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection$1 $r12;
        char[] $r7;
        java.lang.String $r6;
        org.eclipse.jetty.io.Buffer $r10;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        r1 := @parameter0: org.eclipse.jetty.websocket.WebSocketClientFactory;

        r2 := @parameter1: org.eclipse.jetty.io.AsyncEndPoint;

        r3 := @parameter2: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClientFactory this$0> = r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r0.<org.eclipse.jetty.io.AbstractConnection: void <init>(org.eclipse.jetty.io.EndPoint,long)>(r2, $l0);

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp> = r2;

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future> = r3;

        r4 = newarray (byte)[16];

        $r5 = new java.util.Random;

        specialinvoke $r5.<java.util.Random: void <init>()>();

        virtualinvoke $r5.<java.util.Random: void nextBytes(byte[])>(r4);

        $r6 = new java.lang.String;

        $r7 = staticinvoke <org.eclipse.jetty.util.B64Code: char[] encode(byte[])>(r4);

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _key> = $r6;

        $r8 = new org.eclipse.jetty.io.SimpleBuffers;

        $r9 = staticinvoke <org.eclipse.jetty.websocket.WebSocketClientFactory: org.eclipse.jetty.websocket.WebSocketBuffers access$200(org.eclipse.jetty.websocket.WebSocketClientFactory)>(r1);

        $r10 = virtualinvoke $r9.<org.eclipse.jetty.websocket.WebSocketBuffers: org.eclipse.jetty.io.Buffer getBuffer()>();

        specialinvoke $r8.<org.eclipse.jetty.io.SimpleBuffers: void <init>(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r10, null);

        $r11 = new org.eclipse.jetty.http.HttpParser;

        $r13 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        $r12 = new org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection$1;

        specialinvoke $r12.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection$1: void <init>(org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection,org.eclipse.jetty.websocket.WebSocketClientFactory)>(r0, r1);

        specialinvoke $r11.<org.eclipse.jetty.http.HttpParser: void <init>(org.eclipse.jetty.io.Buffers,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.http.HttpParser$EventHandler)>($r8, $r13, $r12);

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.http.HttpParser _parser> = $r11;

        return;
    }

    private boolean handshake()
    {
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;
        java.util.Map $r33;
        java.util.Set $r34;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r38, $r40, $r41, $r45, $r46, $r49, $r50, $r51, $r52, $r53, $r54, $r58;
        org.eclipse.jetty.io.ByteArrayBuffer $r1, $r2, $r65, $r67, $r69;
        java.lang.String $r6, $r8, $r16, $r26, $r31, r37, $r39, $r43, $r44, $r48, $r57, r61, $r64, $r66;
        java.io.IOException $r3, $r59;
        org.eclipse.jetty.io.AsyncEndPoint $r68;
        java.net.URI $r5, $r15, $r20, $r56, $r63;
        boolean $z0, $z1;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture $r4, $r7, $r14, $r19, $r30, $r32, $r47, $r55, $r60, $r62;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Iterator $r35;
        java.lang.Object $r36, $r42;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.ByteArrayBuffer _handshake>;

        if $r1 != null goto label08;

        $r4 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI getURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String getPath()>();

        r61 = $r6;

        if $r6 == null goto label01;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 != 0 goto label02;

     label01:
        r61 = "/";

     label02:
        $r62 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r63 = virtualinvoke $r62.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI getURI()>();

        $r64 = virtualinvoke $r63.<java.net.URI: java.lang.String getRawQuery()>();

        if $r64 == null goto label03;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r55 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r56 = virtualinvoke $r55.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI getURI()>();

        $r57 = virtualinvoke $r56.<java.net.URI: java.lang.String getRawQuery()>();

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r7 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.String getOrigin()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>(512);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" HTTP/1.1\r\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host: ");

        $r14 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r15 = virtualinvoke $r14.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI getURI()>();

        $r16 = virtualinvoke $r15.<java.net.URI: java.lang.String getHost()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r20 = virtualinvoke $r19.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI getURI()>();

        $i1 = virtualinvoke $r20.<java.net.URI: int getPort()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrade: websocket\r\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection: Upgrade\r\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sec-WebSocket-Key: ");

        $r26 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _key>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        if $r8 == null goto label04;

        $r50 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Origin: ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label04:
        $r28 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sec-WebSocket-Version: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(13);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r30 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r31 = virtualinvoke $r30.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.String getProtocol()>();

        if $r31 == null goto label05;

        $r46 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sec-WebSocket-Protocol: ");

        $r47 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r48 = virtualinvoke $r47.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.String getProtocol()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label05:
        $r32 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r33 = virtualinvoke $r32.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.Map getCookies()>();

        if $r33 == null goto label07;

        $i2 = interfaceinvoke $r33.<java.util.Map: int size()>();

        if $i2 <= 0 goto label07;

        $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Set keySet()>();

        $r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.lang.String) $r36;

        $r38 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cookie: ");

        $r39 = staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String quoteIfNeeded(java.lang.String,java.lang.String)>(r37, "\"\\\n\r\t\f\u0008%+ ;=");

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r42 = interfaceinvoke $r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r37);

        $r43 = (java.lang.String) $r42;

        $r44 = staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String quoteIfNeeded(java.lang.String,java.lang.String)>($r43, "\"\\\n\r\t\f\u0008%+ ;=");

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        goto label06;

     label07:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r65 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $r66 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String,boolean)>($r66, 0);

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.ByteArrayBuffer _handshake> = $r65;

     label08:
        $r67 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.ByteArrayBuffer _handshake>;

        virtualinvoke $r67.<org.eclipse.jetty.io.ByteArrayBuffer: int length()>();

        $r68 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        $r69 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.ByteArrayBuffer _handshake>;

        $i4 = interfaceinvoke $r68.<org.eclipse.jetty.io.AsyncEndPoint: int flush(org.eclipse.jetty.io.Buffer)>($r69);

        if $i4 >= 0 goto label09;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("incomplete handshake");

        throw $r3;

     label09:
        goto label11;

     label10:
        $r59 := @caughtexception;

        $r60 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        virtualinvoke $r60.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void handshakeFailed(java.lang.Throwable)>($r59);

     label11:
        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.ByteArrayBuffer _handshake>;

        $i0 = virtualinvoke $r2.<org.eclipse.jetty.io.ByteArrayBuffer: int length()>();

        if $i0 != 0 goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        return $z1;

        catch java.io.IOException from label08 to label09 with label10;
    }

    public org.eclipse.jetty.io.Connection handle() throws java.io.IOException
    {
        org.eclipse.jetty.websocket.WebSocketBuffers $r11;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;
        org.eclipse.jetty.io.ByteArrayBuffer $r14, $r19;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        org.eclipse.jetty.io.Buffer $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture $r12, $r18;
        java.io.IOException $r17;
        org.eclipse.jetty.http.HttpParser $r8, $r13, $r15;
        org.eclipse.jetty.websocket.WebSocketClientFactory $r10;
        org.eclipse.jetty.websocket.WebSocketConnection $r7;
        org.eclipse.jetty.io.AsyncEndPoint $r1, $r16, $r20;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

     label1:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.io.AsyncEndPoint: boolean isOpen()>();

        if $z0 == 0 goto label5;

        $r13 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.http.HttpParser _parser>;

        $z3 = virtualinvoke $r13.<org.eclipse.jetty.http.HttpParser: boolean isComplete()>();

        if $z3 != 0 goto label5;

        $r14 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.ByteArrayBuffer _handshake>;

        if $r14 == null goto label2;

        $r19 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.ByteArrayBuffer _handshake>;

        $i0 = virtualinvoke $r19.<org.eclipse.jetty.io.ByteArrayBuffer: int length()>();

        if $i0 <= 0 goto label3;

     label2:
        $z4 = specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: boolean handshake()>();

        if $z4 != 0 goto label3;

        return r0;

     label3:
        $r15 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.http.HttpParser _parser>;

        $z5 = virtualinvoke $r15.<org.eclipse.jetty.http.HttpParser: boolean parseAvailable()>();

        if $z5 != 0 goto label1;

        $r16 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        $z6 = interfaceinvoke $r16.<org.eclipse.jetty.io.AsyncEndPoint: boolean isInputShutdown()>();

        if $z6 == 0 goto label4;

        $r18 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Incomplete handshake response");

        virtualinvoke $r18.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void handshakeFailed(java.lang.Throwable)>($r17);

     label4:
        return r0;

     label5:
        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _error>;

        if $r2 != null goto label9;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _accept>;

        if $r3 != null goto label6;

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _error> = "No Sec-WebSocket-Accept";

        goto label9;

     label6:
        $r4 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _key>;

        $r5 = staticinvoke <org.eclipse.jetty.websocket.WebSocketConnectionRFC6455: java.lang.String hashKey(java.lang.String)>($r4);

        $r6 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _accept>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label7;

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _error> = "Bad Sec-WebSocket-Accept";

        goto label9;

     label7:
        $r7 = specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketConnection newWebSocketConnection()>();

        $r8 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.http.HttpParser _parser>;

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.io.Buffer getHeaderBuffer()>();

        $z2 = interfaceinvoke $r9.<org.eclipse.jetty.io.Buffer: boolean hasContent()>();

        if $z2 == 0 goto label8;

        interfaceinvoke $r7.<org.eclipse.jetty.websocket.WebSocketConnection: void fillBuffersFrom(org.eclipse.jetty.io.Buffer)>($r9);

     label8:
        $r10 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClientFactory this$0>;

        $r11 = staticinvoke <org.eclipse.jetty.websocket.WebSocketClientFactory: org.eclipse.jetty.websocket.WebSocketBuffers access$200(org.eclipse.jetty.websocket.WebSocketClientFactory)>($r10);

        virtualinvoke $r11.<org.eclipse.jetty.websocket.WebSocketBuffers: void returnBuffer(org.eclipse.jetty.io.Buffer)>($r9);

        $r12 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        virtualinvoke $r12.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void onConnection(org.eclipse.jetty.websocket.WebSocketConnection)>($r7);

        return $r7;

     label9:
        $r20 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        interfaceinvoke $r20.<org.eclipse.jetty.io.AsyncEndPoint: void close()>();

        return r0;
    }

    private org.eclipse.jetty.websocket.WebSocketConnection newWebSocketConnection() throws java.io.IOException
    {
        org.eclipse.jetty.websocket.WebSocketBuffers $r9;
        org.eclipse.jetty.websocket.MaskGen $r14;
        long $l0;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r1;
        org.eclipse.jetty.websocket.WebSocketClientFactory$WebSocketClientConnection $r0;
        org.eclipse.jetty.websocket.WebSocketClient $r3;
        int $i1;
        java.lang.String $r12;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture $r2, $r5, $r10, $r11, $r13;
        org.eclipse.jetty.websocket.WebSocketClientFactory $r4, $r7;
        org.eclipse.jetty.io.AsyncEndPoint $r8;
        org.eclipse.jetty.websocket.WebSocket $r6;

        r1 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        $r0 = new org.eclipse.jetty.websocket.WebSocketClientFactory$WebSocketClientConnection;

        $r2 = r1.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r3 = $r2.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.websocket.WebSocketClient: org.eclipse.jetty.websocket.WebSocketClientFactory getFactory()>();

        $r5 = r1.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket getWebSocket()>();

        $r8 = r1.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        $r7 = r1.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClientFactory this$0>;

        $r9 = staticinvoke <org.eclipse.jetty.websocket.WebSocketClientFactory: org.eclipse.jetty.websocket.WebSocketBuffers access$200(org.eclipse.jetty.websocket.WebSocketClientFactory)>($r7);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r10 = r1.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $i1 = virtualinvoke $r10.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: int getMaxIdleTime()>();

        $r11 = r1.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r12 = virtualinvoke $r11.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.String getProtocol()>();

        $r13 = r1.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r14 = virtualinvoke $r13.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.MaskGen getMaskGen()>();

        specialinvoke $r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$WebSocketClientConnection: void <init>(org.eclipse.jetty.websocket.WebSocketClientFactory,org.eclipse.jetty.websocket.WebSocket,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.websocket.WebSocketBuffers,long,int,java.lang.String,java.util.List,int,org.eclipse.jetty.websocket.MaskGen)>($r4, $r6, $r8, $r9, $l0, $i1, $r12, null, 13, $r14);

        return $r0;
    }

    public void onInputShutdown() throws java.io.IOException
    {
        org.eclipse.jetty.io.AsyncEndPoint $r1;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.AsyncEndPoint: void close()>();

        return;
    }

    public boolean isIdle()
    {
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        return 0;
    }

    public boolean isSuspended()
    {
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        return 0;
    }

    public void onClose()
    {
        java.net.ProtocolException $r4;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture $r3, $r6;
        java.lang.String $r1, $r5;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;
        java.io.EOFException $r2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _error>;

        if $r1 == null goto label1;

        $r6 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r4 = new java.net.ProtocolException;

        $r5 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _error>;

        specialinvoke $r4.<java.net.ProtocolException: void <init>(java.lang.String)>($r5);

        virtualinvoke $r6.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void handshakeFailed(java.lang.Throwable)>($r4);

        goto label2;

     label1:
        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture _future>;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        virtualinvoke $r3.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void handshakeFailed(java.lang.Throwable)>($r2);

     label2:
        return;
    }

    static java.lang.String access$302(org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection, java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;

        r0 := @parameter0: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        r1 := @parameter1: java.lang.String;

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _error> = r1;

        return r1;
    }

    static org.eclipse.jetty.io.AsyncEndPoint access$400(org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection)
    {
        org.eclipse.jetty.io.AsyncEndPoint $r1;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;

        r0 := @parameter0: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: org.eclipse.jetty.io.AsyncEndPoint _endp>;

        return $r1;
    }

    static java.lang.String access$602(org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection, java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;

        r0 := @parameter0: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        r1 := @parameter1: java.lang.String;

        r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _accept> = r1;

        return r1;
    }

    static java.lang.String access$300(org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection)
    {
        java.lang.String $r1;
        org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection r0;

        r0 := @parameter0: org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClientFactory$HandshakeConnection: java.lang.String _error>;

        return $r1;
    }
}
