public class org.apache.cxf.jaxrs.client.ThreadLocalClientState extends java.lang.Object implements org.apache.cxf.jaxrs.client.ClientState
{
    private java.util.Map state;
    private org.apache.cxf.jaxrs.client.LocalClientState initialState;
    private java.util.Map checkpointMap;
    private long timeToKeepState;

    public void <init>(java.lang.String)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        org.apache.cxf.jaxrs.client.LocalClientState $r3;
        java.util.Map $r2;
        java.lang.String r4;
        java.net.URI $r5;
        java.util.WeakHashMap $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r4 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map state> = $r2;

        $r3 = new org.apache.cxf.jaxrs.client.LocalClientState;

        $r5 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r4);

        specialinvoke $r3.<org.apache.cxf.jaxrs.client.LocalClientState: void <init>(java.net.URI)>($r5);

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.LocalClientState initialState> = $r3;

        return;
    }

    public void <init>(java.lang.String, long)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        org.apache.cxf.jaxrs.client.LocalClientState $r3;
        java.util.Map $r2;
        long l0;
        java.lang.String r4;
        java.net.URI $r5;
        java.util.WeakHashMap $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r4 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map state> = $r2;

        $r3 = new org.apache.cxf.jaxrs.client.LocalClientState;

        $r5 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r4);

        specialinvoke $r3.<org.apache.cxf.jaxrs.client.LocalClientState: void <init>(java.net.URI)>($r5);

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.LocalClientState initialState> = $r3;

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: long timeToKeepState> = l0;

        return;
    }

    public void <init>(org.apache.cxf.jaxrs.client.LocalClientState, long)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        org.apache.cxf.jaxrs.client.LocalClientState r3;
        java.util.Map $r2;
        long l0;
        java.util.WeakHashMap $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r3 := @parameter0: org.apache.cxf.jaxrs.client.LocalClientState;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map state> = $r2;

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.LocalClientState initialState> = r3;

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: long timeToKeepState> = l0;

        return;
    }

    public void setCurrentBuilder(javax.ws.rs.core.UriBuilder)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.UriBuilder r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r2 := @parameter0: javax.ws.rs.core.UriBuilder;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setCurrentBuilder(javax.ws.rs.core.UriBuilder)>(r2);

        return;
    }

    public javax.ws.rs.core.UriBuilder getCurrentBuilder()
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.UriBuilder $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        return $r2;
    }

    public void setBaseURI(java.net.URI)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        java.net.URI r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r2 := @parameter0: java.net.URI;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setBaseURI(java.net.URI)>(r2);

        return;
    }

    public java.net.URI getBaseURI()
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: java.net.URI getBaseURI()>();

        return $r2;
    }

    public void setResponse(javax.ws.rs.core.Response)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.Response r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r2 := @parameter0: javax.ws.rs.core.Response;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setResponse(javax.ws.rs.core.Response)>(r2);

        return;
    }

    public javax.ws.rs.core.Response getResponse()
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.Response $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.Response getResponse()>();

        return $r2;
    }

    public void setRequestHeaders(javax.ws.rs.core.MultivaluedMap)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.MultivaluedMap r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r2 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setRequestHeaders(javax.ws.rs.core.MultivaluedMap)>(r2);

        return;
    }

    public javax.ws.rs.core.MultivaluedMap getRequestHeaders()
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.MultivaluedMap $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        return $r2;
    }

    public javax.ws.rs.core.MultivaluedMap getTemplates()
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.MultivaluedMap $r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getTemplates()>();

        return $r2;
    }

    public void setTemplates(javax.ws.rs.core.MultivaluedMap)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        javax.ws.rs.core.MultivaluedMap r2;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r2 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setTemplates(javax.ws.rs.core.MultivaluedMap)>(r2);

        return;
    }

    public void reset()
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        java.lang.Thread $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: void removeThreadLocalState(java.lang.Thread)>($r1);

        return;
    }

    public org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI, javax.ws.rs.core.MultivaluedMap, javax.ws.rs.core.MultivaluedMap)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0, $r7;
        org.apache.cxf.jaxrs.client.LocalClientState r6;
        long $l0;
        org.apache.cxf.jaxrs.client.ClientState $r1, $r5;
        javax.ws.rs.core.MultivaluedMap r3, r4;
        java.net.URI r2;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r2 := @parameter0: java.net.URI;

        r3 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r5 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)>(r2, r3, r4);

        r6 = (org.apache.cxf.jaxrs.client.LocalClientState) $r5;

        $r7 = new org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $l0 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: long timeToKeepState>;

        specialinvoke $r7.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: void <init>(org.apache.cxf.jaxrs.client.LocalClientState,long)>(r6, $l0);

        return $r7;
    }

    private void removeThreadLocalState(java.lang.Thread)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        java.lang.Thread r1;
        java.util.Map $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r1 := @parameter0: java.lang.Thread;

        $r2 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map state>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map checkpointMap>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map checkpointMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    protected org.apache.cxf.jaxrs.client.ClientState getState()
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread $r15;
        long $l0, $l2;
        byte $b1;
        java.lang.Long $r10;
        java.util.Map $r1, $r6, $r8;
        java.lang.Thread $r2, $r7, $r9, $r12;
        int $i3;
        org.apache.cxf.jaxrs.client.LocalClientState $r5, r13, $r14;
        java.lang.Object $r3;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map state>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r13 = (org.apache.cxf.jaxrs.client.LocalClientState) $r3;

        if r13 != null goto label1;

        $r14 = new org.apache.cxf.jaxrs.client.LocalClientState;

        $r5 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: org.apache.cxf.jaxrs.client.LocalClientState initialState>;

        specialinvoke $r14.<org.apache.cxf.jaxrs.client.LocalClientState: void <init>(org.apache.cxf.jaxrs.client.LocalClientState)>($r5);

        r13 = $r14;

        $r6 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map state>;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r14);

        $l0 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: long timeToKeepState>;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map checkpointMap>;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r15 = new org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread;

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        specialinvoke $r15.<org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread: void <init>(org.apache.cxf.jaxrs.client.ThreadLocalClientState,java.lang.Thread,long)>(r0, $r12, $l2);

        virtualinvoke $r15.<org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread: void start()>();

     label1:
        return r13;
    }

    public void setTimeToKeepState(long)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        byte $b1;
        java.util.concurrent.ConcurrentHashMap $r2;
        int $i2;
        long l0;

        r0 := @this: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        l0 := @parameter0: long;

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: long timeToKeepState> = l0;

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map checkpointMap> = $r2;

     label1:
        return;
    }

    static long access$000(org.apache.cxf.jaxrs.client.ThreadLocalClientState)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        long $l0;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $l0 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: long timeToKeepState>;

        return $l0;
    }

    static java.util.Map access$100(org.apache.cxf.jaxrs.client.ThreadLocalClientState)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: java.util.Map checkpointMap>;

        return $r1;
    }

    static void access$200(org.apache.cxf.jaxrs.client.ThreadLocalClientState, java.lang.Thread)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState r0;
        java.lang.Thread r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        r1 := @parameter1: java.lang.Thread;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: void removeThreadLocalState(java.lang.Thread)>(r1);

        return;
    }
}
