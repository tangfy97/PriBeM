public abstract class org.apache.neethi.builders.converters.AbstractOMConverter extends java.lang.Object
{

    public void <init>()
    {
        org.apache.neethi.builders.converters.AbstractOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.AbstractOMConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.xml.namespace.QName getQName(org.apache.axiom.om.OMElement)
    {
        org.apache.axiom.om.OMElement r0;
        org.apache.axiom.om.OMNamespace $r1, $r3;
        org.apache.neethi.builders.converters.AbstractOMConverter r8;
        javax.xml.namespace.QName $r2, $r6;
        java.lang.String $r4, $r5, $r7;

        r8 := @this: org.apache.neethi.builders.converters.AbstractOMConverter;

        r0 := @parameter0: org.apache.axiom.om.OMElement;

        $r1 = interfaceinvoke r0.<org.apache.axiom.om.OMElement: org.apache.axiom.om.OMNamespace getNamespace()>();

        if $r1 != null goto label1;

        $r6 = new javax.xml.namespace.QName;

        $r7 = interfaceinvoke r0.<org.apache.axiom.om.OMElement: java.lang.String getLocalName()>();

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String)>($r7);

        return $r6;

     label1:
        $r2 = new javax.xml.namespace.QName;

        $r3 = interfaceinvoke r0.<org.apache.axiom.om.OMElement: org.apache.axiom.om.OMNamespace getNamespace()>();

        $r4 = interfaceinvoke $r3.<org.apache.axiom.om.OMNamespace: java.lang.String getNamespaceURI()>();

        $r5 = interfaceinvoke r0.<org.apache.axiom.om.OMElement: java.lang.String getLocalName()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        return $r2;
    }

    public java.util.Map getAttributes(org.apache.axiom.om.OMElement)
    {
        java.util.HashMap $r0;
        org.apache.axiom.om.OMNamespace $r5, $r7;
        org.apache.neethi.builders.converters.AbstractOMConverter r14;
        java.lang.String $r8, $r9, $r10, $r12, $r13;
        boolean $z0;
        org.apache.axiom.om.OMElement r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.apache.axiom.om.OMAttribute r4;
        javax.xml.namespace.QName $r6, $r11;

        r14 := @this: org.apache.neethi.builders.converters.AbstractOMConverter;

        r1 := @parameter0: org.apache.axiom.om.OMElement;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.axiom.om.OMElement: java.util.Iterator getAllAttributes()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.axiom.om.OMAttribute) $r3;

        $r5 = interfaceinvoke r4.<org.apache.axiom.om.OMAttribute: org.apache.axiom.om.OMNamespace getNamespace()>();

        if $r5 != null goto label2;

        $r11 = new javax.xml.namespace.QName;

        $r12 = interfaceinvoke r4.<org.apache.axiom.om.OMAttribute: java.lang.String getLocalName()>();

        specialinvoke $r11.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", $r12);

        $r13 = interfaceinvoke r4.<org.apache.axiom.om.OMAttribute: java.lang.String getAttributeValue()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r13);

        goto label3;

     label2:
        $r6 = new javax.xml.namespace.QName;

        $r7 = interfaceinvoke r4.<org.apache.axiom.om.OMAttribute: org.apache.axiom.om.OMNamespace getNamespace()>();

        $r8 = interfaceinvoke $r7.<org.apache.axiom.om.OMNamespace: java.lang.String getNamespaceURI()>();

        $r9 = interfaceinvoke r4.<org.apache.axiom.om.OMAttribute: java.lang.String getLocalName()>();

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r8, $r9);

        $r10 = interfaceinvoke r4.<org.apache.axiom.om.OMAttribute: java.lang.String getAttributeValue()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r10);

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public java.util.Iterator getChildren(org.apache.axiom.om.OMElement)
    {
        org.apache.axiom.om.OMElement r0;
        org.apache.neethi.builders.converters.AbstractOMConverter r2;
        java.util.Iterator $r1;

        r2 := @this: org.apache.neethi.builders.converters.AbstractOMConverter;

        r0 := @parameter0: org.apache.axiom.om.OMElement;

        $r1 = interfaceinvoke r0.<org.apache.axiom.om.OMElement: java.util.Iterator getChildElements()>();

        return $r1;
    }
}
