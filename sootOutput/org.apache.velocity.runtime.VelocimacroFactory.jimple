public class org.apache.velocity.runtime.VelocimacroFactory extends java.lang.Object
{
    private final org.apache.velocity.runtime.RuntimeServices rsvc;
    private final org.apache.velocity.runtime.log.LogDisplayWrapper log;
    private org.apache.velocity.runtime.VelocimacroManager vmManager;
    private boolean replaceAllowed;
    private boolean addNewAllowed;
    private boolean templateLocal;
    private boolean autoReloadLibrary;
    private java.util.List macroLibVec;
    private java.util.Map libModMap;

    public void <init>(org.apache.velocity.runtime.RuntimeServices)
    {
        org.apache.velocity.runtime.RuntimeServices r1;
        org.apache.velocity.runtime.log.Log $r3;
        org.apache.velocity.runtime.VelocimacroFactory r0;
        org.apache.velocity.runtime.log.LogDisplayWrapper $r2;
        java.util.HashMap $r4;
        org.apache.velocity.runtime.VelocimacroManager $r5;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager> = null;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean replaceAllowed> = 0;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean addNewAllowed> = 1;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean templateLocal> = 0;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean autoReloadLibrary> = 0;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec> = null;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        $r2 = new org.apache.velocity.runtime.log.LogDisplayWrapper;

        $r3 = interfaceinvoke r1.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        $z0 = interfaceinvoke r1.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("velocimacro.messages.on", 1);

        specialinvoke $r2.<org.apache.velocity.runtime.log.LogDisplayWrapper: void <init>(org.apache.velocity.runtime.log.Log,java.lang.String,boolean)>($r3, "Velocimacro : ", $z0);

        r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log> = $r2;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.Map libModMap> = $r4;

        $r5 = new org.apache.velocity.runtime.VelocimacroManager;

        specialinvoke $r5.<org.apache.velocity.runtime.VelocimacroManager: void <init>(org.apache.velocity.runtime.RuntimeServices)>(r1);

        r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager> = $r5;

        return;
    }

    public void initVelocimacro()
    {
        java.util.Vector $r37;
        java.util.Map $r33;
        org.apache.velocity.exception.VelocityException $r50;
        org.apache.velocity.runtime.log.LogDisplayWrapper $r1, $r6, $r8, $r11, $r14, $r15, $r16, $r17, $r18, $r19, $r26, $r34, $r39, $r42, $r49;
        java.lang.Exception $r44;
        org.apache.velocity.runtime.VelocimacroManager $r2, $r9, $r12, $r24, $r35;
        java.lang.Throwable $r43;
        long $l0;
        java.util.ArrayList $r20;
        org.apache.velocity.Template $r31;
        java.lang.StringBuffer $r25, $r27, $r28, $r45, $r46, $r47;
        java.lang.String r23, $r29, $r41, $r48;
        org.apache.velocity.runtime.VelocimacroFactory$Twonk $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.List $r21, $r36, $r38, $r52;
        org.apache.velocity.runtime.VelocimacroFactory r0;
        org.apache.velocity.runtime.RuntimeServices $r3, $r5, $r7, $r10, $r13, $r30, $r40;
        int i1, $i2;
        java.lang.Object $r4, $r22, r51;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        entermonitor r0;

     label01:
        $r1 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.LogDisplayWrapper: void trace(java.lang.Object)>("initialization starting.");

        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean setReplacementPermission(boolean)>(1);

        $r2 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        virtualinvoke $r2.<org.apache.velocity.runtime.VelocimacroManager: void setNamespaceUsage(boolean)>(0);

        $r3 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r4 = interfaceinvoke $r3.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getProperty(java.lang.String)>("velocimacro.library");

        r51 = $r4;

        if $r4 != null goto label03;

        $r39 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r39.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("\"velocimacro.library\" is not set.  Trying default library: VM_global_library.vm");

        $r40 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r41 = interfaceinvoke $r40.<org.apache.velocity.runtime.RuntimeServices: java.lang.String getLoaderNameForResource(java.lang.String)>("VM_global_library.vm");

        if $r41 == null goto label02;

        r51 = "VM_global_library.vm";

        goto label03;

     label02:
        $r42 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r42.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("Default library not found.");

     label03:
        if r51 == null goto label12;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec> = $r20;

        $z7 = r51 instanceof java.util.Vector;

        if $z7 == 0 goto label04;

        $r38 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec>;

        $r37 = (java.util.Vector) r51;

        interfaceinvoke $r38.<java.util.List: boolean addAll(java.util.Collection)>($r37);

        goto label05;

     label04:
        $z8 = r51 instanceof java.lang.String;

        if $z8 == 0 goto label05;

        $r36 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec>;

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>(r51);

     label05:
        i1 = 0;

        $r52 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec>;

        $i2 = interfaceinvoke $r52.<java.util.List: int size()>();

     label06:
        if i1 >= $i2 goto label12;

        $r21 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i1);

        r23 = (java.lang.String) $r22;

        $z9 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r23);

        if $z9 == 0 goto label11;

        $r24 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        virtualinvoke $r24.<org.apache.velocity.runtime.VelocimacroManager: void setRegisterFromLib(boolean)>(1);

        $r26 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("adding VMs from VM library : ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r26.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>($r29);

     label07:
        $r30 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r31 = interfaceinvoke $r30.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.Template getTemplate(java.lang.String)>(r23);

        $r32 = new org.apache.velocity.runtime.VelocimacroFactory$Twonk;

        specialinvoke $r32.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: void <init>(org.apache.velocity.runtime.VelocimacroFactory$1)>(null);

        $r32.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: org.apache.velocity.Template template> = $r31;

        $l0 = virtualinvoke $r31.<org.apache.velocity.Template: long getLastModified()>();

        $r32.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: long modificationTime> = $l0;

        $r33 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.Map libModMap>;

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, $r32);

     label08:
        goto label10;

     label09:
        $r44 := @caughtexception;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Velocimacro : Error using VM library : ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        $r49 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r49.<org.apache.velocity.runtime.log.LogDisplayWrapper: void error(boolean,java.lang.Object,java.lang.Throwable)>(1, $r48, $r44);

        $r50 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r50.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r48, $r44);

        throw $r50;

     label10:
        $r34 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r34.<org.apache.velocity.runtime.log.LogDisplayWrapper: void trace(java.lang.Object)>("VM library registration complete.");

        $r35 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        virtualinvoke $r35.<org.apache.velocity.runtime.VelocimacroManager: void setRegisterFromLib(boolean)>(0);

     label11:
        i1 = i1 + 1;

        goto label06;

     label12:
        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean setAddMacroPermission(boolean)>(1);

        $r5 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z0 = interfaceinvoke $r5.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("velocimacro.permissions.allow.inline", 1);

        if $z0 != 0 goto label13;

        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean setAddMacroPermission(boolean)>(0);

        $r19 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r19.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("allowInline = false : VMs can NOT be defined inline in templates");

        goto label14;

     label13:
        $r6 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r6.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("allowInline = true : VMs can be defined inline in templates");

     label14:
        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean setReplacementPermission(boolean)>(0);

        $r7 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z1 = interfaceinvoke $r7.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("velocimacro.permissions.allow.inline.to.replace.global", 0);

        if $z1 == 0 goto label15;

        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean setReplacementPermission(boolean)>(1);

        $r18 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r18.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("allowInlineToOverride = true : VMs defined inline may replace previous VM definitions");

        goto label16;

     label15:
        $r8 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r8.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("allowInlineToOverride = false : VMs defined inline may NOT replace previous VM definitions");

     label16:
        $r9 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        virtualinvoke $r9.<org.apache.velocity.runtime.VelocimacroManager: void setNamespaceUsage(boolean)>(1);

        $r10 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z2 = interfaceinvoke $r10.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("velocimacro.permissions.allow.inline.local.scope", 0);

        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: void setTemplateLocalInline(boolean)>($z2);

        $z3 = specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean getTemplateLocalInline()>();

        if $z3 == 0 goto label17;

        $r17 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r17.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("allowInlineLocal = true : VMs defined inline will be local to their defining template only.");

        goto label18;

     label17:
        $r11 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r11.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("allowInlineLocal = false : VMs defined inline will be global in scope if allowed.");

     label18:
        $r12 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        $z4 = specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean getTemplateLocalInline()>();

        virtualinvoke $r12.<org.apache.velocity.runtime.VelocimacroManager: void setTemplateLocalInlineVM(boolean)>($z4);

        $r13 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z5 = interfaceinvoke $r13.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("velocimacro.library.autoreload", 0);

        specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: void setAutoload(boolean)>($z5);

        $z6 = specialinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean getAutoload()>();

        if $z6 == 0 goto label19;

        $r16 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r16.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("autoload on : VM system will automatically reload global library macros");

        goto label20;

     label19:
        $r14 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r14.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>("autoload off : VM system will not automatically reload global library macros");

     label20:
        $r15 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r15.<org.apache.velocity.runtime.log.LogDisplayWrapper: void trace(java.lang.Object)>("Velocimacro : initialization complete.");

        exitmonitor r0;

     label21:
        goto label24;

     label22:
        $r43 := @caughtexception;

        exitmonitor r0;

     label23:
        throw $r43;

     label24:
        return;

        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    public boolean addVelocimacro(java.lang.String, java.lang.String, java.lang.String[], java.lang.String)
    {
        java.lang.NullPointerException $r41;
        boolean $z0, $z1, $z2;
        org.apache.velocity.runtime.log.LogDisplayWrapper $r21, $r24, $r40;
        org.apache.velocity.runtime.VelocimacroFactory r6;
        org.apache.velocity.runtime.parser.node.SimpleNode $r19;
        org.apache.velocity.runtime.VelocimacroManager $r20;
        java.lang.Throwable $r26;
        java.lang.String[] r2;
        org.apache.velocity.runtime.RuntimeServices $r18;
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r22, $r23, $r30, $r31, $r32, $r33, $r36, $r37, $r38;
        org.apache.velocity.runtime.parser.ParseException $r27;
        java.lang.String r0, r1, r16, $r25, $r29, $r34, r35, $r39;
        java.lang.RuntimeException $r28;
        java.io.StringReader $r17;

        r6 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r16 := @parameter3: java.lang.String;

        if r0 == null goto label01;

        if r1 == null goto label01;

        if r2 == null goto label01;

        if r16 != null goto label06;

     label01:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VM \'");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' addition rejected : ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        if r0 != null goto label02;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("name");

        r35 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label02:
        if r1 != null goto label03;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("macroBody");

        r35 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label03:
        if r2 != null goto label04;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("argArray");

        r35 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label04:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sourceTemplate");

        r35 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label05:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r35);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" argument was null");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        $r40 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r40.<org.apache.velocity.runtime.log.LogDisplayWrapper: void error(java.lang.Object)>($r39);

        $r41 = new java.lang.NullPointerException;

        specialinvoke $r41.<java.lang.NullPointerException: void <init>(java.lang.String)>($r39);

        throw $r41;

     label06:
        $z0 = specialinvoke r6.<org.apache.velocity.runtime.VelocimacroFactory: boolean canAddVelocimacro(java.lang.String,java.lang.String)>(r0, r16);

        if $z0 != 0 goto label07;

        return 0;

     label07:
        entermonitor r6;

     label08:
        $r18 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r17 = new java.io.StringReader;

        specialinvoke $r17.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r19 = interfaceinvoke $r18.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader,java.lang.String)>($r17, r16);

        $r20 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        $z1 = r6.<org.apache.velocity.runtime.VelocimacroFactory: boolean replaceAllowed>;

        virtualinvoke $r20.<org.apache.velocity.runtime.VelocimacroManager: boolean addVM(java.lang.String,org.apache.velocity.runtime.parser.node.Node,java.lang.String[],java.lang.String,boolean)>(r0, $r19, r2, r16, $z1);

     label09:
        goto label11;

     label10:
        $r27 := @caughtexception;

        $r28 = new java.lang.RuntimeException;

        $r29 = virtualinvoke $r27.<org.apache.velocity.runtime.parser.ParseException: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label11:
        exitmonitor r6;

     label12:
        goto label15;

     label13:
        $r26 := @caughtexception;

        exitmonitor r6;

     label14:
        throw $r26;

     label15:
        $r21 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $z2 = virtualinvoke $r21.<org.apache.velocity.runtime.log.LogDisplayWrapper: boolean isDebugEnabled()>();

        if $z2 == 0 goto label16;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>(java.lang.String)>("added ");

        staticinvoke <org.apache.velocity.runtime.directive.Macro: java.lang.StringBuffer macroToString(java.lang.StringBuffer,java.lang.String[])>($r22, r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : source = ");

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r24 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $r25 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r24.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>($r25);

     label16:
        return 1;

        catch org.apache.velocity.runtime.parser.ParseException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean addVelocimacro(java.lang.String, org.apache.velocity.runtime.parser.node.Node, java.lang.String[], java.lang.String)
    {
        java.lang.NullPointerException $r38;
        boolean $z0, $z1, $z2;
        org.apache.velocity.runtime.log.LogDisplayWrapper $r18, $r20, $r37;
        org.apache.velocity.runtime.VelocimacroFactory r6;
        org.apache.velocity.runtime.VelocimacroManager $r17;
        java.lang.Throwable $r26;
        java.lang.String[] r2;
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r19, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r33, $r34, $r35;
        java.lang.String r0, r16, $r25, $r31, r32, $r36;
        org.apache.velocity.runtime.parser.node.Node r1;

        r6 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.velocity.runtime.parser.node.Node;

        r2 := @parameter2: java.lang.String[];

        r16 := @parameter3: java.lang.String;

        if r0 == null goto label01;

        if r1 == null goto label01;

        if r2 == null goto label01;

        if r16 != null goto label06;

     label01:
        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VM \'");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' addition rejected : ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        if r0 != null goto label02;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("name");

        r32 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label02:
        if r1 != null goto label03;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("macroBody");

        r32 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label03:
        if r2 != null goto label04;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("argArray");

        r32 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label05;

     label04:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sourceTemplate");

        r32 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label05:
        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r32);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" argument was null");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r37.<org.apache.velocity.runtime.log.LogDisplayWrapper: void error(java.lang.Object)>($r36);

        $r38 = new java.lang.NullPointerException;

        specialinvoke $r38.<java.lang.NullPointerException: void <init>(java.lang.String)>($r36);

        throw $r38;

     label06:
        $z0 = specialinvoke r6.<org.apache.velocity.runtime.VelocimacroFactory: boolean canAddVelocimacro(java.lang.String,java.lang.String)>(r0, r16);

        if $z0 != 0 goto label07;

        return 0;

     label07:
        entermonitor r6;

     label08:
        $r17 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        $z1 = r6.<org.apache.velocity.runtime.VelocimacroFactory: boolean replaceAllowed>;

        virtualinvoke $r17.<org.apache.velocity.runtime.VelocimacroManager: boolean addVM(java.lang.String,org.apache.velocity.runtime.parser.node.Node,java.lang.String[],java.lang.String,boolean)>(r0, r1, r2, r16, $z1);

        exitmonitor r6;

     label09:
        goto label12;

     label10:
        $r26 := @caughtexception;

        exitmonitor r6;

     label11:
        throw $r26;

     label12:
        $r18 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $z2 = virtualinvoke $r18.<org.apache.velocity.runtime.log.LogDisplayWrapper: boolean isDebugEnabled()>();

        if $z2 == 0 goto label13;

        $r20 = r6.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("added VM ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": source=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r20.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>($r25);

     label13:
        return 1;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private synchronized boolean canAddVelocimacro(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r4, $r6, $r7, $r8, $r10, $r12, $r13, $r14;
        java.lang.String r1, r2, $r9, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.velocity.runtime.log.LogDisplayWrapper $r3, $r5, $r11;
        java.util.List $r16, $r17;
        org.apache.velocity.runtime.VelocimacroFactory r0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean autoReloadLibrary>;

        if $z0 == 0 goto label1;

        $r16 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec>;

        if $r16 == null goto label1;

        $r17 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.List macroLibVec>;

        $z5 = interfaceinvoke $r17.<java.util.List: boolean contains(java.lang.Object)>(r2);

        if $z5 == 0 goto label1;

        return 1;

     label1:
        $z6 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean addNewAllowed>;

        if $z6 != 0 goto label2;

        $r11 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VM addition rejected : ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : inline VMs not allowed.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.velocity.runtime.log.LogDisplayWrapper: void warn(java.lang.Object)>($r15);

        return 0;

     label2:
        $z1 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean templateLocal>;

        if $z1 != 0 goto label4;

        $z2 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean replaceAllowed>;

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean isVelocimacro(java.lang.String,java.lang.String)>(r1, r2);

        if $z3 == 0 goto label4;

        $r3 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $z4 = virtualinvoke $r3.<org.apache.velocity.runtime.log.LogDisplayWrapper: boolean isDebugEnabled()>();

        if $z4 == 0 goto label3;

        $r5 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VM addition rejected : ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : inline not allowed to replace existing VM");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>($r9);

     label3:
        return 0;

     label4:
        return 1;
    }

    public boolean isVelocimacro(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.directive.VelocimacroProxy $r4;
        org.apache.velocity.runtime.VelocimacroFactory r0;
        java.lang.String r1, r2;
        org.apache.velocity.runtime.VelocimacroManager $r3;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        $r4 = virtualinvoke $r3.<org.apache.velocity.runtime.VelocimacroManager: org.apache.velocity.runtime.directive.VelocimacroProxy get(java.lang.String,java.lang.String)>(r1, r2);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        org.apache.velocity.runtime.directive.Directive $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null);

        return $r3;
    }

    public org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String, java.lang.String, java.lang.String)
    {
        byte $b2;
        java.util.Map $r8;
        org.apache.velocity.exception.VelocityException $r32;
        boolean $z0;
        org.apache.velocity.runtime.log.LogDisplayWrapper $r13, $r25;
        java.lang.Exception $r20;
        org.apache.velocity.runtime.VelocimacroFactory r0;
        org.apache.velocity.runtime.VelocimacroManager $r4, $r6, $r10;
        java.lang.Throwable $r19;
        long l0, $l1, $l3;
        org.apache.velocity.Template $r18, r29;
        org.apache.velocity.runtime.RuntimeServices $r17;
        org.apache.velocity.runtime.resource.loader.ResourceLoader $r11;
        java.lang.StringBuffer $r14, $r15, $r22, $r23, $r30, $r31;
        int $i4;
        java.lang.String r1, r2, r3, $r7, $r16, $r24;
        org.apache.velocity.runtime.directive.VelocimacroProxy $r5, r27;
        org.apache.velocity.runtime.VelocimacroFactory$Twonk r28;
        java.lang.Object $r9;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        $r5 = virtualinvoke $r4.<org.apache.velocity.runtime.VelocimacroManager: org.apache.velocity.runtime.directive.VelocimacroProxy get(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        r27 = $r5;

        if $r5 == null goto label10;

        $z0 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean autoReloadLibrary>;

        if $z0 == 0 goto label10;

        entermonitor r0;

     label01:
        $r6 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        $r7 = virtualinvoke $r6.<org.apache.velocity.runtime.VelocimacroManager: java.lang.String getLibraryName(java.lang.String,java.lang.String)>(r1, r2);

        if $r7 == null goto label06;

     label02:
        $r8 = r0.<org.apache.velocity.runtime.VelocimacroFactory: java.util.Map libModMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r28 = (org.apache.velocity.runtime.VelocimacroFactory$Twonk) $r9;

        if r28 == null goto label03;

        r29 = r28.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: org.apache.velocity.Template template>;

        l0 = r28.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: long modificationTime>;

        $r11 = virtualinvoke r29.<org.apache.velocity.Template: org.apache.velocity.runtime.resource.loader.ResourceLoader getResourceLoader()>();

        $l1 = virtualinvoke $r11.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long getLastModified(org.apache.velocity.runtime.resource.Resource)>(r29);

        $b2 = $l1 cmp l0;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label03;

        $r13 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("auto-reloading VMs from VM library : ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<org.apache.velocity.runtime.log.LogDisplayWrapper: void debug(java.lang.Object)>($r16);

        r28.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: long modificationTime> = $l1;

        $r17 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r18 = interfaceinvoke $r17.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.Template getTemplate(java.lang.String)>($r7);

        r28.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: org.apache.velocity.Template template> = $r18;

        $l3 = virtualinvoke $r18.<org.apache.velocity.Template: long getLastModified()>();

        r28.<org.apache.velocity.runtime.VelocimacroFactory$Twonk: long modificationTime> = $l3;

     label03:
        goto label05;

     label04:
        $r20 := @caughtexception;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Velocimacro : Error using VM library : ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.log.LogDisplayWrapper log>;

        virtualinvoke $r25.<org.apache.velocity.runtime.log.LogDisplayWrapper: void error(boolean,java.lang.Object,java.lang.Throwable)>(1, $r24, $r20);

        $r32 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r32.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r20);

        throw $r32;

     label05:
        $r10 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        r27 = virtualinvoke $r10.<org.apache.velocity.runtime.VelocimacroManager: org.apache.velocity.runtime.directive.VelocimacroProxy get(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label06:
        exitmonitor r0;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        exitmonitor r0;

     label09:
        throw $r19;

     label10:
        return r27;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean dumpVMNamespace(java.lang.String)
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        java.lang.String r1;
        org.apache.velocity.runtime.VelocimacroManager $r2;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.VelocimacroManager: boolean dumpNamespace(java.lang.String)>(r1);

        return $z0;
    }

    private void setTemplateLocalInline(boolean)
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        z0 := @parameter0: boolean;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean templateLocal> = z0;

        return;
    }

    private boolean getTemplateLocalInline()
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        $z0 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean templateLocal>;

        return $z0;
    }

    private boolean setAddMacroPermission(boolean)
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        boolean z0, z1;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        z1 := @parameter0: boolean;

        z0 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean addNewAllowed>;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean addNewAllowed> = z1;

        return z0;
    }

    private boolean setReplacementPermission(boolean)
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        org.apache.velocity.runtime.VelocimacroManager $r1;
        boolean z0, z1;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        z1 := @parameter0: boolean;

        z0 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean replaceAllowed>;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean replaceAllowed> = z1;

        $r1 = r0.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.VelocimacroManager vmManager>;

        virtualinvoke $r1.<org.apache.velocity.runtime.VelocimacroManager: void setInlineReplacesGlobal(boolean)>(z1);

        return z0;
    }

    private void setAutoload(boolean)
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        z0 := @parameter0: boolean;

        r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean autoReloadLibrary> = z0;

        return;
    }

    private boolean getAutoload()
    {
        org.apache.velocity.runtime.VelocimacroFactory r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.VelocimacroFactory;

        $z0 = r0.<org.apache.velocity.runtime.VelocimacroFactory: boolean autoReloadLibrary>;

        return $z0;
    }
}
