class org.apache.lucene.index.BufferedDeletes extends java.lang.Object
{
    static final int BYTES_PER_DEL_TERM;
    static final int BYTES_PER_DEL_DOCID;
    static final int BYTES_PER_DEL_QUERY;
    final java.util.concurrent.atomic.AtomicInteger numTermDeletes;
    final java.util.Map terms;
    final java.util.Map queries;
    final java.util.List docIDs;
    public static final java.lang.Integer MAX_INT;
    final java.util.concurrent.atomic.AtomicLong bytesUsed;
    private static final boolean VERBOSE_DELETES;
    long gen;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.lucene.index.BufferedDeletes r0;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        specialinvoke r0.<org.apache.lucene.index.BufferedDeletes: void <init>(java.util.concurrent.atomic.AtomicLong)>($r1);

        return;
    }

    void <init>(java.util.concurrent.atomic.AtomicLong)
    {
        org.apache.lucene.index.BufferedDeletes r0;
        java.util.HashMap $r2, $r3;
        java.lang.AssertionError $r6;
        java.util.ArrayList $r4;
        java.util.concurrent.atomic.AtomicLong r5;
        java.util.concurrent.atomic.AtomicInteger $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        r5 := @parameter0: java.util.concurrent.atomic.AtomicLong;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs> = $r4;

        $z0 = <org.apache.lucene.index.BufferedDeletes: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r5 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed> = r5;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.BufferedDeletes r2;
        byte $b5;
        java.util.concurrent.atomic.AtomicInteger $r5, $r29;
        java.util.Map $r6, $r23, $r32;
        java.util.List $r7, $r17;
        java.lang.StringBuilder $r0, $r1, $r3, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r33, $r34;
        long $l0, $l4, $l6;
        int $i1, $i2, $i3, $i7, $i8, $i9, $i10;
        java.lang.String $r4, r35;
        java.util.concurrent.atomic.AtomicLong $r8, $r12;

        r2 := @this: org.apache.lucene.index.BufferedDeletes;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gen=");

        $l0 = r2.<org.apache.lucene.index.BufferedDeletes: long gen>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r35 = $r4;

        $r5 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes>;

        $i1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i1 == 0 goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r29 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes>;

        $i9 = virtualinvoke $r29.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted terms (unique count=");

        $r32 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $i10 = interfaceinvoke $r32.<java.util.Map: int size()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r6 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $i2 = interfaceinvoke $r6.<java.util.Map: int size()>();

        if $i2 == 0 goto label2;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $i8 = interfaceinvoke $r23.<java.util.Map: int size()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted queries");

        r35 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r7 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i3 == 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $i7 = interfaceinvoke $r17.<java.util.List: int size()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted docIDs");

        r35 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r8 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l4 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytesUsed=");

        $r12 = r2.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l6 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        r35 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r35;
    }

    public void addQuery(org.apache.lucene.search.Query, int)
    {
        org.apache.lucene.search.Query r1;
        org.apache.lucene.index.BufferedDeletes r0;
        long $l2;
        java.lang.Integer $r3, r5;
        java.util.concurrent.atomic.AtomicLong $r6;
        java.util.Map $r2;
        int i0, $i1;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        r1 := @parameter0: org.apache.lucene.search.Query;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        r5 = (java.lang.Integer) $r4;

        if r5 != null goto label1;

        $r6 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $i1 = <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_QUERY>;

        $l2 = (long) $i1;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l2);

     label1:
        return;
    }

    public void addDocID(int)
    {
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.BufferedDeletes r0;
        java.util.List $r1;
        int i0, $i1;
        long $l2;
        java.lang.Integer $r2;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $i1 = <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_DOCID>;

        $l2 = (long) $i1;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l2);

        return;
    }

    public void addTerm(org.apache.lucene.index.Term, int)
    {
        org.apache.lucene.index.BufferedDeletes r0;
        org.apache.lucene.index.Term r1;
        long $l7;
        java.lang.Integer r4, $r6;
        java.util.concurrent.atomic.AtomicInteger $r7;
        java.util.Map $r2, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.lang.String $r10;
        org.apache.lucene.util.BytesRef $r8;
        java.util.concurrent.atomic.AtomicLong $r9;
        java.lang.Object $r3;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        r1 := @parameter0: org.apache.lucene.index.Term;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i8 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if i0 >= $i8 goto label1;

        return;

     label1:
        $r5 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r7 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        if r4 != null goto label2;

        $r9 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $i2 = <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_TERM>;

        $r8 = r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $i1 = $r8.<org.apache.lucene.util.BytesRef: int length>;

        $i3 = $i2 + $i1;

        $r10 = virtualinvoke r1.<org.apache.lucene.index.Term: java.lang.String field()>();

        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i5 = 2 * $i4;

        $i6 = $i3 + $i5;

        $l7 = (long) $i6;

        virtualinvoke $r9.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l7);

     label2:
        return;
    }

    void clear()
    {
        java.util.concurrent.atomic.AtomicLong $r5;
        org.apache.lucene.index.BufferedDeletes r0;
        java.util.List $r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r5 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);

        return;
    }

    void clearDocIDs()
    {
        org.apache.lucene.index.BufferedDeletes r0;
        long $l4;
        java.util.concurrent.atomic.AtomicLong $r2;
        java.util.List $r1, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        $r2 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = neg $i0;

        $i1 = <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_DOCID>;

        $i3 = $i2 * $i1;

        $l4 = (long) $i3;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l4);

        $r3 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    boolean any()
    {
        org.apache.lucene.index.BufferedDeletes r0;
        java.util.List $r2;
        java.util.Map $r1, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.BufferedDeletes;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 > 0 goto label1;

        $r2 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 > 0 goto label1;

        $r3 = r0.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $i2 = interfaceinvoke $r3.<java.util.Map: int size()>();

        if $i2 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Integer $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1;
        java.lang.Class $r0;

        <org.apache.lucene.index.BufferedDeletes: boolean VERBOSE_DELETES> = 0;

        $r0 = class "Lorg/apache/lucene/index/BufferedDeletes;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.BufferedDeletes: boolean $assertionsDisabled> = $z1;

        $i0 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i3 = 9 * $i0;

        $i1 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_HEADER>;

        $i2 = 7 * $i1;

        $i4 = $i3 + $i2;

        $i5 = $i4 + 40;

        <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_TERM> = $i5;

        $i6 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i8 = 2 * $i6;

        $i7 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_HEADER>;

        $i9 = $i8 + $i7;

        $i10 = $i9 + 4;

        <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_DOCID> = $i10;

        $i11 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i14 = 5 * $i11;

        $i12 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_HEADER>;

        $i13 = 2 * $i12;

        $i15 = $i14 + $i13;

        $i16 = $i15 + 8;

        $i17 = $i16 + 24;

        <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_QUERY> = $i17;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        <org.apache.lucene.index.BufferedDeletes: java.lang.Integer MAX_INT> = $r1;

        return;
    }
}
