public class org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp extends org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup
{
    public static final java.lang.String NAME_APPROVED;
    public static final java.lang.String NAME_EXPERIMENTAL;
    public static final java.lang.String NAME_NOT_APPROVED;
    public static final java.lang.String NAME_AS_IS;
    public static final java.lang.String NAME_EXPIRED;
    public static final java.lang.String NAME_NOT_FOR_PUBLIC_RELEASE;
    public static final java.lang.String NAME_FOR_PUBLIC_RELEASE;
    public static final java.lang.String NAME_DRAFT;
    public static final java.lang.String NAME_FOR_COMMENT;
    public static final java.lang.String NAME_TOP_SECRET;
    public static final java.lang.String NAME_DEPARTMENTAL;
    public static final java.lang.String NAME_CONFIDENTIAL;
    public static final java.lang.String NAME_FINAL;
    public static final java.lang.String NAME_SOLD;
    public static final java.lang.String SUB_TYPE;

    public void <init>()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2, $r3;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp r0;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup: void <init>()>();

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("Stamp");

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, $r3);

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp r0;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r1);

        return;
    }

    public void setName(java.lang.String)
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp r0;
        java.lang.String r2;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r2);

        return;
    }

    public java.lang.String getName()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp r0;
        java.lang.String $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, "Draft");

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String SUB_TYPE> = "Stamp";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_SOLD> = "Sold";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_FINAL> = "Final";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_CONFIDENTIAL> = "Confidential";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_DEPARTMENTAL> = "Departmental";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_TOP_SECRET> = "TopSecret";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_FOR_COMMENT> = "ForComment";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_DRAFT> = "Draft";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_FOR_PUBLIC_RELEASE> = "ForPublicRelease";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_NOT_FOR_PUBLIC_RELEASE> = "NotForPublicRelease";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_EXPIRED> = "Expired";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_AS_IS> = "AsIs";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_NOT_APPROVED> = "NotApproved";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_EXPERIMENTAL> = "Experimental";

        <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationRubberStamp: java.lang.String NAME_APPROVED> = "Approved";

        return;
    }
}
