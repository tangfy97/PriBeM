final class com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1 extends com.hp.hpl.jena.enhanced.Implementation
{

    void <init>()
    {
        com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1 r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1;

        specialinvoke r0.<com.hp.hpl.jena.enhanced.Implementation: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.enhanced.EnhNode wrap(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl $r6;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r4;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.enhanced.EnhGraph r1;
        com.hp.hpl.jena.graph.Triple $r3;
        com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1 r0;
        com.hp.hpl.jena.rdf.model.DoesNotReifyException $r7;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1: com.hp.hpl.jena.graph.Triple getTriple(com.hp.hpl.jena.enhanced.EnhGraph,com.hp.hpl.jena.graph.Node)>(r1, r2);

        if $r3 != null goto label1;

        $r7 = new com.hp.hpl.jena.rdf.model.DoesNotReifyException;

        specialinvoke $r7.<com.hp.hpl.jena.rdf.model.DoesNotReifyException: void <init>(com.hp.hpl.jena.graph.Node)>(r2);

        throw $r7;

     label1:
        $r4 = (com.hp.hpl.jena.rdf.model.impl.ModelCom) r1;

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.StatementImpl: com.hp.hpl.jena.rdf.model.Statement toStatement(com.hp.hpl.jena.graph.Triple,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r3, $r4);

        $r6 = new com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl;

        specialinvoke $r6.<com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl: void <init>(com.hp.hpl.jena.enhanced.EnhGraph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.Statement)>(r1, r2, $r5);

        return $r6;
    }

    public boolean canWrap(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1 r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.enhanced.EnhGraph r1;
        com.hp.hpl.jena.graph.Triple $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1: com.hp.hpl.jena.graph.Triple getTriple(com.hp.hpl.jena.enhanced.EnhGraph,com.hp.hpl.jena.graph.Node)>(r1, r2);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private com.hp.hpl.jena.graph.Triple getTriple(com.hp.hpl.jena.enhanced.EnhGraph, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1 r4;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        com.hp.hpl.jena.graph.Triple $r3;

        r4 := @this: com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl$1;

        r0 := @parameter0: com.hp.hpl.jena.enhanced.EnhGraph;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifierStd: com.hp.hpl.jena.graph.Triple getTriple(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node)>($r1, r2);

        return $r3;
    }
}
