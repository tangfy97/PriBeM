public class org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject extends org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject
{
    public static final java.lang.String OWNER_LAYOUT;
    private static final java.lang.String PLACEMENT;
    private static final java.lang.String WRITING_MODE;
    private static final java.lang.String BACKGROUND_COLOR;
    private static final java.lang.String BORDER_COLOR;
    private static final java.lang.String BORDER_STYLE;
    private static final java.lang.String BORDER_THICKNESS;
    private static final java.lang.String PADDING;
    private static final java.lang.String COLOR;
    private static final java.lang.String SPACE_BEFORE;
    private static final java.lang.String SPACE_AFTER;
    private static final java.lang.String START_INDENT;
    private static final java.lang.String END_INDENT;
    private static final java.lang.String TEXT_INDENT;
    private static final java.lang.String TEXT_ALIGN;
    private static final java.lang.String BBOX;
    private static final java.lang.String WIDTH;
    private static final java.lang.String HEIGHT;
    private static final java.lang.String BLOCK_ALIGN;
    private static final java.lang.String INLINE_ALIGN;
    private static final java.lang.String T_BORDER_STYLE;
    private static final java.lang.String T_PADDING;
    private static final java.lang.String BASELINE_SHIFT;
    private static final java.lang.String LINE_HEIGHT;
    private static final java.lang.String TEXT_DECORATION_COLOR;
    private static final java.lang.String TEXT_DECORATION_THICKNESS;
    private static final java.lang.String TEXT_DECORATION_TYPE;
    private static final java.lang.String RUBY_ALIGN;
    private static final java.lang.String RUBY_POSITION;
    private static final java.lang.String GLYPH_ORIENTATION_VERTICAL;
    private static final java.lang.String COLUMN_COUNT;
    private static final java.lang.String COLUMN_GAP;
    private static final java.lang.String COLUMN_WIDTHS;
    public static final java.lang.String PLACEMENT_BLOCK;
    public static final java.lang.String PLACEMENT_INLINE;
    public static final java.lang.String PLACEMENT_BEFORE;
    public static final java.lang.String PLACEMENT_START;
    public static final java.lang.String PLACEMENT_END;
    public static final java.lang.String WRITING_MODE_LRTB;
    public static final java.lang.String WRITING_MODE_RLTB;
    public static final java.lang.String WRITING_MODE_TBRL;
    public static final java.lang.String BORDER_STYLE_NONE;
    public static final java.lang.String BORDER_STYLE_HIDDEN;
    public static final java.lang.String BORDER_STYLE_DOTTED;
    public static final java.lang.String BORDER_STYLE_DASHED;
    public static final java.lang.String BORDER_STYLE_SOLID;
    public static final java.lang.String BORDER_STYLE_DOUBLE;
    public static final java.lang.String BORDER_STYLE_GROOVE;
    public static final java.lang.String BORDER_STYLE_RIDGE;
    public static final java.lang.String BORDER_STYLE_INSET;
    public static final java.lang.String BORDER_STYLE_OUTSET;
    public static final java.lang.String TEXT_ALIGN_START;
    public static final java.lang.String TEXT_ALIGN_CENTER;
    public static final java.lang.String TEXT_ALIGN_END;
    public static final java.lang.String TEXT_ALIGN_JUSTIFY;
    public static final java.lang.String WIDTH_AUTO;
    public static final java.lang.String HEIGHT_AUTO;
    public static final java.lang.String BLOCK_ALIGN_BEFORE;
    public static final java.lang.String BLOCK_ALIGN_MIDDLE;
    public static final java.lang.String BLOCK_ALIGN_AFTER;
    public static final java.lang.String BLOCK_ALIGN_JUSTIFY;
    public static final java.lang.String INLINE_ALIGN_START;
    public static final java.lang.String INLINE_ALIGN_CENTER;
    public static final java.lang.String INLINE_ALIGN_END;
    public static final java.lang.String LINE_HEIGHT_NORMAL;
    public static final java.lang.String LINE_HEIGHT_AUTO;
    public static final java.lang.String TEXT_DECORATION_TYPE_NONE;
    public static final java.lang.String TEXT_DECORATION_TYPE_UNDERLINE;
    public static final java.lang.String TEXT_DECORATION_TYPE_OVERLINE;
    public static final java.lang.String TEXT_DECORATION_TYPE_LINE_THROUGH;
    public static final java.lang.String RUBY_ALIGN_START;
    public static final java.lang.String RUBY_ALIGN_CENTER;
    public static final java.lang.String RUBY_ALIGN_END;
    public static final java.lang.String RUBY_ALIGN_JUSTIFY;
    public static final java.lang.String RUBY_ALIGN_DISTRIBUTE;
    public static final java.lang.String RUBY_POSITION_BEFORE;
    public static final java.lang.String RUBY_POSITION_AFTER;
    public static final java.lang.String RUBY_POSITION_WARICHU;
    public static final java.lang.String RUBY_POSITION_INLINE;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_AUTO;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREES;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREES;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREES;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_90_DEGREES;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_180_DEGREES;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_270_DEGREES;
    public static final java.lang.String GLYPH_ORIENTATION_VERTICAL_360_DEGREES;

    public void <init>()
    {
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: void <init>()>();

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setOwner(java.lang.String)>("Layout");

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r1);

        return;
    }

    public java.lang.String getPlacement()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("Placement", "Inline");

        return $r1;
    }

    public void setPlacement(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("Placement", r1);

        return;
    }

    public java.lang.String getWritingMode()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("WritingMode", "LrTb");

        return $r1;
    }

    public void setWritingMode(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("WritingMode", r1);

        return;
    }

    public org.apache.pdfbox.pdmodel.graphics.color.PDGamma getBackgroundColor()
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor(java.lang.String)>("BackgroundColor");

        return $r1;
    }

    public void setBackgroundColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.color.PDGamma;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)>("BackgroundColor", r1);

        return;
    }

    public java.lang.Object getBorderColors()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getColorOrFourColors(java.lang.String)>("BorderColor");

        return $r1;
    }

    public void setAllBorderColors(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.color.PDGamma;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)>("BorderColor", r1);

        return;
    }

    public void setBorderColors(org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)
    {
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)>("BorderColor", r1);

        return;
    }

    public java.lang.Object getBorderStyle()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNameOrArrayOfName(java.lang.String,java.lang.String)>("BorderStyle", "None");

        return $r1;
    }

    public void setAllBorderStyles(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("BorderStyle", r1);

        return;
    }

    public void setBorderStyles(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setArrayOfName(java.lang.String,java.lang.String[])>("BorderStyle", r1);

        return;
    }

    public java.lang.Object getBorderThickness()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrArrayOfNumber(java.lang.String,float)>("BorderThickness", -1.0F);

        return $r1;
    }

    public void setAllBorderThicknesses(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("BorderThickness", f0);

        return;
    }

    public void setAllBorderThicknesses(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("BorderThickness", i0);

        return;
    }

    public void setBorderThicknesses(float[])
    {
        float[] r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: float[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setArrayOfNumber(java.lang.String,float[])>("BorderThickness", r1);

        return;
    }

    public java.lang.Object getPadding()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrArrayOfNumber(java.lang.String,float)>("Padding", 0.0F);

        return $r1;
    }

    public void setAllPaddings(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("Padding", f0);

        return;
    }

    public void setAllPaddings(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("Padding", i0);

        return;
    }

    public void setPaddings(float[])
    {
        float[] r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: float[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setArrayOfNumber(java.lang.String,float[])>("Padding", r1);

        return;
    }

    public org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor()
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor(java.lang.String)>("Color");

        return $r1;
    }

    public void setColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.color.PDGamma;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)>("Color", r1);

        return;
    }

    public float getSpaceBefore()
    {
        float $f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getNumber(java.lang.String,float)>("SpaceBefore", 0.0F);

        return $f0;
    }

    public void setSpaceBefore(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("SpaceBefore", f0);

        return;
    }

    public void setSpaceBefore(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("SpaceBefore", i0);

        return;
    }

    public float getSpaceAfter()
    {
        float $f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getNumber(java.lang.String,float)>("SpaceAfter", 0.0F);

        return $f0;
    }

    public void setSpaceAfter(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("SpaceAfter", f0);

        return;
    }

    public void setSpaceAfter(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("SpaceAfter", i0);

        return;
    }

    public float getStartIndent()
    {
        float $f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getNumber(java.lang.String,float)>("StartIndent", 0.0F);

        return $f0;
    }

    public void setStartIndent(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("StartIndent", f0);

        return;
    }

    public void setStartIndent(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("StartIndent", i0);

        return;
    }

    public float getEndIndent()
    {
        float $f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getNumber(java.lang.String,float)>("EndIndent", 0.0F);

        return $f0;
    }

    public void setEndIndent(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("EndIndent", f0);

        return;
    }

    public void setEndIndent(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("EndIndent", i0);

        return;
    }

    public float getTextIndent()
    {
        float $f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getNumber(java.lang.String,float)>("TextIndent", 0.0F);

        return $f0;
    }

    public void setTextIndent(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("TextIndent", f0);

        return;
    }

    public void setTextIndent(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("TextIndent", i0);

        return;
    }

    public java.lang.String getTextAlign()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("TextAlign", "Start");

        return $r1;
    }

    public void setTextAlign(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("TextAlign", r1);

        return;
    }

    public org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r4;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;
        org.apache.pdfbox.cos.COSArray r3;
        org.apache.pdfbox.cos.COSBase $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>("BBox");

        r3 = (org.apache.pdfbox.cos.COSArray) $r2;

        if r3 == null goto label1;

        $r4 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        specialinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(org.apache.pdfbox.cos.COSArray)>(r3);

        return $r4;

     label1:
        return null;
    }

    public void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)
    {
        org.apache.pdfbox.cos.COSDictionary $r1, $r3;
        org.apache.pdfbox.pdmodel.common.PDRectangle r4;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;
        org.apache.pdfbox.cos.COSBase $r2, $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r4 := @parameter0: org.apache.pdfbox.pdmodel.common.PDRectangle;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>("BBox");

        $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)>("BBox", r4);

        if r4 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSBase getCOSObject()>();

     label2:
        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)>($r2, $r5);

        return;
    }

    public java.lang.Object getWidth()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrName(java.lang.String,java.lang.String)>("Width", "Auto");

        return $r1;
    }

    public void setWidthAuto()
    {
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("Width", "Auto");

        return;
    }

    public void setWidth(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("Width", f0);

        return;
    }

    public void setWidth(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("Width", i0);

        return;
    }

    public java.lang.Object getHeight()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrName(java.lang.String,java.lang.String)>("Height", "Auto");

        return $r1;
    }

    public void setHeightAuto()
    {
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("Height", "Auto");

        return;
    }

    public void setHeight(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("Height", f0);

        return;
    }

    public void setHeight(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("Height", i0);

        return;
    }

    public java.lang.String getBlockAlign()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("BlockAlign", "Before");

        return $r1;
    }

    public void setBlockAlign(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("BlockAlign", r1);

        return;
    }

    public java.lang.String getInlineAlign()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("InlineAlign", "Start");

        return $r1;
    }

    public void setInlineAlign(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("InlineAlign", r1);

        return;
    }

    public java.lang.Object getTBorderStyle()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNameOrArrayOfName(java.lang.String,java.lang.String)>("TBorderStyle", "None");

        return $r1;
    }

    public void setAllTBorderStyles(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("TBorderStyle", r1);

        return;
    }

    public void setTBorderStyles(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setArrayOfName(java.lang.String,java.lang.String[])>("TBorderStyle", r1);

        return;
    }

    public java.lang.Object getTPadding()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrArrayOfNumber(java.lang.String,float)>("TPadding", 0.0F);

        return $r1;
    }

    public void setAllTPaddings(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("TPadding", f0);

        return;
    }

    public void setAllTPaddings(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("TPadding", i0);

        return;
    }

    public void setTPaddings(float[])
    {
        float[] r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: float[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setArrayOfNumber(java.lang.String,float[])>("TPadding", r1);

        return;
    }

    public float getBaselineShift()
    {
        float $f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getNumber(java.lang.String,float)>("BaselineShift", 0.0F);

        return $f0;
    }

    public void setBaselineShift(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("BaselineShift", f0);

        return;
    }

    public void setBaselineShift(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("BaselineShift", i0);

        return;
    }

    public java.lang.Object getLineHeight()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrName(java.lang.String,java.lang.String)>("LineHeight", "Normal");

        return $r1;
    }

    public void setLineHeightNormal()
    {
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("LineHeight", "Normal");

        return;
    }

    public void setLineHeightAuto()
    {
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("LineHeight", "Auto");

        return;
    }

    public void setLineHeight(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("LineHeight", f0);

        return;
    }

    public void setLineHeight(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("LineHeight", i0);

        return;
    }

    public org.apache.pdfbox.pdmodel.graphics.color.PDGamma getTextDecorationColor()
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor(java.lang.String)>("TextDecorationColor");

        return $r1;
    }

    public void setTextDecorationColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.color.PDGamma;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)>("TextDecorationColor", r1);

        return;
    }

    public float getTextDecorationThickness()
    {
        float $f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getNumber(java.lang.String)>("TextDecorationThickness");

        return $f0;
    }

    public void setTextDecorationThickness(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("TextDecorationThickness", f0);

        return;
    }

    public void setTextDecorationThickness(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("TextDecorationThickness", i0);

        return;
    }

    public java.lang.String getTextDecorationType()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("TextDecorationType", "None");

        return $r1;
    }

    public void setTextDecorationType(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("TextDecorationType", r1);

        return;
    }

    public java.lang.String getRubyAlign()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("RubyAlign", "Distribute");

        return $r1;
    }

    public void setRubyAlign(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("RubyAlign", r1);

        return;
    }

    public java.lang.String getRubyPosition()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("RubyPosition", "Before");

        return $r1;
    }

    public void setRubyPosition(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("RubyPosition", r1);

        return;
    }

    public java.lang.String getGlyphOrientationVertical()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("GlyphOrientationVertical", "Auto");

        return $r1;
    }

    public void setGlyphOrientationVertical(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("GlyphOrientationVertical", r1);

        return;
    }

    public int getColumnCount()
    {
        int $i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: int getInteger(java.lang.String,int)>("ColumnCount", 1);

        return $i0;
    }

    public void setColumnCount(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setInteger(java.lang.String,int)>("ColumnCount", i0);

        return;
    }

    public java.lang.Object getColumnGap()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrArrayOfNumber(java.lang.String,float)>("ColumnGap", -1.0F);

        return $r1;
    }

    public void setColumnGap(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("ColumnGap", f0);

        return;
    }

    public void setColumnGap(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("ColumnGap", i0);

        return;
    }

    public void setColumnGaps(float[])
    {
        float[] r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: float[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setArrayOfNumber(java.lang.String,float[])>("ColumnGap", r1);

        return;
    }

    public java.lang.Object getColumnWidths()
    {
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getNumberOrArrayOfNumber(java.lang.String,float)>("ColumnWidths", -1.0F);

        return $r1;
    }

    public void setAllColumnWidths(float)
    {
        float f0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,float)>("ColumnWidths", f0);

        return;
    }

    public void setAllColumnWidths(int)
    {
        int i0;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setNumber(java.lang.String,int)>("ColumnWidths", i0);

        return;
    }

    public void setColumnWidths(float[])
    {
        float[] r1;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r0;

        r0 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        r1 := @parameter0: float[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setArrayOfNumber(java.lang.String,float[])>("ColumnWidths", r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r33, $r45, $r47, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r87, $r89, $r91, $r93;
        float[] $r7, $r8, $r13, $r14, $r38, $r39, $r74, $r75, $r80, $r81;
        org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject r1;
        int $i0;
        java.lang.Object $r4, $r10, $r30, $r35, $r41, $r49, $r52, $r71, $r77, $r83, $r88;
        java.lang.Float $r5, $r11, $r31, $r36, $r50, $r53, $r72, $r78;
        java.lang.String $r2, $r6, $r9, $r12, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r32, $r34, $r37, $r40, $r44, $r46, $r48, $r51, $r54, $r58, $r60, $r62, $r64, $r66, $r68, $r73, $r76, $r79, $r82, $r86, $r92, $r94, $r95;
        org.apache.pdfbox.pdmodel.graphics.color.PDGamma $r29, $r70, $r90;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.String[] $r42, $r43, $r84, $r85;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r56;

        r1 := @this: org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $z0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Placement");

        if $z0 == 0 goto label01;

        $r93 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Placement=");

        $r94 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getPlacement()>();

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

     label01:
        $z1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("WritingMode");

        if $z1 == 0 goto label02;

        $r91 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", WritingMode=");

        $r92 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getWritingMode()>();

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

     label02:
        $z2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BackgroundColor");

        if $z2 == 0 goto label03;

        $r89 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BackgroundColor=");

        $r90 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.pdmodel.graphics.color.PDGamma getBackgroundColor()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r90);

     label03:
        $z3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderColor");

        if $z3 == 0 goto label04;

        $r87 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BorderColor=");

        $r88 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getBorderColors()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

     label04:
        $z4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderStyle");

        if $z4 == 0 goto label06;

        $r83 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getBorderStyle()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BorderStyle=");

        $z32 = $r83 instanceof java.lang.String[];

        if $z32 == 0 goto label05;

        $r84 = (java.lang.String[]) $r83;

        $r85 = (java.lang.String[]) $r84;

        $r86 = staticinvoke <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String arrayToString(java.lang.Object[])>($r85);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        goto label06;

     label05:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r83);

     label06:
        $z33 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderThickness");

        if $z33 == 0 goto label08;

        $r77 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getBorderThickness()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BorderThickness=");

        $z31 = $r77 instanceof float[];

        if $z31 == 0 goto label07;

        $r80 = (float[]) $r77;

        $r81 = (float[]) $r80;

        $r82 = staticinvoke <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String arrayToString(float[])>($r81);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        goto label08;

     label07:
        $r78 = (java.lang.Float) $r77;

        $r79 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r78);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

     label08:
        $z34 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Padding");

        if $z34 == 0 goto label10;

        $r71 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getPadding()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Padding=");

        $z30 = $r71 instanceof float[];

        if $z30 == 0 goto label09;

        $r74 = (float[]) $r71;

        $r75 = (float[]) $r74;

        $r76 = staticinvoke <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String arrayToString(float[])>($r75);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        goto label10;

     label09:
        $r72 = (java.lang.Float) $r71;

        $r73 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r72);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

     label10:
        $z35 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Color");

        if $z35 == 0 goto label11;

        $r69 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Color=");

        $r70 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor()>();

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

     label11:
        $z5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("SpaceBefore");

        if $z5 == 0 goto label12;

        $r67 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", SpaceBefore=");

        $f6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getSpaceBefore()>();

        $r68 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f6);

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

     label12:
        $z6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("SpaceAfter");

        if $z6 == 0 goto label13;

        $r65 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", SpaceAfter=");

        $f5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getSpaceAfter()>();

        $r66 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f5);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

     label13:
        $z7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("StartIndent");

        if $z7 == 0 goto label14;

        $r63 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", StartIndent=");

        $f4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getStartIndent()>();

        $r64 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f4);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

     label14:
        $z8 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("EndIndent");

        if $z8 == 0 goto label15;

        $r61 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", EndIndent=");

        $f3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getEndIndent()>();

        $r62 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f3);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

     label15:
        $z9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextIndent");

        if $z9 == 0 goto label16;

        $r59 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TextIndent=");

        $f2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getTextIndent()>();

        $r60 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f2);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

     label16:
        $z10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextAlign");

        if $z10 == 0 goto label17;

        $r57 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TextAlign=");

        $r58 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getTextAlign()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

     label17:
        $z11 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BBox");

        if $z11 == 0 goto label18;

        $r55 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BBox=");

        $r56 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()>();

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

     label18:
        $z12 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Width");

        if $z12 == 0 goto label20;

        $r52 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getWidth()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Width=");

        $z29 = $r52 instanceof java.lang.Float;

        if $z29 == 0 goto label19;

        $r53 = (java.lang.Float) $r52;

        $r54 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r53);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        goto label20;

     label19:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

     label20:
        $z36 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Height");

        if $z36 == 0 goto label22;

        $r49 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getHeight()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Height=");

        $z28 = $r49 instanceof java.lang.Float;

        if $z28 == 0 goto label21;

        $r50 = (java.lang.Float) $r49;

        $r51 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r50);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        goto label22;

     label21:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

     label22:
        $z37 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BlockAlign");

        if $z37 == 0 goto label23;

        $r47 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BlockAlign=");

        $r48 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getBlockAlign()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

     label23:
        $z13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("InlineAlign");

        if $z13 == 0 goto label24;

        $r45 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", InlineAlign=");

        $r46 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getInlineAlign()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

     label24:
        $z14 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TBorderStyle");

        if $z14 == 0 goto label26;

        $r41 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getTBorderStyle()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TBorderStyle=");

        $z27 = $r41 instanceof java.lang.String[];

        if $z27 == 0 goto label25;

        $r42 = (java.lang.String[]) $r41;

        $r43 = (java.lang.String[]) $r42;

        $r44 = staticinvoke <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String arrayToString(java.lang.Object[])>($r43);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        goto label26;

     label25:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

     label26:
        $z38 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TPadding");

        if $z38 == 0 goto label28;

        $r35 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getTPadding()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TPadding=");

        $z26 = $r35 instanceof float[];

        if $z26 == 0 goto label27;

        $r38 = (float[]) $r35;

        $r39 = (float[]) $r38;

        $r40 = staticinvoke <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String arrayToString(float[])>($r39);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        goto label28;

     label27:
        $r36 = (java.lang.Float) $r35;

        $r37 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r36);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

     label28:
        $z39 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BaselineShift");

        if $z39 == 0 goto label29;

        $r33 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BaselineShift=");

        $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getBaselineShift()>();

        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f1);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

     label29:
        $z15 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("LineHeight");

        if $z15 == 0 goto label31;

        $r30 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getLineHeight()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", LineHeight=");

        $z25 = $r30 instanceof java.lang.Float;

        if $z25 == 0 goto label30;

        $r31 = (java.lang.Float) $r30;

        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r31);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        goto label31;

     label30:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

     label31:
        $z40 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationColor");

        if $z40 == 0 goto label32;

        $r28 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TextDecorationColor=");

        $r29 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: org.apache.pdfbox.pdmodel.graphics.color.PDGamma getTextDecorationColor()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

     label32:
        $z16 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationThickness");

        if $z16 == 0 goto label33;

        $r26 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TextDecorationThickness=");

        $f0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: float getTextDecorationThickness()>();

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label33:
        $z17 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationType");

        if $z17 == 0 goto label34;

        $r24 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TextDecorationType=");

        $r25 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getTextDecorationType()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label34:
        $z18 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("RubyAlign");

        if $z18 == 0 goto label35;

        $r22 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RubyAlign=");

        $r23 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getRubyAlign()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label35:
        $z19 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("RubyPosition");

        if $z19 == 0 goto label36;

        $r20 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RubyPosition=");

        $r21 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getRubyPosition()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label36:
        $z20 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("GlyphOrientationVertical");

        if $z20 == 0 goto label37;

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", GlyphOrientationVertical=");

        $r19 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getGlyphOrientationVertical()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label37:
        $z21 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnCount");

        if $z21 == 0 goto label38;

        $r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ColumnCount=");

        $i0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: int getColumnCount()>();

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label38:
        $z22 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnGap");

        if $z22 == 0 goto label40;

        $r10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getColumnGap()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ColumnGap=");

        $z24 = $r10 instanceof float[];

        if $z24 == 0 goto label39;

        $r13 = (float[]) $r10;

        $r14 = (float[]) $r13;

        $r15 = staticinvoke <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String arrayToString(float[])>($r14);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label40;

     label39:
        $r11 = (java.lang.Float) $r10;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label40:
        $z41 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnWidths");

        if $z41 == 0 goto label42;

        $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.Object getColumnWidths()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ColumnWidths=");

        $z23 = $r4 instanceof float[];

        if $z23 == 0 goto label41;

        $r7 = (float[]) $r4;

        $r8 = (float[]) $r7;

        $r9 = staticinvoke <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String arrayToString(float[])>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        goto label42;

     label41:
        $r5 = (java.lang.Float) $r4;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label42:
        $r95 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r95;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_360_DEGREES> = "360";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_270_DEGREES> = "270";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_180_DEGREES> = "180";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_90_DEGREES> = "90";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREES> = "0";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_MINUS_90_DEGREES> = "-90";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_MINUS_180_DEGREES> = "-180";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL_AUTO> = "Auto";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_POSITION_INLINE> = "Inline";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_POSITION_WARICHU> = "Warichu";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_POSITION_AFTER> = "After";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_POSITION_BEFORE> = "Before";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_ALIGN_DISTRIBUTE> = "Distribute";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_ALIGN_JUSTIFY> = "Justify";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_ALIGN_END> = "End";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_ALIGN_CENTER> = "Center";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_ALIGN_START> = "Start";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_DECORATION_TYPE_LINE_THROUGH> = "LineThrough";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_DECORATION_TYPE_OVERLINE> = "Overline";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_DECORATION_TYPE_UNDERLINE> = "Underline";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_DECORATION_TYPE_NONE> = "None";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String LINE_HEIGHT_AUTO> = "Auto";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String LINE_HEIGHT_NORMAL> = "Normal";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String INLINE_ALIGN_END> = "End";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String INLINE_ALIGN_CENTER> = "Center";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String INLINE_ALIGN_START> = "Start";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BLOCK_ALIGN_JUSTIFY> = "Justify";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BLOCK_ALIGN_AFTER> = "After";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BLOCK_ALIGN_MIDDLE> = "Middle";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BLOCK_ALIGN_BEFORE> = "Before";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String HEIGHT_AUTO> = "Auto";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String WIDTH_AUTO> = "Auto";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_ALIGN_JUSTIFY> = "Justify";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_ALIGN_END> = "End";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_ALIGN_CENTER> = "Center";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_ALIGN_START> = "Start";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_OUTSET> = "Outset";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_INSET> = "Inset";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_RIDGE> = "Ridge";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_GROOVE> = "Groove";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_DOUBLE> = "Double";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_SOLID> = "Solid";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_DASHED> = "Dashed";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_DOTTED> = "Dotted";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_HIDDEN> = "Hidden";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE_NONE> = "None";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String WRITING_MODE_TBRL> = "TbRl";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String WRITING_MODE_RLTB> = "RlTb";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String WRITING_MODE_LRTB> = "LrTb";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String PLACEMENT_END> = "End";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String PLACEMENT_START> = "Start";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String PLACEMENT_BEFORE> = "Before";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String PLACEMENT_INLINE> = "Inline";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String PLACEMENT_BLOCK> = "Block";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String COLUMN_WIDTHS> = "ColumnWidths";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String COLUMN_GAP> = "ColumnGap";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String COLUMN_COUNT> = "ColumnCount";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String GLYPH_ORIENTATION_VERTICAL> = "GlyphOrientationVertical";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_POSITION> = "RubyPosition";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String RUBY_ALIGN> = "RubyAlign";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_DECORATION_TYPE> = "TextDecorationType";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_DECORATION_THICKNESS> = "TextDecorationThickness";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_DECORATION_COLOR> = "TextDecorationColor";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String LINE_HEIGHT> = "LineHeight";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BASELINE_SHIFT> = "BaselineShift";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String T_PADDING> = "TPadding";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String T_BORDER_STYLE> = "TBorderStyle";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String INLINE_ALIGN> = "InlineAlign";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BLOCK_ALIGN> = "BlockAlign";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String HEIGHT> = "Height";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String WIDTH> = "Width";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BBOX> = "BBox";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_ALIGN> = "TextAlign";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String TEXT_INDENT> = "TextIndent";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String END_INDENT> = "EndIndent";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String START_INDENT> = "StartIndent";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String SPACE_AFTER> = "SpaceAfter";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String SPACE_BEFORE> = "SpaceBefore";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String COLOR> = "Color";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String PADDING> = "Padding";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_THICKNESS> = "BorderThickness";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_STYLE> = "BorderStyle";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BORDER_COLOR> = "BorderColor";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String BACKGROUND_COLOR> = "BackgroundColor";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String WRITING_MODE> = "WritingMode";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String PLACEMENT> = "Placement";

        <org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String OWNER_LAYOUT> = "Layout";

        return;
    }
}
