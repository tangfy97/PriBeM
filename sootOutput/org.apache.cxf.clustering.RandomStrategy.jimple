public class org.apache.cxf.clustering.RandomStrategy extends org.apache.cxf.clustering.AbstractStaticFailoverStrategy
{
    private java.util.Random random;

    public void <init>()
    {
        java.util.Random $r1;
        org.apache.cxf.clustering.RandomStrategy r0;

        r0 := @this: org.apache.cxf.clustering.RandomStrategy;

        specialinvoke r0.<org.apache.cxf.clustering.AbstractStaticFailoverStrategy: void <init>()>();

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        r0.<org.apache.cxf.clustering.RandomStrategy: java.util.Random random> = $r1;

        return;
    }

    protected java.lang.Object getNextAlternate(java.util.List)
    {
        java.util.List r0;
        org.apache.cxf.clustering.RandomStrategy r1;
        int $i0, $i1;
        java.util.Random $r2;
        java.lang.Object $r3;

        r1 := @this: org.apache.cxf.clustering.RandomStrategy;

        r0 := @parameter0: java.util.List;

        $r2 = r1.<org.apache.cxf.clustering.RandomStrategy: java.util.Random random>;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i0);

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>($i1);

        return $r3;
    }
}
