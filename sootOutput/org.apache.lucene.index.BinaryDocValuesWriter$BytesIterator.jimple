class org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator extends java.lang.Object implements java.util.Iterator
{
    final org.apache.lucene.util.BytesRef value;
    final org.apache.lucene.util.packed.AppendingLongBuffer$Iterator lengthsIterator;
    final int size;
    final int maxDoc;
    int upto;
    long byteOffset;
    final org.apache.lucene.index.BinaryDocValuesWriter this$0;

    void <init>(org.apache.lucene.index.BinaryDocValuesWriter, int)
    {
        org.apache.lucene.index.BinaryDocValuesWriter r1, $r3, $r6;
        org.apache.lucene.util.BytesRef $r2;
        org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator r0;
        long $l0;
        org.apache.lucene.util.packed.AppendingLongBuffer$Iterator $r5;
        org.apache.lucene.util.packed.AppendingLongBuffer $r4, $r7;
        int $i1, i2;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator;

        r1 := @parameter0: org.apache.lucene.index.BinaryDocValuesWriter;

        i2 := @parameter1: int;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.index.BinaryDocValuesWriter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value> = $r2;

        $r3 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.index.BinaryDocValuesWriter this$0>;

        $r4 = staticinvoke <org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer access$000(org.apache.lucene.index.BinaryDocValuesWriter)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.lucene.util.packed.AppendingLongBuffer: org.apache.lucene.util.packed.AppendingLongBuffer$Iterator iterator()>();

        r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.packed.AppendingLongBuffer$Iterator lengthsIterator> = $r5;

        $r6 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.index.BinaryDocValuesWriter this$0>;

        $r7 = staticinvoke <org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer access$000(org.apache.lucene.index.BinaryDocValuesWriter)>($r6);

        $l0 = virtualinvoke $r7.<org.apache.lucene.util.packed.AppendingLongBuffer: long size()>();

        $i1 = (int) $l0;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int size> = $i1;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int maxDoc> = i2;

        return;
    }

    public boolean hasNext()
    {
        org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator;

        $i1 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int upto>;

        $i0 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int maxDoc>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.lucene.util.BytesRef next()
    {
        byte[] $r11;
        org.apache.lucene.index.BinaryDocValuesWriter $r6;
        org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator r0;
        long $l4, $l8, $l9, $l10, $l11;
        org.apache.lucene.util.packed.AppendingLongBuffer$Iterator $r3;
        org.apache.lucene.util.ByteBlockPool $r7;
        int $i0, $i1, $i2, $i3, i5, $i6, $i7;
        java.util.NoSuchElementException $r12;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r1, $r2, $r4, $r5, $r8, $r9, $r10;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r12 = new java.util.NoSuchElementException;

        specialinvoke $r12.<java.util.NoSuchElementException: void <init>()>();

        throw $r12;

     label1:
        $i1 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int upto>;

        $i0 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int size>;

        if $i1 >= $i0 goto label2;

        $r3 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.packed.AppendingLongBuffer$Iterator lengthsIterator>;

        $l4 = virtualinvoke $r3.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: long next()>();

        i5 = (int) $l4;

        $r4 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value>;

        virtualinvoke $r4.<org.apache.lucene.util.BytesRef: void grow(int)>(i5);

        $r5 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value>;

        $r5.<org.apache.lucene.util.BytesRef: int length> = i5;

        $r6 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.index.BinaryDocValuesWriter this$0>;

        $r7 = staticinvoke <org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.ByteBlockPool access$100(org.apache.lucene.index.BinaryDocValuesWriter)>($r6);

        $l8 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: long byteOffset>;

        $r8 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value>;

        $r11 = $r8.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r9 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value>;

        $i7 = $r9.<org.apache.lucene.util.BytesRef: int offset>;

        $r10 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value>;

        $i6 = $r10.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r7.<org.apache.lucene.util.ByteBlockPool: void readBytes(long,byte[],int,int)>($l8, $r11, $i7, $i6);

        $l10 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: long byteOffset>;

        $l9 = (long) i5;

        $l11 = $l10 + $l9;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: long byteOffset> = $l11;

        goto label3;

     label2:
        $r1 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value>;

        $r1.<org.apache.lucene.util.BytesRef: int length> = 0;

     label3:
        $i2 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int upto>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: int upto> = $i3;

        $r2 = r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef value>;

        return $r2;
    }

    public void remove()
    {
        org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator r0;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.BinaryDocValuesWriter$BytesIterator: org.apache.lucene.util.BytesRef next()>();

        return $r1;
    }
}
