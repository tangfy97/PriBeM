public class org.apache.jena.riot.adapters.RDFWriterRIOT extends java.lang.Object implements com.hp.hpl.jena.rdf.model.RDFWriter
{
    private final java.lang.String basename;
    private final java.lang.String jenaName;
    private com.hp.hpl.jena.sparql.util.Context context;
    private org.apache.jena.riot.WriterGraphRIOT writer;
    private com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler;

    public void <init>(java.lang.String)
    {
        org.apache.jena.riot.adapters.RDFWriterRIOT r0;
        com.hp.hpl.jena.sparql.util.Context $r1;
        com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler $r2;
        java.util.Locale $r6;
        java.lang.StringBuilder $r3, $r4, $r8;
        java.lang.String r5, $r7, $r9;

        r0 := @this: org.apache.jena.riot.adapters.RDFWriterRIOT;

        r5 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.sparql.util.Context;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.util.Context: void <init>()>();

        r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: com.hp.hpl.jena.sparql.util.Context context> = $r1;

        $r2 = new com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler;

        specialinvoke $r2.<com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: void <init>()>();

        r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.jena.riot.writer.");

        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r7 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String basename> = $r9;

        r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String jenaName> = r5;

        return;
    }

    private org.apache.jena.riot.WriterGraphRIOT writer()
    {
        org.apache.jena.riot.adapters.RDFWriterRIOT r0;
        org.apache.jena.riot.WriterGraphRIOT $r1, $r3, $r4, $r6;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.jena.riot.adapters.RDFWriterRIOT;

        $r1 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer>;

        return $r6;

     label1:
        $r2 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String jenaName>;

        if $r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Jena writer name is null");

        throw $r5;

     label2:
        $r3 = specialinvoke r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT setWriter()>();

        r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer> = $r3;

        $r4 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer>;

        return $r4;
    }

    private org.apache.jena.riot.WriterGraphRIOT setWriter()
    {
        org.apache.jena.riot.RiotException $r7;
        java.lang.String $r2, $r3, $r5, $r10, $r13;
        org.apache.jena.riot.Lang $r6;
        org.apache.jena.riot.adapters.RDFWriterRIOT r0;
        java.lang.IllegalArgumentException $r16;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;
        org.apache.jena.riot.WriterGraphRIOT $r1, $r14, $r15, $r17;
        org.apache.jena.riot.RDFFormat $r4;

        r0 := @this: org.apache.jena.riot.adapters.RDFWriterRIOT;

        $r1 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer>;

        if $r1 == null goto label1;

        $r17 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer>;

        return $r17;

     label1:
        $r2 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String jenaName>;

        if $r2 != null goto label2;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Jena writer name is null");

        throw $r16;

     label2:
        $r3 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String jenaName>;

        $r4 = staticinvoke <org.apache.jena.riot.system.IO_JenaWriters: org.apache.jena.riot.RDFFormat getFormatForJenaWriter(java.lang.String)>($r3);

        if $r4 == null goto label3;

        $r15 = staticinvoke <org.apache.jena.riot.RDFDataMgr: org.apache.jena.riot.WriterGraphRIOT createGraphWriter(org.apache.jena.riot.RDFFormat)>($r4);

        return $r15;

     label3:
        $r5 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String jenaName>;

        $r6 = staticinvoke <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang nameToLang(java.lang.String)>($r5);

        if $r6 == null goto label4;

        $r14 = staticinvoke <org.apache.jena.riot.RDFDataMgr: org.apache.jena.riot.WriterGraphRIOT createGraphWriter(org.apache.jena.riot.Lang)>($r6);

        return $r14;

     label4:
        $r7 = new org.apache.jena.riot.RiotException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No graph writer for \'");

        $r10 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String jenaName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r13);

        throw $r7;
    }

    public void write(com.hp.hpl.jena.rdf.model.Model, java.io.Writer, java.lang.String)
    {
        org.apache.jena.riot.adapters.RDFWriterRIOT r1;
        com.hp.hpl.jena.sparql.util.Context $r7;
        org.apache.jena.riot.system.PrefixMap $r6;
        com.hp.hpl.jena.rdf.model.Model r0;
        java.io.Writer r2;
        java.lang.String r3;
        org.apache.jena.riot.WriterGraphRIOT $r5;
        com.hp.hpl.jena.graph.Graph $r4;
        boolean $z0;

        r1 := @this: org.apache.jena.riot.adapters.RDFWriterRIOT;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: java.io.Writer;

        r3 := @parameter2: java.lang.String;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        r3 = null;

     label1:
        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r5 = specialinvoke r1.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer()>();

        $r6 = staticinvoke <org.apache.jena.riot.system.RiotLib: org.apache.jena.riot.system.PrefixMap prefixMap(com.hp.hpl.jena.graph.Graph)>($r4);

        $r7 = r1.<org.apache.jena.riot.adapters.RDFWriterRIOT: com.hp.hpl.jena.sparql.util.Context context>;

        interfaceinvoke $r5.<org.apache.jena.riot.WriterGraphRIOT: void write(java.io.Writer,com.hp.hpl.jena.graph.Graph,org.apache.jena.riot.system.PrefixMap,java.lang.String,com.hp.hpl.jena.sparql.util.Context)>(r2, $r4, $r6, r3, $r7);

        return;
    }

    public void write(com.hp.hpl.jena.rdf.model.Model, java.io.OutputStream, java.lang.String)
    {
        java.io.OutputStream r2;
        org.apache.jena.riot.adapters.RDFWriterRIOT r1;
        com.hp.hpl.jena.sparql.util.Context $r7;
        org.apache.jena.riot.system.PrefixMap $r6;
        com.hp.hpl.jena.rdf.model.Model r0;
        java.lang.String r3;
        org.apache.jena.riot.WriterGraphRIOT $r5;
        com.hp.hpl.jena.graph.Graph $r4;
        boolean $z0;

        r1 := @this: org.apache.jena.riot.adapters.RDFWriterRIOT;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: java.lang.String;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        r3 = null;

     label1:
        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r5 = specialinvoke r1.<org.apache.jena.riot.adapters.RDFWriterRIOT: org.apache.jena.riot.WriterGraphRIOT writer()>();

        $r6 = staticinvoke <org.apache.jena.riot.system.RiotLib: org.apache.jena.riot.system.PrefixMap prefixMap(com.hp.hpl.jena.graph.Graph)>($r4);

        $r7 = r1.<org.apache.jena.riot.adapters.RDFWriterRIOT: com.hp.hpl.jena.sparql.util.Context context>;

        interfaceinvoke $r5.<org.apache.jena.riot.WriterGraphRIOT: void write(java.io.OutputStream,com.hp.hpl.jena.graph.Graph,org.apache.jena.riot.system.PrefixMap,java.lang.String,com.hp.hpl.jena.sparql.util.Context)>(r2, $r4, $r6, r3, $r7);

        return;
    }

    public java.lang.Object setProperty(java.lang.String, java.lang.Object)
    {
        org.apache.jena.riot.adapters.RDFWriterRIOT r1;
        com.hp.hpl.jena.sparql.util.Context $r8;
        java.lang.StringBuilder $r0, $r3, $r5;
        java.lang.Object $r9, r10;
        java.lang.String $r2, r4, $r6;
        com.hp.hpl.jena.sparql.util.Symbol $r7;

        r1 := @this: org.apache.jena.riot.adapters.RDFWriterRIOT;

        r4 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Object;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.jena.riot.adapters.RDFWriterRIOT: java.lang.String basename>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>($r6);

        $r8 = r1.<org.apache.jena.riot.adapters.RDFWriterRIOT: com.hp.hpl.jena.sparql.util.Context context>;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r7);

        return $r9;
    }

    public com.hp.hpl.jena.rdf.model.RDFErrorHandler setErrorHandler(com.hp.hpl.jena.rdf.model.RDFErrorHandler)
    {
        org.apache.jena.riot.adapters.RDFWriterRIOT r0;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler r1, r2;

        r0 := @this: org.apache.jena.riot.adapters.RDFWriterRIOT;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.RDFErrorHandler;

        r1 = r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        r0.<org.apache.jena.riot.adapters.RDFWriterRIOT: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler> = r2;

        return r1;
    }
}
