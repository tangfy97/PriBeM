final class org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame extends java.lang.Object
{
    final int ord;
    boolean hasTerms;
    boolean hasTermsOrig;
    boolean isFloor;
    org.apache.lucene.util.fst.FST$Arc arc;
    long fp;
    long fpOrig;
    long fpEnd;
    byte[] suffixBytes;
    final org.apache.lucene.store.ByteArrayDataInput suffixesReader;
    byte[] statBytes;
    final org.apache.lucene.store.ByteArrayDataInput statsReader;
    byte[] floorData;
    final org.apache.lucene.store.ByteArrayDataInput floorDataReader;
    int prefix;
    int entCount;
    int nextEnt;
    boolean isLastInFloor;
    boolean isLeafBlock;
    long lastSubFP;
    int nextFloorLabel;
    int numFollowFloorBlocks;
    int metaDataUpto;
    final org.apache.lucene.codecs.BlockTermState state;
    private int startBytePos;
    private int suffix;
    private long subCode;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2;

    public void <init>(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        byte[] $r2, $r4, $r6;
        org.apache.lucene.codecs.BlockTreeTermsReader $r9;
        org.apache.lucene.codecs.BlockTermState $r11, $r12;
        org.apache.lucene.store.ByteArrayDataInput $r3, $r5, $r7;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r8;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r1;
        org.apache.lucene.codecs.PostingsReaderBase $r10;
        int i0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r1 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        i0 := @parameter1: int;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[128];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes> = $r2;

        $r3 = new org.apache.lucene.store.ByteArrayDataInput;

        specialinvoke $r3.<org.apache.lucene.store.ByteArrayDataInput: void <init>()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader> = $r3;

        $r4 = newarray (byte)[64];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] statBytes> = $r4;

        $r5 = new org.apache.lucene.store.ByteArrayDataInput;

        specialinvoke $r5.<org.apache.lucene.store.ByteArrayDataInput: void <init>()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput statsReader> = $r5;

        $r6 = newarray (byte)[32];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] floorData> = $r6;

        $r7 = new org.apache.lucene.store.ByteArrayDataInput;

        specialinvoke $r7.<org.apache.lucene.store.ByteArrayDataInput: void <init>()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader> = $r7;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord> = i0;

        $r8 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r9 = $r8.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r10 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)>($r9);

        $r11 = virtualinvoke $r10.<org.apache.lucene.codecs.PostingsReaderBase: org.apache.lucene.codecs.BlockTermState newTermState()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state> = $r11;

        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r12.<org.apache.lucene.codecs.BlockTermState: long totalTermFreq> = -1L;

        return;
    }

    public void setFloorData(org.apache.lucene.store.ByteArrayDataInput, org.apache.lucene.util.BytesRef)
    {
        byte[] $r3, $r4, $r5, $r6, $r10;
        org.apache.lucene.store.ByteArrayDataInput r1, $r7, $r8, $r9;
        short $s11, $s13;
        byte $b10;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i12, $i14;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r2;
        org.apache.lucene.util.BytesRef r0;

        r2 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r1 := @parameter0: org.apache.lucene.store.ByteArrayDataInput;

        r0 := @parameter1: org.apache.lucene.util.BytesRef;

        $i0 = r0.<org.apache.lucene.util.BytesRef: int length>;

        $i1 = virtualinvoke r1.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        $i2 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i3 = $i1 - $i2;

        i4 = $i0 - $i3;

        $r3 = r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] floorData>;

        $i5 = lengthof $r3;

        if i4 <= $i5 goto label1;

        $i12 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>(i4, 1);

        $r10 = newarray (byte)[$i12];

        r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] floorData> = $r10;

     label1:
        $r4 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i6 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i7 = virtualinvoke r1.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        $i8 = $i6 + $i7;

        $r5 = r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] floorData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i8, $r5, 0, i4);

        $r7 = r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        $r6 = r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] floorData>;

        virtualinvoke $r7.<org.apache.lucene.store.ByteArrayDataInput: void reset(byte[],int,int)>($r6, 0, i4);

        $r8 = r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        $i9 = virtualinvoke $r8.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int numFollowFloorBlocks> = $i9;

        $r9 = r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        $b10 = virtualinvoke $r9.<org.apache.lucene.store.ByteArrayDataInput: byte readByte()>();

        $s13 = (short) $b10;

        $s11 = $s13 & 255;

        $i14 = (int) $s11;

        r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextFloorLabel> = $i14;

        return;
    }

    public int getTermBlockOrd()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.codecs.BlockTermState $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $z0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLeafBlock>;

        if $z0 == 0 goto label1;

        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        goto label2;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i0 = $r1.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd>;

     label2:
        return $i0;
    }

    void loadNextFloorBlock() throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        long $l0;
        java.lang.AssertionError $r11;
        org.apache.lucene.util.fst.FST$Arc $r1, $r5;
        int $i2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r10;
        java.lang.String $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        if $r1 == null goto label1;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z1 != 0 goto label1;

        $r11 = new java.lang.AssertionError;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arc=");

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isFloor=");

        $z2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r11;

     label1:
        $l0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpEnd>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp> = $l0;

        $i2 = (int) -1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i2;

        virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        return;
    }

    void loadBlock() throws java.io.IOException
    {
        byte[] $r6, $r9, $r10, $r14, $r17, $r18, $r33, $r34;
        org.apache.lucene.store.ByteArrayDataInput $r11, $r19;
        org.apache.lucene.util.fst.FST$Arc $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.codecs.BlockTermState $r20, $r29;
        org.apache.lucene.codecs.BlockTreeTermsReader $r23;
        long $l1, $l8;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r22, $r28;
        java.lang.AssertionError $r40, $r41;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r1, $r2, $r4, $r7, $r12, $r15, $r21, $r25, $r27, $r31, $r38;
        org.apache.lucene.codecs.PostingsReaderBase $r24;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i16;
        org.apache.lucene.store.IndexInput $r3, $r5, $r8, $r13, $r16, $r26, $r32, $r39;
        org.apache.lucene.index.FieldInfo $r30;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: void initIndexInput()>();

        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i16 = (int) -1;

        if $i0 == $i16 goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r3 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r2);

        $l1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        virtualinvoke $r3.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r5 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r4);

        $i2 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i3 = $i2 >>> 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount> = $i3;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i12 > 0 goto label2;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label2:
        $i4 = $i2 & 1;

        if $i4 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor> = $z4;

        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $r35 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        if $r35 == null goto label5;

        $z2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        if $z2 != 0 goto label5;

        $z3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z3 != 0 goto label5;

        $r41 = new java.lang.AssertionError;

        specialinvoke $r41.<java.lang.AssertionError: void <init>()>();

        throw $r41;

     label5:
        $r38 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r39 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r38);

        $i13 = virtualinvoke $r39.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i14 = $i13 & 1;

        if $i14 == 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLeafBlock> = $z5;

        $i11 = $i13 >>> 1;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes>;

        $i5 = lengthof $r6;

        if $i5 >= $i11 goto label8;

        $i10 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i11, 1);

        $r34 = newarray (byte)[$i10];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes> = $r34;

     label8:
        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r8 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r7);

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes>;

        virtualinvoke $r8.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r9, 0, $i11);

        $r11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes>;

        virtualinvoke $r11.<org.apache.lucene.store.ByteArrayDataInput: void reset(byte[],int,int)>($r10, 0, $i11);

        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r13 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r12);

        $i6 = virtualinvoke $r13.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] statBytes>;

        $i7 = lengthof $r14;

        if $i7 >= $i6 goto label9;

        $i9 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i6, 1);

        $r33 = newarray (byte)[$i9];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] statBytes> = $r33;

     label9:
        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r16 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r15);

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] statBytes>;

        virtualinvoke $r16.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r17, 0, $i6);

        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput statsReader>;

        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] statBytes>;

        virtualinvoke $r19.<org.apache.lucene.store.ByteArrayDataInput: void reset(byte[],int,int)>($r18, 0, $i6);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto> = 0;

        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r20.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = 0;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = 0;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP> = -1L;

        $r21 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r22 = $r21.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r23 = $r22.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r24 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)>($r23);

        $r25 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r26 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r25);

        $r27 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r28 = $r27.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r30 = $r28.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r29 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        virtualinvoke $r24.<org.apache.lucene.codecs.PostingsReaderBase: void readTermsBlock(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfo,org.apache.lucene.codecs.BlockTermState)>($r26, $r30, $r29);

        $r31 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r32 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r31);

        $l8 = virtualinvoke $r32.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpEnd> = $l8;

        return;
    }

    void rewind()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.store.ByteArrayDataInput $r1, $r2, $r3;
        long $l0;
        short $s3, $s6;
        byte $b2;
        int $i1, $i5, $i7;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $l0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp> = $l0;

        $i5 = (int) -1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i5;

        $z0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTermsOrig>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms> = $z0;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z1 == 0 goto label1;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        virtualinvoke $r1.<org.apache.lucene.store.ByteArrayDataInput: void rewind()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int numFollowFloorBlocks> = $i1;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        $b2 = virtualinvoke $r3.<org.apache.lucene.store.ByteArrayDataInput: byte readByte()>();

        $s6 = (short) $b2;

        $s3 = $s6 & 255;

        $i7 = (int) $s3;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextFloorLabel> = $i7;

     label1:
        return;
    }

    public boolean next()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $z0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLeafBlock>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean nextLeaf()>();

        goto label2;

     label1:
        $z1 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean nextNonLeaf()>();

     label2:
        return $z1;
    }

    public boolean nextLeaf()
    {
        byte[] $r7, $r12;
        org.apache.lucene.store.ByteArrayDataInput $r1, $r2, $r13;
        boolean $z0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.util.BytesRef $r4, $r6, $r9, $r11, $r17, $r18;
        java.lang.StringBuilder $r21, $r22, $r23, $r24, $r25, $r26, $r28;
        long $l15;
        java.lang.AssertionError $r29;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r3, $r5, $r8, $r10, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19;
        java.lang.String $r27;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i19 = (int) -1;

        if $i12 == $i19 goto label1;

        $i17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i17 < $i16 goto label2;

     label1:
        $r29 = new java.lang.AssertionError;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextEnt=");

        $i13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entCount=");

        $i14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fp=");

        $l15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>($r27);

        throw $r29;

     label2:
        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i1;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix> = $i2;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i3 = virtualinvoke $r2.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int startBytePos> = $i3;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r4 = $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        $i6 = $i5 + $i4;

        $r4.<org.apache.lucene.util.BytesRef: int length> = $i6;

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r6 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r7 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = lengthof $r7;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r9 = $r8.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i7 = $r9.<org.apache.lucene.util.BytesRef: int length>;

        if $i8 >= $i7 goto label3;

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r18 = $r15.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r17 = $r16.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i11 = $r17.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r18.<org.apache.lucene.util.BytesRef: void grow(int)>($i11);

     label3:
        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r11 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r12 = $r11.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        virtualinvoke $r13.<org.apache.lucene.store.ByteArrayDataInput: void readBytes(byte[],int,int)>($r12, $i10, $i9);

        $r14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1002(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,boolean)>($r14, 1);

        return 0;
    }

    public boolean nextNonLeaf()
    {
        byte[] $r7, $r12;
        org.apache.lucene.store.ByteArrayDataInput $r1, $r2, $r13, $r15;
        boolean $z0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.codecs.BlockTermState $r17;
        org.apache.lucene.util.BytesRef $r4, $r6, $r9, $r11, $r20, $r21;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, $r29, $r31;
        long $l13, $l14, $l15, $l16, $l23;
        java.lang.AssertionError $r32;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r3, $r5, $r8, $r10, $r14, $r16, $r18, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i27;
        java.lang.String $r30;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i27 = (int) -1;

        if $i20 == $i27 goto label1;

        $i25 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i24 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i25 < $i24 goto label2;

     label1:
        $r32 = new java.lang.AssertionError;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextEnt=");

        $i21 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entCount=");

        $i22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fp=");

        $l23 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l23);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>($r30);

        throw $r32;

     label2:
        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i1;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        $i3 = $i2 >>> 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix> = $i3;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i4 = virtualinvoke $r2.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int startBytePos> = $i4;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r4 = $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        $i7 = $i6 + $i5;

        $r4.<org.apache.lucene.util.BytesRef: int length> = $i7;

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r6 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r7 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i9 = lengthof $r7;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r9 = $r8.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i8 = $r9.<org.apache.lucene.util.BytesRef: int length>;

        if $i9 >= $i8 goto label3;

        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r21 = $r18.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r20 = $r19.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i19 = $r20.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r21.<org.apache.lucene.util.BytesRef: void grow(int)>($i19);

     label3:
        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r11 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r12 = $r11.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        virtualinvoke $r13.<org.apache.lucene.store.ByteArrayDataInput: void readBytes(byte[],int,int)>($r12, $i11, $i10);

        $i12 = $i2 & 1;

        if $i12 != 0 goto label4;

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1002(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,boolean)>($r16, 1);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode> = 0L;

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i17 = $r17.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd>;

        $i18 = $i17 + 1;

        $r17.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = $i18;

        return 0;

     label4:
        $r14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1002(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,boolean)>($r14, 0);

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $l13 = virtualinvoke $r15.<org.apache.lucene.store.ByteArrayDataInput: long readVLong()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode> = $l13;

        $l15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $l14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode>;

        $l16 = $l15 - $l14;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP> = $l16;

        return 1;
    }

    public void scanToFloorFrame(org.apache.lucene.util.BytesRef)
    {
        byte[] $r2;
        org.apache.lucene.store.ByteArrayDataInput $r3, $r5;
        byte $b5, $b11, $b15, $b22;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.util.BytesRef r1;
        long $l14, $l17, $l18, $l19, $l20, $l21;
        java.lang.AssertionError $r6;
        short s6, $s12, $s23, $s25;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i13, $i16, $i24, $i26, $i27, $i29;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        $z0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z0 == 0 goto label01;

        $i1 = r1.<org.apache.lucene.util.BytesRef: int length>;

        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        if $i1 > $i0 goto label02;

     label01:
        return;

     label02:
        $r2 = r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i3 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        $i2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i4 = $i3 + $i2;

        $b5 = $r2[$i4];

        $s23 = (short) $b5;

        s6 = $s23 & 255;

        $i7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextFloorLabel>;

        $i24 = (int) s6;

        if $i24 >= $i7 goto label03;

        return;

     label03:
        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        $i16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int numFollowFloorBlocks>;

        if $i16 != 0 goto label04;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label04:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        $l17 = virtualinvoke $r5.<org.apache.lucene.store.ByteArrayDataInput: long readVLong()>();

        $l18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig>;

        $l19 = $l17 >>> 1;

        $l20 = $l18 + $l19;

        $l21 = $l17 & 1L;

        $b22 = $l21 cmp 0L;

        if $b22 == 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms> = $z3;

        $i8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int numFollowFloorBlocks>;

        if $i8 != 1 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor> = $z4;

        $i9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int numFollowFloorBlocks>;

        $i10 = $i9 - 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int numFollowFloorBlocks> = $i10;

        $z2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        if $z2 == 0 goto label09;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextFloorLabel> = 256;

        goto label11;

     label09:
        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput floorDataReader>;

        $b11 = virtualinvoke $r3.<org.apache.lucene.store.ByteArrayDataInput: byte readByte()>();

        $s25 = (short) $b11;

        $s12 = $s25 & 255;

        $i26 = (int) $s12;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextFloorLabel> = $i26;

        $i13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextFloorLabel>;

        $i27 = (int) s6;

        if $i27 >= $i13 goto label10;

        goto label11;

     label10:
        goto label04;

     label11:
        $l14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $b15 = $l20 cmp $l14;

        if $b15 == 0 goto label12;

        $i29 = (int) -1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i29;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp> = $l20;

     label12:
        return;
    }

    public void decodeMetaData() throws java.io.IOException
    {
        org.apache.lucene.store.ByteArrayDataInput $r2, $r19;
        boolean $z0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.index.FieldInfo$IndexOptions $r7, $r8;
        org.apache.lucene.codecs.BlockTermState $r1, $r3, $r15, $r17, $r18, $r20;
        org.apache.lucene.codecs.BlockTreeTermsReader $r11;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r5, $r10, $r14;
        long $l8, $l9, $l10;
        java.lang.AssertionError $r21;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r4, $r9, $r13;
        org.apache.lucene.codecs.PostingsReaderBase $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i11;
        org.apache.lucene.index.FieldInfo $r6, $r16;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $i0 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int getTermBlockOrd()>();

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $i0 > 0 goto label1;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto>;

        $r1.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = $i1;

     label2:
        $i11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto>;

        if $i11 >= $i0 goto label4;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput statsReader>;

        $i2 = virtualinvoke $r2.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        $r3.<org.apache.lucene.codecs.BlockTermState: int docFreq> = $i2;

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r5 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r6 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r8 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if $r7 == $r8 goto label3;

        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i7 = $r18.<org.apache.lucene.codecs.BlockTermState: int docFreq>;

        $l8 = (long) $i7;

        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput statsReader>;

        $l9 = virtualinvoke $r19.<org.apache.lucene.store.ByteArrayDataInput: long readVLong()>();

        $l10 = $l8 + $l9;

        $r20.<org.apache.lucene.codecs.BlockTermState: long totalTermFreq> = $l10;

     label3:
        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r10 = $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r11 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r12 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)>($r11);

        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r14 = $r13.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r16 = $r14.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        virtualinvoke $r12.<org.apache.lucene.codecs.PostingsReaderBase: void nextTerm(org.apache.lucene.index.FieldInfo,org.apache.lucene.codecs.BlockTermState)>($r16, $r15);

        $i3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto> = $i4;

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i5 = $r17.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd>;

        $i6 = $i5 + 1;

        $r17.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = $i6;

        goto label2;

     label4:
        return;
    }

    private boolean prefixMatches(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        byte[] $r2, $r5;
        org.apache.lucene.util.BytesRef r1, $r4;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r3;
        byte $b3, $b4;
        int $i0, $i1, $i2, i5, $i6, $i7;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        i5 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        if i5 >= $i0 goto label3;

        $r2 = r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        $i2 = $i1 + i5;

        $b4 = $r2[$i2];

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r4 = $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r5 = $r4.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b3 = $r5[i5];

        $i6 = (int) $b4;

        $i7 = (int) $b3;

        if $i6 == $i7 goto label2;

        return 0;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return 1;
    }

    public void scanToSubBlock(long)
    {
        org.apache.lucene.store.ByteArrayDataInput $r1, $r2, $r4;
        byte $b2, $b11, $b15;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.codecs.BlockTermState $r3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r15;
        long l0, $l1, $l3, $l10, $l14, $l16, $l17;
        java.lang.AssertionError $r14, $r16, $r17;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i18, $i19;
        java.lang.String $r12;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        l0 := @parameter0: long;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLeafBlock>;

        if $z3 == 0 goto label01;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label01:
        $l1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label02;

        return;

     label02:
        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $l14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $b15 = l0 cmp $l14;

        $i19 = (int) $b15;

        if $i19 < 0 goto label03;

        $r16 = new java.lang.AssertionError;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fp=");

        $l17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subFP=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r16;

     label03:
        $l3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $l16 = $l3 - l0;

     label04:
        $z4 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z4 != 0 goto label05;

        $i13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i13 < $i12 goto label05;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label05:
        $i4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i5;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i6 = virtualinvoke $r1.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $z2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLeafBlock>;

        if $z2 == 0 goto label06;

        $i18 = $i6;

        goto label07;

     label06:
        $i18 = $i6 >>> 1;

     label07:
        virtualinvoke $r2.<org.apache.lucene.store.ByteArrayDataInput: void skipBytes(int)>($i18);

        $i7 = $i6 & 1;

        if $i7 == 0 goto label09;

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $l10 = virtualinvoke $r4.<org.apache.lucene.store.ByteArrayDataInput: long readVLong()>();

        $b11 = $l16 cmp $l10;

        if $b11 != 0 goto label08;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP> = l0;

        return;

     label08:
        goto label10;

     label09:
        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i8 = $r3.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd>;

        $i9 = $i8 + 1;

        $r3.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = $i9;

     label10:
        goto label04;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus scanToTerm(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.index.TermsEnum$SeekStatus $r2;
        org.apache.lucene.util.BytesRef r1;
        boolean $z0, z1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        z1 := @parameter1: boolean;

        $z0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLeafBlock>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.index.TermsEnum$SeekStatus scanToTermLeaf(org.apache.lucene.util.BytesRef,boolean)>(r1, z1);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.index.TermsEnum$SeekStatus scanToTermNonLeaf(org.apache.lucene.util.BytesRef,boolean)>(r1, z1);

     label2:
        return $r2;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus scanToTermLeaf(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        byte[] $r27, $r28;
        byte $b12, $b14;
        long $l6, $l8;
        java.lang.AssertionError $r36, $r37, $r38, $r39;
        short $s15, $s16, $s34, $s35;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r1, $r4, $r6, $r7, $r8, $r9, $r12, $r14, $r16, $r17, $r18, $r20, $r23;
        org.apache.lucene.index.TermsEnum$SeekStatus $r3, $r25, $r30, $r35;
        org.apache.lucene.store.ByteArrayDataInput $r32, $r33, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8, z9;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0, $r10, $r11, $r13, $r15, $r19, $r22, $r24;
        org.apache.lucene.util.BytesRef r2, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i13, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, $i33, $i36, $i37;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        z5 := @parameter1: boolean;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i33 = (int) -1;

        if $i18 != $i33 goto label01;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label01:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1002(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,boolean)>($r1, 1);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode> = 0L;

        $i1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i1 != $i0 goto label03;

        if z5 == 0 goto label02;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

     label02:
        $r30 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r30;

     label03:
        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        $z8 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean prefixMatches(org.apache.lucene.util.BytesRef)>(r2);

        if $z8 != 0 goto label04;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label04:
        $i19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i20 = $i19 + 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i20;

        $r32 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i21 = virtualinvoke $r32.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix> = $i21;

        $i22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i23 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        $i24 = $i22 + $i23;

        $r33 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i25 = virtualinvoke $r33.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int startBytePos> = $i25;

        $r34 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i26 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        virtualinvoke $r34.<org.apache.lucene.store.ByteArrayDataInput: void skipBytes(int)>($i26);

        $i2 = r2.<org.apache.lucene.util.BytesRef: int offset>;

        $i27 = r2.<org.apache.lucene.util.BytesRef: int length>;

        if $i27 >= $i24 goto label05;

        $i28 = r2.<org.apache.lucene.util.BytesRef: int length>;

        goto label06;

     label05:
        $i28 = $i24;

     label06:
        $i17 = $i2 + $i28;

        $i4 = r2.<org.apache.lucene.util.BytesRef: int offset>;

        $i3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        i29 = $i4 + $i3;

        i30 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int startBytePos>;

     label07:
        if i29 >= $i17 goto label08;

        $r27 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes>;

        $i11 = i30;

        i30 = i30 + 1;

        $b12 = $r27[$i11];

        $s34 = (short) $b12;

        $s16 = $s34 & 255;

        $r28 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i13 = i29;

        i29 = i29 + 1;

        $b14 = $r28[$i13];

        $s35 = (short) $b14;

        $s15 = $s35 & 255;

        $i36 = (int) $s16;

        $i37 = (int) $s15;

        i31 = $i36 - $i37;

        z9 = 0;

        goto label10;

     label08:
        $z2 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z2 != 0 goto label09;

        if i29 == $i17 goto label09;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label09:
        $i5 = r2.<org.apache.lucene.util.BytesRef: int length>;

        i31 = $i24 - $i5;

        z9 = 1;

     label10:
        if i31 >= 0 goto label11;

        $i10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i10 != $i9 goto label04;

        if z5 == 0 goto label17;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

        goto label17;

     label11:
        if i31 <= 0 goto label14;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

        if z5 != 0 goto label13;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $z6 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1000(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r6);

        if $z6 != 0 goto label13;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r10 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r7);

        $l6 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $r11 = virtualinvoke $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,long,int)>(null, $l6, $i24);

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1102(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)>($r8, $r11);

        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r13 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r12);

        virtualinvoke $r13.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

     label12:
        $r14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r15 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r14);

        $z7 = virtualinvoke $r15.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean next()>();

        if $z7 == 0 goto label13;

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r19 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r16);

        $l8 = $r19.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r21 = $r20.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i7 = $r21.<org.apache.lucene.util.BytesRef: int length>;

        $r22 = virtualinvoke $r18.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,long,int)>(null, $l8, $i7);

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1102(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)>($r17, $r22);

        $r23 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r24 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r23);

        virtualinvoke $r24.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        goto label12;

     label13:
        $r35 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus NOT_FOUND>;

        return $r35;

     label14:
        if z9 == 0 goto label16;

        $z3 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z3 != 0 goto label15;

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $z4 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1000(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r4);

        if $z4 != 0 goto label15;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label15:
        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

        $r3 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        return $r3;

     label16:
        goto label07;

     label17:
        if z5 == 0 goto label18;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

     label18:
        $r25 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r25;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus scanToTermNonLeaf(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        byte[] $r31, $r32;
        byte $b21, $b23, $b31;
        long $l6, $l7, $l8, $l9, $l15, $l17, $l30;
        java.lang.AssertionError $r40, $r41, $r42, $r43;
        short $s24, $s25, $s44, $s45;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r1, $r4, $r8, $r10, $r11, $r12, $r13, $r16, $r18, $r20, $r21, $r22, $r24, $r27, $r35;
        org.apache.lucene.index.TermsEnum$SeekStatus $r7, $r29, $r37, $r39;
        org.apache.lucene.store.ByteArrayDataInput $r2, $r3, $r5, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, $z9, $z10, $z11, z12;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0, $r14, $r15, $r17, $r19, $r23, $r26, $r28;
        org.apache.lucene.codecs.BlockTermState $r33;
        org.apache.lucene.util.BytesRef r6, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i19, $i20, $i22, $i26, $i27, $i28, $i29, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, $i43, $i46, $i47;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r6 := @parameter0: org.apache.lucene.util.BytesRef;

        z6 := @parameter1: boolean;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i32 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i43 = (int) -1;

        if $i32 != $i43 goto label01;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label01:
        $i1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i1 != $i0 goto label05;

        if z6 == 0 goto label04;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

        $r35 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $l30 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode>;

        $b31 = $l30 cmp 0L;

        if $b31 != 0 goto label02;

        $z10 = 1;

        goto label03;

     label02:
        $z10 = 0;

     label03:
        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1002(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,boolean)>($r35, $z10);

     label04:
        $r37 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r37;

     label05:
        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z1 != 0 goto label06;

        $z9 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean prefixMatches(org.apache.lucene.util.BytesRef)>(r6);

        if $z9 != 0 goto label06;

        $r41 = new java.lang.AssertionError;

        specialinvoke $r41.<java.lang.AssertionError: void <init>()>();

        throw $r41;

     label06:
        $i33 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i34 = $i33 + 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i34;

        $r38 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i35 = virtualinvoke $r38.<org.apache.lucene.store.ByteArrayDataInput: int readVInt()>();

        $i36 = $i35 >>> 1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix> = $i36;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $i37 = $i35 & 1;

        if $i37 != 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1002(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,boolean)>($r1, $z11);

        $i3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        $i29 = $i3 + $i2;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i4 = virtualinvoke $r2.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int startBytePos> = $i4;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        virtualinvoke $r3.<org.apache.lucene.store.ByteArrayDataInput: void skipBytes(int)>($i5);

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $z2 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1000(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r4);

        if $z2 == 0 goto label09;

        $r33 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i27 = $r33.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd>;

        $i28 = $i27 + 1;

        $r33.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = $i28;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode> = 0L;

        goto label10;

     label09:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $l6 = virtualinvoke $r5.<org.apache.lucene.store.ByteArrayDataInput: long readVLong()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode> = $l6;

        $l8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $l7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long subCode>;

        $l9 = $l8 - $l7;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP> = $l9;

     label10:
        $i11 = r6.<org.apache.lucene.util.BytesRef: int offset>;

        $i10 = r6.<org.apache.lucene.util.BytesRef: int length>;

        if $i10 >= $i29 goto label11;

        $i38 = r6.<org.apache.lucene.util.BytesRef: int length>;

        goto label12;

     label11:
        $i38 = $i29;

     label12:
        $i26 = $i11 + $i38;

        $i13 = r6.<org.apache.lucene.util.BytesRef: int offset>;

        $i12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        i39 = $i13 + $i12;

        i40 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int startBytePos>;

     label13:
        if i39 >= $i26 goto label14;

        $r31 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes>;

        $i20 = i40;

        i40 = i40 + 1;

        $b21 = $r31[$i20];

        $s44 = (short) $b21;

        $s25 = $s44 & 255;

        $r32 = r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i22 = i39;

        i39 = i39 + 1;

        $b23 = $r32[$i22];

        $s45 = (short) $b23;

        $s24 = $s45 & 255;

        $i46 = (int) $s25;

        $i47 = (int) $s24;

        i41 = $i46 - $i47;

        z12 = 0;

        goto label16;

     label14:
        $z3 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z3 != 0 goto label15;

        if i39 == $i26 goto label15;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label15:
        $i14 = r6.<org.apache.lucene.util.BytesRef: int length>;

        i41 = $i29 - $i14;

        z12 = 1;

     label16:
        if i41 >= 0 goto label17;

        $i19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i19 != $i18 goto label06;

        if z6 == 0 goto label23;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

        goto label23;

     label17:
        if i41 <= 0 goto label20;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

        if z6 != 0 goto label19;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $z7 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1000(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r10);

        if $z7 != 0 goto label19;

        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r14 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r11);

        $l15 = $r14.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $r15 = virtualinvoke $r13.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,long,int)>(null, $l15, $i29);

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1102(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)>($r12, $r15);

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r17 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r16);

        virtualinvoke $r17.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

     label18:
        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r19 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r18);

        $z8 = virtualinvoke $r19.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean next()>();

        if $z8 == 0 goto label19;

        $r21 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r23 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r20);

        $l17 = $r23.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $r24 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r25 = $r24.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i16 = $r25.<org.apache.lucene.util.BytesRef: int length>;

        $r26 = virtualinvoke $r22.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,long,int)>(null, $l17, $i16);

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1102(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)>($r21, $r26);

        $r27 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r28 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r27);

        virtualinvoke $r28.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        goto label18;

     label19:
        $r39 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus NOT_FOUND>;

        return $r39;

     label20:
        if z12 == 0 goto label22;

        $z4 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled>;

        if $z4 != 0 goto label21;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $z5 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean access$1000(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)>($r8);

        if $z5 != 0 goto label21;

        $r43 = new java.lang.AssertionError;

        specialinvoke $r43.<java.lang.AssertionError: void <init>()>();

        throw $r43;

     label21:
        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

        $r7 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        return $r7;

     label22:
        goto label13;

     label23:
        if z6 == 0 goto label24;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void fillTerm()>();

     label24:
        $r29 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r29;
    }

    private void fillTerm()
    {
        byte[] $r5, $r8, $r9;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum $r1, $r3, $r6, $r10;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r0;
        org.apache.lucene.util.BytesRef $r2, $r4, $r7, $r11;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $i1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        i2 = $i1 + $i0;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r2 = $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        $i5 = $i4 + $i3;

        $r2.<org.apache.lucene.util.BytesRef: int length> = $i5;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r4 = $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r5 = $r4.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i6 = lengthof $r5;

        if $i6 >= i2 goto label1;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r11 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        virtualinvoke $r11.<org.apache.lucene.util.BytesRef: void grow(int)>(i2);

     label1:
        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: byte[] suffixBytes>;

        $i9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int startBytePos>;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum this$2>;

        $r7 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r8 = $r7.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int suffix>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i9, $r8, $i8, $i7);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/BlockTreeTermsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean $assertionsDisabled> = $z1;

        return;
    }
}
