public class com.mongodb.DBPort extends java.lang.Object
{
    public static final int PORT;
    static final boolean USE_NAGLE;
    static final long CONN_RETRY_TIME_MS;
    final int _hashCode;
    final java.net.InetSocketAddress _addr;
    final com.mongodb.DBPortPool _pool;
    final com.mongodb.MongoOptions _options;
    final java.util.logging.Logger _logger;
    private java.net.Socket _socket;
    private java.io.InputStream _in;
    private java.io.OutputStream _out;
    private java.util.Map _authed;
    int _lastThread;
    long _calls;
    private static java.util.logging.Logger _rootLogger;

    public void <init>(java.net.InetSocketAddress) throws java.io.IOException
    {
        com.mongodb.DBPort r0;
        com.mongodb.MongoOptions $r2;
        java.net.InetSocketAddress r1;

        r0 := @this: com.mongodb.DBPort;

        r1 := @parameter0: java.net.InetSocketAddress;

        $r2 = new com.mongodb.MongoOptions;

        specialinvoke $r2.<com.mongodb.MongoOptions: void <init>()>();

        specialinvoke r0.<com.mongodb.DBPort: void <init>(java.net.InetSocketAddress,com.mongodb.DBPortPool,com.mongodb.MongoOptions)>(r1, null, $r2);

        return;
    }

    void <init>(java.net.InetSocketAddress, com.mongodb.DBPortPool, com.mongodb.MongoOptions) throws java.io.IOException
    {
        com.mongodb.DBPort r0;
        com.mongodb.DBPortPool r5;
        java.util.Map $r2;
        int $i0;
        java.lang.String $r9, $r12, $r14;
        java.util.WeakHashMap $r1;
        com.mongodb.MongoOptions r3;
        java.util.logging.Logger $r8, $r15;
        java.net.InetSocketAddress r4, $r6;
        java.lang.StringBuilder $r7, $r10, $r11, $r13;

        r0 := @this: com.mongodb.DBPort;

        r4 := @parameter0: java.net.InetSocketAddress;

        r5 := @parameter1: com.mongodb.DBPortPool;

        r3 := @parameter2: com.mongodb.MongoOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<com.mongodb.DBPort: java.util.Map _authed> = $r2;

        r0.<com.mongodb.DBPort: long _calls> = 0L;

        r0.<com.mongodb.DBPort: com.mongodb.MongoOptions _options> = r3;

        r0.<com.mongodb.DBPort: java.net.InetSocketAddress _addr> = r4;

        r0.<com.mongodb.DBPort: com.mongodb.DBPortPool _pool> = r5;

        $r6 = r0.<com.mongodb.DBPort: java.net.InetSocketAddress _addr>;

        $i0 = virtualinvoke $r6.<java.net.InetSocketAddress: int hashCode()>();

        r0.<com.mongodb.DBPort: int _hashCode> = $i0;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = <com.mongodb.DBPort: java.util.logging.Logger _rootLogger>;

        $r9 = virtualinvoke $r8.<java.util.logging.Logger: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke r4.<java.net.InetSocketAddress: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r14);

        r0.<com.mongodb.DBPort: java.util.logging.Logger _logger> = $r15;

        return;
    }

    com.mongodb.Response call(com.mongodb.OutMessage, com.mongodb.DBCollection) throws java.io.IOException
    {
        com.mongodb.DBPort r0;
        com.mongodb.DBCollection r2;
        com.mongodb.Response $r3;
        com.mongodb.OutMessage r1;

        r0 := @this: com.mongodb.DBPort;

        r1 := @parameter0: com.mongodb.OutMessage;

        r2 := @parameter1: com.mongodb.DBCollection;

        $r3 = specialinvoke r0.<com.mongodb.DBPort: com.mongodb.Response go(com.mongodb.OutMessage,com.mongodb.DBCollection)>(r1, r2);

        return $r3;
    }

    void say(com.mongodb.OutMessage) throws java.io.IOException
    {
        com.mongodb.DBPort r0;
        com.mongodb.OutMessage r1;

        r0 := @this: com.mongodb.DBPort;

        r1 := @parameter0: com.mongodb.OutMessage;

        specialinvoke r0.<com.mongodb.DBPort: com.mongodb.Response go(com.mongodb.OutMessage,com.mongodb.DBCollection)>(r1, null);

        return;
    }

    private synchronized com.mongodb.Response go(com.mongodb.OutMessage, com.mongodb.DBCollection) throws java.io.IOException
    {
        com.mongodb.DBPort r0;
        java.io.OutputStream $r2, $r4;
        com.mongodb.DBPortPool $r5, $r9;
        java.lang.IllegalStateException $r10;
        java.net.Socket $r1;
        com.mongodb.DBCollection r6;
        long $l0, $l1;
        java.io.IOException $r11;
        com.mongodb.Response $r7;
        com.mongodb.OutMessage r3;
        java.io.InputStream $r8;

        r0 := @this: com.mongodb.DBPort;

        r3 := @parameter0: com.mongodb.OutMessage;

        r6 := @parameter1: com.mongodb.DBCollection;

        $l0 = r0.<com.mongodb.DBPort: long _calls>;

        $l1 = $l0 + 1L;

        r0.<com.mongodb.DBPort: long _calls> = $l1;

        $r1 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        if $r1 != null goto label1;

        virtualinvoke r0.<com.mongodb.DBPort: boolean _open()>();

     label1:
        $r2 = r0.<com.mongodb.DBPort: java.io.OutputStream _out>;

        if $r2 != null goto label2;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("_out shouldn\'t be null");

        throw $r10;

     label2:
        virtualinvoke r3.<com.mongodb.OutMessage: void prepare()>();

        $r4 = r0.<com.mongodb.DBPort: java.io.OutputStream _out>;

        virtualinvoke r3.<com.mongodb.OutMessage: void pipe(java.io.OutputStream)>($r4);

        $r5 = r0.<com.mongodb.DBPort: com.mongodb.DBPortPool _pool>;

        if $r5 == null goto label3;

        $r9 = r0.<com.mongodb.DBPort: com.mongodb.DBPortPool _pool>;

        $r9.<com.mongodb.DBPortPool: boolean _everWorked> = 1;

     label3:
        if r6 != null goto label5;

     label4:
        return null;

     label5:
        $r7 = new com.mongodb.Response;

        $r8 = r0.<com.mongodb.DBPort: java.io.InputStream _in>;

        specialinvoke $r7.<com.mongodb.Response: void <init>(com.mongodb.DBCollection,java.io.InputStream)>(r6, $r8);

     label6:
        return $r7;

     label7:
        $r11 := @caughtexception;

        virtualinvoke r0.<com.mongodb.DBPort: void close()>();

        throw $r11;

        catch java.io.IOException from label2 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    synchronized com.mongodb.CommandResult getLastError(com.mongodb.DB, com.mongodb.WriteConcern)
    {
        com.mongodb.DBPort r2;
        com.mongodb.BasicDBObject $r4;
        com.mongodb.CommandResult $r5;
        com.mongodb.DB r0;
        com.mongodb.DBApiLayer r1;
        com.mongodb.WriteConcern r3;

        r2 := @this: com.mongodb.DBPort;

        r0 := @parameter0: com.mongodb.DB;

        r3 := @parameter1: com.mongodb.WriteConcern;

        r1 = (com.mongodb.DBApiLayer) r0;

        $r4 = virtualinvoke r3.<com.mongodb.WriteConcern: com.mongodb.BasicDBObject getCommand()>();

        $r5 = virtualinvoke r2.<com.mongodb.DBPort: com.mongodb.CommandResult runCommand(com.mongodb.DB,com.mongodb.DBObject)>(r1, $r4);

        return $r5;
    }

    synchronized com.mongodb.CommandResult runCommand(com.mongodb.DB, com.mongodb.DBObject)
    {
        com.mongodb.DBPort r8;
        com.mongodb.MongoInternalException $r27, $r29;
        com.mongodb.CommandResult $r12;
        com.mongodb.DBObject r6, $r11;
        int $i0, $i1, $i3;
        com.mongodb.Response $r10;
        com.mongodb.OutMessage $r7;
        java.lang.String $r2, $r5, $r17, $r22, $r24;
        com.mongodb.DBCollection $r9;
        java.io.IOException $r18;
        com.mongodb.DB r1;
        java.lang.StringBuilder $r3, $r4, $r15, $r16, $r21, $r23, $r25, $r26, $r28;

        r8 := @this: com.mongodb.DBPort;

        r1 := @parameter0: com.mongodb.DB;

        r6 := @parameter1: com.mongodb.DBObject;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<com.mongodb.DB: java.lang.String getName()>();

        $r3 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".$cmd");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = (int) -1;

        $r7 = staticinvoke <com.mongodb.OutMessage: com.mongodb.OutMessage query(int,java.lang.String,int,int,com.mongodb.DBObject,com.mongodb.DBObject)>(0, $r5, 0, $i3, r6, null);

     label1:
        $r9 = virtualinvoke r1.<com.mongodb.DB: com.mongodb.DBCollection getCollection(java.lang.String)>("$cmd");

        $r10 = specialinvoke r8.<com.mongodb.DBPort: com.mongodb.Response go(com.mongodb.OutMessage,com.mongodb.DBCollection)>($r7, $r9);

        $i0 = virtualinvoke $r10.<com.mongodb.Response: int size()>();

        if $i0 == 1 goto label2;

        $r27 = new com.mongodb.MongoInternalException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("something is wrong.  size:");

        $i1 = virtualinvoke $r10.<com.mongodb.Response: int size()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<com.mongodb.MongoInternalException: void <init>(java.lang.String)>($r17);

        throw $r27;

     label2:
        $r11 = virtualinvoke $r10.<com.mongodb.Response: com.mongodb.DBObject get(int)>(0);

        $r12 = (com.mongodb.CommandResult) $r11;

     label3:
        return $r12;

     label4:
        $r18 := @caughtexception;

        $r29 = new com.mongodb.MongoInternalException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd failed: ");

        $r22 = virtualinvoke $r18.<java.io.IOException: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<com.mongodb.MongoInternalException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r18);

        throw $r29;

        catch java.io.IOException from label1 to label3 with label4;
    }

    synchronized com.mongodb.CommandResult tryGetLastError(com.mongodb.DB, long, com.mongodb.WriteConcern)
    {
        com.mongodb.DBPort r0;
        byte $b2;
        com.mongodb.CommandResult $r3;
        long l0, $l1;
        com.mongodb.DB r1;
        com.mongodb.WriteConcern r2;

        r0 := @this: com.mongodb.DBPort;

        r1 := @parameter0: com.mongodb.DB;

        l0 := @parameter1: long;

        r2 := @parameter2: com.mongodb.WriteConcern;

        $l1 = r0.<com.mongodb.DBPort: long _calls>;

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<com.mongodb.DBPort: com.mongodb.CommandResult getLastError(com.mongodb.DB,com.mongodb.WriteConcern)>(r1, r2);

        return $r3;
    }

    public synchronized void ensureOpen() throws java.io.IOException
    {
        com.mongodb.DBPort r0;
        java.net.Socket $r1;

        r0 := @this: com.mongodb.DBPort;

        $r1 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        if $r1 == null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.mongodb.DBPort: boolean _open()>();

        return;
    }

    boolean _open() throws java.io.IOException
    {
        com.mongodb.DBPort r0;
        java.io.BufferedInputStream $r41;
        byte $b4, $b6;
        boolean $z0, $z1;
        com.mongodb.MongoOptions $r2, $r6, $r29;
        java.util.logging.Logger $r23, $r32;
        java.net.InetSocketAddress $r3, $r17, $r26;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r25, $r27, $r33, $r34, $r35, $r36, $r37, $r42, $r44, $r45;
        com.mongodb.DBPortPool $r30, $r39;
        java.net.Socket $r4, $r5, $r7, $r9, $r11, $r40;
        long $l0, $l3, $l5, $l7, $l8, l9;
        java.util.logging.Level $r24;
        int $i1, $i2, $i10, $i11;
        java.lang.String $r21, $r28, $r38;
        java.io.OutputStream $r12;
        java.io.IOException $r13, $r43;
        java.io.InputStream $r10;

        r0 := @this: com.mongodb.DBPort;

        l9 = 100L;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label1:
        $r40 = new java.net.Socket;

        specialinvoke $r40.<java.net.Socket: void <init>()>();

        r0.<com.mongodb.DBPort: java.net.Socket _socket> = $r40;

        $r4 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        $r3 = r0.<com.mongodb.DBPort: java.net.InetSocketAddress _addr>;

        $r2 = r0.<com.mongodb.DBPort: com.mongodb.MongoOptions _options>;

        $i1 = $r2.<com.mongodb.MongoOptions: int connectTimeout>;

        virtualinvoke $r4.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r3, $i1);

        $r5 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        virtualinvoke $r5.<java.net.Socket: void setTcpNoDelay(boolean)>(1);

        $r7 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        $r6 = r0.<com.mongodb.DBPort: com.mongodb.MongoOptions _options>;

        $i2 = $r6.<com.mongodb.MongoOptions: int socketTimeout>;

        virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2);

        $r41 = new java.io.BufferedInputStream;

        $r9 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        $r10 = virtualinvoke $r9.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r41.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r10);

        r0.<com.mongodb.DBPort: java.io.InputStream _in> = $r41;

        $r11 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        $r12 = virtualinvoke $r11.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        r0.<com.mongodb.DBPort: java.io.OutputStream _out> = $r12;

     label2:
        return 1;

     label3:
        $r13 := @caughtexception;

        $r43 = new java.io.IOException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t connect to [");

        $r17 = r0.<com.mongodb.DBPort: java.net.InetSocketAddress _addr>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] bc:");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>($r21);

        $r23 = r0.<com.mongodb.DBPort: java.util.logging.Logger _logger>;

        $r24 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connect fail to : ");

        $r26 = r0.<com.mongodb.DBPort: java.net.InetSocketAddress _addr>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r24, $r28, $r13);

        virtualinvoke r0.<com.mongodb.DBPort: void close()>();

        $r29 = r0.<com.mongodb.DBPort: com.mongodb.MongoOptions _options>;

        $z0 = $r29.<com.mongodb.MongoOptions: boolean autoConnectRetry>;

        if $z0 == 0 goto label4;

        $r30 = r0.<com.mongodb.DBPort: com.mongodb.DBPortPool _pool>;

        if $r30 == null goto label5;

        $r39 = r0.<com.mongodb.DBPort: com.mongodb.DBPortPool _pool>;

        $z1 = $r39.<com.mongodb.DBPortPool: boolean _everWorked>;

        if $z1 != 0 goto label5;

     label4:
        throw $r43;

     label5:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l8 = $l3 - $l0;

        $b4 = $l8 cmp 15000L;

        $i10 = (int) $b4;

        if $i10 < 0 goto label6;

        throw $r43;

     label6:
        $l5 = l9 + $l8;

        $b6 = $l5 cmp 15000L;

        $i11 = (int) $b6;

        if $i11 <= 0 goto label7;

        l9 = 15000L - $l8;

     label7:
        $r32 = r0.<com.mongodb.DBPort: java.util.logging.Logger _logger>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("going to sleep and retry.  total sleep time after = ");

        $l7 = $l8 + $l8;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms  this time:");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.logging.Logger: void severe(java.lang.String)>($r38);

        staticinvoke <com.mongodb.util.ThreadUtil: void sleep(long)>(l9);

        l9 = l9 * 2L;

        goto label1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int hashCode()
    {
        com.mongodb.DBPort r0;
        int $i0;

        r0 := @this: com.mongodb.DBPort;

        $i0 = r0.<com.mongodb.DBPort: int _hashCode>;

        return $i0;
    }

    public java.lang.String host()
    {
        com.mongodb.DBPort r0;
        java.lang.String $r2;
        java.net.InetSocketAddress $r1;

        r0 := @this: com.mongodb.DBPort;

        $r1 = r0.<com.mongodb.DBPort: java.net.InetSocketAddress _addr>;

        $r2 = virtualinvoke $r1.<java.net.InetSocketAddress: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        com.mongodb.DBPort r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: com.mongodb.DBPort;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{DBPort  ");

        $r3 = virtualinvoke r2.<com.mongodb.DBPort: java.lang.String host()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    protected void finalize()
    {
        com.mongodb.DBPort r0;

        r0 := @this: com.mongodb.DBPort;

        virtualinvoke r0.<com.mongodb.DBPort: void close()>();

        return;
    }

    protected void close()
    {
        com.mongodb.DBPort r0;
        java.net.Socket $r2, $r3;
        java.util.Map $r1;
        java.lang.Exception $r4;

        r0 := @this: com.mongodb.DBPort;

        $r1 = r0.<com.mongodb.DBPort: java.util.Map _authed>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<com.mongodb.DBPort: java.net.Socket _socket>;

        virtualinvoke $r3.<java.net.Socket: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        r0.<com.mongodb.DBPort: java.io.InputStream _in> = null;

        r0.<com.mongodb.DBPort: java.io.OutputStream _out> = null;

        r0.<com.mongodb.DBPort: java.net.Socket _socket> = null;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void checkAuth(com.mongodb.DB)
    {
        com.mongodb.DBPort r2;
        com.mongodb.MongoInternalException $r12;
        com.mongodb.CommandResult $r6, $r9;
        java.lang.Integer $r5;
        com.mongodb.DBObject $r8;
        java.util.Map $r3, $r10;
        java.lang.Boolean $r11;
        java.lang.String $r1, $r7, $r13;
        boolean $z0, $z1, $z2;
        com.mongodb.Mongo $r14;
        com.mongodb.BasicDBObject $r4;
        com.mongodb.DB r0, $r15;

        r2 := @this: com.mongodb.DBPort;

        r0 := @parameter0: com.mongodb.DB;

        $r1 = r0.<com.mongodb.DB: java.lang.String _username>;

        if $r1 != null goto label2;

        $r13 = r0.<com.mongodb.DB: java.lang.String _name>;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("admin");

        if $z2 == 0 goto label1;

        return;

     label1:
        $r14 = r0.<com.mongodb.DB: com.mongodb.Mongo _mongo>;

        $r15 = virtualinvoke $r14.<com.mongodb.Mongo: com.mongodb.DB getDB(java.lang.String)>("admin");

        virtualinvoke r2.<com.mongodb.DBPort: void checkAuth(com.mongodb.DB)>($r15);

        return;

     label2:
        $r3 = r2.<com.mongodb.DBPort: java.util.Map _authed>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        return;

     label3:
        staticinvoke <com.mongodb.OutMessage: void newTL()>();

        $r4 = new com.mongodb.BasicDBObject;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r4.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("getnonce", $r5);

        $r6 = virtualinvoke r2.<com.mongodb.DBPort: com.mongodb.CommandResult runCommand(com.mongodb.DB,com.mongodb.DBObject)>(r0, $r4);

        virtualinvoke $r6.<com.mongodb.CommandResult: void throwOnError()>();

        $r7 = virtualinvoke $r6.<com.mongodb.CommandResult: java.lang.String getString(java.lang.String)>("nonce");

        $r8 = virtualinvoke r0.<com.mongodb.DB: com.mongodb.DBObject _authCommand(java.lang.String)>($r7);

        $r9 = virtualinvoke r2.<com.mongodb.DBPort: com.mongodb.CommandResult runCommand(com.mongodb.DB,com.mongodb.DBObject)>(r0, $r8);

        $z1 = virtualinvoke $r9.<com.mongodb.CommandResult: boolean ok()>();

        if $z1 != 0 goto label4;

        $r12 = new com.mongodb.MongoInternalException;

        specialinvoke $r12.<com.mongodb.MongoInternalException: void <init>(java.lang.String)>("couldn\'t re-auth");

        throw $r12;

     label4:
        $r10 = r2.<com.mongodb.DBPort: java.util.Map _authed>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r11);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <com.mongodb.DBPort: long CONN_RETRY_TIME_MS> = 15000L;

        <com.mongodb.DBPort: boolean USE_NAGLE> = 0;

        <com.mongodb.DBPort: int PORT> = 27017;

        $r0 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("com.mongodb.port");

        <com.mongodb.DBPort: java.util.logging.Logger _rootLogger> = $r0;

        return;
    }
}
