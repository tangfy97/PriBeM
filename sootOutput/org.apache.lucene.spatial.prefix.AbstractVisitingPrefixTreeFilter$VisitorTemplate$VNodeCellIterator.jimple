class org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator cellIter;
    private final org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode vNode;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate this$1;

    void <init>(org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate, java.util.Iterator, org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode)
    {
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate r1;
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator r0;
        java.util.Iterator r2;
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode r3;

        r0 := @this: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate;

        r2 := @parameter1: java.util.Iterator;

        r3 := @parameter2: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode;

        r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: java.util.Iterator cellIter> = r2;

        r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode vNode> = r3;

        return;
    }

    public boolean hasNext()
    {
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator;

        $r1 = r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: java.util.Iterator cellIter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode next()
    {
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator r0;
        java.util.Iterator $r1;
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode $r2, $r5;
        java.lang.AssertionError $r6;
        org.apache.lucene.spatial.prefix.tree.Cell $r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator;

        $z0 = <org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode vNode>;

        $r1 = r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: java.util.Iterator cellIter>;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.apache.lucene.spatial.prefix.tree.Cell) $r3;

        virtualinvoke $r2.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode: void reset(org.apache.lucene.spatial.prefix.tree.Cell)>($r4);

        $r5 = r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode vNode>;

        return $r5;
    }

    public void remove()
    {
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator r0;

        r0 := @this: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator;

        return;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode $r1;
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator r0;

        r0 := @this: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode next()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate$VNodeCellIterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
