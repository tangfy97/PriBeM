public enum class org.jdesktop.swingx.ScrollableSizeHint extends java.lang.Enum
{
    public static final enum org.jdesktop.swingx.ScrollableSizeHint NONE;
    public static final enum org.jdesktop.swingx.ScrollableSizeHint FIT;
    public static final enum org.jdesktop.swingx.ScrollableSizeHint HORIZONTAL_STRETCH;
    public static final enum org.jdesktop.swingx.ScrollableSizeHint VERTICAL_STRETCH;
    final boolean tracks;
    final int orientation;
    private static final org.jdesktop.swingx.ScrollableSizeHint[] $VALUES;

    public static org.jdesktop.swingx.ScrollableSizeHint[] values()
    {
        java.lang.Object $r1;
        org.jdesktop.swingx.ScrollableSizeHint[] $r0, $r2;

        $r0 = <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.jdesktop.swingx.ScrollableSizeHint[]) $r1;

        return $r2;
    }

    public static org.jdesktop.swingx.ScrollableSizeHint valueOf(java.lang.String)
    {
        org.jdesktop.swingx.ScrollableSizeHint $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jdesktop/swingx/ScrollableSizeHint;", r0);

        $r2 = (org.jdesktop.swingx.ScrollableSizeHint) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        org.jdesktop.swingx.ScrollableSizeHint r0;
        int i0, $i2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i2 = (int) -1;

        specialinvoke r0.<org.jdesktop.swingx.ScrollableSizeHint: void <init>(java.lang.String,int,boolean,int)>(r1, i0, z0, $i2);

        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.jdesktop.swingx.ScrollableSizeHint r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.jdesktop.swingx.ScrollableSizeHint: void <init>(java.lang.String,int,boolean,int)>(r1, i0, 0, i1);

        return;
    }

    private void <init>(java.lang.String, int, boolean, int)
    {
        org.jdesktop.swingx.ScrollableSizeHint r0;
        int i0, i1;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.jdesktop.swingx.ScrollableSizeHint: boolean tracks> = z0;

        r0.<org.jdesktop.swingx.ScrollableSizeHint: int orientation> = i1;

        return;
    }

    public boolean getTracksParentSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        org.jdesktop.swingx.ScrollableSizeHint r1;
        int $i0;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        r0 := @parameter0: javax.swing.JComponent;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "component must be not-null");

        $i0 = r1.<org.jdesktop.swingx.ScrollableSizeHint: int orientation>;

        if $i0 >= 0 goto label1;

        $z1 = r1.<org.jdesktop.swingx.ScrollableSizeHint: boolean tracks>;

        return $z1;

     label1:
        $z0 = virtualinvoke r1.<org.jdesktop.swingx.ScrollableSizeHint: boolean isSmallerThanParent(javax.swing.JComponent)>(r0);

        return $z0;
    }

    public boolean isHorizontalCompatible()
    {
        org.jdesktop.swingx.ScrollableSizeHint r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        $i0 = r0.<org.jdesktop.swingx.ScrollableSizeHint: int orientation>;

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $i1 = r0.<org.jdesktop.swingx.ScrollableSizeHint: int orientation>;

        if 0 != $i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isVerticalCompatible()
    {
        org.jdesktop.swingx.ScrollableSizeHint r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        $i0 = r0.<org.jdesktop.swingx.ScrollableSizeHint: int orientation>;

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $i1 = r0.<org.jdesktop.swingx.ScrollableSizeHint: int orientation>;

        if 1 != $i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    boolean isSmallerThanParent(javax.swing.JComponent)
    {
        org.jdesktop.swingx.ScrollableSizeHint r0;
        javax.swing.JComponent r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        r1 := @parameter0: javax.swing.JComponent;

        $z0 = r0.<org.jdesktop.swingx.ScrollableSizeHint: boolean tracks>;

        return $z0;
    }

    void <init>(java.lang.String, int, int, org.jdesktop.swingx.ScrollableSizeHint$1)
    {
        org.jdesktop.swingx.ScrollableSizeHint r0;
        org.jdesktop.swingx.ScrollableSizeHint$1 r2;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.ScrollableSizeHint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.jdesktop.swingx.ScrollableSizeHint$1;

        specialinvoke r0.<org.jdesktop.swingx.ScrollableSizeHint: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.ScrollableSizeHint $r0, $r1, $r5, $r6, $r7, $r8;
        org.jdesktop.swingx.ScrollableSizeHint$1 $r2;
        org.jdesktop.swingx.ScrollableSizeHint$2 $r3;
        org.jdesktop.swingx.ScrollableSizeHint[] $r4;

        $r0 = new org.jdesktop.swingx.ScrollableSizeHint;

        specialinvoke $r0.<org.jdesktop.swingx.ScrollableSizeHint: void <init>(java.lang.String,int,boolean)>("NONE", 0, 0);

        <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint NONE> = $r0;

        $r1 = new org.jdesktop.swingx.ScrollableSizeHint;

        specialinvoke $r1.<org.jdesktop.swingx.ScrollableSizeHint: void <init>(java.lang.String,int,boolean)>("FIT", 1, 1);

        <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint FIT> = $r1;

        $r2 = new org.jdesktop.swingx.ScrollableSizeHint$1;

        specialinvoke $r2.<org.jdesktop.swingx.ScrollableSizeHint$1: void <init>(java.lang.String,int,int)>("HORIZONTAL_STRETCH", 2, 0);

        <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint HORIZONTAL_STRETCH> = $r2;

        $r3 = new org.jdesktop.swingx.ScrollableSizeHint$2;

        specialinvoke $r3.<org.jdesktop.swingx.ScrollableSizeHint$2: void <init>(java.lang.String,int,int)>("VERTICAL_STRETCH", 3, 1);

        <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint VERTICAL_STRETCH> = $r3;

        $r4 = newarray (org.jdesktop.swingx.ScrollableSizeHint)[4];

        $r5 = <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint NONE>;

        $r4[0] = $r5;

        $r6 = <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint FIT>;

        $r4[1] = $r6;

        $r7 = <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint HORIZONTAL_STRETCH>;

        $r4[2] = $r7;

        $r8 = <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint VERTICAL_STRETCH>;

        $r4[3] = $r8;

        <org.jdesktop.swingx.ScrollableSizeHint: org.jdesktop.swingx.ScrollableSizeHint[] $VALUES> = $r4;

        return;
    }
}
