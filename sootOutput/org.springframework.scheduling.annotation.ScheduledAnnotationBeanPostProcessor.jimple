public class org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor extends java.lang.Object implements org.springframework.beans.factory.config.BeanPostProcessor, org.springframework.core.Ordered, org.springframework.context.EmbeddedValueResolverAware, org.springframework.context.ApplicationContextAware, org.springframework.context.ApplicationListener, org.springframework.beans.factory.DisposableBean
{
    private java.lang.Object scheduler;
    private org.springframework.util.StringValueResolver embeddedValueResolver;
    private org.springframework.context.ApplicationContext applicationContext;
    private final org.springframework.scheduling.config.ScheduledTaskRegistrar registrar;
    private final java.util.Map cronTasks;
    private final java.util.Map fixedDelayTasks;
    private final java.util.Map fixedRateTasks;

    public void <init>()
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;
        org.springframework.scheduling.config.ScheduledTaskRegistrar $r1;
        java.util.HashMap $r2, $r3, $r4;

        r0 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.scheduling.config.ScheduledTaskRegistrar;

        specialinvoke $r1.<org.springframework.scheduling.config.ScheduledTaskRegistrar: void <init>()>();

        r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map cronTasks> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map fixedDelayTasks> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map fixedRateTasks> = $r4;

        return;
    }

    public void setScheduler(java.lang.Object)
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;
        java.lang.Object r1;

        r0 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        r1 := @parameter0: java.lang.Object;

        r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.lang.Object scheduler> = r1;

        return;
    }

    public void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)
    {
        org.springframework.util.StringValueResolver r1;
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        r1 := @parameter0: org.springframework.util.StringValueResolver;

        r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.util.StringValueResolver embeddedValueResolver> = r1;

        return;
    }

    public void setApplicationContext(org.springframework.context.ApplicationContext)
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;
        org.springframework.context.ApplicationContext r1;

        r0 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.context.ApplicationContext applicationContext> = r1;

        return;
    }

    public int getOrder()
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        return 2147483647;
    }

    public java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r1;
        java.lang.String r2;

        r1 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        return r0;
    }

    public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String)
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r3;
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor$1 $r2;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String r4;

        r3 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.springframework.aop.support.AopUtils: java.lang.Class getTargetClass(java.lang.Object)>(r0);

        $r2 = new org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor$1;

        specialinvoke $r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor$1: void <init>(org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor,java.lang.Object)>(r3, r0);

        staticinvoke <org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback)>($r1, $r2);

        return r0;
    }

    public void onApplicationEvent(org.springframework.context.event.ContextRefreshedEvent)
    {
        org.springframework.context.ApplicationContext $r1, $r3;
        org.springframework.context.event.ContextRefreshedEvent r0;
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r2;
        java.util.Map $r5, $r7, $r9;
        org.springframework.scheduling.config.ScheduledTaskRegistrar $r6, $r8, $r10, $r11, $r13;
        java.lang.Object $r4, $r12;

        r2 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        r0 := @parameter0: org.springframework.context.event.ContextRefreshedEvent;

        $r1 = virtualinvoke r0.<org.springframework.context.event.ContextRefreshedEvent: org.springframework.context.ApplicationContext getApplicationContext()>();

        $r3 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.context.ApplicationContext applicationContext>;

        if $r1 != $r3 goto label2;

        $r4 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.lang.Object scheduler>;

        if $r4 == null goto label1;

        $r13 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar>;

        $r12 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.lang.Object scheduler>;

        virtualinvoke $r13.<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setScheduler(java.lang.Object)>($r12);

     label1:
        $r6 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar>;

        $r5 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map cronTasks>;

        virtualinvoke $r6.<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setCronTasks(java.util.Map)>($r5);

        $r8 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar>;

        $r7 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map fixedDelayTasks>;

        virtualinvoke $r8.<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setFixedDelayTasks(java.util.Map)>($r7);

        $r10 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar>;

        $r9 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map fixedRateTasks>;

        virtualinvoke $r10.<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setFixedRateTasks(java.util.Map)>($r9);

        $r11 = r2.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar>;

        virtualinvoke $r11.<org.springframework.scheduling.config.ScheduledTaskRegistrar: void afterPropertiesSet()>();

     label2:
        return;
    }

    public void destroy() throws java.lang.Exception
    {
        org.springframework.scheduling.config.ScheduledTaskRegistrar $r1, $r2;
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.scheduling.config.ScheduledTaskRegistrar registrar>;

        virtualinvoke $r2.<org.springframework.scheduling.config.ScheduledTaskRegistrar: void destroy()>();

     label1:
        return;
    }

    public volatile void onApplicationEvent(org.springframework.context.ApplicationEvent)
    {
        org.springframework.context.ApplicationEvent r1;
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;
        org.springframework.context.event.ContextRefreshedEvent $r2;

        r0 := @this: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        r1 := @parameter0: org.springframework.context.ApplicationEvent;

        $r2 = (org.springframework.context.event.ContextRefreshedEvent) r1;

        virtualinvoke r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: void onApplicationEvent(org.springframework.context.event.ContextRefreshedEvent)>($r2);

        return;
    }

    static org.springframework.util.StringValueResolver access$1(org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor)
    {
        org.springframework.util.StringValueResolver $r1;
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;

        r0 := @parameter0: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: org.springframework.util.StringValueResolver embeddedValueResolver>;

        return $r1;
    }

    static java.util.Map access$2(org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor)
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;
        java.util.Map $r1;

        r0 := @parameter0: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map cronTasks>;

        return $r1;
    }

    static java.util.Map access$3(org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor)
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;
        java.util.Map $r1;

        r0 := @parameter0: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map fixedDelayTasks>;

        return $r1;
    }

    static java.util.Map access$4(org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor)
    {
        org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor r0;
        java.util.Map $r1;

        r0 := @parameter0: org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.scheduling.'annotation'.ScheduledAnnotationBeanPostProcessor: java.util.Map fixedRateTasks>;

        return $r1;
    }
}
