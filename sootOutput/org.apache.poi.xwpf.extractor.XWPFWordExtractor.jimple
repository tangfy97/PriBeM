public class org.apache.poi.xwpf.extractor.XWPFWordExtractor extends org.apache.poi.POIXMLTextExtractor
{
    public static final org.apache.poi.xwpf.usermodel.XWPFRelation[] SUPPORTED_TYPES;
    private org.apache.poi.xwpf.usermodel.XWPFDocument document;
    private boolean fetchHyperlinks;

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage) throws org.apache.xmlbeans.XmlException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r0;
        org.apache.poi.xwpf.usermodel.XWPFDocument $r1;
        org.apache.poi.openxml4j.opc.OPCPackage r2;

        r0 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        r2 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        $r1 = new org.apache.poi.xwpf.usermodel.XWPFDocument;

        specialinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r2);

        specialinvoke r0.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void <init>(org.apache.poi.xwpf.usermodel.XWPFDocument)>($r1);

        return;
    }

    public void <init>(org.apache.poi.xwpf.usermodel.XWPFDocument)
    {
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r0;
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;

        r0 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        r1 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFDocument;

        specialinvoke r0.<org.apache.poi.POIXMLTextExtractor: void <init>(org.apache.poi.POIXMLDocument)>(r1);

        r0.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: boolean fetchHyperlinks> = 0;

        r0.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: org.apache.poi.xwpf.usermodel.XWPFDocument document> = r1;

        return;
    }

    public void setFetchHyperlinks(boolean)
    {
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: boolean fetchHyperlinks> = z0;

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r4, $r6, $r7;
        java.lang.String[] r0;
        org.apache.poi.xwpf.extractor.XWPFWordExtractor $r1;
        org.apache.poi.openxml4j.opc.OPCPackage $r3;
        int $i0;
        java.lang.String $r2, $r5;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Use:");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("  XWPFWordExtractor <filename.docx>");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        $r1 = new org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        $r2 = r0[0];

        $r3 = staticinvoke <org.apache.poi.POIXMLDocument: org.apache.poi.openxml4j.opc.OPCPackage openPackage(java.lang.String)>($r2);

        specialinvoke $r1.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r3);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r5 = virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: java.lang.String getText()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5);

        virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: void close()>();

        return;
    }

    public java.lang.String getText()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument $r2, $r4;
        java.util.Iterator $r6;
        org.apache.poi.xwpf.usermodel.IBodyElement r9;
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r1;
        java.util.List $r5;
        java.lang.StringBuffer $r0;
        java.lang.Object $r8;
        java.lang.String $r7;
        org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy $r3;
        boolean $z0;

        r1 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy getHeaderFooterPolicy()>();

        specialinvoke r1.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void extractHeaders(java.lang.StringBuffer,org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy)>($r0, $r3);

        $r4 = r1.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getBodyElements()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.poi.xwpf.usermodel.IBodyElement) $r8;

        virtualinvoke r1.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void appendBodyElementText(java.lang.StringBuffer,org.apache.poi.xwpf.usermodel.IBodyElement)>($r0, r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        goto label1;

     label2:
        specialinvoke r1.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void extractFooters(java.lang.StringBuffer,org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy)>($r0, $r3);

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public void appendBodyElementText(java.lang.StringBuffer, org.apache.poi.xwpf.usermodel.IBodyElement)
    {
        org.apache.poi.xwpf.usermodel.IBodyElement r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r7;
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r5;
        org.apache.poi.xwpf.usermodel.ISDTContent $r3;
        java.lang.StringBuffer r1;
        java.lang.String $r4;
        org.apache.poi.xwpf.usermodel.XWPFSDT $r2;
        boolean $z0, $z1, $z2;
        org.apache.poi.xwpf.usermodel.XWPFTable $r6;

        r5 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.apache.poi.xwpf.usermodel.IBodyElement;

        $z0 = r0 instanceof org.apache.poi.xwpf.usermodel.XWPFParagraph;

        if $z0 == 0 goto label1;

        $r7 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) r0;

        virtualinvoke r5.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void appendParagraphText(java.lang.StringBuffer,org.apache.poi.xwpf.usermodel.XWPFParagraph)>(r1, $r7);

        goto label3;

     label1:
        $z1 = r0 instanceof org.apache.poi.xwpf.usermodel.XWPFTable;

        if $z1 == 0 goto label2;

        $r6 = (org.apache.poi.xwpf.usermodel.XWPFTable) r0;

        specialinvoke r5.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void appendTableText(java.lang.StringBuffer,org.apache.poi.xwpf.usermodel.XWPFTable)>(r1, $r6);

        goto label3;

     label2:
        $z2 = r0 instanceof org.apache.poi.xwpf.usermodel.XWPFSDT;

        if $z2 == 0 goto label3;

        $r2 = (org.apache.poi.xwpf.usermodel.XWPFSDT) r0;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSDT: org.apache.poi.xwpf.usermodel.ISDTContent getContent()>();

        $r4 = interfaceinvoke $r3.<org.apache.poi.xwpf.usermodel.ISDTContent: java.lang.String getText()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label3:
        return;
    }

    public void appendParagraphText(java.lang.StringBuffer, org.apache.poi.xwpf.usermodel.XWPFParagraph)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument $r17, $r27;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSectPr r34;
        org.apache.poi.xwpf.usermodel.XWPFHyperlink $r19;
        boolean $z0, $z1, $z2;
        org.apache.poi.xwpf.usermodel.XWPFRun r36;
        java.util.List $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r28;
        java.lang.StringBuilder $r10, $r11, $r12, $r20, $r21, $r23, $r24;
        java.lang.StringBuffer r9, $r14;
        int $i0, $i1;
        java.lang.String $r6, $r7, $r13, $r16, $r22, $r25;
        org.apache.poi.POIXMLException $r31, $r33;
        org.apache.poi.xwpf.model.XWPFCommentsDecorator $r5;
        java.util.Iterator $r4;
        java.io.IOException $r32;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r2, $r29;
        org.apache.xmlbeans.XmlException $r30;
        org.apache.poi.xwpf.usermodel.XWPFHyperlinkRun $r18;
        java.lang.Object $r15;
        org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy $r26, r35;

        r8 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        r9 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFParagraph;

     label01:
        r34 = null;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        if $r2 == null goto label02;

        $r28 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()>();

        $r29 = interfaceinvoke $r28.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        r34 = interfaceinvoke $r29.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSectPr getSectPr()>();

     label02:
        r35 = null;

        if r34 == null goto label03;

        $r26 = new org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;

        $r27 = r8.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        specialinvoke $r26.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: void <init>(org.apache.poi.xwpf.usermodel.XWPFDocument,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSectPr)>($r27, r34);

        r35 = $r26;

        specialinvoke r8.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void extractHeaders(java.lang.StringBuffer,org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy)>(r9, $r26);

     label03:
        $r3 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List getRuns()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.apache.poi.xwpf.usermodel.XWPFRun) $r15;

        $r16 = virtualinvoke r36.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $z0 = r36 instanceof org.apache.poi.xwpf.usermodel.XWPFHyperlinkRun;

        if $z0 == 0 goto label05;

        $z1 = r8.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: boolean fetchHyperlinks>;

        if $z1 == 0 goto label05;

        $r18 = (org.apache.poi.xwpf.usermodel.XWPFHyperlinkRun) r36;

        $r17 = r8.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        $r19 = virtualinvoke $r18.<org.apache.poi.xwpf.usermodel.XWPFHyperlinkRun: org.apache.poi.xwpf.usermodel.XWPFHyperlink getHyperlink(org.apache.poi.xwpf.usermodel.XWPFDocument)>($r17);

        if $r19 == null goto label05;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <");

        $r22 = virtualinvoke $r19.<org.apache.poi.xwpf.usermodel.XWPFHyperlink: java.lang.String getURL()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

     label05:
        goto label04;

     label06:
        $r5 = new org.apache.poi.xwpf.model.XWPFCommentsDecorator;

        specialinvoke $r5.<org.apache.poi.xwpf.model.XWPFCommentsDecorator: void <init>(org.apache.poi.xwpf.usermodel.XWPFParagraph,org.apache.poi.xwpf.model.XWPFParagraphDecorator)>(r0, null);

        $r6 = virtualinvoke $r5.<org.apache.poi.xwpf.model.XWPFCommentsDecorator: java.lang.String getCommentText()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label07;

        $r14 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label07:
        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getFootnoteText()>();

        if $r7 == null goto label08;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 <= 0 goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label08:
        if r34 == null goto label09;

        specialinvoke r8.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void extractFooters(java.lang.StringBuffer,org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy)>(r9, r35);

     label09:
        goto label12;

     label10:
        $r32 := @caughtexception;

        $r33 = new org.apache.poi.POIXMLException;

        specialinvoke $r33.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r32);

        throw $r33;

     label11:
        $r30 := @caughtexception;

        $r31 = new org.apache.poi.POIXMLException;

        specialinvoke $r31.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r30);

        throw $r31;

     label12:
        return;

        catch java.io.IOException from label01 to label09 with label10;
        catch org.apache.xmlbeans.XmlException from label01 to label09 with label11;
    }

    private void appendTableText(java.lang.StringBuffer, org.apache.poi.xwpf.usermodel.XWPFTable)
    {
        org.apache.poi.xwpf.usermodel.ICell r8;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r4;
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r14;
        org.apache.poi.xwpf.usermodel.XWPFSDTCell $r9;
        java.lang.StringBuffer r6;
        int $i0, i1, $i2, $i3;
        java.lang.String $r11, $r13;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r12;
        java.util.List $r1, $r5;
        org.apache.poi.xwpf.usermodel.ISDTContent $r10;
        java.lang.Object $r3, $r7;

        r14 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        r6 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List getRows()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xwpf.usermodel.XWPFTableRow) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List getTableICells()>();

        i1 = 0;

     label2:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label6;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (org.apache.poi.xwpf.usermodel.ICell) $r7;

        $z1 = r8 instanceof org.apache.poi.xwpf.usermodel.XWPFTableCell;

        if $z1 == 0 goto label3;

        $r12 = (org.apache.poi.xwpf.usermodel.XWPFTableCell) r8;

        $r13 = virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.lang.String getTextRecursively()>();

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label4;

     label3:
        $z2 = r8 instanceof org.apache.poi.xwpf.usermodel.XWPFSDTCell;

        if $z2 == 0 goto label4;

        $r9 = (org.apache.poi.xwpf.usermodel.XWPFSDTCell) r8;

        $r10 = virtualinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFSDTCell: org.apache.poi.xwpf.usermodel.ISDTContent getContent()>();

        $r11 = interfaceinvoke $r10.<org.apache.poi.xwpf.usermodel.ISDTContent: java.lang.String getText()>();

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label4:
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        if i1 >= $i3 goto label5;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        goto label1;

     label7:
        return;
    }

    private void extractFooters(java.lang.StringBuffer, org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy)
    {
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r11;
        java.lang.StringBuffer r4;
        org.apache.poi.xwpf.usermodel.XWPFFooter $r1, $r2, $r3, $r5, $r7, $r9;
        java.lang.String $r6, $r8, $r10;
        org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy r0;

        r11 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        r4 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFFooter getFirstPageFooter()>();

        if $r1 == null goto label2;

        $r9 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFFooter getFirstPageFooter()>();

        $r10 = virtualinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFFooter: java.lang.String getText()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label2:
        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFFooter getEvenPageFooter()>();

        if $r2 == null goto label3;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFFooter getEvenPageFooter()>();

        $r8 = virtualinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFFooter: java.lang.String getText()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label3:
        $r3 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFFooter getDefaultFooter()>();

        if $r3 == null goto label4;

        $r5 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFFooter getDefaultFooter()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.xwpf.usermodel.XWPFFooter: java.lang.String getText()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label4:
        return;
    }

    private void extractHeaders(java.lang.StringBuffer, org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy)
    {
        org.apache.poi.xwpf.usermodel.XWPFHeader $r1, $r2, $r3, $r5, $r7, $r9;
        org.apache.poi.xwpf.extractor.XWPFWordExtractor r11;
        java.lang.StringBuffer r4;
        java.lang.String $r6, $r8, $r10;
        org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy r0;

        r11 := @this: org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        r4 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFHeader getFirstPageHeader()>();

        if $r1 == null goto label2;

        $r9 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFHeader getFirstPageHeader()>();

        $r10 = virtualinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFHeader: java.lang.String getText()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label2:
        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFHeader getEvenPageHeader()>();

        if $r2 == null goto label3;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFHeader getEvenPageHeader()>();

        $r8 = virtualinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFHeader: java.lang.String getText()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label3:
        $r3 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFHeader getDefaultHeader()>();

        if $r3 == null goto label4;

        $r5 = virtualinvoke r0.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: org.apache.poi.xwpf.usermodel.XWPFHeader getDefaultHeader()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.xwpf.usermodel.XWPFHeader: java.lang.String getText()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label4:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.xwpf.usermodel.XWPFRelation[] $r0;
        org.apache.poi.xwpf.usermodel.XWPFRelation $r1, $r2, $r3, $r4;

        $r0 = newarray (org.apache.poi.xwpf.usermodel.XWPFRelation)[4];

        $r1 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation DOCUMENT>;

        $r0[0] = $r1;

        $r2 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation TEMPLATE>;

        $r0[1] = $r2;

        $r3 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation MACRO_DOCUMENT>;

        $r0[2] = $r3;

        $r4 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation MACRO_TEMPLATE_DOCUMENT>;

        $r0[3] = $r4;

        <org.apache.poi.xwpf.extractor.XWPFWordExtractor: org.apache.poi.xwpf.usermodel.XWPFRelation[] SUPPORTED_TYPES> = $r0;

        return;
    }
}
