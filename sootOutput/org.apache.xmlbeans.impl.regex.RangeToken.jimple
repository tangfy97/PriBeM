final class org.apache.xmlbeans.impl.regex.RangeToken extends org.apache.xmlbeans.impl.regex.Token implements java.io.Serializable
{
    int[] ranges;
    boolean sorted;
    boolean compacted;
    org.apache.xmlbeans.impl.regex.RangeToken icaseCache;
    int[] map;
    int nonMapIndex;
    private static final int MAPSIZE;

    void <init>(int)
    {
        int i0;
        org.apache.xmlbeans.impl.regex.RangeToken r0;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.Token: void <init>(int)>(i0);

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache> = null;

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] map> = null;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: void setSorted(boolean)>(0);

        return;
    }

    protected void addRange(int, int)
    {
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        int[] $r1, $r2, $r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache> = null;

        if i0 > i1 goto label1;

        i9 = i0;

        i10 = i1;

        goto label2;

     label1:
        i9 = i1;

        i10 = i0;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r1 != null goto label3;

        $r10 = newarray (int)[2];

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = $r10;

        $r11 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r11[0] = i9;

        $r12 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r12[1] = i10;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: void setSorted(boolean)>(1);

        goto label6;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i11 = lengthof $r2;

        $r3 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i2 = i11 - 1;

        $i3 = $r3[$i2];

        $i4 = $i3 + 1;

        if $i4 != i9 goto label4;

        $r9 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i8 = i11 - 1;

        $r9[$i8] = i10;

        return;

     label4:
        $i5 = i11 + 2;

        r4 = newarray (int)[$i5];

        $r5 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, i11);

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = r4;

        $r6 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i6 = i11 - 1;

        $i7 = $r6[$i6];

        if $i7 < i9 goto label5;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: void setSorted(boolean)>(0);

     label5:
        $r7 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i12 = i11 + 1;

        $r7[i11] = i9;

        $r8 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r8[i12] = i10;

        $z0 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean sorted>;

        if $z0 != 0 goto label6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

     label6:
        return;
    }

    private final boolean isSorted()
    {
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        $z0 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean sorted>;

        return $z0;
    }

    private final void setSorted(boolean)
    {
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean sorted> = z0;

        if z0 != 0 goto label1;

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean compacted> = 0;

     label1:
        return;
    }

    private final boolean isCompacted()
    {
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        $z0 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean compacted>;

        return $z0;
    }

    private final void setCompacted()
    {
        org.apache.xmlbeans.impl.regex.RangeToken r0;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean compacted> = 1;

        return;
    }

    protected void sortRanges()
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        boolean $z0;
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, $i24;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean isSorted()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r1 != null goto label2;

        return;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i0 = lengthof $r2;

        i21 = $i0 - 4;

     label3:
        if i21 < 0 goto label8;

        i22 = 0;

     label4:
        if i22 > i21 goto label7;

        $r3 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i3 = $r3[i22];

        $r4 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = i22 + 2;

        $i2 = $r4[$i1];

        if $i3 > $i2 goto label5;

        $r13 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i14 = $r13[i22];

        $r14 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i12 = i22 + 2;

        $i13 = $r14[$i12];

        if $i14 != $i13 goto label6;

        $r15 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i15 = i22 + 1;

        $i18 = $r15[$i15];

        $r16 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i16 = i22 + 3;

        $i17 = $r16[$i16];

        if $i18 <= $i17 goto label6;

     label5:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i4 = i22 + 2;

        $i19 = $r5[$i4];

        $r7 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i6 = i22 + 2;

        $r6 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i5 = $r6[i22];

        $r7[$i6] = $i5;

        $r8 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r8[i22] = $i19;

        $r9 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i7 = i22 + 3;

        $i20 = $r9[$i7];

        $r11 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i10 = i22 + 3;

        $r10 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i8 = i22 + 1;

        $i9 = $r10[$i8];

        $r11[$i10] = $i9;

        $r12 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i11 = i22 + 1;

        $r12[$i11] = $i20;

     label6:
        i22 = i22 + 2;

        goto label4;

     label7:
        $i24 = (int) -2;

        i21 = i21 + $i24;

        goto label3;

     label8:
        specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: void setSorted(boolean)>(1);

        return;
    }

    protected void compactRanges()
    {
        java.lang.StringBuffer $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r30, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r43, $r44, $r46, $r47, $r49, $r50, $r52, $r54, $r56, $r57, $r59, $r60, $r62, $r63, $r65, $r66, $r68, $r69, $r71, $r72, $r77, $r79, $r81, $r82, $r84, $r85, $r87, $r88, $r90, $r91, $r93, $r94, $r96, $r97;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r17, $r20, $r23, $r27, $r28, $r29, $r33, $r36, $r39, $r42, $r45, $r48, $r55, $r58, $r61, $r64, $r67, $r70, $r74, $r75, $r76, $r80, $r83, $r86, $r89, $r92, $r95, $r99, $r100, $r101, $r102, $r103, r104;
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, i56, i57, i58, i59, $i60;
        java.io.PrintStream $r31, $r53, $r78;
        java.lang.String $r26, $r51, $r73, $r98;
        java.lang.RuntimeException $r11;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        $r1 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r1 == null goto label01;

        $r2 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i0 = lengthof $r2;

        if $i0 > 2 goto label02;

     label01:
        return;

     label02:
        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: boolean isCompacted()>();

        if $z0 == 0 goto label03;

        return;

     label03:
        i56 = 0;

        i57 = 0;

     label04:
        $r3 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = lengthof $r3;

        if i57 >= $i1 goto label16;

        if i56 == i57 goto label05;

        $r100 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r99 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i58 = i57 + 1;

        $i53 = $r99[i57];

        $r100[i56] = $i53;

        $r102 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i55 = i56 + 1;

        $r101 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i57 = i58 + 1;

        $i54 = $r101[i58];

        $r102[$i55] = $i54;

        goto label06;

     label05:
        i57 = i57 + 2;

     label06:
        $r6 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i3 = i56 + 1;

        i59 = $r6[$i3];

     label07:
        $r103 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i60 = lengthof $r103;

        if i57 >= $i60 goto label15;

        $i5 = i59 + 1;

        $r7 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i4 = $r7[i57];

        if $i5 >= $i4 goto label08;

        goto label15;

     label08:
        $i7 = i59 + 1;

        $r8 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i6 = $r8[i57];

        if $i7 != $i6 goto label10;

        if 0 == 0 goto label09;

        $r78 = <java.lang.System: java.io.PrintStream err>;

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token#compactRanges(): Compaction: [");

        $r80 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i44 = $r80[i56];

        $r81 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i44);

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r83 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i45 = i56 + 1;

        $i46 = $r83[$i45];

        $r84 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i46);

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("], [");

        $r86 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i47 = $r86[i57];

        $r87 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i47);

        $r88 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r89 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i48 = i57 + 1;

        $i49 = $r89[$i48];

        $r90 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i49);

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] -> [");

        $r92 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i50 = $r92[i56];

        $r93 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i50);

        $r94 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r95 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i51 = i57 + 1;

        $i52 = $r95[$i51];

        $r96 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i52);

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r98);

     label09:
        $r75 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i42 = i56 + 1;

        $r74 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i40 = i57 + 1;

        $i41 = $r74[$i40];

        $r75[$i42] = $i41;

        $r76 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i43 = i56 + 1;

        i59 = $r76[$i43];

        i57 = i57 + 2;

        goto label07;

     label10:
        $r9 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i8 = i57 + 1;

        $i9 = $r9[$i8];

        if i59 < $i9 goto label12;

        if 0 == 0 goto label11;

        $r53 = <java.lang.System: java.io.PrintStream err>;

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token#compactRanges(): Compaction: [");

        $r55 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i31 = $r55[i56];

        $r56 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i31);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r58 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i32 = i56 + 1;

        $i33 = $r58[$i32];

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i33);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("], [");

        $r61 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i34 = $r61[i57];

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i34);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r64 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i35 = i57 + 1;

        $i36 = $r64[$i35];

        $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i36);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] -> [");

        $r67 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i37 = $r67[i56];

        $r68 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i37);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r70 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i38 = i56 + 1;

        $i39 = $r70[$i38];

        $r71 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i39);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r73);

     label11:
        i57 = i57 + 2;

        goto label07;

     label12:
        $r10 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i10 = i57 + 1;

        $i11 = $r10[$i10];

        if i59 >= $i11 goto label14;

        if 0 == 0 goto label13;

        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token#compactRanges(): Compaction: [");

        $r33 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i22 = $r33[i56];

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i22);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r36 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i23 = i56 + 1;

        $i24 = $r36[$i23];

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i24);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("], [");

        $r39 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i25 = $r39[i57];

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i25);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r42 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i26 = i57 + 1;

        $i27 = $r42[$i26];

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i27);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] -> [");

        $r45 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i28 = $r45[i56];

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i28);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r48 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i29 = i57 + 1;

        $i30 = $r48[$i29];

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i30);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r51);

     label13:
        $r28 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i20 = i56 + 1;

        $r27 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i18 = i57 + 1;

        $i19 = $r27[$i18];

        $r28[$i20] = $i19;

        $r29 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i21 = i56 + 1;

        i59 = $r29[$i21];

        i57 = i57 + 2;

        goto label07;

     label14:
        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token#compactRanges(): Internel Error: [");

        $r14 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i12 = $r14[i56];

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r17 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i13 = i56 + 1;

        $i14 = $r17[$i13];

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i14);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] [");

        $r20 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i15 = $r20[i57];

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i15);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r23 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i16 = i57 + 1;

        $i17 = $r23[$i16];

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i17);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26);

        throw $r11;

     label15:
        i56 = i56 + 2;

        goto label04;

     label16:
        $r4 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i2 = lengthof $r4;

        if i56 == $i2 goto label17;

        r104 = newarray (int)[i56];

        $r5 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r104, 0, i56);

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = r104;

     label17:
        specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: void setCompacted()>();

        return;
    }

    protected void mergeRanges(org.apache.xmlbeans.impl.regex.Token)
    {
        org.apache.xmlbeans.impl.regex.Token r0;
        int[] $r3, $r4, $r5, $r6, r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        org.apache.xmlbeans.impl.regex.RangeToken r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, $i27, i28, i29, i30, i31, i32, i33, i34, i35;

        r2 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        r0 := @parameter0: org.apache.xmlbeans.impl.regex.Token;

        r1 = (org.apache.xmlbeans.impl.regex.RangeToken) r0;

        virtualinvoke r2.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

        $r3 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r3 != null goto label1;

        return;

     label1:
        r2.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache> = null;

        specialinvoke r2.<org.apache.xmlbeans.impl.regex.RangeToken: void setSorted(boolean)>(1);

        $r4 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r4 != null goto label2;

        $r25 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i22 = lengthof $r25;

        $r26 = newarray (int)[$i22];

        r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = $r26;

        $r29 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r28 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r27 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i23 = lengthof $r27;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r29, 0, $r28, 0, $i23);

        return;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = lengthof $r5;

        $r6 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i0 = lengthof $r6;

        $i2 = $i1 + $i0;

        r7 = newarray (int)[$i2];

        i24 = 0;

        i25 = 0;

        i26 = 0;

     label3:
        $r30 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i27 = lengthof $r30;

        if i24 < $i27 goto label4;

        $r24 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i21 = lengthof $r24;

        if i25 >= $i21 goto label9;

     label4:
        $r8 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i3 = lengthof $r8;

        if i24 < $i3 goto label5;

        i28 = i26 + 1;

        $r22 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i29 = i25 + 1;

        $i19 = $r22[i25];

        r7[i26] = $i19;

        i26 = i28 + 1;

        $r23 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i25 = i29 + 1;

        $i20 = $r23[i29];

        r7[i28] = $i20;

        goto label3;

     label5:
        $r9 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i4 = lengthof $r9;

        if i25 < $i4 goto label6;

        i30 = i26 + 1;

        $r20 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i31 = i24 + 1;

        $i17 = $r20[i24];

        r7[i26] = $i17;

        i26 = i30 + 1;

        $r21 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i24 = i31 + 1;

        $i18 = $r21[i31];

        r7[i30] = $i18;

        goto label3;

     label6:
        $r10 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i6 = $r10[i25];

        $r11 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i5 = $r11[i24];

        if $i6 < $i5 goto label7;

        $r14 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i10 = $r14[i25];

        $r15 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i9 = $r15[i24];

        if $i10 != $i9 goto label8;

        $r18 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i13 = i25 + 1;

        $i16 = $r18[$i13];

        $r19 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i14 = i24 + 1;

        $i15 = $r19[$i14];

        if $i16 >= $i15 goto label8;

     label7:
        i32 = i26 + 1;

        $r12 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i33 = i25 + 1;

        $i7 = $r12[i25];

        r7[i26] = $i7;

        i26 = i32 + 1;

        $r13 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i25 = i33 + 1;

        $i8 = $r13[i33];

        r7[i32] = $i8;

        goto label3;

     label8:
        i34 = i26 + 1;

        $r16 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i35 = i24 + 1;

        $i11 = $r16[i24];

        r7[i26] = $i11;

        i26 = i34 + 1;

        $r17 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i24 = i35 + 1;

        $i12 = $r17[i35];

        r7[i34] = $i12;

        goto label3;

     label9:
        r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = r7;

        return;
    }

    protected void subtractRanges(org.apache.xmlbeans.impl.regex.Token)
    {
        org.apache.xmlbeans.impl.regex.Token r0;
        java.lang.StringBuffer $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32;
        java.lang.String $r33;
        java.lang.RuntimeException $r18;
        int[] $r2, $r4, $r5, $r6, r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r24, $r27, $r30, $r34, $r35, $r36, $r37, $r38;
        org.apache.xmlbeans.impl.regex.RangeToken r1, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, $i33, i34, i35;

        r3 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        r0 := @parameter0: org.apache.xmlbeans.impl.regex.Token;

        $i0 = r0.<org.apache.xmlbeans.impl.regex.Token: int type>;

        if $i0 != 5 goto label01;

        virtualinvoke r3.<org.apache.xmlbeans.impl.regex.RangeToken: void intersectRanges(org.apache.xmlbeans.impl.regex.Token)>(r0);

        return;

     label01:
        r1 = (org.apache.xmlbeans.impl.regex.RangeToken) r0;

        $r2 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r2 == null goto label02;

        $r4 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r4 != null goto label03;

     label02:
        return;

     label03:
        r3.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache> = null;

        virtualinvoke r3.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.regex.RangeToken: void compactRanges()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.regex.RangeToken: void compactRanges()>();

        $r5 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i2 = lengthof $r5;

        $r6 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = lengthof $r6;

        $i3 = $i2 + $i1;

        r7 = newarray (int)[$i3];

        i26 = 0;

        i27 = 0;

        i28 = 0;

     label04:
        $r8 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i4 = lengthof $r8;

        if i27 >= $i4 goto label12;

        $r13 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i7 = lengthof $r13;

        if i28 >= $i7 goto label12;

        $r14 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i8 = $r14[i27];

        $r15 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i9 = i27 + 1;

        i10 = $r15[$i9];

        $r16 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i11 = $r16[i28];

        $r17 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i12 = i28 + 1;

        i13 = $r17[$i12];

        if i10 >= i11 goto label05;

        i29 = i26 + 1;

        $r36 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i30 = i27 + 1;

        $i24 = $r36[i27];

        r7[i26] = $i24;

        i26 = i29 + 1;

        $r37 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i27 = i30 + 1;

        $i25 = $r37[i30];

        r7[i29] = $i25;

        goto label11;

     label05:
        if i10 < i11 goto label09;

        if i8 > i13 goto label09;

        if i11 > i8 goto label06;

        if i10 > i13 goto label06;

        i27 = i27 + 2;

        goto label11;

     label06:
        if i11 > i8 goto label07;

        $r35 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i23 = i13 + 1;

        $r35[i27] = $i23;

        i28 = i28 + 2;

        goto label11;

     label07:
        if i10 > i13 goto label08;

        i31 = i26 + 1;

        r7[i26] = i8;

        i26 = i31 + 1;

        $i22 = i11 - 1;

        r7[i31] = $i22;

        i27 = i27 + 2;

        goto label11;

     label08:
        i32 = i26 + 1;

        r7[i26] = i8;

        i26 = i32 + 1;

        $i20 = i11 - 1;

        r7[i32] = $i20;

        $r34 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i21 = i13 + 1;

        $r34[i27] = $i21;

        i28 = i28 + 2;

        goto label11;

     label09:
        if i13 >= i8 goto label10;

        i28 = i28 + 2;

        goto label11;

     label10:
        $r18 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token#subtractRanges(): Internal Error: [");

        $r21 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i14 = $r21[i27];

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i14);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r24 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i15 = i27 + 1;

        $i16 = $r24[$i15];

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i16);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] - [");

        $r27 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i17 = $r27[i28];

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i17);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r30 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i18 = i28 + 1;

        $i19 = $r30[$i18];

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i19);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r33);

        throw $r18;

     label11:
        goto label04;

     label12:
        $r38 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i33 = lengthof $r38;

        if i27 >= $i33 goto label13;

        i34 = i26 + 1;

        $r11 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i35 = i27 + 1;

        $i5 = $r11[i27];

        r7[i26] = $i5;

        i26 = i34 + 1;

        $r12 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i27 = i35 + 1;

        $i6 = $r12[i35];

        r7[i34] = $i6;

        goto label12;

     label13:
        $r9 = newarray (int)[i26];

        r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = $r9;

        $r10 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, $r10, 0, i26);

        return;
    }

    protected void intersectRanges(org.apache.xmlbeans.impl.regex.Token)
    {
        org.apache.xmlbeans.impl.regex.Token r0;
        java.lang.StringBuffer $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32;
        java.lang.String $r33;
        java.lang.RuntimeException $r18;
        int[] $r2, $r4, $r5, $r6, r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r24, $r27, $r30, $r34, $r35, $r36;
        org.apache.xmlbeans.impl.regex.RangeToken r1, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, i27, $i28, i29, i30;

        r3 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        r0 := @parameter0: org.apache.xmlbeans.impl.regex.Token;

        r1 = (org.apache.xmlbeans.impl.regex.RangeToken) r0;

        $r2 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r2 == null goto label01;

        $r4 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r4 != null goto label02;

     label01:
        return;

     label02:
        r3.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache> = null;

        virtualinvoke r3.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.regex.RangeToken: void compactRanges()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.regex.RangeToken: void compactRanges()>();

        $r5 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = lengthof $r5;

        $r6 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i0 = lengthof $r6;

        $i2 = $i1 + $i0;

        r7 = newarray (int)[$i2];

        i21 = 0;

        i22 = 0;

        i23 = 0;

     label03:
        $r8 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i3 = lengthof $r8;

        if i22 >= $i3 goto label11;

        $r13 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i6 = lengthof $r13;

        if i23 >= $i6 goto label11;

        $r14 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i7 = $r14[i22];

        $r15 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i8 = i22 + 1;

        i9 = $r15[$i8];

        $r16 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i10 = $r16[i23];

        $r17 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i11 = i23 + 1;

        i12 = $r17[$i11];

        if i9 >= i10 goto label04;

        i22 = i22 + 2;

        goto label10;

     label04:
        if i9 < i10 goto label08;

        if i7 > i12 goto label08;

        if i10 > i10 goto label05;

        if i9 > i12 goto label05;

        i24 = i21 + 1;

        r7[i21] = i7;

        i21 = i24 + 1;

        r7[i24] = i9;

        i22 = i22 + 2;

        goto label10;

     label05:
        if i10 > i7 goto label06;

        i25 = i21 + 1;

        r7[i21] = i7;

        i21 = i25 + 1;

        r7[i25] = i12;

        $r35 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i20 = i12 + 1;

        $r35[i22] = $i20;

        i23 = i23 + 2;

        goto label10;

     label06:
        if i9 > i12 goto label07;

        i26 = i21 + 1;

        r7[i21] = i10;

        i21 = i26 + 1;

        r7[i26] = i9;

        i22 = i22 + 2;

        goto label10;

     label07:
        i27 = i21 + 1;

        r7[i21] = i10;

        i21 = i27 + 1;

        r7[i27] = i12;

        $r34 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i19 = i12 + 1;

        $r34[i22] = $i19;

        goto label10;

     label08:
        if i12 >= i7 goto label09;

        i23 = i23 + 2;

        goto label10;

     label09:
        $r18 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token#intersectRanges(): Internal Error: [");

        $r21 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i13 = $r21[i22];

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r24 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i14 = i22 + 1;

        $i15 = $r24[$i14];

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i15);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] & [");

        $r27 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i16 = $r27[i23];

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i16);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r30 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i17 = i23 + 1;

        $i18 = $r30[$i17];

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i18);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r33);

        throw $r18;

     label10:
        goto label03;

     label11:
        $r36 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i28 = lengthof $r36;

        if i22 >= $i28 goto label12;

        i29 = i21 + 1;

        $r11 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i30 = i22 + 1;

        $i4 = $r11[i22];

        r7[i21] = $i4;

        i21 = i29 + 1;

        $r12 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i22 = i30 + 1;

        $i5 = $r12[i30];

        r7[i29] = $i5;

        goto label11;

     label12:
        $r9 = newarray (int)[i21];

        r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = $r9;

        $r10 = r3.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, $r10, 0, i21);

        return;
    }

    static org.apache.xmlbeans.impl.regex.Token complementRanges(org.apache.xmlbeans.impl.regex.Token)
    {
        int[] $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r23;
        org.apache.xmlbeans.impl.regex.RangeToken $r5, $r17;
        org.apache.xmlbeans.impl.regex.Token r0;
        java.lang.StringBuffer $r20, $r21, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, $i21, $i22, i23, i24, $i26, $i28;
        java.lang.String $r22;
        java.lang.IllegalArgumentException $r25;

        r0 := @parameter0: org.apache.xmlbeans.impl.regex.Token;

        $i0 = r0.<org.apache.xmlbeans.impl.regex.Token: int type>;

        if $i0 == 4 goto label1;

        $i15 = r0.<org.apache.xmlbeans.impl.regex.Token: int type>;

        if $i15 == 5 goto label1;

        $r25 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token#complementRanges(): must be RANGE: ");

        $i17 = r0.<org.apache.xmlbeans.impl.regex.Token: int type>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r25;

     label1:
        $r17 = (org.apache.xmlbeans.impl.regex.RangeToken) r0;

        virtualinvoke $r17.<org.apache.xmlbeans.impl.regex.RangeToken: void sortRanges()>();

        virtualinvoke $r17.<org.apache.xmlbeans.impl.regex.RangeToken: void compactRanges()>();

        $r1 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = lengthof $r1;

        $i16 = $i1 + 2;

        i18 = $i16;

        $r2 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i2 = $r2[0];

        if $i2 != 0 goto label2;

        $i26 = (int) -2;

        i18 = $i16 + $i26;

     label2:
        $r4 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r3 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i3 = lengthof $r3;

        $i4 = $i3 - 1;

        $i14 = $r4[$i4];

        if $i14 != 1114111 goto label3;

        $i28 = (int) -2;

        i18 = i18 + $i28;

     label3:
        $r5 = staticinvoke <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.RangeToken createRange()>();

        $r6 = newarray (int)[i18];

        $r5.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges> = $r6;

        i19 = 0;

        $r7 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i5 = $r7[0];

        if $i5 <= 0 goto label4;

        $r14 = $r5.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r14[0] = 0;

        $r16 = $r5.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i19 = 2;

        $r15 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i12 = $r15[0];

        $i13 = $i12 - 1;

        $r16[1] = $i13;

     label4:
        i20 = 1;

     label5:
        $r23 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i21 = lengthof $r23;

        $i22 = $i21 - 2;

        if i20 >= $i22 goto label6;

        $r11 = $r5.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i23 = i19 + 1;

        $r10 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i7 = $r10[i20];

        $i8 = $i7 + 1;

        $r11[i19] = $i8;

        $r13 = $r5.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i19 = i23 + 1;

        $r12 = $r17.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i9 = i20 + 1;

        $i10 = $r12[$i9];

        $i11 = $i10 - 1;

        $r13[i23] = $i11;

        i20 = i20 + 2;

        goto label5;

     label6:
        if $i14 == 1114111 goto label7;

        $r8 = $r5.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i24 = i19 + 1;

        $i6 = $i14 + 1;

        $r8[i19] = $i6;

        $r9 = $r5.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $r9[i24] = 1114111;

     label7:
        specialinvoke $r5.<org.apache.xmlbeans.impl.regex.RangeToken: void setCompacted()>();

        return $r5;
    }

    synchronized org.apache.xmlbeans.impl.regex.RangeToken getCaseInsensitiveToken()
    {
        int[] $r3, $r4, $r5, $r6, $r9, $r12;
        org.apache.xmlbeans.impl.regex.RangeToken r0, $r1, r2, $r7, $r8, $r10, r11;
        int $i0, $i1, $i2, $i3, $i6, $i7, i10, $i11, i12, i13, $i14, i15, $i17, $i18, $i19, $i21, $i22, $i23;
        char $c4, $c5, $c8, $c9;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        $r1 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache>;

        if $r1 == null goto label01;

        $r7 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache>;

        return $r7;

     label01:
        $i0 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int type>;

        if $i0 != 4 goto label02;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.RangeToken createRange()>();

        goto label03;

     label02:
        $r8 = staticinvoke <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.RangeToken createNRange()>();

     label03:
        r2 = $r8;

        i10 = 0;

     label04:
        $r9 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i11 = lengthof $r9;

        if i10 >= $i11 goto label09;

        $r5 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i12 = $r5[i10];

     label05:
        $r6 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i6 = i10 + 1;

        $i7 = $r6[$i6];

        if i12 > $i7 goto label08;

        $i17 = (int) 65535;

        if i12 <= $i17 goto label06;

        virtualinvoke r2.<org.apache.xmlbeans.impl.regex.RangeToken: void addRange(int,int)>(i12, i12);

        goto label07;

     label06:
        $c8 = (char) i12;

        $c9 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c8);

        $i18 = (int) $c9;

        $i19 = (int) $c9;

        virtualinvoke r2.<org.apache.xmlbeans.impl.regex.RangeToken: void addRange(int,int)>($i18, $i19);

     label07:
        i12 = i12 + 1;

        goto label05;

     label08:
        i10 = i10 + 2;

        goto label04;

     label09:
        $i1 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int type>;

        if $i1 != 4 goto label10;

        $r10 = staticinvoke <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.RangeToken createRange()>();

        goto label11;

     label10:
        $r10 = staticinvoke <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.RangeToken createNRange()>();

     label11:
        r11 = $r10;

        i13 = 0;

     label12:
        $r12 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i14 = lengthof $r12;

        if i13 >= $i14 goto label17;

        $r3 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i15 = $r3[i13];

     label13:
        $r4 = r2.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i2 = i13 + 1;

        $i3 = $r4[$i2];

        if i15 > $i3 goto label16;

        $i21 = (int) 65535;

        if i15 <= $i21 goto label14;

        virtualinvoke r11.<org.apache.xmlbeans.impl.regex.RangeToken: void addRange(int,int)>(i15, i15);

        goto label15;

     label14:
        $c4 = (char) i15;

        $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $i22 = (int) $c5;

        $i23 = (int) $c5;

        virtualinvoke r11.<org.apache.xmlbeans.impl.regex.RangeToken: void addRange(int,int)>($i22, $i23);

     label15:
        i15 = i15 + 1;

        goto label13;

     label16:
        i13 = i13 + 2;

        goto label12;

     label17:
        virtualinvoke r11.<org.apache.xmlbeans.impl.regex.RangeToken: void mergeRanges(org.apache.xmlbeans.impl.regex.Token)>(r2);

        virtualinvoke r11.<org.apache.xmlbeans.impl.regex.RangeToken: void mergeRanges(org.apache.xmlbeans.impl.regex.Token)>(r0);

        virtualinvoke r11.<org.apache.xmlbeans.impl.regex.RangeToken: void compactRanges()>();

        r0.<org.apache.xmlbeans.impl.regex.RangeToken: org.apache.xmlbeans.impl.regex.RangeToken icaseCache> = r11;

        return r11;
    }

    void dumpRanges()
    {
        org.apache.xmlbeans.impl.regex.RangeToken r1;
        int[] $r2, $r7, $r10, $r15;
        java.lang.StringBuffer $r4, $r6, $r8, $r9, $r11, $r12;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.String $r13;
        java.io.PrintStream $r0, $r3, $r5, $r14;

        r1 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("RANGE: ");

        $r2 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        if $r2 != null goto label1;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(" NULL");

     label1:
        i3 = 0;

     label2:
        $r15 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i4 = lengthof $r15;

        if i3 >= $i4 goto label3;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r7 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i0 = $r7[i3];

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r10 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = i3 + 1;

        $i2 = $r10[$i1];

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r13);

        i3 = i3 + 2;

        goto label2;

     label3:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        return;
    }

    boolean match(int)
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, z1, $z2;
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] map>;

        if $r1 != null goto label01;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.RangeToken: void createMap()>();

     label01:
        $i0 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int type>;

        if $i0 != 4 goto label08;

        if i1 >= 256 goto label04;

        $r9 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] map>;

        $i15 = i1 / 32;

        $i18 = $r9[$i15];

        $i16 = i1 & 31;

        $i17 = 1 << $i16;

        $i19 = $i18 & $i17;

        if $i19 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        return $z0;

     label04:
        z1 = 0;

        i20 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int nonMapIndex>;

     label05:
        $r6 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i11 = lengthof $r6;

        if i20 >= $i11 goto label07;

        $r7 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i12 = $r7[i20];

        if $i12 > i1 goto label06;

        $r8 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i13 = i20 + 1;

        $i14 = $r8[$i13];

        if i1 > $i14 goto label06;

        return 1;

     label06:
        i20 = i20 + 2;

        goto label05;

     label07:
        goto label14;

     label08:
        if i1 >= 256 goto label11;

        $r5 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] map>;

        $i6 = i1 / 32;

        $i9 = $r5[$i6];

        $i7 = i1 & 31;

        $i8 = 1 << $i7;

        $i10 = $i9 & $i8;

        if $i10 != 0 goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        return $z2;

     label11:
        z1 = 1;

        i21 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int nonMapIndex>;

     label12:
        $r2 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i2 = lengthof $r2;

        if i21 >= $i2 goto label14;

        $r3 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i3 = $r3[i21];

        if $i3 > i1 goto label13;

        $r4 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i4 = i21 + 1;

        $i5 = $r4[$i4];

        if i1 > $i5 goto label13;

        return 0;

     label13:
        i21 = i21 + 2;

        goto label12;

     label14:
        return z1;
    }

    private void createMap()
    {
        org.apache.xmlbeans.impl.regex.RangeToken r1;
        int[] r0, $r2, $r3, $r4, $r5;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;

        r1 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        r0 = newarray (int)[8];

        $r2 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i9 = lengthof $r2;

        i10 = 0;

     label1:
        if i10 >= 8 goto label2;

        r0[i10] = 0;

        i10 = i10 + 1;

        goto label1;

     label2:
        i11 = 0;

     label3:
        $r3 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i0 = lengthof $r3;

        if i11 >= $i0 goto label9;

        $r4 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        i1 = $r4[i11];

        $r5 = r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i2 = i11 + 1;

        i3 = $r5[$i2];

        if i1 >= 256 goto label6;

        i12 = i1;

     label4:
        if i12 > i3 goto label5;

        if i12 >= 256 goto label5;

        $i4 = i12 / 32;

        $i7 = r0[$i4];

        $i5 = i12 & 31;

        $i6 = 1 << $i5;

        $i8 = $i7 | $i6;

        r0[$i4] = $i8;

        i12 = i12 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        i9 = i11;

        goto label9;

     label7:
        if i3 < 256 goto label8;

        i9 = i11;

        goto label9;

     label8:
        i11 = i11 + 2;

        goto label3;

     label9:
        r1.<org.apache.xmlbeans.impl.regex.RangeToken: int nonMapIndex> = i9;

        r1.<org.apache.xmlbeans.impl.regex.RangeToken: int[] map> = r0;

        return;
    }

    public java.lang.String toString(int)
    {
        int[] $r5, $r6, $r8, $r10, $r17, $r18, $r20, $r22, $r25, $r26, $r27, $r28;
        org.apache.xmlbeans.impl.regex.RangeToken r0;
        org.apache.xmlbeans.impl.regex.Token $r1, $r2, $r3, $r12, $r13, $r14, $r15;
        java.lang.StringBuffer $r4, $r16;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, i18, $i19, $i20, $i21;
        java.lang.String $r7, $r9, $r11, $r19, $r21, $r23, r24;

        r0 := @this: org.apache.xmlbeans.impl.regex.RangeToken;

        i2 := @parameter0: int;

        $i0 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int type>;

        if $i0 != 4 goto label10;

        $r12 = <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.Token token_dot>;

        if r0 != $r12 goto label01;

        r24 = ".";

        goto label19;

     label01:
        $r13 = <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.Token token_0to9>;

        if r0 != $r13 goto label02;

        r24 = "\\d";

        goto label19;

     label02:
        $r14 = <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.Token token_wordchars>;

        if r0 != $r14 goto label03;

        r24 = "\\w";

        goto label19;

     label03:
        $r15 = <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.Token token_spaces>;

        if r0 != $r15 goto label04;

        r24 = "\\s";

        goto label19;

     label04:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        i14 = 0;

     label05:
        $r17 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i8 = lengthof $r17;

        if i14 >= $i8 goto label09;

        $i9 = i2 & 1024;

        if $i9 == 0 goto label06;

        if i14 <= 0 goto label06;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label06:
        $r25 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i15 = $r25[i14];

        $r26 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i16 = i14 + 1;

        $i17 = $r26[$i16];

        if $i15 != $i17 goto label07;

        $r22 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i13 = $r22[i14];

        $r23 = staticinvoke <org.apache.xmlbeans.impl.regex.RangeToken: java.lang.String escapeCharInCharClass(int)>($i13);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        goto label08;

     label07:
        $r18 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i10 = $r18[i14];

        $r19 = staticinvoke <org.apache.xmlbeans.impl.regex.RangeToken: java.lang.String escapeCharInCharClass(int)>($i10);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $r20 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i11 = i14 + 1;

        $i12 = $r20[$i11];

        $r21 = staticinvoke <org.apache.xmlbeans.impl.regex.RangeToken: java.lang.String escapeCharInCharClass(int)>($i12);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

     label08:
        i14 = i14 + 2;

        goto label05;

     label09:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        r24 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label19;

     label10:
        $r1 = <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.Token token_not_0to9>;

        if r0 != $r1 goto label11;

        r24 = "\\D";

        goto label19;

     label11:
        $r2 = <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.Token token_not_wordchars>;

        if r0 != $r2 goto label12;

        r24 = "\\W";

        goto label19;

     label12:
        $r3 = <org.apache.xmlbeans.impl.regex.Token: org.apache.xmlbeans.impl.regex.Token token_not_spaces>;

        if r0 != $r3 goto label13;

        r24 = "\\S";

        goto label19;

     label13:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[^");

        i18 = 0;

     label14:
        $r5 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i1 = lengthof $r5;

        if i18 >= $i1 goto label18;

        $i3 = i2 & 1024;

        if $i3 == 0 goto label15;

        if i18 <= 0 goto label15;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label15:
        $r27 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i19 = $r27[i18];

        $r28 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i20 = i18 + 1;

        $i21 = $r28[$i20];

        if $i19 != $i21 goto label16;

        $r10 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i7 = $r10[i18];

        $r11 = staticinvoke <org.apache.xmlbeans.impl.regex.RangeToken: java.lang.String escapeCharInCharClass(int)>($i7);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label17;

     label16:
        $r6 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i4 = $r6[i18];

        $r7 = staticinvoke <org.apache.xmlbeans.impl.regex.RangeToken: java.lang.String escapeCharInCharClass(int)>($i4);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $r8 = r0.<org.apache.xmlbeans.impl.regex.RangeToken: int[] ranges>;

        $i5 = i18 + 1;

        $i6 = $r8[$i5];

        $r9 = staticinvoke <org.apache.xmlbeans.impl.regex.RangeToken: java.lang.String escapeCharInCharClass(int)>($i6);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label17:
        i18 = i18 + 2;

        goto label14;

     label18:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        r24 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label19:
        return r24;
    }

    private static java.lang.String escapeCharInCharClass(int)
    {
        java.lang.StringBuffer $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r20, $r21, $r23;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r8, $r10, $r13, $r17, $r19, $r22, r24;
        char $c1, $c2;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 9: goto label05;
            case 10: goto label03;
            case 12: goto label02;
            case 13: goto label04;
            case 27: goto label06;
            case 44: goto label01;
            case 45: goto label01;
            case 91: goto label01;
            case 92: goto label01;
            case 93: goto label01;
            case 94: goto label01;
            default: goto label07;
        };

     label01:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");

        $c1 = (char) i0;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        r24 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label10;

     label02:
        r24 = "\\f";

        goto label10;

     label03:
        r24 = "\\n";

        goto label10;

     label04:
        r24 = "\\r";

        goto label10;

     label05:
        r24 = "\\t";

        goto label10;

     label06:
        r24 = "\\e";

        goto label10;

     label07:
        if i0 >= 32 goto label08;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\x");

        $i6 = virtualinvoke $r19.<java.lang.String: int length()>();

        $i7 = $i6 - 2;

        $i8 = virtualinvoke $r19.<java.lang.String: int length()>();

        $r22 = virtualinvoke $r19.<java.lang.String: java.lang.String substring(int,int)>($i7, $i8);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label10;

     label08:
        if i0 < 65536 goto label09;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\v");

        $i3 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i4 = $i3 - 6;

        $i5 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r13 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        r24 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label10;

     label09:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $c2 = (char) i0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        r24 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        return r24;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.regex.RangeToken: int MAPSIZE> = 256;

        return;
    }
}
