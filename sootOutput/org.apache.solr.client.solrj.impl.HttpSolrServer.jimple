public class org.apache.solr.client.solrj.impl.HttpSolrServer extends org.apache.solr.client.solrj.SolrServer
{
    private static final java.lang.String UTF_8;
    private static final java.lang.String DEFAULT_PATH;
    private static final long serialVersionUID;
    public static final java.lang.String AGENT;
    private static org.slf4j.Logger log;
    protected java.lang.String baseUrl;
    protected org.apache.solr.common.params.ModifiableSolrParams invariantParams;
    protected org.apache.solr.client.solrj.ResponseParser parser;
    protected org.apache.solr.client.solrj.request.RequestWriter requestWriter;
    private final org.apache.http.client.HttpClient httpClient;
    private boolean followRedirects;
    private int maxRetries;
    private boolean useMultiPartPost;
    private final boolean internalClient;

    public void <init>(java.lang.String)
    {
        org.apache.solr.client.solrj.impl.BinaryResponseParser $r2;
        java.lang.String r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.solr.client.solrj.impl.BinaryResponseParser;

        specialinvoke $r2.<org.apache.solr.client.solrj.impl.BinaryResponseParser: void <init>()>();

        specialinvoke r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: void <init>(java.lang.String,org.apache.http.client.HttpClient,org.apache.solr.client.solrj.ResponseParser)>(r1, null, $r2);

        return;
    }

    public void <init>(java.lang.String, org.apache.http.client.HttpClient)
    {
        org.apache.solr.client.solrj.impl.BinaryResponseParser $r3;
        org.apache.http.client.HttpClient r2;
        java.lang.String r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.client.HttpClient;

        $r3 = new org.apache.solr.client.solrj.impl.BinaryResponseParser;

        specialinvoke $r3.<org.apache.solr.client.solrj.impl.BinaryResponseParser: void <init>()>();

        specialinvoke r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: void <init>(java.lang.String,org.apache.http.client.HttpClient,org.apache.solr.client.solrj.ResponseParser)>(r1, r2, $r3);

        return;
    }

    public void <init>(java.lang.String, org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser)
    {
        org.apache.solr.client.solrj.ResponseParser r8;
        org.apache.http.client.HttpClient r5, $r7;
        int $i0, $i1, $i2;
        java.lang.String r2, $r3, $r4, $r12, $r14, $r15, $r16, $r17;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        boolean $z0, $z1;
        org.apache.solr.common.params.ModifiableSolrParams $r6;
        org.apache.solr.client.solrj.request.RequestWriter $r1;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.http.client.HttpClient;

        r8 := @parameter2: org.apache.solr.client.solrj.ResponseParser;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrServer: void <init>()>();

        $r1 = new org.apache.solr.client.solrj.request.RequestWriter;

        specialinvoke $r1.<org.apache.solr.client.solrj.request.RequestWriter: void <init>()>();

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.request.RequestWriter requestWriter> = $r1;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean followRedirects> = 0;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: int maxRetries> = 0;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl> = r2;

        $r3 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $r16 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        $r15 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl> = $r17;

     label1:
        $r4 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(63);

        if $i0 < 0 goto label2;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid base url for solrj.  The base URL must not contain parameters: ");

        $r12 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label2:
        if r5 == null goto label3;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient> = r5;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean internalClient> = 0;

        goto label4;

     label3:
        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean internalClient> = 1;

        $r6 = new org.apache.solr.common.params.ModifiableSolrParams;

        specialinvoke $r6.<org.apache.solr.common.params.ModifiableSolrParams: void <init>()>();

        virtualinvoke $r6.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,int)>("maxConnections", 128);

        virtualinvoke $r6.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,int)>("maxConnectionsPerHost", 32);

        $z1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean followRedirects>;

        virtualinvoke $r6.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,boolean)>("followRedirects", $z1);

        $r7 = staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: org.apache.http.client.HttpClient createClient(org.apache.solr.common.params.SolrParams)>($r6);

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient> = $r7;

     label4:
        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.ResponseParser parser> = r8;

        return;
    }

    public org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        org.apache.solr.client.solrj.SolrRequest r0;
        org.apache.solr.client.solrj.ResponseParser $r1, r4;
        org.apache.solr.client.solrj.impl.HttpSolrServer r2;
        org.apache.solr.common.util.NamedList $r3;

        r2 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r0 := @parameter0: org.apache.solr.client.solrj.SolrRequest;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: org.apache.solr.client.solrj.ResponseParser getResponseParser()>();

        r4 = $r1;

        if $r1 != null goto label1;

        r4 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.ResponseParser parser>;

     label1:
        $r3 = virtualinvoke r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest,org.apache.solr.client.solrj.ResponseParser)>(r0, r4);

        return $r3;
    }

    public org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest, org.apache.solr.client.solrj.ResponseParser) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        org.apache.http.client.entity.UrlEncodedFormEntity $r180;
        org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException $r191, $r195;
        org.apache.solr.client.solrj.impl.HttpSolrServer r2;
        java.lang.StringBuilder $r27, $r29, $r36, $r38, $r39, $r40, $r41, $r45, $r47, $r48, $r49, $r50, $r53, $r61, $r63, $r67, $r68, $r94, $r95, $r109, $r110, $r112, $r126, $r128, $r133, $r135, $r140, $r142, $r168, $r170, $r181, $r185, $r188, $r190, $r193, $r194, $r196, $r198, $r200;
        org.apache.solr.client.solrj.SolrRequest r0;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r55, $r56, $r57, $r58, $r62;
        java.net.SocketTimeoutException $r130;
        java.net.ConnectException $r137;
        org.apache.http.entity.mime.content.InputStreamBody $r177;
        org.apache.http.entity.mime.HttpMultipartMode $r73;
        java.io.IOException $r123, $r147;
        org.apache.solr.client.solrj.impl.HttpSolrServer$1 $r183;
        org.apache.solr.client.solrj.impl.HttpSolrServer$2 $r184;
        org.apache.http.params.HttpParams $r9;
        org.apache.http.HttpResponse $r13;
        org.apache.solr.client.solrj.ResponseParser r17, $r152, r153;
        org.apache.solr.common.params.SolrParams $r1;
        org.apache.solr.common.SolrException $r167;
        org.apache.solr.common.util.ContentStream $r98, $r100, $r103, r158, r162;
        org.apache.solr.common.util.ContentStream[] r161;
        java.util.Collection $r4;
        org.apache.http.HttpEntity $r15, $r18;
        org.apache.http.client.methods.HttpRequestBase r150;
        org.apache.http.client.methods.HttpGet $r169;
        org.apache.http.entity.mime.FormBodyPart r160, $r175, $r178;
        java.nio.charset.Charset $r89;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, i7, $i8;
        java.lang.Boolean $r10;
        java.util.LinkedList $r171, $r173;
        org.apache.solr.client.solrj.request.RequestWriter $r3, $r5;
        java.lang.Object $r21, $r32, $r75, $r77, $r84, $r105;
        org.apache.http.entity.mime.MultipartEntity $r179;
        org.apache.http.client.methods.HttpPost $r172, $r182;
        org.apache.http.StatusLine $r14, $r24, $r51;
        org.apache.solr.client.solrj.SolrServerException $r186, $r187, $r189, $r197, $r199, $r201;
        org.apache.http.entity.mime.content.StringBody $r174;
        org.apache.solr.common.params.ModifiableSolrParams $r8, $r116, $r166;
        java.lang.Exception $r145;
        java.lang.Throwable $r121, $r122, $r144, $r146;
        org.apache.http.client.HttpClient $r12;
        java.lang.String $r6, $r11, $r19, $r25, $r30, $r31, $r37, $r42, $r46, $r52, $r54, $r64, $r66, $r69, $r78, $r80, $r83, r86, $r91, $r96, $r108, $r111, $r113, $r118, $r120, $r127, $r129, $r134, $r136, $r141, $r143, r151, r157, r159, r164;
        org.apache.solr.common.util.NamedList $r20, r165, $r192;
        org.apache.http.NoHttpResponseException $r149;
        java.lang.NullPointerException r202;
        java.net.URI $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11, $z12;
        org.apache.http.message.BasicNameValuePair $r176;
        java.lang.String[] $r85, $r117, $r119;
        java.util.Iterator $r74, $r76, $r97, $r156;
        org.apache.solr.common.SolrException$ErrorCode $r115;
        java.io.InputStream $r16, $r82, $r101, $r104, r163;

        r2 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r0 := @parameter0: org.apache.solr.client.solrj.SolrRequest;

        r17 := @parameter1: org.apache.solr.client.solrj.ResponseParser;

        r150 = null;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: org.apache.solr.common.params.SolrParams getParams()>();

        $r3 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.request.RequestWriter requestWriter>;

        $r4 = virtualinvoke $r3.<org.apache.solr.client.solrj.request.RequestWriter: java.util.Collection getContentStreams(org.apache.solr.client.solrj.SolrRequest)>(r0);

        $r5 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.request.RequestWriter requestWriter>;

        $r6 = virtualinvoke $r5.<org.apache.solr.client.solrj.request.RequestWriter: java.lang.String getPath(org.apache.solr.client.solrj.SolrRequest)>(r0);

        r151 = $r6;

        if $r6 == null goto label01;

        $z8 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z8 != 0 goto label02;

     label01:
        r151 = "/select";

     label02:
        $r152 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: org.apache.solr.client.solrj.ResponseParser getResponseParser()>();

        r153 = $r152;

        if $r152 != null goto label03;

        r153 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.ResponseParser parser>;

     label03:
        $r166 = new org.apache.solr.common.params.ModifiableSolrParams;

        specialinvoke $r166.<org.apache.solr.common.params.ModifiableSolrParams: void <init>(org.apache.solr.common.params.SolrParams)>($r1);

        if r153 == null goto label04;

        $r117 = newarray (java.lang.String)[1];

        $r118 = virtualinvoke r153.<org.apache.solr.client.solrj.ResponseParser: java.lang.String getWriterType()>();

        $r117[0] = $r118;

        virtualinvoke $r166.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("wt", $r117);

        $r119 = newarray (java.lang.String)[1];

        $r120 = virtualinvoke r153.<org.apache.solr.client.solrj.ResponseParser: java.lang.String getVersion()>();

        $r119[0] = $r120;

        virtualinvoke $r166.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("version", $r119);

     label04:
        $r8 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.common.params.ModifiableSolrParams invariantParams>;

        if $r8 == null goto label05;

        $r116 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.common.params.ModifiableSolrParams invariantParams>;

        virtualinvoke $r166.<org.apache.solr.common.params.ModifiableSolrParams: void add(org.apache.solr.common.params.SolrParams)>($r116);

     label05:
        $i0 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: int maxRetries>;

        i5 = $i0 + 1;

     label06:
        $i6 = i5;

        $i8 = (int) -1;

        i5 = i5 + $i8;

        if $i6 <= 0 goto label38;

     label07:
        $r55 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD GET>;

        $r56 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: org.apache.solr.client.solrj.SolrRequest$METHOD getMethod()>();

        if $r55 != $r56 goto label09;

        if $r4 == null goto label08;

        $r167 = new org.apache.solr.common.SolrException;

        $r115 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        specialinvoke $r167.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r115, "GET can\'t send streams!");

        throw $r167;

     label08:
        $r169 = new org.apache.http.client.methods.HttpGet;

        $r168 = new java.lang.StringBuilder;

        specialinvoke $r168.<java.lang.StringBuilder: void <init>()>();

        $r108 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        $r109 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        $r111 = staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: java.lang.String toQueryString(org.apache.solr.common.params.SolrParams,boolean)>($r166, 0);

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r169.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r113);

        r150 = $r169;

        goto label34;

     label09:
        $r57 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD POST>;

        $r58 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: org.apache.solr.client.solrj.SolrRequest$METHOD getMethod()>();

        if $r57 != $r58 goto label33;

        $r170 = new java.lang.StringBuilder;

        specialinvoke $r170.<java.lang.StringBuilder: void <init>()>();

        $r66 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        $r67 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r4 == null goto label10;

        $i4 = interfaceinvoke $r4.<java.util.Collection: int size()>();

        if $i4 <= 1 goto label10;

        $z12 = 1;

        $z11 = 1;

        goto label11;

     label10:
        $z12 = 0;

        $z11 = 0;

     label11:
        z9 = $z12;

        $r171 = new java.util.LinkedList;

        specialinvoke $r171.<java.util.LinkedList: void <init>()>();

        if $r4 == null goto label12;

        if $z11 == 0 goto label28;

     label12:
        $r172 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r172.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r69);

        virtualinvoke $r172.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Content-Charset", "UTF-8");

        $z2 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean useMultiPartPost>;

        if $z2 != 0 goto label13;

        if z9 != 0 goto label13;

        virtualinvoke $r172.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");

     label13:
        $r173 = new java.util.LinkedList;

        specialinvoke $r173.<java.util.LinkedList: void <init>()>();

        $r156 = virtualinvoke $r166.<org.apache.solr.common.params.SolrParams: java.util.Iterator getParameterNamesIterator()>();

     label14:
        $z10 = interfaceinvoke $r156.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label20;

        $r84 = interfaceinvoke $r156.<java.util.Iterator: java.lang.Object next()>();

        r157 = (java.lang.String) $r84;

        $r85 = virtualinvoke $r166.<org.apache.solr.common.params.SolrParams: java.lang.String[] getParams(java.lang.String)>(r157);

        if $r85 == null goto label19;

        i3 = lengthof $r85;

        i7 = 0;

     label15:
        if i7 >= i3 goto label19;

        r86 = $r85[i7];

        $z5 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean useMultiPartPost>;

        if $z5 != 0 goto label16;

        if z9 == 0 goto label17;

     label16:
        $r175 = new org.apache.http.entity.mime.FormBodyPart;

        $r174 = new org.apache.http.entity.mime.content.StringBody;

        $r89 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        specialinvoke $r174.<org.apache.http.entity.mime.content.StringBody: void <init>(java.lang.String,java.nio.charset.Charset)>(r86, $r89);

        specialinvoke $r175.<org.apache.http.entity.mime.FormBodyPart: void <init>(java.lang.String,org.apache.http.entity.mime.content.ContentBody)>(r157, $r174);

        interfaceinvoke $r173.<java.util.List: boolean add(java.lang.Object)>($r175);

        goto label18;

     label17:
        $r176 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r176.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(r157, r86);

        virtualinvoke $r171.<java.util.LinkedList: boolean add(java.lang.Object)>($r176);

     label18:
        i7 = i7 + 1;

        goto label15;

     label19:
        goto label14;

     label20:
        if z9 == 0 goto label23;

        $r76 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label21:
        $z4 = interfaceinvoke $r76.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label23;

        $r77 = interfaceinvoke $r76.<java.util.Iterator: java.lang.Object next()>();

        r158 = (org.apache.solr.common.util.ContentStream) $r77;

        $r78 = interfaceinvoke r158.<org.apache.solr.common.util.ContentStream: java.lang.String getContentType()>();

        r159 = $r78;

        if $r78 != null goto label22;

        r159 = "application/octet-stream";

     label22:
        $r178 = new org.apache.http.entity.mime.FormBodyPart;

        $r80 = interfaceinvoke r158.<org.apache.solr.common.util.ContentStream: java.lang.String getName()>();

        $r177 = new org.apache.http.entity.mime.content.InputStreamBody;

        $r82 = interfaceinvoke r158.<org.apache.solr.common.util.ContentStream: java.io.InputStream getStream()>();

        $r83 = interfaceinvoke r158.<org.apache.solr.common.util.ContentStream: java.lang.String getName()>();

        specialinvoke $r177.<org.apache.http.entity.mime.content.InputStreamBody: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>($r82, r159, $r83);

        specialinvoke $r178.<org.apache.http.entity.mime.FormBodyPart: void <init>(java.lang.String,org.apache.http.entity.mime.content.ContentBody)>($r80, $r177);

        interfaceinvoke $r173.<java.util.List: boolean add(java.lang.Object)>($r178);

        goto label21;

     label23:
        $i2 = interfaceinvoke $r173.<java.util.List: int size()>();

        if $i2 <= 0 goto label26;

        $r179 = new org.apache.http.entity.mime.MultipartEntity;

        $r73 = <org.apache.http.entity.mime.HttpMultipartMode: org.apache.http.entity.mime.HttpMultipartMode STRICT>;

        specialinvoke $r179.<org.apache.http.entity.mime.MultipartEntity: void <init>(org.apache.http.entity.mime.HttpMultipartMode)>($r73);

        $r74 = interfaceinvoke $r173.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z3 = interfaceinvoke $r74.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label25;

        $r75 = interfaceinvoke $r74.<java.util.Iterator: java.lang.Object next()>();

        r160 = (org.apache.http.entity.mime.FormBodyPart) $r75;

        virtualinvoke $r179.<org.apache.http.entity.mime.MultipartEntity: void addPart(org.apache.http.entity.mime.FormBodyPart)>(r160);

        goto label24;

     label25:
        virtualinvoke $r172.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r179);

        goto label27;

     label26:
        $r180 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        specialinvoke $r180.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r171, "UTF-8");

        virtualinvoke $r172.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r180);

     label27:
        r150 = $r172;

        goto label32;

     label28:
        $r91 = staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: java.lang.String toQueryString(org.apache.solr.common.params.SolrParams,boolean)>($r166, 0);

        $r182 = new org.apache.http.client.methods.HttpPost;

        $r181 = new java.lang.StringBuilder;

        specialinvoke $r181.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r182.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r96);

        r161 = newarray (org.apache.solr.common.util.ContentStream)[1];

        $r97 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        $z6 = interfaceinvoke $r97.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label29;

        $r105 = interfaceinvoke $r97.<java.util.Iterator: java.lang.Object next()>();

        r162 = (org.apache.solr.common.util.ContentStream) $r105;

        r161[0] = r162;

        goto label29;

     label29:
        $r98 = r161[0];

        $z7 = $r98 instanceof org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        if $z7 == 0 goto label30;

        $r183 = new org.apache.solr.client.solrj.impl.HttpSolrServer$1;

        $r103 = r161[0];

        $r104 = interfaceinvoke $r103.<org.apache.solr.common.util.ContentStream: java.io.InputStream getStream()>();

        specialinvoke $r183.<org.apache.solr.client.solrj.impl.HttpSolrServer$1: void <init>(org.apache.solr.client.solrj.impl.HttpSolrServer,java.io.InputStream,long,org.apache.solr.common.util.ContentStream[])>(r2, $r104, -1L, r161);

        virtualinvoke $r182.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r183);

        goto label31;

     label30:
        $r184 = new org.apache.solr.client.solrj.impl.HttpSolrServer$2;

        $r100 = r161[0];

        $r101 = interfaceinvoke $r100.<org.apache.solr.common.util.ContentStream: java.io.InputStream getStream()>();

        specialinvoke $r184.<org.apache.solr.client.solrj.impl.HttpSolrServer$2: void <init>(org.apache.solr.client.solrj.impl.HttpSolrServer,java.io.InputStream,long,org.apache.solr.common.util.ContentStream[])>(r2, $r101, -1L, r161);

        virtualinvoke $r182.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r184);

     label31:
        r150 = $r182;

     label32:
        goto label34;

     label33:
        $r186 = new org.apache.solr.client.solrj.SolrServerException;

        $r185 = new java.lang.StringBuilder;

        specialinvoke $r185.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported method: ");

        $r62 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: org.apache.solr.client.solrj.SolrRequest$METHOD getMethod()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r186.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.String)>($r64);

        throw $r186;

     label34:
        goto label06;

     label35:
        $r149 := @caughtexception;

        r150 = null;

        if null == null goto label36;

        r202 = new java.lang.NullPointerException;

        specialinvoke r202.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke is.<java.io.InputStream: void close()>()");

        throw r202;

     label36:
        if i5 >= 1 goto label37;

        throw $r149;

     label37:
        goto label06;

     label38:
        goto label40;

     label39:
        $r147 := @caughtexception;

        $r187 = new org.apache.solr.client.solrj.SolrServerException;

        specialinvoke $r187.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.String,java.lang.Throwable)>("error reading streams", $r147);

        throw $r187;

     label40:
        $r9 = virtualinvoke r150.<org.apache.http.client.methods.HttpRequestBase: org.apache.http.params.HttpParams getParams()>();

        $z0 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean followRedirects>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r9.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.handle-redirects", $r10);

        $r11 = <org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String AGENT>;

        virtualinvoke r150.<org.apache.http.client.methods.HttpRequestBase: void addHeader(java.lang.String,java.lang.String)>("User-Agent", $r11);

        r163 = null;

     label41:
        $r12 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        $r13 = interfaceinvoke $r12.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r150);

        $r14 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r14.<org.apache.http.StatusLine: int getStatusCode()>();

        $r15 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r16 = interfaceinvoke $r15.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        r163 = $r16;

        lookupswitch($i1)
        {
            case 200: goto label42;
            case 301: goto label43;
            case 302: goto label43;
            case 400: goto label42;
            case 409: goto label42;
            default: goto label44;
        };

     label42:
        goto label45;

     label43:
        $z1 = r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean followRedirects>;

        if $z1 != 0 goto label45;

        $r189 = new org.apache.solr.client.solrj.SolrServerException;

        $r188 = new java.lang.StringBuilder;

        specialinvoke $r188.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server at ");

        $r37 = virtualinvoke r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sent back a redirect (");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r189.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.String)>($r42);

        throw $r189;

     label44:
        $r191 = new org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException;

        $r190 = new java.lang.StringBuilder;

        specialinvoke $r190.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server at ");

        $r46 = virtualinvoke r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned non ok status:");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message:");

        $r51 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r52 = interfaceinvoke $r51.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r191.<org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException: void <init>(int,java.lang.String,java.lang.Throwable)>($i1, $r54, null);

        throw $r191;

     label45:
        if r17 != null goto label51;

        $r192 = new org.apache.solr.common.util.NamedList;

        specialinvoke $r192.<org.apache.solr.common.util.NamedList: void <init>()>();

        virtualinvoke $r192.<org.apache.solr.common.util.NamedList: void add(java.lang.String,java.lang.Object)>("stream", $r16);

     label46:
        if $r16 == null goto label50;

        if 0 == 0 goto label50;

     label47:
        virtualinvoke $r16.<java.io.InputStream: void close()>();

     label48:
        goto label50;

     label49:
        $r146 := @caughtexception;

     label50:
        return $r192;

     label51:
        $r18 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r19 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>($r18);

        $r20 = virtualinvoke r17.<org.apache.solr.client.solrj.ResponseParser: org.apache.solr.common.util.NamedList processResponse(java.io.InputStream,java.lang.String)>($r16, $r19);

        if $i1 == 200 goto label57;

        r164 = null;

     label52:
        $r21 = virtualinvoke $r20.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("error");

        r165 = (org.apache.solr.common.util.NamedList) $r21;

        if r165 == null goto label53;

        $r32 = virtualinvoke r165.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("msg");

        r164 = (java.lang.String) $r32;

     label53:
        goto label55;

     label54:
        $r145 := @caughtexception;

     label55:
        if r164 != null goto label56;

        $r193 = new java.lang.StringBuilder;

        specialinvoke $r193.<java.lang.StringBuilder: void <init>()>();

        $r24 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r25 = interfaceinvoke $r24.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r194 = new java.lang.StringBuilder;

        specialinvoke $r194.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("request: ");

        $r28 = virtualinvoke r150.<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r31 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.String toString()>();

        r164 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r31, "UTF-8");

     label56:
        $r195 = new org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException;

        specialinvoke $r195.<org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException: void <init>(int,java.lang.String,java.lang.Throwable)>($i1, r164, null);

        throw $r195;

     label57:
        if $r16 == null goto label61;

        if 1 == 0 goto label61;

     label58:
        virtualinvoke $r16.<java.io.InputStream: void close()>();

     label59:
        goto label61;

     label60:
        $r144 := @caughtexception;

     label61:
        return $r20;

     label62:
        $r137 := @caughtexception;

        $r197 = new org.apache.solr.client.solrj.SolrServerException;

        $r196 = new java.lang.StringBuilder;

        specialinvoke $r196.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server refused connection at: ");

        $r141 = virtualinvoke r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        $r142 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r141);

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r197.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.String,java.lang.Throwable)>($r143, $r137);

        throw $r197;

     label63:
        $r130 := @caughtexception;

        $r199 = new org.apache.solr.client.solrj.SolrServerException;

        $r198 = new java.lang.StringBuilder;

        specialinvoke $r198.<java.lang.StringBuilder: void <init>()>();

        $r133 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout occured while waiting response from server at: ");

        $r134 = virtualinvoke r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        $r135 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r134);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r199.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.String,java.lang.Throwable)>($r136, $r130);

        throw $r199;

     label64:
        $r123 := @caughtexception;

        $r201 = new org.apache.solr.client.solrj.SolrServerException;

        $r200 = new java.lang.StringBuilder;

        specialinvoke $r200.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException occured when talking to server at: ");

        $r127 = virtualinvoke r2.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        $r128 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r127);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r201.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.String,java.lang.Throwable)>($r129, $r123);

        throw $r201;

     label65:
        $r122 := @caughtexception;

     label66:
        if r163 == null goto label70;

        if 1 == 0 goto label70;

     label67:
        virtualinvoke r163.<java.io.InputStream: void close()>();

     label68:
        goto label70;

     label69:
        $r121 := @caughtexception;

     label70:
        throw $r122;

        catch org.apache.http.NoHttpResponseException from label07 to label34 with label35;
        catch java.io.IOException from label06 to label38 with label39;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Exception from label52 to label53 with label54;
        catch java.lang.Throwable from label58 to label59 with label60;
        catch java.net.ConnectException from label41 to label46 with label62;
        catch java.net.ConnectException from label51 to label57 with label62;
        catch java.net.SocketTimeoutException from label41 to label46 with label63;
        catch java.net.SocketTimeoutException from label51 to label57 with label63;
        catch java.io.IOException from label41 to label46 with label64;
        catch java.io.IOException from label51 to label57 with label64;
        catch java.lang.Throwable from label41 to label46 with label65;
        catch java.lang.Throwable from label51 to label57 with label65;
        catch java.lang.Throwable from label67 to label68 with label69;
        catch java.lang.Throwable from label62 to label66 with label65;
    }

    public org.apache.solr.common.params.ModifiableSolrParams getInvariantParams()
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        org.apache.solr.common.params.ModifiableSolrParams $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.common.params.ModifiableSolrParams invariantParams>;

        return $r1;
    }

    public java.lang.String getBaseURL()
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl>;

        return $r1;
    }

    public void setBaseURL(java.lang.String)
    {
        java.lang.String r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String baseUrl> = r1;

        return;
    }

    public org.apache.solr.client.solrj.ResponseParser getParser()
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        org.apache.solr.client.solrj.ResponseParser $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.ResponseParser parser>;

        return $r1;
    }

    public void setParser(org.apache.solr.client.solrj.ResponseParser)
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        org.apache.solr.client.solrj.ResponseParser r1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r1 := @parameter0: org.apache.solr.client.solrj.ResponseParser;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.ResponseParser parser> = r1;

        return;
    }

    public org.apache.http.client.HttpClient getHttpClient()
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        org.apache.http.client.HttpClient $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        return $r1;
    }

    public void setConnectionTimeout(int)
    {
        int i0;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        org.apache.http.client.HttpClient $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setConnectionTimeout(org.apache.http.client.HttpClient,int)>($r1, i0);

        return;
    }

    public void setSoTimeout(int)
    {
        int i0;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        org.apache.http.client.HttpClient $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setSoTimeout(org.apache.http.client.HttpClient,int)>($r1, i0);

        return;
    }

    public void setFollowRedirects(boolean)
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        org.apache.http.client.HttpClient $r1;
        boolean z0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        z0 := @parameter0: boolean;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean followRedirects> = 1;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setFollowRedirects(org.apache.http.client.HttpClient,boolean)>($r1, z0);

        return;
    }

    public void setAllowCompression(boolean)
    {
        org.apache.http.impl.client.DefaultHttpClient $r4;
        java.lang.UnsupportedOperationException $r2;
        org.apache.http.client.HttpClient $r1, $r3;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        boolean $z0, z1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        z1 := @parameter0: boolean;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        $z0 = $r1 instanceof org.apache.http.impl.client.DefaultHttpClient;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        $r4 = (org.apache.http.impl.client.DefaultHttpClient) $r3;

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setAllowCompression(org.apache.http.impl.client.DefaultHttpClient,boolean)>($r4, z1);

        goto label2;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("HttpClient instance was not of type DefaultHttpClient");

        throw $r2;

     label2:
        return;
    }

    public void setMaxRetries(int)
    {
        org.slf4j.Logger $r2;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        java.lang.String $r6;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        i0 := @parameter0: int;

        if i0 <= 1 goto label1;

        $r2 = <org.apache.solr.client.solrj.impl.HttpSolrServer: org.slf4j.Logger log>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HttpSolrServer: maximum Retries ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > 1. Maximum recommended retries is 1.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>($r6);

     label1:
        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: int maxRetries> = i0;

        return;
    }

    public void setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)
    {
        org.apache.solr.client.solrj.request.RequestWriter r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r1 := @parameter0: org.apache.solr.client.solrj.request.RequestWriter;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.request.RequestWriter requestWriter> = r1;

        return;
    }

    public org.apache.solr.client.solrj.response.UpdateResponse add(java.util.Iterator) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        java.util.Iterator r1;
        org.apache.solr.client.solrj.request.UpdateRequest $r0;
        org.apache.solr.client.solrj.impl.HttpSolrServer r2;
        org.apache.solr.client.solrj.response.UpdateResponse $r3;

        r2 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r1 := @parameter0: java.util.Iterator;

        $r0 = new org.apache.solr.client.solrj.request.UpdateRequest;

        specialinvoke $r0.<org.apache.solr.client.solrj.request.UpdateRequest: void <init>()>();

        virtualinvoke $r0.<org.apache.solr.client.solrj.request.UpdateRequest: void setDocIterator(java.util.Iterator)>(r1);

        $r3 = virtualinvoke $r0.<org.apache.solr.client.solrj.request.UpdateRequest: org.apache.solr.client.solrj.response.UpdateResponse process(org.apache.solr.client.solrj.SolrServer)>(r2);

        return $r3;
    }

    public org.apache.solr.client.solrj.response.UpdateResponse addBeans(java.util.Iterator) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        java.util.Iterator r3;
        org.apache.solr.client.solrj.request.UpdateRequest $r0;
        org.apache.solr.client.solrj.impl.HttpSolrServer$3 $r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer r2;
        org.apache.solr.client.solrj.response.UpdateResponse $r4;

        r2 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r3 := @parameter0: java.util.Iterator;

        $r0 = new org.apache.solr.client.solrj.request.UpdateRequest;

        specialinvoke $r0.<org.apache.solr.client.solrj.request.UpdateRequest: void <init>()>();

        $r1 = new org.apache.solr.client.solrj.impl.HttpSolrServer$3;

        specialinvoke $r1.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: void <init>(org.apache.solr.client.solrj.impl.HttpSolrServer,java.util.Iterator)>(r2, r3);

        virtualinvoke $r0.<org.apache.solr.client.solrj.request.UpdateRequest: void setDocIterator(java.util.Iterator)>($r1);

        $r4 = virtualinvoke $r0.<org.apache.solr.client.solrj.request.UpdateRequest: org.apache.solr.client.solrj.response.UpdateResponse process(org.apache.solr.client.solrj.SolrServer)>(r2);

        return $r4;
    }

    public void shutdown()
    {
        org.apache.http.client.HttpClient $r1, $r2;
        org.apache.http.conn.ClientConnectionManager $r3;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        if $r1 == null goto label1;

        $z0 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean internalClient>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        $r3 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r3.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

     label1:
        return;
    }

    public void setDefaultMaxConnectionsPerHost(int)
    {
        java.lang.UnsupportedOperationException $r1;
        org.apache.http.client.HttpClient $r2;
        int i0;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean internalClient>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setMaxConnectionsPerHost(org.apache.http.client.HttpClient,int)>($r2, i0);

        goto label2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Client was created outside of HttpSolrServer");

        throw $r1;

     label2:
        return;
    }

    public void setMaxTotalConnections(int)
    {
        java.lang.UnsupportedOperationException $r1;
        org.apache.http.client.HttpClient $r2;
        int i0;
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean internalClient>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient httpClient>;

        staticinvoke <org.apache.solr.client.solrj.impl.HttpClientUtil: void setMaxConnections(org.apache.http.client.HttpClient,int)>($r2, i0);

        goto label2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Client was created outside of HttpSolrServer");

        throw $r1;

     label2:
        return;
    }

    public boolean isUseMultiPartPost()
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        $z0 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean useMultiPartPost>;

        return $z0;
    }

    public void setUseMultiPartPost(boolean)
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer r0;
        boolean z0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer;

        z0 := @parameter0: boolean;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer: boolean useMultiPartPost> = z0;

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r7;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.Class $r2;
        java.lang.String $r3, $r6;

        <org.apache.solr.client.solrj.impl.HttpSolrServer: long serialVersionUID> = -946812319974801896L;

        <org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String DEFAULT_PATH> = "/select";

        <org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String UTF_8> = "UTF-8";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Solr[");

        $r2 = class "Lorg/apache/solr/client/solrj/impl/HttpSolrServer;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] 1.0");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String AGENT> = $r6;

        $r7 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/solr/client/solrj/impl/HttpSolrServer;");

        <org.apache.solr.client.solrj.impl.HttpSolrServer: org.slf4j.Logger log> = $r7;

        return;
    }
}
