final enum class org.jsoup.parser.HtmlTreeBuilderState$6 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.jsoup.parser.HtmlTreeBuilderState$6 r0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$6;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);

        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag $r6;
        java.lang.String[] $r5, $r8;
        org.jsoup.nodes.Element $r9;
        java.lang.String $r4, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Character $r15;
        org.jsoup.parser.Token$EndTag $r3;
        org.jsoup.parser.HtmlTreeBuilderState $r10, $r11, $r12, $r13;
        org.jsoup.parser.Token$Comment $r14;
        org.jsoup.parser.HtmlTreeBuilderState$6 r1;
        org.jsoup.parser.HtmlTreeBuilder r2;

        r1 := @this: org.jsoup.parser.HtmlTreeBuilderState$6;

        r0 := @parameter0: org.jsoup.parser.Token;

        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r0);

        if $z0 == 0 goto label01;

        $r15 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r15);

        goto label13;

     label01:
        $z1 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isComment()>();

        if $z1 == 0 goto label02;

        $r14 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r14);

        goto label13;

     label02:
        $z2 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isDoctype()>();

        if $z2 == 0 goto label03;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r1);

        goto label13;

     label03:
        $z3 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isStartTag()>();

        if $z3 == 0 goto label10;

        $r6 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r7 = virtualinvoke $r6.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z6 == 0 goto label04;

        $r13 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r0, $r13);

        return $z11;

     label04:
        $z7 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("body");

        if $z7 == 0 goto label05;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r6);

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);

        $r12 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r12);

        goto label09;

     label05:
        $z8 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("frameset");

        if $z8 == 0 goto label06;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r6);

        $r11 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InFrameset>;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r11);

        goto label09;

     label06:
        $r8 = newarray (java.lang.String)[9];

        $r8[0] = "base";

        $r8[1] = "basefont";

        $r8[2] = "bgsound";

        $r8[3] = "link";

        $r8[4] = "meta";

        $r8[5] = "noframes";

        $r8[6] = "script";

        $r8[7] = "style";

        $r8[8] = "title";

        $z9 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r7, $r8);

        if $z9 == 0 goto label07;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r1);

        $r9 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getHeadElement()>();

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void push(org.jsoup.nodes.Element)>($r9);

        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InHead>;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r0, $r10);

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean removeFromStack(org.jsoup.nodes.Element)>($r9);

        goto label09;

     label07:
        $z10 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("head");

        if $z10 == 0 goto label08;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r1);

        return 0;

     label08:
        specialinvoke r1.<org.jsoup.parser.HtmlTreeBuilderState$6: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r2);

     label09:
        goto label13;

     label10:
        $z4 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z4 == 0 goto label12;

        $r3 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r4 = virtualinvoke $r3.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "body";

        $r5[1] = "html";

        $z5 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);

        if $z5 == 0 goto label11;

        specialinvoke r1.<org.jsoup.parser.HtmlTreeBuilderState$6: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r2);

        goto label13;

     label11:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r1);

        return 0;

     label12:
        specialinvoke r1.<org.jsoup.parser.HtmlTreeBuilderState$6: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r2);

     label13:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag $r1;
        org.jsoup.parser.Token r2;
        org.jsoup.parser.HtmlTreeBuilderState$6 r3;
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean $z0;

        r3 := @this: org.jsoup.parser.HtmlTreeBuilderState$6;

        r2 := @parameter0: org.jsoup.parser.Token;

        r0 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $r1 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r1.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("body");

        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(1);

        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r2);

        return $z0;
    }
}
