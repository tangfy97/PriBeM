public final class org.apache.xmlbeans.GDateBuilder extends java.lang.Object implements org.apache.xmlbeans.GDateSpecification, java.io.Serializable
{
    private static final long serialVersionUID;
    private int _bits;
    private int _CY;
    private int _M;
    private int _D;
    private int _h;
    private int _m;
    private int _s;
    private java.math.BigDecimal _fs;
    private int _tzsign;
    private int _tzh;
    private int _tzm;
    static final java.math.BigInteger TEN;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$GDateBuilder;

    public void <init>()
    {
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object clone()
    {
        org.apache.xmlbeans.GDateBuilder $r0, r1;

        r1 := @this: org.apache.xmlbeans.GDateBuilder;

        $r0 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r0.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r1);

        return $r0;
    }

    public org.apache.xmlbeans.GDate toGDate()
    {
        org.apache.xmlbeans.GDate $r0;
        org.apache.xmlbeans.GDateBuilder r1;

        r1 := @this: org.apache.xmlbeans.GDateBuilder;

        $r0 = new org.apache.xmlbeans.GDate;

        specialinvoke $r0.<org.apache.xmlbeans.GDate: void <init>(org.apache.xmlbeans.GDateSpecification)>(r1);

        return $r0;
    }

    public void <init>(org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        org.apache.xmlbeans.GDateSpecification r1;
        java.math.BigDecimal $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r1 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z0 == 0 goto label1;

        $i6 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i7 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i8 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setTimeZone(int,int,int)>($i6, $i7, $i8);

     label1:
        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z1 == 0 goto label2;

        $i3 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        $i4 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setTime(int,int,int,java.math.BigDecimal)>($i3, $i4, $i5, $r2);

     label2:
        $z2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z2 == 0 goto label3;

        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setDay(int)>($i2);

     label3:
        $z3 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z3 == 0 goto label4;

        $i1 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setMonth(int)>($i1);

     label4:
        $z4 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z4 == 0 goto label5;

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setYear(int)>($i0);

     label5:
        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        org.apache.xmlbeans.GDate $r1;
        org.apache.xmlbeans.GDateBuilder r0;
        java.lang.CharSequence r2;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r2 := @parameter0: java.lang.CharSequence;

        $r1 = new org.apache.xmlbeans.GDate;

        specialinvoke $r1.<org.apache.xmlbeans.GDate: void <init>(java.lang.CharSequence)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>($r1);

        return;
    }

    public void <init>(java.util.Calendar)
    {
        org.apache.xmlbeans.GDate $r1;
        java.util.Calendar r2;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r2 := @parameter0: java.util.Calendar;

        $r1 = new org.apache.xmlbeans.GDate;

        specialinvoke $r1.<org.apache.xmlbeans.GDate: void <init>(java.util.Calendar)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>($r1);

        return;
    }

    public void <init>(int, int, int, int, int, int, java.math.BigDecimal)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.lang.IllegalArgumentException $r2, $r3;
        java.math.BigDecimal r1, $r4;
        int i0, i1, i2, i3, i4, i5, $i6;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.math.BigDecimal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = 30;

        if i0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        if i0 <= 0 goto label2;

        $i6 = i0;

        goto label3;

     label2:
        $i6 = i0 + 1;

     label3:
        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i6;

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = i2;

        r0.<org.apache.xmlbeans.GDateBuilder: int _h> = i3;

        r0.<org.apache.xmlbeans.GDateBuilder: int _m> = i4;

        r0.<org.apache.xmlbeans.GDateBuilder: int _s> = i5;

        if r1 != null goto label4;

        $r4 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        goto label5;

     label4:
        $r4 = r1;

     label5:
        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r4;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean isValid()>();

        if $z0 != 0 goto label6;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label6:
        return;
    }

    public void <init>(int, int, int, int, int, int, java.math.BigDecimal, int, int, int)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.math.BigDecimal r1, $r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        boolean $z0;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.math.BigDecimal;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = 31;

        if i0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        if i0 <= 0 goto label2;

        $i9 = i0;

        goto label3;

     label2:
        $i9 = i0 + 1;

     label3:
        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i9;

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = i2;

        r0.<org.apache.xmlbeans.GDateBuilder: int _h> = i3;

        r0.<org.apache.xmlbeans.GDateBuilder: int _m> = i4;

        r0.<org.apache.xmlbeans.GDateBuilder: int _s> = i5;

        if r1 != null goto label4;

        $r4 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        goto label5;

     label4:
        $r4 = r1;

     label5:
        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r4;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzsign> = i6;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzh> = i7;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzm> = i8;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean isValid()>();

        if $z0 != 0 goto label6;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label6:
        return;
    }

    public void <init>(java.util.Date)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.util.Date r1;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r1 := @parameter0: java.util.Date;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setDate(java.util.Date)>(r1);

        return;
    }

    public boolean isImmutable()
    {
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        return 0;
    }

    public int getFlags()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        return $i0;
    }

    public final boolean hasTimeZone()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasYear()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasMonth()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasDay()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasTime()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasDate()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i1 = $i0 & 14;

        if $i1 != 14 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getYear()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        if $i0 <= 0 goto label1;

        $i2 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        goto label2;

     label1:
        $i1 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $i2 = $i1 - 1;

     label2:
        return $i2;
    }

    public final int getMonth()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        return $i0;
    }

    public final int getDay()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        return $i0;
    }

    public final int getHour()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _h>;

        return $i0;
    }

    public final int getMinute()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _m>;

        return $i0;
    }

    public final int getSecond()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _s>;

        return $i0;
    }

    public final java.math.BigDecimal getFraction()
    {
        java.math.BigDecimal $r1;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $r1 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        return $r1;
    }

    public final int getMillisecond()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.math.BigDecimal $r1, $r2, $r3, $r4, $r5;
        int $i0;
        java.math.BigInteger $r6;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $r1 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r2 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        if $r3 != $r2 goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r5 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(3, 4);

        $r6 = virtualinvoke $r5.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public final int getTimeZoneSign()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _tzsign>;

        return $i0;
    }

    public final int getTimeZoneHour()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _tzh>;

        return $i0;
    }

    public final int getTimeZoneMinute()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _tzm>;

        return $i0;
    }

    public void setYear(int)
    {
        org.apache.xmlbeans.GDateBuilder r1;
        int i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r0, $r2;

        r1 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        if i0 < -292275295 goto label1;

        if i0 <= 292277265 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("year out of range");

        throw $r0;

     label2:
        if i0 != 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("year cannot be 0");

        throw $r2;

     label3:
        $i1 = r1.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i2 = $i1 | 2;

        r1.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i2;

        if i0 <= 0 goto label4;

        $i3 = i0;

        goto label5;

     label4:
        $i3 = i0 + 1;

     label5:
        r1.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i3;

        return;
    }

    public void setMonth(int)
    {
        org.apache.xmlbeans.GDateBuilder r1;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r0;

        r1 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 <= 12 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("month out of range");

        throw $r0;

     label2:
        $i1 = r1.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i2 = $i1 | 4;

        r1.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i2;

        r1.<org.apache.xmlbeans.GDateBuilder: int _M> = i0;

        return;
    }

    public void setDay(int)
    {
        org.apache.xmlbeans.GDateBuilder r1;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r0;

        r1 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 <= 31 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("day out of range");

        throw $r0;

     label2:
        $i1 = r1.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i2 = $i1 | 8;

        r1.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i2;

        r1.<org.apache.xmlbeans.GDateBuilder: int _D> = i0;

        return;
    }

    public void setTime(int, int, int, java.math.BigDecimal)
    {
        org.apache.xmlbeans.GDateBuilder r4;
        java.math.BigDecimal r3, $r5, $r7, $r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.IllegalArgumentException $r0, $r1, $r2, $r6, $r8;

        r4 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r3 := @parameter3: java.math.BigDecimal;

        if i0 < 0 goto label01;

        if i0 <= 24 goto label02;

     label01:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("hour out of range");

        throw $r0;

     label02:
        if i1 < 0 goto label03;

        if i1 <= 59 goto label04;

     label03:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minute out of range");

        throw $r1;

     label04:
        if i2 < 0 goto label05;

        if i2 <= 59 goto label06;

     label05:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("second out of range");

        throw $r2;

     label06:
        if r3 == null goto label08;

        $i4 = virtualinvoke r3.<java.math.BigDecimal: int signum()>();

        if $i4 < 0 goto label07;

        $r7 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _one>;

        $i5 = virtualinvoke r3.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r7);

        if $i5 <= 1 goto label08;

     label07:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fraction out of range");

        throw $r6;

     label08:
        if i0 != 24 goto label10;

        if i1 != 0 goto label09;

        if i2 != 0 goto label09;

        if r3 == null goto label10;

        $r5 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        $i3 = virtualinvoke $r5.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(r3);

        if $i3 == 0 goto label10;

     label09:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("when hour is 24, min sec and fracton must be 0");

        throw $r8;

     label10:
        $i6 = r4.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i7 = $i6 | 16;

        r4.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i7;

        r4.<org.apache.xmlbeans.GDateBuilder: int _h> = i0;

        r4.<org.apache.xmlbeans.GDateBuilder: int _m> = i1;

        r4.<org.apache.xmlbeans.GDateBuilder: int _s> = i2;

        if r3 != null goto label11;

        $r9 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        goto label12;

     label11:
        $r9 = r3;

     label12:
        r4.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r9;

        return;
    }

    public void setTimeZone(int, int, int)
    {
        org.apache.xmlbeans.GDateBuilder r8;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r6, $r11;
        int i0, i1, i2, $i3, $i4, $i6;
        java.lang.String $r7, $r10;
        java.lang.IllegalArgumentException $r12;

        r8 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 != 0 goto label1;

        if i1 != 0 goto label1;

        if i2 == 0 goto label7;

     label1:
        $i6 = (int) -1;

        if i0 == $i6 goto label2;

        if i0 != 1 goto label4;

     label2:
        if i1 < 0 goto label4;

        if i2 < 0 goto label4;

        if i1 != 14 goto label3;

        if i2 == 0 goto label7;

     label3:
        if i1 >= 14 goto label4;

        if i2 < 60 goto label7;

     label4:
        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("time zone out of range (-14:00 to +14:00). (");

        if i0 >= 0 goto label5;

        $r10 = "-";

        goto label6;

     label5:
        $r10 = "+";

     label6:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r12;

     label7:
        $i3 = r8.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i4 = $i3 | 1;

        r8.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i4;

        r8.<org.apache.xmlbeans.GDateBuilder: int _tzsign> = i0;

        r8.<org.apache.xmlbeans.GDateBuilder: int _tzh> = i1;

        r8.<org.apache.xmlbeans.GDateBuilder: int _tzm> = i2;

        return;
    }

    public void setTimeZone(int)
    {
        org.apache.xmlbeans.GDateBuilder r6;
        java.lang.IllegalArgumentException $r8;
        byte $b6, $b7;
        java.lang.StringBuffer $r2, $r3, $r4, $r7;
        int i0, $i2, $i3, $i4, $i5, $i9;
        java.lang.String $r5;

        r6 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        $i9 = (int) -840;

        if i0 < $i9 goto label1;

        if i0 <= 840 goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("time zone out of range (-840 to 840 minutes). (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label2:
        if i0 >= 0 goto label3;

        $b7 = -1;

        $b6 = -1;

        goto label5;

     label3:
        if i0 <= 0 goto label4;

        $b7 = 1;

        $b6 = 1;

        goto label5;

     label4:
        $b7 = 0;

        $b6 = 0;

     label5:
        $i2 = i0 * $b7;

        $i3 = $i2 / 60;

        $i4 = $i3 * 60;

        $i5 = $i2 - $i4;

        virtualinvoke r6.<org.apache.xmlbeans.GDateBuilder: void setTimeZone(int,int,int)>($b6, $i3, $i5);

        return;
    }

    public void clearYear()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i3 = (int) -3;

        $i1 = $i0 & $i3;

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = 0;

        return;
    }

    public void clearMonth()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i3 = (int) -5;

        $i1 = $i0 & $i3;

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = 0;

        return;
    }

    public void clearDay()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i3 = (int) -9;

        $i1 = $i0 & $i3;

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = 0;

        return;
    }

    public void clearTime()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i3 = (int) -17;

        $i1 = $i0 & $i3;

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _h> = 0;

        r0.<org.apache.xmlbeans.GDateBuilder: int _m> = 0;

        r0.<org.apache.xmlbeans.GDateBuilder: int _s> = 0;

        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = null;

        return;
    }

    public void clearTimeZone()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i3 = (int) -2;

        $i1 = $i0 & $i3;

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzsign> = 0;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzh> = 0;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzm> = 0;

        return;
    }

    public boolean isValid()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $z0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: boolean isValidGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        return $z0;
    }

    static final boolean isValidGDate(org.apache.xmlbeans.GDateSpecification)
    {
        java.math.BigDecimal $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.GDateSpecification r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i39;

        r0 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z0 == 0 goto label01;

        $i34 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        if $i34 != 0 goto label01;

        return 0;

     label01:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z1 == 0 goto label03;

        $i32 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        if $i32 < 1 goto label02;

        $i33 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        if $i33 <= 12 goto label03;

     label02:
        return 0;

     label03:
        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z2 == 0 goto label08;

        $i21 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i21 < 1 goto label07;

        $i22 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i22 > 31 goto label07;

        $i23 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i23 <= 28 goto label08;

        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z3 == 0 goto label08;

        $z4 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z4 == 0 goto label06;

        $i27 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        $i28 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        if $i28 <= 0 goto label04;

        $i35 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        goto label05;

     label04:
        $i29 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        $i35 = $i29 + 1;

     label05:
        $i30 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        $i31 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _maxDayInMonthFor(int,int)>($i35, $i30);

        if $i27 <= $i31 goto label08;

        goto label07;

     label06:
        $i24 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        $i25 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        $i26 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _maxDayInMonth(int)>($i25);

        if $i24 <= $i26 goto label08;

     label07:
        return 0;

     label08:
        $z5 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z5 == 0 goto label11;

        $i10 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        if $i10 < 0 goto label09;

        $i14 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        if $i14 > 23 goto label09;

        $i15 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        if $i15 < 0 goto label09;

        $i16 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        if $i16 > 59 goto label09;

        $i17 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        if $i17 < 0 goto label09;

        $i18 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        if $i18 > 59 goto label09;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        $i19 = virtualinvoke $r3.<java.math.BigDecimal: int signum()>();

        if $i19 < 0 goto label09;

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        $r5 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _one>;

        $i20 = virtualinvoke $r4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r5);

        if $i20 < 0 goto label11;

     label09:
        $i36 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        if $i36 != 24 goto label10;

        $i11 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        if $i11 != 0 goto label10;

        $i12 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        if $i12 != 0 goto label10;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        $r2 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        $i13 = virtualinvoke $r1.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r2);

        if $i13 == 0 goto label11;

     label10:
        return 0;

     label11:
        $z6 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z6 == 0 goto label16;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i0 != 0 goto label12;

        $i8 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        if $i8 != 0 goto label12;

        $i9 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        if $i9 == 0 goto label16;

     label12:
        $i37 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i39 = (int) -1;

        if $i37 == $i39 goto label13;

        $i7 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i7 != 1 goto label15;

     label13:
        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        if $i1 < 0 goto label15;

        $i2 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        if $i2 < 0 goto label15;

        $i3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        if $i3 != 14 goto label14;

        $i6 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        if $i6 == 0 goto label16;

     label14:
        $i4 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        if $i4 >= 14 goto label15;

        $i5 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        if $i5 < 60 goto label16;

     label15:
        return 0;

     label16:
        return 1;
    }

    public void normalize()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.math.BigDecimal $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, $i10, $i12;
        java.math.BigInteger $r5;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        char $c8;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasMonth()>();

        if $z0 != $z1 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasYear()>();

        if $z2 != $z3 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTimeZone()>();

        if $z4 == 0 goto label1;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z5 == 0 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void normalizeToTimeZone(int,int,int)>(0, 0, 0);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: void _normalizeTimeAndDate()>();

     label2:
        $z6 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z6 == 0 goto label7;

        $r1 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        if $r1 == null goto label7;

        $r2 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $i0 = virtualinvoke $r2.<java.math.BigDecimal: int scale()>();

        if $i0 <= 0 goto label7;

        $r3 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $i1 = virtualinvoke $r3.<java.math.BigDecimal: int signum()>();

        if $i1 != 0 goto label3;

        $r10 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r10;

        goto label7;

     label3:
        $r4 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r5 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.lang.String toString()>();

        i9 = virtualinvoke $r6.<java.lang.String: int length()>();

     label4:
        if i9 <= 0 goto label6;

        $i7 = i9 - 1;

        $c8 = virtualinvoke $r6.<java.lang.String: char charAt(int)>($i7);

        $i10 = (int) $c8;

        if $i10 == 48 goto label5;

        goto label6;

     label5:
        $i12 = (int) -1;

        i9 = i9 + $i12;

        goto label4;

     label6:
        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i9 >= $i2 goto label7;

        $r8 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r7 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $i3 = virtualinvoke $r7.<java.math.BigDecimal: int scale()>();

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i5 = $i3 - $i4;

        $i6 = $i5 + i9;

        $r9 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal setScale(int)>($i6);

        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r9;

     label7:
        return;
    }

    void normalize24h()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: int getHour()>();

        if $i0 == 24 goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: void _normalizeTimeAndDate()>();

        return;
    }

    private void _normalizeTimeAndDate()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        long $l1, $l3, $l5, $l11, $l12, l14;
        int $i0, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i13;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        l14 = 0L;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z0 == 0 goto label1;

        l14 = specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: long _normalizeTime()>();

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        if $z1 == 0 goto label2;

        $i10 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        $l11 = (long) $i10;

        $l12 = $l11 + l14;

        $i13 = (int) $l12;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = $i13;

     label2:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDate()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: void _normalizeDate()>();

        goto label5;

     label3:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasMonth()>();

        if $z3 == 0 goto label5;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        if $i0 < 1 goto label4;

        $i8 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        if $i8 <= 12 goto label5;

     label4:
        $i9 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        $l1 = (long) $i9;

        $i2 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _modulo(long,int,int)>($l1, 1, 13);

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = $i2;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasYear()>();

        if $z4 == 0 goto label5;

        $i4 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $l3 = (long) $i9;

        $l5 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int,int)>($l3, 1, 13);

        $i6 = (int) $l5;

        $i7 = $i4 + $i6;

        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i7;

     label5:
        return;
    }

    public void normalizeToTimeZone(int, int, int)
    {
        java.lang.IllegalStateException $r5, $r6;
        org.apache.xmlbeans.GDateBuilder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, i12, $i14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 != 0 goto label1;

        if i1 != 0 goto label1;

        if i2 == 0 goto label5;

     label1:
        $i14 = (int) -1;

        if i0 == $i14 goto label2;

        if i0 != 1 goto label4;

     label2:
        if i1 < 0 goto label4;

        if i2 < 0 goto label4;

        if i1 != 14 goto label3;

        if i2 == 0 goto label5;

     label3:
        if i1 >= 14 goto label4;

        if i2 < 60 goto label5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("time zone must be between -14:00 and +14:00");

        throw $r4;

     label5:
        $z5 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTimeZone()>();

        if $z5 == 0 goto label6;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z0 != 0 goto label7;

     label6:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot normalize time zone without both time and timezone");

        throw $r5;

     label7:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasMonth()>();

        if $z1 != $z2 goto label8;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasYear()>();

        if $z3 == $z4 goto label9;

     label8:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot do date math without a complete date");

        throw $r6;

     label9:
        $i6 = i0 * i1;

        $i4 = r0.<org.apache.xmlbeans.GDateBuilder: int _tzsign>;

        $i3 = r0.<org.apache.xmlbeans.GDateBuilder: int _tzh>;

        $i5 = $i4 * $i3;

        i7 = $i6 - $i5;

        $i11 = i0 * i2;

        $i9 = r0.<org.apache.xmlbeans.GDateBuilder: int _tzsign>;

        $i8 = r0.<org.apache.xmlbeans.GDateBuilder: int _tzm>;

        $i10 = $i9 * $i8;

        i12 = $i11 - $i10;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzsign> = i0;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzh> = i1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzm> = i2;

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void addDuration(int,int,int,int,int,int,int,java.math.BigDecimal)>(1, 0, 0, 0, i7, i12, 0, null);

        return;
    }

    public void normalizeToTimeZone(int)
    {
        org.apache.xmlbeans.GDateBuilder r6;
        java.lang.IllegalArgumentException $r8;
        byte $b6, $b7;
        java.lang.StringBuffer $r2, $r3, $r4, $r7;
        int i0, $i2, $i3, $i4, $i5, $i9;
        java.lang.String $r5;

        r6 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        $i9 = (int) -840;

        if i0 < $i9 goto label1;

        if i0 <= 840 goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("time zone out of range (-840 to 840 minutes). (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label2:
        if i0 >= 0 goto label3;

        $b7 = -1;

        $b6 = -1;

        goto label5;

     label3:
        if i0 <= 0 goto label4;

        $b7 = 1;

        $b6 = 1;

        goto label5;

     label4:
        $b7 = 0;

        $b6 = 0;

     label5:
        $i2 = i0 * $b6;

        $i3 = $i2 / 60;

        $i4 = $i3 * 60;

        $i5 = $i2 - $i4;

        virtualinvoke r6.<org.apache.xmlbeans.GDateBuilder: void normalizeToTimeZone(int,int,int)>($b7, $i3, $i5);

        return;
    }

    public void addGDuration(org.apache.xmlbeans.GDurationSpecification)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.math.BigDecimal $r2;
        org.apache.xmlbeans.GDurationSpecification r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r1 := @parameter0: org.apache.xmlbeans.GDurationSpecification;

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getSign()>();

        $i1 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getYear()>();

        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getMonth()>();

        $i3 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getDay()>();

        $i4 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getHour()>();

        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getMinute()>();

        $i6 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getSecond()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: java.math.BigDecimal getFraction()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void addDuration(int,int,int,int,int,int,int,java.math.BigDecimal)>($i0, $i1, $i2, $i3, $i4, $i5, $i6, $r2);

        return;
    }

    public void subtractGDuration(org.apache.xmlbeans.GDurationSpecification)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.math.BigDecimal $r2;
        org.apache.xmlbeans.GDurationSpecification r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r1 := @parameter0: org.apache.xmlbeans.GDurationSpecification;

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getSign()>();

        $i1 = neg $i0;

        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getYear()>();

        $i3 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getMonth()>();

        $i4 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getDay()>();

        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getHour()>();

        $i6 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getMinute()>();

        $i7 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: int getSecond()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.GDurationSpecification: java.math.BigDecimal getFraction()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void addDuration(int,int,int,int,int,int,int,java.math.BigDecimal)>($i1, $i2, $i3, $i4, $i5, $i6, $i7, $r2);

        return;
    }

    private void _normalizeDate()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        long $l8, $l11, $l12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i13, $i14, $i15, $i16, $i17, $i18;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        if $i0 < 1 goto label1;

        $i1 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        if $i1 > 12 goto label1;

        $i2 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        if $i2 < 1 goto label1;

        $i5 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        $i4 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $i3 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        $i6 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _maxDayInMonthFor(int,int)>($i4, $i3);

        if $i5 <= $i6 goto label2;

     label1:
        $i7 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        $l8 = (long) $i7;

        $i9 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _modulo(long,int,int)>($l8, 1, 13);

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = $i9;

        $i10 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $l11 = (long) $i7;

        $l12 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int,int)>($l11, 1, 13);

        $i13 = (int) $l12;

        $i14 = $i10 + $i13;

        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i14;

        $i15 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        $i16 = $i15 - 1;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = 1;

        $i17 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: int getJulianDate()>();

        $i18 = $i17 + $i16;

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setJulianDate(int)>($i18);

     label2:
        return;
    }

    private long _normalizeTime()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.math.BigDecimal $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b9;
        long l8, $l11, $l12, $l13, $l16, $l17, $l18, $l21, $l22, $l23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i14, $i15, $i19, $i20, $i24;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        l8 = 0L;

        $r1 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $i6 = virtualinvoke $r2.<java.math.BigDecimal: int signum()>();

        if $i6 < 0 goto label1;

        $r8 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r7 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _one>;

        $i7 = virtualinvoke $r8.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r7);

        if $i7 < 0 goto label2;

     label1:
        $r3 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(0, 3);

        $r5 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r6 = virtualinvoke $r5.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r4);

        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r6;

        l8 = virtualinvoke $r4.<java.math.BigDecimal: long longValue()>();

     label2:
        $b9 = l8 cmp 0L;

        if $b9 != 0 goto label3;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _s>;

        if $i0 < 0 goto label3;

        $i1 = r0.<org.apache.xmlbeans.GDateBuilder: int _s>;

        if $i1 > 59 goto label3;

        $i2 = r0.<org.apache.xmlbeans.GDateBuilder: int _m>;

        if $i2 < 0 goto label3;

        $i3 = r0.<org.apache.xmlbeans.GDateBuilder: int _m>;

        if $i3 > 50 goto label3;

        $i4 = r0.<org.apache.xmlbeans.GDateBuilder: int _h>;

        if $i4 < 0 goto label3;

        $i5 = r0.<org.apache.xmlbeans.GDateBuilder: int _h>;

        if $i5 <= 23 goto label4;

     label3:
        $i10 = r0.<org.apache.xmlbeans.GDateBuilder: int _s>;

        $l11 = (long) $i10;

        $l12 = $l11 + l8;

        $l13 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int)>($l12, 60);

        $i14 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _mod(long,int,long)>($l12, 60, $l13);

        r0.<org.apache.xmlbeans.GDateBuilder: int _s> = $i14;

        $i15 = r0.<org.apache.xmlbeans.GDateBuilder: int _m>;

        $l16 = (long) $i15;

        $l17 = $l16 + $l13;

        $l18 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int)>($l17, 60);

        $i19 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _mod(long,int,long)>($l17, 60, $l18);

        r0.<org.apache.xmlbeans.GDateBuilder: int _m> = $i19;

        $i20 = r0.<org.apache.xmlbeans.GDateBuilder: int _h>;

        $l21 = (long) $i20;

        $l22 = $l21 + $l18;

        $l23 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int)>($l22, 24);

        l8 = $l23;

        $i24 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _mod(long,int,long)>($l22, 24, $l23);

        r0.<org.apache.xmlbeans.GDateBuilder: int _h> = $i24;

     label4:
        return l8;
    }

    public void addDuration(int, int, int, int, int, int, int, java.math.BigDecimal)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.math.BigDecimal r1, $r2, $r3, $r4, $r8;
        long $l5, $l10, $l12, $l18, $l19, $l20, $l21, l34;
        java.lang.AssertionError $r5;
        java.lang.IllegalStateException $r6, $r7;
        boolean z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z10, $z11, $z12, $z13;
        int i0, i1, i2, $i3, $i4, $i6, i7, $i8, $i9, $i11, $i13, $i14, $i15, i16, $i17, $i22, i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        i2 := @parameter0: int;

        i7 := @parameter1: int;

        i1 := @parameter2: int;

        i16 := @parameter3: int;

        i0 := @parameter4: int;

        i24 := @parameter5: int;

        i23 := @parameter6: int;

        r1 := @parameter7: java.math.BigDecimal;

        if i0 != 0 goto label01;

        if i24 != 0 goto label01;

        if i23 != 0 goto label01;

        if r1 == null goto label02;

        $i33 = virtualinvoke r1.<java.math.BigDecimal: int signum()>();

        if $i33 == 0 goto label02;

     label01:
        $z11 = 1;

        $z10 = 1;

        goto label03;

     label02:
        $z11 = 0;

        $z10 = 0;

     label03:
        z0 = $z11;

        if $z10 == 0 goto label04;

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z7 != 0 goto label04;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot do time math without a complete time");

        throw $r7;

     label04:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        if $z1 == 0 goto label06;

        if i16 != 0 goto label05;

        if z0 == 0 goto label06;

     label05:
        $z13 = 1;

        $z12 = 1;

        goto label07;

     label06:
        $z13 = 0;

        $z12 = 0;

     label07:
        z2 = $z12;

        if $z13 == 0 goto label08;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDate()>();

        if $z6 != 0 goto label08;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot do date math without a complete date");

        throw $r6;

     label08:
        if i1 != 0 goto label09;

        if i7 == 0 goto label12;

     label09:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        if $z3 == 0 goto label10;

        specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: void _normalizeDate()>();

     label10:
        $i4 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        $i3 = i2 * i1;

        $i32 = $i4 + $i3;

        $l5 = (long) $i32;

        $i6 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _modulo(long,int,int)>($l5, 1, 13);

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = $i6;

        $i9 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $i8 = i2 * i7;

        $i11 = $i9 + $i8;

        $l10 = (long) $i32;

        $l12 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int,int)>($l10, 1, 13);

        $i13 = (int) $l12;

        $i14 = $i11 + $i13;

        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i14;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        if $z4 == 0 goto label12;

        $z5 = <org.apache.xmlbeans.GDateBuilder: boolean $assertionsDisabled>;

        if $z5 != 0 goto label11;

        $i31 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        if $i31 >= 1 goto label11;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label11:
        $i28 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $i27 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        $i29 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _maxDayInMonthFor(int,int)>($i28, $i27);

        $i30 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        if $i30 <= $i29 goto label12;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = $i29;

     label12:
        l34 = 0L;

        if z0 == 0 goto label17;

        if r1 == null goto label16;

        $i25 = virtualinvoke r1.<java.math.BigDecimal: int signum()>();

        if $i25 == 0 goto label16;

        $r2 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $i26 = virtualinvoke $r2.<java.math.BigDecimal: int signum()>();

        if $i26 != 0 goto label13;

        if i2 != 1 goto label13;

        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = r1;

        goto label16;

     label13:
        if i2 != 1 goto label14;

        $r4 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r8 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r1);

        goto label15;

     label14:
        $r3 = r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $r8 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>(r1);

     label15:
        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r8;

     label16:
        $i35 = r0.<org.apache.xmlbeans.GDateBuilder: int _s>;

        $i36 = i2 * i23;

        $i37 = $i35 + $i36;

        r0.<org.apache.xmlbeans.GDateBuilder: int _s> = $i37;

        $i38 = r0.<org.apache.xmlbeans.GDateBuilder: int _m>;

        $i39 = i2 * i24;

        $i40 = $i38 + $i39;

        r0.<org.apache.xmlbeans.GDateBuilder: int _m> = $i40;

        $i41 = r0.<org.apache.xmlbeans.GDateBuilder: int _h>;

        $i42 = i2 * i0;

        $i43 = $i41 + $i42;

        r0.<org.apache.xmlbeans.GDateBuilder: int _h> = $i43;

        l34 = specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: long _normalizeTime()>();

     label17:
        if z2 == 0 goto label18;

        $i15 = r0.<org.apache.xmlbeans.GDateBuilder: int _D>;

        $l20 = (long) $i15;

        $i17 = i2 * i16;

        $l18 = (long) $i17;

        $l19 = $l18 + l34;

        $l21 = $l20 + $l19;

        $i22 = (int) $l21;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = $i22;

        specialinvoke r0.<org.apache.xmlbeans.GDateBuilder: void _normalizeDate()>();

     label18:
        return;
    }

    private static int _maxDayInMonthFor(int, int)
    {
        byte $b2;
        int i0, i1;
        boolean $z0;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 == 4 goto label1;

        if i0 == 6 goto label1;

        if i0 == 9 goto label1;

        if i0 != 11 goto label2;

     label1:
        return 30;

     label2:
        if i0 != 2 goto label5;

        $z0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: boolean _isLeapYear(int)>(i1);

        if $z0 == 0 goto label3;

        $b2 = 29;

        goto label4;

     label3:
        $b2 = 28;

     label4:
        return $b2;

     label5:
        return 31;
    }

    private static int _maxDayInMonth(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 == 6 goto label1;

        if i0 == 9 goto label1;

        if i0 != 11 goto label2;

     label1:
        return 30;

     label2:
        if i0 != 2 goto label3;

        return 29;

     label3:
        return 31;
    }

    public final int getJulianDate()
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int julianDateForGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        return $i0;
    }

    public void setJulianDate(int)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("date before year -4713");

        throw $r1;

     label1:
        i31 = i0 + 68569;

        $i1 = 4 * i31;

        i2 = $i1 / 146097;

        $i3 = 146097 * i2;

        $i4 = $i3 + 3;

        $i5 = $i4 / 4;

        i32 = i31 - $i5;

        $i6 = i32 + 1;

        $i7 = 4000 * $i6;

        $i8 = $i7 / 1461001;

        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i8;

        $i9 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $i10 = 1461 * $i9;

        $i11 = $i10 / 4;

        $i12 = i32 - $i11;

        i33 = $i12 + 31;

        $i13 = 80 * i33;

        $i14 = $i13 / 2447;

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = $i14;

        $i15 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        $i16 = 2447 * $i15;

        $i17 = $i16 / 80;

        $i18 = i33 - $i17;

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = $i18;

        $i19 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        i34 = $i19 / 11;

        $i20 = r0.<org.apache.xmlbeans.GDateBuilder: int _M>;

        $i22 = $i20 + 2;

        $i21 = 12 * i34;

        $i23 = $i22 - $i21;

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = $i23;

        $i24 = i2 - 49;

        $i26 = 100 * $i24;

        $i25 = r0.<org.apache.xmlbeans.GDateBuilder: int _CY>;

        $i27 = $i26 + $i25;

        $i28 = $i27 + i34;

        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i28;

        $i29 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i30 = $i29 | 14;

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i30;

        return;
    }

    public void setDate(java.util.Date)
    {
        org.apache.xmlbeans.GDateBuilder r2;
        java.util.Date r1;
        long $l0, $l9, $l10, $l11;
        java.math.BigDecimal $r3, $r5, $r6, $r7;
        org.apache.xmlbeans.GDuration $r8;
        byte b18, b19, b20;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i14, $i15, $i16, i17, $i22;
        java.util.TimeZone $r0;

        r2 := @this: org.apache.xmlbeans.GDateBuilder;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $i1 = virtualinvoke $r0.<java.util.TimeZone: int getOffset(long)>($l0);

        i17 = $i1;

        b18 = 1;

        b20 = 1;

        b19 = 1;

        if $i1 >= 0 goto label1;

        b18 = -1;

        b20 = -1;

        b19 = -1;

        i17 = neg $i1;

     label1:
        $i22 = (int) 60000;

        $i13 = i17 / $i22;

        $i14 = $i13 / 60;

        $i2 = $i14 * 60;

        $i15 = $i13 - $i2;

        virtualinvoke r2.<org.apache.xmlbeans.GDateBuilder: void setTimeZone(int,int,int)>(b19, $i14, $i15);

        $i3 = $i14 * 60;

        $i4 = $i3 + $i15;

        $i5 = b20 * $i4;

        $i6 = $i5 * 60;

        $i16 = $i6 * 1000;

        $r3 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        virtualinvoke r2.<org.apache.xmlbeans.GDateBuilder: void setTime(int,int,int,java.math.BigDecimal)>(0, 0, 0, $r3);

        $i7 = r2.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i8 = $i7 | 14;

        r2.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i8;

        r2.<org.apache.xmlbeans.GDateBuilder: int _CY> = 1970;

        r2.<org.apache.xmlbeans.GDateBuilder: int _M> = 1;

        r2.<org.apache.xmlbeans.GDateBuilder: int _D> = 1;

        $r8 = new org.apache.xmlbeans.GDuration;

        $l9 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l10 = (long) $i16;

        $l11 = $l9 + $l10;

        $r5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>($l11, 3);

        specialinvoke $r8.<org.apache.xmlbeans.GDuration: void <init>(int,int,int,int,int,int,int,java.math.BigDecimal)>(1, 0, 0, 0, 0, 0, 0, $r5);

        virtualinvoke r2.<org.apache.xmlbeans.GDateBuilder: void addGDuration(org.apache.xmlbeans.GDurationSpecification)>($r8);

        $r6 = r2.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs>;

        $i12 = virtualinvoke $r6.<java.math.BigDecimal: int signum()>();

        if $i12 != 0 goto label2;

        $r7 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        r2.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r7;

     label2:
        return;
    }

    public void setGDate(org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.GDateBuilder r0;
        org.apache.xmlbeans.GDateSpecification r1;
        java.math.BigDecimal $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r1 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getFlags()>();

        $i1 = $i0 & 31;

        r0.<org.apache.xmlbeans.GDateBuilder: int _bits> = $i1;

        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        if $i2 <= 0 goto label1;

        $i11 = $i2;

        goto label2;

     label1:
        $i11 = $i2 + 1;

     label2:
        r0.<org.apache.xmlbeans.GDateBuilder: int _CY> = $i11;

        $i3 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _M> = $i3;

        $i4 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _D> = $i4;

        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _h> = $i5;

        $i6 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _m> = $i6;

        $i7 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _s> = $i7;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal _fs> = $r2;

        $i8 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzsign> = $i8;

        $i9 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzh> = $i9;

        $i10 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        r0.<org.apache.xmlbeans.GDateBuilder: int _tzm> = $i10;

        return;
    }

    public org.apache.xmlbeans.XmlCalendar getCalendar()
    {
        org.apache.xmlbeans.XmlCalendar $r0;
        org.apache.xmlbeans.GDateBuilder r1;

        r1 := @this: org.apache.xmlbeans.GDateBuilder;

        $r0 = new org.apache.xmlbeans.XmlCalendar;

        specialinvoke $r0.<org.apache.xmlbeans.XmlCalendar: void <init>(org.apache.xmlbeans.GDateSpecification)>(r1);

        return $r0;
    }

    public java.util.Date getDate()
    {
        org.apache.xmlbeans.GDateBuilder r0;
        java.util.Date $r1;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $r1 = staticinvoke <org.apache.xmlbeans.GDateBuilder: java.util.Date dateForGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        return $r1;
    }

    static int julianDateForGDate(org.apache.xmlbeans.GDateSpecification)
    {
        java.lang.IllegalStateException $r1, $r2;
        boolean $z0;
        org.apache.xmlbeans.GDateSpecification r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;

        r0 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasDate()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot do date math without a complete date");

        throw $r2;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        $i2 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        if $i2 <= 0 goto label2;

        $i27 = $i2;

        goto label3;

     label2:
        $i27 = $i2 + 1;

     label3:
        $i9 = $i0 - 32075;

        $i5 = $i27 + 4800;

        $i3 = $i1 - 14;

        $i4 = $i3 / 12;

        $i6 = $i5 + $i4;

        $i7 = 1461 * $i6;

        $i8 = $i7 / 4;

        $i17 = $i9 + $i8;

        $i13 = $i1 - 2;

        $i10 = $i1 - 14;

        $i11 = $i10 / 12;

        $i12 = $i11 * 12;

        $i14 = $i13 - $i12;

        $i15 = 367 * $i14;

        $i16 = $i15 / 12;

        $i25 = $i17 + $i16;

        $i20 = $i27 + 4900;

        $i18 = $i1 - 14;

        $i19 = $i18 / 12;

        $i21 = $i20 + $i19;

        $i22 = $i21 / 100;

        $i23 = 3 * $i22;

        $i24 = $i23 / 4;

        $i26 = $i25 - $i24;

        if $i26 >= 0 goto label4;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("date too far in the past (year allowed to -4713)");

        throw $r1;

     label4:
        return $i26;
    }

    static java.util.Date dateForGDate(org.apache.xmlbeans.GDateSpecification)
    {
        java.util.Date $r2;
        boolean $z0;
        java.util.TimeZone $r1;
        org.apache.xmlbeans.GDateSpecification r0;
        long l1, l2, $l4, $l7, $l11, $l16, $l18, $l24, $l31, l32, l33, l34, l35, l36, l37, l38;
        int $i0, $i3, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30;

        r0 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $i0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int julianDateForGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        l1 = (long) $i0;

        l2 = l1 - 2440588L;

        l32 = 86400000L * l2;

        $i3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMillisecond()>();

        $l4 = (long) $i3;

        l33 = l32 + $l4;

        $i5 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        $i6 = $i5 * 1000;

        $l7 = (long) $i6;

        l34 = l33 + $l7;

        $i8 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        $i9 = $i8 * 60;

        $i10 = $i9 * 1000;

        $l11 = (long) $i10;

        l35 = l34 + $l11;

        $i12 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        $i13 = $i12 * 60;

        $i14 = $i13 * 60;

        $i15 = $i14 * 1000;

        $l16 = (long) $i15;

        l36 = l35 + $l16;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z0 == 0 goto label1;

        $i19 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        $i20 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i21 = $i19 * $i20;

        $i22 = $i21 * 60;

        $i23 = $i22 * 1000;

        $l24 = (long) $i23;

        l37 = l36 - $l24;

        $i25 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i26 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i27 = $i25 * $i26;

        $i28 = $i27 * 60;

        $i29 = $i28 * 60;

        $i30 = $i29 * 1000;

        $l31 = (long) $i30;

        l38 = l37 - $l31;

        goto label2;

     label1:
        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $i17 = virtualinvoke $r1.<java.util.TimeZone: int getOffset(long)>(l36);

        $l18 = (long) $i17;

        l38 = l36 - $l18;

     label2:
        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>(l38);

        return $r2;
    }

    private static boolean _isLeapYear(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 % 4;

        if $i1 != 0 goto label2;

        $i2 = i0 % 100;

        if $i2 != 0 goto label1;

        $i3 = i0 % 400;

        if $i3 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static final long _fQuotient(long, int)
    {
        long l0, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10;
        byte $b1;
        int i2, $i11;
        boolean $z0, $z1;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        $b1 = l0 cmp 0L;

        $i11 = (int) $b1;

        if $i11 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if i2 >= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z0 != $z1 goto label5;

        $l9 = (long) i2;

        $l10 = l0 / $l9;

        return $l10;

     label5:
        $l3 = (long) i2;

        $l4 = $l3 - l0;

        $l6 = $l4 - 1L;

        $l5 = (long) i2;

        $l7 = $l6 / $l5;

        $l8 = neg $l7;

        return $l8;
    }

    private static int _mod(long, int, long)
    {
        int i2, $i6;
        long l0, l1, $l3, $l4, $l5;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        l1 := @parameter2: long;

        $l3 = (long) i2;

        $l4 = l1 * $l3;

        $l5 = l0 - $l4;

        $i6 = (int) $l5;

        return $i6;
    }

    private static final int _modulo(long, int, int)
    {
        long l0, $l2, l3, $l6;
        int i1, i4, i5, $i7, $i8;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $l2 = (long) i1;

        l3 = l0 - $l2;

        i5 = i4 - i1;

        $l6 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int)>(l3, i5);

        $i7 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int _mod(long,int,long)>(l3, i5, $l6);

        $i8 = $i7 + i1;

        return $i8;
    }

    private static final long _fQuotient(long, int, int)
    {
        int i1, i3, $i4;
        long l0, $l2, $l5, $l6;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        $l2 = (long) i1;

        $l5 = l0 - $l2;

        $i4 = i3 - i1;

        $l6 = staticinvoke <org.apache.xmlbeans.GDateBuilder: long _fQuotient(long,int)>($l5, $i4);

        return $l6;
    }

    private void _setToFirstMoment()
    {
        java.math.BigDecimal $r1;
        org.apache.xmlbeans.GDateBuilder r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasYear()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setYear(int)>(1584);

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasMonth()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setMonth(int)>(1);

     label2:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        if $z2 != 0 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setDay(int)>(1);

     label3:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z3 != 0 goto label4;

        $r1 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void setTime(int,int,int,java.math.BigDecimal)>(0, 0, 0, $r1);

     label4:
        return;
    }

    public final int compareToGDate(org.apache.xmlbeans.GDateSpecification)
    {
        int $i0;
        org.apache.xmlbeans.GDateBuilder r0;
        org.apache.xmlbeans.GDateSpecification r1;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        r1 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $i0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int compareGDate(org.apache.xmlbeans.GDateSpecification,org.apache.xmlbeans.GDateSpecification)>(r0, r1);

        return $i0;
    }

    static final int compareGDate(org.apache.xmlbeans.GDateSpecification, org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.GDateBuilder $r1, $r3, $r7, $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.GDateSpecification r4, r5;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i40, $i42;

        r4 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        r5 := @parameter1: org.apache.xmlbeans.GDateSpecification;

        $i0 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getFlags()>();

        $i1 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getFlags()>();

        i2 = $i0 ^ $i1;

        $i3 = i2 & 31;

        if $i3 != 0 goto label06;

        $z1 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z1 == 0 goto label05;

        $i20 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i21 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        if $i20 != $i21 goto label01;

        $i22 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        $i23 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        if $i22 != $i23 goto label01;

        $i24 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i25 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i24 == $i25 goto label05;

     label01:
        $r9 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r9.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r5);

        r5 = $r9;

        $i26 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getFlags()>();

        $i27 = $i26 & 14;

        if $i27 == 0 goto label02;

        if $i27 != 14 goto label03;

     label02:
        $z2 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z2 != 0 goto label04;

     label03:
        $r1 = (org.apache.xmlbeans.GDateBuilder) $r9;

        specialinvoke $r1.<org.apache.xmlbeans.GDateBuilder: void _setToFirstMoment()>();

        $r10 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r10.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r4);

        r4 = $r10;

        $r3 = (org.apache.xmlbeans.GDateBuilder) $r10;

        specialinvoke $r3.<org.apache.xmlbeans.GDateBuilder: void _setToFirstMoment()>();

     label04:
        $r7 = (org.apache.xmlbeans.GDateBuilder) $r9;

        $i28 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i29 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i30 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        virtualinvoke $r7.<org.apache.xmlbeans.GDateBuilder: void normalizeToTimeZone(int,int,int)>($i28, $i29, $i30);

     label05:
        $i31 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int fieldwiseCompare(org.apache.xmlbeans.GDateSpecification,org.apache.xmlbeans.GDateSpecification)>(r4, r5);

        return $i31;

     label06:
        $i4 = i2 & 30;

        if $i4 == 0 goto label07;

        return 2;

     label07:
        $z0 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z0 != 0 goto label10;

        $i19 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int compareGDate(org.apache.xmlbeans.GDateSpecification,org.apache.xmlbeans.GDateSpecification)>(r5, r4);

        if $i19 != 2 goto label08;

        $i32 = 2;

        goto label09;

     label08:
        $i32 = neg $i19;

     label09:
        return $i32;

     label10:
        $r11 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r11.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r4);

        $i5 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getFlags()>();

        $i6 = $i5 & 14;

        if $i6 != 12 goto label12;

        $i11 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i11 != 28 goto label11;

        $i16 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        if $i16 != 2 goto label11;

        $i17 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i17 != 1 goto label12;

        $i18 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        if $i18 != 3 goto label12;

        virtualinvoke $r11.<org.apache.xmlbeans.GDateBuilder: void setDay(int)>(29);

        goto label12;

     label11:
        $i12 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i12 != 28 goto label12;

        $i13 = interfaceinvoke r5.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        if $i13 != 2 goto label12;

        $i14 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i14 != 1 goto label12;

        $i15 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        if $i15 != 3 goto label12;

        virtualinvoke $r11.<org.apache.xmlbeans.GDateBuilder: void setMonth(int)>(2);

        virtualinvoke $r11.<org.apache.xmlbeans.GDateBuilder: void setDay(int)>(29);

     label12:
        specialinvoke $r11.<org.apache.xmlbeans.GDateBuilder: void _setToFirstMoment()>();

        $r12 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r5);

        specialinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void _setToFirstMoment()>();

        virtualinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void setTimeZone(int,int,int)>(1, 14, 0);

        $i33 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i34 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i35 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        virtualinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void normalizeToTimeZone(int,int,int)>($i33, $i34, $i35);

        $i36 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int fieldwiseCompare(org.apache.xmlbeans.GDateSpecification,org.apache.xmlbeans.GDateSpecification)>($r11, $r12);

        $i38 = (int) -1;

        if $i36 != $i38 goto label13;

        $i40 = (int) -1;

        return $i40;

     label13:
        virtualinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void setGDate(org.apache.xmlbeans.GDateSpecification)>(r5);

        specialinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void _setToFirstMoment()>();

        $i42 = (int) -1;

        virtualinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void setTimeZone(int,int,int)>($i42, 14, 0);

        $i7 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i8 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i9 = interfaceinvoke r4.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        virtualinvoke $r12.<org.apache.xmlbeans.GDateBuilder: void normalizeToTimeZone(int,int,int)>($i7, $i8, $i9);

        $i10 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int fieldwiseCompare(org.apache.xmlbeans.GDateSpecification,org.apache.xmlbeans.GDateSpecification)>($r11, $r12);

        if $i10 != 1 goto label14;

        return 1;

     label14:
        return 2;
    }

    private static int fieldwiseCompare(org.apache.xmlbeans.GDateSpecification, org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.GDateSpecification r0, r1;
        java.math.BigDecimal $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16, $i18, $i20, $i22, $i24;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        r1 := @parameter1: org.apache.xmlbeans.GDateSpecification;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z0 == 0 goto label02;

        $i10 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        $i11 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        if $i11 >= $i10 goto label01;

        $i14 = (int) -1;

        return $i14;

     label01:
        if $i11 <= $i10 goto label02;

        return 1;

     label02:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z1 == 0 goto label04;

        $i8 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        $i9 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        if $i9 >= $i8 goto label03;

        $i16 = (int) -1;

        return $i16;

     label03:
        if $i9 <= $i8 goto label04;

        return 1;

     label04:
        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z2 == 0 goto label06;

        $i6 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        $i7 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        if $i7 >= $i6 goto label05;

        $i18 = (int) -1;

        return $i18;

     label05:
        if $i7 <= $i6 goto label06;

        return 1;

     label06:
        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z3 == 0 goto label18;

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        if $i1 >= $i0 goto label07;

        $i20 = (int) -1;

        return $i20;

     label07:
        if $i1 <= $i0 goto label08;

        return 1;

     label08:
        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        $i3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        if $i3 >= $i2 goto label09;

        $i22 = (int) -1;

        return $i22;

     label09:
        if $i3 <= $i2 goto label10;

        return 1;

     label10:
        $i4 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        $i5 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        if $i5 >= $i4 goto label11;

        $i24 = (int) -1;

        return $i24;

     label11:
        if $i5 <= $i4 goto label12;

        return 1;

     label12:
        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        if $r3 != null goto label13;

        if $r2 != null goto label13;

        return 0;

     label13:
        if $r3 != null goto label14;

        $r4 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        goto label15;

     label14:
        $r4 = $r3;

     label15:
        if $r2 != null goto label16;

        $r5 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        goto label17;

     label16:
        $r5 = $r2;

     label17:
        $i12 = virtualinvoke $r4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r5);

        return $i12;

     label18:
        return 0;
    }

    public final int getBuiltinTypeCode()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $i0 = r0.<org.apache.xmlbeans.GDateBuilder: int _bits>;

        $i1 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int btcForFlags(int)>($i0);

        return $i1;
    }

    static int btcForFlags(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 30;

        tableswitch($i1)
        {
            case 2: goto label1;
            case 3: goto label9;
            case 4: goto label3;
            case 5: goto label9;
            case 6: goto label2;
            case 7: goto label9;
            case 8: goto label5;
            case 9: goto label9;
            case 10: goto label9;
            case 11: goto label9;
            case 12: goto label4;
            case 13: goto label9;
            case 14: goto label6;
            case 15: goto label9;
            case 16: goto label8;
            case 17: goto label9;
            case 18: goto label9;
            case 19: goto label9;
            case 20: goto label9;
            case 21: goto label9;
            case 22: goto label9;
            case 23: goto label9;
            case 24: goto label9;
            case 25: goto label9;
            case 26: goto label9;
            case 27: goto label9;
            case 28: goto label9;
            case 29: goto label9;
            case 30: goto label7;
            default: goto label9;
        };

     label1:
        return 18;

     label2:
        return 17;

     label3:
        return 21;

     label4:
        return 19;

     label5:
        return 20;

     label6:
        return 16;

     label7:
        return 14;

     label8:
        return 15;

     label9:
        return 0;
    }

    public void setBuiltinTypeCode(int)
    {
        int i0;
        org.apache.xmlbeans.GDateBuilder r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 14: goto label7;
            case 15: goto label8;
            case 16: goto label6;
            case 17: goto label2;
            case 18: goto label1;
            case 19: goto label4;
            case 20: goto label5;
            case 21: goto label3;
            default: goto label9;
        };

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearMonth()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearDay()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearTime()>();

        return;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearDay()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearTime()>();

        return;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearYear()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearDay()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearTime()>();

        return;

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearYear()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearTime()>();

        return;

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearYear()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearMonth()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearTime()>();

        return;

     label6:
        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearTime()>();

        return;

     label7:
        return;

     label8:
        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearYear()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearMonth()>();

        virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: void clearDay()>();

        return;

     label9:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("codeType must be one of SchemaType BTC_  DATE TIME related types.");

        throw $r1;
    }

    public java.lang.String canonicalString()
    {
        org.apache.xmlbeans.GDateBuilder r0, $r1;
        java.math.BigDecimal $r4, $r5, $r6;
        int $i0, $i1, $i2;
        java.math.BigInteger $r7, $r8, $r9;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z7, $z8, $z9, $z10;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTimeZone()>();

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: int getTimeZoneSign()>();

        if $i2 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasTime()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasMonth()>();

        if $z2 != $z3 goto label1;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasDay()>();

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: boolean hasYear()>();

        if $z4 != $z5 goto label1;

        $z10 = 1;

        $z9 = 1;

        goto label2;

     label1:
        $z10 = 0;

        $z9 = 0;

     label2:
        z7 = $z10;

        if $z9 != 0 goto label5;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal getFraction()>();

        if $r4 == null goto label5;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal getFraction()>();

        $i0 = virtualinvoke $r5.<java.math.BigDecimal: int scale()>();

        if $i0 <= 0 goto label5;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: java.math.BigDecimal getFraction()>();

        $r7 = virtualinvoke $r6.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r8 = <org.apache.xmlbeans.GDateBuilder: java.math.BigInteger TEN>;

        $r9 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r8);

        $i1 = virtualinvoke $r9.<java.math.BigInteger: int signum()>();

        if $i1 != 0 goto label3;

        $z8 = 1;

        goto label4;

     label3:
        $z8 = 0;

     label4:
        z7 = $z8;

     label5:
        if z7 != 0 goto label6;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.GDateBuilder: java.lang.String toString()>();

        return $r3;

     label6:
        $r1 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r1.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r0);

        virtualinvoke $r1.<org.apache.xmlbeans.GDateBuilder: void normalize()>();

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.GDateBuilder: java.lang.String toString()>();

        return $r2;
    }

    public final java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.GDateBuilder r0;

        r0 := @this: org.apache.xmlbeans.GDateBuilder;

        $r1 = staticinvoke <org.apache.xmlbeans.GDate: java.lang.String formatGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        java.math.BigInteger $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.GDateBuilder: long serialVersionUID> = 1L;

        $r0 = <org.apache.xmlbeans.GDateBuilder: java.lang.Class class$org$apache$xmlbeans$GDateBuilder>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.xmlbeans.GDateBuilder: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.GDateBuilder");

        <org.apache.xmlbeans.GDateBuilder: java.lang.Class class$org$apache$xmlbeans$GDateBuilder> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.GDateBuilder: java.lang.Class class$org$apache$xmlbeans$GDateBuilder>;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.GDateBuilder: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L);

        <org.apache.xmlbeans.GDateBuilder: java.math.BigInteger TEN> = $r1;

        return;
    }
}
