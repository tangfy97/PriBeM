class org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$5 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringSet$Proc
{
    final org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree this$0;

    void <init>(org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree)
    {
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree r1;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$5 r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$5;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree;

        r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$5: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String)
    {
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node $r2;
        java.lang.String r3;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree $r1;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$5 r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$5;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$5: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node access$300(org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree$Node: void checkKeyCoverage(java.lang.String)>(r3);

        return;
    }
}
