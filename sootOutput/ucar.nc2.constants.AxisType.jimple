public final enum class ucar.nc2.constants.AxisType extends java.lang.Enum
{
    public static final enum ucar.nc2.constants.AxisType RunTime;
    public static final enum ucar.nc2.constants.AxisType Ensemble;
    public static final enum ucar.nc2.constants.AxisType Time;
    public static final enum ucar.nc2.constants.AxisType GeoX;
    public static final enum ucar.nc2.constants.AxisType GeoY;
    public static final enum ucar.nc2.constants.AxisType GeoZ;
    public static final enum ucar.nc2.constants.AxisType Lat;
    public static final enum ucar.nc2.constants.AxisType Lon;
    public static final enum ucar.nc2.constants.AxisType Height;
    public static final enum ucar.nc2.constants.AxisType Pressure;
    public static final enum ucar.nc2.constants.AxisType RadialAzimuth;
    public static final enum ucar.nc2.constants.AxisType RadialDistance;
    public static final enum ucar.nc2.constants.AxisType RadialElevation;
    private int order;
    private static final ucar.nc2.constants.AxisType[] $VALUES;

    public static ucar.nc2.constants.AxisType[] values()
    {
        ucar.nc2.constants.AxisType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (ucar.nc2.constants.AxisType[]) $r1;

        return $r2;
    }

    public static ucar.nc2.constants.AxisType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        ucar.nc2.constants.AxisType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lucar/nc2/constants/AxisType;", r0);

        $r2 = (ucar.nc2.constants.AxisType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        ucar.nc2.constants.AxisType r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: ucar.nc2.constants.AxisType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<ucar.nc2.constants.AxisType: int order> = i1;

        return;
    }

    public static ucar.nc2.constants.AxisType getType(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        ucar.nc2.constants.AxisType $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType valueOf(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public int axisOrder()
    {
        int $i0;
        ucar.nc2.constants.AxisType r0;

        r0 := @this: ucar.nc2.constants.AxisType;

        $i0 = r0.<ucar.nc2.constants.AxisType: int order>;

        return $i0;
    }

    static void <clinit>()
    {
        ucar.nc2.constants.AxisType $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        ucar.nc2.constants.AxisType[] $r13;

        $r0 = new ucar.nc2.constants.AxisType;

        specialinvoke $r0.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("RunTime", 0, 0);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RunTime> = $r0;

        $r1 = new ucar.nc2.constants.AxisType;

        specialinvoke $r1.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("Ensemble", 1, 2);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Ensemble> = $r1;

        $r2 = new ucar.nc2.constants.AxisType;

        specialinvoke $r2.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("Time", 2, 1);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time> = $r2;

        $r3 = new ucar.nc2.constants.AxisType;

        specialinvoke $r3.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("GeoX", 3, 5);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX> = $r3;

        $r4 = new ucar.nc2.constants.AxisType;

        specialinvoke $r4.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("GeoY", 4, 4);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY> = $r4;

        $r5 = new ucar.nc2.constants.AxisType;

        specialinvoke $r5.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("GeoZ", 5, 3);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ> = $r5;

        $r6 = new ucar.nc2.constants.AxisType;

        specialinvoke $r6.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("Lat", 6, 4);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat> = $r6;

        $r7 = new ucar.nc2.constants.AxisType;

        specialinvoke $r7.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("Lon", 7, 5);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon> = $r7;

        $r8 = new ucar.nc2.constants.AxisType;

        specialinvoke $r8.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("Height", 8, 3);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height> = $r8;

        $r9 = new ucar.nc2.constants.AxisType;

        specialinvoke $r9.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("Pressure", 9, 3);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure> = $r9;

        $r10 = new ucar.nc2.constants.AxisType;

        specialinvoke $r10.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("RadialAzimuth", 10, 7);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialAzimuth> = $r10;

        $r11 = new ucar.nc2.constants.AxisType;

        specialinvoke $r11.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("RadialDistance", 11, 8);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialDistance> = $r11;

        $r12 = new ucar.nc2.constants.AxisType;

        specialinvoke $r12.<ucar.nc2.constants.AxisType: void <init>(java.lang.String,int,int)>("RadialElevation", 12, 6);

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialElevation> = $r12;

        $r13 = newarray (ucar.nc2.constants.AxisType)[13];

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RunTime>;

        $r13[0] = $r14;

        $r15 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Ensemble>;

        $r13[1] = $r15;

        $r16 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r13[2] = $r16;

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        $r13[3] = $r17;

        $r18 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        $r13[4] = $r18;

        $r19 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        $r13[5] = $r19;

        $r20 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r13[6] = $r20;

        $r21 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r13[7] = $r21;

        $r22 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r13[8] = $r22;

        $r23 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        $r13[9] = $r23;

        $r24 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialAzimuth>;

        $r13[10] = $r24;

        $r25 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialDistance>;

        $r13[11] = $r25;

        $r26 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialElevation>;

        $r13[12] = $r26;

        <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType[] $VALUES> = $r13;

        return;
    }
}
