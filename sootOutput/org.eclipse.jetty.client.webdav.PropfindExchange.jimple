public class org.eclipse.jetty.client.webdav.PropfindExchange extends org.eclipse.jetty.client.HttpExchange
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    boolean _propertyExists;

    public void <init>()
    {
        org.eclipse.jetty.client.webdav.PropfindExchange r0;

        r0 := @this: org.eclipse.jetty.client.webdav.PropfindExchange;

        specialinvoke r0.<org.eclipse.jetty.client.HttpExchange: void <init>()>();

        r0.<org.eclipse.jetty.client.webdav.PropfindExchange: boolean _propertyExists> = 0;

        return;
    }

    protected void onResponseStatus(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.lang.Object[] $r0, $r5;
        int i0;
        org.eclipse.jetty.util.log.Logger $r1, $r6;
        org.eclipse.jetty.client.webdav.PropfindExchange r2;
        org.eclipse.jetty.io.Buffer r3, r4;

        r2 := @this: org.eclipse.jetty.client.webdav.PropfindExchange;

        r3 := @parameter0: org.eclipse.jetty.io.Buffer;

        i0 := @parameter1: int;

        r4 := @parameter2: org.eclipse.jetty.io.Buffer;

        if i0 != 200 goto label1;

        $r6 = <org.eclipse.jetty.client.webdav.PropfindExchange: org.eclipse.jetty.util.log.Logger LOG>;

        $r5 = newarray (java.lang.Object)[0];

        interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("PropfindExchange:Status: Exists", $r5);

        r2.<org.eclipse.jetty.client.webdav.PropfindExchange: boolean _propertyExists> = 1;

        goto label2;

     label1:
        $r1 = <org.eclipse.jetty.client.webdav.PropfindExchange: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[0];

        interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("PropfindExchange:Status: Not Exists", $r0);

     label2:
        specialinvoke r2.<org.eclipse.jetty.client.HttpExchange: void onResponseStatus(org.eclipse.jetty.io.Buffer,int,org.eclipse.jetty.io.Buffer)>(r3, i0, r4);

        return;
    }

    public boolean exists()
    {
        org.eclipse.jetty.client.webdav.PropfindExchange r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.webdav.PropfindExchange;

        $z0 = r0.<org.eclipse.jetty.client.webdav.PropfindExchange: boolean _propertyExists>;

        return $z0;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/client/webdav/PropfindExchange;");

        <org.eclipse.jetty.client.webdav.PropfindExchange: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
