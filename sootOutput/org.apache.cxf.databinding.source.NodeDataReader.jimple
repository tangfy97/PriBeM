public class org.apache.cxf.databinding.source.NodeDataReader extends java.lang.Object implements org.apache.cxf.databinding.DataReader
{
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.databinding.source.NodeDataReader r0;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1;
        org.apache.cxf.databinding.source.NodeDataReader r0;
        java.lang.Object $r2;
        org.apache.cxf.service.model.MessagePartInfo r3;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r3 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        r1 := @parameter1: org.w3c.dom.Node;

        $r2 = virtualinvoke r0.<org.apache.cxf.databinding.source.NodeDataReader: java.lang.Object read(org.w3c.dom.Node)>(r1);

        return $r2;
    }

    public java.lang.Object read(javax.xml.namespace.QName, org.w3c.dom.Node, java.lang.Class)
    {
        org.apache.cxf.staxutils.StaxSource $r11;
        java.lang.Object[] $r14;
        javax.xml.transform.TransformerException $r12;
        javax.xml.transform.stream.StreamSource $r8;
        org.apache.cxf.databinding.source.NodeDataReader r3;
        org.apache.cxf.interceptor.Fault $r13, $r20;
        javax.xml.stream.XMLStreamReader $r10;
        org.w3c.dom.Node r4;
        java.lang.String $r17, $r18;
        boolean $z0, $z1;
        java.io.IOException $r19;
        java.util.logging.Logger $r15, $r21;
        org.w3c.dom.Element $r9;
        java.lang.Class r0, $r1, $r2, $r16;
        java.lang.Object $r5;
        javax.xml.namespace.QName r22;
        org.apache.cxf.io.CachedOutputStream $r6;
        java.io.InputStream $r7;

        r3 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r22 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: org.w3c.dom.Node;

        r0 := @parameter2: java.lang.Class;

        $r1 = class "Ljavax/xml/transform/sax/SAXSource;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r9 = (org.w3c.dom.Element) r4;

        $r10 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(org.w3c.dom.Element)>($r9);

        $r11 = new org.apache.cxf.staxutils.StaxSource;

        specialinvoke $r11.<org.apache.cxf.staxutils.StaxSource: void <init>(javax.xml.stream.XMLStreamReader)>($r10);

        return $r11;

     label1:
        $r2 = class "Ljavax/xml/transform/stream/StreamSource;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label6;

     label2:
        $r6 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r6.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void writeXml(org.w3c.dom.Node,java.io.OutputStream)>(r4, $r6);

        $r7 = virtualinvoke $r6.<org.apache.cxf.io.CachedOutputStream: java.io.InputStream getInputStream()>();

        virtualinvoke $r6.<org.apache.cxf.io.CachedOutputStream: void close()>();

        $r8 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r8.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r7);

     label3:
        return $r8;

     label4:
        $r19 := @caughtexception;

        $r20 = new org.apache.cxf.interceptor.Fault;

        $r21 = <org.apache.cxf.databinding.source.NodeDataReader: java.util.logging.Logger LOG>;

        specialinvoke $r20.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable)>("COULD_NOT_READ_XML_STREAM", $r21, $r19);

        throw $r20;

     label5:
        $r12 := @caughtexception;

        $r13 = new org.apache.cxf.interceptor.Fault;

        $r15 = <org.apache.cxf.databinding.source.NodeDataReader: java.util.logging.Logger LOG>;

        $r14 = newarray (java.lang.Object)[2];

        $r16 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r14[0] = $r17;

        $r18 = virtualinvoke $r12.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        $r14[1] = $r18;

        specialinvoke $r13.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("COULD_NOT_READ_XML_STREAM_CAUSED_BY", $r15, $r12, $r14);

        throw $r13;

     label6:
        $r5 = virtualinvoke r3.<org.apache.cxf.databinding.source.NodeDataReader: java.lang.Object read(org.w3c.dom.Node)>(r4);

        return $r5;

        catch java.io.IOException from label2 to label3 with label4;
        catch javax.xml.transform.TransformerException from label2 to label3 with label5;
    }

    public java.lang.Object read(org.w3c.dom.Node)
    {
        javax.xml.transform.dom.DOMSource $r0;
        org.apache.cxf.databinding.source.NodeDataReader r2;
        org.w3c.dom.Node r1;

        r2 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r1 := @parameter0: org.w3c.dom.Node;

        $r0 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r0.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1);

        return $r0;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        org.apache.cxf.databinding.source.NodeDataReader r0;
        javax.xml.validation.Schema r1;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r1 := @parameter0: javax.xml.validation.Schema;

        return;
    }

    public void setAttachments(java.util.Collection)
    {
        org.apache.cxf.databinding.source.NodeDataReader r0;
        java.util.Collection r1;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r1 := @parameter0: java.util.Collection;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.apache.cxf.databinding.source.NodeDataReader r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public volatile java.lang.Object read(javax.xml.namespace.QName, java.lang.Object, java.lang.Class)
    {
        org.w3c.dom.Node $r4;
        org.apache.cxf.databinding.source.NodeDataReader r0;
        java.lang.Object r2, $r5;
        java.lang.Class r3;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        $r4 = (org.w3c.dom.Node) r2;

        $r5 = virtualinvoke r0.<org.apache.cxf.databinding.source.NodeDataReader: java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)>(r1, $r4, r3);

        return $r5;
    }

    public volatile java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo, java.lang.Object)
    {
        org.w3c.dom.Node $r3;
        org.apache.cxf.databinding.source.NodeDataReader r0;
        java.lang.Object r2, $r4;
        org.apache.cxf.service.model.MessagePartInfo r1;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r1 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.w3c.dom.Node) r2;

        $r4 = virtualinvoke r0.<org.apache.cxf.databinding.source.NodeDataReader: java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object read(java.lang.Object)
    {
        org.w3c.dom.Node $r2;
        org.apache.cxf.databinding.source.NodeDataReader r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.cxf.databinding.source.NodeDataReader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Node) r1;

        $r3 = virtualinvoke r0.<org.apache.cxf.databinding.source.NodeDataReader: java.lang.Object read(org.w3c.dom.Node)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/databinding/source/NodeDataReader;");

        <org.apache.cxf.databinding.source.NodeDataReader: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
