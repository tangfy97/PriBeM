public class org.apache.pdfbox.util.PDFHighlighter extends org.apache.pdfbox.util.PDFTextStripper
{
    private java.io.Writer highlighterOutput;
    private java.lang.String[] searchedWords;
    private java.io.ByteArrayOutputStream textOS;
    private java.io.Writer textWriter;
    private static final java.lang.String ENCODING;

    public void <init>() throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFHighlighter r0;

        r0 := @this: org.apache.pdfbox.util.PDFHighlighter;

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void <init>(java.lang.String)>("UTF-16");

        r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer highlighterOutput> = null;

        r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.ByteArrayOutputStream textOS> = null;

        r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer textWriter> = null;

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void setLineSeparator(java.lang.String)>("");

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void setPageSeparator(java.lang.String)>("");

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void setWordSeparator(java.lang.String)>("");

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void setShouldSeparateByBeads(boolean)>(0);

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void setSuppressDuplicateOverlappingText(boolean)>(0);

        return;
    }

    public void generateXMLHighlight(org.apache.pdfbox.pdmodel.PDDocument, java.lang.String, java.io.Writer) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.util.PDFHighlighter r0;
        java.io.Writer r4;
        java.lang.String[] $r2;
        java.lang.String r3;

        r0 := @this: org.apache.pdfbox.util.PDFHighlighter;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.io.Writer;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r3;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFHighlighter: void generateXMLHighlight(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String[],java.io.Writer)>(r1, $r2, r4);

        return;
    }

    public void generateXMLHighlight(org.apache.pdfbox.pdmodel.PDDocument, java.lang.String[], java.io.Writer) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r4, $r6;
        org.apache.pdfbox.pdmodel.PDDocument r7;
        java.lang.String[] r2;
        org.apache.pdfbox.util.PDFHighlighter r0;
        java.io.Writer r1, $r3, $r8, $r9, $r10;
        java.io.OutputStreamWriter $r5;

        r0 := @this: org.apache.pdfbox.util.PDFHighlighter;

        r7 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: java.lang.String[];

        r1 := @parameter2: java.io.Writer;

        r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer highlighterOutput> = r1;

        r0.<org.apache.pdfbox.util.PDFHighlighter: java.lang.String[] searchedWords> = r2;

        $r3 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer highlighterOutput>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("<XML>\n<Body units=characters  version=2>\n<Highlight>\n");

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.ByteArrayOutputStream textOS> = $r4;

        $r5 = new java.io.OutputStreamWriter;

        $r6 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.ByteArrayOutputStream textOS>;

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r6, "UTF-16");

        r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer textWriter> = $r5;

        $r8 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer textWriter>;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFHighlighter: void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)>(r7, $r8);

        $r9 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer highlighterOutput>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>("</Highlight>\n</Body>\n</XML>");

        $r10 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer highlighterOutput>;

        virtualinvoke $r10.<java.io.Writer: void flush()>();

        return;
    }

    protected void endPage(org.apache.pdfbox.pdmodel.PDPage) throws java.io.IOException
    {
        byte[] $r4;
        java.util.regex.Matcher $r9;
        boolean $z0;
        org.apache.pdfbox.util.PDFHighlighter r0;
        java.io.Writer $r1, $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r24;
        org.apache.pdfbox.pdmodel.PDPage r20;
        java.util.regex.Pattern $r8;
        java.io.ByteArrayOutputStream $r3, $r5;
        java.lang.String[] $r6, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i9;
        java.lang.String $r7, $r19, r21, $r23;

        r0 := @this: org.apache.pdfbox.util.PDFHighlighter;

        r20 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        $r1 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer textWriter>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        $r23 = new java.lang.String;

        $r3 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.ByteArrayOutputStream textOS>;

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r23.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-16");

        r21 = $r23;

        $r5 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.ByteArrayOutputStream textOS>;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void reset()>();

        $i0 = virtualinvoke $r23.<java.lang.String: int indexOf(java.lang.String)>("a");

        $i9 = (int) -1;

        if $i0 == $i9 goto label1;

        r21 = virtualinvoke $r23.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("a[0-9]{1,3}", ".");

     label1:
        i6 = 0;

     label2:
        $r22 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.lang.String[] searchedWords>;

        $i7 = lengthof $r22;

        if i6 >= $i7 goto label5;

        $r6 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.lang.String[] searchedWords>;

        $r7 = $r6[i6];

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r7, 2);

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r21);

     label3:
        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r9.<java.util.regex.Matcher: int start()>();

        $i2 = virtualinvoke $r9.<java.util.regex.Matcher: int end()>();

        $r11 = r0.<org.apache.pdfbox.util.PDFHighlighter: java.io.Writer highlighterOutput>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <loc pg=");

        $i3 = virtualinvoke r0.<org.apache.pdfbox.util.PDFHighlighter: int getCurrentPageNo()>();

        $i4 = $i3 - 1;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pos=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len=");

        $i5 = $i2 - $i1;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.Writer: void write(java.lang.String)>($r19);

        goto label3;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r5;
        java.lang.Throwable $r7;
        org.apache.pdfbox.pdmodel.PDDocument $r3, r8;
        java.lang.String[] r1, $r6;
        org.apache.pdfbox.util.PDFHighlighter $r0;
        int $i0, $i1, $i2, $i3;
        java.io.OutputStreamWriter $r4;
        java.lang.String $r2;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.apache.pdfbox.util.PDFHighlighter;

        specialinvoke $r0.<org.apache.pdfbox.util.PDFHighlighter: void <init>()>();

        r8 = null;

     label01:
        $i0 = lengthof r1;

        if $i0 >= 2 goto label02;

        staticinvoke <org.apache.pdfbox.util.PDFHighlighter: void usage()>();

     label02:
        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        $r6 = newarray (java.lang.String)[$i2];

        $i3 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 1, $r6, 0, $i3);

        $r2 = r1[0];

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String)>($r2);

        r8 = $r3;

        $r4 = new java.io.OutputStreamWriter;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r5);

        virtualinvoke $r0.<org.apache.pdfbox.util.PDFHighlighter: void generateXMLHighlight(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String[],java.io.Writer)>($r3, $r6, $r4);

        goto label07;

     label03:
        goto label06;

     label04:
        $r7 := @caughtexception;

        goto label09;

     label05:
        throw $r7;

     label06:
        return;

     label07:
        if $r3 == null goto label08;

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label08:
        goto label03;

     label09:
        if r8 == null goto label10;

        virtualinvoke r8.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label10:
        goto label05;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    private static void usage()
    {
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r0, $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usage: java ");

        $r3 = class "Lorg/apache/pdfbox/util/PDFHighlighter;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <pdf file> word1 word2 word3 ...");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r7);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.util.PDFHighlighter: java.lang.String ENCODING> = "UTF-16";

        return;
    }
}
