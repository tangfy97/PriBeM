public class org.apache.batik.gvt.StrokeShapePainter extends java.lang.Object implements org.apache.batik.gvt.ShapePainter
{
    protected java.awt.Shape shape;
    protected java.awt.Shape strokedShape;
    protected java.awt.Stroke stroke;
    protected java.awt.Paint paint;

    public void <init>(java.awt.Shape)
    {
        java.awt.Shape r1;
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        r1 := @parameter0: java.awt.Shape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape shape> = r1;

        return;
    }

    public void setStroke(java.awt.Stroke)
    {
        java.awt.Stroke r1;
        org.apache.batik.gvt.StrokeShapePainter r0;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        r1 := @parameter0: java.awt.Stroke;

        r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke> = r1;

        r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape> = null;

        return;
    }

    public java.awt.Stroke getStroke()
    {
        java.awt.Stroke $r1;
        org.apache.batik.gvt.StrokeShapePainter r0;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke>;

        return $r1;
    }

    public void setPaint(java.awt.Paint)
    {
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.Paint r1;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        r1 := @parameter0: java.awt.Paint;

        r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Paint paint> = r1;

        return;
    }

    public java.awt.Paint getPaint()
    {
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.Paint $r1;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Paint paint>;

        return $r1;
    }

    public void paint(java.awt.Graphics2D)
    {
        java.awt.Stroke $r1, $r5;
        java.awt.Shape $r6;
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.Paint $r2, $r4;
        java.awt.Graphics2D r3;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        r3 := @parameter0: java.awt.Graphics2D;

        $r1 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Paint paint>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Paint paint>;

        virtualinvoke r3.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r4);

        $r5 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke>;

        virtualinvoke r3.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5);

        $r6 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape shape>;

        virtualinvoke r3.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r6);

     label1:
        return;
    }

    public java.awt.Shape getPaintedArea()
    {
        java.awt.Stroke $r2, $r6;
        java.awt.Shape $r3, $r4, $r5, $r7;
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.Paint $r1;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Paint paint>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke>;

        if $r2 != null goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape>;

        if $r3 != null goto label3;

        $r6 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke>;

        $r5 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape shape>;

        $r7 = interfaceinvoke $r6.<java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r5);

        r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape> = $r7;

     label3:
        $r4 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape>;

        return $r4;
    }

    public java.awt.geom.Rectangle2D getPaintedBounds2D()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.geom.Rectangle2D $r2;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape getPaintedArea()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r2;
    }

    public boolean inPaintedArea(java.awt.geom.Point2D)
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.geom.Point2D r2;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        r2 := @parameter0: java.awt.geom.Point2D;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape getPaintedArea()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.awt.Shape: boolean contains(java.awt.geom.Point2D)>(r2);

        return $z0;
    }

    public java.awt.Shape getSensitiveArea()
    {
        java.awt.Stroke $r1, $r5;
        java.awt.Shape $r2, $r3, $r4, $r6;
        org.apache.batik.gvt.StrokeShapePainter r0;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape>;

        if $r2 != null goto label2;

        $r5 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Stroke stroke>;

        $r4 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape shape>;

        $r6 = interfaceinvoke $r5.<java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r4);

        r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape> = $r6;

     label2:
        $r3 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape>;

        return $r3;
    }

    public java.awt.geom.Rectangle2D getSensitiveBounds2D()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.geom.Rectangle2D $r2;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape getSensitiveArea()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r2;
    }

    public boolean inSensitiveArea(java.awt.geom.Point2D)
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.StrokeShapePainter r0;
        java.awt.geom.Point2D r2;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        r2 := @parameter0: java.awt.geom.Point2D;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape getSensitiveArea()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = interfaceinvoke $r1.<java.awt.Shape: boolean contains(java.awt.geom.Point2D)>(r2);

        return $z0;
    }

    public void setShape(java.awt.Shape)
    {
        java.awt.Shape r0;
        org.apache.batik.gvt.StrokeShapePainter r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.apache.batik.gvt.StrokeShapePainter;

        r0 := @parameter0: java.awt.Shape;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape shape> = r0;

        r1.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape strokedShape> = null;

        return;
    }

    public java.awt.Shape getShape()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.StrokeShapePainter r0;

        r0 := @this: org.apache.batik.gvt.StrokeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.StrokeShapePainter: java.awt.Shape shape>;

        return $r1;
    }
}
