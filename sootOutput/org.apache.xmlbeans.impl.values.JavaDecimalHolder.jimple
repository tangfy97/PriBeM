public class org.apache.xmlbeans.impl.values.JavaDecimalHolder extends org.apache.xmlbeans.impl.values.XmlObjectBase
{
    private java.math.BigDecimal _value;
    private static java.math.BigInteger _maxlong;
    private static java.math.BigInteger _minlong;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$values$JavaDecimalHolder;

    public void <init>()
    {
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase: void <init>()>();

        return;
    }

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r0;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r1;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        $r0 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_DECIMAL>;

        return $r0;
    }

    protected java.lang.String compute_text(org.apache.xmlbeans.impl.values.NamespaceManager)
    {
        java.math.BigDecimal $r1;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;
        org.apache.xmlbeans.impl.values.NamespaceManager r3;
        java.lang.String $r2;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        r3 := @parameter0: org.apache.xmlbeans.impl.values.NamespaceManager;

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: java.lang.String printDecimal(java.math.BigDecimal)>($r1);

        return $r2;
    }

    protected void set_text(java.lang.String)
    {
        java.lang.Object[] $r5;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;
        java.lang.NumberFormatException $r4;
        java.math.BigDecimal $r1;
        org.apache.xmlbeans.impl.common.ValidationContext $r3, $r6;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: boolean _validateOnSet()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolder: void validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r2, $r3);

     label1:
        $r1 = new java.math.BigDecimal;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: void set_BigDecimal(java.math.BigDecimal)>($r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        interfaceinvoke $r6.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("decimal", $r5);

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected void set_nil()
    {
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value> = null;

        return;
    }

    public static void validateLexical(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Object[] $r2, $r3, $r9;
        java.lang.StringBuffer $r5, $r6, $r7, $r11, $r12, $r14, $r15;
        int $i0, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r0, $r8, $r13;
        boolean z0, z1;
        char $c1, $c2;
        org.apache.xmlbeans.impl.common.ValidationContext r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = 0;

        if 0 >= $i0 goto label2;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c2;

        if $i4 == 43 goto label1;

        $i5 = (int) $c2;

        if $i5 != 45 goto label2;

     label1:
        i3 = 1;

     label2:
        z0 = 0;

        z1 = 0;

     label3:
        if i3 >= $i0 goto label8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i6 = (int) $c1;

        if $i6 != 46 goto label5;

        if z0 == 0 goto label4;

        $r9 = newarray (java.lang.Object)[1];

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("saw \'.\' more than once: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9[0] = $r13;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("decimal", $r9);

        return;

     label4:
        z0 = 1;

        goto label7;

     label5:
        $i7 = (int) $c1;

        if $i7 < 48 goto label6;

        $i8 = (int) $c1;

        if $i8 > 57 goto label6;

        z1 = 1;

        goto label7;

     label6:
        $r3 = newarray (java.lang.Object)[1];

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unexpected char \'");

        $i9 = (int) $c1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3[0] = $r8;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("decimal", $r3);

        return;

     label7:
        i3 = i3 + 1;

        goto label3;

     label8:
        if z1 != 0 goto label9;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "expected at least one digit";

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("decimal", $r2);

        return;

     label9:
        return;
    }

    public java.math.BigDecimal getBigDecimalValue()
    {
        java.math.BigDecimal $r1;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        return $r1;
    }

    protected void set_BigDecimal(java.math.BigDecimal)
    {
        java.math.BigDecimal r1;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        r1 := @parameter0: java.math.BigDecimal;

        r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value> = r1;

        return;
    }

    protected int compare_to(org.apache.xmlbeans.XmlObject)
    {
        java.math.BigDecimal $r3, $r4;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r2;
        int $i0;
        org.apache.xmlbeans.XmlObject r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r3 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $r2 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r1;

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal bigDecimalValue()>();

        $i0 = virtualinvoke $r3.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r4);

        return $i0;
    }

    protected boolean equal_to(org.apache.xmlbeans.XmlObject)
    {
        java.math.BigDecimal $r3, $r4;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r2;
        int $i0;
        org.apache.xmlbeans.XmlObject r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r3 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $r2 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r1;

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal bigDecimalValue()>();

        $i0 = virtualinvoke $r3.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r4);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected int value_hash_code()
    {
        long $l4, $l5, $l6, $l7;
        java.math.BigDecimal $r1, $r2, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i8, $i9, $i10;
        java.math.BigInteger $r3, $r4, $r5;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $i0 = virtualinvoke $r1.<java.math.BigDecimal: int scale()>();

        if $i0 <= 0 goto label1;

        $r6 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $r7 = virtualinvoke $r6.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(0, 1);

        $r8 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $i9 = virtualinvoke $r7.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r8);

        if $i9 == 0 goto label1;

        $i10 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: int decimalHashCode()>();

        return $i10;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $r3 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        $r4 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigInteger _maxlong>;

        $i1 = virtualinvoke $r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r4);

        if $i1 > 0 goto label2;

        $r5 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigInteger _minlong>;

        $i3 = virtualinvoke $r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r5);

        if $i3 >= 0 goto label3;

     label2:
        $i2 = virtualinvoke $r3.<java.math.BigInteger: int hashCode()>();

        return $i2;

     label3:
        $l4 = virtualinvoke $r3.<java.math.BigInteger: long longValue()>();

        $l5 = $l4 >> 32;

        $l6 = $l5 * 19L;

        $l7 = $l6 + $l4;

        $i8 = (int) $l7;

        return $i8;
    }

    protected int decimalHashCode()
    {
        java.lang.AssertionError $r7, $r8;
        java.math.BigDecimal $r1, $r5;
        int $i0, $i1, $i2, $i3, $i5, i6, $i7, $i9;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.values.JavaDecimalHolder r0;
        char $c4;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolder;

        $z0 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $i5 = virtualinvoke $r5.<java.math.BigDecimal: int scale()>();

        if $i5 > 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigDecimal _value>;

        $r2 = virtualinvoke $r1.<java.math.BigDecimal: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        i6 = $i0 - 1;

     label2:
        if i6 < 0 goto label4;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c4;

        if $i7 == 48 goto label3;

        goto label4;

     label3:
        $i9 = (int) -1;

        i6 = i6 + $i9;

        goto label2;

     label4:
        $z1 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $i3 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(46);

        if $i3 < i6 goto label5;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label5:
        $i1 = i6 + 1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        return $i2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r3;
        java.math.BigInteger $r1, $r2;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.lang.Class class$org$apache$xmlbeans$impl$values$JavaDecimalHolder>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.values.JavaDecimalHolder");

        <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.lang.Class class$org$apache$xmlbeans$impl$values$JavaDecimalHolder> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.lang.Class class$org$apache$xmlbeans$impl$values$JavaDecimalHolder>;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.values.JavaDecimalHolder: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L);

        <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigInteger _maxlong> = $r1;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-9223372036854775808L);

        <org.apache.xmlbeans.impl.values.JavaDecimalHolder: java.math.BigInteger _minlong> = $r2;

        return;
    }
}
