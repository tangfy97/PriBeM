final class org.apache.lucene.codecs.lucene3x.TermBuffer extends java.lang.Object implements java.lang.Cloneable
{
    private java.lang.String field;
    private org.apache.lucene.index.Term term;
    private org.apache.lucene.util.BytesRef bytes;
    private int currentFieldNumber;
    private static final java.util.Comparator utf8AsUTF16Comparator;
    int newSuffixStart;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        int $i1;
        org.apache.lucene.codecs.lucene3x.TermBuffer r0;
        org.apache.lucene.util.BytesRef $r2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>(int)>(10);

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes> = $r2;

        $i1 = (int) -2;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber> = $i1;

        return;
    }

    public int compareTo(org.apache.lucene.codecs.lucene3x.TermBuffer)
    {
        org.apache.lucene.util.BytesRef $r6, $r7;
        org.apache.lucene.codecs.lucene3x.TermBuffer r0, r1;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, $r5;
        java.util.Comparator $r8;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        r1 := @parameter0: org.apache.lucene.codecs.lucene3x.TermBuffer;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        if $r3 != $r2 goto label1;

        $r8 = <org.apache.lucene.codecs.lucene3x.TermBuffer: java.util.Comparator utf8AsUTF16Comparator>;

        $r7 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r6 = r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $i1 = interfaceinvoke $r8.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r6);

        return $i1;

     label1:
        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        $r4 = r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }

    public void read(org.apache.lucene.store.IndexInput, org.apache.lucene.index.FieldInfos) throws java.io.IOException
    {
        byte[] $r3, $r6;
        org.apache.lucene.index.FieldInfos r7;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.BytesRef $r2, $r4, $r5, $r28;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r20, $r31;
        java.lang.AssertionError $r30, $r32;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        java.lang.String $r8, $r10, $r16, $r21, $r24, $r25, $r29;
        org.apache.lucene.store.IndexInput r1;
        org.apache.lucene.codecs.lucene3x.TermBuffer r0;
        org.apache.lucene.index.FieldInfo $r9, $r19, $r22, $r23, $r26;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        r1 := @parameter0: org.apache.lucene.store.IndexInput;

        r7 := @parameter1: org.apache.lucene.index.FieldInfos;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term term> = null;

        $i0 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int newSuffixStart> = $i0;

        $i1 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i2 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int newSuffixStart>;

        i3 = $i2 + $i1;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r3 = $r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i4 = lengthof $r3;

        if $i4 >= i3 goto label1;

        $r28 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        virtualinvoke $r28.<org.apache.lucene.util.BytesRef: void grow(int)>(i3);

     label1:
        $r4 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r4.<org.apache.lucene.util.BytesRef: int length> = i3;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r6 = $r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i5 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int newSuffixStart>;

        virtualinvoke r1.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r6, $i5, $i1);

        $i6 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i7 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber>;

        if $i6 == $i7 goto label4;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber> = $i6;

        $i9 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber>;

        $i14 = (int) -1;

        if $i9 != $i14 goto label2;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field> = "";

        goto label7;

     label2:
        $z2 = <org.apache.lucene.codecs.lucene3x.TermBuffer: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $i11 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber>;

        $r26 = virtualinvoke r7.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i11);

        if $r26 != null goto label3;

        $r30 = new java.lang.AssertionError;

        $i12 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber>;

        specialinvoke $r30.<java.lang.AssertionError: void <init>(int)>($i12);

        throw $r30;

     label3:
        $i10 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber>;

        $r23 = virtualinvoke r7.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i10);

        $r24 = $r23.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String intern()>();

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field> = $r25;

        goto label7;

     label4:
        $z0 = <org.apache.lucene.codecs.lucene3x.TermBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label7;

        $r8 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        $r9 = virtualinvoke r7.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i6);

        $r10 = $r9.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label7;

        $r32 = new java.lang.AssertionError;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currentFieldNumber=");

        $i8 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field=");

        $r16 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r19 = virtualinvoke r7.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i6);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r21 != null goto label5;

        $r29 = "null";

        goto label6;

     label5:
        $r22 = virtualinvoke r7.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i6);

        $r29 = $r22.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

     label6:
        specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>($r29);

        throw $r32;

     label7:
        return;
    }

    public void set(org.apache.lucene.index.Term)
    {
        org.apache.lucene.util.BytesRef $r2, $r3;
        org.apache.lucene.index.Term r0;
        int $i1;
        java.lang.String $r4, $r5;
        org.apache.lucene.codecs.lucene3x.TermBuffer r1;

        r1 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        r0 := @parameter0: org.apache.lucene.index.Term;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: void reset()>();

        return;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        virtualinvoke $r2.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>($r3);

        $r4 = virtualinvoke r0.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();

        r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field> = $r5;

        $i1 = (int) -1;

        r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber> = $i1;

        r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term term> = r0;

        return;
    }

    public void set(org.apache.lucene.codecs.lucene3x.TermBuffer)
    {
        org.apache.lucene.util.BytesRef $r3, $r4;
        int $i0;
        java.lang.String $r2;
        org.apache.lucene.codecs.lucene3x.TermBuffer r0, r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        r1 := @parameter0: org.apache.lucene.codecs.lucene3x.TermBuffer;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field> = $r2;

        $i0 = r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber>;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber> = $i0;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term term> = null;

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r3 = r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        virtualinvoke $r4.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>($r3);

        return;
    }

    public void reset()
    {
        int $i1;
        org.apache.lucene.codecs.lucene3x.TermBuffer r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field> = null;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term term> = null;

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: int currentFieldNumber> = $i1;

        return;
    }

    public org.apache.lucene.index.Term toTerm()
    {
        org.apache.lucene.util.BytesRef $r5, $r7;
        org.apache.lucene.index.Term $r2, $r3, $r4;
        org.apache.lucene.codecs.lucene3x.TermBuffer r0;
        java.lang.String $r1, $r6;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term term>;

        if $r2 != null goto label2;

        $r4 = new org.apache.lucene.index.Term;

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: java.lang.String field>;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r7 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r5);

        specialinvoke $r4.<org.apache.lucene.index.Term: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>($r6, $r7);

        r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term term> = $r4;

     label2:
        $r3 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term term>;

        return $r3;
    }

    protected org.apache.lucene.codecs.lucene3x.TermBuffer clone()
    {
        org.apache.lucene.util.BytesRef $r2, $r3;
        java.lang.Object $r1;
        org.apache.lucene.codecs.lucene3x.TermBuffer r0, r5;
        java.lang.CloneNotSupportedException $r4;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        r5 = null;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r5 = (org.apache.lucene.codecs.lucene3x.TermBuffer) $r1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r2 = r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes>;

        $r3 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r2);

        r5.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.util.BytesRef bytes> = $r3;

        return r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    protected volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.codecs.lucene3x.TermBuffer r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermBuffer;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.codecs.lucene3x.TermBuffer clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.util.Comparator $r1;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/TermBuffer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.TermBuffer: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUTF16Comparator()>();

        <org.apache.lucene.codecs.lucene3x.TermBuffer: java.util.Comparator utf8AsUTF16Comparator> = $r1;

        return;
    }
}
