final class org.apache.xerces.dom.DeferredDocumentImpl$IntVector extends java.lang.Object
{
    private int[] data;
    private int size;

    void <init>()
    {
        org.apache.xerces.dom.DeferredDocumentImpl$IntVector r0;

        r0 := @this: org.apache.xerces.dom.DeferredDocumentImpl$IntVector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.xerces.dom.DeferredDocumentImpl$IntVector r0;

        r0 := @this: org.apache.xerces.dom.DeferredDocumentImpl$IntVector;

        $i0 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int size>;

        return $i0;
    }

    public int elementAt(int)
    {
        int[] $r1;
        org.apache.xerces.dom.DeferredDocumentImpl$IntVector r0;
        int i0, $i1;

        r0 := @this: org.apache.xerces.dom.DeferredDocumentImpl$IntVector;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data>;

        $i1 = $r1[i0];

        return $i1;
    }

    public void addElement(int)
    {
        int[] $r1;
        org.apache.xerces.dom.DeferredDocumentImpl$IntVector r0;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: org.apache.xerces.dom.DeferredDocumentImpl$IntVector;

        i4 := @parameter0: int;

        $i0 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int size>;

        $i1 = $i0 + 1;

        specialinvoke r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: void ensureCapacity(int)>($i1);

        $r1 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data>;

        $i2 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int size>;

        $i3 = $i2 + 1;

        r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int size> = $i3;

        $r1[$i2] = i4;

        return;
    }

    public void removeAllElements()
    {
        org.apache.xerces.dom.DeferredDocumentImpl$IntVector r0;

        r0 := @this: org.apache.xerces.dom.DeferredDocumentImpl$IntVector;

        r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int size> = 0;

        return;
    }

    private void ensureCapacity(int)
    {
        int[] $r1, $r2, r3, $r4, $r5, $r6;
        org.apache.xerces.dom.DeferredDocumentImpl$IntVector r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.xerces.dom.DeferredDocumentImpl$IntVector;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data>;

        if $r1 != null goto label1;

        $i4 = i0 + 15;

        $r6 = newarray (int)[$i4];

        r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data> = $r6;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label2;

        $i2 = i0 + 15;

        r3 = newarray (int)[$i2];

        $r5 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data>;

        $r4 = r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data>;

        $i3 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i3);

        r0.<org.apache.xerces.dom.DeferredDocumentImpl$IntVector: int[] data> = r3;

     label2:
        return;
    }
}
