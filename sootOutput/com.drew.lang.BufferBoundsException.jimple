public final class com.drew.lang.BufferBoundsException extends java.lang.Exception
{
    private static final long serialVersionUID;

    public void <init>(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        com.drew.lang.BufferBoundsException r0;
        java.lang.String $r2;

        r0 := @this: com.drew.lang.BufferBoundsException;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <com.drew.lang.BufferBoundsException: java.lang.String getMessage(byte[],int,int)>(r1, i0, i1);

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.drew.lang.BufferBoundsException r0;
        java.lang.String r1;

        r0 := @this: com.drew.lang.BufferBoundsException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.io.IOException)
    {
        java.io.IOException r2;
        com.drew.lang.BufferBoundsException r0;
        java.lang.String r1;

        r0 := @this: com.drew.lang.BufferBoundsException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.IOException;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    private static java.lang.String getMessage(byte[], int, int)
    {
        byte[] r3;
        java.lang.Object[] $r0, $r6;
        java.lang.Integer $r1, $r2, $r4, $r7;
        int i0, i1, $i2, $i3;
        java.lang.String $r5, $r8, $r9;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 >= 0 goto label1;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to read from buffer using a negative index (%s)", $r6);

        return $r8;

     label1:
        $r0 = newarray (java.lang.Object)[4];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r0[0] = $r1;

        if i1 != 1 goto label2;

        $r9 = "";

        goto label3;

     label2:
        $r9 = "s";

     label3:
        $r0[1] = $r9;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[2] = $r2;

        $i2 = lengthof r3;

        $i3 = $i2 - 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r0[3] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to read %d byte%s from beyond end of buffer (requested index: %d, max index: %d)", $r0);

        return $r5;
    }

    public static void <clinit>()
    {
        <com.drew.lang.BufferBoundsException: long serialVersionUID> = 2911102837808946396L;

        return;
    }
}
