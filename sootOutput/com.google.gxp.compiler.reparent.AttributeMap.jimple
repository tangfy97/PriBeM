class com.google.gxp.compiler.reparent.AttributeMap extends java.lang.Object
{
    private final com.google.gxp.compiler.alerts.AlertSink alertSink;
    private final com.google.gxp.compiler.base.Node forNode;
    private final java.util.Map namesToAttrs;
    private final java.util.Set used;
    private static final com.google.gxp.com.google.common.collect.ImmutableList outputLanguageNamespaces;

    public void <init>(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Node)
    {
        com.google.gxp.compiler.reparent.AttributeMap r0;
        java.util.LinkedHashMap $r1;
        java.util.HashSet $r2;
        com.google.gxp.compiler.alerts.AlertSink r3, $r5;
        com.google.gxp.compiler.base.Node r6, $r8;
        java.lang.Object $r4, $r7;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r3 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r6 := @parameter1: com.google.gxp.compiler.base.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        r0.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs> = $r1;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Set used> = $r2;

        $r4 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (com.google.gxp.compiler.alerts.AlertSink) $r4;

        r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink> = $r5;

        $r7 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $r8 = (com.google.gxp.compiler.base.Node) $r7;

        r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode> = $r8;

        return;
    }

    public void add(com.google.gxp.compiler.reparent.Attribute)
    {
        com.google.gxp.compiler.parser.Namespace $r2;
        com.google.gxp.compiler.reparent.AttributeMap r4;
        com.google.gxp.compiler.reparent.Attribute r1;
        com.google.gxp.compiler.base.AttributeName $r0;
        com.google.gxp.compiler.alerts.AlertSink $r9;
        com.google.gxp.compiler.base.Node $r8;
        java.util.Map $r5, $r6;
        java.lang.String $r3;
        com.google.gxp.compiler.alerts.common.MultiValueAttributeError $r7;
        boolean $z0;

        r4 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: com.google.gxp.compiler.reparent.Attribute;

        $r0 = new com.google.gxp.compiler.base.AttributeName;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.parser.Namespace getNamespace()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        specialinvoke $r0.<com.google.gxp.compiler.base.AttributeName: void <init>(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r2, $r3);

        $r5 = r4.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        $r9 = r4.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r7 = new com.google.gxp.compiler.alerts.common.MultiValueAttributeError;

        $r8 = r4.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        specialinvoke $r7.<com.google.gxp.compiler.alerts.common.MultiValueAttributeError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute)>($r8, r1);

        interfaceinvoke $r9.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r7);

        goto label2;

     label1:
        $r6 = r4.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r1);

     label2:
        return;
    }

    public java.util.List getUnusedAttributes()
    {
        java.util.Map $r3, $r6, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Set $r4, $r7, $r11, $r13, $r21, $r29;
        com.google.gxp.com.google.common.collect.ImmutableList $r9;
        com.google.gxp.compiler.base.Expression $r27, $r28;
        java.util.ArrayList $r0;
        com.google.gxp.compiler.reparent.AttributeMap r2;
        com.google.gxp.compiler.parser.Namespace $r22;
        java.util.HashSet $r1;
        com.google.gxp.compiler.alerts.AlertSink $r16;
        com.google.gxp.compiler.base.Node $r17, $r26;
        java.lang.String $r23;
        java.util.Map$Entry r33;
        java.util.Iterator $r5, $r8;
        com.google.gxp.compiler.reparent.Attribute $r19, $r24, $r25;
        com.google.gxp.compiler.base.AttributeName r32;
        java.lang.Object $r10, $r12, $r14, $r18, $r20, $r31;
        com.google.gxp.compiler.alerts.common.MultiValueAttributeError $r15;

        r2 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        $r3 = r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r20 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r32 = (com.google.gxp.compiler.base.AttributeName) $r20;

        $r21 = r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Set used>;

        $z3 = interfaceinvoke $r21.<java.util.Set: boolean contains(java.lang.Object)>(r32);

        if $z3 != 0 goto label4;

        $r22 = virtualinvoke r32.<com.google.gxp.compiler.base.AttributeName: com.google.gxp.compiler.parser.Namespace getNamespace()>();

        $r23 = virtualinvoke r32.<com.google.gxp.compiler.base.AttributeName: java.lang.String getLocalName()>();

        $z4 = $r22 instanceof com.google.gxp.compiler.parser.OutputLanguageNamespace;

        if $z4 != 0 goto label2;

        $z7 = $r22 instanceof com.google.gxp.compiler.parser.NullNamespace;

        if $z7 != 0 goto label2;

        $r29 = r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Set used>;

        interfaceinvoke $r29.<java.util.Set: boolean add(java.lang.Object)>(r32);

        $r30 = r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs>;

        $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label4;

     label2:
        $z5 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r23);

        if $z5 != 0 goto label4;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r23);

        $r24 = virtualinvoke r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>($r23);

        if $r24 == null goto label3;

        $r28 = virtualinvoke $r24.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $z6 = $r28 instanceof com.google.gxp.compiler.base.NativeExpression;

        if $z6 != 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r24);

        goto label4;

     label3:
        $r25 = new com.google.gxp.compiler.reparent.Attribute;

        $r26 = r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        $r27 = specialinvoke r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getExprImpl(java.lang.String,com.google.gxp.compiler.base.Expression,boolean)>($r23, null, 0);

        specialinvoke $r25.<com.google.gxp.compiler.reparent.Attribute: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>($r26, $r23, $r27, null);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r25);

     label4:
        goto label1;

     label5:
        $r6 = r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.util.Map$Entry) $r10;

        $r11 = r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Set used>;

        $r12 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z2 != 0 goto label7;

        $r13 = r2.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Set used>;

        $r14 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>($r14);

        $r16 = r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r15 = new com.google.gxp.compiler.alerts.common.MultiValueAttributeError;

        $r17 = r2.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        $r18 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (com.google.gxp.compiler.reparent.Attribute) $r18;

        specialinvoke $r15.<com.google.gxp.compiler.alerts.common.MultiValueAttributeError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute)>($r17, $r19);

        interfaceinvoke $r16.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r15);

     label7:
        goto label6;

     label8:
        $r9 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r0);

        return $r9;
    }

    public com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace, java.lang.String)
    {
        java.util.Set $r4;
        com.google.gxp.compiler.parser.Namespace r1;
        com.google.gxp.compiler.reparent.AttributeMap r3;
        com.google.gxp.compiler.reparent.Attribute $r7;
        com.google.gxp.compiler.base.AttributeName $r0;
        java.util.Map $r5;
        java.lang.Object $r6;
        java.lang.String r2;

        r3 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: com.google.gxp.compiler.parser.Namespace;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.google.gxp.compiler.base.AttributeName;

        specialinvoke $r0.<com.google.gxp.compiler.base.AttributeName: void <init>(com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r1, r2);

        $r4 = r3.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Set used>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r0);

        $r5 = r3.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r7 = (com.google.gxp.compiler.reparent.Attribute) $r6;

        return $r7;
    }

    private com.google.gxp.compiler.base.Expression getValueImpl(com.google.gxp.compiler.parser.Namespace, java.lang.String, com.google.gxp.compiler.base.Expression, boolean)
    {
        com.google.gxp.compiler.base.Expression $r4, r5;
        com.google.gxp.compiler.alerts.common.MissingAttributeError $r6;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace r1;
        com.google.gxp.compiler.reparent.Attribute $r3;
        com.google.gxp.compiler.alerts.AlertSink $r8;
        com.google.gxp.compiler.base.Node $r7;
        java.lang.String r2;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: com.google.gxp.compiler.parser.Namespace;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: com.google.gxp.compiler.base.Expression;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r1, r2);

        if $r3 != null goto label2;

        if z0 != 0 goto label1;

        $r8 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r6 = new com.google.gxp.compiler.alerts.common.MissingAttributeError;

        $r7 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        specialinvoke $r6.<com.google.gxp.compiler.alerts.common.MissingAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>($r7, r2);

        interfaceinvoke $r8.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r6);

     label1:
        return r5;

     label2:
        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        return $r4;
    }

    private com.google.gxp.compiler.base.Expression getExprImpl(java.lang.String, com.google.gxp.compiler.base.Expression, boolean)
    {
        com.google.gxp.compiler.base.Expression $r3, r12;
        com.google.gxp.compiler.base.NativeExpression $r4;
        com.google.gxp.compiler.alerts.common.MissingAttributeError $r13;
        com.google.gxp.compiler.base.MultiLanguageAttrValue $r16;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace $r2;
        com.google.gxp.compiler.alerts.AlertSink $r15;
        com.google.gxp.compiler.base.Node $r5, $r14;
        java.lang.String r1, $r11;
        boolean z0, $z1, $z2, $z3;
        com.google.gxp.compiler.alerts.SourcePosition $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        r12 := @parameter1: com.google.gxp.compiler.base.Expression;

        z0 := @parameter2: boolean;

        $r2 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getValueImpl(com.google.gxp.compiler.parser.Namespace,java.lang.String,com.google.gxp.compiler.base.Expression,boolean)>($r2, r1, null, 1);

        if $r3 == null goto label1;

        $z1 = $r3 instanceof com.google.gxp.compiler.base.StringConstant;

        if $z1 != 0 goto label1;

        $z2 = $r3 instanceof com.google.gxp.compiler.base.NativeExpression;

        if $z2 != 0 goto label1;

        return $r3;

     label1:
        $r16 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.MultiLanguageAttrValue getMultiLanguageAttrValue(java.lang.String,boolean)>(r1, 1);

        $z3 = virtualinvoke $r16.<com.google.gxp.compiler.base.MultiLanguageAttrValue: boolean isEmpty()>();

        if $z3 == 0 goto label3;

        if z0 != 0 goto label2;

        $r15 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r13 = new com.google.gxp.compiler.alerts.common.MissingAttributeError;

        $r14 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        specialinvoke $r13.<com.google.gxp.compiler.alerts.common.MissingAttributeError: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>($r14, r1);

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r13);

     label2:
        return r12;

     label3:
        $r4 = new com.google.gxp.compiler.base.NativeExpression;

        $r5 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        $r6 = interfaceinvoke $r5.<com.google.gxp.compiler.base.Node: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' attribute");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.google.gxp.compiler.base.NativeExpression: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,com.google.gxp.compiler.base.MultiLanguageAttrValue)>($r6, $r11, $r16);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression getValue(com.google.gxp.compiler.parser.Namespace, java.lang.String, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r3, $r4;
        java.lang.String r2;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace r1;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: com.google.gxp.compiler.parser.Namespace;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.gxp.compiler.base.Expression;

        $r4 = specialinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getValueImpl(com.google.gxp.compiler.parser.Namespace,java.lang.String,com.google.gxp.compiler.base.Expression,boolean)>(r1, r2, r3, 0);

        return $r4;
    }

    private java.lang.String getImpl(com.google.gxp.compiler.parser.Namespace, java.lang.String, java.lang.String, boolean)
    {
        com.google.gxp.compiler.base.Expression $r3;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace r1;
        com.google.gxp.compiler.alerts.AlertSink $r5;
        java.lang.String r2, r4, $r6;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: com.google.gxp.compiler.parser.Namespace;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getValueImpl(com.google.gxp.compiler.parser.Namespace,java.lang.String,com.google.gxp.compiler.base.Expression,boolean)>(r1, r2, null, z0);

        if $r3 != null goto label1;

        return r4;

     label1:
        $r5 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r6 = virtualinvoke $r3.<com.google.gxp.compiler.base.Expression: java.lang.String getStaticString(com.google.gxp.compiler.alerts.AlertSink,java.lang.String)>($r5, r4);

        return $r6;
    }

    public java.lang.String get(com.google.gxp.compiler.parser.Namespace, java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3, $r4;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace r1;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: com.google.gxp.compiler.parser.Namespace;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getImpl(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);

        return $r4;
    }

    public java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace, java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3, $r4;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace r1;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: com.google.gxp.compiler.parser.Namespace;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getImpl(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 1);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression getValue(java.lang.String, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r2, $r4;
        java.lang.String r1;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace $r3;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r3 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getValue(com.google.gxp.compiler.parser.Namespace,java.lang.String,com.google.gxp.compiler.base.Expression)>($r3, r1, r2);

        return $r4;
    }

    public java.lang.String get(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, $r4;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace $r3;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String get(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>($r3, r1, r2);

        return $r4;
    }

    public java.lang.String getOptional(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, $r4;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace $r3;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>($r3, r1, r2);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression getExprValue(java.lang.String, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r2, $r3;
        java.lang.String r1;
        com.google.gxp.compiler.reparent.AttributeMap r0;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getExprImpl(java.lang.String,com.google.gxp.compiler.base.Expression,boolean)>(r1, r2, 0);

        return $r3;
    }

    public com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r2, $r3;
        java.lang.String r1;
        com.google.gxp.compiler.reparent.AttributeMap r0;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r3 = specialinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getExprImpl(java.lang.String,com.google.gxp.compiler.base.Expression,boolean)>(r1, r2, 1);

        return $r3;
    }

    public com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)
    {
        com.google.gxp.compiler.reparent.Attribute $r3;
        java.lang.String r1;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.parser.Namespace $r2;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>($r2, r1);

        return $r3;
    }

    public static java.lang.Iterable getOutputLanguageNamespaces()
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r0;

        $r0 = <com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.com.google.common.collect.ImmutableList outputLanguageNamespaces>;

        return $r0;
    }

    public com.google.gxp.compiler.base.MultiLanguageAttrValue getMultiLanguageAttrValue(java.lang.String)
    {
        com.google.gxp.compiler.base.MultiLanguageAttrValue $r2;
        java.lang.String r1;
        com.google.gxp.compiler.reparent.AttributeMap r0;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.MultiLanguageAttrValue getMultiLanguageAttrValue(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public com.google.gxp.compiler.base.MultiLanguageAttrValue getMultiLanguageAttrValue(java.lang.String, boolean)
    {
        com.google.gxp.compiler.parser.OutputLanguageNamespace r13;
        com.google.gxp.compiler.base.Expression $r7;
        com.google.gxp.compiler.base.NativeExpression $r9;
        java.util.HashMap $r0;
        com.google.gxp.compiler.base.MultiLanguageAttrValue $r5;
        com.google.gxp.compiler.reparent.AttributeMap r3;
        com.google.gxp.compiler.parser.Namespace $r6;
        com.google.gxp.compiler.alerts.AlertSink $r8;
        java.lang.String r4, $r11, r14, $r15;
        boolean $z0, z1, $z2;
        java.util.Iterator $r2;
        com.google.gxp.com.google.common.collect.ImmutableList $r1;
        com.google.gxp.compiler.base.OutputLanguage $r12;
        java.lang.Object $r10;

        r3 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r4 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        $r1 = <com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.com.google.common.collect.ImmutableList outputLanguageNamespaces>;

        $r2 = virtualinvoke $r1.<com.google.gxp.com.google.common.collect.ImmutableList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.google.gxp.compiler.parser.OutputLanguageNamespace) $r10;

        $r11 = virtualinvoke r3.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(com.google.gxp.compiler.parser.Namespace,java.lang.String,java.lang.String)>(r13, r4, null);

        if $r11 == null goto label2;

        $r12 = interfaceinvoke r13.<com.google.gxp.compiler.parser.OutputLanguageNamespace: com.google.gxp.compiler.base.OutputLanguage getOutputLanguage()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r11);

     label2:
        goto label1;

     label3:
        r14 = null;

        if z1 == 0 goto label7;

        $r6 = <com.google.gxp.compiler.parser.NullNamespace: com.google.gxp.compiler.parser.Namespace INSTANCE>;

        $r7 = specialinvoke r3.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getValueImpl(com.google.gxp.compiler.parser.Namespace,java.lang.String,com.google.gxp.compiler.base.Expression,boolean)>($r6, r4, null, 1);

        if $r7 == null goto label6;

        $z2 = $r7 instanceof com.google.gxp.compiler.base.NativeExpression;

        if $z2 == 0 goto label4;

        $r9 = (com.google.gxp.compiler.base.NativeExpression) $r7;

        $r15 = virtualinvoke $r9.<com.google.gxp.compiler.base.NativeExpression: java.lang.String getDefaultNativeCode()>();

        goto label5;

     label4:
        $r8 = r3.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r15 = virtualinvoke $r7.<com.google.gxp.compiler.base.Expression: java.lang.String getStaticString(com.google.gxp.compiler.alerts.AlertSink,java.lang.String)>($r8, null);

     label5:
        r14 = $r15;

     label6:
        goto label8;

     label7:
        r14 = virtualinvoke r3.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>(r4, null);

     label8:
        $r5 = new com.google.gxp.compiler.base.MultiLanguageAttrValue;

        specialinvoke $r5.<com.google.gxp.compiler.base.MultiLanguageAttrValue: void <init>(java.util.Map,java.lang.String)>($r0, r14);

        return $r5;
    }

    public boolean getBooleanValue(java.lang.String)
    {
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r3;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.reparent.Attribute $r5;
        com.google.gxp.compiler.alerts.AlertSink $r4;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: java.lang.String getOptional(java.lang.String,java.lang.String)>(r1, null);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $r4 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r3 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        $r5 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>(r1);

        specialinvoke $r3.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>($r5);

        interfaceinvoke $r4.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r3);

        return 0;
    }

    public com.google.gxp.compiler.base.Expression getOptionalAttributeValue(java.lang.String, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.parser.OutputLanguageNamespace r7;
        com.google.gxp.compiler.base.Expression r3, $r12, r16, $r17;
        com.google.gxp.compiler.reparent.ConflictingAttributesError $r9;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.alerts.AlertSink $r11, $r15;
        com.google.gxp.compiler.base.Node $r10, $r14;
        java.lang.String r1;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        com.google.gxp.com.google.common.collect.ImmutableList $r4;
        com.google.gxp.compiler.reparent.Attribute $r2, $r8;
        com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError $r13;
        java.lang.Object $r6;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.google.gxp.compiler.base.Expression;

        r16 = null;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(java.lang.String)>(r1);

        if $r2 == null goto label2;

        $r12 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getCondition()>();

        if $r12 == null goto label1;

        $r15 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r13 = new com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError;

        $r14 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        specialinvoke $r13.<com.google.gxp.compiler.alerts.common.RequiredAttributeHasCondError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute)>($r14, $r2);

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r13);

     label1:
        r16 = virtualinvoke $r2.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

     label2:
        if r16 == null goto label3;

        $z0 = r16 instanceof com.google.gxp.compiler.base.NativeExpression;

        if $z0 == 0 goto label4;

     label3:
        r16 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Expression getOptionalExprValue(java.lang.String,com.google.gxp.compiler.base.Expression)>(r1, null);

        goto label7;

     label4:
        $r4 = <com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.com.google.common.collect.ImmutableList outputLanguageNamespaces>;

        $r5 = virtualinvoke $r4.<com.google.gxp.com.google.common.collect.ImmutableList: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.google.gxp.compiler.parser.OutputLanguageNamespace) $r6;

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.reparent.Attribute getAttribute(com.google.gxp.compiler.parser.Namespace,java.lang.String)>(r7, r1);

        if $r8 == null goto label6;

        $r11 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r9 = new com.google.gxp.compiler.reparent.ConflictingAttributesError;

        $r10 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        specialinvoke $r9.<com.google.gxp.compiler.reparent.ConflictingAttributesError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.reparent.Attribute)>($r10, $r2, $r8);

        interfaceinvoke $r11.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r9);

     label6:
        goto label5;

     label7:
        if r16 != null goto label8;

        $r17 = r3;

        goto label9;

     label8:
        $r17 = r16;

     label9:
        return $r17;
    }

    public void reportUnusedAttributes()
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2, $r6;
        com.google.gxp.compiler.reparent.AttributeMap r0;
        com.google.gxp.compiler.alerts.AlertSink $r9;
        com.google.gxp.compiler.base.Node $r10, $r12;
        java.util.Map $r1;
        java.lang.Object $r4, $r7, $r11;
        com.google.gxp.compiler.alerts.common.UnknownAttributeError $r8;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.reparent.AttributeMap;

        $r1 = r0.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Map namesToAttrs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = r0.<com.google.gxp.compiler.reparent.AttributeMap: java.util.Set used>;

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

        $r9 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r8 = new com.google.gxp.compiler.alerts.common.UnknownAttributeError;

        $r10 = r0.<com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.compiler.base.Node forNode>;

        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (com.google.gxp.compiler.base.Node) $r11;

        specialinvoke $r8.<com.google.gxp.compiler.alerts.common.UnknownAttributeError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>($r10, $r12);

        interfaceinvoke $r9.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r8);

     label2:
        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.parser.OutputLanguageNamespace $r0, $r1, $r2;
        com.google.gxp.com.google.common.collect.ImmutableList $r3;

        $r2 = <com.google.gxp.compiler.parser.CppNamespace: com.google.gxp.compiler.parser.OutputLanguageNamespace INSTANCE>;

        $r1 = <com.google.gxp.compiler.parser.JavaNamespace: com.google.gxp.compiler.parser.OutputLanguageNamespace INSTANCE>;

        $r0 = <com.google.gxp.compiler.parser.JavaScriptNamespace: com.google.gxp.compiler.parser.OutputLanguageNamespace INSTANCE>;

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r1, $r0);

        <com.google.gxp.compiler.reparent.AttributeMap: com.google.gxp.com.google.common.collect.ImmutableList outputLanguageNamespaces> = $r3;

        return;
    }
}
