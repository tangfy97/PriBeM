class org.jdesktop.swingworker.SwingWorker$3 extends org.jdesktop.swingworker.AccumulativeRunnable
{
    final org.jdesktop.swingworker.SwingWorker this$0;

    void <init>(org.jdesktop.swingworker.SwingWorker)
    {
        org.jdesktop.swingworker.SwingWorker$3 r0;
        org.jdesktop.swingworker.SwingWorker r1;

        r0 := @this: org.jdesktop.swingworker.SwingWorker$3;

        r1 := @parameter0: org.jdesktop.swingworker.SwingWorker;

        r0.<org.jdesktop.swingworker.SwingWorker$3: org.jdesktop.swingworker.SwingWorker this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingworker.AccumulativeRunnable: void <init>()>();

        return;
    }

    public void run(java.util.List)
    {
        java.util.List r1;
        org.jdesktop.swingworker.SwingWorker$3 r0;
        org.jdesktop.swingworker.SwingWorker $r2;

        r0 := @this: org.jdesktop.swingworker.SwingWorker$3;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.jdesktop.swingworker.SwingWorker$3: org.jdesktop.swingworker.SwingWorker this$0>;

        virtualinvoke $r2.<org.jdesktop.swingworker.SwingWorker: void process(java.util.List)>(r1);

        return;
    }

    protected void submit()
    {
        java.lang.Runnable[] $r1;
        org.jdesktop.swingworker.SwingWorker$3 r2;
        org.jdesktop.swingworker.AccumulativeRunnable $r0;

        r2 := @this: org.jdesktop.swingworker.SwingWorker$3;

        $r0 = staticinvoke <org.jdesktop.swingworker.SwingWorker: org.jdesktop.swingworker.AccumulativeRunnable access$300()>();

        $r1 = newarray (java.lang.Runnable)[1];

        $r1[0] = r2;

        virtualinvoke $r0.<org.jdesktop.swingworker.AccumulativeRunnable: void add(java.lang.Object[])>($r1);

        return;
    }
}
