public class org.apache.batik.css.engine.StyleSheet extends java.lang.Object
{
    protected org.apache.batik.css.engine.Rule[] rules;
    protected int size;
    protected org.apache.batik.css.engine.StyleSheet parent;
    protected boolean alternate;
    protected org.w3c.css.sac.SACMediaList media;
    protected java.lang.String title;

    public void <init>()
    {
        org.apache.batik.css.engine.StyleSheet r0;
        org.apache.batik.css.engine.Rule[] $r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.batik.css.engine.Rule)[16];

        r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules> = $r1;

        return;
    }

    public void setMedia(org.w3c.css.sac.SACMediaList)
    {
        org.apache.batik.css.engine.StyleSheet r0;
        org.w3c.css.sac.SACMediaList r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        r1 := @parameter0: org.w3c.css.sac.SACMediaList;

        r0.<org.apache.batik.css.engine.StyleSheet: org.w3c.css.sac.SACMediaList media> = r1;

        return;
    }

    public org.w3c.css.sac.SACMediaList getMedia()
    {
        org.apache.batik.css.engine.StyleSheet r0;
        org.w3c.css.sac.SACMediaList $r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        $r1 = r0.<org.apache.batik.css.engine.StyleSheet: org.w3c.css.sac.SACMediaList media>;

        return $r1;
    }

    public org.apache.batik.css.engine.StyleSheet getParent()
    {
        org.apache.batik.css.engine.StyleSheet r0, $r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        $r1 = r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.StyleSheet parent>;

        return $r1;
    }

    public void setParent(org.apache.batik.css.engine.StyleSheet)
    {
        org.apache.batik.css.engine.StyleSheet r0, r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        r1 := @parameter0: org.apache.batik.css.engine.StyleSheet;

        r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.StyleSheet parent> = r1;

        return;
    }

    public void setAlternate(boolean)
    {
        org.apache.batik.css.engine.StyleSheet r0;
        boolean z0;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.css.engine.StyleSheet: boolean alternate> = z0;

        return;
    }

    public boolean isAlternate()
    {
        org.apache.batik.css.engine.StyleSheet r0;
        boolean $z0;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        $z0 = r0.<org.apache.batik.css.engine.StyleSheet: boolean alternate>;

        return $z0;
    }

    public void setTitle(java.lang.String)
    {
        org.apache.batik.css.engine.StyleSheet r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.css.engine.StyleSheet: java.lang.String title> = r1;

        return;
    }

    public java.lang.String getTitle()
    {
        org.apache.batik.css.engine.StyleSheet r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        $r1 = r0.<org.apache.batik.css.engine.StyleSheet: java.lang.String title>;

        return $r1;
    }

    public int getSize()
    {
        org.apache.batik.css.engine.StyleSheet r0;
        int $i0;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        $i0 = r0.<org.apache.batik.css.engine.StyleSheet: int size>;

        return $i0;
    }

    public org.apache.batik.css.engine.Rule getRule(int)
    {
        org.apache.batik.css.engine.StyleSheet r0;
        int i0;
        org.apache.batik.css.engine.Rule[] $r1;
        org.apache.batik.css.engine.Rule $r2;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules>;

        $r2 = $r1[i0];

        return $r2;
    }

    public void clear()
    {
        org.apache.batik.css.engine.StyleSheet r0;
        org.apache.batik.css.engine.Rule[] $r1;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        r0.<org.apache.batik.css.engine.StyleSheet: int size> = 0;

        $r1 = newarray (org.apache.batik.css.engine.Rule)[10];

        r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules> = $r1;

        return;
    }

    public void append(org.apache.batik.css.engine.Rule)
    {
        org.apache.batik.css.engine.Rule r3;
        org.apache.batik.css.engine.StyleSheet r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.batik.css.engine.Rule[] $r1, $r2, r4, $r5;

        r0 := @this: org.apache.batik.css.engine.StyleSheet;

        r3 := @parameter0: org.apache.batik.css.engine.Rule;

        $i1 = r0.<org.apache.batik.css.engine.StyleSheet: int size>;

        $r1 = r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $i4 = r0.<org.apache.batik.css.engine.StyleSheet: int size>;

        $i5 = $i4 * 2;

        r4 = newarray (org.apache.batik.css.engine.Rule)[$i5];

        $r5 = r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules>;

        $i6 = r0.<org.apache.batik.css.engine.StyleSheet: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i6);

        r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules> = r4;

     label1:
        $r2 = r0.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules>;

        $i2 = r0.<org.apache.batik.css.engine.StyleSheet: int size>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.css.engine.StyleSheet: int size> = $i3;

        $r2[$i2] = r3;

        return;
    }

    public java.lang.String toString(org.apache.batik.css.engine.CSSEngine)
    {
        org.apache.batik.css.engine.Rule $r4;
        org.apache.batik.css.engine.CSSEngine r3;
        org.apache.batik.css.engine.StyleSheet r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        org.apache.batik.css.engine.Rule[] $r2;
        java.lang.String $r5, $r6;

        r1 := @this: org.apache.batik.css.engine.StyleSheet;

        r3 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        $r0 = new java.lang.StringBuffer;

        $i0 = r1.<org.apache.batik.css.engine.StyleSheet: int size>;

        $i1 = $i0 * 8;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i1);

        i3 = 0;

        goto label2;

     label1:
        $r2 = r1.<org.apache.batik.css.engine.StyleSheet: org.apache.batik.css.engine.Rule[] rules>;

        $r4 = $r2[i3];

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.Rule: java.lang.String toString(org.apache.batik.css.engine.CSSEngine)>(r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        i3 = i3 + 1;

     label2:
        $i2 = r1.<org.apache.batik.css.engine.StyleSheet: int size>;

        if i3 < $i2 goto label1;

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
