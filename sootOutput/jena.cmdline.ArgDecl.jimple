public class jena.cmdline.ArgDecl extends java.lang.Object
{
    boolean takesValue;
    java.util.Set names;
    boolean takesArg;
    java.util.List argHooks;
    public static final boolean HasValue;
    public static final boolean NoValue;

    public void <init>(boolean)
    {
        java.util.HashSet $r1;
        jena.cmdline.ArgDecl r0;
        java.util.ArrayList $r2;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<jena.cmdline.ArgDecl: java.util.Set names> = $r1;

        r0.<jena.cmdline.ArgDecl: boolean takesArg> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<jena.cmdline.ArgDecl: java.util.List argHooks> = $r2;

        r0.<jena.cmdline.ArgDecl: boolean takesValue> = z0;

        return;
    }

    public void <init>(boolean, java.lang.String)
    {
        jena.cmdline.ArgDecl r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        return;
    }

    public void <init>(boolean, java.lang.String, jena.cmdline.ArgHandler)
    {
        jena.cmdline.ArgDecl r0;
        jena.cmdline.ArgHandler r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: jena.cmdline.ArgHandler;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addHook(jena.cmdline.ArgHandler)>(r2);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String)
    {
        jena.cmdline.ArgDecl r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r2);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String, jena.cmdline.ArgHandler)
    {
        jena.cmdline.ArgDecl r0;
        jena.cmdline.ArgHandler r3;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: jena.cmdline.ArgHandler;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r2);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addHook(jena.cmdline.ArgHandler)>(r3);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String, java.lang.String)
    {
        jena.cmdline.ArgDecl r0;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r2);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r3);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String, java.lang.String, jena.cmdline.ArgHandler)
    {
        jena.cmdline.ArgDecl r0;
        jena.cmdline.ArgHandler r4;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: jena.cmdline.ArgHandler;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r2);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r3);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addHook(jena.cmdline.ArgHandler)>(r4);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        jena.cmdline.ArgDecl r0;
        java.lang.String r1, r2, r3, r4;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r2);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r3);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r4);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, jena.cmdline.ArgHandler)
    {
        jena.cmdline.ArgDecl r0;
        jena.cmdline.ArgHandler r5;
        java.lang.String r1, r2, r3, r4;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: jena.cmdline.ArgHandler;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r2);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r3);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r4);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addHook(jena.cmdline.ArgHandler)>(r5);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, jena.cmdline.ArgHandler)
    {
        jena.cmdline.ArgDecl r0;
        jena.cmdline.ArgHandler r6;
        java.lang.String r1, r2, r3, r4, r5;
        boolean z0;

        r0 := @this: jena.cmdline.ArgDecl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: jena.cmdline.ArgHandler;

        specialinvoke r0.<jena.cmdline.ArgDecl: void <init>(boolean)>(z0);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r1);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r2);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r3);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r4);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addName(java.lang.String)>(r5);

        virtualinvoke r0.<jena.cmdline.ArgDecl: void addHook(jena.cmdline.ArgHandler)>(r6);

        return;
    }

    public void addName(java.lang.String)
    {
        jena.cmdline.ArgDecl r1;
        java.util.Set $r2;
        java.lang.String $r0, r3;

        r1 := @this: jena.cmdline.ArgDecl;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <jena.cmdline.ArgDecl: java.lang.String canonicalForm(java.lang.String)>(r3);

        $r2 = r1.<jena.cmdline.ArgDecl: java.util.Set names>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r0);

        return;
    }

    public java.util.Set getNames()
    {
        jena.cmdline.ArgDecl r0;
        java.util.Set $r1;

        r0 := @this: jena.cmdline.ArgDecl;

        $r1 = r0.<jena.cmdline.ArgDecl: java.util.Set names>;

        return $r1;
    }

    public java.util.Iterator names()
    {
        jena.cmdline.ArgDecl r0;
        java.util.Set $r1;
        java.util.Iterator $r2;

        r0 := @this: jena.cmdline.ArgDecl;

        $r1 = r0.<jena.cmdline.ArgDecl: java.util.Set names>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        return $r2;
    }

    public void addHook(jena.cmdline.ArgHandler)
    {
        jena.cmdline.ArgDecl r0;
        jena.cmdline.ArgHandler r1;
        java.util.List $r2;

        r0 := @this: jena.cmdline.ArgDecl;

        r1 := @parameter0: jena.cmdline.ArgHandler;

        $r2 = r0.<jena.cmdline.ArgDecl: java.util.List argHooks>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    protected void trigger(jena.cmdline.Arg)
    {
        jena.cmdline.ArgDecl r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        jena.cmdline.ArgHandler r4;
        java.lang.Object $r3;
        jena.cmdline.Arg r5;
        java.lang.String $r6, $r7;
        boolean $z0;

        r0 := @this: jena.cmdline.ArgDecl;

        r5 := @parameter0: jena.cmdline.Arg;

        $r1 = r0.<jena.cmdline.ArgDecl: java.util.List argHooks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (jena.cmdline.ArgHandler) $r3;

        $r6 = virtualinvoke r5.<jena.cmdline.Arg: java.lang.String getName()>();

        $r7 = virtualinvoke r5.<jena.cmdline.Arg: java.lang.String getValue()>();

        interfaceinvoke r4.<jena.cmdline.ArgHandler: void action(java.lang.String,java.lang.String)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public boolean takesValue()
    {
        jena.cmdline.ArgDecl r0;
        boolean $z0;

        r0 := @this: jena.cmdline.ArgDecl;

        $z0 = r0.<jena.cmdline.ArgDecl: boolean takesValue>;

        return $z0;
    }

    public boolean matches(jena.cmdline.Arg)
    {
        jena.cmdline.ArgDecl r0;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3;
        java.lang.String r4, $r6;
        jena.cmdline.Arg r5;
        boolean $z0, $z1;

        r0 := @this: jena.cmdline.ArgDecl;

        r5 := @parameter0: jena.cmdline.Arg;

        $r1 = r0.<jena.cmdline.ArgDecl: java.util.Set names>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r6 = virtualinvoke r5.<jena.cmdline.Arg: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean matches(java.lang.String)
    {
        jena.cmdline.ArgDecl r1;
        java.util.Set $r2;
        java.lang.String $r0, r3;
        boolean $z0;

        r1 := @this: jena.cmdline.ArgDecl;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <jena.cmdline.ArgDecl: java.lang.String canonicalForm(java.lang.String)>(r3);

        $r2 = r1.<jena.cmdline.ArgDecl: java.util.Set names>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r0);

        return $z0;
    }

    static java.lang.String canonicalForm(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        return $r2;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z1 == 0 goto label2;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        return $r1;

     label2:
        return r0;
    }

    public static void <clinit>()
    {
        <jena.cmdline.ArgDecl: boolean NoValue> = 0;

        <jena.cmdline.ArgDecl: boolean HasValue> = 1;

        return;
    }
}
