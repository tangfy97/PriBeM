public class org.apache.batik.parser.FragmentIdentifierParser extends org.apache.batik.parser.NumberParser
{
    protected char[] buffer;
    protected int bufferSize;
    protected org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler;

    public void <init>()
    {
        org.apache.batik.parser.FragmentIdentifierParser r0;
        char[] $r1;
        org.apache.batik.parser.FragmentIdentifierHandler $r2;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        specialinvoke r0.<org.apache.batik.parser.NumberParser: void <init>()>();

        $r1 = newarray (char)[16];

        r0.<org.apache.batik.parser.FragmentIdentifierParser: char[] buffer> = $r1;

        $r2 = <org.apache.batik.parser.DefaultFragmentIdentifierHandler: org.apache.batik.parser.FragmentIdentifierHandler INSTANCE>;

        r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler> = $r2;

        return;
    }

    public void setFragmentIdentifierHandler(org.apache.batik.parser.FragmentIdentifierHandler)
    {
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.parser.FragmentIdentifierHandler r1;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        r1 := @parameter0: org.apache.batik.parser.FragmentIdentifierHandler;

        r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler> = r1;

        return;
    }

    public org.apache.batik.parser.FragmentIdentifierHandler getFragmentIdentifierHandler()
    {
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.parser.FragmentIdentifierHandler $r1;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r1 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        return $r1;
    }

    protected void doParse() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.FragmentIdentifierHandler $r2, $r17, $r30, $r31;
        java.lang.String $r16, $r29;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        boolean $z0;
        org.apache.batik.util.io.NormalizingReader $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i62, $i63, $i65;
        char $c37, $c61;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize> = 0;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $r2 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r2.<org.apache.batik.parser.FragmentIdentifierHandler: void startFragmentIdentifier()>();

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i1)
        {
            case 115: goto label16;
            case 120: goto label01;
            default: goto label24;
        };

     label01:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 == 112 goto label02;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label02:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i5 == 111 goto label03;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label03:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 == 105 goto label04;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label04:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 == 110 goto label05;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label05:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i10 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i10;

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i11 == 116 goto label06;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label06:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i12 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i12;

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i13 == 101 goto label07;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label07:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r9 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i14 = virtualinvoke $r9.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i14;

        $i15 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i15 == 114 goto label08;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label08:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r10 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i16 = virtualinvoke $r10.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i16;

        $i17 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i17 == 40 goto label09;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label09:
        r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize> = 0;

        $r11 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i18 = virtualinvoke $r11.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i18;

        $i19 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i19 == 105 goto label10;

        $i41 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(105, $i41);

        goto label27;

     label10:
        $r12 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i20 = virtualinvoke $r12.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i20;

        $i21 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i21 == 100 goto label11;

        $i40 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(100, $i40);

        goto label27;

     label11:
        $r13 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i22 = virtualinvoke $r13.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i22;

        $i23 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i23 == 40 goto label12;

        $i39 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i39);

        goto label27;

     label12:
        $r14 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i24 = virtualinvoke $r14.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i24;

        $i25 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i25 == 34 goto label13;

        $i36 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i36 == 39 goto label13;

        $i38 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(39, $i38);

        goto label27;

     label13:
        $i26 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c37 = (char) $i26;

        $r15 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i27 = virtualinvoke $r15.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i27;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        $r16 = virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: java.lang.String getBufferContent()>();

        r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize> = 0;

        $r17 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r17.<org.apache.batik.parser.FragmentIdentifierHandler: void idReference(java.lang.String)>($r16);

        $i28 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i63 = (int) $c37;

        if $i28 == $i63 goto label14;

        $i35 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>($c37, $i35);

        goto label27;

     label14:
        $r18 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i29 = virtualinvoke $r18.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i29;

        $i30 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i30 == 41 goto label15;

        $i34 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i34);

        goto label27;

     label15:
        $r19 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i31 = virtualinvoke $r19.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i31;

        $i32 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i32 == 41 goto label27;

        $i33 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i33);

        goto label27;

     label16:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r20 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i42 = virtualinvoke $r20.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i42;

        $i43 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i43 == 118 goto label17;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label17:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r21 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i44 = virtualinvoke $r21.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i44;

        $i45 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i45 == 103 goto label18;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label18:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r22 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i46 = virtualinvoke $r22.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i46;

        $i47 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i47 == 86 goto label19;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label19:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r23 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i48 = virtualinvoke $r23.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i48;

        $i49 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i49 == 105 goto label20;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label20:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r24 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i50 = virtualinvoke $r24.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i50;

        $i51 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i51 == 101 goto label21;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label21:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r25 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i52 = virtualinvoke $r25.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i52;

        $i53 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i53 == 119 goto label22;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label22:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r26 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i54 = virtualinvoke $r26.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i54;

        $i55 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i55 == 40 goto label23;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        goto label26;

     label23:
        r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize> = 0;

        $r27 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i56 = virtualinvoke $r27.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i56;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseViewAttributes()>();

        $i57 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i57 == 41 goto label27;

        $i58 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i58);

        goto label27;

     label24:
        $i59 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i65 = (int) -1;

        if $i59 == $i65 goto label27;

        $i60 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c61 = (char) $i60;

        $z0 = staticinvoke <org.apache.batik.xml.XMLUtilities: boolean isXMLNameFirstCharacter(char)>($c61);

        if $z0 != 0 goto label25;

        goto label27;

     label25:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r28 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i62 = virtualinvoke $r28.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i62;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

     label26:
        $r29 = virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: java.lang.String getBufferContent()>();

        $r30 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r30.<org.apache.batik.parser.FragmentIdentifierHandler: void idReference(java.lang.String)>($r29);

     label27:
        $r31 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r31.<org.apache.batik.parser.FragmentIdentifierHandler: void endFragmentIdentifier()>();

        return;
    }

    protected void parseViewAttributes() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.FragmentIdentifierHandler $r19, $r28, $r40, $r43, $r46, $r55, $r65, $r68;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i237;
        java.lang.String $r42;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        boolean $z0, z1, z2, z3;
        org.apache.batik.parser.ParseException $r91;
        org.apache.batik.parser.ErrorHandler $r92;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r44, $r45, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r67, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90;
        char $c99;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        goto label001;

     label001:
        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i0)
        {
            case -1: goto label002;
            case 41: goto label002;
            case 59: goto label004;
            case 112: goto label034;
            case 116: goto label055;
            case 118: goto label006;
            case 122: goto label079;
            default: goto label003;
        };

     label002:
        if z2 == 0 goto label003;

        $i235 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i235);

        goto label108;

     label003:
        goto label108;

     label004:
        if z3 == 0 goto label005;

        $i234 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i234);

        goto label108;

     label005:
        $r90 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i233 = virtualinvoke $r90.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i233;

        goto label107;

     label006:
        z1 = 0;

        z3 = 0;

        z2 = 0;

        $r29 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i75 = virtualinvoke $r29.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i75;

        $i76 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i76 == 105 goto label007;

        $i139 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(105, $i139);

        goto label108;

     label007:
        $r30 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i77 = virtualinvoke $r30.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i77;

        $i78 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i78 == 101 goto label008;

        $i138 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i138);

        goto label108;

     label008:
        $r31 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i79 = virtualinvoke $r31.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i79;

        $i80 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i80 == 119 goto label009;

        $i137 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(119, $i137);

        goto label108;

     label009:
        $r32 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i81 = virtualinvoke $r32.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i81;

        $i82 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i82)
        {
            case 66: goto label010;
            case 84: goto label018;
            default: goto label033;
        };

     label010:
        $r47 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i111 = virtualinvoke $r47.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i111;

        $i112 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i112 == 111 goto label011;

        $i135 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(111, $i135);

        goto label108;

     label011:
        $r48 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i113 = virtualinvoke $r48.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i113;

        $i114 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i114 == 120 goto label012;

        $i134 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(120, $i134);

        goto label108;

     label012:
        $r49 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i115 = virtualinvoke $r49.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i115;

        $i116 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i116 == 40 goto label013;

        $i133 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i133);

        goto label108;

     label013:
        $r50 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i117 = virtualinvoke $r50.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i117;

        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        $i118 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i118 == 44 goto label014;

        $i132 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(44, $i132);

        goto label108;

     label014:
        $r51 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i119 = virtualinvoke $r51.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i119;

        $f1 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        $i120 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i120 == 44 goto label015;

        $i131 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(44, $i131);

        goto label108;

     label015:
        $r52 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i121 = virtualinvoke $r52.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i121;

        $f2 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        $i122 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i122 == 44 goto label016;

        $i130 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(44, $i130);

        goto label108;

     label016:
        $r53 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i123 = virtualinvoke $r53.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i123;

        $f3 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        $i124 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i124 == 41 goto label017;

        $i129 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i129);

        goto label108;

     label017:
        $r54 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i125 = virtualinvoke $r54.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i125;

        $r55 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r55.<org.apache.batik.parser.FragmentIdentifierHandler: void viewBox(float,float,float,float)>($f0, $f1, $f2, $f3);

        $i126 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i126 == 41 goto label107;

        $i127 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i127 == 59 goto label107;

        $i128 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i128);

        goto label108;

     label018:
        $r33 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i83 = virtualinvoke $r33.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i83;

        $i84 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i84 == 97 goto label019;

        $i110 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i110);

        goto label108;

     label019:
        $r34 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i85 = virtualinvoke $r34.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i85;

        $i86 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i86 == 114 goto label020;

        $i109 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i109);

        goto label108;

     label020:
        $r35 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i87 = virtualinvoke $r35.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i87;

        $i88 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i88 == 103 goto label021;

        $i108 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(103, $i108);

        goto label108;

     label021:
        $r36 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i89 = virtualinvoke $r36.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i89;

        $i90 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i90 == 101 goto label022;

        $i107 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i107);

        goto label108;

     label022:
        $r37 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i91 = virtualinvoke $r37.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i91;

        $i92 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i92 == 116 goto label023;

        $i106 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i106);

        goto label108;

     label023:
        $r38 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i93 = virtualinvoke $r38.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i93;

        $i94 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i94 == 40 goto label024;

        $i105 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i105);

        goto label108;

     label024:
        $r39 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i95 = virtualinvoke $r39.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i95;

        $r40 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r40.<org.apache.batik.parser.FragmentIdentifierHandler: void startViewTarget()>();

        goto label025;

     label025:
        r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize> = 0;

        $i96 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i237 = (int) -1;

        if $i96 == $i237 goto label026;

        $i98 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c99 = (char) $i98;

        $z0 = staticinvoke <org.apache.batik.xml.XMLUtilities: boolean isXMLNameFirstCharacter(char)>($c99);

        if $z0 != 0 goto label027;

     label026:
        $i97 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i97);

        goto label108;

     label027:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r41 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i100 = virtualinvoke $r41.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i100;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseIdentifier()>();

        $r42 = virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: java.lang.String getBufferContent()>();

        $r43 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r43.<org.apache.batik.parser.FragmentIdentifierHandler: void viewTarget(java.lang.String)>($r42);

        r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize> = 0;

        $i101 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i101)
        {
            case 41: goto label028;
            case 44: goto label029;
            case 59: goto label029;
            default: goto label030;
        };

     label028:
        $r45 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i103 = virtualinvoke $r45.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i103;

        goto label032;

     label029:
        $r44 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i102 = virtualinvoke $r44.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i102;

        goto label031;

     label030:
        $i104 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i104);

        goto label108;

     label031:
        goto label025;

     label032:
        $r46 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r46.<org.apache.batik.parser.FragmentIdentifierHandler: void endViewTarget()>();

        goto label107;

     label033:
        $i136 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i136);

        goto label108;

     label034:
        z1 = 0;

        z3 = 0;

        z2 = 0;

        $r69 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i172 = virtualinvoke $r69.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i172;

        $i173 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i173 == 114 goto label035;

        $i232 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i232);

        goto label108;

     label035:
        $r70 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i174 = virtualinvoke $r70.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i174;

        $i175 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i175 == 101 goto label036;

        $i231 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i231);

        goto label108;

     label036:
        $r71 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i176 = virtualinvoke $r71.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i176;

        $i177 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i177 == 115 goto label037;

        $i230 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(115, $i230);

        goto label108;

     label037:
        $r72 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i178 = virtualinvoke $r72.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i178;

        $i179 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i179 == 101 goto label038;

        $i229 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i229);

        goto label108;

     label038:
        $r73 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i180 = virtualinvoke $r73.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i180;

        $i181 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i181 == 114 goto label039;

        $i228 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i228);

        goto label108;

     label039:
        $r74 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i182 = virtualinvoke $r74.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i182;

        $i183 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i183 == 118 goto label040;

        $i227 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(118, $i227);

        goto label108;

     label040:
        $r75 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i184 = virtualinvoke $r75.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i184;

        $i185 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i185 == 101 goto label041;

        $i226 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i226);

        goto label108;

     label041:
        $r76 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i186 = virtualinvoke $r76.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i186;

        $i187 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i187 == 65 goto label042;

        $i225 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(65, $i225);

        goto label108;

     label042:
        $r77 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i188 = virtualinvoke $r77.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i188;

        $i189 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i189 == 115 goto label043;

        $i224 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(115, $i224);

        goto label108;

     label043:
        $r78 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i190 = virtualinvoke $r78.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i190;

        $i191 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i191 == 112 goto label044;

        $i223 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(112, $i223);

        goto label108;

     label044:
        $r79 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i192 = virtualinvoke $r79.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i192;

        $i193 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i193 == 101 goto label045;

        $i222 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i222);

        goto label108;

     label045:
        $r80 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i194 = virtualinvoke $r80.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i194;

        $i195 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i195 == 99 goto label046;

        $i221 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(99, $i221);

        goto label108;

     label046:
        $r81 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i196 = virtualinvoke $r81.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i196;

        $i197 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i197 == 116 goto label047;

        $i220 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i220);

        goto label108;

     label047:
        $r82 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i198 = virtualinvoke $r82.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i198;

        $i199 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i199 == 82 goto label048;

        $i219 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(82, $i219);

        goto label108;

     label048:
        $r83 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i200 = virtualinvoke $r83.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i200;

        $i201 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i201 == 97 goto label049;

        $i218 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i218);

        goto label108;

     label049:
        $r84 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i202 = virtualinvoke $r84.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i202;

        $i203 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i203 == 116 goto label050;

        $i217 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i217);

        goto label108;

     label050:
        $r85 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i204 = virtualinvoke $r85.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i204;

        $i205 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i205 == 105 goto label051;

        $i216 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(105, $i216);

        goto label108;

     label051:
        $r86 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i206 = virtualinvoke $r86.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i206;

        $i207 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i207 == 111 goto label052;

        $i215 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(111, $i215);

        goto label108;

     label052:
        $r87 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i208 = virtualinvoke $r87.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i208;

        $i209 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i209 == 40 goto label053;

        $i214 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i214);

        goto label108;

     label053:
        $r88 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i210 = virtualinvoke $r88.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i210;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parsePreserveAspectRatio()>();

        $i211 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i211 == 41 goto label054;

        $i213 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i213);

        goto label108;

     label054:
        $r89 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i212 = virtualinvoke $r89.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i212;

        goto label107;

     label055:
        z1 = 0;

        z3 = 0;

        z2 = 0;

        $r56 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i140 = virtualinvoke $r56.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i140;

        $i141 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i141 == 114 goto label056;

        $i171 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i171);

        goto label108;

     label056:
        $r57 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i142 = virtualinvoke $r57.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i142;

        $i143 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i143 == 97 goto label057;

        $i170 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i170);

        goto label108;

     label057:
        $r58 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i144 = virtualinvoke $r58.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i144;

        $i145 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i145 == 110 goto label058;

        $i169 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(110, $i169);

        goto label108;

     label058:
        $r59 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i146 = virtualinvoke $r59.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i146;

        $i147 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i147 == 115 goto label059;

        $i168 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(115, $i168);

        goto label108;

     label059:
        $r60 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i148 = virtualinvoke $r60.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i148;

        $i149 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i149 == 102 goto label060;

        $i167 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(102, $i167);

        goto label108;

     label060:
        $r61 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i150 = virtualinvoke $r61.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i150;

        $i151 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i151 == 111 goto label061;

        $i166 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(111, $i166);

        goto label108;

     label061:
        $r62 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i152 = virtualinvoke $r62.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i152;

        $i153 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i153 == 114 goto label062;

        $i165 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i165);

        goto label108;

     label062:
        $r63 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i154 = virtualinvoke $r63.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i154;

        $i155 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i155 == 109 goto label063;

        $i164 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(109, $i164);

        goto label108;

     label063:
        $r64 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i156 = virtualinvoke $r64.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i156;

        $i157 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i157 == 40 goto label064;

        $i163 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i163);

        goto label108;

     label064:
        $r65 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r65.<org.apache.batik.parser.TransformListHandler: void startTransformList()>();

        goto label065;

     label065:
        $r66 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i158 = virtualinvoke $r66.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i158;

        $i159 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i159)
        {
            case 44: goto label066;
            case 109: goto label067;
            case 114: goto label068;
            case 115: goto label070;
            case 116: goto label069;
            default: goto label074;
        };

     label066:
        goto label075;

     label067:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseMatrix()>();

        goto label075;

     label068:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseRotate()>();

        goto label075;

     label069:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseTranslate()>();

        goto label075;

     label070:
        $r67 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i160 = virtualinvoke $r67.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i160;

        $i161 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i161)
        {
            case 99: goto label071;
            case 107: goto label072;
            default: goto label073;
        };

     label071:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseScale()>();

        goto label075;

     label072:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void parseSkew()>();

        goto label075;

     label073:
        $i162 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i162);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        goto label075;

     label074:
        goto label078;

     label075:
        goto label077;

     label076:
        $r91 := @caughtexception;

        $r92 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.parser.ErrorHandler errorHandler>;

        interfaceinvoke $r92.<org.apache.batik.parser.ErrorHandler: void error(org.apache.batik.parser.ParseException)>($r91);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

     label077:
        goto label065;

     label078:
        $r68 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r68.<org.apache.batik.parser.TransformListHandler: void endTransformList()>();

        goto label107;

     label079:
        z1 = 0;

        z3 = 0;

        z2 = 0;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i1 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i1;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 == 111 goto label080;

        $i74 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(111, $i74);

        goto label108;

     label080:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i3;

        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i4 == 111 goto label081;

        $i73 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(111, $i73);

        goto label108;

     label081:
        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i5 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i5;

        $i6 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i6 == 109 goto label082;

        $i72 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(109, $i72);

        goto label108;

     label082:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i7 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i7;

        $i8 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i8 == 65 goto label083;

        $i71 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(65, $i71);

        goto label108;

     label083:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i9 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i9;

        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i10 == 110 goto label084;

        $i70 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(110, $i70);

        goto label108;

     label084:
        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i11 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i11;

        $i12 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i12 == 100 goto label085;

        $i69 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(100, $i69);

        goto label108;

     label085:
        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i13 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i13;

        $i14 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i14 == 80 goto label086;

        $i68 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(80, $i68);

        goto label108;

     label086:
        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i15 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i15;

        $i16 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i16 == 97 goto label087;

        $i67 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i67);

        goto label108;

     label087:
        $r9 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i17 = virtualinvoke $r9.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i17;

        $i18 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i18 == 110 goto label088;

        $i66 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(110, $i66);

        goto label108;

     label088:
        $r10 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i19 = virtualinvoke $r10.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i19;

        $i20 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i20 == 40 goto label089;

        $i65 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i65);

        goto label108;

     label089:
        $r11 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i21 = virtualinvoke $r11.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i21;

        $i22 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i22)
        {
            case 100: goto label097;
            case 109: goto label090;
            default: goto label104;
        };

     label090:
        $r12 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i23 = virtualinvoke $r12.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i23;

        $i24 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i24 == 97 goto label091;

        $i44 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i44);

        goto label108;

     label091:
        $r13 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i25 = virtualinvoke $r13.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i25;

        $i26 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i26 == 103 goto label092;

        $i43 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(103, $i43);

        goto label108;

     label092:
        $r14 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i27 = virtualinvoke $r14.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i27;

        $i28 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i28 == 110 goto label093;

        $i42 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(110, $i42);

        goto label108;

     label093:
        $r15 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i29 = virtualinvoke $r15.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i29;

        $i30 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i30 == 105 goto label094;

        $i41 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(105, $i41);

        goto label108;

     label094:
        $r16 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i31 = virtualinvoke $r16.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i31;

        $i32 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i32 == 102 goto label095;

        $i40 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(102, $i40);

        goto label108;

     label095:
        $r17 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i33 = virtualinvoke $r17.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i33;

        $i34 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i34 == 121 goto label096;

        $i39 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(121, $i39);

        goto label108;

     label096:
        $r18 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i35 = virtualinvoke $r18.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i35;

        $r19 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r19.<org.apache.batik.parser.FragmentIdentifierHandler: void zoomAndPan(boolean)>(1);

        goto label105;

     label097:
        $r21 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i45 = virtualinvoke $r21.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i45;

        $i46 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i46 == 105 goto label098;

        $i63 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(105, $i63);

        goto label108;

     label098:
        $r22 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i47 = virtualinvoke $r22.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i47;

        $i48 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i48 == 115 goto label099;

        $i62 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(115, $i62);

        goto label108;

     label099:
        $r23 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i49 = virtualinvoke $r23.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i49;

        $i50 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i50 == 97 goto label100;

        $i61 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i61);

        goto label108;

     label100:
        $r24 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i51 = virtualinvoke $r24.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i51;

        $i52 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i52 == 98 goto label101;

        $i60 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(98, $i60);

        goto label108;

     label101:
        $r25 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i53 = virtualinvoke $r25.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i53;

        $i54 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i54 == 108 goto label102;

        $i59 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(108, $i59);

        goto label108;

     label102:
        $r26 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i55 = virtualinvoke $r26.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i55;

        $i56 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i56 == 101 goto label103;

        $i58 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i58);

        goto label108;

     label103:
        $r27 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i57 = virtualinvoke $r27.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i57;

        $r28 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r28.<org.apache.batik.parser.FragmentIdentifierHandler: void zoomAndPan(boolean)>(0);

        goto label105;

     label104:
        $i64 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i64);

        goto label108;

     label105:
        $i36 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i36 == 41 goto label106;

        $i38 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i38);

        goto label108;

     label106:
        $r20 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i37 = virtualinvoke $r20.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i37;

     label107:
        goto label001;

     label108:
        return;

        catch org.apache.batik.parser.ParseException from label065 to label075 with label076;
    }

    protected void parseIdentifier() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.util.io.NormalizingReader $r1;
        char $c2;
        int $i0, $i1, $i3, $i5;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        boolean $z0;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        goto label1;

     label1:
        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i5 = (int) -1;

        if $i0 == $i5 goto label3;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c2 = (char) $i1;

        $z0 = staticinvoke <org.apache.batik.xml.XMLUtilities: boolean isXMLNameCharacter(char)>($c2);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void bufferize()>();

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i3;

        goto label1;

     label3:
        return;
    }

    protected java.lang.String getBufferContent()
    {
        int $i0;
        org.apache.batik.parser.FragmentIdentifierParser r1;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.batik.parser.FragmentIdentifierParser: char[] buffer>;

        $i0 = r1.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize>;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0);

        return $r0;
    }

    protected void bufferize()
    {
        char $c5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        char[] $r1, $r2, $r3, r4, $r5;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $i1 = r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize>;

        $r1 = r0.<org.apache.batik.parser.FragmentIdentifierParser: char[] buffer>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        $r3 = r0.<org.apache.batik.parser.FragmentIdentifierParser: char[] buffer>;

        $i6 = lengthof $r3;

        $i7 = $i6 * 2;

        r4 = newarray (char)[$i7];

        $r5 = r0.<org.apache.batik.parser.FragmentIdentifierParser: char[] buffer>;

        $i8 = r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i8);

        r0.<org.apache.batik.parser.FragmentIdentifierParser: char[] buffer> = r4;

     label1:
        $r2 = r0.<org.apache.batik.parser.FragmentIdentifierParser: char[] buffer>;

        $i2 = r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.parser.FragmentIdentifierParser: int bufferSize> = $i3;

        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c5 = (char) $i4;

        $r2[$i2] = $c5;

        return;
    }

    protected void skipSpaces() throws java.io.IOException
    {
        int $i0, $i1;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.util.io.NormalizingReader $r1;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 != 44 goto label1;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i1 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i1;

     label1:
        return;
    }

    protected void skipCommaSpaces() throws java.io.IOException
    {
        int $i0, $i1;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.util.io.NormalizingReader $r1;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 != 44 goto label1;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i1 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i1;

     label1:
        return;
    }

    protected void parseMatrix() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.FragmentIdentifierParser r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        org.apache.batik.parser.FragmentIdentifierHandler $r8;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 == 97 goto label1;

        $i20 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i20);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label1:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 == 116 goto label2;

        $i19 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i19);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label2:
        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i5 == 114 goto label3;

        $i18 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i18);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label3:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 == 105 goto label4;

        $i17 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(105, $i17);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label4:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 == 120 goto label5;

        $i16 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(120, $i16);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label5:
        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i10 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i10;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i11 == 40 goto label6;

        $i15 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i15);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label6:
        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i12 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i12;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipCommaSpaces()>();

        $f1 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipCommaSpaces()>();

        $f2 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipCommaSpaces()>();

        $f3 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipCommaSpaces()>();

        $f4 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipCommaSpaces()>();

        $f5 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i13 == 41 goto label7;

        $i14 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i14);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label7:
        $r8 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r8.<org.apache.batik.parser.TransformListHandler: void matrix(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, $f4, $f5);

        return;
    }

    protected void parseRotate() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.FragmentIdentifierParser r0;
        float $f0, $f1, $f2;
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        org.apache.batik.parser.FragmentIdentifierHandler $r9, $r10;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 == 111 goto label01;

        $i22 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(111, $i22);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label01:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 == 116 goto label02;

        $i21 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i21);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label02:
        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i5 == 97 goto label03;

        $i20 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i20);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label03:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 == 116 goto label04;

        $i19 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i19);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label04:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 == 101 goto label05;

        $i18 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i18);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label05:
        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i10 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i10;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i11 == 40 goto label06;

        $i17 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i17);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label06:
        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i12 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i12;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i13)
        {
            case 41: goto label07;
            case 44: goto label08;
            default: goto label09;
        };

     label07:
        $r10 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r10.<org.apache.batik.parser.TransformListHandler: void rotate(float)>($f0);

        return;

     label08:
        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i14 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i14;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

     label09:
        $f1 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipCommaSpaces()>();

        $f2 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i15 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i15 == 41 goto label10;

        $i16 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i16);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label10:
        $r9 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r9.<org.apache.batik.parser.TransformListHandler: void rotate(float,float,float)>($f0, $f1, $f2);

        return;
    }

    protected void parseTranslate() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.FragmentIdentifierParser r0;
        float $f0, $f1;
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        org.apache.batik.parser.FragmentIdentifierHandler $r12, $r13;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 == 114 goto label01;

        $i31 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i31);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label01:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 == 97 goto label02;

        $i30 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i30);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label02:
        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i5 == 110 goto label03;

        $i29 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(110, $i29);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label03:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 == 115 goto label04;

        $i28 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(115, $i28);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label04:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 == 108 goto label05;

        $i27 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(108, $i27);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label05:
        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i10 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i10;

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i11 == 97 goto label06;

        $i26 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i26);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label06:
        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i12 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i12;

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i13 == 116 goto label07;

        $i25 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i25);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label07:
        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i14 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i14;

        $i15 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i15 == 101 goto label08;

        $i24 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i24);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label08:
        $r9 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i16 = virtualinvoke $r9.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i16;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i17 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i17 == 40 goto label09;

        $i23 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i23);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label09:
        $r10 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i18 = virtualinvoke $r10.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i18;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i19 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i19)
        {
            case 41: goto label10;
            case 44: goto label11;
            default: goto label12;
        };

     label10:
        $r13 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r13.<org.apache.batik.parser.TransformListHandler: void translate(float)>($f0);

        return;

     label11:
        $r11 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i20 = virtualinvoke $r11.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i20;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

     label12:
        $f1 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i21 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i21 == 41 goto label13;

        $i22 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i22);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label13:
        $r12 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r12.<org.apache.batik.parser.TransformListHandler: void translate(float,float)>($f0, $f1);

        return;
    }

    protected void parseScale() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.parser.FragmentIdentifierHandler $r7, $r8;
        float $f0, $f1;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 == 97 goto label1;

        $i16 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i16);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label1:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 == 108 goto label2;

        $i15 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(108, $i15);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label2:
        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i5 == 101 goto label3;

        $i14 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i14);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label3:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 == 40 goto label4;

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i13);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label4:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i9)
        {
            case 41: goto label5;
            case 44: goto label6;
            default: goto label7;
        };

     label5:
        $r8 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r8.<org.apache.batik.parser.TransformListHandler: void scale(float)>($f0);

        return;

     label6:
        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i10 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i10;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

     label7:
        $f1 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i11 == 41 goto label8;

        $i12 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i12);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label8:
        $r7 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r7.<org.apache.batik.parser.TransformListHandler: void scale(float,float)>($f0, $f1);

        return;
    }

    protected void parseSkew() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.parser.FragmentIdentifierHandler $r6, $r7;
        boolean z0;
        float $f0;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 == 101 goto label01;

        $i14 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i14);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label01:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 == 119 goto label02;

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(119, $i13);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label02:
        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        z0 = 0;

        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i5)
        {
            case 88: goto label03;
            case 89: goto label04;
            default: goto label05;
        };

     label03:
        z0 = 1;

     label04:
        goto label06;

     label05:
        $i12 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(88, $i12);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label06:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 == 40 goto label07;

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(40, $i11);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label07:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 == 41 goto label08;

        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(41, $i10);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipTransform()>();

        return;

     label08:
        if z0 == 0 goto label09;

        $r7 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r7.<org.apache.batik.parser.TransformListHandler: void skewX(float)>($f0);

        goto label10;

     label09:
        $r6 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r6.<org.apache.batik.parser.TransformListHandler: void skewY(float)>($f0);

     label10:
        return;
    }

    protected void skipTransform() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i4;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.util.io.NormalizingReader $r1;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        goto label1;

     label1:
        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i1)
        {
            case 41: goto label2;
            default: goto label3;
        };

     label2:
        goto label4;

     label3:
        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i4 = (int) -1;

        if $i2 != $i4 goto label1;

        goto label4;

     label4:
        return;
    }

    protected void parsePreserveAspectRatio() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.FragmentIdentifierHandler $r1, $r9, $r15, $r20, $r22, $r25, $r31, $r33, $r36, $r43, $r45, $r48, $r54, $r55;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i101;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.util.io.NormalizingReader $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r32, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r44, $r46, $r47, $r49, $r50, $r51, $r52, $r53;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        $r1 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r1.<org.apache.batik.parser.PreserveAspectRatioHandler: void startPreserveAspectRatio()>();

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i0)
        {
            case 110: goto label01;
            case 120: goto label05;
            default: goto label41;
        };

     label01:
        $r50 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i87 = virtualinvoke $r50.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i87;

        $i88 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i88 == 111 goto label02;

        $i96 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(111, $i96);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label02:
        $r51 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i89 = virtualinvoke $r51.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i89;

        $i90 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i90 == 110 goto label03;

        $i95 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(110, $i95);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label03:
        $r52 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i91 = virtualinvoke $r52.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i91;

        $i92 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i92 == 101 goto label04;

        $i94 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i94);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label04:
        $r53 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i93 = virtualinvoke $r53.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i93;

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipSpaces()>();

        $r54 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r54.<org.apache.batik.parser.PreserveAspectRatioHandler: void none()>();

        goto label42;

     label05:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i1 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i1;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 == 77 goto label06;

        $i86 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(77, $i86);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label06:
        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i3;

        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i4)
        {
            case 97: goto label07;
            case 105: goto label18;
            default: goto label40;
        };

     label07:
        $r38 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i65 = virtualinvoke $r38.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i65;

        $i66 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i66 == 120 goto label08;

        $i84 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(120, $i84);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label08:
        $r39 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i67 = virtualinvoke $r39.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i67;

        $i68 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i68 == 89 goto label09;

        $i83 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(89, $i83);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label09:
        $r40 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i69 = virtualinvoke $r40.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i69;

        $i70 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i70 == 77 goto label10;

        $i82 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(77, $i82);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label10:
        $r41 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i71 = virtualinvoke $r41.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i71;

        $i72 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i72)
        {
            case 97: goto label11;
            case 105: goto label13;
            default: goto label17;
        };

     label11:
        $r47 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i78 = virtualinvoke $r47.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i78;

        $i79 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i79 == 120 goto label12;

        $i81 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(120, $i81);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label12:
        $r48 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r48.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMaxYMax()>();

        $r49 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i80 = virtualinvoke $r49.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i80;

        goto label17;

     label13:
        $r42 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i73 = virtualinvoke $r42.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i73;

        $i74 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i74)
        {
            case 100: goto label14;
            case 110: goto label15;
            default: goto label16;
        };

     label14:
        $r45 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r45.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMaxYMid()>();

        $r46 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i76 = virtualinvoke $r46.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i76;

        goto label17;

     label15:
        $r43 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r43.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMaxYMin()>();

        $r44 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i75 = virtualinvoke $r44.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i75;

        goto label17;

     label16:
        $i77 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i77);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label17:
        goto label42;

     label18:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i5 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i5;

        $i6 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i6)
        {
            case 100: goto label19;
            case 110: goto label29;
            default: goto label39;
        };

     label19:
        $r27 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i47 = virtualinvoke $r27.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i47;

        $i48 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i48 == 89 goto label20;

        $i63 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(89, $i63);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label20:
        $r28 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i49 = virtualinvoke $r28.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i49;

        $i50 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i50 == 77 goto label21;

        $i62 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(77, $i62);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label21:
        $r29 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i51 = virtualinvoke $r29.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i51;

        $i52 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i52)
        {
            case 97: goto label22;
            case 105: goto label24;
            default: goto label28;
        };

     label22:
        $r35 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i58 = virtualinvoke $r35.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i58;

        $i59 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i59 == 120 goto label23;

        $i61 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(120, $i61);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label23:
        $r36 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r36.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMidYMax()>();

        $r37 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i60 = virtualinvoke $r37.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i60;

        goto label28;

     label24:
        $r30 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i53 = virtualinvoke $r30.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i53;

        $i54 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i54)
        {
            case 100: goto label25;
            case 110: goto label26;
            default: goto label27;
        };

     label25:
        $r33 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r33.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMidYMid()>();

        $r34 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i56 = virtualinvoke $r34.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i56;

        goto label28;

     label26:
        $r31 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r31.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMidYMin()>();

        $r32 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i55 = virtualinvoke $r32.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i55;

        goto label28;

     label27:
        $i57 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i57);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label28:
        goto label42;

     label29:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i7 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i7;

        $i8 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i8 == 89 goto label30;

        $i46 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(89, $i46);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label30:
        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i9 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i9;

        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i10 == 77 goto label31;

        $i45 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(77, $i45);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label31:
        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i11 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i11;

        $i12 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i12)
        {
            case 97: goto label32;
            case 105: goto label34;
            default: goto label38;
        };

     label32:
        $r24 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i41 = virtualinvoke $r24.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i41;

        $i42 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i42 == 120 goto label33;

        $i44 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(120, $i44);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label33:
        $r25 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r25.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMinYMax()>();

        $r26 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i43 = virtualinvoke $r26.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i43;

        goto label38;

     label34:
        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i13 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i13;

        $i14 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i14)
        {
            case 100: goto label35;
            case 110: goto label36;
            default: goto label37;
        };

     label35:
        $r22 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r22.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMinYMid()>();

        $r23 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i39 = virtualinvoke $r23.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i39;

        goto label38;

     label36:
        $r9 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r9.<org.apache.batik.parser.PreserveAspectRatioHandler: void xMinYMin()>();

        $r10 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i15 = virtualinvoke $r10.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i15;

        goto label38;

     label37:
        $i40 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i40);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label38:
        goto label42;

     label39:
        $i64 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i64);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label40:
        $i85 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i85);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label42;

     label41:
        $i97 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i101 = (int) -1;

        if $i97 == $i101 goto label42;

        $i98 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i98);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

     label42:
        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipCommaSpaces()>();

        $i99 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i99)
        {
            case 109: goto label43;
            case 115: goto label47;
            default: goto label52;
        };

     label43:
        $r17 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i29 = virtualinvoke $r17.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i29;

        $i30 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i30 == 101 goto label44;

        $i38 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i38);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label52;

     label44:
        $r18 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i31 = virtualinvoke $r18.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i31;

        $i32 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i32 == 101 goto label45;

        $i37 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i37);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label52;

     label45:
        $r19 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i33 = virtualinvoke $r19.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i33;

        $i34 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i34 == 116 goto label46;

        $i36 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(116, $i36);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label52;

     label46:
        $r20 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r20.<org.apache.batik.parser.PreserveAspectRatioHandler: void meet()>();

        $r21 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i35 = virtualinvoke $r21.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i35;

        goto label52;

     label47:
        $r11 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i16 = virtualinvoke $r11.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i16;

        $i17 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i17 == 108 goto label48;

        $i28 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(108, $i28);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label52;

     label48:
        $r12 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i18 = virtualinvoke $r12.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i18;

        $i19 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i19 == 105 goto label49;

        $i27 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(105, $i27);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label52;

     label49:
        $r13 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i20 = virtualinvoke $r13.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i20;

        $i21 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i21 == 99 goto label50;

        $i26 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(99, $i26);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label52;

     label50:
        $r14 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i22 = virtualinvoke $r14.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i22;

        $i23 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i23 == 101 goto label51;

        $i25 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i25);

        virtualinvoke r0.<org.apache.batik.parser.FragmentIdentifierParser: void skipIdentifier()>();

        goto label52;

     label51:
        $r15 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r15.<org.apache.batik.parser.PreserveAspectRatioHandler: void slice()>();

        $r16 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i24 = virtualinvoke $r16.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i24;

     label52:
        $r55 = r0.<org.apache.batik.parser.FragmentIdentifierParser: org.apache.batik.parser.FragmentIdentifierHandler fragmentIdentifierHandler>;

        interfaceinvoke $r55.<org.apache.batik.parser.PreserveAspectRatioHandler: void endPreserveAspectRatio()>();

        return;
    }

    protected void skipIdentifier() throws java.io.IOException
    {
        int $i0, $i1, $i2;
        org.apache.batik.parser.FragmentIdentifierParser r0;
        org.apache.batik.util.io.NormalizingReader $r1, $r2;

        r0 := @this: org.apache.batik.parser.FragmentIdentifierParser;

        goto label1;

     label1:
        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i1)
        {
            case -1: goto label3;
            case 9: goto label2;
            case 10: goto label2;
            case 13: goto label2;
            case 32: goto label2;
            default: goto label4;
        };

     label2:
        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

     label3:
        goto label5;

     label4:
        goto label1;

     label5:
        return;
    }
}
