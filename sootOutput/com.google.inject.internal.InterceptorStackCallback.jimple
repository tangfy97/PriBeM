final class com.google.inject.internal.InterceptorStackCallback extends java.lang.Object implements com.google.inject.internal.cglib.proxy.$MethodInterceptor
{
    private static final java.util.Set AOP_INTERNAL_CLASSES;
    final org.aopalliance.intercept.MethodInterceptor[] interceptors;
    final java.lang.reflect.Method method;

    public void <init>(java.lang.reflect.Method, java.util.List)
    {
        java.util.List r2;
        java.lang.Object[] $r4;
        com.google.inject.internal.InterceptorStackCallback r0;
        int $i0;
        org.aopalliance.intercept.MethodInterceptor[] $r3, $r5;
        java.lang.reflect.Method r1;

        r0 := @this: com.google.inject.internal.InterceptorStackCallback;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.InterceptorStackCallback: java.lang.reflect.Method method> = r1;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = newarray (org.aopalliance.intercept.MethodInterceptor)[$i0];

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.aopalliance.intercept.MethodInterceptor[]) $r4;

        r0.<com.google.inject.internal.InterceptorStackCallback: org.aopalliance.intercept.MethodInterceptor[] interceptors> = $r5;

        return;
    }

    public java.lang.Object intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], com.google.inject.internal.cglib.proxy.$MethodProxy) throws java.lang.Throwable
    {
        com.google.inject.internal.InterceptorStackCallback$InterceptedMethodInvocation $r0;
        java.lang.Object[] r4;
        com.google.inject.internal.InterceptorStackCallback r1;
        com.google.inject.internal.cglib.proxy.$MethodProxy r3;
        java.lang.Object r2, $r5;
        java.lang.reflect.Method r6;

        r1 := @this: com.google.inject.internal.InterceptorStackCallback;

        r2 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.reflect.Method;

        r4 := @parameter2: java.lang.Object[];

        r3 := @parameter3: com.google.inject.internal.cglib.proxy.$MethodProxy;

        $r0 = new com.google.inject.internal.InterceptorStackCallback$InterceptedMethodInvocation;

        specialinvoke $r0.<com.google.inject.internal.InterceptorStackCallback$InterceptedMethodInvocation: void <init>(com.google.inject.internal.InterceptorStackCallback,java.lang.Object,com.google.inject.internal.cglib.proxy.$MethodProxy,java.lang.Object[])>(r1, r2, r3, r4);

        $r5 = virtualinvoke $r0.<com.google.inject.internal.InterceptorStackCallback$InterceptedMethodInvocation: java.lang.Object proceed()>();

        return $r5;
    }

    private void pruneStacktrace(java.lang.Throwable)
    {
        java.lang.Throwable r0, r10;
        java.lang.Object[] $r4;
        com.google.inject.internal.InterceptorStackCallback r9;
        java.util.ArrayList $r2;
        int i0, $i1, i2;
        java.lang.StackTraceElement r6;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.util.Set $r8;
        java.lang.StackTraceElement[] $r1, $r3, $r5;

        r9 := @this: com.google.inject.internal.InterceptorStackCallback;

        r0 := @parameter0: java.lang.Throwable;

        r10 = r0;

     label1:
        if r10 == null goto label5;

        $r1 = virtualinvoke r10.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        i0 = lengthof $r1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r6 = $r1[i2];

        $r7 = virtualinvoke r6.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r8 = <com.google.inject.internal.InterceptorStackCallback: java.util.Set AOP_INTERNAL_CLASSES>;

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("$EnhancerByGuice$");

        if $z1 != 0 goto label3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r6);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (java.lang.StackTraceElement)[$i1];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.StackTraceElement[]) $r4;

        virtualinvoke r10.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r5);

        r10 = virtualinvoke r10.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label5:
        return;
    }

    static void access$000(com.google.inject.internal.InterceptorStackCallback, java.lang.Throwable)
    {
        java.lang.Throwable r1;
        com.google.inject.internal.InterceptorStackCallback r0;

        r0 := @parameter0: com.google.inject.internal.InterceptorStackCallback;

        r1 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<com.google.inject.internal.InterceptorStackCallback: void pruneStacktrace(java.lang.Throwable)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1;
        java.util.HashSet $r0;
        java.util.List $r8;
        java.lang.Class $r2, $r4, $r6;
        java.lang.String $r3, $r5, $r7;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.String)[3];

        $r2 = class "Lcom/google/inject/internal/InterceptorStackCallback;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1[0] = $r3;

        $r4 = class "Lcom/google/inject/internal/InterceptorStackCallback$InterceptedMethodInvocation;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r1[1] = $r5;

        $r6 = class "Lcom/google/inject/internal/cglib/proxy/$MethodProxy;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r1[2] = $r7;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r8);

        <com.google.inject.internal.InterceptorStackCallback: java.util.Set AOP_INTERNAL_CLASSES> = $r0;

        return;
    }
}
