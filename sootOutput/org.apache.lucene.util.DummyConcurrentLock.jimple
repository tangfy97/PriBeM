public final class org.apache.lucene.util.DummyConcurrentLock extends java.lang.Object implements java.util.concurrent.locks.Lock
{
    public static final org.apache.lucene.util.DummyConcurrentLock INSTANCE;

    public void <init>()
    {
        org.apache.lucene.util.DummyConcurrentLock r0;

        r0 := @this: org.apache.lucene.util.DummyConcurrentLock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void lock()
    {
        org.apache.lucene.util.DummyConcurrentLock r0;

        r0 := @this: org.apache.lucene.util.DummyConcurrentLock;

        return;
    }

    public void lockInterruptibly()
    {
        org.apache.lucene.util.DummyConcurrentLock r0;

        r0 := @this: org.apache.lucene.util.DummyConcurrentLock;

        return;
    }

    public boolean tryLock()
    {
        org.apache.lucene.util.DummyConcurrentLock r0;

        r0 := @this: org.apache.lucene.util.DummyConcurrentLock;

        return 1;
    }

    public boolean tryLock(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r1;
        org.apache.lucene.util.DummyConcurrentLock r0;
        long l0;

        r0 := @this: org.apache.lucene.util.DummyConcurrentLock;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        return 1;
    }

    public void unlock()
    {
        org.apache.lucene.util.DummyConcurrentLock r0;

        r0 := @this: org.apache.lucene.util.DummyConcurrentLock;

        return;
    }

    public java.util.concurrent.locks.Condition newCondition()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.util.DummyConcurrentLock r1;

        r1 := @this: org.apache.lucene.util.DummyConcurrentLock;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static void <clinit>()
    {
        org.apache.lucene.util.DummyConcurrentLock $r0;

        $r0 = new org.apache.lucene.util.DummyConcurrentLock;

        specialinvoke $r0.<org.apache.lucene.util.DummyConcurrentLock: void <init>()>();

        <org.apache.lucene.util.DummyConcurrentLock: org.apache.lucene.util.DummyConcurrentLock INSTANCE> = $r0;

        return;
    }
}
