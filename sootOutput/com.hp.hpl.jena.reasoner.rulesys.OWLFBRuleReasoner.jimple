public class com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner extends com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner
{
    protected static final java.lang.String RULE_FILE;
    protected static java.util.List ruleSet;
    protected static com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph staticPreload;
    protected static org.slf4j.Logger logger;

    public void <init>(com.hp.hpl.jena.reasoner.ReasonerFactory)
    {
        java.util.List $r1;
        com.hp.hpl.jena.reasoner.ReasonerFactory r2;
        com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        r2 := @parameter0: com.hp.hpl.jena.reasoner.ReasonerFactory;

        $r1 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List loadRules()>();

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner: void <init>(java.util.List,com.hp.hpl.jena.reasoner.ReasonerFactory)>($r1, r2);

        return;
    }

    private void <init>(com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner, com.hp.hpl.jena.reasoner.InfGraph)
    {
        java.util.List $r4;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r3;
        com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner r0, r1;
        com.hp.hpl.jena.reasoner.InfGraph r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.InfGraph;

        $r4 = r1.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List rules>;

        $r3 = r1.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory>;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner: void <init>(java.util.List,com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.reasoner.ReasonerFactory)>($r4, r2, $r3);

        return;
    }

    public static java.util.List loadRules()
    {
        java.util.List $r0, $r1, $r2;

        $r0 = <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List ruleSet>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List loadRules(java.lang.String)>("etc/owl-fb.rules");

        <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List ruleSet> = $r2;

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List ruleSet>;

        return $r1;
    }

    public com.hp.hpl.jena.reasoner.Reasoner bindSchema(com.hp.hpl.jena.graph.Graph) throws com.hp.hpl.jena.reasoner.ReasonerException
    {
        com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph $r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook $r6;
        com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner r0, $r7;
        com.hp.hpl.jena.reasoner.InfGraph $r5;
        java.util.List $r4;
        com.hp.hpl.jena.reasoner.ReasonerException $r8;
        com.hp.hpl.jena.graph.Graph r1, $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: void checkArgGraph(com.hp.hpl.jena.graph.Graph)>(r1);

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.graph.Graph schemaGraph>;

        if $r2 == null goto label1;

        $r8 = new com.hp.hpl.jena.reasoner.ReasonerException;

        specialinvoke $r8.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>("Can only bind one schema at a time to an OWLRuleReasoner");

        throw $r8;

     label1:
        $r3 = new com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph;

        $r4 = r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List rules>;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.reasoner.InfGraph getPreload()>();

        specialinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void <init>(com.hp.hpl.jena.reasoner.Reasoner,java.util.List,com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>(r0, $r4, $r5, r1);

        $r6 = new com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook;

        specialinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook: void <init>()>();

        virtualinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void addPreprocessingHook(com.hp.hpl.jena.reasoner.rulesys.RulePreprocessHook)>($r6);

        virtualinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void prepare()>();

        $r7 = new com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        specialinvoke $r7.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: void <init>(com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner,com.hp.hpl.jena.reasoner.InfGraph)>(r0, $r3);

        return $r7;
    }

    public com.hp.hpl.jena.reasoner.InfGraph bind(com.hp.hpl.jena.graph.Graph) throws com.hp.hpl.jena.reasoner.ReasonerException
    {
        com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph $r4, $r6;
        com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook $r7;
        com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner r0;
        com.hp.hpl.jena.reasoner.InfGraph $r8;
        java.util.List $r5;
        com.hp.hpl.jena.graph.Graph r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: void checkArgGraph(com.hp.hpl.jena.graph.Graph)>(r1);

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.graph.Graph schemaGraph>;

        if $r2 != null goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.reasoner.InfGraph getPreload()>();

        goto label2;

     label1:
        $r3 = r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.graph.Graph schemaGraph>;

        $r8 = (com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph) $r3;

     label2:
        $r4 = (com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph) $r8;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: java.util.List getRules()>();

        $r6 = new com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph;

        specialinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void <init>(com.hp.hpl.jena.reasoner.Reasoner,java.util.List,com.hp.hpl.jena.graph.Graph)>(r0, $r5, $r8);

        $r7 = new com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook;

        specialinvoke $r7.<com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook: void <init>()>();

        virtualinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void addPreprocessingHook(com.hp.hpl.jena.reasoner.rulesys.RulePreprocessHook)>($r7);

        $z0 = r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: boolean recordDerivations>;

        virtualinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void setDerivationLogging(boolean)>($z0);

        $z1 = r0.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: boolean traceOn>;

        virtualinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void setTraceOn(boolean)>($z1);

        virtualinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void rebind(com.hp.hpl.jena.graph.Graph)>(r1);

        virtualinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void setDatatypeRangeValidation(boolean)>(1);

        return $r6;
    }

    public synchronized com.hp.hpl.jena.reasoner.InfGraph getPreload()
    {
        java.lang.Throwable $r6, $r7;
        com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph $r0, $r1, $r2, $r5;
        com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner r3;
        java.util.List $r4;
        boolean z0;

        r3 := @this: com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        entermonitor class "Lcom/hp/hpl/jena/reasoner/rulesys/OWLFBRuleReasoner;";

     label1:
        $r0 = <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph staticPreload>;

        if $r0 != null goto label6;

        z0 = <com.hp.hpl.jena.shared.impl.JenaParameters: boolean enableFilteringOfHiddenInfNodes>;

     label2:
        <com.hp.hpl.jena.shared.impl.JenaParameters: boolean enableFilteringOfHiddenInfNodes> = 1;

        $r2 = new com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph;

        $r4 = r3.<com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.util.List rules>;

        specialinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void <init>(com.hp.hpl.jena.reasoner.Reasoner,java.util.List,com.hp.hpl.jena.graph.Graph)>(r3, $r4, null);

        <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph staticPreload> = $r2;

        $r5 = <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph staticPreload>;

        virtualinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph: void prepare()>();

     label3:
        <com.hp.hpl.jena.shared.impl.JenaParameters: boolean enableFilteringOfHiddenInfNodes> = z0;

        goto label6;

     label4:
        $r7 := @caughtexception;

     label5:
        <com.hp.hpl.jena.shared.impl.JenaParameters: boolean enableFilteringOfHiddenInfNodes> = z0;

        throw $r7;

     label6:
        $r1 = <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph staticPreload>;

        exitmonitor class "Lcom/hp/hpl/jena/reasoner/rulesys/OWLFBRuleReasoner;";

     label7:
        return $r1;

     label8:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/hp/hpl/jena/reasoner/rulesys/OWLFBRuleReasoner;";

     label9:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    private void checkArgGraph(com.hp.hpl.jena.graph.Graph)
    {
        org.slf4j.Logger $r3;
        com.hp.hpl.jena.reasoner.Reasoner $r2;
        com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner r4;
        com.hp.hpl.jena.reasoner.InfGraph $r1;
        com.hp.hpl.jena.graph.Graph r0;
        boolean $z0, $z1, $z2;

        r4 := @this: com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $z0 = <com.hp.hpl.jena.shared.impl.JenaParameters: boolean enableOWLRuleOverOWLRuleWarnings>;

        if $z0 == 0 goto label1;

        $z1 = r0 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z1 == 0 goto label1;

        $r1 = (com.hp.hpl.jena.reasoner.InfGraph) r0;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        $z2 = $r2 instanceof com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner;

        if $z2 == 0 goto label1;

        $r3 = <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: org.slf4j.Logger logger>;

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Creating OWL rule reasoner working over another OWL rule reasoner");

     label1:
        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: java.lang.String RULE_FILE> = "etc/owl-fb.rules";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/reasoner/rulesys/OWLFBRuleReasoner;");

        <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner: org.slf4j.Logger logger> = $r0;

        return;
    }
}
