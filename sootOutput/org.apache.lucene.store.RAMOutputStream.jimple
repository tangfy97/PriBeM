public class org.apache.lucene.store.RAMOutputStream extends org.apache.lucene.store.IndexOutput
{
    static final int BUFFER_SIZE;
    private org.apache.lucene.store.RAMFile file;
    private byte[] currentBuffer;
    private int currentBufferIndex;
    private int bufferPosition;
    private long bufferStart;
    private int bufferLength;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.store.RAMOutputStream r0;
        org.apache.lucene.store.RAMFile $r1;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        $r1 = new org.apache.lucene.store.RAMFile;

        specialinvoke $r1.<org.apache.lucene.store.RAMFile: void <init>()>();

        specialinvoke r0.<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)>($r1);

        return;
    }

    public void <init>(org.apache.lucene.store.RAMFile)
    {
        int $i1;
        org.apache.lucene.store.RAMOutputStream r0;
        org.apache.lucene.store.RAMFile r1;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        r1 := @parameter0: org.apache.lucene.store.RAMFile;

        specialinvoke r0.<org.apache.lucene.store.IndexOutput: void <init>()>();

        r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file> = r1;

        $i1 = (int) -1;

        r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex> = $i1;

        r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer> = null;

        return;
    }

    public void writeTo(org.apache.lucene.store.IndexOutput) throws java.io.IOException
    {
        byte[] $r4;
        long l0, $l2, l3, $l6, l7;
        org.apache.lucene.store.RAMFile $r1, $r3;
        byte $b1, $b4;
        int $i5, i8, i9, $i10, $i11;
        org.apache.lucene.store.IndexOutput r2;
        org.apache.lucene.store.RAMOutputStream r0;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        r2 := @parameter0: org.apache.lucene.store.IndexOutput;

        virtualinvoke r0.<org.apache.lucene.store.RAMOutputStream: void flush()>();

        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        l0 = $r1.<org.apache.lucene.store.RAMFile: long length>;

        l7 = 0L;

        i8 = 0;

     label1:
        $b1 = l7 cmp l0;

        $i10 = (int) $b1;

        if $i10 >= 0 goto label3;

        i9 = 1024;

        $l2 = (long) 1024;

        l3 = l7 + $l2;

        $b4 = l3 cmp l0;

        $i11 = (int) $b4;

        if $i11 <= 0 goto label2;

        $l6 = l0 - l7;

        i9 = (int) $l6;

     label2:
        $r3 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $i5 = i8;

        i8 = i8 + 1;

        $r4 = virtualinvoke $r3.<org.apache.lucene.store.RAMFile: byte[] getBuffer(int)>($i5);

        virtualinvoke r2.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int)>($r4, i9);

        l7 = l3;

        goto label1;

     label3:
        return;
    }

    public void writeTo(byte[], int) throws java.io.IOException
    {
        byte[] $r3, r4;
        long l0, $l3, l4, $l7, l8;
        org.apache.lucene.store.RAMFile $r1, $r2;
        byte $b2, $b5;
        int i1, $i6, i9, i10, i11, $i12, $i13;
        org.apache.lucene.store.RAMOutputStream r0;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        r4 := @parameter0: byte[];

        i1 := @parameter1: int;

        virtualinvoke r0.<org.apache.lucene.store.RAMOutputStream: void flush()>();

        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        l0 = $r1.<org.apache.lucene.store.RAMFile: long length>;

        l8 = 0L;

        i9 = 0;

        i10 = i1;

     label1:
        $b2 = l8 cmp l0;

        $i12 = (int) $b2;

        if $i12 >= 0 goto label3;

        i11 = 1024;

        $l3 = (long) 1024;

        l4 = l8 + $l3;

        $b5 = l4 cmp l0;

        $i13 = (int) $b5;

        if $i13 <= 0 goto label2;

        $l7 = l0 - l8;

        i11 = (int) $l7;

     label2:
        $r2 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $i6 = i9;

        i9 = i9 + 1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.store.RAMFile: byte[] getBuffer(int)>($i6);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r4, i10, i11);

        i10 = i10 + i11;

        l8 = l4;

        goto label1;

     label3:
        return;
    }

    public void reset()
    {
        int $i1;
        org.apache.lucene.store.RAMOutputStream r0;
        org.apache.lucene.store.RAMFile $r1;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer> = null;

        $i1 = (int) -1;

        r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex> = $i1;

        r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition> = 0;

        r0.<org.apache.lucene.store.RAMOutputStream: long bufferStart> = 0L;

        r0.<org.apache.lucene.store.RAMOutputStream: int bufferLength> = 0;

        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        virtualinvoke $r1.<org.apache.lucene.store.RAMFile: void setLength(long)>(0L);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.store.RAMOutputStream r0;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        virtualinvoke r0.<org.apache.lucene.store.RAMOutputStream: void flush()>();

        return;
    }

    public void seek(long) throws java.io.IOException
    {
        long l0, $l1, $l3, $l6, $l7, $l8, $l10;
        org.apache.lucene.store.RAMOutputStream r0;
        byte $b2, $b9;
        int $i4, $i5, $i11, $i12, $i13;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.lucene.store.RAMOutputStream: void setFileLength()>();

        $l1 = r0.<org.apache.lucene.store.RAMOutputStream: long bufferStart>;

        $b2 = l0 cmp $l1;

        $i12 = (int) $b2;

        if $i12 < 0 goto label1;

        $l7 = r0.<org.apache.lucene.store.RAMOutputStream: long bufferStart>;

        $i5 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferLength>;

        $l6 = (long) $i5;

        $l8 = $l7 + $l6;

        $b9 = l0 cmp $l8;

        $i13 = (int) $b9;

        if $i13 < 0 goto label2;

     label1:
        $l3 = l0 / 1024L;

        $i4 = (int) $l3;

        r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex> = $i4;

        specialinvoke r0.<org.apache.lucene.store.RAMOutputStream: void switchCurrentBuffer()>();

     label2:
        $l10 = l0 % 1024L;

        $i11 = (int) $l10;

        r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition> = $i11;

        return;
    }

    public long length()
    {
        org.apache.lucene.store.RAMOutputStream r0;
        long $l0;
        org.apache.lucene.store.RAMFile $r1;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $l0 = $r1.<org.apache.lucene.store.RAMFile: long length>;

        return $l0;
    }

    public void writeByte(byte) throws java.io.IOException
    {
        byte[] $r1;
        org.apache.lucene.store.RAMOutputStream r0;
        byte b4;
        int $i0, $i1, $i2, $i3, $i5, $i6;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        b4 := @parameter0: byte;

        $i1 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        $i0 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferLength>;

        if $i1 != $i0 goto label1;

        $i5 = r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex> = $i6;

        specialinvoke r0.<org.apache.lucene.store.RAMOutputStream: void switchCurrentBuffer()>();

     label1:
        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer>;

        $i2 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition> = $i3;

        $r1[$i2] = b4;

        return;
    }

    public void writeBytes(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1, r2, $r3;
        java.lang.AssertionError $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12;
        boolean $z0;
        org.apache.lucene.store.RAMOutputStream r0;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        r2 := @parameter0: byte[];

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        $z0 = <org.apache.lucene.store.RAMOutputStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        if i11 <= 0 goto label5;

        $i1 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        $i0 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferLength>;

        if $i1 != $i0 goto label2;

        $i7 = r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex>;

        $i8 = $i7 + 1;

        r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex> = $i8;

        specialinvoke r0.<org.apache.lucene.store.RAMOutputStream: void switchCurrentBuffer()>();

     label2:
        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer>;

        $i3 = lengthof $r1;

        $i2 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        $i9 = $i3 - $i2;

        if i11 >= $i9 goto label3;

        $i12 = i11;

        goto label4;

     label3:
        $i12 = $i9;

     label4:
        $r3 = r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer>;

        $i4 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i10, $r3, $i4, $i12);

        i10 = i10 + $i12;

        i11 = i11 - $i12;

        $i5 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        $i6 = $i5 + $i12;

        r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition> = $i6;

        goto label1;

     label5:
        return;
    }

    private final void switchCurrentBuffer()
    {
        byte[] $r3, $r4, $r6;
        long $l4, $l5;
        org.apache.lucene.store.RAMOutputStream r0;
        org.apache.lucene.store.RAMFile $r1, $r2, $r5;
        int $i0, $i1, $i2, $i3, $i6;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        $i0 = r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex>;

        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.store.RAMFile: int numBuffers()>();

        if $i0 != $i1 goto label1;

        $r5 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.store.RAMFile: byte[] addBuffer(int)>(1024);

        r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer> = $r6;

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $i2 = r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.store.RAMFile: byte[] getBuffer(int)>($i2);

        r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer> = $r3;

     label2:
        r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition> = 0;

        $i3 = r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex>;

        $l4 = (long) $i3;

        $l5 = 1024L * $l4;

        r0.<org.apache.lucene.store.RAMOutputStream: long bufferStart> = $l5;

        $r4 = r0.<org.apache.lucene.store.RAMOutputStream: byte[] currentBuffer>;

        $i6 = lengthof $r4;

        r0.<org.apache.lucene.store.RAMOutputStream: int bufferLength> = $i6;

        return;
    }

    private void setFileLength()
    {
        long $l1, $l2, l3, $l4;
        org.apache.lucene.store.RAMOutputStream r0;
        org.apache.lucene.store.RAMFile $r1, $r2;
        byte $b5;
        int $i0, $i6;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        $l2 = r0.<org.apache.lucene.store.RAMOutputStream: long bufferStart>;

        $i0 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        $l1 = (long) $i0;

        l3 = $l2 + $l1;

        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $l4 = $r1.<org.apache.lucene.store.RAMFile: long length>;

        $b5 = l3 cmp $l4;

        $i6 = (int) $b5;

        if $i6 <= 0 goto label1;

        $r2 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        virtualinvoke $r2.<org.apache.lucene.store.RAMFile: void setLength(long)>(l3);

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.lucene.store.RAMOutputStream r0;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        specialinvoke r0.<org.apache.lucene.store.RAMOutputStream: void setFileLength()>();

        return;
    }

    public long getFilePointer()
    {
        org.apache.lucene.store.RAMOutputStream r0;
        int $i0, $i1;
        long $l2, $l3, $l4;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        $i0 = r0.<org.apache.lucene.store.RAMOutputStream: int currentBufferIndex>;

        if $i0 >= 0 goto label1;

        $l4 = 0L;

        goto label2;

     label1:
        $l3 = r0.<org.apache.lucene.store.RAMOutputStream: long bufferStart>;

        $i1 = r0.<org.apache.lucene.store.RAMOutputStream: int bufferPosition>;

        $l2 = (long) $i1;

        $l4 = $l3 + $l2;

     label2:
        return $l4;
    }

    public long sizeInBytes()
    {
        org.apache.lucene.store.RAMOutputStream r0;
        org.apache.lucene.store.RAMFile $r1;
        int $i0;
        long $l1, $l2;

        r0 := @this: org.apache.lucene.store.RAMOutputStream;

        $r1 = r0.<org.apache.lucene.store.RAMOutputStream: org.apache.lucene.store.RAMFile file>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.store.RAMFile: int numBuffers()>();

        $l1 = (long) $i0;

        $l2 = $l1 * 1024L;

        return $l2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.store.RAMOutputStream: int BUFFER_SIZE> = 1024;

        $r0 = class "Lorg/apache/lucene/store/RAMOutputStream;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.RAMOutputStream: boolean $assertionsDisabled> = $z1;

        return;
    }
}
