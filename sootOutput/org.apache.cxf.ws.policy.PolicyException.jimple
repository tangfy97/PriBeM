public class org.apache.cxf.ws.policy.PolicyException extends org.apache.cxf.common.i18n.UncheckedException
{
    private static final java.util.ResourceBundle BUNDLE;

    public void <init>(org.apache.cxf.common.i18n.Message, java.lang.Throwable)
    {
        org.apache.cxf.ws.policy.PolicyException r0;
        java.lang.Throwable r2;
        org.apache.cxf.common.i18n.Message r1;

        r0 := @this: org.apache.cxf.ws.policy.PolicyException;

        r1 := @parameter0: org.apache.cxf.common.i18n.Message;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.apache.cxf.common.i18n.UncheckedException: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>(r1, r2);

        return;
    }

    public void <init>(org.apache.cxf.common.i18n.Message)
    {
        org.apache.cxf.ws.policy.PolicyException r0;
        org.apache.cxf.common.i18n.Message r1;

        r0 := @this: org.apache.cxf.ws.policy.PolicyException;

        r1 := @parameter0: org.apache.cxf.common.i18n.Message;

        specialinvoke r0.<org.apache.cxf.common.i18n.UncheckedException: void <init>(org.apache.cxf.common.i18n.Message)>(r1);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        org.apache.cxf.ws.policy.PolicyException r0;
        java.lang.Throwable r1;

        r0 := @this: org.apache.cxf.ws.policy.PolicyException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<org.apache.cxf.common.i18n.UncheckedException: void <init>(java.lang.Throwable)>(r1);

        return;
    }

    public void <init>(org.apache.cxf.ws.policy.AssertionInfo)
    {
        org.apache.cxf.ws.policy.PolicyException r0;
        java.lang.Object[] $r2;
        org.apache.cxf.ws.policy.AssertionInfo r3;
        org.apache.neethi.Assertion $r5;
        org.apache.cxf.common.i18n.Message $r1;
        java.util.ResourceBundle $r4;
        javax.xml.namespace.QName $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.cxf.ws.policy.PolicyException;

        r3 := @parameter0: org.apache.cxf.ws.policy.AssertionInfo;

        $r1 = new org.apache.cxf.common.i18n.Message;

        $r4 = <org.apache.cxf.ws.policy.PolicyException: java.util.ResourceBundle BUNDLE>;

        $r2 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r3.<org.apache.cxf.ws.policy.AssertionInfo: org.apache.neethi.Assertion getAssertion()>();

        $r6 = interfaceinvoke $r5.<org.apache.neethi.Assertion: javax.xml.namespace.QName getName()>();

        $r2[0] = $r6;

        $r7 = virtualinvoke r3.<org.apache.cxf.ws.policy.AssertionInfo: java.lang.String getErrorMessage()>();

        $r2[1] = $r7;

        specialinvoke $r1.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("ASSERTION_NOT_ASSERTED", $r4, $r2);

        specialinvoke r0.<org.apache.cxf.common.i18n.UncheckedException: void <init>(org.apache.cxf.common.i18n.Message)>($r1);

        return;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class,java.lang.String)>(class "Lorg/apache/cxf/ws/policy/PolicyException;", "APIMessages");

        <org.apache.cxf.ws.policy.PolicyException: java.util.ResourceBundle BUNDLE> = $r0;

        return;
    }
}
