public class org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream extends java.io.BufferedInputStream
{
    static final int BUFFER_SIZE;

    void <init>(java.io.InputStream)
    {
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r1, 8192);

        specialinvoke r0.<java.io.BufferedInputStream: void mark(int)>(8192);

        return;
    }

    void <init>(java.io.InputStream, int)
    {
        int i0;
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r1, i0);

        specialinvoke r0.<java.io.BufferedInputStream: void mark(int)>(i0);

        return;
    }

    public boolean markSupported()
    {
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r0;

        r0 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

        return 0;
    }

    public void mark(int)
    {
        int i0;
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r0;

        r0 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

        i0 := @parameter0: int;

        return;
    }

    public void reset() throws java.io.IOException
    {
        java.io.IOException $r0;
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r1;

        r1 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("Reset unsupported");

        throw $r0;
    }

    public void retry() throws java.io.IOException
    {
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r0;

        r0 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

        specialinvoke r0.<java.io.BufferedInputStream: void reset()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r0;

        r0 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

        return;
    }

    public void release()
    {
        java.io.IOException $r1;
        org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream r0;

        r0 := @this: org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream;

     label1:
        specialinvoke r0.<java.io.BufferedInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.batik.bridge.SVGImageElementBridge$ProtectedStream: int BUFFER_SIZE> = 8192;

        return;
    }
}
