public class org.codehaus.groovy.ast.stmt.TryCatchStatement extends org.codehaus.groovy.ast.stmt.Statement
{
    private org.codehaus.groovy.ast.stmt.Statement tryStatement;
    private java.util.List catchStatements;
    private org.codehaus.groovy.ast.stmt.Statement finallyStatement;

    public void <init>(org.codehaus.groovy.ast.stmt.Statement, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r2, r3;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r0;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        r2 := @parameter0: org.codehaus.groovy.ast.stmt.Statement;

        r3 := @parameter1: org.codehaus.groovy.ast.stmt.Statement;

        specialinvoke r0.<org.codehaus.groovy.ast.stmt.Statement: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: java.util.List catchStatements> = $r1;

        r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: org.codehaus.groovy.ast.stmt.Statement tryStatement> = r2;

        r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: org.codehaus.groovy.ast.stmt.Statement finallyStatement> = r3;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r1;

        r1 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>(r1);

        return;
    }

    public java.util.List getCatchStatements()
    {
        java.util.List $r1;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: java.util.List catchStatements>;

        return $r1;
    }

    public org.codehaus.groovy.ast.stmt.Statement getFinallyStatement()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: org.codehaus.groovy.ast.stmt.Statement finallyStatement>;

        return $r1;
    }

    public org.codehaus.groovy.ast.stmt.Statement getTryStatement()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: org.codehaus.groovy.ast.stmt.Statement tryStatement>;

        return $r1;
    }

    public void addCatch(org.codehaus.groovy.ast.stmt.CatchStatement)
    {
        java.util.List $r2;
        org.codehaus.groovy.ast.stmt.CatchStatement r1;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.stmt.CatchStatement;

        $r2 = r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: java.util.List catchStatements>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.stmt.CatchStatement getCatchStatement(int)
    {
        java.util.List $r1, $r2;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r0;
        int i0, $i1;
        java.lang.Object $r3;
        org.codehaus.groovy.ast.stmt.CatchStatement $r4;

        r0 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: java.util.List catchStatements>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: java.util.List catchStatements>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.codehaus.groovy.ast.stmt.CatchStatement) $r3;

        return $r4;

     label1:
        return null;
    }

    public void setFinallyStatement(org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r1;
        org.codehaus.groovy.ast.stmt.TryCatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.TryCatchStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.stmt.Statement;

        r0.<org.codehaus.groovy.ast.stmt.TryCatchStatement: org.codehaus.groovy.ast.stmt.Statement finallyStatement> = r1;

        return;
    }
}
