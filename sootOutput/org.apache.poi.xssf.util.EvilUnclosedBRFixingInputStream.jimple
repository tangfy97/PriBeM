public class org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream extends java.io.InputStream
{
    private java.io.InputStream source;
    private byte[] spare;
    private static byte[] detect;

    public void <init>(java.io.InputStream)
    {
        org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: java.io.InputStream source> = r1;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream r0;
        int $i0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream;

        $r1 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: java.io.InputStream source>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i8;
        java.io.InputStream $r2;

        r0 := @this: org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: int readFromSpare(byte[],int,int)>(r1, i0, i1);

        $r2 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: java.io.InputStream source>;

        $i4 = i0 + $i2;

        $i3 = i1 - $i2;

        $i5 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, $i4, $i3);

        $i8 = (int) -1;

        if $i5 == $i8 goto label1;

        if $i5 != 0 goto label2;

     label1:
        i6 = $i2;

        goto label3;

     label2:
        i6 = $i2 + $i5;

     label3:
        if i6 <= 0 goto label4;

        i6 = specialinvoke r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: int fixUp(byte[],int,int)>(r1, i0, i6);

     label4:
        return i6;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    private int readFromSpare(byte[], int, int)
    {
        byte[] $r1, $r2, $r3, r4, $r5, $r6, $r7, $r8, $r9, r11;
        org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream r0;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, i7;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream;

        r4 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        if $r1 != null goto label1;

        return 0;

     label1:
        if i0 != 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to read 0 bytes");

        throw $r10;

     label2:
        $r2 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i1 = lengthof $r2;

        if $i1 > i0 goto label3;

        $r8 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $r7 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i6 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r4, i4, $i6);

        $r9 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        i7 = lengthof $r9;

        r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare> = null;

        return i7;

     label3:
        $r3 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i2 = lengthof $r3;

        $i3 = $i2 - i0;

        r11 = newarray (byte)[$i3];

        $r5 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, i4, i0);

        $r6 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i5 = lengthof r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i0, r11, 0, $i5);

        r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare> = r11;

        return i0;
    }

    private void addToSpare(byte[], int, int, boolean)
    {
        byte[] $r1, $r2, r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream r0;
        int i0, $i1, $i2, i3, $i4, $i5, $i6;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream;

        r4 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        if $r1 != null goto label1;

        $r10 = newarray (byte)[i0];

        r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare> = $r10;

        $r11 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i3, $r11, 0, i0);

        goto label4;

     label1:
        $r2 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i1 = lengthof $r2;

        $i2 = $i1 + i0;

        r3 = newarray (byte)[$i2];

        if z0 == 0 goto label2;

        $r8 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $r7 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i5 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r3, 0, $i5);

        $r9 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i6 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i3, r3, $i6, i0);

        goto label3;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i3, r3, 0, i0);

        $r6 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $r5 = r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare>;

        $i4 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, i0, $i4);

     label3:
        r0.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] spare> = r3;

     label4:
        return;
    }

    private int fixUp(byte[], int, int)
    {
        byte[] $r0, r2, $r9, $r10, $r12, $r13, $r14, r15;
        java.lang.Integer $r4, $r8, $r11;
        byte $b29, $b30, $b35, $b36;
        java.util.ArrayList $r16;
        org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream r6;
        boolean $z0, z1, z2, z3, z4, z5, z6;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i31, $i32, $i33, $i34, i37, i38, i39, i40, i41, i42, $i43, $i44, $i45, i46, i47, i48, i49, $i50, i51, $i52, $i53, $i55, $i56, $i57, $i59;
        java.util.Iterator $r5;
        java.lang.Object $r3, $r7;

        r6 := @this: org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream;

        r2 := @parameter0: byte[];

        i2 := @parameter1: int;

        i37 := @parameter2: int;

        i38 = 0;

     label01:
        $r0 = <org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] detect>;

        $i0 = lengthof $r0;

        $i1 = $i0 - 1;

        if i38 >= $i1 goto label08;

        $i31 = i2 + i37;

        $i32 = $i31 - 1;

        i39 = $i32 - i38;

        if i39 >= 0 goto label02;

        goto label07;

     label02:
        z1 = 1;

        z4 = 1;

        z3 = 1;

        i40 = 0;

     label03:
        if i40 > i38 goto label06;

        if z3 == 0 goto label06;

        $i34 = i39 + i40;

        $b36 = r2[$i34];

        $r13 = <org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] detect>;

        $b35 = $r13[i40];

        $i52 = (int) $b36;

        $i53 = (int) $b35;

        if $i52 != $i53 goto label04;

        goto label05;

     label04:
        z1 = 0;

        z4 = 0;

        z3 = 0;

     label05:
        i40 = i40 + 1;

        goto label03;

     label06:
        if z4 == 0 goto label07;

        $i33 = i38 + 1;

        specialinvoke r6.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: void addToSpare(byte[],int,int,boolean)>(r2, i39, $i33, 1);

        $i55 = (int) -1;

        i41 = i37 + $i55;

        i37 = i41 - i38;

        goto label08;

     label07:
        i38 = i38 + 1;

        goto label01;

     label08:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        i42 = i2;

     label09:
        $i43 = i2 + i37;

        $r14 = <org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] detect>;

        $i44 = lengthof $r14;

        $i45 = $i43 - $i44;

        if i42 > $i45 goto label14;

        z2 = 1;

        z6 = 1;

        z5 = 1;

        i46 = 0;

     label10:
        $r10 = <org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] detect>;

        $i27 = lengthof $r10;

        if i46 >= $i27 goto label12;

        if z6 == 0 goto label12;

        $i28 = i42 + i46;

        $b30 = r2[$i28];

        $r12 = <org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] detect>;

        $b29 = $r12[i46];

        $i56 = (int) $b30;

        $i57 = (int) $b29;

        if $i56 == $i57 goto label11;

        z2 = 0;

        z6 = 0;

        z5 = 0;

     label11:
        i46 = i46 + 1;

        goto label10;

     label12:
        if z5 == 0 goto label13;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i42);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label13:
        i42 = i42 + 1;

        goto label09;

     label14:
        $i3 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label15;

        return i37;

     label15:
        $i4 = i2 + i37;

        $i5 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        i47 = $i4 + $i5;

        $i6 = lengthof r2;

        i48 = i47 - $i6;

        if i48 <= 0 goto label19;

        i49 = 0;

        $r5 = virtualinvoke $r16.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Integer) $r7;

        $i19 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i21 = i2 + i37;

        $r9 = <org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] detect>;

        $i20 = lengthof $r9;

        $i22 = $i21 - $i20;

        $i23 = $i22 - i48;

        $i24 = $i23 - i49;

        if $i19 <= $i24 goto label17;

        $i25 = i47 - $i19;

        $i26 = $i25 - 1;

        i48 = $i26 - i49;

        goto label18;

     label17:
        i49 = i49 + 1;

        goto label16;

     label18:
        $i17 = i2 + i37;

        $i18 = $i17 - i48;

        specialinvoke r6.<org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: void addToSpare(byte[],int,int,boolean)>(r2, $i18, i48, 0);

        i37 = i37 - i48;

     label19:
        $i50 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        i51 = $i50 - 1;

     label20:
        if i51 < 0 goto label24;

        $r3 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i51);

        $r4 = (java.lang.Integer) $r3;

        $i7 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i8 = i37 + i2;

        if $i7 < $i8 goto label21;

        goto label23;

     label21:
        $i9 = i37 - 3;

        if $i7 <= $i9 goto label22;

        goto label23;

     label22:
        $i10 = i37 - $i7;

        $i11 = $i10 - 3;

        r15 = newarray (byte)[$i11];

        $i13 = $i7 + 3;

        $i12 = lengthof r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i13, r15, 0, $i12);

        $i14 = $i7 + 3;

        r2[$i14] = 47;

        $i16 = $i7 + 4;

        $i15 = lengthof r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r15, 0, r2, $i16, $i15);

        i37 = i37 + 1;

     label23:
        $i59 = (int) -1;

        i51 = i51 + $i59;

        goto label20;

     label24:
        return i37;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 60;

        $r0[1] = 98;

        $r0[2] = 114;

        $r0[3] = 62;

        <org.apache.poi.xssf.util.EvilUnclosedBRFixingInputStream: byte[] detect> = $r0;

        return;
    }
}
