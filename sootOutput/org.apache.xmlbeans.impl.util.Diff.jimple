public class org.apache.xmlbeans.impl.util.Diff extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.util.Diff r0;

        r0 := @this: org.apache.xmlbeans.impl.util.Diff;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void readersAsText(java.io.Reader, java.lang.String, java.io.Reader, java.lang.String, java.util.List) throws java.io.IOException
    {
        boolean $z0;
        java.io.LineNumberReader $r0, $r2;
        java.io.Reader r1, r3;
        java.util.List r4;
        java.lang.StringBuffer $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        int $i0, $i1, $i2;
        java.lang.String r7, $r13, r16, $r22, $r35, r36, r37;

        r1 := @parameter0: java.io.Reader;

        r7 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.Reader;

        r16 := @parameter3: java.lang.String;

        r4 := @parameter4: java.util.List;

        $r0 = new java.io.LineNumberReader;

        specialinvoke $r0.<java.io.LineNumberReader: void <init>(java.io.Reader)>(r1);

        $r2 = new java.io.LineNumberReader;

        specialinvoke $r2.<java.io.LineNumberReader: void <init>(java.io.Reader)>(r3);

        r36 = virtualinvoke $r0.<java.io.LineNumberReader: java.lang.String readLine()>();

        r37 = virtualinvoke $r2.<java.io.LineNumberReader: java.lang.String readLine()>();

     label1:
        if r36 == null goto label3;

        if r37 == null goto label3;

        $z0 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>(r37);

        if $z0 != 0 goto label2;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File \"");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" and file \"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" differ at line ");

        $i2 = virtualinvoke $r0.<java.io.LineNumberReader: int getLineNumber()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r36);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n========\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r37);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r35);

        goto label3;

     label2:
        r36 = virtualinvoke $r0.<java.io.LineNumberReader: java.lang.String readLine()>();

        r37 = virtualinvoke $r2.<java.io.LineNumberReader: java.lang.String readLine()>();

        goto label1;

     label3:
        if r36 != null goto label4;

        if r37 == null goto label4;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File \"");

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" has extra lines at line ");

        $i1 = virtualinvoke $r2.<java.io.LineNumberReader: int getLineNumber()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":\n");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r37);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r22);

     label4:
        if r36 == null goto label5;

        if r37 != null goto label5;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File \"");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" has extra lines at line ");

        $i0 = virtualinvoke $r0.<java.io.LineNumberReader: int getLineNumber()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r36);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r13);

     label5:
        return;
    }
}
