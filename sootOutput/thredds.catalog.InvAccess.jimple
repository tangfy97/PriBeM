public abstract class thredds.catalog.InvAccess extends java.lang.Object
{
    protected thredds.catalog.InvDataset dataset;
    protected thredds.catalog.ServiceType type;
    protected thredds.catalog.DataFormatType dataFormat;
    protected thredds.catalog.InvService service;
    protected java.lang.String urlPath;
    protected double dataSize;

    public void <init>()
    {
        thredds.catalog.InvAccess r0;

        r0 := @this: thredds.catalog.InvAccess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.InvAccess: double dataSize> = #NaN;

        return;
    }

    public thredds.catalog.InvDataset getDataset()
    {
        thredds.catalog.InvAccess r0;
        thredds.catalog.InvDataset $r1;

        r0 := @this: thredds.catalog.InvAccess;

        $r1 = r0.<thredds.catalog.InvAccess: thredds.catalog.InvDataset dataset>;

        return $r1;
    }

    public thredds.catalog.InvService getService()
    {
        thredds.catalog.InvAccess r0;
        thredds.catalog.InvService $r1;

        r0 := @this: thredds.catalog.InvAccess;

        $r1 = r0.<thredds.catalog.InvAccess: thredds.catalog.InvService service>;

        return $r1;
    }

    public java.lang.String getUrlPath()
    {
        thredds.catalog.InvAccess r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog.InvAccess;

        $r1 = r0.<thredds.catalog.InvAccess: java.lang.String urlPath>;

        return $r1;
    }

    public thredds.catalog.DataFormatType getDataFormatType()
    {
        thredds.catalog.DataFormatType $r1, $r3;
        thredds.catalog.InvAccess r0;
        thredds.catalog.InvDataset $r2;

        r0 := @this: thredds.catalog.InvAccess;

        $r1 = r0.<thredds.catalog.InvAccess: thredds.catalog.DataFormatType dataFormat>;

        if $r1 == null goto label1;

        $r3 = r0.<thredds.catalog.InvAccess: thredds.catalog.DataFormatType dataFormat>;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.InvAccess: thredds.catalog.InvDataset dataset>;

        $r3 = virtualinvoke $r2.<thredds.catalog.InvDataset: thredds.catalog.DataFormatType getDataFormatType()>();

     label2:
        return $r3;
    }

    public double getDataSize()
    {
        thredds.catalog.InvAccess r0;
        double $d0;

        r0 := @this: thredds.catalog.InvAccess;

        $d0 = r0.<thredds.catalog.InvAccess: double dataSize>;

        return $d0;
    }

    public boolean hasDataSize()
    {
        byte $b0;
        thredds.catalog.InvAccess r0;
        double $d0, $d1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.InvAccess;

        $d0 = r0.<thredds.catalog.InvAccess: double dataSize>;

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $d1 = r0.<thredds.catalog.InvAccess: double dataSize>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String getStandardUrlName()
    {
        thredds.catalog.InvAccess r0;
        java.net.URI $r1;
        java.lang.String $r2, $r3;

        r0 := @this: thredds.catalog.InvAccess;

        $r1 = virtualinvoke r0.<thredds.catalog.InvAccess: java.net.URI getStandardUri()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>();

        $r3 = specialinvoke r0.<thredds.catalog.InvAccess: java.lang.String wrap(java.lang.String)>($r2);

        return $r3;
    }

    public java.net.URI getStandardUri()
    {
        java.io.PrintStream $r9;
        thredds.catalog.InvCatalog $r2;
        java.net.URISyntaxException $r7;
        thredds.catalog.InvAccess r0;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.lang.String $r3, $r6, $r11, $r13;
        java.net.URI $r4, $r5;
        thredds.catalog.InvDataset $r1;

        r0 := @this: thredds.catalog.InvAccess;

     label1:
        $r1 = r0.<thredds.catalog.InvAccess: thredds.catalog.InvDataset dataset>;

        $r2 = virtualinvoke $r1.<thredds.catalog.InvDataset: thredds.catalog.InvCatalog getParentCatalog()>();

        if $r2 != null goto label3;

        $r5 = new java.net.URI;

        $r6 = virtualinvoke r0.<thredds.catalog.InvAccess: java.lang.String getUnresolvedUrlName()>();

        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r6);

     label2:
        return $r5;

     label3:
        $r3 = virtualinvoke r0.<thredds.catalog.InvAccess: java.lang.String getUnresolvedUrlName()>();

        $r4 = virtualinvoke $r2.<thredds.catalog.InvCatalog: java.net.URI resolveUri(java.lang.String)>($r3);

     label4:
        return $r4;

     label5:
        $r7 := @caughtexception;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing URL= ");

        $r11 = virtualinvoke r0.<thredds.catalog.InvAccess: java.lang.String getUnresolvedUrlName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        return null;

        catch java.net.URISyntaxException from label1 to label2 with label5;
        catch java.net.URISyntaxException from label3 to label4 with label5;
    }

    public java.lang.String getUnresolvedUrlName()
    {
        thredds.catalog.InvService $r2, $r7;
        thredds.catalog.InvAccess r1;
        java.lang.StringBuilder $r0, $r4, $r6, $r9;
        java.lang.String $r3, $r5, $r8, $r10;

        r1 := @this: thredds.catalog.InvAccess;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<thredds.catalog.InvAccess: thredds.catalog.InvService service>;

        $r3 = virtualinvoke $r2.<thredds.catalog.InvService: java.lang.String getBase()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<thredds.catalog.InvAccess: java.lang.String getUrlPath()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = r1.<thredds.catalog.InvAccess: thredds.catalog.InvService service>;

        $r8 = virtualinvoke $r7.<thredds.catalog.InvService: java.lang.String getSuffix()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private java.lang.String wrap(java.lang.String)
    {
        thredds.catalog.InvAccess r0;
        thredds.catalog.ServiceType $r2, $r3, $r5, $r6;
        java.lang.String r7, $r11, $r15;
        thredds.catalog.InvService $r1, $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14;

        r0 := @this: thredds.catalog.InvAccess;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<thredds.catalog.InvAccess: thredds.catalog.InvService service>;

        $r2 = virtualinvoke $r1.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r3 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType THREDDS>;

        if $r2 != $r3 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thredds:");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label1:
        $r4 = r0.<thredds.catalog.InvAccess: thredds.catalog.InvService service>;

        $r5 = virtualinvoke $r4.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r6 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType CdmRemote>;

        if $r5 != $r6 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cdmremote:");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label2:
        return r7;
    }
}
