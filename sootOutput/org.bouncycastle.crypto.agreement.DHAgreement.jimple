public class org.bouncycastle.crypto.agreement.DHAgreement extends java.lang.Object
{
    private org.bouncycastle.crypto.params.DHPrivateKeyParameters key;
    private org.bouncycastle.crypto.params.DHParameters dhParams;
    private java.math.BigInteger privateValue;
    private java.security.SecureRandom random;

    public void <init>()
    {
        org.bouncycastle.crypto.agreement.DHAgreement r0;

        r0 := @this: org.bouncycastle.crypto.agreement.DHAgreement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.agreement.DHAgreement r1;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter r10;
        java.lang.IllegalArgumentException $r6;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r3, $r4;
        java.security.SecureRandom $r2, $r8;
        org.bouncycastle.crypto.params.ParametersWithRandom r7;
        org.bouncycastle.crypto.params.DHParameters $r5;
        org.bouncycastle.crypto.CipherParameters r0, $r9;
        boolean $z0, $z1;

        r1 := @this: org.bouncycastle.crypto.agreement.DHAgreement;

        r0 := @parameter0: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z0 == 0 goto label1;

        r7 = (org.bouncycastle.crypto.params.ParametersWithRandom) r0;

        $r8 = virtualinvoke r7.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r1.<org.bouncycastle.crypto.agreement.DHAgreement: java.security.SecureRandom random> = $r8;

        $r9 = virtualinvoke r7.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r10 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) $r9;

        goto label2;

     label1:
        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r1.<org.bouncycastle.crypto.agreement.DHAgreement: java.security.SecureRandom random> = $r2;

        r10 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) r0;

     label2:
        $z1 = r10 instanceof org.bouncycastle.crypto.params.DHPrivateKeyParameters;

        if $z1 != 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DHEngine expects DHPrivateKeyParameters");

        throw $r6;

     label3:
        $r3 = (org.bouncycastle.crypto.params.DHPrivateKeyParameters) r10;

        r1.<org.bouncycastle.crypto.agreement.DHAgreement: org.bouncycastle.crypto.params.DHPrivateKeyParameters key> = $r3;

        $r4 = r1.<org.bouncycastle.crypto.agreement.DHAgreement: org.bouncycastle.crypto.params.DHPrivateKeyParameters key>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.DHPrivateKeyParameters: org.bouncycastle.crypto.params.DHParameters getParameters()>();

        r1.<org.bouncycastle.crypto.agreement.DHAgreement: org.bouncycastle.crypto.params.DHParameters dhParams> = $r5;

        return;
    }

    public java.math.BigInteger calculateMessage()
    {
        org.bouncycastle.crypto.agreement.DHAgreement r2;
        org.bouncycastle.crypto.generators.DHKeyPairGenerator $r0;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r7;
        java.security.SecureRandom $r4;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r5;
        org.bouncycastle.crypto.params.DHKeyGenerationParameters $r1;
        java.math.BigInteger $r8, $r11;
        org.bouncycastle.crypto.params.DHParameters $r3;
        org.bouncycastle.crypto.CipherParameters $r6, $r9;
        org.bouncycastle.crypto.params.DHPublicKeyParameters $r10;

        r2 := @this: org.bouncycastle.crypto.agreement.DHAgreement;

        $r0 = new org.bouncycastle.crypto.generators.DHKeyPairGenerator;

        specialinvoke $r0.<org.bouncycastle.crypto.generators.DHKeyPairGenerator: void <init>()>();

        $r1 = new org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r4 = r2.<org.bouncycastle.crypto.agreement.DHAgreement: java.security.SecureRandom random>;

        $r3 = r2.<org.bouncycastle.crypto.agreement.DHAgreement: org.bouncycastle.crypto.params.DHParameters dhParams>;

        specialinvoke $r1.<org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters)>($r4, $r3);

        virtualinvoke $r0.<org.bouncycastle.crypto.generators.DHKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r1);

        $r5 = virtualinvoke $r0.<org.bouncycastle.crypto.generators.DHKeyPairGenerator: org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPrivate()>();

        $r7 = (org.bouncycastle.crypto.params.DHPrivateKeyParameters) $r6;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.DHPrivateKeyParameters: java.math.BigInteger getX()>();

        r2.<org.bouncycastle.crypto.agreement.DHAgreement: java.math.BigInteger privateValue> = $r8;

        $r9 = virtualinvoke $r5.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPublic()>();

        $r10 = (org.bouncycastle.crypto.params.DHPublicKeyParameters) $r9;

        $r11 = virtualinvoke $r10.<org.bouncycastle.crypto.params.DHPublicKeyParameters: java.math.BigInteger getY()>();

        return $r11;
    }

    public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.params.DHPublicKeyParameters, java.math.BigInteger)
    {
        org.bouncycastle.crypto.agreement.DHAgreement r2;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r7;
        java.math.BigInteger $r5, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.bouncycastle.crypto.params.DHPublicKeyParameters r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r15;
        org.bouncycastle.crypto.params.DHParameters $r1, $r3, $r4;

        r2 := @this: org.bouncycastle.crypto.agreement.DHAgreement;

        r0 := @parameter0: org.bouncycastle.crypto.params.DHPublicKeyParameters;

        r6 := @parameter1: java.math.BigInteger;

        $r1 = virtualinvoke r0.<org.bouncycastle.crypto.params.DHPublicKeyParameters: org.bouncycastle.crypto.params.DHParameters getParameters()>();

        $r3 = r2.<org.bouncycastle.crypto.agreement.DHAgreement: org.bouncycastle.crypto.params.DHParameters dhParams>;

        $z0 = virtualinvoke $r1.<org.bouncycastle.crypto.params.DHParameters: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Diffie-Hellman public key has wrong parameters.");

        throw $r15;

     label1:
        $r4 = r2.<org.bouncycastle.crypto.agreement.DHAgreement: org.bouncycastle.crypto.params.DHParameters dhParams>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $r7 = r2.<org.bouncycastle.crypto.agreement.DHAgreement: org.bouncycastle.crypto.params.DHPrivateKeyParameters key>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.DHPrivateKeyParameters: java.math.BigInteger getX()>();

        $r9 = virtualinvoke r6.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r8, $r5);

        $r10 = virtualinvoke r0.<org.bouncycastle.crypto.params.DHPublicKeyParameters: java.math.BigInteger getY()>();

        $r11 = r2.<org.bouncycastle.crypto.agreement.DHAgreement: java.math.BigInteger privateValue>;

        $r12 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r11, $r5);

        $r13 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r14 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r5);

        return $r14;
    }
}
