class org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator extends java.lang.Object implements org.apache.commons.collections.OrderedMapIterator, org.apache.commons.collections.ResettableIterator
{
    private final org.apache.commons.collections.map.ListOrderedMap parent;
    private java.util.ListIterator iterator;
    private java.lang.Object last;
    private boolean readable;

    void <init>(org.apache.commons.collections.map.ListOrderedMap)
    {
        java.util.List $r2;
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.util.ListIterator $r3;
        org.apache.commons.collections.map.ListOrderedMap r1;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        r1 := @parameter0: org.apache.commons.collections.map.ListOrderedMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last> = null;

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable> = 0;

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: org.apache.commons.collections.map.ListOrderedMap parent> = r1;

        $r2 = r1.<org.apache.commons.collections.map.ListOrderedMap: java.util.List insertOrder>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator()>();

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.util.ListIterator iterator> = $r3;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.util.ListIterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.util.ListIterator $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.util.ListIterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object next()>();

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last> = $r2;

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable> = 1;

        $r3 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last>;

        return $r3;
    }

    public boolean hasPrevious()
    {
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.util.ListIterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasPrevious()>();

        return $z0;
    }

    public java.lang.Object previous()
    {
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.util.ListIterator $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.util.ListIterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object previous()>();

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last> = $r2;

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable> = 1;

        $r3 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last>;

        return $r3;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r5;
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.util.ListIterator $r1;
        java.util.Map $r4;
        org.apache.commons.collections.map.ListOrderedMap $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $z0 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() can only be called once after next()");

        throw $r5;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.util.ListIterator iterator>;

        interfaceinvoke $r1.<java.util.ListIterator: void remove()>();

        $r2 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: org.apache.commons.collections.map.ListOrderedMap parent>;

        $r4 = $r2.<org.apache.commons.collections.map.ListOrderedMap: java.util.Map map>;

        $r3 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable> = 0;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.IllegalStateException $r2;
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $z0 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKey() can only be called after next() and before remove()");

        throw $r2;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        java.lang.IllegalStateException $r4;
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        org.apache.commons.collections.map.ListOrderedMap $r2;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $z0 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getValue() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: org.apache.commons.collections.map.ListOrderedMap parent>;

        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.map.ListOrderedMap: java.lang.Object get(java.lang.Object)>($r1);

        return $r3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.IllegalStateException $r6;
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        org.apache.commons.collections.map.ListOrderedMap $r1;
        java.util.Map $r4;
        java.lang.Object r2, $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        r2 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setValue() can only be called after next() and before remove()");

        throw $r6;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: org.apache.commons.collections.map.ListOrderedMap parent>;

        $r4 = $r1.<org.apache.commons.collections.map.ListOrderedMap: java.util.Map map>;

        $r3 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        return $r5;
    }

    public void reset()
    {
        java.util.List $r2;
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.util.ListIterator $r3;
        org.apache.commons.collections.map.ListOrderedMap $r1;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: org.apache.commons.collections.map.ListOrderedMap parent>;

        $r2 = $r1.<org.apache.commons.collections.map.ListOrderedMap: java.util.List insertOrder>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator()>();

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.util.ListIterator iterator> = $r3;

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object last> = null;

        r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable> = 0;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7, $r8;
        java.lang.Object $r3, $r6;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator;

        $z0 = r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: boolean readable>;

        if $z0 != 1 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Iterator[");

        $r3 = virtualinvoke r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object getKey()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r6 = virtualinvoke r0.<org.apache.commons.collections.map.ListOrderedMap$ListOrderedMapIterator: java.lang.Object getValue()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;

     label1:
        return "Iterator[]";
    }
}
