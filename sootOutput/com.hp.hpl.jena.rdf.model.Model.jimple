public interface  com.hp.hpl.jena.rdf.model.Model extends java.lang.Object implements com.hp.hpl.jena.rdf.model.ModelCon, com.hp.hpl.jena.rdf.model.ModelGraphInterface, com.hp.hpl.jena.rdf.model.RDFReaderF, com.hp.hpl.jena.rdf.model.RDFWriterF, com.hp.hpl.jena.shared.PrefixMapping, com.hp.hpl.jena.shared.Lock
{

    public abstract long size();

    public abstract boolean isEmpty();

    public abstract com.hp.hpl.jena.rdf.model.ResIterator listSubjects();

    public abstract com.hp.hpl.jena.rdf.model.NsIterator listNameSpaces();

    public abstract com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Property getProperty(java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Resource createResource();

    public abstract com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.AnonId);

    public abstract com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Literal createLiteral(java.lang.String, boolean);

    public abstract com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype);

    public abstract com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object, com.hp.hpl.jena.datatypes.RDFDatatype);

    public abstract com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(java.lang.Object);

    public abstract com.hp.hpl.jena.rdf.model.Statement createStatement(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract com.hp.hpl.jena.rdf.model.RDFList createList();

    public abstract com.hp.hpl.jena.rdf.model.RDFList createList(java.util.Iterator);

    public abstract com.hp.hpl.jena.rdf.model.RDFList createList(com.hp.hpl.jena.rdf.model.RDFNode[]);

    public abstract com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement);

    public abstract com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement[]);

    public abstract com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Statement[]);

    public abstract com.hp.hpl.jena.rdf.model.Model add(java.util.List);

    public abstract com.hp.hpl.jena.rdf.model.Model remove(java.util.List);

    public abstract com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.StmtIterator);

    public abstract com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model);

    public abstract com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model, boolean);

    public abstract com.hp.hpl.jena.rdf.model.Model read(java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model read(java.io.Reader, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model read(java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model read(java.io.Reader, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model read(java.lang.String, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.Writer);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model remove(com.hp.hpl.jena.rdf.model.Statement);

    public abstract com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.rdf.model.Statement getProperty(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.rdf.model.ResIterator listSubjectsWithProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.rdf.model.ResIterator listSubjectsWithProperty(com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract com.hp.hpl.jena.rdf.model.ResIterator listResourcesWithProperty(com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract com.hp.hpl.jena.rdf.model.NodeIterator listObjects();

    public abstract com.hp.hpl.jena.rdf.model.NodeIterator listObjectsOfProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.rdf.model.NodeIterator listObjectsOfProperty(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property);

    public abstract boolean contains(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property);

    public abstract boolean containsResource(com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract boolean contains(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract boolean contains(com.hp.hpl.jena.rdf.model.Statement);

    public abstract boolean containsAny(com.hp.hpl.jena.rdf.model.StmtIterator);

    public abstract boolean containsAll(com.hp.hpl.jena.rdf.model.StmtIterator);

    public abstract boolean containsAny(com.hp.hpl.jena.rdf.model.Model);

    public abstract boolean containsAll(com.hp.hpl.jena.rdf.model.Model);

    public abstract boolean isReified(com.hp.hpl.jena.rdf.model.Statement);

    public abstract com.hp.hpl.jena.rdf.model.Resource getAnyReifiedStatement(com.hp.hpl.jena.rdf.model.Statement);

    public abstract void removeAllReifications(com.hp.hpl.jena.rdf.model.Statement);

    public abstract void removeReification(com.hp.hpl.jena.rdf.model.ReifiedStatement);

    public abstract com.hp.hpl.jena.rdf.model.StmtIterator listStatements();

    public abstract com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Selector);

    public abstract com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(com.hp.hpl.jena.rdf.model.Statement);

    public abstract com.hp.hpl.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String, com.hp.hpl.jena.rdf.model.Statement);

    public abstract com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements();

    public abstract com.hp.hpl.jena.rdf.model.RSIterator listReifiedStatements(com.hp.hpl.jena.rdf.model.Statement);

    public abstract com.hp.hpl.jena.shared.ReificationStyle getReificationStyle();

    public abstract com.hp.hpl.jena.rdf.model.Model query(com.hp.hpl.jena.rdf.model.Selector);

    public abstract com.hp.hpl.jena.rdf.model.Model union(com.hp.hpl.jena.rdf.model.Model);

    public abstract com.hp.hpl.jena.rdf.model.Model intersection(com.hp.hpl.jena.rdf.model.Model);

    public abstract com.hp.hpl.jena.rdf.model.Model difference(com.hp.hpl.jena.rdf.model.Model);

    public abstract boolean equals(java.lang.Object);

    public abstract com.hp.hpl.jena.rdf.model.Model begin();

    public abstract com.hp.hpl.jena.rdf.model.Model abort();

    public abstract com.hp.hpl.jena.rdf.model.Model commit();

    public abstract java.lang.Object executeInTransaction(com.hp.hpl.jena.shared.Command);

    public abstract boolean independent();

    public abstract boolean supportsTransactions();

    public abstract boolean supportsSetOperations();

    public abstract boolean isIsomorphicWith(com.hp.hpl.jena.rdf.model.Model);

    public abstract void close();

    public abstract com.hp.hpl.jena.shared.Lock getLock();

    public abstract com.hp.hpl.jena.rdf.model.Model register(com.hp.hpl.jena.rdf.model.ModelChangedListener);

    public abstract com.hp.hpl.jena.rdf.model.Model unregister(com.hp.hpl.jena.rdf.model.ModelChangedListener);

    public abstract com.hp.hpl.jena.rdf.model.Model notifyEvent(java.lang.Object);

    public abstract com.hp.hpl.jena.rdf.model.Model removeAll();

    public abstract com.hp.hpl.jena.rdf.model.Model removeAll(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract boolean isClosed();
}
