public abstract class org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry extends java.lang.Object implements org.waveprotocol.box.server.robots.OperationServiceRegistry
{
    private static org.waveprotocol.wave.util.logging.Log LOG;
    private java.util.Map operationMap;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry r0;

        r0 := @this: org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry: java.util.Map operationMap> = $r1;

        return;
    }

    public final org.waveprotocol.box.server.robots.operations.OperationService getServiceFor(com.google.wave.api.OperationType) throws com.google.wave.api.InvalidRequestException
    {
        org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry r0;
        com.google.wave.api.OperationType r1;
        org.waveprotocol.box.server.robots.operations.OperationService r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        com.google.wave.api.InvalidRequestException $r5;

        r0 := @this: org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry;

        r1 := @parameter0: com.google.wave.api.OperationType;

        $r2 = r0.<org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry: java.util.Map operationMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.waveprotocol.box.server.robots.operations.OperationService) $r3;

        if r4 != null goto label1;

        $r5 = new com.google.wave.api.InvalidRequestException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No OperationService found for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.wave.api.InvalidRequestException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        return r4;
    }

    protected final void register(com.google.wave.api.OperationType, org.waveprotocol.box.server.robots.operations.OperationService)
    {
        org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry r0;
        com.google.wave.api.OperationType r1;
        org.waveprotocol.box.server.robots.operations.OperationService r2, r5;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r8, $r10, $r11;
        org.waveprotocol.wave.util.logging.Log $r7;
        java.lang.String $r9, $r12;

        r0 := @this: org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry;

        r1 := @parameter0: com.google.wave.api.OperationType;

        r2 := @parameter1: org.waveprotocol.box.server.robots.operations.OperationService;

        $r3 = r0.<org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry: java.util.Map operationMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        r5 = (org.waveprotocol.box.server.robots.operations.OperationService) $r4;

        if r5 == null goto label1;

        $r7 = <org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry: org.waveprotocol.wave.util.logging.Log LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The OperationService for ");

        $r9 = virtualinvoke r1.<com.google.wave.api.OperationType: java.lang.String name()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was overwritten");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String)>($r12);

     label1:
        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.logging.Log $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/AbstractOperationServiceRegistry;");

        <org.waveprotocol.box.server.robots.AbstractOperationServiceRegistry: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        return;
    }
}
