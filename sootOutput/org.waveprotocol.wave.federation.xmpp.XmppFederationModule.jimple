public class org.waveprotocol.wave.federation.xmpp.XmppFederationModule extends com.google.inject.AbstractModule
{

    public void <init>()
    {
        org.waveprotocol.wave.federation.xmpp.XmppFederationModule r0;

        r0 := @this: org.waveprotocol.wave.federation.xmpp.XmppFederationModule;

        specialinvoke r0.<com.google.inject.AbstractModule: void <init>()>();

        return;
    }

    protected void configure()
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r1, $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.waveprotocol.wave.federation.xmpp.XmppFederationModule r0;
        com.google.inject.binder.ScopedBindingBuilder $r3, $r6, $r15;
        com.google.inject.binder.LinkedBindingBuilder $r2, $r5;

        r0 := @this: org.waveprotocol.wave.federation.xmpp.XmppFederationModule;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/WaveletFederationProvider;");

        $r2 = interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/FederationRemoteBridge;");

        $r3 = interfaceinvoke $r2.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppFederationRemote;");

        interfaceinvoke $r3.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/WaveletFederationListener$Factory;");

        $r5 = interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/FederationHostBridge;");

        $r6 = interfaceinvoke $r5.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppFederationHost;");

        interfaceinvoke $r6.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r7 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppDisco;");

        interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r8 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppFederationRemote;");

        interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r9 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppFederationHost;");

        interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r10 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppManager;");

        interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r11 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/IncomingPacketHandler;");

        interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppManager;");

        $r12 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/ComponentPacketTransport;");

        interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r13 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/OutgoingPacketTransport;");

        interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/ComponentPacketTransport;");

        $r14 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.XmppFederationModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/FederationTransport;");

        $r15 = interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/xmpp/XmppFederationTransport;");

        interfaceinvoke $r15.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        return;
    }
}
