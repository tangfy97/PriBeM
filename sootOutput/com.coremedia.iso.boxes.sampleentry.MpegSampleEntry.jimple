public class com.coremedia.iso.boxes.sampleentry.MpegSampleEntry extends com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry
{

    public void <init>()
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        specialinvoke r0.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: void <init>(java.lang.String)>("mp4s");

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: void <init>(java.lang.String)>(r1);

        return;
    }

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r2;
        long l1, $l2;
        java.nio.ByteBuffer $r0, r4;
        com.coremedia.iso.BoxParser r3;
        int $i0;

        r2 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r4 := @parameter1: java.nio.ByteBuffer;

        l1 := @parameter2: long;

        r3 := @parameter3: com.coremedia.iso.BoxParser;

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r0);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(6);

        $i0 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r2.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: int dataReferenceIndex> = $i0;

        $l2 = l1 - 8L;

        virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: void parseContainer(com.googlecode.mp4parser.DataSource,long,com.coremedia.iso.BoxParser)>(r1, $l2, r3);

        return;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r1;
        java.nio.Buffer $r4;
        int $i0;
        java.nio.channels.WritableByteChannel r0;
        java.nio.ByteBuffer $r2, $r3, $r5;

        r1 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        r0 := @parameter0: java.nio.channels.WritableByteChannel;

        $r2 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: java.nio.ByteBuffer getHeader()>();

        interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r2);

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(6);

        $i0 = r1.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: int dataReferenceIndex>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r3, $i0);

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r5 = (java.nio.ByteBuffer) $r4;

        interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r5);

        virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: void writeContainer(java.nio.channels.WritableByteChannel)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        java.util.List $r3, $r4;
        java.util.List[] $r1;
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r2;
        java.lang.StringBuilder $r0, $r5;
        java.lang.String $r6;

        r2 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("MpegSampleEntry");

        $r1 = newarray (java.util.List)[1];

        $r3 = virtualinvoke r2.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: java.util.List getBoxes()>();

        $r1[0] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public long getSize()
    {
        com.coremedia.iso.boxes.sampleentry.MpegSampleEntry r0;
        long $l0, $l1, $l2, $l3, $l4;
        byte $b5, $b6;
        int $i7;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.MpegSampleEntry;

        $l0 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: long getContainerSize()>();

        $l2 = $l0 + 8L;

        $z0 = r0.<com.coremedia.iso.boxes.sampleentry.MpegSampleEntry: boolean largeBox>;

        if $z0 != 0 goto label1;

        $l4 = $l0 + 8L;

        $b5 = $l4 cmp 4294967296L;

        $i7 = (int) $b5;

        if $i7 < 0 goto label2;

     label1:
        $b6 = 16;

        goto label3;

     label2:
        $b6 = 8;

     label3:
        $l1 = (long) $b6;

        $l3 = $l2 + $l1;

        return $l3;
    }
}
