public class org.apache.lucene.util.ScorerDocQueue extends java.lang.Object
{
    private final org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap;
    private final int maxSize;
    private int size;
    private org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD;

    public void <init>(int)
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r1, $r2;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r3;
        org.apache.lucene.util.ScorerDocQueue r0;
        int i0, i1;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.util.ScorerDocQueue: int size> = 0;

        i1 = i0 + 1;

        $r1 = newarray (org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc)[i1];

        r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap> = $r1;

        r0.<org.apache.lucene.util.ScorerDocQueue: int maxSize> = i0;

        $r2 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r3 = $r2[1];

        r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD> = $r3;

        return;
    }

    public final void put(org.apache.lucene.search.Scorer)
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r3;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.search.Scorer r2;
        org.apache.lucene.util.ScorerDocQueue r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        r2 := @parameter0: org.apache.lucene.search.Scorer;

        $i0 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.util.ScorerDocQueue: int size> = $i1;

        $r3 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $i2 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $r1 = new org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc;

        specialinvoke $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: void <init>(org.apache.lucene.util.ScorerDocQueue,org.apache.lucene.search.Scorer)>(r0, r2);

        $r3[$i2] = $r1;

        specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: void upHeap()>();

        return;
    }

    public boolean insert(org.apache.lucene.search.Scorer)
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r2, $r3;
        org.apache.lucene.search.Scorer r1;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r4;
        org.apache.lucene.util.ScorerDocQueue r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        r1 := @parameter0: org.apache.lucene.search.Scorer;

        $i1 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $i0 = r0.<org.apache.lucene.util.ScorerDocQueue: int maxSize>;

        if $i1 >= $i0 goto label1;

        virtualinvoke r0.<org.apache.lucene.util.ScorerDocQueue: void put(org.apache.lucene.search.Scorer)>(r1);

        return 1;

     label1:
        $i2 = virtualinvoke r1.<org.apache.lucene.search.Scorer: int docID()>();

        $i3 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        if $i3 <= 0 goto label2;

        $r2 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $i4 = $r2.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        if $i2 < $i4 goto label2;

        $r4 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r3 = new org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc;

        specialinvoke $r3.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: void <init>(org.apache.lucene.util.ScorerDocQueue,org.apache.lucene.search.Scorer,int)>(r0, r1, $i2);

        $r4[1] = $r3;

        specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: void downHeap()>();

        return 1;

     label2:
        return 0;
    }

    public final org.apache.lucene.search.Scorer top()
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.util.ScorerDocQueue r0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $r2 = $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: org.apache.lucene.search.Scorer scorer>;

        return $r2;
    }

    public final int topDoc()
    {
        int $i0;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.util.ScorerDocQueue r0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $i0 = $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        return $i0;
    }

    public final float topScore() throws java.io.IOException
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.util.ScorerDocQueue r0;
        float $f0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $r2 = $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: org.apache.lucene.search.Scorer scorer>;

        $f0 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: float score()>();

        return $f0;
    }

    public final boolean topNextAndAdjustElsePop() throws java.io.IOException
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.util.ScorerDocQueue r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $r2 = $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: org.apache.lucene.search.Scorer scorer>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int nextDoc()>();

        if $i0 == 2147483647 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $z0 = specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: boolean checkAdjustElsePop(boolean)>($z1);

        return $z0;
    }

    public final boolean topSkipToAndAdjustElsePop(int) throws java.io.IOException
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.util.ScorerDocQueue r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $r2 = $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: org.apache.lucene.search.Scorer scorer>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int advance(int)>(i0);

        if $i1 == 2147483647 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $z0 = specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: boolean checkAdjustElsePop(boolean)>($z1);

        return $z0;
    }

    private boolean checkAdjustElsePop(boolean)
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r2, $r5, $r7;
        org.apache.lucene.search.Scorer $r6;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r1, $r3, $r4;
        org.apache.lucene.util.ScorerDocQueue r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $r5 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        $r6 = $r5.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: org.apache.lucene.search.Scorer scorer>;

        $i4 = virtualinvoke $r6.<org.apache.lucene.search.Scorer: int docID()>();

        $r7.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc> = $i4;

        goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $i0 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $r2 = $r1[$i0];

        $r3[1] = $r2;

        $r4 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $i1 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $r4[$i1] = null;

        $i2 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $i3 = $i2 - 1;

        r0.<org.apache.lucene.util.ScorerDocQueue: int size> = $i3;

     label2:
        specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: void downHeap()>();

        return z0;
    }

    public final org.apache.lucene.search.Scorer pop()
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.search.Scorer r2;
        org.apache.lucene.util.ScorerDocQueue r0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        r2 = $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: org.apache.lucene.search.Scorer scorer>;

        specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: void popNoResult()>();

        return r2;
    }

    private final void popNoResult()
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r2;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r1, $r3, $r4;
        org.apache.lucene.util.ScorerDocQueue r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $r3 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $i0 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $r2 = $r1[$i0];

        $r3[1] = $r2;

        $r4 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $i1 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $r4[$i1] = null;

        $i2 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $i3 = $i2 - 1;

        r0.<org.apache.lucene.util.ScorerDocQueue: int size> = $i3;

        specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: void downHeap()>();

        return;
    }

    public final void adjustTop()
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc $r1;
        org.apache.lucene.util.ScorerDocQueue r0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD>;

        virtualinvoke $r1.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: void adjust()>();

        specialinvoke r0.<org.apache.lucene.util.ScorerDocQueue: void downHeap()>();

        return;
    }

    public final int size()
    {
        int $i0;
        org.apache.lucene.util.ScorerDocQueue r0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        $i0 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        return $i0;
    }

    public final void clear()
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r1;
        org.apache.lucene.util.ScorerDocQueue r0;
        int $i0, i1;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        i1 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        if i1 > $i0 goto label2;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r1[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.util.ScorerDocQueue: int size> = 0;

        return;
    }

    private final void upHeap()
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc r2, $r5, $r7, $r9;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r1, $r3, $r4, $r6, $r8, $r10;
        org.apache.lucene.util.ScorerDocQueue r0;
        int $i0, $i1, i2, i3;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        i2 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        r2 = $r1[i2];

        i3 = i2 >>> 1;

     label1:
        if i3 <= 0 goto label2;

        $i1 = r2.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        $r6 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r7 = $r6[i3];

        $i0 = $r7.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        if $i1 >= $i0 goto label2;

        $r10 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r8 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r9 = $r8[i3];

        $r10[i2] = $r9;

        i2 = i3;

        i3 = i3 >>> 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r3[i2] = r2;

        $r4 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r5 = $r4[1];

        r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD> = $r5;

        return;
    }

    private final void downHeap()
    {
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc r2, $r5, $r7, $r9, $r12, $r14, $r16, $r18;
        org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] $r1, $r3, $r4, $r6, $r8, $r10, $r11, $r13, $r15, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, i11;
        org.apache.lucene.util.ScorerDocQueue r0;

        r0 := @this: org.apache.lucene.util.ScorerDocQueue;

        i8 = 1;

        $r1 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        r2 = $r1[1];

        i9 = 2;

        $i0 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        if 3 > $i0 goto label1;

        $r15 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r16 = $r15[3];

        $i7 = $r16.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        $r17 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r18 = $r17[2];

        $i6 = $r18.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        if $i7 >= $i6 goto label1;

        i9 = 3;

     label1:
        $i10 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        if i9 > $i10 goto label2;

        $r6 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r7 = $r6[i9];

        $i2 = $r7.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        $i1 = r2.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        if $i2 >= $i1 goto label2;

        $r10 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r8 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r9 = $r8[i9];

        $r10[i8] = $r9;

        i8 = i9;

        i9 = i9 << 1;

        i11 = i9 + 1;

        $i3 = r0.<org.apache.lucene.util.ScorerDocQueue: int size>;

        if i11 > $i3 goto label1;

        $r11 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r12 = $r11[i11];

        $i5 = $r12.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        $r13 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r14 = $r13[i9];

        $i4 = $r14.<org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc: int doc>;

        if $i5 >= $i4 goto label1;

        i9 = i11;

        goto label1;

     label2:
        $r3 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r3[i8] = r2;

        $r4 = r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc[] heap>;

        $r5 = $r4[1];

        r0.<org.apache.lucene.util.ScorerDocQueue: org.apache.lucene.util.ScorerDocQueue$HeapedScorerDoc topHSD> = $r5;

        return;
    }
}
