public final class org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation extends org.waveprotocol.wave.model.operation.core.CoreWaveletOperation
{
    private final java.lang.String documentId;
    private final org.waveprotocol.wave.model.document.operation.DocOp operation;

    public void <init>(java.lang.String, org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r0;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.core.CoreWaveletOperation: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Null document id");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null document operation");

        r0.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId> = r1;

        r0.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp operation> = r2;

        return;
    }

    public java.lang.String getDocumentId()
    {
        java.lang.String $r1;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r0;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r1 = r0.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId>;

        return $r1;
    }

    public org.waveprotocol.wave.model.document.operation.DocOp getOperation()
    {
        org.waveprotocol.wave.model.document.operation.DocOp $r1;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r0;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r1 = r0.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp operation>;

        return $r1;
    }

    protected void doApply(org.waveprotocol.wave.model.wave.data.core.CoreWaveletData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.wave.data.core.CoreWaveletData r0;
        org.waveprotocol.wave.model.document.operation.DocOp $r2;
        java.lang.String $r3;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r1;

        r1 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.core.CoreWaveletData;

        $r3 = r1.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId>;

        $r2 = r1.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp operation>;

        interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.core.CoreWaveletData: boolean modifyDocument(java.lang.String,org.waveprotocol.wave.model.document.operation.DocOp)>($r3, $r2);

        return;
    }

    public org.waveprotocol.wave.model.operation.core.CoreWaveletOperation getInverse()
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer $r1;
        org.waveprotocol.wave.model.document.operation.DocOp $r3, $r7;
        java.lang.Object $r6;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter $r0;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r2, $r4;

        r2 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter;

        $r1 = new org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer: void <init>()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r1);

        $r3 = r2.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp operation>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r0);

        $r4 = new org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r5 = r2.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId>;

        $r6 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpInverter: java.lang.Object finish()>();

        $r7 = (org.waveprotocol.wave.model.document.operation.DocOp) $r6;

        specialinvoke $r4.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: void <init>(java.lang.String,org.waveprotocol.wave.model.document.operation.DocOp)>($r5, $r7);

        return $r4;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.operation.DocOp $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r9;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r2;

        r2 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WaveletDocumentOperation(");

        $r3 = r2.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = r2.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp operation>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r0;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r1 = r0.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.operation.DocOp $r5, $r6;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        org.waveprotocol.wave.model.operation.OpComparators$OpEquator $r7;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation) r0;

        $r4 = r2.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId>;

        $r3 = r1.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String documentId>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r7 = <org.waveprotocol.wave.model.operation.OpComparators: org.waveprotocol.wave.model.operation.OpComparators$OpEquator SYNTACTIC_IDENTITY>;

        $r6 = r2.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp operation>;

        $r5 = r1.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp operation>;

        $z2 = interfaceinvoke $r7.<org.waveprotocol.wave.model.operation.OpComparators$OpEquator: boolean equal(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>($r6, $r5);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }
}
