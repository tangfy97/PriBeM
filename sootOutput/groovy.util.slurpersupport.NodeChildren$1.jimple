class groovy.util.slurpersupport.NodeChildren$1 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator iter;
    private java.util.Iterator childIter;
    private final groovy.util.slurpersupport.NodeChildren this$0;

    void <init>(groovy.util.slurpersupport.NodeChildren)
    {
        groovy.util.slurpersupport.NodeChildren$1 r0;
        java.util.Iterator $r4, $r5;
        groovy.util.slurpersupport.NodeChildren r1, $r2;
        groovy.util.slurpersupport.GPathResult $r3;

        r0 := @this: groovy.util.slurpersupport.NodeChildren$1;

        r1 := @parameter0: groovy.util.slurpersupport.NodeChildren;

        r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0>;

        $r3 = $r2.<groovy.util.slurpersupport.NodeChildren: groovy.util.slurpersupport.GPathResult parent>;

        $r4 = virtualinvoke $r3.<groovy.util.slurpersupport.GPathResult: java.util.Iterator childNodes()>();

        r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator iter> = $r4;

        $r5 = specialinvoke r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator nextChildIter()>();

        r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter> = $r5;

        return;
    }

    public boolean hasNext()
    {
        groovy.util.slurpersupport.NodeChildren$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: groovy.util.slurpersupport.NodeChildren$1;

        $r1 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Throwable $r9;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11;
        groovy.util.slurpersupport.NodeChildren$1 r0;
        java.lang.Object $r6;

        r0 := @this: groovy.util.slurpersupport.NodeChildren$1;

     label01:
        $r1 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter>;

        if $r1 == null goto label10;

     label02:
        $r2 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r5 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter>;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label03:
        $r7 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter>;

        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label04;

        $r8 = specialinvoke r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator nextChildIter()>();

        r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter> = $r8;

     label04:
        return $r6;

     label05:
        $r3 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter>;

        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label09;

        $r4 = specialinvoke r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator nextChildIter()>();

        r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter> = $r4;

        goto label09;

     label06:
        $r9 := @caughtexception;

     label07:
        $r10 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter>;

        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label08;

        $r11 = specialinvoke r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator nextChildIter()>();

        r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator childIter> = $r11;

     label08:
        throw $r9;

     label09:
        goto label01;

     label10:
        return null;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public void remove()
    {
        groovy.util.slurpersupport.NodeChildren$1 r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: groovy.util.slurpersupport.NodeChildren$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private java.util.Iterator nextChildIter()
    {
        groovy.util.slurpersupport.Node r4;
        groovy.util.slurpersupport.NodeChildren $r5, $r9, $r12, $r16, $r17, $r23;
        java.util.Map $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r6, $r7, $r10, $r11, $r13, $r14, $r15, $r18, $r21, $r22, $r24;
        java.util.Iterator $r1, $r2, $r8;
        groovy.util.slurpersupport.NodeChildren$1 r0;
        java.lang.Object $r3, $r20;

        r0 := @this: groovy.util.slurpersupport.NodeChildren$1;

     label1:
        $r1 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = r0.<groovy.util.slurpersupport.NodeChildren$1: java.util.Iterator iter>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (groovy.util.slurpersupport.Node) $r3;

        $r5 = r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0>;

        $r6 = $r5.<groovy.util.slurpersupport.NodeChildren: java.lang.String name>;

        $r7 = virtualinvoke r4.<groovy.util.slurpersupport.Node: java.lang.String name()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

        $r23 = r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0>;

        $r24 = $r23.<groovy.util.slurpersupport.NodeChildren: java.lang.String name>;

        $z7 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z7 == 0 goto label5;

     label2:
        $r8 = virtualinvoke r4.<groovy.util.slurpersupport.Node: java.util.Iterator childNodes()>();

        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r11 = "*";

        $r9 = r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0>;

        $r10 = $r9.<groovy.util.slurpersupport.NodeChildren: java.lang.String namespacePrefix>;

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label4;

        $r14 = "";

        $r12 = r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0>;

        $r13 = $r12.<groovy.util.slurpersupport.NodeChildren: java.lang.String namespacePrefix>;

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z4 == 0 goto label3;

        $r21 = "";

        $r22 = virtualinvoke r4.<groovy.util.slurpersupport.Node: java.lang.String namespaceURI()>();

        $z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z6 != 0 goto label4;

     label3:
        $r15 = virtualinvoke r4.<groovy.util.slurpersupport.Node: java.lang.String namespaceURI()>();

        $r16 = r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0>;

        $r19 = $r16.<groovy.util.slurpersupport.NodeChildren: java.util.Map namespaceMap>;

        $r17 = r0.<groovy.util.slurpersupport.NodeChildren$1: groovy.util.slurpersupport.NodeChildren this$0>;

        $r18 = $r17.<groovy.util.slurpersupport.NodeChildren: java.lang.String namespacePrefix>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z5 == 0 goto label5;

     label4:
        return $r8;

     label5:
        goto label1;

     label6:
        return null;
    }
}
