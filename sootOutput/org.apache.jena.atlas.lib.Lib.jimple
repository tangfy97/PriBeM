public class org.apache.jena.atlas.lib.Lib extends java.lang.Object
{

    private void <init>()
    {
        org.apache.jena.atlas.lib.Lib r0;

        r0 := @this: org.apache.jena.atlas.lib.Lib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void sync(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.jena.atlas.lib.Sync $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.jena.atlas.lib.Sync;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.jena.atlas.lib.Sync) r0;

        interfaceinvoke $r1.<org.apache.jena.atlas.lib.Sync: void sync()>();

     label1:
        return;
    }

    public static final boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        if r1 != null goto label4;

        return 0;

     label4:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public static final boolean notEqual(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static final java.lang.String className(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.jena.atlas.lib.Lib: java.lang.String classShortName(java.lang.Class)>($r1);

        return $r2;
    }

    public static final java.lang.String classShortName(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r1;
    }

    public static boolean equalsListAsSet(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        if r0 != null goto label1;

        if r1 != null goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $z0 = interfaceinvoke r0.<java.util.List: boolean containsAll(java.util.Collection)>(r1);

        if $z0 == 0 goto label4;

        $z1 = interfaceinvoke r1.<java.util.List: boolean containsAll(java.util.Collection)>(r0);

        if $z1 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public static final int hashCodeObject(java.lang.Object)
    {
        int $i0, $i2;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        $i2 = (int) -4;

        $i0 = staticinvoke <org.apache.jena.atlas.lib.Lib: int hashCodeObject(java.lang.Object,int)>(r0, $i2);

        return $i0;
    }

    public static final int hashCodeObject(java.lang.Object, int)
    {
        int $i0, i1;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        if r0 != null goto label1;

        return i1;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public static final void sleep(int)
    {
        int i0;
        long $l1;
        java.lang.InterruptedException $r0;

        i0 := @parameter0: int;

     label1:
        $l1 = (long) i0;

        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String,java.lang.Throwable)>(class "Lorg/apache/jena/atlas/lib/Lib;", "interrupted", $r0);

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static long crc32(byte[])
    {
        java.util.zip.CRC32 $r0;
        byte[] r1;
        long $l0;

        r1 := @parameter0: byte[];

        $r0 = new java.util.zip.CRC32;

        specialinvoke $r0.<java.util.zip.CRC32: void <init>()>();

        $l0 = staticinvoke <org.apache.jena.atlas.lib.Lib: long crc(java.util.zip.Checksum,byte[])>($r0, r1);

        return $l0;
    }

    public static long adler32(byte[])
    {
        byte[] r1;
        long $l0;
        java.util.zip.Adler32 $r0;

        r1 := @parameter0: byte[];

        $r0 = new java.util.zip.Adler32;

        specialinvoke $r0.<java.util.zip.Adler32: void <init>()>();

        $l0 = staticinvoke <org.apache.jena.atlas.lib.Lib: long crc(java.util.zip.Checksum,byte[])>($r0, r1);

        return $l0;
    }

    private static long crc(java.util.zip.Checksum, byte[])
    {
        java.util.zip.Checksum r0;
        byte[] r1;
        int $i0;
        long $l1;

        r0 := @parameter0: java.util.zip.Checksum;

        r1 := @parameter1: byte[];

        interfaceinvoke r0.<java.util.zip.Checksum: void reset()>();

        $i0 = lengthof r1;

        interfaceinvoke r0.<java.util.zip.Checksum: void update(byte[],int,int)>(r1, 0, $i0);

        $l1 = interfaceinvoke r0.<java.util.zip.Checksum: long getValue()>();

        return $l1;
    }
}
