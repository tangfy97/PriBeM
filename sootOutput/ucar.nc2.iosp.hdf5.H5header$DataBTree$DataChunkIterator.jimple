class ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator extends java.lang.Object
{
    private ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root;
    private int[] wantOrigin;
    final ucar.nc2.iosp.hdf5.H5header$DataBTree this$1;

    void <init>(ucar.nc2.iosp.hdf5.H5header$DataBTree, ucar.ma2.Section) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator r0;
        ucar.nc2.iosp.hdf5.H5header$DataBTree r1;
        ucar.ma2.Section r3;
        long $l0;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$Node $r2, $r5;
        int[] $r4, $r6;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header$DataBTree;

        r3 := @parameter1: ucar.ma2.Section;

        r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator: ucar.nc2.iosp.hdf5.H5header$DataBTree this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new ucar.nc2.iosp.hdf5.H5header$DataBTree$Node;

        $l0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$DataBTree: long access$5900(ucar.nc2.iosp.hdf5.H5header$DataBTree)>(r1);

        specialinvoke $r2.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: void <init>(ucar.nc2.iosp.hdf5.H5header$DataBTree,long,long)>(r1, $l0, -1L);

        r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root> = $r2;

        if r3 == null goto label1;

        $r6 = virtualinvoke r3.<ucar.ma2.Section: int[] getOrigin()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator: int[] wantOrigin> = $r6;

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root>;

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator: int[] wantOrigin>;

        virtualinvoke $r5.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: void first(int[])>($r4);

        return;
    }

    public boolean hasNext()
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator r0;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$Node $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root>;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: boolean hasNext()>();

        return $z0;
    }

    public ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk $r2;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator r0;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$Node $r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk next()>();

        return $r2;
    }
}
