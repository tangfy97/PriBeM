public abstract class org.apache.velocity.servlet.VelocityServlet extends javax.servlet.http.HttpServlet
{
    public static final java.lang.String REQUEST;
    public static final java.lang.String RESPONSE;
    public static final java.lang.String CONTENT_TYPE;
    public static final java.lang.String DEFAULT_CONTENT_TYPE;
    public static final java.lang.String DEFAULT_OUTPUT_ENCODING;
    private static java.lang.String defaultContentType;
    protected static final java.lang.String INIT_PROPS_KEY;
    private static final java.lang.String OLD_INIT_PROPS_KEY;
    private static org.apache.velocity.util.SimplePool writerPool;

    public void <init>()
    {
        org.apache.velocity.servlet.VelocityServlet r0;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        return;
    }

    public void init(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.ServletConfig r1;
        java.lang.String $r2;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void init(javax.servlet.ServletConfig)>(r1);

        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void initVelocity(javax.servlet.ServletConfig)>(r1);

        $r2 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: java.lang.String getString(java.lang.String,java.lang.String)>("default.contentType", "text/html");

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String defaultContentType> = $r2;

        return;
    }

    protected void initVelocity(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.ServletConfig r1;
        java.util.Properties $r2;
        javax.servlet.ServletException $r4;
        java.lang.Exception $r3;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

     label1:
        $r2 = virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: java.util.Properties loadConfiguration(javax.servlet.ServletConfig)>(r1);

        staticinvoke <org.apache.velocity.app.Velocity: void init(java.util.Properties)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new javax.servlet.ServletException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error initializing Velocity: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r4;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.util.Properties loadConfiguration(javax.servlet.ServletConfig) throws java.io.IOException, java.io.FileNotFoundException
    {
        org.apache.velocity.servlet.VelocityServlet r6;
        javax.servlet.ServletConfig r0;
        java.util.Properties $r10;
        int $i0, $i1, $i2, $i3;
        javax.servlet.ServletContext $r2, $r7;
        java.lang.String $r1, $r3, $r4, $r5, r9;
        java.io.InputStream $r8;

        r6 := @this: org.apache.velocity.servlet.VelocityServlet;

        r0 := @parameter0: javax.servlet.ServletConfig;

        $r1 = interfaceinvoke r0.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("org.apache.velocity.properties");

        r9 = $r1;

        if $r1 == null goto label1;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 != 0 goto label5;

     label1:
        $r2 = interfaceinvoke r0.<javax.servlet.ServletConfig: javax.servlet.ServletContext getServletContext()>();

        $r3 = interfaceinvoke r0.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("properties");

        r9 = $r3;

        if $r3 == null goto label2;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label4;

     label2:
        $r4 = interfaceinvoke $r2.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>("org.apache.velocity.properties");

        r9 = $r4;

        if $r4 == null goto label3;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label3:
        $r5 = interfaceinvoke $r2.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>("properties");

        r9 = $r5;

        if $r5 == null goto label5;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        interfaceinvoke $r2.<javax.servlet.ServletContext: void log(java.lang.String)>("Use of the properties initialization parameter \'properties\' has been deprecated by \'org.apache.velocity.properties\'");

        goto label5;

     label4:
        interfaceinvoke $r2.<javax.servlet.ServletContext: void log(java.lang.String)>("Use of the properties initialization parameter \'properties\' has been deprecated by \'org.apache.velocity.properties\'");

     label5:
        $r10 = new java.util.Properties;

        specialinvoke $r10.<java.util.Properties: void <init>()>();

        if r9 == null goto label6;

        $r7 = virtualinvoke r6.<org.apache.velocity.servlet.VelocityServlet: javax.servlet.ServletContext getServletContext()>();

        $r8 = interfaceinvoke $r7.<javax.servlet.ServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>(r9);

        virtualinvoke $r10.<java.util.Properties: void load(java.io.InputStream)>($r8);

     label6:
        return $r10;
    }

    public void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r2;
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void doRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    public void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r2;
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void doRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    protected void doRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.lang.Throwable $r5;
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.Exception $r6;
        org.apache.velocity.Template $r4;
        javax.servlet.http.HttpServletRequest r1;
        org.apache.velocity.context.Context $r3, r7;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r7 = null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: org.apache.velocity.context.Context createContext(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        r7 = $r3;

        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void setContentType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: org.apache.velocity.Template handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.velocity.context.Context)>(r1, r2, $r3);

        if $r4 != null goto label3;

     label2:
        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void requestCleanup(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.velocity.context.Context)>(r1, r2, $r3);

        return;

     label3:
        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void mergeTemplate(org.apache.velocity.Template,org.apache.velocity.context.Context,javax.servlet.http.HttpServletResponse)>($r4, $r3, r2);

     label4:
        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void requestCleanup(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.velocity.context.Context)>(r1, r2, $r3);

        goto label9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void error(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Exception)>(r1, r2, $r6);

     label6:
        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void requestCleanup(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.velocity.context.Context)>(r1, r2, r7);

        goto label9;

     label7:
        $r5 := @caughtexception;

     label8:
        virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: void requestCleanup(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.velocity.context.Context)>(r1, r2, r7);

        throw $r5;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected void requestCleanup(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.velocity.context.Context)
    {
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.http.HttpServletRequest r1;
        org.apache.velocity.context.Context r3;
        javax.servlet.http.HttpServletResponse r2;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r3 := @parameter2: org.apache.velocity.context.Context;

        return;
    }

    protected void mergeTemplate(org.apache.velocity.Template, org.apache.velocity.context.Context, javax.servlet.http.HttpServletResponse) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException, java.io.IOException, java.io.UnsupportedEncodingException, java.lang.Exception
    {
        java.lang.Throwable $r14;
        org.apache.velocity.util.SimplePool $r3, $r8, $r12;
        org.apache.velocity.Template r6;
        org.apache.velocity.context.Context r7;
        javax.servlet.ServletOutputStream $r1;
        java.io.OutputStreamWriter $r5, $r10;
        java.lang.String $r2;
        org.apache.velocity.servlet.VelocityServlet r15;
        org.apache.velocity.io.VelocityWriter $r9, r16;
        javax.servlet.http.HttpServletResponse r0;
        java.io.IOException $r11, $r13;
        java.lang.Object $r4;

        r15 := @this: org.apache.velocity.servlet.VelocityServlet;

        r6 := @parameter0: org.apache.velocity.Template;

        r7 := @parameter1: org.apache.velocity.context.Context;

        r0 := @parameter2: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        r16 = null;

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: java.lang.String getCharacterEncoding()>();

     label01:
        $r3 = <org.apache.velocity.servlet.VelocityServlet: org.apache.velocity.util.SimplePool writerPool>;

        $r4 = virtualinvoke $r3.<org.apache.velocity.util.SimplePool: java.lang.Object get()>();

        r16 = (org.apache.velocity.io.VelocityWriter) $r4;

        if r16 != null goto label02;

        $r9 = new org.apache.velocity.io.VelocityWriter;

        $r10 = new java.io.OutputStreamWriter;

        specialinvoke $r10.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, $r2);

        specialinvoke $r9.<org.apache.velocity.io.VelocityWriter: void <init>(java.io.Writer,int,boolean)>($r10, 4096, 1);

        r16 = $r9;

        goto label03;

     label02:
        $r5 = new java.io.OutputStreamWriter;

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, $r2);

        virtualinvoke r16.<org.apache.velocity.io.VelocityWriter: void recycle(java.io.Writer)>($r5);

     label03:
        virtualinvoke r6.<org.apache.velocity.Template: void merge(org.apache.velocity.context.Context,java.io.Writer)>(r7, r16);

        goto label08;

     label04:
        goto label07;

     label05:
        $r14 := @caughtexception;

        goto label14;

     label06:
        throw $r14;

     label07:
        return;

     label08:
        if r16 == null goto label13;

     label09:
        virtualinvoke r16.<org.apache.velocity.io.VelocityWriter: void flush()>();

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

     label12:
        virtualinvoke r16.<org.apache.velocity.io.VelocityWriter: void recycle(java.io.Writer)>(null);

        $r8 = <org.apache.velocity.servlet.VelocityServlet: org.apache.velocity.util.SimplePool writerPool>;

        virtualinvoke $r8.<org.apache.velocity.util.SimplePool: void put(java.lang.Object)>(r16);

     label13:
        goto label04;

     label14:
        if r16 == null goto label19;

     label15:
        virtualinvoke r16.<org.apache.velocity.io.VelocityWriter: void flush()>();

     label16:
        goto label18;

     label17:
        $r11 := @caughtexception;

     label18:
        virtualinvoke r16.<org.apache.velocity.io.VelocityWriter: void recycle(java.io.Writer)>(null);

        $r12 = <org.apache.velocity.servlet.VelocityServlet: org.apache.velocity.util.SimplePool writerPool>;

        virtualinvoke $r12.<org.apache.velocity.util.SimplePool: void put(java.lang.Object)>(r16);

     label19:
        goto label06;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label15 to label16 with label17;
    }

    protected void setContentType(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletRequest r1;
        java.lang.StringBuffer $r6, $r7, $r8, $r10;
        int $i0, i1, $i2, $i3, $i5;
        java.lang.String $r2, $r3, r9;
        boolean $z0;
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.http.HttpServletResponse r4;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: javax.servlet.http.HttpServletResponse;

        r9 = <org.apache.velocity.servlet.VelocityServlet: java.lang.String defaultContentType>;

        $i0 = virtualinvoke r9.<java.lang.String: int lastIndexOf(int)>(59);

        i1 = $i0 + 1;

        if i1 <= 0 goto label1;

        $i2 = virtualinvoke r9.<java.lang.String: int length()>();

        if i1 >= $i2 goto label2;

        $i3 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String,int)>("charset", i1);

        $i5 = (int) -1;

        if $i3 != $i5 goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: java.lang.String chooseCharacterEncoding(javax.servlet.http.HttpServletRequest)>(r1);

        $r3 = "ISO-8859-1";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; charset=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>(r9);

        return;
    }

    protected java.lang.String chooseCharacterEncoding(javax.servlet.http.HttpServletRequest)
    {
        org.apache.velocity.servlet.VelocityServlet r1;
        javax.servlet.http.HttpServletRequest r2;
        java.lang.String $r0;

        r1 := @this: org.apache.velocity.servlet.VelocityServlet;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r0 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: java.lang.String getString(java.lang.String,java.lang.String)>("output.encoding", "ISO-8859-1");

        return $r0;
    }

    protected org.apache.velocity.context.Context createContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        org.apache.velocity.servlet.VelocityServlet r3;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServletResponse r2;
        org.apache.velocity.VelocityContext $r0;

        r3 := @this: org.apache.velocity.servlet.VelocityServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r0 = new org.apache.velocity.VelocityContext;

        specialinvoke $r0.<org.apache.velocity.VelocityContext: void <init>()>();

        virtualinvoke $r0.<org.apache.velocity.VelocityContext: java.lang.Object put(java.lang.String,java.lang.Object)>("req", r1);

        virtualinvoke $r0.<org.apache.velocity.VelocityContext: java.lang.Object put(java.lang.String,java.lang.Object)>("res", r2);

        return $r0;
    }

    public org.apache.velocity.Template getTemplate(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, java.lang.Exception
    {
        org.apache.velocity.servlet.VelocityServlet r2;
        java.lang.String r0;
        org.apache.velocity.Template $r1;

        r2 := @this: org.apache.velocity.servlet.VelocityServlet;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.Template getTemplate(java.lang.String)>(r0);

        return $r1;
    }

    public org.apache.velocity.Template getTemplate(java.lang.String, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, java.lang.Exception
    {
        org.apache.velocity.servlet.VelocityServlet r3;
        java.lang.String r0, r1;
        org.apache.velocity.Template $r2;

        r3 := @this: org.apache.velocity.servlet.VelocityServlet;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.Template getTemplate(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    protected org.apache.velocity.Template handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.velocity.context.Context) throws java.lang.Exception
    {
        org.apache.velocity.servlet.VelocityServlet r0;
        javax.servlet.http.HttpServletRequest r4;
        org.apache.velocity.context.Context r1;
        javax.servlet.http.HttpServletResponse r5;
        java.lang.Exception $r3;
        org.apache.velocity.Template $r2;

        r0 := @this: org.apache.velocity.servlet.VelocityServlet;

        r4 := @parameter0: javax.servlet.http.HttpServletRequest;

        r5 := @parameter1: javax.servlet.http.HttpServletResponse;

        r1 := @parameter2: org.apache.velocity.context.Context;

        $r2 = virtualinvoke r0.<org.apache.velocity.servlet.VelocityServlet: org.apache.velocity.Template handleRequest(org.apache.velocity.context.Context)>(r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("handleRequest(Context) returned null - no template selected!");

        throw $r3;

     label1:
        return $r2;
    }

    protected org.apache.velocity.Template handleRequest(org.apache.velocity.context.Context) throws java.lang.Exception
    {
        org.apache.velocity.servlet.VelocityServlet r1;
        org.apache.velocity.context.Context r2;
        java.lang.Exception $r0;

        r1 := @this: org.apache.velocity.servlet.VelocityServlet;

        r2 := @parameter0: org.apache.velocity.context.Context;

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>("You must override VelocityServlet.handleRequest( Context)  or VelocityServlet.handleRequest( HttpServletRequest,  HttpServletResponse, Context)");

        throw $r0;
    }

    protected void error(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Exception) throws javax.servlet.ServletException, java.io.IOException
    {
        java.io.PrintWriter $r8;
        org.apache.velocity.servlet.VelocityServlet r5;
        java.io.StringWriter $r7;
        javax.servlet.http.HttpServletResponse r3;
        java.lang.Exception r1;
        javax.servlet.http.HttpServletRequest r6;
        javax.servlet.ServletOutputStream $r10;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r2, $r4, $r9, $r11;

        r5 := @this: org.apache.velocity.servlet.VelocityServlet;

        r6 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: javax.servlet.http.HttpServletResponse;

        r1 := @parameter2: java.lang.Exception;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<html>");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<title>Error</title>");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<body bgcolor=\"#ffffff\">");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<h2>VelocityServlet: Error processing the template</h2>");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<pre>");

        $r2 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<br>");

     label1:
        $r7 = new java.io.StringWriter;

        specialinvoke $r7.<java.io.StringWriter: void <init>()>();

        $r8 = new java.io.PrintWriter;

        specialinvoke $r8.<java.io.PrintWriter: void <init>(java.io.Writer)>($r7);

        virtualinvoke r1.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>($r8);

        $r9 = virtualinvoke $r7.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</pre>");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</body>");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</html>");

        $r10 = interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<javax.servlet.ServletOutputStream: void print(java.lang.String)>($r11);

        return;
    }

    static void <clinit>()
    {
        org.apache.velocity.util.SimplePool $r0;

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String OLD_INIT_PROPS_KEY> = "properties";

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String INIT_PROPS_KEY> = "org.apache.velocity.properties";

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String DEFAULT_OUTPUT_ENCODING> = "ISO-8859-1";

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String DEFAULT_CONTENT_TYPE> = "text/html";

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String CONTENT_TYPE> = "default.contentType";

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String RESPONSE> = "res";

        <org.apache.velocity.servlet.VelocityServlet: java.lang.String REQUEST> = "req";

        $r0 = new org.apache.velocity.util.SimplePool;

        specialinvoke $r0.<org.apache.velocity.util.SimplePool: void <init>(int)>(40);

        <org.apache.velocity.servlet.VelocityServlet: org.apache.velocity.util.SimplePool writerPool> = $r0;

        return;
    }
}
