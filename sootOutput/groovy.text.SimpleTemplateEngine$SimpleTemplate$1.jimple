class groovy.text.SimpleTemplateEngine$SimpleTemplate$1 extends java.lang.Object implements groovy.lang.Writable
{
    private final java.util.Map val$map;
    private final groovy.text.SimpleTemplateEngine$SimpleTemplate this$0;

    void <init>(groovy.text.SimpleTemplateEngine$SimpleTemplate, java.util.Map)
    {
        groovy.text.SimpleTemplateEngine$SimpleTemplate r1;
        groovy.text.SimpleTemplateEngine$SimpleTemplate$1 r0;
        java.util.Map r2;

        r0 := @this: groovy.text.SimpleTemplateEngine$SimpleTemplate$1;

        r1 := @parameter0: groovy.text.SimpleTemplateEngine$SimpleTemplate;

        r2 := @parameter1: java.util.Map;

        r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate$1: groovy.text.SimpleTemplateEngine$SimpleTemplate this$0> = r1;

        r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate$1: java.util.Map val$map> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.Writer writeTo(java.io.Writer)
    {
        java.io.PrintWriter $r8;
        groovy.lang.Script $r5, $r7;
        groovy.text.SimpleTemplateEngine$SimpleTemplate$1 r0;
        java.util.Map $r1, $r3;
        java.io.Writer r9;
        groovy.text.SimpleTemplateEngine$SimpleTemplate $r4;
        java.lang.Class $r6;
        groovy.lang.Binding $r2, $r10, r11;

        r0 := @this: groovy.text.SimpleTemplateEngine$SimpleTemplate$1;

        r9 := @parameter0: java.io.Writer;

        $r1 = r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate$1: java.util.Map val$map>;

        if $r1 != null goto label1;

        $r10 = new groovy.lang.Binding;

        specialinvoke $r10.<groovy.lang.Binding: void <init>()>();

        r11 = $r10;

        goto label2;

     label1:
        $r2 = new groovy.lang.Binding;

        $r3 = r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate$1: java.util.Map val$map>;

        specialinvoke $r2.<groovy.lang.Binding: void <init>(java.util.Map)>($r3);

        r11 = $r2;

     label2:
        $r4 = r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate$1: groovy.text.SimpleTemplateEngine$SimpleTemplate this$0>;

        $r5 = $r4.<groovy.text.SimpleTemplateEngine$SimpleTemplate: groovy.lang.Script script>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.Script createScript(java.lang.Class,groovy.lang.Binding)>($r6, r11);

        $r8 = new java.io.PrintWriter;

        specialinvoke $r8.<java.io.PrintWriter: void <init>(java.io.Writer)>(r9);

        virtualinvoke $r7.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("out", $r8);

        virtualinvoke $r7.<groovy.lang.Script: java.lang.Object run()>();

        virtualinvoke $r8.<java.io.PrintWriter: void flush()>();

        return r9;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        groovy.text.SimpleTemplateEngine$SimpleTemplate$1 r1;
        java.io.StringWriter $r0;

        r1 := @this: groovy.text.SimpleTemplateEngine$SimpleTemplate$1;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        virtualinvoke r1.<groovy.text.SimpleTemplateEngine$SimpleTemplate$1: java.io.Writer writeTo(java.io.Writer)>($r0);

        $r2 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r2;
    }
}
