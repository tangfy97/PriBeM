public final class com.hp.hpl.jena.tdb.base.buffer.PtrBuffer extends com.hp.hpl.jena.tdb.base.buffer.BufferBase
{
    private java.nio.IntBuffer iBuff;

    private void <init>(int)
    {
        int i0, $i1;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        i0 := @parameter0: int;

        $i1 = 4 * i0;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void <init>(java.nio.ByteBuffer,int)>($r1, 0);

        return;
    }

    public void <init>(java.nio.ByteBuffer, int)
    {
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;
        java.nio.ByteBuffer r1;
        java.nio.ByteOrder $r5, $r6;
        java.nio.IntBuffer $r2, $r3;
        com.hp.hpl.jena.tdb.base.record.RecordException $r4;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.BufferBase: void <init>(java.nio.ByteBuffer,int,int)>(r1, 4, i0);

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: java.nio.IntBuffer iBuff> = $r2;

        $z0 = <com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: boolean CheckBuffer>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: java.nio.IntBuffer iBuff>;

        $i1 = virtualinvoke $r3.<java.nio.IntBuffer: int position()>();

        if $i1 != 0 goto label1;

        $r5 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

        $r6 = <com.hp.hpl.jena.tdb.sys.SystemTDB: java.nio.ByteOrder NetworkOrder>;

        if $r5 == $r6 goto label2;

     label1:
        $r4 = new com.hp.hpl.jena.tdb.base.record.RecordException;

        specialinvoke $r4.<com.hp.hpl.jena.tdb.base.record.RecordException: void <init>(java.lang.String)>("Duff pointer buffer");

        throw $r4;

     label2:
        return;
    }

    public int get(int)
    {
        int i0, $i1, $i2;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        i0 := @parameter0: int;

        $i1 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        staticinvoke <com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void checkBounds(int,int)>(i0, $i1);

        $i2 = specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int _get(int)>(i0);

        return $i2;
    }

    public int getHigh()
    {
        int $i0, $i1, $i2, $i3;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        $i0 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        if $i0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty PtrBuffer");

        throw $r1;

     label1:
        $i1 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        $i2 = $i1 - 1;

        $i3 = specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int _get(int)>($i2);

        return $i3;
    }

    public int getLow()
    {
        int $i0, $i1;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        $i0 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        if $i0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty PtrBuffer");

        throw $r1;

     label1:
        $i1 = specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int _get(int)>(0);

        return $i1;
    }

    public void add(int)
    {
        int i0, $i1;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        i0 := @parameter0: int;

        $i1 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void add(int,int)>($i1, i0);

        return;
    }

    public void add(int, int)
    {
        com.hp.hpl.jena.tdb.base.buffer.BufferException $r1;
        java.lang.Object[] $r2;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;
        java.lang.Integer $r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8;
        java.lang.String $r5;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        $i1 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        if i0 == $i1 goto label1;

        $i8 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        staticinvoke <com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void checkBounds(int,int)>(i0, $i8);

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void shiftUp(int)>(i0);

        goto label3;

     label1:
        $i3 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        $i2 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int maxSlot>;

        if $i3 < $i2 goto label2;

        $r1 = new com.hp.hpl.jena.tdb.base.buffer.BufferException;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $i7 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int maxSlot>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Out of bounds: idx=%d, ptrs=%d", $r2);

        specialinvoke $r1.<com.hp.hpl.jena.tdb.base.buffer.BufferException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        $i4 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        $i5 = $i4 + 1;

        r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot> = $i5;

     label3:
        specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void _set(int,int)>(i0, i6);

        return;
    }

    public void set(int, int)
    {
        int i0, $i1, i2;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        staticinvoke <com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void checkBounds(int,int)>(i0, $i1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void _set(int,int)>(i0, i2);

        return;
    }

    private final int _get(int)
    {
        java.nio.IntBuffer $r1;
        int i0, $i1;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: java.nio.IntBuffer iBuff>;

        $i1 = virtualinvoke $r1.<java.nio.IntBuffer: int get(int)>(i0);

        return $i1;
    }

    private final void _set(int, int)
    {
        java.nio.IntBuffer $r1;
        int i0, i1;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: java.nio.IntBuffer iBuff>;

        virtualinvoke $r1.<java.nio.IntBuffer: java.nio.IntBuffer put(int,int)>(i0, i1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1, $r7;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r2;
        java.lang.Integer $r3, $r4, $r8;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder $r0;
        java.lang.String $r5, $r6, $r9;

        r2 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r2.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r3;

        $i1 = r2.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int maxSlot>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Len=%d Max=%d ", $r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i4 = 0;

     label1:
        $i2 = r2.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        if i4 >= $i2 goto label3;

        if i4 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        $i3 = specialinvoke r2.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int _get(int)>(i4);

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%04d", $r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static void checkBounds(int, int)
    {
        com.hp.hpl.jena.tdb.base.buffer.BufferException $r0;
        java.lang.Object[] $r1;
        int i0, i1;
        java.lang.String $r4;
        java.lang.Integer $r2, $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 < i1 goto label2;

     label1:
        $r0 = new com.hp.hpl.jena.tdb.base.buffer.BufferException;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Out of bounds: idx=%d, ptrs=%d", $r1);

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.buffer.BufferException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return;
    }

    public com.hp.hpl.jena.tdb.base.buffer.PtrBuffer duplicate()
    {
        int $i0, $i1, $i2;
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer $r0, r1;

        r1 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        $r0 = new com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        $i0 = r1.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int maxSlot>;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void <init>(int)>($i0);

        $i1 = r1.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int maxSlot>;

        virtualinvoke r1.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: void copy(int,com.hp.hpl.jena.tdb.base.buffer.BufferBase,int,int)>(0, $r0, 0, $i1);

        $i2 = r1.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot>;

        $r0.<com.hp.hpl.jena.tdb.base.buffer.PtrBuffer: int numSlot> = $i2;

        return $r0;
    }

    public volatile void shiftLeft(com.hp.hpl.jena.tdb.base.buffer.BufferBase)
    {
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;
        com.hp.hpl.jena.tdb.base.buffer.BufferBase r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.buffer.BufferBase;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.BufferBase: void shiftLeft(com.hp.hpl.jena.tdb.base.buffer.BufferBase)>(r1);

        return;
    }

    public volatile void shiftRight(com.hp.hpl.jena.tdb.base.buffer.BufferBase)
    {
        com.hp.hpl.jena.tdb.base.buffer.PtrBuffer r0;
        com.hp.hpl.jena.tdb.base.buffer.BufferBase r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.buffer.PtrBuffer;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.buffer.BufferBase;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.buffer.BufferBase: void shiftRight(com.hp.hpl.jena.tdb.base.buffer.BufferBase)>(r1);

        return;
    }
}
