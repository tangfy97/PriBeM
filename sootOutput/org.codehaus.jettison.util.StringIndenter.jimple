public class org.codehaus.jettison.util.StringIndenter extends java.lang.Object
{
    private java.lang.String json;
    private int startTagIndex;
    private int endTagIndex;
    private int currentNumberOfIndents;
    private java.lang.StringBuilder result;

    public java.lang.String result()
    {
        org.codehaus.jettison.util.StringIndenter r0;
        java.lang.RuntimeException $r4, $r5;
        java.lang.StringBuilder $r2, $r6, $r7, $r8;
        java.lang.String $r1, $r3, $r9, $r10;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

     label1:
        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void indent()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem here: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

     label4:
        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        if $r1 != null goto label5;

        return null;

     label5:
        $r2 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r3 != null goto label6;

        $r10 = null;

        goto label7;

     label6:
        $r10 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label7:
        return $r10;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void indent()
    {
        java.lang.StringBuilder $r8, $r11, $r14, $r16;
        org.codehaus.jettison.util.StringIndenter r0;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48, $i50, $i52, $i53;
        char $c13;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        if $r1 != null goto label01;

        return;

     label01:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result> = $r16;

        $i48 = (int) -1;

        r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex> = $i48;

        $i50 = (int) -1;

        r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex> = $i50;

        r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents> = 0;

     label02:
        $i45 = specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: int findStartTagIndex()>();

        r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex> = $i45;

        $i46 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i52 = (int) -1;

        if $i46 != $i52 goto label03;

        $i39 = r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex>;

        $r12 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i40 = virtualinvoke $r12.<java.lang.String: int length()>();

        $i41 = $i40 - 1;

        if $i39 == $i41 goto label12;

        $r14 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $r15 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i42 = r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex>;

        $i43 = $i42 + 1;

        $r13 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i44 = virtualinvoke $r13.<java.lang.String: int length()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r15, $i43, $i44);

        goto label12;

     label03:
        $r3 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i0 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $z0 = staticinvoke <org.codehaus.jettison.util.StringIndenter: boolean instantIndent(java.lang.String,int)>($r3, $i0);

        if $z0 == 0 goto label04;

        $i33 = r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents>;

        $i34 = $i33 + 1;

        r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents> = $i34;

        $i37 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i35 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i36 = $i35 + 1;

        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void printNewlineIndent(int,int)>($i37, $i36);

        $i38 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex> = $i38;

        goto label02;

     label04:
        $r4 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i1 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $z1 = staticinvoke <org.codehaus.jettison.util.StringIndenter: boolean instantUnindentTwoChars(java.lang.String,int)>($r4, $i1);

        if $z1 == 0 goto label05;

        $i26 = r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents>;

        $i27 = $i26 - 1;

        r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents> = $i27;

        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void newlineIndent()>();

        $i30 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i28 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i29 = $i28 + 2;

        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void printNewlineIndent(int,int)>($i30, $i29);

        $i31 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i32 = $i31 + 1;

        r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex> = $i32;

        goto label02;

     label05:
        $r5 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i2 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $z2 = staticinvoke <org.codehaus.jettison.util.StringIndenter: boolean instantUnindent(java.lang.String,int)>($r5, $i2);

        if $z2 == 0 goto label08;

        $i20 = r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents>;

        $i21 = $i20 - 1;

        r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents> = $i21;

        $z4 = specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: boolean onNewline()>();

        if $z4 == 0 goto label06;

        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void unindent()>();

        goto label07;

     label06:
        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void newlineIndent()>();

     label07:
        $i24 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i22 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i23 = $i22 + 1;

        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void printNewlineIndent(int,int)>($i24, $i23);

        $i25 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex> = $i25;

        goto label02;

     label08:
        $r6 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i3 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $z3 = staticinvoke <org.codehaus.jettison.util.StringIndenter: boolean instantNewline(java.lang.String,int)>($r6, $i3);

        if $z3 == 0 goto label09;

        $i18 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i16 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i17 = $i16 + 1;

        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void printNewlineIndent(int,int)>($i18, $i17);

        $i19 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex> = $i19;

        goto label02;

     label09:
        $i4 = specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: int findEndTagIndex()>();

        r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex> = $i4;

        $r8 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $r7 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i7 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i5 = r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex>;

        $i6 = $i5 + 1;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r7, $i7, $i6);

        $i8 = r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex>;

        $r9 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i9 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i10 = $i9 - 1;

        if $i8 < $i10 goto label10;

        goto label02;

     label10:
        $r10 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i11 = r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex>;

        $i12 = $i11 + 1;

        $c13 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i12);

        $i53 = (int) $c13;

        if $i53 != 58 goto label11;

        $r11 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i14 = r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex>;

        $i15 = $i14 + 1;

        r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex> = $i15;

     label11:
        goto label02;

     label12:
        return;
    }

    private boolean onNewline()
    {
        org.codehaus.jettison.util.StringIndenter r0;
        char $c1;
        int $i0, i2, $i3, $i5;
        java.lang.StringBuilder $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label5;

        $r2 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $c1 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 != 10 goto label2;

        return 1;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        return 0;

     label4:
        $i5 = (int) -1;

        i2 = i2 + $i5;

        goto label1;

     label5:
        return 1;
    }

    private static boolean instantIndent(java.lang.String, int)
    {
        int i0, $i2, $i3;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i2 = (int) $c1;

        if $i2 == 123 goto label1;

        $i3 = (int) $c1;

        if $i3 != 91 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean instantNewline(java.lang.String, int)
    {
        int i0, $i2;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i2 = (int) $c1;

        if $i2 != 44 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean instantUnindent(java.lang.String, int)
    {
        int i0, $i2, $i3;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i2 = (int) $c1;

        if $i2 == 125 goto label1;

        $i3 = (int) $c1;

        if $i3 != 93 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean instantUnindentTwoChars(java.lang.String, int)
    {
        char $c1, $c5;
        int i0, $i2, $i3, $i4, $i6, $i7;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if i0 != $i3 goto label1;

        return 0;

     label1:
        $i4 = i0 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i6 = (int) $c1;

        if $i6 != 125 goto label2;

        $i7 = (int) $c5;

        if $i7 != 44 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void printNewlineIndent(int, int)
    {
        org.codehaus.jettison.util.StringIndenter r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, i0, i1);

        specialinvoke r0.<org.codehaus.jettison.util.StringIndenter: void newlineIndent()>();

        return;
    }

    private void newlineIndent()
    {
        org.codehaus.jettison.util.StringIndenter r0;
        int $i0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i0 = r0.<org.codehaus.jettison.util.StringIndenter: int currentNumberOfIndents>;

        $r3 = staticinvoke <org.codehaus.jettison.util.StringIndenter: java.lang.String repeat(java.lang.String,int)>("  ", $i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        return;
    }

    private static java.lang.String repeat(java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        int i0, i1;
        java.lang.String $r1, r2;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    private void unindent()
    {
        org.codehaus.jettison.util.StringIndenter r0;
        char $c2;
        int $i0, $i1, $i3, $i4, i5, $i6;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        i5 = 0;

     label1:
        if i5 >= 2 goto label3;

        $r2 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i1 = $i0 - 1;

        $c2 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>($i1);

        $i6 = (int) $c2;

        if $i6 != 32 goto label2;

        $r4 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $r3 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.StringBuilder result>;

        $i3 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        $i4 = $i3 - 1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i4);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    private int findStartTagIndex()
    {
        org.codehaus.jettison.util.StringIndenter r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i0 = r0.<org.codehaus.jettison.util.StringIndenter: int endTagIndex>;

        $i1 = $i0 + 1;

        $i2 = staticinvoke <org.codehaus.jettison.util.StringIndenter: int findNextStartTagIndex(java.lang.String,int)>($r1, $i1);

        return $i2;
    }

    private int findEndTagIndex()
    {
        org.codehaus.jettison.util.StringIndenter r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        $r1 = r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json>;

        $i0 = r0.<org.codehaus.jettison.util.StringIndenter: int startTagIndex>;

        $i1 = $i0 + 1;

        $i2 = staticinvoke <org.codehaus.jettison.util.StringIndenter: int findNextEndTagIndex(java.lang.String,int)>($r1, $i1);

        return $i2;
    }

    private static int findNextStartTagIndex(java.lang.String, int)
    {
        int $i0, i1, i3, $i5;
        char $c2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = i1;

     label1:
        if i3 >= $i0 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        return i3;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $i5 = (int) -1;

        return $i5;
    }

    private static int findNextEndTagIndex(java.lang.String, int)
    {
        int $i0, i1, $i2, $i4, $i5, $i6, i8, i9, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String r0;
        boolean z0, $z1, $z2, z4, $z5, $z6;
        char $c3, $c7, $c10;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i1 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i12 = (int) $c3;

        if $i12 != 34 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $i14 = (int) -1;

        i8 = $i14;

        i9 = i1;

     label03:
        if i9 >= $i0 goto label10;

        if i9 == i8 goto label04;

        if i9 == i1 goto label04;

        $i6 = i9 - 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i15 = (int) $c7;

        if $i15 != 92 goto label04;

        $z6 = 1;

        $z5 = 1;

        goto label05;

     label04:
        $z6 = 0;

        $z5 = 0;

     label05:
        z4 = $z6;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        if $z5 != 0 goto label06;

        $i16 = (int) $c10;

        if $i16 != 92 goto label06;

        i8 = i9 + 2;

     label06:
        if z0 != 0 goto label08;

        $i17 = (int) $c10;

        if $i17 == 58 goto label07;

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c10);

        if $z1 != 0 goto label07;

        $i18 = (int) $c10;

        if $i18 == 93 goto label07;

        $i19 = (int) $c10;

        if $i19 == 125 goto label07;

        $i20 = (int) $c10;

        if $i20 != 44 goto label09;

     label07:
        $i11 = i9 - 1;

        return $i11;

     label08:
        if z4 != 0 goto label09;

        $i21 = (int) $c10;

        if $i21 != 34 goto label09;

        return i9;

     label09:
        i9 = i9 + 1;

        goto label03;

     label10:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        return $i5;
    }

    public void <init>(java.lang.String)
    {
        org.codehaus.jettison.util.StringIndenter r0;
        java.lang.String r1, $r2;

        r0 := @this: org.codehaus.jettison.util.StringIndenter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = "";

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

     label2:
        r0.<org.codehaus.jettison.util.StringIndenter: java.lang.String json> = $r2;

        return;
    }
}
