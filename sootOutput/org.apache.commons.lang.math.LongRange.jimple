public final class org.apache.commons.lang.math.LongRange extends org.apache.commons.lang.math.Range implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final long min;
    private final long max;
    private transient java.lang.Long minObject;
    private transient java.lang.Long maxObject;
    private transient int hashCode;
    private transient java.lang.String toString;

    public void <init>(long)
    {
        long l0;
        org.apache.commons.lang.math.LongRange r0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.lang.math.Range: void <init>()>();

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = 0;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.String toString> = null;

        r0.<org.apache.commons.lang.math.LongRange: long min> = l0;

        r0.<org.apache.commons.lang.math.LongRange: long max> = l0;

        return;
    }

    public void <init>(java.lang.Number)
    {
        org.apache.commons.lang.math.LongRange r0;
        long $l0, $l1;
        java.lang.IllegalArgumentException $r4;
        java.lang.Long $r2, $r3;
        java.lang.Number r1;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        r1 := @parameter0: java.lang.Number;

        specialinvoke r0.<org.apache.commons.lang.math.Range: void <init>()>();

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = 0;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.String toString> = null;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The number must not be null");

        throw $r4;

     label1:
        $l0 = virtualinvoke r1.<java.lang.Number: long longValue()>();

        r0.<org.apache.commons.lang.math.LongRange: long min> = $l0;

        $l1 = virtualinvoke r1.<java.lang.Number: long longValue()>();

        r0.<org.apache.commons.lang.math.LongRange: long max> = $l1;

        $z0 = r1 instanceof java.lang.Long;

        if $z0 == 0 goto label2;

        $r2 = (java.lang.Long) r1;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = $r2;

        $r3 = (java.lang.Long) r1;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = $r3;

     label2:
        return;
    }

    public void <init>(long, long)
    {
        org.apache.commons.lang.math.LongRange r0;
        byte $b2;
        int $i3;
        long l0, l1;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        l1 := @parameter0: long;

        l0 := @parameter1: long;

        specialinvoke r0.<org.apache.commons.lang.math.Range: void <init>()>();

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = 0;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.String toString> = null;

        $b2 = l0 cmp l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        r0.<org.apache.commons.lang.math.LongRange: long min> = l0;

        r0.<org.apache.commons.lang.math.LongRange: long max> = l1;

        goto label2;

     label1:
        r0.<org.apache.commons.lang.math.LongRange: long min> = l1;

        r0.<org.apache.commons.lang.math.LongRange: long max> = l0;

     label2:
        return;
    }

    public void <init>(java.lang.Number, java.lang.Number)
    {
        org.apache.commons.lang.math.LongRange r0;
        long $l0, $l1;
        byte $b2;
        java.lang.Long $r4, $r5, $r6, $r7;
        int $i3;
        java.lang.Number r1, r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        r1 := @parameter0: java.lang.Number;

        r3 := @parameter1: java.lang.Number;

        specialinvoke r0.<org.apache.commons.lang.math.Range: void <init>()>();

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = null;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = 0;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.String toString> = null;

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The numbers must not be null");

        throw $r8;

     label2:
        $l0 = virtualinvoke r1.<java.lang.Number: long longValue()>();

        $l1 = virtualinvoke r3.<java.lang.Number: long longValue()>();

        $b2 = $l1 cmp $l0;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label4;

        r0.<org.apache.commons.lang.math.LongRange: long min> = $l1;

        r0.<org.apache.commons.lang.math.LongRange: long max> = $l0;

        $z2 = r3 instanceof java.lang.Long;

        if $z2 == 0 goto label3;

        $r7 = (java.lang.Long) r3;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = $r7;

     label3:
        $z3 = r1 instanceof java.lang.Long;

        if $z3 == 0 goto label6;

        $r6 = (java.lang.Long) r1;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = $r6;

        goto label6;

     label4:
        r0.<org.apache.commons.lang.math.LongRange: long min> = $l0;

        r0.<org.apache.commons.lang.math.LongRange: long max> = $l1;

        $z0 = r1 instanceof java.lang.Long;

        if $z0 == 0 goto label5;

        $r5 = (java.lang.Long) r1;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = $r5;

     label5:
        $z1 = r3 instanceof java.lang.Long;

        if $z1 == 0 goto label6;

        $r4 = (java.lang.Long) r3;

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = $r4;

     label6:
        return;
    }

    public java.lang.Number getMinimumNumber()
    {
        org.apache.commons.lang.math.LongRange r0;
        java.lang.Long $r1, $r2, $r3;
        long $l0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $r1 = r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject>;

        if $r1 != null goto label1;

        $r3 = new java.lang.Long;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        specialinvoke $r3.<java.lang.Long: void <init>(long)>($l0);

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.lang.math.LongRange: java.lang.Long minObject>;

        return $r2;
    }

    public long getMinimumLong()
    {
        long $l0;
        org.apache.commons.lang.math.LongRange r0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        return $l0;
    }

    public int getMinimumInteger()
    {
        int $i1;
        long $l0;
        org.apache.commons.lang.math.LongRange r0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $i1 = (int) $l0;

        return $i1;
    }

    public double getMinimumDouble()
    {
        long $l0;
        org.apache.commons.lang.math.LongRange r0;
        double $d0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $d0 = (double) $l0;

        return $d0;
    }

    public float getMinimumFloat()
    {
        float $f0;
        long $l0;
        org.apache.commons.lang.math.LongRange r0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $f0 = (float) $l0;

        return $f0;
    }

    public java.lang.Number getMaximumNumber()
    {
        org.apache.commons.lang.math.LongRange r0;
        java.lang.Long $r1, $r2, $r3;
        long $l0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $r1 = r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject>;

        if $r1 != null goto label1;

        $r3 = new java.lang.Long;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        specialinvoke $r3.<java.lang.Long: void <init>(long)>($l0);

        r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.lang.math.LongRange: java.lang.Long maxObject>;

        return $r2;
    }

    public long getMaximumLong()
    {
        long $l0;
        org.apache.commons.lang.math.LongRange r0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        return $l0;
    }

    public int getMaximumInteger()
    {
        int $i1;
        long $l0;
        org.apache.commons.lang.math.LongRange r0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        $i1 = (int) $l0;

        return $i1;
    }

    public double getMaximumDouble()
    {
        long $l0;
        org.apache.commons.lang.math.LongRange r0;
        double $d0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        $d0 = (double) $l0;

        return $d0;
    }

    public float getMaximumFloat()
    {
        float $f0;
        long $l0;
        org.apache.commons.lang.math.LongRange r0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        $f0 = (float) $l0;

        return $f0;
    }

    public boolean containsNumber(java.lang.Number)
    {
        org.apache.commons.lang.math.LongRange r1;
        long $l0;
        java.lang.Number r0;
        boolean $z0;

        r1 := @this: org.apache.commons.lang.math.LongRange;

        r0 := @parameter0: java.lang.Number;

        if r0 != null goto label1;

        return 0;

     label1:
        $l0 = virtualinvoke r0.<java.lang.Number: long longValue()>();

        $z0 = virtualinvoke r1.<org.apache.commons.lang.math.LongRange: boolean containsLong(long)>($l0);

        return $z0;
    }

    public boolean containsLong(long)
    {
        org.apache.commons.lang.math.LongRange r0;
        long l0, $l1, $l3;
        byte $b2, $b4;
        int $i5, $i6;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        l0 := @parameter0: long;

        $l1 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $b2 = l0 cmp $l1;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $l3 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        $b4 = l0 cmp $l3;

        $i6 = (int) $b4;

        if $i6 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsRange(org.apache.commons.lang.math.Range)
    {
        org.apache.commons.lang.math.LongRange r1;
        long $l0, $l1;
        org.apache.commons.lang.math.Range r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.lang.math.LongRange;

        r0 := @parameter0: org.apache.commons.lang.math.Range;

        if r0 != null goto label1;

        return 0;

     label1:
        $l0 = virtualinvoke r0.<org.apache.commons.lang.math.Range: long getMinimumLong()>();

        $z0 = virtualinvoke r1.<org.apache.commons.lang.math.LongRange: boolean containsLong(long)>($l0);

        if $z0 == 0 goto label2;

        $l1 = virtualinvoke r0.<org.apache.commons.lang.math.Range: long getMaximumLong()>();

        $z1 = virtualinvoke r1.<org.apache.commons.lang.math.LongRange: boolean containsLong(long)>($l1);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean overlapsRange(org.apache.commons.lang.math.Range)
    {
        org.apache.commons.lang.math.LongRange r1;
        long $l0, $l1, $l2;
        org.apache.commons.lang.math.Range r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.apache.commons.lang.math.LongRange;

        r0 := @parameter0: org.apache.commons.lang.math.Range;

        if r0 != null goto label1;

        return 0;

     label1:
        $l0 = r1.<org.apache.commons.lang.math.LongRange: long min>;

        $z0 = virtualinvoke r0.<org.apache.commons.lang.math.Range: boolean containsLong(long)>($l0);

        if $z0 != 0 goto label2;

        $l1 = r1.<org.apache.commons.lang.math.LongRange: long max>;

        $z1 = virtualinvoke r0.<org.apache.commons.lang.math.Range: boolean containsLong(long)>($l1);

        if $z1 != 0 goto label2;

        $l2 = virtualinvoke r0.<org.apache.commons.lang.math.Range: long getMinimumLong()>();

        $z2 = virtualinvoke r1.<org.apache.commons.lang.math.LongRange: boolean containsLong(long)>($l2);

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.lang.math.LongRange r1, r2;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.lang.math.LongRange;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.apache.commons.lang.math.LongRange;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.lang.math.LongRange) r0;

        $l1 = r1.<org.apache.commons.lang.math.LongRange: long min>;

        $l0 = r2.<org.apache.commons.lang.math.LongRange: long min>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $l4 = r1.<org.apache.commons.lang.math.LongRange: long max>;

        $l3 = r2.<org.apache.commons.lang.math.LongRange: long max>;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        org.apache.commons.lang.math.LongRange r0;
        long $l7, $l8, $l9, $l10, $l15, $l16, $l17, $l18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i11, $i12, $i13, $i14, $i19, $i20, $i21;
        java.lang.Class $r1;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $i0 = r0.<org.apache.commons.lang.math.LongRange: int hashCode>;

        if $i0 != 0 goto label1;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = 17;

        $i2 = r0.<org.apache.commons.lang.math.LongRange: int hashCode>;

        $i3 = 37 * $i2;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i4 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i5 = $i3 + $i4;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = $i5;

        $i6 = r0.<org.apache.commons.lang.math.LongRange: int hashCode>;

        $i12 = 37 * $i6;

        $l9 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $l7 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $l8 = $l7 >> 32;

        $l10 = $l9 ^ $l8;

        $i11 = (int) $l10;

        $i13 = $i12 + $i11;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = $i13;

        $i14 = r0.<org.apache.commons.lang.math.LongRange: int hashCode>;

        $i20 = 37 * $i14;

        $l17 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        $l15 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        $l16 = $l15 >> 32;

        $l18 = $l17 ^ $l16;

        $i19 = (int) $l18;

        $i21 = $i20 + $i19;

        r0.<org.apache.commons.lang.math.LongRange: int hashCode> = $i21;

     label1:
        $i1 = r0.<org.apache.commons.lang.math.LongRange: int hashCode>;

        return $i1;
    }

    public java.lang.String toString()
    {
        org.apache.commons.lang.math.LongRange r0;
        java.lang.StringBuffer $r3;
        long $l0, $l1;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $r1 = r0.<org.apache.commons.lang.math.LongRange: java.lang.String toString>;

        if $r1 != null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>(32);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Range[");

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $l1 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.commons.lang.math.LongRange: java.lang.String toString> = $r4;

     label1:
        $r2 = r0.<org.apache.commons.lang.math.LongRange: java.lang.String toString>;

        return $r2;
    }

    public long[] toArray()
    {
        org.apache.commons.lang.math.LongRange r0;
        long $l0, $l1, $l2, $l3, $l6, $l7, $l8;
        long[] r1;
        int $i4, $i5, i9;

        r0 := @this: org.apache.commons.lang.math.LongRange;

        $l1 = r0.<org.apache.commons.lang.math.LongRange: long max>;

        $l0 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $l2 = $l1 - $l0;

        $l3 = $l2 + 1L;

        $i4 = (int) $l3;

        r1 = newarray (long)[$i4];

        i9 = 0;

     label1:
        $i5 = lengthof r1;

        if i9 >= $i5 goto label2;

        $l7 = r0.<org.apache.commons.lang.math.LongRange: long min>;

        $l6 = (long) i9;

        $l8 = $l7 + $l6;

        r1[i9] = $l8;

        i9 = i9 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang.math.LongRange: long serialVersionUID> = 71849363892720L;

        return;
    }
}
