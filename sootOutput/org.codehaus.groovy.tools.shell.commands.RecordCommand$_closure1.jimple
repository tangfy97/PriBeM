class org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$io$File;
    static java.lang.Class class$java$io$PrintWriter;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand;
    static java.lang.Class class$java$util$Date;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1 r2;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;

        r2 := @this: org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        java.lang.Integer $r10, $r58;
        java.io.PrintWriter $r18;
        java.lang.Object[] $r36, $r38, $r47, $r52, $r57, $r81, $r83, $r99, $r101;
        java.lang.String $r64;
        java.io.File $r34;
        groovy.lang.Reference $r1;
        org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1 r5;
        boolean $z0, $z1;
        org.codehaus.groovy.runtime.GStringImpl $r37, $r100;
        java.lang.String[] $r40, $r103;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r68;
        java.lang.Object r0, $r6, $r8, $r9, $r14, $r15, $r17, $r21, $r32, $r33, $r39, $r56, $r59, $r63, $r69, $r74, $r75, $r80, $r90, $r91, $r97, $r98, $r102, $r104;
        java.lang.Class $r2, r3, $r4, $r7, $r11, $r12, $r13, $r16, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r35, $r41, $r42, $r43, $r44, $r45, $r46, $r48, $r49, $r50, $r51, $r53, $r54, $r55, $r60, $r61, $r62, $r65, $r66, $r67, $r70, $r71, $r72, $r73, $r76, $r77, $r78, $r79, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r92, $r93, $r94, $r95, $r96;

        r5 := @this: org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r41 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$0> = $r41;

        goto label02;

     label01:
        $r41 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$0>;

     label02:
        r3 = $r41;

        $r4 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label03;

        $r42 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r42;

        goto label04;

     label03:
        $r42 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "recording");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r6);

        if $z0 == 0 goto label05;

        $r36 = newarray (java.lang.Object)[1];

        $r37 = new org.codehaus.groovy.runtime.GStringImpl;

        $r38 = newarray (java.lang.Object)[1];

        $r39 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "file");

        $r38[0] = $r39;

        $r40 = newarray (java.lang.String)[2];

        $r40[0] = "Already recording to: ";

        $r40[1] = "";

        specialinvoke $r37.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r38, $r40);

        $r36[0] = $r37;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r5, "fail", $r36);

        goto label05;

     label05:
        $r7 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r7 != null goto label06;

        $r43 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r43;

        goto label07;

     label06:
        $r43 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label07:
        $r8 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r43, $r8, "size");

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(1);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z1 == 0 goto label14;

        $r30 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r30 != null goto label08;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r44 = $r35;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r35;

        goto label09;

     label08:
        $r44 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label09:
        $r31 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File>;

        if $r31 != null goto label10;

        $r45 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("java.io.File");

        $r46 = $r45;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File> = $r45;

        goto label11;

     label10:
        $r46 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File>;

     label11:
        $r47 = newarray (java.lang.Object)[2];

        $r47[0] = "groovysh-";

        $r47[1] = ".txt";

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r44, $r46, "createTempFile", $r47);

        $r48 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File>;

        if $r48 != null goto label12;

        $r49 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File> = $r49;

        goto label13;

     label12:
        $r49 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File>;

     label13:
        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r32, $r49);

        $r34 = (java.io.File) $r33;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectProperty(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r34, r3, r5, "file");

        goto label25;

     label14:
        $r11 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r11 != null goto label15;

        $r29 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r50 = $r29;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r29;

        goto label16;

     label15:
        $r50 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label16:
        $r12 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File>;

        if $r12 != null goto label17;

        $r28 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("java.io.File");

        $r51 = $r28;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File> = $r28;

        goto label18;

     label17:
        $r51 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$File>;

     label18:
        $r52 = newarray (java.lang.Object)[1];

        $r53 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r53 != null goto label19;

        $r54 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r55 = $r54;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r54;

        goto label20;

     label19:
        $r55 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label20:
        $r56 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r57 = newarray (java.lang.Object)[1];

        $r58 = new java.lang.Integer;

        specialinvoke $r58.<java.lang.Integer: void <init>(int)>(0);

        $r57[0] = $r58;

        $r59 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r55, $r56, "getAt", $r57);

        $r60 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$lang$String>;

        if $r60 != null goto label21;

        $r61 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r62 = $r61;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$lang$String> = $r61;

        goto label22;

     label21:
        $r62 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$lang$String>;

     label22:
        $r63 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r59, $r62);

        $r64 = (java.lang.String) $r63;

        $r65 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$lang$String>;

        if $r65 != null goto label23;

        $r66 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r67 = $r66;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$lang$String> = $r66;

        goto label24;

     label23:
        $r67 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$lang$String>;

     label24:
        $r68 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r64, $r67);

        $r52[0] = $r68;

        $r69 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>($r50, $r51, $r52);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectProperty(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r69, r3, r5, "file");

     label25:
        $r70 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r70 != null goto label26;

        $r27 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r71 = $r27;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r27;

        goto label27;

     label26:
        $r71 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label27:
        $r13 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r13 != null goto label28;

        $r72 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r73 = $r72;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r72;

        goto label29;

     label28:
        $r73 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label29:
        $r74 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "file");

        $r75 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r73, $r74, "parentFile");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r71, $r75, "mkdirs");

        $r76 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r76 != null goto label30;

        $r77 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r77;

        goto label31;

     label30:
        $r77 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label31:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "file");

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r77, $r14, "newPrintWriter");

        $r16 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$PrintWriter>;

        if $r16 != null goto label32;

        $r78 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$PrintWriter> = $r78;

        goto label33;

     label32:
        $r78 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$io$PrintWriter>;

     label33:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r78);

        $r18 = (java.io.PrintWriter) $r17;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectProperty(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r18, r3, r5, "writer");

        $r19 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r19 != null goto label34;

        $r26 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r79 = $r26;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r26;

        goto label35;

     label34:
        $r79 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label35:
        $r80 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "writer");

        $r81 = newarray (java.lang.Object)[1];

        $r20 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r20 != null goto label36;

        $r25 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r82 = $r25;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r25;

        goto label37;

     label36:
        $r82 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label37:
        $r83 = newarray (java.lang.Object)[1];

        $r84 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r84 != null goto label38;

        $r85 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r86 = $r85;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r85;

        goto label39;

     label38:
        $r86 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label39:
        $r87 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$util$Date>;

        if $r87 != null goto label40;

        $r88 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("java.util.Date");

        $r89 = $r88;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$util$Date> = $r88;

        goto label41;

     label40:
        $r89 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$java$util$Date>;

     label41:
        $r90 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>($r86, $r89);

        $r83[0] = $r90;

        $r91 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r82, "// OPENED: ", "plus", $r83);

        $r81[0] = $r91;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r79, $r80, "println", $r81);

        $r92 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r92 != null goto label42;

        $r93 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r93;

        goto label43;

     label42:
        $r93 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label43:
        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "writer");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r93, $r21, "flush");

        $r22 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r22 != null goto label44;

        $r24 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r94 = $r24;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r24;

        goto label45;

     label44:
        $r94 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label45:
        $r23 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r23 != null goto label46;

        $r95 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r96 = $r95;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r95;

        goto label47;

     label46:
        $r96 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label47:
        $r97 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "io");

        $r98 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r96, $r97, "out");

        $r99 = newarray (java.lang.Object)[1];

        $r100 = new org.codehaus.groovy.runtime.GStringImpl;

        $r101 = newarray (java.lang.Object)[1];

        $r102 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "file");

        $r101[0] = $r102;

        $r103 = newarray (java.lang.String)[2];

        $r103[0] = "Recording session to: ";

        $r103[1] = "";

        specialinvoke $r100.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r101, $r103);

        $r99[0] = $r100;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r94, $r98, "println", $r99);

        $r104 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r5, "file");

        return $r104;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
