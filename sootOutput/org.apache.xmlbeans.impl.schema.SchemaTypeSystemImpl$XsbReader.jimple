class org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader extends java.lang.Object
{
    java.io.DataInputStream _input;
    java.io.DataOutputStream _output;
    org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool;
    java.lang.String _handle;
    private int _majorver;
    private int _minorver;
    private int _releaseno;
    int _actualfiletype;
    static final boolean $assertionsDisabled;
    private final org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0;

    public void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl, java.lang.String, int)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;
        java.lang.StringBuffer $r4, $r6, $r7, $r18, $r19, $r20, $r21, $r26, $r27, $r32, $r33, $r38, $r39, $r46, $r47, $r50, $r51, $r55, $r57, $r59, $r61;
        java.lang.String $r3, r5, $r8, $r12, $r13, $r22, $r23, $r28, $r29, $r34, $r35, $r40, $r41, $r43, $r48, $r49;
        boolean $z0;
        java.io.DataInputStream $r14, $r53;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool $r15, $r63;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i13;
        org.apache.xmlbeans.SchemaTypeLoaderException $r52, $r54, $r56, $r58, $r60, $r62;
        java.io.InputStream $r9;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r5 := @parameter1: java.lang.String;

        i7 := @parameter2: int;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$000(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        $r4 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsb");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.InputStream getLoaderStream(java.lang.String)>($r8);

        if $r9 != null goto label1;

        $r52 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XML-BEANS compiled schema: Could not locate compiled schema resource ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        $r49 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r52.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r48, $r49, r5, 0);

        throw $r52;

     label1:
        $r53 = new java.io.DataInputStream;

        specialinvoke $r53.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r9);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input> = $r53;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle> = r5;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readInt()>();

        if $i0 == -629491010 goto label2;

        $r54 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r43 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r54.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("XML-BEANS compiled schema: Wrong magic cookie", $r43, r5, 1);

        throw $r54;

     label2:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _majorver> = $i1;

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver> = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _majorver>;

        if $i3 == 2 goto label3;

        $r56 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XML-BEANS compiled schema: Wrong major version - expecting 2, got ");

        $i11 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _majorver>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i11);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        $r41 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r56.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r40, $r41, r5, 2);

        throw $r56;

     label3:
        $i4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        if $i4 <= 24 goto label4;

        $r58 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XML-BEANS compiled schema: Incompatible minor version - expecting up to 24, got ");

        $i10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        $r35 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r58.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r34, $r35, r5, 3);

        throw $r58;

     label4:
        $i5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        if $i5 >= 14 goto label5;

        $r60 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XML-BEANS compiled schema: Incompatible minor version - expecting at least 14, got ");

        $i9 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r29 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r60.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r28, $r29, r5, 3);

        throw $r60;

     label5:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 18, 0);

        if $z0 == 0 goto label6;

        $i8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _releaseno> = $i8;

     label6:
        $i6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i6 == i7 goto label7;

        $i13 = (int) 65535;

        if i7 == $i13 goto label7;

        $r62 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XML-BEANS compiled schema: File has the wrong type - expecting type ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", got type ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r62.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r22, $r23, r5, 4);

        throw $r62;

     label7:
        $r63 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool;

        $r12 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r63.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: void <init>(java.lang.String,java.lang.String)>($r12, $r13);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool> = $r63;

        $r15 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool>;

        $r14 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        virtualinvoke $r15.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: void readFrom(java.io.DataInputStream)>($r14);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _actualfiletype> = $i6;

        return;
    }

    protected boolean atLeast(int, int, int)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int i0, $i1, $i2, i3, $i4, $i5, i6, $i7;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i6 := @parameter2: int;

        $i1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _majorver>;

        if $i1 <= i0 goto label1;

        return 1;

     label1:
        $i2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _majorver>;

        if $i2 >= i0 goto label2;

        return 0;

     label2:
        $i4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        if $i4 <= i3 goto label3;

        return 1;

     label3:
        $i5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        if $i5 >= i3 goto label4;

        return 0;

     label4:
        $i7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _releaseno>;

        if $i7 < i6 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    protected boolean atMost(int, int, int)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int i0, $i1, $i2, i3, $i4, $i5, i6, $i7;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i6 := @parameter2: int;

        $i1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _majorver>;

        if $i1 <= i0 goto label1;

        return 0;

     label1:
        $i2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _majorver>;

        if $i2 >= i0 goto label2;

        return 1;

     label2:
        $i4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        if $i4 <= i3 goto label3;

        return 0;

     label3:
        $i5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _minorver>;

        if $i5 >= i3 goto label4;

        return 1;

     label4:
        $i7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _releaseno>;

        if $i7 > i6 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    int getActualFiletype()
    {
        int $i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int _actualfiletype>;

        return $i0;
    }

    void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;
        java.lang.String r2, $r4, $r5;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter1: java.lang.String;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle> = r2;

        $r3 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>(r1);

        specialinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool> = $r3;

        return;
    }

    void writeRealHeader(java.lang.String, int)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool $r11;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r17;
        java.io.DataOutputStream $r9, $r10;
        java.lang.StringBuffer $r1, $r5, $r6, $r7, $r13, $r14, $r15, $r19, $r20, $r21;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r2;
        int $i0, i1;
        java.lang.String r0, $r4, $r16, $r18, r22;
        java.io.OutputStream $r8;
        org.apache.xmlbeans.SchemaTypeLoaderException $r12;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        if $i0 < 0 goto label1;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsb");

        r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$000(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsb");

        r22 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r8 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.OutputStream getSaverStream(java.lang.String)>(r22);

        if $r8 != null goto label3;

        $r12 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not write compiled schema resource ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r17 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r17);

        specialinvoke $r12.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r16, $r18, r0, 12);

        throw $r12;

     label3:
        $r9 = new java.io.DataOutputStream;

        specialinvoke $r9.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r8);

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output> = $r9;

        r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle> = r0;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>(-629491010);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(2);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(24);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(0);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(i1);

        $r11 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool>;

        $r10 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        virtualinvoke $r11.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: void writeTo(java.io.DataOutputStream)>($r10);

        return;
    }

    void readEnd()
    {
        java.io.DataInputStream $r1, $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        java.io.IOException $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        virtualinvoke $r2.<java.io.DataInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input> = null;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool> = null;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void writeEnd()
    {
        java.io.IOException $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r7;
        java.io.DataOutputStream $r1, $r2, $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r5;
        java.lang.String $r6, $r8, $r9;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        virtualinvoke $r2.<java.io.DataOutputStream: void flush()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        virtualinvoke $r3.<java.io.DataOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r6 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r7);

        $r9 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r5.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r6, $r8, $r9, 9);

        throw $r5;

     label4:
        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output> = null;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool> = null;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    int fileTypeFromComponentType(int)
    {
        int i0;
        java.lang.IllegalStateException $r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label7;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label4;
            default: goto label7;
        };

     label1:
        return 2;

     label2:
        return 3;

     label3:
        return 4;

     label4:
        return 6;

     label5:
        return 7;

     label6:
        return 8;

     label7:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected component type");

        throw $r0;
    }

    void writeIndexData()
    {
        org.apache.xmlbeans.SchemaType[] $r14, $r16, $r18, $r24;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r10, $r28;
        org.apache.xmlbeans.SchemaGlobalElement[] $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        java.util.Map $r20;
        org.apache.xmlbeans.SchemaModelGroup[] $r8, $r26;
        org.apache.xmlbeans.SchemaGlobalAttribute[] $r6;
        org.apache.xmlbeans.SchemaAnnotation[] $r30;
        org.apache.xmlbeans.SchemaIdentityConstraint[] $r12;
        java.util.Set $r22;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool access$200(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandlePool(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>($r2);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalElement[] globalElements()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r4);

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaGlobalAttribute[] globalAttributes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r6);

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] modelGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r8);

        $r9 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] attributeGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r10);

        $r11 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r12 = virtualinvoke $r11.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaIdentityConstraint[] identityConstraints()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r12);

        $r13 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r14 = virtualinvoke $r13.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] globalTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r14);

        $r15 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r16 = virtualinvoke $r15.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] documentTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeDocumentTypeMap(org.apache.xmlbeans.SchemaType[])>($r16);

        $r17 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r18 = virtualinvoke $r17.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] attributeTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAttributeTypeMap(org.apache.xmlbeans.SchemaType[])>($r18);

        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map access$300(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r19);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeClassnameMap(java.util.Map)>($r20);

        $r21 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r22 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Set access$400(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r21);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeNamespaces(java.util.Set)>($r22);

        $r23 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r24 = virtualinvoke $r23.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaType[] redefinedGlobalTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r24);

        $r25 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r26 = virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaModelGroup[] redefinedModelGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r26);

        $r27 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r28 = virtualinvoke $r27.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAttributeGroup[] redefinedAttributeGroups()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])>($r28);

        $r29 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r30 = virtualinvoke $r29.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaAnnotation[] annotations()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotations(org.apache.xmlbeans.SchemaAnnotation[])>($r30);

        return;
    }

    void writeHandlePool(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)
    {
        java.util.Iterator $r5;
        java.util.Set $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        java.util.Map $r2, $r3, $r8;
        int $i0, $i1, $i2;
        java.lang.Object $r6, $r9;
        org.apache.xmlbeans.SchemaComponent r7;
        java.lang.String r10;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map access$500(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map access$500(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>(r1);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.xmlbeans.SchemaComponent) $r6;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map access$500(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>(r1);

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r10 = (java.lang.String) $r9;

        $i1 = interfaceinvoke r7.<org.apache.xmlbeans.SchemaComponent: int getComponentType()>();

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int fileTypeFromComponentType(int)>($i1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(r10);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i2);

        goto label1;

     label2:
        return;
    }

    void readHandlePool(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)
    {
        java.lang.IllegalStateException $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r28;
        java.util.Map $r1, $r31;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r8;
        boolean $z0;
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r17;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r0;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r5;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r11;
        java.lang.StringBuffer $r24, $r25, $r26;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r3;
        org.apache.xmlbeans.SchemaType$Ref $r20;
        int $i0, $i1, $i2, i3;
        java.lang.String $r4, $r27, $r29;
        org.apache.xmlbeans.SchemaGlobalAttribute$Ref $r14;
        org.apache.xmlbeans.SchemaComponent$Ref r30;
        org.apache.xmlbeans.SchemaTypeLoaderException $r23;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map access$600(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>(r0);

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 != 0 goto label01;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: boolean access$700(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>(r0);

        if $z0 == 0 goto label02;

     label01:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Nonempty handle set before read");

        throw $r2;

     label02:
        $i1 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i3 = 0;

     label03:
        if i3 >= $i1 goto label12;

        $r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $i2 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        tableswitch($i2)
        {
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label10;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            default: goto label10;
        };

     label04:
        $r20 = new org.apache.xmlbeans.SchemaType$Ref;

        $r21 = r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r22 = virtualinvoke $r21.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        specialinvoke $r20.<org.apache.xmlbeans.SchemaType$Ref: void <init>(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)>($r22, $r4);

        r30 = $r20;

        goto label11;

     label05:
        $r17 = new org.apache.xmlbeans.SchemaGlobalElement$Ref;

        $r18 = r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r19 = virtualinvoke $r18.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        specialinvoke $r17.<org.apache.xmlbeans.SchemaGlobalElement$Ref: void <init>(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)>($r19, $r4);

        r30 = $r17;

        goto label11;

     label06:
        $r14 = new org.apache.xmlbeans.SchemaGlobalAttribute$Ref;

        $r15 = r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r16 = virtualinvoke $r15.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        specialinvoke $r14.<org.apache.xmlbeans.SchemaGlobalAttribute$Ref: void <init>(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)>($r16, $r4);

        r30 = $r14;

        goto label11;

     label07:
        $r11 = new org.apache.xmlbeans.SchemaModelGroup$Ref;

        $r12 = r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r13 = virtualinvoke $r12.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        specialinvoke $r11.<org.apache.xmlbeans.SchemaModelGroup$Ref: void <init>(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)>($r13, $r4);

        r30 = $r11;

        goto label11;

     label08:
        $r8 = new org.apache.xmlbeans.SchemaAttributeGroup$Ref;

        $r9 = r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        specialinvoke $r8.<org.apache.xmlbeans.SchemaAttributeGroup$Ref: void <init>(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)>($r10, $r4);

        r30 = $r8;

        goto label11;

     label09:
        $r5 = new org.apache.xmlbeans.SchemaIdentityConstraint$Ref;

        $r6 = r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r7 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        specialinvoke $r5.<org.apache.xmlbeans.SchemaIdentityConstraint$Ref: void <init>(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)>($r7, $r4);

        r30 = $r5;

        goto label11;

     label10:
        $r23 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Schema index has an unrecognized entry of type ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        $r28 = r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r29 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r28);

        specialinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r27, $r29, $r4, 5);

        throw $r23;

     label11:
        $r31 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map access$600(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)>(r0);

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r30);

        i3 = i3 + 1;

        goto label03;

     label12:
        return;
    }

    int readShort()
    {
        java.io.DataInputStream $r1;
        java.io.IOException $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r3;
        java.lang.String $r4, $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int readUnsignedShort()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r5);

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r3.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r6, $r7, 9);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void writeShort(int)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r7, $r15;
        java.io.DataOutputStream $r10, $r11;
        java.lang.StringBuffer $r2, $r3, $r4, $r18;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r6;
        int i0, $i2, $i4;
        java.lang.String $r5, $r8, $r9, $r14, $r16, $r17;
        java.io.IOException $r12;
        org.apache.xmlbeans.SchemaTypeLoaderException $r19, $r20;

        r6 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        i0 := @parameter0: int;

        $i2 = (int) 65535;

        if i0 >= $i2 goto label1;

        $i4 = (int) -1;

        if i0 >= $i4 goto label2;

     label1:
        $r19 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" out of range: must fit in a 16-bit unsigned short.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r7);

        $r9 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r19.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r5, $r8, $r9, 10);

        throw $r19;

     label2:
        $r10 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        if $r10 == null goto label6;

     label3:
        $r11 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        virtualinvoke $r11.<java.io.DataOutputStream: void writeShort(int)>(i0);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r20 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r14 = virtualinvoke $r12.<java.io.IOException: java.lang.String getMessage()>();

        $r15 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r16 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r15);

        $r17 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r20.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r14, $r16, $r17, 9);

        throw $r20;

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    int readInt()
    {
        java.io.DataInputStream $r1;
        java.io.IOException $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r3;
        java.lang.String $r4, $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r5);

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r3.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r6, $r7, 9);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void writeInt(int)
    {
        java.io.IOException $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r6;
        java.io.DataOutputStream $r1, $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int i0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r4;
        java.lang.String $r5, $r7, $r8;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r5 = virtualinvoke $r3.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r6);

        $r8 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r4.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r5, $r7, $r8, 9);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    java.lang.String readString()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool>;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: java.lang.String stringForCode(int)>($i0);

        return $r2;
    }

    void writeString(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool $r2;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool _stringPool>;

        $i0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$StringPool: int codeForString(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        return;
    }

    javax.xml.namespace.QName readQName()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        java.lang.String $r1, $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }

    void writeQName(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        javax.xml.namespace.QName r0;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: javax.xml.namespace.QName;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(null);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(null);

        return;

     label1:
        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r3);

        return;
    }

    org.apache.xmlbeans.soap.SOAPArrayType readSOAPArrayType()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        javax.xml.namespace.QName $r1;
        java.lang.String $r2;
        org.apache.xmlbeans.soap.SOAPArrayType $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.xmlbeans.soap.SOAPArrayType;

        specialinvoke $r3.<org.apache.xmlbeans.soap.SOAPArrayType: void <init>(javax.xml.namespace.QName,java.lang.String)>($r1, $r2);

        return $r3;
    }

    void writeSOAPArrayType(org.apache.xmlbeans.soap.SOAPArrayType)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        javax.xml.namespace.QName $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.soap.SOAPArrayType r0;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.soap.SOAPArrayType;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>(null);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(null);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName getQName()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r2);

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.soap.SOAPArrayType: java.lang.String soap11DimensionString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r3);

     label2:
        return;
    }

    void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)
    {
        org.apache.xmlbeans.SchemaAnnotation r0;
        org.apache.xmlbeans.SchemaAnnotation$Attribute $r11, $r13, $r15;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i10;
        org.apache.xmlbeans.XmlObject r8, r17;
        java.lang.String $r9, $r10, $r14, $r16;
        org.apache.xmlbeans.SchemaAnnotation$Attribute[] $r1;
        org.apache.xmlbeans.XmlObject[] $r3, $r7;
        org.apache.xmlbeans.XmlOptions $r5, $r6, $r18;
        javax.xml.namespace.QName $r12;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.SchemaAnnotation;

        if r0 != null goto label1;

        $i10 = (int) -1;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>($i10);

        return;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaAnnotation: org.apache.xmlbeans.SchemaAnnotation$Attribute[] getAttributes()>();

        $i0 = lengthof $r1;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>($i0);

        i6 = 0;

     label2:
        $i1 = lengthof $r1;

        if i6 >= $i1 goto label3;

        $r11 = $r1[i6];

        $r12 = interfaceinvoke $r11.<org.apache.xmlbeans.SchemaAnnotation$Attribute: javax.xml.namespace.QName getName()>();

        $r13 = $r1[i6];

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaAnnotation$Attribute: java.lang.String getValue()>();

        $r15 = $r1[i6];

        $r16 = interfaceinvoke $r15.<org.apache.xmlbeans.SchemaAnnotation$Attribute: java.lang.String getValueUri()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r12);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r14);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r16);

        i6 = i6 + 1;

        goto label2;

     label3:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaAnnotation: org.apache.xmlbeans.XmlObject[] getUserInformation()>();

        $i2 = lengthof $r3;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>($i2);

        $r18 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r18.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r5 = virtualinvoke $r18.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveOuter()>();

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveAggressiveNamespaces()>();

        i7 = 0;

     label4:
        $i3 = lengthof $r3;

        if i7 >= $i3 goto label5;

        r17 = $r3[i7];

        $r10 = interfaceinvoke r17.<org.apache.xmlbeans.XmlObject: java.lang.String xmlText(org.apache.xmlbeans.XmlOptions)>($r6);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r10);

        i7 = i7 + 1;

        goto label4;

     label5:
        $r7 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaAnnotation: org.apache.xmlbeans.XmlObject[] getApplicationInformation()>();

        $i4 = lengthof $r7;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>($i4);

        i8 = 0;

     label6:
        $i5 = lengthof $r7;

        if i8 >= $i5 goto label7;

        r8 = $r7[i8];

        $r9 = interfaceinvoke r8.<org.apache.xmlbeans.XmlObject: java.lang.String xmlText(org.apache.xmlbeans.XmlOptions)>($r6);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r9);

        i8 = i8 + 1;

        goto label6;

     label7:
        return;
    }

    org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)
    {
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r13;
        java.lang.String[] r10, r11;
        org.apache.xmlbeans.impl.schema.SchemaContainer r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, $i2, i3, i4, i5, $i7;
        java.lang.String $r4, $r5, $r7, r9;
        boolean $z0, $z1;
        org.apache.xmlbeans.SchemaAnnotation$Attribute[] r1;
        javax.xml.namespace.QName $r6;
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl$AttributeImpl $r12;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r3 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaContainer;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 19, 0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readInt()>();

        $i7 = (int) -1;

        if $i0 != $i7 goto label2;

        return null;

     label2:
        r1 = newarray (org.apache.xmlbeans.SchemaAnnotation$Attribute)[$i0];

        i3 = 0;

     label3:
        if i3 >= $i0 goto label5;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        r9 = null;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 24, 0);

        if $z1 == 0 goto label4;

        r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

     label4:
        $r12 = new org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl$AttributeImpl;

        specialinvoke $r12.<org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl$AttributeImpl: void <init>(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r6, $r7, r9);

        r1[i3] = $r12;

        i3 = i3 + 1;

        goto label3;

     label5:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readInt()>();

        r10 = newarray (java.lang.String)[$i1];

        i4 = 0;

     label6:
        if i4 >= $i1 goto label7;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        r10[i4] = $r5;

        i4 = i4 + 1;

        goto label6;

     label7:
        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readInt()>();

        r11 = newarray (java.lang.String)[$i2];

        i5 = 0;

     label8:
        if i5 >= $i2 goto label9;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        r11[i5] = $r4;

        i5 = i5 + 1;

        goto label8;

     label9:
        $r13 = new org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl;

        specialinvoke $r13.<org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer,java.lang.String[],java.lang.String[],org.apache.xmlbeans.SchemaAnnotation$Attribute[])>(r3, r11, r10, r1);

        return $r13;
    }

    void writeAnnotations(org.apache.xmlbeans.SchemaAnnotation[])
    {
        org.apache.xmlbeans.SchemaAnnotation $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, i2;
        org.apache.xmlbeans.SchemaAnnotation[] r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaAnnotation[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    java.util.List readAnnotations()
    {
        org.apache.xmlbeans.impl.schema.SchemaContainer $r3;
        org.apache.xmlbeans.SchemaAnnotation $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readInt()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$800(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r2, "");

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r3);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    org.apache.xmlbeans.SchemaComponent$Ref readHandle()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r2, $r12, $r15, $r19, $r30, $r33, $r44, $r47, $r51, $r55, $r65, $r69, $r73, $r82, $r85;
        org.apache.xmlbeans.SchemaType $r5, $r23, $r37, r88, r89;
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r68;
        javax.xml.namespace.QName $r17, $r21, $r35, $r49, $r53, $r57, $r67, $r71, $r75;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r86;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r58;
        java.lang.StringBuffer $r9, $r10, $r27, $r28, $r41, $r42, $r79, $r80, $r90, $r92, $r94, $r96;
        org.apache.xmlbeans.SchemaComponent $r60, $r62;
        java.lang.String $r1, $r4, $r11, $r13, $r14, $r29, $r31, $r32, $r43, $r45, $r46, $r81, $r83, $r84;
        org.apache.xmlbeans.SchemaTypeLoader $r3, $r16, $r20, $r34, $r48, $r52, $r56, $r66, $r70, $r74;
        org.apache.xmlbeans.SchemaGlobalElement $r22;
        org.apache.xmlbeans.SchemaComponent$Ref $r87;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r54;
        org.apache.xmlbeans.SchemaTypeSystem $r59, $r61;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r72;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaType$Ref $r6, $r18, $r24, $r38, $r50, $r63, $r64;
        int $i2, $i3;
        char $c0, $c1;
        org.apache.xmlbeans.SchemaGlobalAttribute $r36;
        org.apache.xmlbeans.SchemaGlobalAttribute$Ref $r76;
        org.apache.xmlbeans.SchemaTypeLoaderException $r91, $r93, $r95, $r97;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        if $r1 != null goto label01;

        return null;

     label01:
        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c0;

        if $i2 == 95 goto label02;

        $r85 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r86 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool access$200(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r85);

        $r87 = virtualinvoke $r86.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.SchemaComponent$Ref refForHandle(java.lang.String)>($r1);

        return $r87;

     label02:
        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(2);

        $i3 = (int) $c1;

        tableswitch($i3)
        {
            case 65: goto label07;
            case 66: goto label18;
            case 67: goto label18;
            case 68: goto label10;
            case 69: goto label06;
            case 70: goto label18;
            case 71: goto label18;
            case 72: goto label18;
            case 73: goto label03;
            case 74: goto label18;
            case 75: goto label18;
            case 76: goto label18;
            case 77: goto label08;
            case 78: goto label09;
            case 79: goto label15;
            case 80: goto label18;
            case 81: goto label18;
            case 82: goto label11;
            case 83: goto label13;
            case 84: goto label05;
            case 85: goto label18;
            case 86: goto label18;
            case 87: goto label18;
            case 88: goto label18;
            case 89: goto label16;
            default: goto label18;
        };

     label03:
        $r59 = staticinvoke <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.SchemaTypeSystem get()>();

        $r60 = interfaceinvoke $r59.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>($r1);

        r88 = (org.apache.xmlbeans.SchemaType) $r60;

        if r88 == null goto label04;

        $r64 = interfaceinvoke r88.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        return $r64;

     label04:
        $r61 = staticinvoke <org.apache.xmlbeans.impl.schema.XQuerySchemaTypeSystem: org.apache.xmlbeans.SchemaTypeSystem get()>();

        $r62 = interfaceinvoke $r61.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>($r1);

        r89 = (org.apache.xmlbeans.SchemaType) $r62;

        $r63 = interfaceinvoke r89.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        return $r63;

     label05:
        $r15 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r16 = $r15.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r18 = interfaceinvoke $r16.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType$Ref findTypeRef(javax.xml.namespace.QName)>($r17);

        return $r18;

     label06:
        $r65 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r66 = $r65.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r67 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r68 = interfaceinvoke $r66.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalElement$Ref findElementRef(javax.xml.namespace.QName)>($r67);

        return $r68;

     label07:
        $r73 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r74 = $r73.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r75 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r76 = interfaceinvoke $r74.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalAttribute$Ref findAttributeRef(javax.xml.namespace.QName)>($r75);

        return $r76;

     label08:
        $r55 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r56 = $r55.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r57 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r58 = interfaceinvoke $r56.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaModelGroup$Ref findModelGroupRef(javax.xml.namespace.QName)>($r57);

        return $r58;

     label09:
        $r51 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r52 = $r51.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r53 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r54 = interfaceinvoke $r52.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaAttributeGroup$Ref findAttributeGroupRef(javax.xml.namespace.QName)>($r53);

        return $r54;

     label10:
        $r69 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r70 = $r69.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r71 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r72 = interfaceinvoke $r70.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaIdentityConstraint$Ref findIdentityConstraintRef(javax.xml.namespace.QName)>($r71);

        return $r72;

     label11:
        $r33 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r34 = $r33.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r35 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r36 = interfaceinvoke $r34.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalAttribute findAttribute(javax.xml.namespace.QName)>($r35);

        if $r36 != null goto label12;

        $r91 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot resolve attribute for handle ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        $r44 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r45 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r44);

        $r46 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r91.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r43, $r45, $r46, 13);

        throw $r91;

     label12:
        $r37 = interfaceinvoke $r36.<org.apache.xmlbeans.SchemaGlobalAttribute: org.apache.xmlbeans.SchemaType getType()>();

        $r38 = interfaceinvoke $r37.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        return $r38;

     label13:
        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r20 = $r19.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r21 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r22 = interfaceinvoke $r20.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalElement findElement(javax.xml.namespace.QName)>($r21);

        if $r22 != null goto label14;

        $r93 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot resolve element for handle ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        $r30 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r31 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r30);

        $r32 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r93.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r29, $r31, $r32, 13);

        throw $r93;

     label14:
        $r23 = interfaceinvoke $r22.<org.apache.xmlbeans.SchemaGlobalElement: org.apache.xmlbeans.SchemaType getType()>();

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        return $r24;

     label15:
        $r47 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r48 = $r47.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r49 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forPretty(java.lang.String,int)>($r1, 4);

        $r50 = interfaceinvoke $r48.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType$Ref findDocumentTypeRef(javax.xml.namespace.QName)>($r49);

        return $r50;

     label16:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r3 = $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.SchemaTypeLoader _linker>;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(4);

        $r5 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType typeForSignature(java.lang.String)>($r4);

        if $r5 != null goto label17;

        $r95 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r94 = new java.lang.StringBuffer;

        specialinvoke $r94.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot resolve type for handle ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r12);

        $r14 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r95.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r11, $r13, $r14, 13);

        throw $r95;

     label17:
        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        return $r6;

     label18:
        $r97 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r96 = new java.lang.StringBuffer;

        specialinvoke $r96.<java.lang.StringBuffer: void <init>()>();

        $r79 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot resolve handle ");

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.String toString()>();

        $r82 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r83 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r82);

        $r84 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r97.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r81, $r83, $r84, 13);

        throw $r97;
    }

    void writeHandle(org.apache.xmlbeans.SchemaComponent)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r2, $r6, $r7, $r68;
        org.apache.xmlbeans.SchemaType r38;
        javax.xml.namespace.QName $r10, $r16, $r22, $r28, $r34, $r39, $r47, $r53, $r59;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool $r3;
        java.lang.AssertionError $r71;
        java.lang.StringBuffer $r8, $r9, $r12, $r14, $r15, $r18, $r20, $r21, $r24, $r26, $r27, $r30, $r32, $r33, $r36, $r40, $r41, $r43, $r45, $r46, $r49, $r51, $r52, $r55, $r57, $r58, $r61, $r64, $r65, $r66;
        org.apache.xmlbeans.SchemaComponent r0;
        java.lang.String $r4, $r11, $r13, $r17, $r19, $r23, $r25, $r29, $r31, $r35, $r37, $r42, $r44, $r48, $r50, $r54, $r56, $r60, $r62, $r67, $r69, $r70;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.SchemaTypeSystem $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        int $i0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r63;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.SchemaComponent;

        if r0 == null goto label01;

        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r6 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r7 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r5 != $r7 goto label02;

     label01:
        $r2 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool access$200(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForComponent(org.apache.xmlbeans.SchemaComponent)>(r0);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r4);

        return;

     label02:
        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: int getComponentType()>();

        tableswitch($i0)
        {
            case 0: goto label08;
            case 1: goto label06;
            case 2: goto label13;
            case 3: goto label03;
            case 4: goto label05;
            case 5: goto label07;
            case 6: goto label04;
            default: goto label13;
        };

     label03:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XA_");

        $r28 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        $r29 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r28);

        $r30 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r31);

        return;

     label04:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XM_");

        $r10 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r13);

        return;

     label05:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XN_");

        $r22 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        $r23 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r25);

        return;

     label06:
        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XE_");

        $r34 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        $r35 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r34);

        $r36 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r37);

        return;

     label07:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XD_");

        $r16 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        $r17 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r19);

        return;

     label08:
        r38 = (org.apache.xmlbeans.SchemaType) r0;

        $z0 = interfaceinvoke r38.<org.apache.xmlbeans.SchemaType: boolean isBuiltinType()>();

        if $z0 == 0 goto label09;

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_BI_");

        $r59 = interfaceinvoke r38.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r60 = virtualinvoke $r59.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r61 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r62);

        return;

     label09:
        $r39 = interfaceinvoke r38.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r39 == null goto label10;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XT_");

        $r53 = interfaceinvoke r38.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r54 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r53);

        $r55 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r56);

        goto label12;

     label10:
        $z1 = interfaceinvoke r38.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z1 == 0 goto label11;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XO_");

        $r47 = interfaceinvoke r38.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        $r48 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r47);

        $r49 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r50);

        goto label12;

     label11:
        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_XY_");

        $r42 = virtualinvoke r38.<java.lang.Object: java.lang.String toString()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r44);

     label12:
        return;

     label13:
        $z2 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean $assertionsDisabled>;

        if $z2 != 0 goto label14;

        $r71 = new java.lang.AssertionError;

        specialinvoke $r71.<java.lang.AssertionError: void <init>()>();

        throw $r71;

     label14:
        $r63 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r64 = new java.lang.StringBuffer;

        specialinvoke $r64.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot write handle for component ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        $r68 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r69 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r68);

        $r70 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r63.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r67, $r69, $r70, 13);

        throw $r63;
    }

    org.apache.xmlbeans.SchemaType$Ref readTypeRef()
    {
        org.apache.xmlbeans.SchemaComponent$Ref $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaType$Ref $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        $r2 = (org.apache.xmlbeans.SchemaType$Ref) $r1;

        return $r2;
    }

    void writeType(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>(r1);

        return;
    }

    java.util.Map readQNameRefMap()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        int $i0, i1;
        java.util.HashMap $r0;
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.SchemaComponent$Ref $r3;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    java.util.List readQNameRefMapAsList(java.util.List)
    {
        java.util.List r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, i1;
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.SchemaComponent$Ref $r3;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r4 := @parameter0: java.util.List;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    void writeQNameMap(org.apache.xmlbeans.SchemaComponent[])
    {
        org.apache.xmlbeans.SchemaComponent[] r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, i2;
        org.apache.xmlbeans.SchemaComponent $r2, $r4;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaComponent[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r3);

        $r4 = r1[i2];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void writeDocumentTypeMap(org.apache.xmlbeans.SchemaType[])
    {
        org.apache.xmlbeans.SchemaType[] r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, i2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.SchemaType $r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r3);

        $r4 = r1[i2];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void writeAttributeTypeMap(org.apache.xmlbeans.SchemaType[])
    {
        org.apache.xmlbeans.SchemaType[] r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, i2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.SchemaType $r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r3);

        $r4 = r1[i2];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    org.apache.xmlbeans.SchemaType$Ref[] readTypeRefArray()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaType$Ref $r2;
        int $i0, i1;
        org.apache.xmlbeans.SchemaType$Ref[] r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r1 = newarray (org.apache.xmlbeans.SchemaType$Ref)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    void writeTypeArray(org.apache.xmlbeans.SchemaType[])
    {
        org.apache.xmlbeans.SchemaType[] r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, i2;
        org.apache.xmlbeans.SchemaType $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    java.util.Map readClassnameRefMap()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        int $i0, i1;
        java.util.HashMap $r0;
        java.lang.String $r2;
        org.apache.xmlbeans.SchemaComponent$Ref $r3;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    void writeClassnameMap(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        java.util.Map r1;
        org.apache.xmlbeans.SchemaType$Ref $r7;
        int $i0;
        java.lang.Object $r4, $r6;
        java.lang.String r5;
        org.apache.xmlbeans.SchemaType $r8;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(r5);

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r7 = (org.apache.xmlbeans.SchemaType$Ref) $r6;

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.SchemaType$Ref: org.apache.xmlbeans.SchemaType get()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r8);

        goto label1;

     label2:
        return;
    }

    java.util.Set readNamespaces()
    {
        java.util.HashSet $r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        int $i0, i1;
        java.lang.String $r2;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    void writeNamespaces(java.util.Set)
    {
        java.util.Iterator $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0;
        java.util.Set r1;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: java.util.Set;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(r4);

        goto label1;

     label2:
        return;
    }

    java.io.OutputStream getSaverStream(java.lang.String)
    {
        java.io.OutputStream $r4;
        java.io.IOException $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r1, $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r6;
        java.lang.String r3, $r7, $r9, $r10;
        org.apache.xmlbeans.Filer $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.Filer access$900(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r1);

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.Filer: java.io.OutputStream createBinaryFile(java.lang.String)>(r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r7 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        $r8 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r9 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r8);

        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r6.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r7, $r9, $r10, 9);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    java.io.InputStream getLoaderStream(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r1;
        java.lang.String r3;
        org.apache.xmlbeans.ResourceLoader $r2;
        java.io.InputStream $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.ResourceLoader access$1000(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r1);

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.ResourceLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3);

        return $r4;
    }

    void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer, javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r5, $r12;
        org.apache.xmlbeans.impl.schema.SchemaContainer r0;
        java.lang.StringBuffer $r2, $r3, $r7, $r8, $r10, $r11, $r14, $r15, $r16;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r4;
        java.lang.String $r6, $r9, $r13, $r17;
        java.lang.LinkageError $r1;
        javax.xml.namespace.QName r18;

        r4 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaContainer;

        r18 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $r1 = new java.lang.LinkageError;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loading of resource ");

        $r5 = r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r9 = r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("failed, information from ");

        $r12 = r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".index.xsb is ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" out of sync (or conflicting index files found)");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.LinkageError: void <init>(java.lang.String)>($r17);

        throw $r1;

     label1:
        return;
    }

    public org.apache.xmlbeans.SchemaGlobalElement finishLoadingElement()
    {
        org.apache.xmlbeans.SchemaAnnotation $r11;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r5, $r20, $r26;
        org.apache.xmlbeans.QNameSet $r3;
        java.math.BigInteger $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r17;
        java.lang.Exception $r24;
        org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl $r8;
        javax.xml.namespace.QName $r4, $r15;
        java.lang.Throwable $r23;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r14;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaType$Ref $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        java.lang.String $r6, $r10, $r12, $r21, $r22, $r27;
        org.apache.xmlbeans.soap.SOAPArrayType $r29;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref[] r30;
        org.apache.xmlbeans.SchemaComponent$Ref $r13, $r16;
        org.apache.xmlbeans.SchemaTypeLoaderException $r19, $r25, $r28;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r18;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label01:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i0 == 4 goto label02;

        $r19 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r20 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r21 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r20);

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r19.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("Wrong particle type ", $r21, $r22, 11);

        throw $r19;

     label02:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.math.BigInteger readBigInteger()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.math.BigInteger readBigInteger()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.QNameSet readQNameSet()>();

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r6 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r5, $r6);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r7, $r4);

        $r8 = new org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl;

        specialinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r7);

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setParticleType(int)>($i0);

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setMinOccurs(java.math.BigInteger)>($r1);

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setMaxOccurs(java.math.BigInteger)>($r2);

        $i2 = $i1 & 1;

        if $i2 == 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setTransitionRules(org.apache.xmlbeans.QNameSet,boolean)>($r3, $z1);

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setNameAndTypeRef(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType$Ref)>($r4, $r9);

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $i3 = $i1 & 4;

        if $i3 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setDefault(java.lang.String,boolean,org.apache.xmlbeans.XmlObject)>($r10, $z2, null);

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 16, 0);

        if $z0 == 0 goto label07;

        $r18 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()>();

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setDefaultValue(org.apache.xmlbeans.impl.schema.XmlValueRef)>($r18);

     label07:
        $i4 = $i1 & 8;

        if $i4 == 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setNillable(boolean)>($z3);

        $i5 = $i1 & 16;

        if $i5 == 0 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        $i6 = $i1 & 32;

        if $i6 == 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        $i12 = $i1 & 64;

        if $i12 == 0 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setBlock(boolean,boolean,boolean)>($z4, $z5, $z6);

        $r29 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.soap.SOAPArrayType readSOAPArrayType()>();

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setWsdlArrayType(org.apache.xmlbeans.soap.SOAPArrayType)>($r29);

        $i13 = $i1 & 128;

        if $i13 == 0 goto label16;

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setAbstract(boolean)>($z7);

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r7);

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r11);

        $i7 = $i1 & 256;

        if $i7 == 0 goto label18;

        $z8 = 1;

        goto label19;

     label18:
        $z8 = 0;

     label19:
        $i8 = $i1 & 512;

        if $i8 == 0 goto label20;

        $z9 = 1;

        goto label21;

     label20:
        $z9 = 0;

     label21:
        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setFinal(boolean,boolean)>($z8, $z9);

        $z10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 17, 0);

        if $z10 == 0 goto label22;

        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        $r17 = (org.apache.xmlbeans.SchemaGlobalElement$Ref) $r16;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setSubstitutionGroup(org.apache.xmlbeans.SchemaGlobalElement$Ref)>($r17);

     label22:
        $i9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i14 = 0;

     label23:
        if i14 >= $i9 goto label24;

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void addSubstitutionGroupMember(javax.xml.namespace.QName)>($r15);

        i14 = i14 + 1;

        goto label23;

     label24:
        $i10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r30 = newarray (org.apache.xmlbeans.SchemaIdentityConstraint$Ref)[$i10];

        i15 = 0;

     label25:
        $i11 = lengthof r30;

        if i15 >= $i11 goto label26;

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        $r14 = (org.apache.xmlbeans.SchemaIdentityConstraint$Ref) $r13;

        r30[i15] = $r14;

        i15 = i15 + 1;

        goto label25;

     label26:
        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setIdentityConstraints(org.apache.xmlbeans.SchemaIdentityConstraint$Ref[])>(r30);

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setFilename(java.lang.String)>($r12);

     label27:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        return $r8;

     label28:
        $r28 := @caughtexception;

        throw $r28;

     label29:
        $r24 := @caughtexception;

        $r25 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r26 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r27 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r26);

        specialinvoke $r25.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Exception)>("Cannot load type from typesystem", $r27, null, 14, $r24);

        throw $r25;

     label30:
        $r23 := @caughtexception;

     label31:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        throw $r23;

        catch org.apache.xmlbeans.SchemaTypeLoaderException from label01 to label27 with label28;
        catch java.lang.Exception from label01 to label27 with label29;
        catch java.lang.Throwable from label01 to label27 with label30;
        catch java.lang.Throwable from label28 to label31 with label30;
    }

    public org.apache.xmlbeans.SchemaGlobalAttribute finishLoadingAttribute()
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r2, $r10;
        java.lang.Exception $r8;
        org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl $r5;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r9, $r13;
        javax.xml.namespace.QName $r1;
        java.lang.String $r3, $r6, $r11, $r12;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r2, $r3);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r4, $r1);

        $r5 = new org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl;

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void loadAttribute(org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl,javax.xml.namespace.QName,org.apache.xmlbeans.impl.schema.SchemaContainer)>($r5, $r1, $r4);

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: void setFilename(java.lang.String)>($r6);

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        return $r5;

     label3:
        $r13 := @caughtexception;

        throw $r13;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r10);

        $r12 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r9.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Exception)>("Cannot load type from typesystem", $r11, $r12, 14, $r8);

        throw $r9;

     label5:
        $r7 := @caughtexception;

     label6:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        throw $r7;

        catch org.apache.xmlbeans.SchemaTypeLoaderException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label6 with label5;
    }

    org.apache.xmlbeans.SchemaModelGroup finishLoadingModelGroup()
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.SchemaAnnotation $r20;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r2, $r10;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1;
        java.lang.String $r3, $r6, $r11, $r12, $r14, $r15, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup $r19;
        java.lang.Exception $r8;
        org.apache.xmlbeans.SchemaTypeLoaderException $r9, $r13;
        javax.xml.namespace.QName $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.GroupDocument $r18;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r2, $r3);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r4, $r1);

        $r5 = new org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl;

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

     label01:
        $r14 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i0 != 1 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 22, 0);

        if $z0 == 0 goto label04;

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        goto label05;

     label04:
        $r15 = null;

     label05:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 22, 0);

        if $z2 == 0 goto label06;

        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        goto label07;

     label06:
        $r16 = null;

     label07:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 15, 0);

        if $z3 == 0 goto label09;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i1 != 1 goto label08;

        $z4 = 1;

        goto label10;

     label08:
        $z4 = 0;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $r18 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdschema.GroupDocument$Factory: org.apache.xmlbeans.impl.xb.xsdschema.GroupDocument parse(java.lang.String)>($r17);

        $r19 = interfaceinvoke $r18.<org.apache.xmlbeans.impl.xb.xsdschema.GroupDocument: org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup getGroup()>();

        $r20 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: void init(javax.xml.namespace.QName,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.SchemaAnnotation,java.lang.Object)>($r1, $r14, $z1, $r15, $r16, $z4, $r19, $r20, null);

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 21, 0);

        if $z5 == 0 goto label11;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: void setFilename(java.lang.String)>($r6);

     label11:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        return $r5;

     label12:
        $r13 := @caughtexception;

        throw $r13;

     label13:
        $r8 := @caughtexception;

        $r9 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r10);

        $r12 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r9.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Exception)>("Cannot load type from typesystem", $r11, $r12, 14, $r8);

        throw $r9;

     label14:
        $r7 := @caughtexception;

     label15:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        throw $r7;

        catch org.apache.xmlbeans.SchemaTypeLoaderException from label01 to label11 with label12;
        catch java.lang.Exception from label01 to label11 with label13;
        catch java.lang.Throwable from label01 to label11 with label14;
        catch java.lang.Throwable from label12 to label15 with label14;
    }

    org.apache.xmlbeans.SchemaIdentityConstraint finishLoadingIdentityConstraint()
    {
        java.lang.Throwable $r16;
        org.apache.xmlbeans.SchemaAnnotation $r7;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r14;
        java.lang.String[] r8;
        java.util.HashMap $r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r2, $r19;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r3, $r6, $r10, $r11, $r12, $r15, $r20, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaComponent$Ref $r13;
        java.lang.Exception $r17;
        org.apache.xmlbeans.SchemaTypeLoaderException $r18, $r22;
        javax.xml.namespace.QName $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r2, $r3);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r4, $r1);

        $r5 = new org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl;

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setName(javax.xml.namespace.QName)>($r1);

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setConstraintCategory(int)>($i0);

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setSelector(java.lang.String)>($r6);

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r7);

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r8 = newarray (java.lang.String)[$i1];

        i5 = 0;

     label02:
        $i2 = lengthof r8;

        if i5 >= $i2 goto label03;

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        r8[i5] = $r15;

        i5 = i5 + 1;

        goto label02;

     label03:
        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setFields(java.lang.String[])>(r8);

        $i3 = virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: int getConstraintCategory()>();

        if $i3 != 2 goto label04;

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        $r14 = (org.apache.xmlbeans.SchemaIdentityConstraint$Ref) $r13;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setReferencedKey(org.apache.xmlbeans.SchemaIdentityConstraint$Ref)>($r14);

     label04:
        $i4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        i6 = 0;

     label05:
        if i6 >= $i4 goto label06;

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        i6 = i6 + 1;

        goto label05;

     label06:
        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setNSMap(java.util.Map)>($r9);

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 21, 0);

        if $z0 == 0 goto label07;

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setFilename(java.lang.String)>($r10);

     label07:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        return $r5;

     label08:
        $r22 := @caughtexception;

        throw $r22;

     label09:
        $r17 := @caughtexception;

        $r18 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r19);

        $r21 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r18.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Exception)>("Cannot load type from typesystem", $r20, $r21, 14, $r17);

        throw $r18;

     label10:
        $r16 := @caughtexception;

     label11:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        throw $r16;

        catch org.apache.xmlbeans.SchemaTypeLoaderException from label01 to label07 with label08;
        catch java.lang.Exception from label01 to label07 with label09;
        catch java.lang.Throwable from label01 to label07 with label10;
        catch java.lang.Throwable from label08 to label11 with label10;
    }

    org.apache.xmlbeans.SchemaAttributeGroup finishLoadingAttributeGroup()
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.SchemaAnnotation $r19;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r2, $r10;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup $r18;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1;
        java.lang.String $r3, $r6, $r11, $r12, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl $r5;
        java.lang.Exception $r8;
        org.apache.xmlbeans.SchemaTypeLoaderException $r9, $r13;
        org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroupDocument $r17;
        javax.xml.namespace.QName $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r2, $r3);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r4, $r1);

        $r5 = new org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl;

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

     label01:
        $r14 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i0 != 1 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 22, 0);

        if $z0 == 0 goto label04;

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        goto label05;

     label04:
        $r15 = null;

     label05:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 15, 0);

        if $z2 == 0 goto label07;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i1 != 1 goto label06;

        $z3 = 1;

        goto label08;

     label06:
        $z3 = 0;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $r17 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroupDocument$Factory: org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroupDocument parse(java.lang.String)>($r16);

        $r18 = interfaceinvoke $r17.<org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroupDocument: org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup getAttributeGroup()>();

        $r19 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: void init(javax.xml.namespace.QName,java.lang.String,boolean,java.lang.String,boolean,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.SchemaAnnotation,java.lang.Object)>($r1, $r14, $z1, $r15, $z3, $r18, $r19, null);

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 21, 0);

        if $z4 == 0 goto label09;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: void setFilename(java.lang.String)>($r6);

     label09:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        return $r5;

     label10:
        $r13 := @caughtexception;

        throw $r13;

     label11:
        $r8 := @caughtexception;

        $r9 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r10);

        $r12 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r9.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Exception)>("Cannot load type from typesystem", $r11, $r12, 14, $r8);

        throw $r9;

     label12:
        $r7 := @caughtexception;

     label13:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        throw $r7;

        catch org.apache.xmlbeans.SchemaTypeLoaderException from label01 to label09 with label10;
        catch java.lang.Exception from label01 to label09 with label11;
        catch java.lang.Throwable from label01 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    public org.apache.xmlbeans.SchemaType finishLoadingType()
    {
        org.apache.xmlbeans.SchemaAnnotation $r7;
        org.apache.xmlbeans.QNameSet $r44, $r54, $r55;
        byte $b49;
        java.util.LinkedHashMap $r57, r94, $r104, $r108;
        java.lang.StringBuffer $r62, $r63, $r64, $r73, $r74, $r75, $r105, $r109;
        boolean[] $r96;
        org.apache.xmlbeans.SchemaType$Ref[] $r9, $r29;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r38, $r42;
        org.apache.xmlbeans.impl.schema.SchemaAttributeModelImpl $r103;
        org.apache.xmlbeans.SchemaParticle $r56, r93;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r11, $r27, $r102;
        org.apache.xmlbeans.SchemaLocalAttribute $r80;
        org.apache.xmlbeans.SchemaParticle[] $r46;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r2, $r17, $r21, $r25;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaType$Ref $r5, $r6, $r10, $r12, $r13, $r28, $r30, $r81;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, $i40, $i41, $i42, $i43, $i44, i45, i46, i47, i48, $i50, $i51, $i52, i53, i54, i55, i56, $i58, $i60;
        org.apache.xmlbeans.SchemaStringEnumEntry[] r99;
        org.apache.xmlbeans.SchemaTypeLoaderException $r89, $r106, $r107, $r110, $r113, $r114;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r1, $r15, $r19, $r22, $r32, $r48, $r66, $r77, $r86;
        org.apache.xmlbeans.SchemaProperty $r58, $r69;
        java.lang.Exception $r84;
        javax.xml.namespace.QName $r4, $r14, $r18, $r23, $r26, $r59, $r70, $r101;
        java.lang.Throwable $r83;
        java.lang.String $r8, $r16, $r20, $r24, $r33, $r34, $r36, $r37, $r40, $r49, $r50, $r65, $r67, $r68, $r76, $r78, $r79, $r87, $r88, $r90, $r91, $r92, $r100;
        org.apache.xmlbeans.SchemaComponent$Ref $r82;
        org.apache.xmlbeans.impl.regex.RegularExpression[] $r41;
        org.apache.xmlbeans.impl.regex.RegularExpression $r111;
        org.apache.xmlbeans.impl.schema.XmlValueRef[] $r95, r97, $r98;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        org.apache.xmlbeans.impl.schema.StscComplexTypeResolver$WildcardResult $r52, $r53;
        org.apache.xmlbeans.impl.schema.SchemaStringEnumEntryImpl $r112;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label01:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$800(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r1, "");

        $r102 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        specialinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer,boolean)>($r2, 1);

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setName(javax.xml.namespace.QName)>($r4);

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setOuterSchemaTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r5);

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setBaseDepth(int)>($i0);

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setBaseTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r6);

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setDerivationType(int)>($i1);

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>(null);

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r7);

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        tableswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            default: goto label05;
        };

     label02:
        $r82 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainerFieldRef(org.apache.xmlbeans.SchemaComponent$Ref)>($r82);

        goto label05;

     label03:
        $i38 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainerFieldIndex(short,int)>(1, $i38);

        goto label05;

     label04:
        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainerFieldIndex(short,int)>(2, $i3);

     label05:
        $r90 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        if $r90 != null goto label06;

        $r91 = "";

        goto label07;

     label06:
        $r91 = $r90;

     label07:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFullJavaName(java.lang.String)>($r91);

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        if $r8 != null goto label08;

        $r92 = "";

        goto label09;

     label08:
        $r92 = $r8;

     label09:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFullJavaImplName(java.lang.String)>($r92);

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref[] readTypeRefArray()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnonymousTypeRefs(org.apache.xmlbeans.SchemaType$Ref[])>($r9);

        $i4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnonymousUnionMemberOrdinal(int)>($i4);

        $i5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readInt()>();

        $i6 = $i5 & 1;

        if $i6 != 0 goto label10;

        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        z0 = $z8;

        $i7 = $i5 & 2048;

        if $i7 == 0 goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setCompiled(boolean)>($z9);

        $i8 = $i5 & 2;

        if $i8 == 0 goto label14;

        $z10 = 1;

        goto label15;

     label14:
        $z10 = 0;

     label15:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setDocumentType(boolean)>($z10);

        $i9 = $i5 & 524288;

        if $i9 == 0 goto label16;

        $z11 = 1;

        goto label17;

     label16:
        $z11 = 0;

     label17:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAttributeType(boolean)>($z11);

        if z0 != 0 goto label18;

        $z12 = 1;

        goto label19;

     label18:
        $z12 = 0;

     label19:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setSimpleType(boolean)>($z12);

        i39 = 0;

        if z0 == 0 goto label51;

        $i28 = $i5 & 262144;

        if $i28 == 0 goto label20;

        $z13 = 1;

        goto label21;

     label20:
        $z13 = 0;

     label21:
        $i29 = $i5 & 16384;

        if $i29 == 0 goto label22;

        $z14 = 1;

        goto label23;

     label22:
        $z14 = 0;

     label23:
        $i58 = (int) 32768;

        $i40 = $i5 & $i58;

        if $i40 == 0 goto label24;

        $z15 = 1;

        goto label25;

     label24:
        $z15 = 0;

     label25:
        $i41 = $i5 & 131072;

        if $i41 == 0 goto label26;

        $z16 = 1;

        goto label27;

     label26:
        $z16 = 0;

     label27:
        $i42 = $i5 & 65536;

        if $i42 == 0 goto label28;

        $z17 = 1;

        goto label29;

     label28:
        $z17 = 0;

     label29:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAbstractFinal(boolean,boolean,boolean,boolean,boolean)>($z13, $z14, $z15, $z16, $z17);

        $i43 = $i5 & 4096;

        if $i43 == 0 goto label30;

        $z18 = 1;

        goto label31;

     label30:
        $z18 = 0;

     label31:
        $i30 = $i5 & 8192;

        if $i30 == 0 goto label32;

        $z19 = 1;

        goto label33;

     label32:
        $z19 = 0;

     label33:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setBlock(boolean,boolean)>($z18, $z19);

        $i44 = $i5 & 512;

        if $i44 == 0 goto label34;

        $z20 = 1;

        goto label35;

     label34:
        $z20 = 0;

     label35:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setOrderSensitive(boolean)>($z20);

        $i31 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i39 = $i31;

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setComplexTypeVariety(int)>($i31);

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 23, 0);

        if $z3 == 0 goto label36;

        $r81 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContentBasedOnTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r81);

     label36:
        $r103 = new org.apache.xmlbeans.impl.schema.SchemaAttributeModelImpl;

        specialinvoke $r103.<org.apache.xmlbeans.impl.schema.SchemaAttributeModelImpl: void <init>()>();

        $i32 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i45 = 0;

     label37:
        if i45 >= $i32 goto label38;

        $r80 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaLocalAttribute readAttributeData()>();

        virtualinvoke $r103.<org.apache.xmlbeans.impl.schema.SchemaAttributeModelImpl: void addAttribute(org.apache.xmlbeans.SchemaLocalAttribute)>($r80);

        i45 = i45 + 1;

        goto label37;

     label38:
        $r44 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.QNameSet readQNameSet()>();

        virtualinvoke $r103.<org.apache.xmlbeans.impl.schema.SchemaAttributeModelImpl: void setWildcardSet(org.apache.xmlbeans.QNameSet)>($r44);

        $i33 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r103.<org.apache.xmlbeans.impl.schema.SchemaAttributeModelImpl: void setWildcardProcess(int)>($i33);

        $r104 = new java.util.LinkedHashMap;

        specialinvoke $r104.<java.util.LinkedHashMap: void <init>()>();

        $i34 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i46 = 0;

     label39:
        if i46 >= $i34 goto label41;

        $r69 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaProperty readPropertyData()>();

        $z7 = interfaceinvoke $r69.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        if $z7 != 0 goto label40;

        $r106 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r105 = new java.lang.StringBuffer;

        specialinvoke $r105.<java.lang.StringBuffer: void <init>()>();

        $r73 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attribute property ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i46);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not an attribute");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        $r77 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r78 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r77);

        $r79 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r106.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r76, $r78, $r79, 6);

        throw $r106;

     label40:
        $r70 = interfaceinvoke $r69.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r104.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r70, $r69);

        i46 = i46 + 1;

        goto label39;

     label41:
        r93 = null;

        r94 = null;

        i47 = 0;

        if $i31 == 3 goto label42;

        if $i31 != 4 goto label48;

     label42:
        i47 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r46 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaParticle[] readParticleArray()>();

        $i35 = lengthof $r46;

        if $i35 != 1 goto label43;

        r93 = $r46[0];

        goto label45;

     label43:
        $i36 = lengthof $r46;

        if $i36 != 0 goto label44;

        r93 = null;

        goto label45;

     label44:
        $r107 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r48 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r49 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r48);

        $r50 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r107.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("Content model not well-formed", $r49, $r50, 7);

        throw $r107;

     label45:
        $r108 = new java.util.LinkedHashMap;

        specialinvoke $r108.<java.util.LinkedHashMap: void <init>()>();

        r94 = $r108;

        $i37 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i48 = 0;

     label46:
        if i48 >= $i37 goto label48;

        $r58 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaProperty readPropertyData()>();

        $z6 = interfaceinvoke $r58.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        if $z6 == 0 goto label47;

        $r110 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r109 = new java.lang.StringBuffer;

        specialinvoke $r109.<java.lang.StringBuffer: void <init>()>();

        $r62 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Element property ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i48);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not an element");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        $r66 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r67 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r66);

        $r68 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r110.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r65, $r67, $r68, 6);

        throw $r110;

     label47:
        $r59 = interfaceinvoke $r58.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r108.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r59, $r58);

        i48 = i48 + 1;

        goto label46;

     label48:
        $r56 = r93;

        $r57 = r94;

        if i47 != 1 goto label49;

        $z21 = 1;

        goto label50;

     label49:
        $z21 = 0;

     label50:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContentModel(org.apache.xmlbeans.SchemaParticle,org.apache.xmlbeans.SchemaAttributeModel,java.util.Map,java.util.Map,boolean)>($r56, $r103, $r57, $r104, $z21);

        $r52 = staticinvoke <org.apache.xmlbeans.impl.schema.StscComplexTypeResolver: org.apache.xmlbeans.impl.schema.StscComplexTypeResolver$WildcardResult summarizeEltWildcards(org.apache.xmlbeans.SchemaParticle)>(r93);

        $r53 = staticinvoke <org.apache.xmlbeans.impl.schema.StscComplexTypeResolver: org.apache.xmlbeans.impl.schema.StscComplexTypeResolver$WildcardResult summarizeAttrWildcards(org.apache.xmlbeans.SchemaAttributeModel)>($r103);

        $r55 = $r52.<org.apache.xmlbeans.impl.schema.StscComplexTypeResolver$WildcardResult: org.apache.xmlbeans.QNameSet typedWildcards>;

        $z5 = $r52.<org.apache.xmlbeans.impl.schema.StscComplexTypeResolver$WildcardResult: boolean hasWildcards>;

        $r54 = $r53.<org.apache.xmlbeans.impl.schema.StscComplexTypeResolver$WildcardResult: org.apache.xmlbeans.QNameSet typedWildcards>;

        $z4 = $r53.<org.apache.xmlbeans.impl.schema.StscComplexTypeResolver$WildcardResult: boolean hasWildcards>;

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setWildcardSummary(org.apache.xmlbeans.QNameSet,boolean,org.apache.xmlbeans.QNameSet,boolean)>($r55, $z5, $r54, $z4);

     label51:
        if z0 == 0 goto label52;

        if i39 != 2 goto label91;

     label52:
        $i10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setSimpleTypeVariety(int)>($i10);

        $i11 = $i5 & 64;

        if $i11 == 0 goto label53;

        $z22 = 1;

        goto label54;

     label53:
        $z22 = 0;

     label54:
        z23 = $z22;

        $i12 = $i5 & 4;

        if $i12 == 0 goto label55;

        $b49 = 0;

        goto label57;

     label55:
        $i13 = $i5 & 1024;

        if $i13 == 0 goto label56;

        $b49 = 2;

        goto label57;

     label56:
        $b49 = 1;

     label57:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setOrdered(int)>($b49);

        $i50 = $i5 & 8;

        if $i50 == 0 goto label58;

        $z24 = 1;

        goto label59;

     label58:
        $z24 = 0;

     label59:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setBounded(boolean)>($z24);

        $i14 = $i5 & 16;

        if $i14 == 0 goto label60;

        $z25 = 1;

        goto label61;

     label60:
        $z25 = 0;

     label61:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFinite(boolean)>($z25);

        $i15 = $i5 & 32;

        if $i15 == 0 goto label62;

        $z26 = 1;

        goto label63;

     label62:
        $z26 = 0;

     label63:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setNumeric(boolean)>($z26);

        $i16 = $i5 & 128;

        if $i16 == 0 goto label64;

        $z27 = 1;

        goto label65;

     label64:
        $z27 = 0;

     label65:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setUnionOfLists(boolean)>($z27);

        $i60 = (int) 32768;

        $i17 = $i5 & $i60;

        if $i17 == 0 goto label66;

        $z28 = 1;

        goto label67;

     label66:
        $z28 = 0;

     label67:
        $i18 = $i5 & 131072;

        if $i18 == 0 goto label68;

        $z29 = 1;

        goto label69;

     label68:
        $z29 = 0;

     label69:
        $i51 = $i5 & 65536;

        if $i51 == 0 goto label70;

        $z30 = 1;

        goto label71;

     label70:
        $z30 = 0;

     label71:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setSimpleFinal(boolean,boolean,boolean)>($z28, $z29, $z30);

        $r95 = newarray (org.apache.xmlbeans.impl.schema.XmlValueRef)[12];

        $r96 = newarray (boolean)[12];

        $i52 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i53 = 0;

     label72:
        if i53 >= $i52 goto label75;

        $i26 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r42 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()>();

        $r95[$i26] = $r42;

        $i27 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i27 != 1 goto label73;

        $z31 = 1;

        goto label74;

     label73:
        $z31 = 0;

     label74:
        $r96[$i26] = $z31;

        i53 = i53 + 1;

        goto label72;

     label75:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setBasicFacets(org.apache.xmlbeans.impl.schema.XmlValueRef[],boolean[])>($r95, $r96);

        $i19 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setWhiteSpaceRule(int)>($i19);

        $i20 = $i5 & 256;

        if $i20 == 0 goto label76;

        $z32 = 1;

        goto label77;

     label76:
        $z32 = 0;

     label77:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setPatternFacet(boolean)>($z32);

        $i21 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r41 = newarray (org.apache.xmlbeans.impl.regex.RegularExpression)[$i21];

        i54 = 0;

     label78:
        if i54 >= $i21 goto label79;

        $r111 = new org.apache.xmlbeans.impl.regex.RegularExpression;

        $r40 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        specialinvoke $r111.<org.apache.xmlbeans.impl.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>($r40, "X");

        $r41[i54] = $r111;

        i54 = i54 + 1;

        goto label78;

     label79:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setPatterns(org.apache.xmlbeans.impl.regex.RegularExpression[])>($r41);

        $i22 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r97 = newarray (org.apache.xmlbeans.impl.schema.XmlValueRef)[$i22];

        i55 = 0;

     label80:
        if i55 >= $i22 goto label81;

        $r38 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()>();

        r97[i55] = $r38;

        i55 = i55 + 1;

        goto label80;

     label81:
        if $i22 != 0 goto label82;

        $r98 = null;

        goto label83;

     label82:
        $r98 = r97;

     label83:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setEnumerationValues(org.apache.xmlbeans.impl.schema.XmlValueRef[])>($r98);

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setBaseEnumTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r10);

        if z23 == 0 goto label86;

        $i24 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r99 = newarray (org.apache.xmlbeans.SchemaStringEnumEntry)[$i24];

        i56 = 0;

     label84:
        if i56 >= $i24 goto label85;

        $r112 = new org.apache.xmlbeans.impl.schema.SchemaStringEnumEntryImpl;

        $r36 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $i25 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r37 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        specialinvoke $r112.<org.apache.xmlbeans.impl.schema.SchemaStringEnumEntryImpl: void <init>(java.lang.String,int,java.lang.String)>($r36, $i25, $r37);

        r99[i56] = $r112;

        i56 = i56 + 1;

        goto label84;

     label85:
        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setStringEnumEntries(org.apache.xmlbeans.SchemaStringEnumEntry[])>(r99);

     label86:
        tableswitch($i10)
        {
            case 1: goto label87;
            case 2: goto label89;
            case 3: goto label88;
            default: goto label90;
        };

     label87:
        $r30 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setPrimitiveTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r30);

        $i23 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readInt()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setDecimalSize(int)>($i23);

        goto label91;

     label88:
        $r11 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_ANY_SIMPLE>;

        $r12 = virtualinvoke $r11.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setPrimitiveTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r12);

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setListItemTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r13);

        goto label91;

     label89:
        $r27 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_ANY_SIMPLE>;

        $r28 = virtualinvoke $r27.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setPrimitiveTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r28);

        $r29 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref[] readTypeRefArray()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setUnionMemberTypeRefs(org.apache.xmlbeans.SchemaType$Ref[])>($r29);

        goto label91;

     label90:
        $r113 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r32 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r33 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r32);

        $r34 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r113.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("Simple type does not have a recognized variety", $r33, $r34, 8);

        throw $r113;

     label91:
        $r100 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFilename(java.lang.String)>($r100);

        $r101 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getName()>();

        if $r101 == null goto label92;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r23 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getName()>();

        $r24 = virtualinvoke $r23.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r25 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r22, $r24);

        $r26 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r25, $r26);

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainer(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r25);

        goto label95;

     label92:
        $z1 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: boolean isDocumentType()>();

        if $z1 == 0 goto label94;

        $r18 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getDocumentElementName()>();

        if $r18 == null goto label93;

        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r20 = virtualinvoke $r18.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r21 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r19, $r20);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r21, $r18);

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainer(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r21);

     label93:
        goto label95;

     label94:
        $z2 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: boolean isAttributeType()>();

        if $z2 == 0 goto label95;

        $r14 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        if $r14 == null goto label95;

        $r15 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r16 = virtualinvoke $r14.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r17 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer access$1100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.lang.String)>($r15, $r16);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void checkContainerNotNull(org.apache.xmlbeans.impl.schema.SchemaContainer,javax.xml.namespace.QName)>($r17, $r14);

        virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainer(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r17);

     label95:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        return $r102;

     label96:
        $r89 := @caughtexception;

        throw $r89;

     label97:
        $r84 := @caughtexception;

        $r114 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r86 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r87 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r86);

        $r88 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r114.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Exception)>("Cannot load type from typesystem", $r87, $r88, 14, $r84);

        throw $r114;

     label98:
        $r83 := @caughtexception;

     label99:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void readEnd()>();

        throw $r83;

        catch org.apache.xmlbeans.SchemaTypeLoaderException from label01 to label95 with label96;
        catch java.lang.Exception from label01 to label95 with label97;
        catch java.lang.Throwable from label01 to label95 with label98;
        catch java.lang.Throwable from label96 to label99 with label98;
    }

    void writeTypeData(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaType[] $r17, $r54;
        org.apache.xmlbeans.SchemaProperty[] $r34, $r36;
        org.apache.xmlbeans.SchemaAnnotation $r6;
        org.apache.xmlbeans.QNameSet $r33;
        byte $b31, $b37;
        org.apache.xmlbeans.SchemaProperty $r37, $r40;
        org.apache.xmlbeans.SchemaType r1, $r3, $r5, $r8, $r15, $r16, $r18, $r30, $r42, $r44, $r48;
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.SchemaField $r7, $r9, $r43, $r46, $r50;
        org.apache.xmlbeans.SchemaComponent $r10;
        java.lang.String $r21, $r24, $r27, $r52, $r53, $r56;
        org.apache.xmlbeans.impl.regex.RegularExpression[] $r13;
        org.apache.xmlbeans.impl.regex.RegularExpression $r26;
        org.apache.xmlbeans.SchemaParticle $r35, $r39;
        org.apache.xmlbeans.SchemaStringEnumEntry $r20, $r22, $r23;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r4, $r11, $r12, $r45, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        org.apache.xmlbeans.XmlAnySimpleType $r25, $r28, $r29;
        org.apache.xmlbeans.SchemaLocalAttribute $r41, $r51;
        org.apache.xmlbeans.SchemaParticle[] $r38, r55;
        org.apache.xmlbeans.SchemaLocalAttribute[] $r32;
        org.apache.xmlbeans.XmlAnySimpleType[] $r14;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i32, $i33, i34, i35, i36, i38, i39, i40;
        org.apache.xmlbeans.SchemaLocalElement $r47;
        org.apache.xmlbeans.SchemaStringEnumEntry[] $r19;
        org.apache.xmlbeans.SchemaAttributeModel $r31;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r2);

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r3);

        $r4 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r1;

        $i0 = virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: int getBaseDepth()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r5);

        $i1 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getDerivationType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i1);

        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r6);

        $r7 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        if $r7 != null goto label01;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(0);

        goto label05;

     label01:
        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        $z0 = interfaceinvoke $r8.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z0 != 0 goto label02;

        $r42 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        $z21 = interfaceinvoke $r42.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z21 == 0 goto label03;

     label02:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(1);

        $r9 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $r10 = (org.apache.xmlbeans.SchemaComponent) $r9;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r10);

        goto label05;

     label03:
        $r43 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $z22 = interfaceinvoke $r43.<org.apache.xmlbeans.SchemaField: boolean isAttribute()>();

        if $z22 == 0 goto label04;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(2);

        $r48 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        $r49 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r48;

        $r50 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $r51 = (org.apache.xmlbeans.SchemaLocalAttribute) $r50;

        $i26 = virtualinvoke $r49.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: int getIndexForLocalAttribute(org.apache.xmlbeans.SchemaLocalAttribute)>($r51);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i26);

        goto label05;

     label04:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(3);

        $r44 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        $r45 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r44;

        $r46 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $r47 = (org.apache.xmlbeans.SchemaLocalElement) $r46;

        $i25 = virtualinvoke $r45.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: int getIndexForLocalElement(org.apache.xmlbeans.SchemaLocalElement)>($r47);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i25);

     label05:
        $r52 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r52);

        $r53 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaImplName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r53);

        $r54 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getAnonymousTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeTypeArray(org.apache.xmlbeans.SchemaType[])>($r54);

        $i27 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getAnonymousUnionMemberOrdinal()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i27);

        i28 = 0;

        $z23 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z23 == 0 goto label06;

        i28 = 1;

     label06:
        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z1 == 0 goto label07;

        i28 = i28 | 2;

     label07:
        $z2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z2 == 0 goto label08;

        i28 = i28 | 524288;

     label08:
        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int ordered()>();

        if $i2 == 0 goto label09;

        i28 = i28 | 4;

     label09:
        $i3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int ordered()>();

        if $i3 != 2 goto label10;

        i28 = i28 | 1024;

     label10:
        $z3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isBounded()>();

        if $z3 == 0 goto label11;

        i28 = i28 | 8;

     label11:
        $z4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isFinite()>();

        if $z4 == 0 goto label12;

        i28 = i28 | 16;

     label12:
        $z5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isNumeric()>();

        if $z5 == 0 goto label13;

        i28 = i28 | 32;

     label13:
        $z6 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean hasStringEnumValues()>();

        if $z6 == 0 goto label14;

        i28 = i28 | 64;

     label14:
        $r11 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r1;

        $z7 = virtualinvoke $r11.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: boolean isUnionOfLists()>();

        if $z7 == 0 goto label15;

        i28 = i28 | 128;

     label15:
        $z8 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean hasPatternFacet()>();

        if $z8 == 0 goto label16;

        i28 = i28 | 256;

     label16:
        $z9 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isOrderSensitive()>();

        if $z9 == 0 goto label17;

        i28 = i28 | 512;

     label17:
        $z10 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean blockExtension()>();

        if $z10 == 0 goto label18;

        i28 = i28 | 4096;

     label18:
        $z11 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean blockRestriction()>();

        if $z11 == 0 goto label19;

        i28 = i28 | 8192;

     label19:
        $z12 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean finalExtension()>();

        if $z12 == 0 goto label20;

        i28 = i28 | 16384;

     label20:
        $z13 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean finalRestriction()>();

        if $z13 == 0 goto label21;

        i28 = i28 | 16384;

     label21:
        $z14 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean finalList()>();

        if $z14 == 0 goto label22;

        i28 = i28 | 131072;

     label22:
        $z15 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean finalUnion()>();

        if $z15 == 0 goto label23;

        i28 = i28 | 65536;

     label23:
        $z16 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isAbstract()>();

        if $z16 == 0 goto label24;

        i28 = i28 | 262144;

     label24:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>(i28);

        $z17 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z17 != 0 goto label35;

        $i16 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getContentType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i16);

        $r30 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getContentBasedOnType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r30);

        $r31 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaAttributeModel getAttributeModel()>();

        $r32 = interfaceinvoke $r31.<org.apache.xmlbeans.SchemaAttributeModel: org.apache.xmlbeans.SchemaLocalAttribute[] getAttributes()>();

        $i17 = lengthof $r32;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i17);

        i29 = 0;

     label25:
        $i18 = lengthof $r32;

        if i29 >= $i18 goto label26;

        $r41 = $r32[i29];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAttributeData(org.apache.xmlbeans.SchemaLocalAttribute)>($r41);

        i29 = i29 + 1;

        goto label25;

     label26:
        $r33 = interfaceinvoke $r31.<org.apache.xmlbeans.SchemaAttributeModel: org.apache.xmlbeans.QNameSet getWildcardSet()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameSet(org.apache.xmlbeans.QNameSet)>($r33);

        $i19 = interfaceinvoke $r31.<org.apache.xmlbeans.SchemaAttributeModel: int getWildcardProcess()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i19);

        $r34 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getAttributeProperties()>();

        $i20 = lengthof $r34;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i20);

        i30 = 0;

     label27:
        $i21 = lengthof $r34;

        if i30 >= $i21 goto label28;

        $r40 = $r34[i30];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writePropertyData(org.apache.xmlbeans.SchemaProperty)>($r40);

        i30 = i30 + 1;

        goto label27;

     label28:
        $i22 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getContentType()>();

        if $i22 == 3 goto label29;

        $i24 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getContentType()>();

        if $i24 != 4 goto label35;

     label29:
        $z20 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean hasAllContent()>();

        if $z20 == 0 goto label30;

        $b31 = 1;

        goto label31;

     label30:
        $b31 = 0;

     label31:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b31);

        $r35 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaParticle getContentModel()>();

        if $r35 == null goto label32;

        $r38 = newarray (org.apache.xmlbeans.SchemaParticle)[1];

        $r39 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaParticle getContentModel()>();

        $r38[0] = $r39;

        r55 = $r38;

        goto label33;

     label32:
        r55 = newarray (org.apache.xmlbeans.SchemaParticle)[0];

     label33:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeParticleArray(org.apache.xmlbeans.SchemaParticle[])>(r55);

        $r36 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getElementProperties()>();

        $i23 = lengthof $r36;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i23);

        i32 = 0;

     label34:
        $i33 = lengthof $r36;

        if i32 >= $i33 goto label35;

        $r37 = $r36[i32];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writePropertyData(org.apache.xmlbeans.SchemaProperty)>($r37);

        i32 = i32 + 1;

        goto label34;

     label35:
        $z24 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z24 != 0 goto label36;

        $i15 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getContentType()>();

        if $i15 != 2 goto label55;

     label36:
        $i4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i4);

        i34 = 0;

        i35 = 0;

     label37:
        if i35 > 11 goto label39;

        $r29 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(i35);

        if $r29 == null goto label38;

        i34 = i34 + 1;

     label38:
        i35 = i35 + 1;

        goto label37;

     label39:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(i34);

        i36 = 0;

     label40:
        if i36 > 11 goto label44;

        $r28 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(i36);

        if $r28 == null goto label43;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(i36);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeXmlValueObject(org.apache.xmlbeans.XmlAnySimpleType)>($r28);

        $z19 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean isFacetFixed(int)>(i36);

        if $z19 == 0 goto label41;

        $b37 = 1;

        goto label42;

     label41:
        $b37 = 0;

     label42:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b37);

     label43:
        i36 = i36 + 1;

        goto label40;

     label44:
        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getWhiteSpaceRule()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i5);

        $r12 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r1;

        $r13 = virtualinvoke $r12.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.impl.regex.RegularExpression[] getPatternExpressions()>();

        $i6 = lengthof $r13;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i6);

        i38 = 0;

     label45:
        $i7 = lengthof $r13;

        if i38 >= $i7 goto label46;

        $r26 = $r13[i38];

        $r27 = virtualinvoke $r26.<org.apache.xmlbeans.impl.regex.RegularExpression: java.lang.String getPattern()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r27);

        i38 = i38 + 1;

        goto label45;

     label46:
        $r14 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues()>();

        if $r14 != null goto label47;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(0);

        goto label49;

     label47:
        $i8 = lengthof $r14;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i8);

        i39 = 0;

     label48:
        $i9 = lengthof $r14;

        if i39 >= $i9 goto label49;

        $r25 = $r14[i39];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeXmlValueObject(org.apache.xmlbeans.XmlAnySimpleType)>($r25);

        i39 = i39 + 1;

        goto label48;

     label49:
        $r15 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseEnumType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r15);

        $z18 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: boolean hasStringEnumValues()>();

        if $z18 == 0 goto label51;

        $r19 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaStringEnumEntry[] getStringEnumEntries()>();

        $i12 = lengthof $r19;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i12);

        i40 = 0;

     label50:
        $i13 = lengthof $r19;

        if i40 >= $i13 goto label51;

        $r20 = $r19[i40];

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r21);

        $r22 = $r19[i40];

        $i14 = interfaceinvoke $r22.<org.apache.xmlbeans.SchemaStringEnumEntry: int getIntValue()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i14);

        $r23 = $r19[i40];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaStringEnumEntry: java.lang.String getEnumName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r24);

        i40 = i40 + 1;

        goto label50;

     label51:
        $i10 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        tableswitch($i10)
        {
            case 1: goto label52;
            case 2: goto label54;
            case 3: goto label53;
            default: goto label55;
        };

     label52:
        $r18 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r18);

        $i11 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeInt(int)>($i11);

        goto label55;

     label53:
        $r16 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getListItemType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r16);

        goto label55;

     label54:
        $r17 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getUnionMemberTypes()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeTypeArray(org.apache.xmlbeans.SchemaType[])>($r17);

     label55:
        $r56 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: java.lang.String getSourceName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r56);

        return;
    }

    void readExtensionsList()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, i1;
        java.lang.AssertionError $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    org.apache.xmlbeans.SchemaLocalAttribute readAttributeData()
    {
        org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl $r0;
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl;

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void loadAttribute(org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl,javax.xml.namespace.QName,org.apache.xmlbeans.impl.schema.SchemaContainer)>($r0, $r2, null);

        return $r0;
    }

    void loadAttribute(org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl, javax.xml.namespace.QName, org.apache.xmlbeans.impl.schema.SchemaContainer)
    {
        org.apache.xmlbeans.SchemaAnnotation $r8;
        org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r2;
        org.apache.xmlbeans.SchemaType$Ref $r4;
        int $i0, $i1;
        javax.xml.namespace.QName r1;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r6;
        org.apache.xmlbeans.soap.SOAPArrayType $r7;
        boolean $z0, $z1;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl;

        r1 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaContainer;

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        $i1 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r5 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $z0 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 16, 0);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        $i0 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i0 != 1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r7 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.soap.SOAPArrayType readSOAPArrayType()>();

        $r8 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>(r3);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl: void init(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType$Ref,int,java.lang.String,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.impl.schema.XmlValueRef,boolean,org.apache.xmlbeans.soap.SOAPArrayType,org.apache.xmlbeans.SchemaAnnotation,java.lang.Object)>(r1, $r4, $i1, $r5, null, $r6, $z1, $r7, $r8, null);

        return;
    }

    void writeAttributeData(org.apache.xmlbeans.SchemaLocalAttribute)
    {
        org.apache.xmlbeans.XmlAnySimpleType $r5;
        org.apache.xmlbeans.SchemaLocalAttribute r1;
        org.apache.xmlbeans.SchemaAnnotation $r8;
        org.apache.xmlbeans.soap.SchemaWSDLArrayType $r6;
        byte $b1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0;
        javax.xml.namespace.QName $r2;
        java.lang.String $r4;
        org.apache.xmlbeans.SchemaType $r3;
        org.apache.xmlbeans.soap.SOAPArrayType $r7;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaLocalAttribute;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaLocalAttribute: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r2);

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaLocalAttribute: org.apache.xmlbeans.SchemaType getType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r3);

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaLocalAttribute: int getUse()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaLocalAttribute: java.lang.String getDefaultText()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaLocalAttribute: org.apache.xmlbeans.XmlAnySimpleType getDefaultValue()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeXmlValueObject(org.apache.xmlbeans.XmlAnySimpleType)>($r5);

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaLocalAttribute: boolean isFixed()>();

        if $z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b1);

        $r6 = (org.apache.xmlbeans.soap.SchemaWSDLArrayType) r1;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.soap.SchemaWSDLArrayType: org.apache.xmlbeans.soap.SOAPArrayType getWSDLArrayType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeSOAPArrayType(org.apache.xmlbeans.soap.SOAPArrayType)>($r7);

        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaLocalAttribute: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r8);

        return;
    }

    void writeIdConstraintData(org.apache.xmlbeans.SchemaIdentityConstraint)
    {
        org.apache.xmlbeans.SchemaAnnotation $r4;
        java.lang.String[] $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        java.util.Map $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r3, $r9, r13, r15, $r17;
        boolean $z0;
        java.util.Map$Entry r11;
        java.util.Iterator $r8;
        java.util.Set $r7;
        org.apache.xmlbeans.SchemaIdentityConstraint r1, $r16;
        java.lang.Object $r10, $r12, $r14;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaIdentityConstraint;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r2);

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: int getConstraintCategory()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: java.lang.String getSelector()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r3);

        $r4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r4);

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: java.lang.String[] getFields()>();

        $i1 = lengthof $r5;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i1);

        i5 = 0;

     label1:
        $i2 = lengthof $r5;

        if i5 >= $i2 goto label2;

        $r17 = $r5[i5];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r17);

        i5 = i5 + 1;

        goto label1;

     label2:
        $i3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: int getConstraintCategory()>();

        if $i3 != 2 goto label3;

        $r16 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: org.apache.xmlbeans.SchemaIdentityConstraint getReferencedKey()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r16);

     label3:
        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: java.util.Map getNSMap()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $i4 = interfaceinvoke $r7.<java.util.Set: int size()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i4);

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        r13 = (java.lang.String) $r12;

        $r14 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        r15 = (java.lang.String) $r14;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(r13);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>(r15);

        goto label4;

     label5:
        $r9 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaIdentityConstraint: java.lang.String getSourceName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r9);

        return;
    }

    org.apache.xmlbeans.SchemaParticle[] readParticleArray()
    {
        org.apache.xmlbeans.SchemaParticle $r2;
        org.apache.xmlbeans.SchemaParticle[] r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, i2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        r1 = newarray (org.apache.xmlbeans.SchemaParticle)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaParticle readParticleData()>();

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    void writeParticleArray(org.apache.xmlbeans.SchemaParticle[])
    {
        org.apache.xmlbeans.SchemaParticle $r2;
        org.apache.xmlbeans.SchemaParticle[] r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, i2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaParticle[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeParticleData(org.apache.xmlbeans.SchemaParticle)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    org.apache.xmlbeans.SchemaParticle readParticleData()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0;
        org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl $r1;
        org.apache.xmlbeans.impl.schema.SchemaParticleImpl $r2, r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        if $i0 == 4 goto label1;

        $r2 = new org.apache.xmlbeans.impl.schema.SchemaParticleImpl;

        specialinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void <init>()>();

        r3 = $r2;

        goto label2;

     label1:
        $r1 = new org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl;

        specialinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void <init>()>();

        r3 = $r1;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void loadParticle(org.apache.xmlbeans.impl.schema.SchemaParticleImpl,int)>(r3, $i0);

        return r3;
    }

    void loadParticle(org.apache.xmlbeans.impl.schema.SchemaParticleImpl, int)
    {
        org.apache.xmlbeans.SchemaAnnotation $r10;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r17;
        org.apache.xmlbeans.QNameSet $r4, $r5;
        java.math.BigInteger $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.SchemaParticle[] $r15;
        javax.xml.namespace.QName $r7;
        org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl r6;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r12;
        org.apache.xmlbeans.impl.schema.SchemaParticleImpl r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaType$Ref $r8;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        java.lang.String $r9, $r18, $r19;
        org.apache.xmlbeans.soap.SOAPArrayType $r20;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref[] $r13;
        org.apache.xmlbeans.SchemaComponent$Ref $r11;
        org.apache.xmlbeans.SchemaTypeLoaderException $r16;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r14;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaParticleImpl;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void setParticleType(int)>(i1);

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.math.BigInteger readBigInteger()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void setMinOccurs(java.math.BigInteger)>($r2);

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.math.BigInteger readBigInteger()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void setMaxOccurs(java.math.BigInteger)>($r3);

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.QNameSet readQNameSet()>();

        $i2 = $i0 & 1;

        if $i2 == 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void setTransitionRules(org.apache.xmlbeans.QNameSet,boolean)>($r4, $z1);

        tableswitch(i1)
        {
            case 1: goto label20;
            case 2: goto label20;
            case 3: goto label20;
            case 4: goto label04;
            case 5: goto label03;
            default: goto label21;
        };

     label03:
        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.QNameSet readQNameSet()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void setWildcardSet(org.apache.xmlbeans.QNameSet)>($r5);

        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void setWildcardProcess(int)>($i3);

        goto label22;

     label04:
        r6 = (org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl) r1;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setNameAndTypeRef(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType$Ref)>($r7, $r8);

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        $i4 = $i0 & 4;

        if $i4 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setDefault(java.lang.String,boolean,org.apache.xmlbeans.XmlObject)>($r9, $z2, null);

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 16, 0);

        if $z0 == 0 goto label07;

        $r14 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()>();

        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setDefaultValue(org.apache.xmlbeans.impl.schema.XmlValueRef)>($r14);

     label07:
        $i5 = $i0 & 8;

        if $i5 == 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setNillable(boolean)>($z3);

        $i6 = $i0 & 16;

        if $i6 == 0 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        $i7 = $i0 & 32;

        if $i7 == 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        $i9 = $i0 & 64;

        if $i9 == 0 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setBlock(boolean,boolean,boolean)>($z4, $z5, $z6);

        $r20 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.soap.SOAPArrayType readSOAPArrayType()>();

        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setWsdlArrayType(org.apache.xmlbeans.soap.SOAPArrayType)>($r20);

        $i10 = $i0 & 128;

        if $i10 == 0 goto label16;

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setAbstract(boolean)>($z7);

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaAnnotation readAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer)>(null);

        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r10);

        $i8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r13 = newarray (org.apache.xmlbeans.SchemaIdentityConstraint$Ref)[$i8];

        i11 = 0;

     label18:
        $i12 = lengthof $r13;

        if i11 >= $i12 goto label19;

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaComponent$Ref readHandle()>();

        $r12 = (org.apache.xmlbeans.SchemaIdentityConstraint$Ref) $r11;

        $r13[i11] = $r12;

        i11 = i11 + 1;

        goto label18;

     label19:
        virtualinvoke r6.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setIdentityConstraints(org.apache.xmlbeans.SchemaIdentityConstraint$Ref[])>($r13);

        goto label22;

     label20:
        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaParticle[] readParticleArray()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaParticleImpl: void setParticleChildren(org.apache.xmlbeans.SchemaParticle[])>($r15);

        goto label22;

     label21:
        $r16 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r17 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r17);

        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r16.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("Unrecognized particle type ", $r18, $r19, 11);

        throw $r16;

     label22:
        return;
    }

    void writeParticleData(org.apache.xmlbeans.SchemaParticle)
    {
        org.apache.xmlbeans.SchemaAnnotation $r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r17;
        org.apache.xmlbeans.SchemaParticle r1;
        org.apache.xmlbeans.QNameSet $r2, $r24;
        java.math.BigInteger $r22, $r23;
        org.apache.xmlbeans.SchemaIdentityConstraint[] $r10;
        org.apache.xmlbeans.SchemaType $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        org.apache.xmlbeans.SchemaParticle[] $r15;
        javax.xml.namespace.QName $r3, $r14;
        short $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, s14;
        javax.xml.namespace.QName[] $r13;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i15, i16, i17, $i18;
        org.apache.xmlbeans.SchemaLocalElement r20, r25;
        java.lang.String $r5, $r18, $r19;
        org.apache.xmlbeans.soap.SOAPArrayType $r8;
        org.apache.xmlbeans.SchemaGlobalElement $r12, r21, r26;
        org.apache.xmlbeans.SchemaIdentityConstraint $r11;
        org.apache.xmlbeans.soap.SchemaWSDLArrayType $r7;
        org.apache.xmlbeans.SchemaTypeLoaderException $r16;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaParticle;

        $i0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: int getParticleType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        s14 = 0;

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: boolean isSkippable()>();

        if $z0 == 0 goto label01;

        s14 = (short) 1;

     label01:
        $i1 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: int getParticleType()>();

        if $i1 != 4 goto label09;

        r20 = (org.apache.xmlbeans.SchemaLocalElement) r1;

        $z2 = interfaceinvoke r20.<org.apache.xmlbeans.SchemaLocalElement: boolean isFixed()>();

        if $z2 == 0 goto label02;

        $s13 = s14 | 4;

        s14 = (short) $s13;

     label02:
        $z3 = interfaceinvoke r20.<org.apache.xmlbeans.SchemaLocalElement: boolean isNillable()>();

        if $z3 == 0 goto label03;

        $s12 = s14 | 8;

        s14 = (short) $s12;

     label03:
        $z4 = interfaceinvoke r20.<org.apache.xmlbeans.SchemaLocalElement: boolean blockExtension()>();

        if $z4 == 0 goto label04;

        $s11 = s14 | 16;

        s14 = (short) $s11;

     label04:
        $z5 = interfaceinvoke r20.<org.apache.xmlbeans.SchemaLocalElement: boolean blockRestriction()>();

        if $z5 == 0 goto label05;

        $s10 = s14 | 32;

        s14 = (short) $s10;

     label05:
        $z6 = interfaceinvoke r20.<org.apache.xmlbeans.SchemaLocalElement: boolean blockSubstitution()>();

        if $z6 == 0 goto label06;

        $s9 = s14 | 64;

        s14 = (short) $s9;

     label06:
        $z7 = interfaceinvoke r20.<org.apache.xmlbeans.SchemaLocalElement: boolean isAbstract()>();

        if $z7 == 0 goto label07;

        $s8 = s14 | 128;

        s14 = (short) $s8;

     label07:
        $z8 = r20 instanceof org.apache.xmlbeans.SchemaGlobalElement;

        if $z8 == 0 goto label09;

        r21 = (org.apache.xmlbeans.SchemaGlobalElement) r20;

        $z9 = interfaceinvoke r21.<org.apache.xmlbeans.SchemaGlobalElement: boolean finalExtension()>();

        if $z9 == 0 goto label08;

        $s7 = s14 | 256;

        s14 = (short) $s7;

     label08:
        $z10 = interfaceinvoke r21.<org.apache.xmlbeans.SchemaGlobalElement: boolean finalRestriction()>();

        if $z10 == 0 goto label09;

        $s6 = s14 | 512;

        s14 = (short) $s6;

     label09:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(s14);

        $r22 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: java.math.BigInteger getMinOccurs()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeBigInteger(java.math.BigInteger)>($r22);

        $r23 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: java.math.BigInteger getMaxOccurs()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeBigInteger(java.math.BigInteger)>($r23);

        $r24 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: org.apache.xmlbeans.QNameSet acceptedStartNames()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameSet(org.apache.xmlbeans.QNameSet)>($r24);

        $i15 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: int getParticleType()>();

        tableswitch($i15)
        {
            case 1: goto label16;
            case 2: goto label16;
            case 3: goto label16;
            case 4: goto label11;
            case 5: goto label10;
            default: goto label17;
        };

     label10:
        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: org.apache.xmlbeans.QNameSet getWildcardSet()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameSet(org.apache.xmlbeans.QNameSet)>($r2);

        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: int getWildcardProcess()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i2);

        goto label18;

     label11:
        r25 = (org.apache.xmlbeans.SchemaLocalElement) r1;

        $r3 = interfaceinvoke r25.<org.apache.xmlbeans.SchemaLocalElement: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r3);

        $r4 = interfaceinvoke r25.<org.apache.xmlbeans.SchemaLocalElement: org.apache.xmlbeans.SchemaType getType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r4);

        $r5 = interfaceinvoke r25.<org.apache.xmlbeans.SchemaLocalElement: java.lang.String getDefaultText()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r5);

        $r6 = interfaceinvoke r25.<org.apache.xmlbeans.SchemaLocalElement: org.apache.xmlbeans.XmlAnySimpleType getDefaultValue()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeXmlValueObject(org.apache.xmlbeans.XmlAnySimpleType)>($r6);

        $r7 = (org.apache.xmlbeans.soap.SchemaWSDLArrayType) r25;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.soap.SchemaWSDLArrayType: org.apache.xmlbeans.soap.SOAPArrayType getWSDLArrayType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeSOAPArrayType(org.apache.xmlbeans.soap.SOAPArrayType)>($r8);

        $r9 = interfaceinvoke r25.<org.apache.xmlbeans.SchemaLocalElement: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r9);

        $z1 = r25 instanceof org.apache.xmlbeans.SchemaGlobalElement;

        if $z1 == 0 goto label13;

        r26 = (org.apache.xmlbeans.SchemaGlobalElement) r25;

        $r12 = interfaceinvoke r26.<org.apache.xmlbeans.SchemaGlobalElement: org.apache.xmlbeans.SchemaGlobalElement substitutionGroup()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r12);

        $r13 = interfaceinvoke r26.<org.apache.xmlbeans.SchemaGlobalElement: javax.xml.namespace.QName[] substitutionGroupMembers()>();

        $i4 = lengthof $r13;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i4);

        i16 = 0;

     label12:
        $i5 = lengthof $r13;

        if i16 >= $i5 goto label13;

        $r14 = $r13[i16];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r14);

        i16 = i16 + 1;

        goto label12;

     label13:
        $r10 = interfaceinvoke r25.<org.apache.xmlbeans.SchemaLocalElement: org.apache.xmlbeans.SchemaIdentityConstraint[] getIdentityConstraints()>();

        $i3 = lengthof $r10;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i3);

        i17 = 0;

     label14:
        $i18 = lengthof $r10;

        if i17 >= $i18 goto label15;

        $r11 = $r10[i17];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeHandle(org.apache.xmlbeans.SchemaComponent)>($r11);

        i17 = i17 + 1;

        goto label14;

     label15:
        goto label18;

     label16:
        $r15 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaParticle: org.apache.xmlbeans.SchemaParticle[] getParticleChildren()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeParticleArray(org.apache.xmlbeans.SchemaParticle[])>($r15);

        goto label18;

     label17:
        $r16 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r17 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r17);

        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r16.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("Unrecognized particle type ", $r18, $r19, 11);

        throw $r16;

     label18:
        return;
    }

    org.apache.xmlbeans.SchemaProperty readPropertyData()
    {
        org.apache.xmlbeans.QNameSet $r12;
        java.math.BigInteger $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.impl.schema.SchemaPropertyImpl $r0;
        javax.xml.namespace.QName $r2, $r10;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        org.apache.xmlbeans.SchemaType$Ref $r3, $r4, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.String $r7, $r8;
        java.util.LinkedHashSet $r9;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r11;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaPropertyImpl;

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setName(javax.xml.namespace.QName)>($r2);

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r3);

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setAttribute(boolean)>($z3);

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setContainerTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r4);

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.math.BigInteger readBigInteger()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setMinOccurs(java.math.BigInteger)>($r5);

        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.math.BigInteger readBigInteger()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setMaxOccurs(java.math.BigInteger)>($r6);

        $i2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setNillable(int)>($i2);

        $i3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setDefault(int)>($i3);

        $i4 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setFixed(int)>($i4);

        $r7 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setDefaultText(java.lang.String)>($r7);

        $r8 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setJavaPropertyName(java.lang.String)>($r8);

        $i5 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setJavaTypeCode(int)>($i5);

        $r13 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        $i6 = $i0 & 2;

        if $i6 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        $i7 = $i0 & 4;

        if $i7 == 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        $i9 = $i0 & 8;

        if $i9 == 0 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setExtendsJava(org.apache.xmlbeans.SchemaType$Ref,boolean,boolean,boolean)>($r13, $z4, $z5, $z6);

        $z7 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atMost(int,int,int)>(2, 19, 0);

        if $z7 == 0 goto label09;

        $r12 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.QNameSet readQNameSet()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setJavaSetterDelimiter(org.apache.xmlbeans.QNameSet)>($r12);

     label09:
        $z0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 16, 0);

        if $z0 == 0 goto label10;

        $r11 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setDefaultValue(org.apache.xmlbeans.impl.schema.XmlValueRef)>($r11);

     label10:
        $z1 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: boolean isAttribute()>();

        if $z1 != 0 goto label13;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean atLeast(int,int,int)>(2, 17, 0);

        if $z2 == 0 goto label13;

        $i8 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r9 = new java.util.LinkedHashSet;

        specialinvoke $r9.<java.util.LinkedHashSet: void <init>(int)>($i8);

        i10 = 0;

     label11:
        if i10 >= $i8 goto label12;

        $r10 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        virtualinvoke $r9.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r10);

        i10 = i10 + 1;

        goto label11;

     label12:
        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setAcceptedNames(java.util.Set)>($r9);

     label13:
        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: void setImmutable()>();

        return $r0;
    }

    void writePropertyData(org.apache.xmlbeans.SchemaProperty)
    {
        byte $b0, $b1, $b2, $b9, $b10, $b11;
        org.apache.xmlbeans.SchemaProperty r1;
        java.math.BigInteger $r5, $r6;
        org.apache.xmlbeans.SchemaType $r3, $r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.XmlAnySimpleType $r10;
        javax.xml.namespace.QName $r2, $r12;
        javax.xml.namespace.QName[] $r11;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i3, $i4, $i5, $i6, $i7, $i8, i12;
        java.lang.String $r7, $r8;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: org.apache.xmlbeans.SchemaProperty;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r2);

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r3);

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        if $z0 == 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaSingleton()>();

        if $z1 == 0 goto label03;

        $b9 = 2;

        goto label04;

     label03:
        $b9 = 0;

     label04:
        $b0 = $z4 | $b9;

        $z5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaOption()>();

        if $z5 == 0 goto label05;

        $b10 = 4;

        goto label06;

     label05:
        $b10 = 0;

     label06:
        $b1 = $b0 | $b10;

        $z2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: boolean extendsJavaArray()>();

        if $z2 == 0 goto label07;

        $b11 = 8;

        goto label08;

     label07:
        $b11 = 0;

     label08:
        $b2 = $b1 | $b11;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b2);

        $r4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType getContainerType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r4);

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: java.math.BigInteger getMinOccurs()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeBigInteger(java.math.BigInteger)>($r5);

        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: java.math.BigInteger getMaxOccurs()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeBigInteger(java.math.BigInteger)>($r6);

        $i3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: int hasNillable()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i3);

        $i4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: int hasDefault()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i4);

        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: int hasFixed()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i5);

        $r7 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: java.lang.String getDefaultText()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r7);

        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: java.lang.String getJavaPropertyName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r8);

        $i6 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: int getJavaTypeCode()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i6);

        $r9 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.SchemaType javaBasedOnType()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r9);

        $r10 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: org.apache.xmlbeans.XmlAnySimpleType getDefaultValue()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeXmlValueObject(org.apache.xmlbeans.XmlAnySimpleType)>($r10);

        $z3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: boolean isAttribute()>();

        if $z3 != 0 goto label10;

        $r11 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName[] acceptedNames()>();

        $i7 = lengthof $r11;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i7);

        i12 = 0;

     label09:
        $i8 = lengthof $r11;

        if i12 >= $i8 goto label10;

        $r12 = $r11[i12];

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r12);

        i12 = i12 + 1;

        goto label09;

     label10:
        return;
    }

    void writeModelGroupData(org.apache.xmlbeans.SchemaModelGroup)
    {
        org.apache.xmlbeans.SchemaAnnotation $r12;
        byte $b0, $b1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r2;
        java.lang.String $r4, $r5, $r6, $r7, $r11, $r13;
        org.apache.xmlbeans.XmlObject $r8;
        boolean $z0;
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl r1;
        org.apache.xmlbeans.SchemaModelGroup r0;
        org.apache.xmlbeans.XmlOptions $r9, $r10;
        javax.xml.namespace.QName $r3;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.SchemaModelGroup;

        r1 = (org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl) r0;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: javax.xml.namespace.QName getName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r3);

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: java.lang.String getTargetNamespace()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: java.lang.String getChameleonNamespace()>();

        if $r5 == null goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b0);

        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: java.lang.String getElemFormDefault()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r6);

        $r7 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: java.lang.String getAttFormDefault()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r7);

        $z0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: boolean isRedefinition()>();

        if $z0 == 0 goto label3;

        $b1 = 1;

        goto label4;

     label3:
        $b1 = 0;

     label4:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b1);

        $r8 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        $r9 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r9.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveOuter()>();

        $r11 = interfaceinvoke $r8.<org.apache.xmlbeans.XmlObject: java.lang.String xmlText(org.apache.xmlbeans.XmlOptions)>($r10);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r11);

        $r12 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r12);

        $r13 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: java.lang.String getSourceName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r13);

        return;
    }

    void writeAttributeGroupData(org.apache.xmlbeans.SchemaAttributeGroup)
    {
        org.apache.xmlbeans.SchemaAnnotation $r11;
        byte $b0, $b1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r2;
        java.lang.String $r4, $r5, $r6, $r10, $r12;
        org.apache.xmlbeans.XmlObject $r7;
        boolean $z0;
        org.apache.xmlbeans.SchemaAttributeGroup r0;
        org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl r1;
        org.apache.xmlbeans.XmlOptions $r8, $r9;
        javax.xml.namespace.QName $r3;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.SchemaAttributeGroup;

        r1 = (org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl) r0;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: javax.xml.namespace.QName getName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r3);

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: java.lang.String getTargetNamespace()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: java.lang.String getChameleonNamespace()>();

        if $r5 == null goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b0);

        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: java.lang.String getFormDefault()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r6);

        $z0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: boolean isRedefinition()>();

        if $z0 == 0 goto label3;

        $b1 = 1;

        goto label4;

     label3:
        $b1 = 0;

     label4:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b1);

        $r7 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        $r8 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r8.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveOuter()>();

        $r10 = interfaceinvoke $r7.<org.apache.xmlbeans.XmlObject: java.lang.String xmlText(org.apache.xmlbeans.XmlOptions)>($r9);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r10);

        $r11 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r11);

        $r12 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: java.lang.String getSourceName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r12);

        return;
    }

    org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()
    {
        byte[] $r10;
        java.lang.Double $r6;
        java.lang.AssertionError $r14;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaType$Ref $r1;
        int $i0, $i1, $i2, i3;
        java.lang.String $r12;
        double $d0;
        boolean $z0;
        javax.xml.namespace.QName $r8;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r3, $r4, $r5, $r7, $r9, $r11, $r13;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.SchemaType$Ref readTypeRef()>();

        if $r1 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        lookupswitch($i0)
        {
            case 0: goto label03;
            case 2: goto label07;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label09;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label07;
            case 14: goto label07;
            case 15: goto label07;
            case 16: goto label07;
            case 17: goto label07;
            case 18: goto label07;
            case 19: goto label07;
            case 20: goto label07;
            case 21: goto label07;
            case 65535: goto label04;
            default: goto label02;
        };

     label02:
        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label03:
        $r13 = new org.apache.xmlbeans.impl.schema.XmlValueRef;

        specialinvoke $r13.<org.apache.xmlbeans.impl.schema.XmlValueRef: void <init>(org.apache.xmlbeans.SchemaType$Ref,java.lang.Object)>($r1, null);

        return $r13;

     label04:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i2);

        i3 = 0;

     label05:
        if i3 >= $i1 goto label06;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.XmlValueRef readXmlValueObject()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label05;

     label06:
        $r3 = new org.apache.xmlbeans.impl.schema.XmlValueRef;

        specialinvoke $r3.<org.apache.xmlbeans.impl.schema.XmlValueRef: void <init>(org.apache.xmlbeans.SchemaType$Ref,java.lang.Object)>($r1, $r2);

        return $r3;

     label07:
        $r11 = new org.apache.xmlbeans.impl.schema.XmlValueRef;

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        specialinvoke $r11.<org.apache.xmlbeans.impl.schema.XmlValueRef: void <init>(org.apache.xmlbeans.SchemaType$Ref,java.lang.Object)>($r1, $r12);

        return $r11;

     label08:
        $r9 = new org.apache.xmlbeans.impl.schema.XmlValueRef;

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: byte[] readByteArray()>();

        specialinvoke $r9.<org.apache.xmlbeans.impl.schema.XmlValueRef: void <init>(org.apache.xmlbeans.SchemaType$Ref,java.lang.Object)>($r1, $r10);

        return $r9;

     label09:
        $r7 = new org.apache.xmlbeans.impl.schema.XmlValueRef;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        specialinvoke $r7.<org.apache.xmlbeans.impl.schema.XmlValueRef: void <init>(org.apache.xmlbeans.SchemaType$Ref,java.lang.Object)>($r1, $r8);

        return $r7;

     label10:
        $r5 = new org.apache.xmlbeans.impl.schema.XmlValueRef;

        $r6 = new java.lang.Double;

        $d0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: double readDouble()>();

        specialinvoke $r6.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.XmlValueRef: void <init>(org.apache.xmlbeans.SchemaType$Ref,java.lang.Object)>($r1, $r6);

        return $r5;
    }

    void writeXmlValueObject(org.apache.xmlbeans.XmlAnySimpleType)
    {
        byte[] $r10;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r12;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r11;
        org.apache.xmlbeans.SchemaType $r3, $r4, $r17;
        org.apache.xmlbeans.SimpleValue $r2, $r5, $r6, $r7, $r9;
        double $d0, $d1;
        boolean $z0;
        org.apache.xmlbeans.XmlAnySimpleType r0, $r16;
        java.util.Iterator $r14;
        java.util.List $r13;
        float $f0;
        java.lang.Object $r15;
        javax.xml.namespace.QName $r8;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.XmlAnySimpleType;

        if r0 != null goto label01;

        $r17 = null;

        goto label02;

     label01:
        $r17 = interfaceinvoke r0.<org.apache.xmlbeans.XmlAnySimpleType: org.apache.xmlbeans.SchemaType schemaType()>();

     label02:
        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeType(org.apache.xmlbeans.SchemaType)>($r17);

        if $r17 != null goto label03;

        return;

     label03:
        $r2 = (org.apache.xmlbeans.SimpleValue) r0;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.SchemaType instanceType()>();

        if $r3 != null goto label04;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(0);

        goto label13;

     label04:
        $i0 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i0 != 3 goto label07;

        $i4 = (int) -1;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i4);

        $r12 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $r13 = virtualinvoke $r12.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.util.List xgetListValue()>();

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i2);

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (org.apache.xmlbeans.XmlAnySimpleType) $r15;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeXmlValueObject(org.apache.xmlbeans.XmlAnySimpleType)>($r16);

        goto label05;

     label06:
        goto label13;

     label07:
        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i1 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i1);

        tableswitch($i1)
        {
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label10;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label08;
            case 12: goto label08;
            case 13: goto label08;
            case 14: goto label08;
            case 15: goto label08;
            case 16: goto label08;
            case 17: goto label08;
            case 18: goto label08;
            case 19: goto label08;
            case 20: goto label08;
            case 21: goto label08;
            default: goto label13;
        };

     label08:
        $r11 = interfaceinvoke r0.<org.apache.xmlbeans.XmlAnySimpleType: java.lang.String getStringValue()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r11);

        goto label13;

     label09:
        $r9 = (org.apache.xmlbeans.SimpleValue) r0;

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.SimpleValue: byte[] getByteArrayValue()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeByteArray(byte[])>($r10);

        goto label13;

     label10:
        $r7 = (org.apache.xmlbeans.SimpleValue) r0;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SimpleValue: javax.xml.namespace.QName getQNameValue()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r8);

        goto label13;

     label11:
        $r6 = (org.apache.xmlbeans.SimpleValue) r0;

        $f0 = interfaceinvoke $r6.<org.apache.xmlbeans.SimpleValue: float getFloatValue()>();

        $d1 = (double) $f0;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeDouble(double)>($d1);

        goto label13;

     label12:
        $r5 = (org.apache.xmlbeans.SimpleValue) r0;

        $d0 = interfaceinvoke $r5.<org.apache.xmlbeans.SimpleValue: double getDoubleValue()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeDouble(double)>($d0);

     label13:
        return;
    }

    double readDouble()
    {
        java.io.DataInputStream $r1;
        java.io.IOException $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r3;
        java.lang.String $r4, $r6, $r7;
        double $d0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        $d0 = virtualinvoke $r1.<java.io.DataInputStream: double readDouble()>();

     label2:
        return $d0;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r5);

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r3.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r6, $r7, 9);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void writeDouble(double)
    {
        java.io.IOException $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r6;
        java.io.DataOutputStream $r1, $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r4;
        java.lang.String $r5, $r7, $r8;
        double d0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeDouble(double)>(d0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r5 = virtualinvoke $r3.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r6);

        $r8 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r4.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r5, $r7, $r8, 9);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    org.apache.xmlbeans.QNameSet readQNameSet()
    {
        java.util.HashSet $r1, $r2, $r3;
        org.apache.xmlbeans.QNameSet $r4, $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r8;
        javax.xml.namespace.QName $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i4 = 0;

     label1:
        if i4 >= $i1 goto label2;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String readString()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r8);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i5 = 0;

     label3:
        if i5 >= $i2 goto label4;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: int readShort()>();

        i6 = 0;

     label5:
        if i6 >= $i3 goto label6;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: javax.xml.namespace.QName readQName()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r6);

        i6 = i6 + 1;

        goto label5;

     label6:
        if $i0 != 1 goto label7;

        $r5 = staticinvoke <org.apache.xmlbeans.QNameSet: org.apache.xmlbeans.QNameSet forSets(java.util.Set,java.util.Set,java.util.Set,java.util.Set)>($r1, null, $r2, $r3);

        return $r5;

     label7:
        $r4 = staticinvoke <org.apache.xmlbeans.QNameSet: org.apache.xmlbeans.QNameSet forSets(java.util.Set,java.util.Set,java.util.Set,java.util.Set)>(null, $r1, $r3, $r2);

        return $r4;
    }

    void writeQNameSet(org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.QNameSet r0;
        byte $b3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r2;
        int $i0, $i1, $i2;
        java.lang.String $r11;
        boolean z0, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator $r3, $r4, $r5;
        java.util.Set $r1, $r12, $r13, $r14;
        java.lang.Object $r6, $r8, $r10;
        javax.xml.namespace.QName $r7, $r9;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: org.apache.xmlbeans.QNameSet;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.QNameSet: java.util.Set excludedURIs()>();

        if $r1 == null goto label01;

        $z6 = 1;

        $z5 = 1;

        goto label02;

     label01:
        $z6 = 0;

        $z5 = 0;

     label02:
        z0 = $z5;

        if $z6 == 0 goto label03;

        $b3 = 1;

        goto label04;

     label03:
        $b3 = 0;

     label04:
        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($b3);

        if z0 == 0 goto label05;

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.QNameSet: java.util.Set excludedURIs()>();

        goto label06;

     label05:
        $r12 = virtualinvoke r0.<org.apache.xmlbeans.QNameSet: java.util.Set includedURIs()>();

     label06:
        $i0 = interfaceinvoke $r12.<java.util.Set: int size()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r10 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r10;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeString(java.lang.String)>($r11);

        goto label07;

     label08:
        if z0 == 0 goto label09;

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.QNameSet: java.util.Set excludedQNamesInIncludedURIs()>();

        goto label10;

     label09:
        $r13 = virtualinvoke r0.<org.apache.xmlbeans.QNameSet: java.util.Set includedQNamesInExcludedURIs()>();

     label10:
        $i1 = interfaceinvoke $r13.<java.util.Set: int size()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i1);

        $r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (javax.xml.namespace.QName) $r8;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r9);

        goto label11;

     label12:
        if z0 == 0 goto label13;

        $r14 = virtualinvoke r0.<org.apache.xmlbeans.QNameSet: java.util.Set includedQNamesInExcludedURIs()>();

        goto label14;

     label13:
        $r14 = virtualinvoke r0.<org.apache.xmlbeans.QNameSet: java.util.Set excludedQNamesInIncludedURIs()>();

     label14:
        $i2 = interfaceinvoke $r14.<java.util.Set: int size()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i2);

        $r5 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (javax.xml.namespace.QName) $r6;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQName(javax.xml.namespace.QName)>($r7);

        goto label15;

     label16:
        return;
    }

    byte[] readByteArray()
    {
        java.io.DataInputStream $r1, $r3;
        byte[] r2;
        java.io.IOException $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r7;
        short $s0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i1;
        org.apache.xmlbeans.SchemaTypeLoaderException $r10;
        java.lang.String $r6, $r8, $r9;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        $s0 = virtualinvoke $r1.<java.io.DataInputStream: short readShort()>();

        $i1 = (int) $s0;

        r2 = newarray (byte)[$i1];

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataInputStream _input>;

        virtualinvoke $r3.<java.io.DataInputStream: void readFully(byte[])>(r2);

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        $r10 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r6 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r7);

        $r9 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r10.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r6, $r8, $r9, 9);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void writeByteArray(byte[])
    {
        byte[] r1;
        java.io.IOException $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r7;
        java.io.DataOutputStream $r2, $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0;
        org.apache.xmlbeans.SchemaTypeLoaderException $r5;
        java.lang.String $r6, $r8, $r9;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r1 := @parameter0: byte[];

     label1:
        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>($i0);

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.io.DataOutputStream _output>;

        virtualinvoke $r3.<java.io.DataOutputStream: void write(byte[])>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.xmlbeans.SchemaTypeLoaderException;

        $r6 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String access$100(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)>($r7);

        $r9 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: java.lang.String _handle>;

        specialinvoke $r5.<org.apache.xmlbeans.SchemaTypeLoaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r6, $r8, $r9, 9);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    java.math.BigInteger readBigInteger()
    {
        byte[] $r1;
        byte $b3, $b4;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r0;
        int $i0, $i1, $i2;
        java.math.BigInteger $r2, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: byte[] readByteArray()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof $r1;

        if $i1 != 1 goto label2;

        $b4 = $r1[0];

        if $b4 != 0 goto label2;

        $r4 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        return $r4;

     label2:
        $i2 = lengthof $r1;

        if $i2 != 1 goto label3;

        $b3 = $r1[0];

        if $b3 != 1 goto label3;

        $r3 = <java.math.BigInteger: java.math.BigInteger ONE>;

        return $r3;

     label3:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(byte[])>($r1);

        return $r2;
    }

    void writeBigInteger(java.math.BigInteger)
    {
        byte[] $r2, $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader r1;
        int $i0;
        java.math.BigInteger r0;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader;

        r0 := @parameter0: java.math.BigInteger;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeShort(int)>(0);

        goto label3;

     label1:
        $i0 = virtualinvoke r0.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        $r3 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: byte[] SINGLE_ZERO_BYTE>;

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeByteArray(byte[])>($r3);

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<java.math.BigInteger: byte[] toByteArray()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeByteArray(byte[])>($r2);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl");

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeSystemImpl>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
