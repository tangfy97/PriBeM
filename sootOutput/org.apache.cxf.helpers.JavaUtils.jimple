public final class org.apache.cxf.helpers.JavaUtils extends java.lang.Object
{
    static final char KEYWORD_PREFIX;
    private static final java.util.Set KEYWORDS;

    private void <init>()
    {
        org.apache.cxf.helpers.JavaUtils r0;

        r0 := @this: org.apache.cxf.helpers.JavaUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isJavaKeyword(java.lang.String)
    {
        java.util.Set $r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.cxf.helpers.JavaUtils: java.util.Set KEYWORDS>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    public static java.lang.String makeNonJavaKeyword(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.String[] $r1;
        java.util.List $r2;

        <org.apache.cxf.helpers.JavaUtils: char KEYWORD_PREFIX> = 95;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.String)[53];

        $r1[0] = "abstract";

        $r1[1] = "assert";

        $r1[2] = "boolean";

        $r1[3] = "break";

        $r1[4] = "byte";

        $r1[5] = "case";

        $r1[6] = "catch";

        $r1[7] = "char";

        $r1[8] = "class";

        $r1[9] = "const";

        $r1[10] = "continue";

        $r1[11] = "default";

        $r1[12] = "do";

        $r1[13] = "double";

        $r1[14] = "else";

        $r1[15] = "enum";

        $r1[16] = "extends";

        $r1[17] = "false";

        $r1[18] = "final";

        $r1[19] = "finally";

        $r1[20] = "float";

        $r1[21] = "for";

        $r1[22] = "goto";

        $r1[23] = "if";

        $r1[24] = "implements";

        $r1[25] = "import";

        $r1[26] = "instanceof";

        $r1[27] = "int";

        $r1[28] = "interface";

        $r1[29] = "long";

        $r1[30] = "native";

        $r1[31] = "new";

        $r1[32] = "null";

        $r1[33] = "package";

        $r1[34] = "private";

        $r1[35] = "protected";

        $r1[36] = "public";

        $r1[37] = "return";

        $r1[38] = "short";

        $r1[39] = "static";

        $r1[40] = "strictfp";

        $r1[41] = "super";

        $r1[42] = "switch";

        $r1[43] = "synchronized";

        $r1[44] = "this";

        $r1[45] = "throw";

        $r1[46] = "throws";

        $r1[47] = "transient";

        $r1[48] = "true";

        $r1[49] = "try";

        $r1[50] = "void";

        $r1[51] = "volatile";

        $r1[52] = "while";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        <org.apache.cxf.helpers.JavaUtils: java.util.Set KEYWORDS> = $r0;

        return;
    }
}
