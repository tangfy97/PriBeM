public abstract class org.springframework.aop.config.AopNamespaceUtils extends java.lang.Object
{
    public static final java.lang.String PROXY_TARGET_CLASS_ATTRIBUTE;
    private static final java.lang.String EXPOSE_PROXY_ATTRIBUTE;

    public void <init>()
    {
        org.springframework.aop.config.AopNamespaceUtils r0;

        r0 := @this: org.springframework.aop.config.AopNamespaceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.config.BeanDefinition $r4;
        java.lang.Object $r3;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1, $r5;

        r0 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter1: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r2);

        $r4 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>($r1, $r3);

        $r5 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void useClassProxyingIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.w3c.dom.Element)>($r5, r2);

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void registerComponentIfNecessary(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext)>($r4, r0);

        return;
    }

    public static void registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.config.BeanDefinition $r4;
        java.lang.Object $r3;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1, $r5;

        r0 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter1: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r2);

        $r4 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>($r1, $r3);

        $r5 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void useClassProxyingIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.w3c.dom.Element)>($r5, r2);

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void registerComponentIfNecessary(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext)>($r4, r0);

        return;
    }

    public static void registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.config.BeanDefinition $r4;
        java.lang.Object $r3;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1, $r5;

        r0 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter1: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r2);

        $r4 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>($r1, $r3);

        $r5 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void useClassProxyingIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.w3c.dom.Element)>($r5, r2);

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void registerComponentIfNecessary(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext)>($r4, r0);

        return;
    }

    public static void registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
    {
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.config.BeanDefinition $r3;
        java.lang.Object r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1;

        r0 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r3 = staticinvoke <org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>($r1, r2);

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void registerComponentIfNecessary(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext)>($r3, r0);

        return;
    }

    public static void forceAutoProxyCreatorToUseClassProxying(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        staticinvoke <org.springframework.aop.config.AopConfigUtils: void forceAutoProxyCreatorToUseClassProxying(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r0);

        return;
    }

    private static void useClassProxyingIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.w3c.dom.Element)
    {
        org.springframework.beans.factory.support.BeanDefinitionRegistry r5;
        org.w3c.dom.Element r0;
        java.lang.Boolean $r2, $r4;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;

        r5 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        r0 := @parameter1: org.w3c.dom.Element;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("proxy-target-class");

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.springframework.aop.config.AopConfigUtils: void forceAutoProxyCreatorToUseClassProxying(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r5);

     label1:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("expose-proxy");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        staticinvoke <org.springframework.aop.config.AopConfigUtils: void forceAutoProxyCreatorToExposeProxy(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r5);

     label2:
        return;
    }

    private static void registerComponentIfNecessary(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.config.BeanDefinition r0;
        org.springframework.beans.factory.parsing.BeanComponentDefinition $r1;
        org.springframework.beans.factory.xml.ParserContext r2;

        r0 := @parameter0: org.springframework.beans.factory.config.BeanDefinition;

        r2 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        if r0 == null goto label1;

        $r1 = new org.springframework.beans.factory.parsing.BeanComponentDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.parsing.BeanComponentDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r0, "org.springframework.aop.config.internalAutoProxyCreator");

        virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>($r1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.springframework.aop.config.AopNamespaceUtils: java.lang.String EXPOSE_PROXY_ATTRIBUTE> = "expose-proxy";

        <org.springframework.aop.config.AopNamespaceUtils: java.lang.String PROXY_TARGET_CLASS_ATTRIBUTE> = "proxy-target-class";

        return;
    }
}
