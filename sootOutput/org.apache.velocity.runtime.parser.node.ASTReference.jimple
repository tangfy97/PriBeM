public class org.apache.velocity.runtime.parser.node.ASTReference extends org.apache.velocity.runtime.parser.node.SimpleNode
{
    private static final int NORMAL_REFERENCE;
    private static final int FORMAL_REFERENCE;
    private static final int QUIET_REFERENCE;
    private static final int RUNT;
    private int referenceType;
    private java.lang.String nullString;
    private java.lang.String rootString;
    private boolean escaped;
    private boolean computableReference;
    private boolean logOnNull;
    private java.lang.String escPrefix;
    private java.lang.String morePrefix;
    private java.lang.String identifier;
    private java.lang.String literal;
    public boolean strictRef;
    private org.apache.velocity.runtime.parser.node.ASTIndex astIndex;
    public boolean strictEscape;
    public boolean toStringNullCheck;
    private int numChildren;
    protected org.apache.velocity.util.introspection.Info uberInfo;

    public void <init>(int)
    {
        int i0;
        org.apache.velocity.runtime.parser.node.ASTReference r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(int)>(i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean computableReference> = 1;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean logOnNull> = 1;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String morePrefix> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal> = null;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex> = null;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictEscape> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean toStringNullCheck> = 1;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren> = 0;

        return;
    }

    public void <init>(org.apache.velocity.runtime.parser.Parser, int)
    {
        int i0;
        org.apache.velocity.runtime.parser.Parser r1;
        org.apache.velocity.runtime.parser.node.ASTReference r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r1 := @parameter0: org.apache.velocity.runtime.parser.Parser;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(org.apache.velocity.runtime.parser.Parser,int)>(r1, i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean computableReference> = 1;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean logOnNull> = 1;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String morePrefix> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal> = null;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex> = null;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictEscape> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean toStringNullCheck> = 1;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren> = 0;

        return;
    }

    public java.lang.Object jjtAccept(org.apache.velocity.runtime.parser.node.ParserVisitor, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ParserVisitor r0;
        java.lang.Object r2, $r3;
        org.apache.velocity.runtime.parser.node.ASTReference r1;

        r1 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ParserVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<org.apache.velocity.runtime.parser.node.ParserVisitor: java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTReference,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.Object init(org.apache.velocity.context.InternalContextAdapter, java.lang.Object) throws org.apache.velocity.exception.TemplateInitException
    {
        org.apache.velocity.runtime.parser.Token $r11;
        org.apache.velocity.runtime.parser.node.ASTIndex $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.velocity.util.introspection.Info $r14;
        org.apache.velocity.runtime.RuntimeServices $r3, $r4, $r5, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r6, $r7, $r8, $r12, $r15;
        org.apache.velocity.runtime.parser.node.Node $r9, $r10, r17;
        org.apache.velocity.runtime.parser.node.ASTReference r0;
        org.apache.velocity.context.InternalContextAdapter r1;
        java.lang.Object r2;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.Object init(org.apache.velocity.context.InternalContextAdapter,java.lang.Object)>(r1, r2);

        $r3 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z0 = interfaceinvoke $r3.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("runtime.references.strict.escape", 0);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictEscape> = $z0;

        $r4 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z1 = interfaceinvoke $r4.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("runtime.references.strict", 0);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef> = $z1;

        $r5 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z2 = interfaceinvoke $r5.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("directive.if.tostring.nullcheck", 1);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean toStringNullCheck> = $z2;

        $r6 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getRoot()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString> = $r7;

        $i0 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int jjtGetNumChildren()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren> = $i0;

        $r8 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal> = $r8;

        $i1 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren>;

        if $i1 <= 0 goto label2;

        $i3 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren>;

        $i4 = $i3 - 1;

        $r10 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>($i4);

        $z8 = $r10 instanceof org.apache.velocity.runtime.parser.node.ASTIndex;

        if $z8 == 0 goto label1;

        $r13 = (org.apache.velocity.runtime.parser.node.ASTIndex) $r10;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex> = $r13;

        goto label2;

     label1:
        $r11 = interfaceinvoke $r10.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        $r12 = $r11.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier> = $r12;

     label2:
        $r14 = new org.apache.velocity.util.introspection.Info;

        $r15 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getTemplateName()>();

        $i5 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int getLine()>();

        $i6 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int getColumn()>();

        specialinvoke $r14.<org.apache.velocity.util.introspection.Info: void <init>(java.lang.String,int,int)>($r15, $i5, $i6);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo> = $r14;

        $r16 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z9 = interfaceinvoke $r16.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("runtime.log.invalid.references", 1);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean logOnNull> = $z9;

        $z10 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z10 == 0 goto label5;

        $i2 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren>;

        if $i2 != 0 goto label5;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean logOnNull> = 0;

        $r9 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetParent()>();

        r17 = $r9;

        $z3 = $r9 instanceof org.apache.velocity.runtime.parser.node.ASTNotNode;

        if $z3 != 0 goto label3;

        $z5 = $r9 instanceof org.apache.velocity.runtime.parser.node.ASTExpression;

        if $z5 != 0 goto label3;

        $z6 = $r9 instanceof org.apache.velocity.runtime.parser.node.ASTOrNode;

        if $z6 != 0 goto label3;

        $z7 = $r9 instanceof org.apache.velocity.runtime.parser.node.ASTAndNode;

        if $z7 == 0 goto label5;

     label3:
        if r17 == null goto label5;

        $z4 = r17 instanceof org.apache.velocity.runtime.parser.node.ASTIfStatement;

        if $z4 == 0 goto label4;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef> = 0;

        goto label5;

     label4:
        r17 = interfaceinvoke r17.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.node.Node jjtGetParent()>();

        goto label3;

     label5:
        return r2;
    }

    public java.lang.String getRootString()
    {
        java.lang.String $r1;
        org.apache.velocity.runtime.parser.node.ASTReference r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        $r1 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        return $r1;
    }

    public java.lang.Object execute(java.lang.Object, org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.runtime.parser.Token $r10, $r22, $r39;
        org.apache.velocity.exception.VelocityException $r70;
        java.lang.StringBuffer $r7, $r21, $r24, $r27, $r31, $r33, $r42, $r43, $r44, $r50, $r55, $r57, $r68, $r69, $r71, $r72;
        java.lang.String $r2, $r5, $r6, $r12, $r16, $r18, $r23, $r26, $r30, $r32, $r34, $r46, $r49, $r51, $r54, $r56, $r58, $r62, r66, r67;
        org.apache.velocity.runtime.parser.node.ASTReference r0;
        org.apache.velocity.context.InternalContextAdapter r1;
        org.apache.velocity.exception.MethodInvocationException $r61;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.velocity.util.introspection.Info $r13, $r19, $r35, $r45, $r59;
        org.apache.velocity.runtime.RuntimeServices $r11, $r17, $r29, $r53;
        int $i0, $i1, $i2, i3, i4, $i5, i6, $i8, $i10;
        org.apache.velocity.runtime.parser.node.Node $r8, $r9, $r14, $r20, $r36, $r38, $r47, $r48;
        org.apache.velocity.runtime.parser.node.ASTMethod $r15, $r25;
        java.lang.Object $r3, $r37, $r60, r63, r64, r65;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r63 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        $i0 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType>;

        if $i0 != 4 goto label01;

        return null;

     label01:
        $r2 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.Object getVariableValue(org.apache.velocity.context.Context,java.lang.String)>(r1, $r2);

        r64 = $r3;

        if $r3 != null goto label02;

        $z4 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z4 != 0 goto label02;

        $r53 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r68 = new java.lang.StringBuffer;

        specialinvoke $r68.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getDollarBang()>();

        $r55 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        $r56 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        $r59 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r60 = staticinvoke <org.apache.velocity.app.event.EventHandlerUtil: java.lang.Object invalidGetMethod(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,java.lang.String,java.lang.Object,java.lang.String,org.apache.velocity.util.introspection.Info)>($r53, r1, $r58, null, null, $r59);

        return $r60;

     label02:
        r65 = $r3;

        $i8 = (int) -1;

        i3 = $i8;

        i4 = 0;

     label03:
        $i5 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren>;

        if i4 >= $i5 goto label06;

        $z2 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z2 == 0 goto label04;

        if r64 != null goto label04;

        $r38 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i4);

        $r39 = interfaceinvoke $r38.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        r66 = $r39.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r70 = new org.apache.velocity.exception.VelocityException;

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attempted to access \'");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r66);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' on a null value at ");

        $r45 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r46 = virtualinvoke $r45.<org.apache.velocity.util.introspection.Info: java.lang.String getTemplateName()>();

        $r47 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i4);

        $i1 = interfaceinvoke $r47.<org.apache.velocity.runtime.parser.node.Node: int getLine()>();

        $r48 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i4);

        $i2 = interfaceinvoke $r48.<org.apache.velocity.runtime.parser.node.Node: int getColumn()>();

        $r49 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(java.lang.String,int,int)>($r46, $i1, $i2);

        $r50 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r70.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r51);

        throw $r70;

     label04:
        r65 = r64;

        $r36 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i4);

        $r37 = interfaceinvoke $r36.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object execute(java.lang.Object,org.apache.velocity.context.InternalContextAdapter)>(r64, r1);

        r64 = $r37;

        if $r37 != null goto label05;

        $z3 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z3 != 0 goto label05;

        i3 = i4;

        goto label06;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        if r64 != null goto label13;

        $i10 = (int) -1;

        if i3 != $i10 goto label07;

        $r29 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r71 = new java.lang.StringBuffer;

        specialinvoke $r71.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getDollarBang()>();

        $r31 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        $r35 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        r64 = staticinvoke <org.apache.velocity.app.event.EventHandlerUtil: java.lang.Object invalidGetMethod(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,java.lang.String,java.lang.Object,java.lang.String,org.apache.velocity.util.introspection.Info)>($r29, r1, $r34, r65, null, $r35);

        goto label13;

     label07:
        $r72 = new java.lang.StringBuffer;

        $r5 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getDollarBang()>();

        specialinvoke $r72.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        $r7 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i6 = 0;

     label08:
        if i6 > i3 goto label11;

        $r20 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i6);

        $z1 = $r20 instanceof org.apache.velocity.runtime.parser.node.ASTMethod;

        if $z1 == 0 goto label09;

        $r24 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r25 = (org.apache.velocity.runtime.parser.node.ASTMethod) $r20;

        $r26 = virtualinvoke $r25.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String getMethodName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("()");

        goto label10;

     label09:
        $r21 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r22 = interfaceinvoke $r20.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        $r23 = $r22.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

     label10:
        i6 = i6 + 1;

        goto label08;

     label11:
        $r8 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i3);

        $z0 = $r8 instanceof org.apache.velocity.runtime.parser.node.ASTMethod;

        if $z0 == 0 goto label12;

        $r14 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i3);

        $r15 = (org.apache.velocity.runtime.parser.node.ASTMethod) $r14;

        $r16 = virtualinvoke $r15.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String getMethodName()>();

        $r17 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r18 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        r64 = staticinvoke <org.apache.velocity.app.event.EventHandlerUtil: java.lang.Object invalidMethod(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,java.lang.String,java.lang.Object,java.lang.String,org.apache.velocity.util.introspection.Info)>($r17, r1, $r18, r65, $r16, $r19);

        goto label13;

     label12:
        $r9 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i3);

        $r10 = interfaceinvoke $r9.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        r67 = $r10.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r11 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r12 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        r64 = staticinvoke <org.apache.velocity.app.event.EventHandlerUtil: java.lang.Object invalidGetMethod(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,java.lang.String,java.lang.Object,java.lang.String,org.apache.velocity.util.introspection.Info)>($r11, r1, $r12, r65, r67, $r13);

     label13:
        return r64;

     label14:
        $r61 := @caughtexception;

        $r62 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        virtualinvoke $r61.<org.apache.velocity.exception.MethodInvocationException: void setReferenceName(java.lang.String)>($r62);

        throw $r61;

        catch org.apache.velocity.exception.MethodInvocationException from label02 to label13 with label14;
    }

    public boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer) throws java.io.IOException, org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.exception.VelocityException $r33, $r46;
        java.lang.StringBuffer $r10, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r25, $r27, $r30, $r31, $r34, $r35, $r37, $r38, $r41, $r42, $r44, $r47, $r48, $r50, $r51, $r53, $r63, $r65, $r66, $r68, $r69, $r71;
        java.lang.String $r2, $r5, $r7, $r8, $r13, $r20, $r23, $r24, $r28, $r29, $r32, $r36, $r40, $r43, $r45, $r49, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r67, $r70, $r72, r74, $r75;
        org.apache.velocity.runtime.parser.node.ASTReference r0;
        org.apache.velocity.context.InternalContextAdapter r1;
        org.apache.velocity.runtime.Renderable r57;
        java.lang.RuntimeException $r62;
        org.apache.velocity.runtime.log.Log $r9, $r11, $r26, $r64;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.io.Writer r6;
        org.apache.velocity.runtime.RuntimeServices $r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r4, r73;
        java.lang.Class $r39;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r6 := @parameter1: java.io.Writer;

        $i0 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType>;

        if $i0 != 4 goto label01;

        $r61 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r61);

        return 1;

     label01:
        $z0 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped>;

        if $z0 == 0 goto label02;

        $z7 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictEscape>;

        if $z7 == 0 goto label02;

        r73 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label03;

     label02:
        r73 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.Object execute(java.lang.Object,org.apache.velocity.context.InternalContextAdapter)>(null, r1);

     label03:
        $z9 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped>;

        if $z9 == 0 goto label06;

        $r58 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getNullString(org.apache.velocity.context.InternalContextAdapter)>(r1);

        if r73 != null goto label04;

        $r60 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r60);

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>("\\");

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r58);

        goto label05;

     label04:
        $r59 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r59);

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r58);

     label05:
        return 1;

     label06:
        $r3 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r2 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal>;

        $r4 = staticinvoke <org.apache.velocity.app.event.EventHandlerUtil: java.lang.Object referenceInsert(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,java.lang.String,java.lang.Object)>($r3, r1, $r2, r73);

        r74 = null;

        if $r4 == null goto label14;

        $z5 = $r4 instanceof org.apache.velocity.runtime.Renderable;

        if $z5 == 0 goto label13;

        r57 = (org.apache.velocity.runtime.Renderable) $r4;

     label07:
        $z6 = interfaceinvoke r57.<org.apache.velocity.runtime.Renderable: boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer)>(r1, r6);

        if $z6 == 0 goto label09;

     label08:
        return 1;

     label09:
        goto label13;

     label10:
        $r62 := @caughtexception;

        $r64 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception rendering ");

        $z8 = r57 instanceof org.apache.velocity.runtime.directive.Block$Reference;

        if $z8 == 0 goto label11;

        $r75 = "block ";

        goto label12;

     label11:
        $r75 = "Renderable ";

     label12:
        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r67 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        $r68 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at ");

        $r70 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r0);

        $r71 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r64.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r72);

        throw $r62;

     label13:
        r74 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

     label14:
        if $r4 == null goto label15;

        if r74 != null goto label21;

     label15:
        $z1 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z1 == 0 goto label18;

        $i4 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType>;

        if $i4 == 3 goto label17;

        $r26 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Prepend the reference with \'$!\' e.g., $!");

        $r28 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int)>(1);

        $r30 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" if you want Velocity to ignore the reference when it evaluates to null");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r26.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r32);

        if $r4 != null goto label16;

        $r46 = new org.apache.velocity.exception.VelocityException;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reference ");

        $r49 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" evaluated to null when attempting to render at ");

        $r52 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r0);

        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r46.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r54);

        throw $r46;

     label16:
        $r33 = new org.apache.velocity.exception.VelocityException;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reference ");

        $r36 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" evaluated to object ");

        $r39 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" whose toString() method returned null at ");

        $r43 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r0);

        $r44 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r33.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r45);

        throw $r33;

     label17:
        return 1;

     label18:
        $r5 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getNullString(org.apache.velocity.context.InternalContextAdapter)>(r1);

        $z2 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictEscape>;

        if $z2 != 0 goto label19;

        $r24 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r24);

     label19:
        $r7 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r7);

        $r8 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String morePrefix>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r8);

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r5);

        $z3 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean logOnNull>;

        if $z3 == 0 goto label20;

        $i1 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType>;

        if $i1 == 3 goto label20;

        $r9 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        $z4 = virtualinvoke $r9.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label20;

        $r11 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Null reference [template \'");

        $r13 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getTemplateName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', line ");

        $i2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int getLine()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", column ");

        $i3 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int getColumn()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] : ");

        $r20 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cannot be resolved.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r23);

     label20:
        return 1;

     label21:
        $r55 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r55);

        $r56 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String morePrefix>;

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>($r56);

        virtualinvoke r6.<java.io.Writer: void write(java.lang.String)>(r74);

        return 1;

        catch java.lang.RuntimeException from label07 to label08 with label10;
    }

    private java.lang.String getNullString(org.apache.velocity.context.InternalContextAdapter)
    {
        org.apache.velocity.context.InternalContextAdapter r0;
        java.lang.StringBuffer $r1, $r2, $r5;
        java.lang.Object $r7;
        java.lang.String $r4, $r6, $r8, $r10;
        org.apache.velocity.runtime.parser.node.Node $r9;
        org.apache.velocity.runtime.parser.node.ASTReference r3;

        r3 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r0 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".literal.");

        $r4 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = interfaceinvoke r0.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object get(java.lang.String)>($r6);

        if $r7 == null goto label1;

        $r9 = (org.apache.velocity.runtime.parser.node.Node) $r7;

        $r10 = interfaceinvoke $r9.<org.apache.velocity.runtime.parser.node.Node: java.lang.String literal()>();

        return $r10;

     label1:
        $r8 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString>;

        return $r8;
    }

    public boolean evaluate(org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        java.lang.StringBuffer $r7, $r8, $r10;
        java.lang.Boolean $r4;
        java.lang.String $r3, $r9, $r11;
        org.apache.velocity.exception.VelocityException $r6;
        org.apache.velocity.runtime.parser.node.ASTReference r0;
        boolean $z0, $z1, $z2, $z3;
        org.apache.velocity.context.InternalContextAdapter r1;
        java.lang.Exception $r5;
        java.lang.Object $r2;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.Object execute(java.lang.Object,org.apache.velocity.context.InternalContextAdapter)>(null, r1);

        if $r2 != null goto label1;

        return 0;

     label1:
        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label3;

        $r4 = (java.lang.Boolean) $r2;

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $z1 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean toStringNullCheck>;

        if $z1 == 0 goto label8;

     label4:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        if $r3 == null goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;

     label7:
        $r5 := @caughtexception;

        $r6 = new org.apache.velocity.exception.VelocityException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reference evaluation threw an exception at ");

        $r9 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r5);

        throw $r6;

     label8:
        return 1;

        catch java.lang.Exception from label4 to label6 with label7;
    }

    public java.lang.Object value(org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.context.InternalContextAdapter r1;
        java.lang.Object $r2;
        org.apache.velocity.runtime.parser.node.ASTReference r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $z0 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean computableReference>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.Object execute(java.lang.Object,org.apache.velocity.context.InternalContextAdapter)>(null, r1);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.lang.String printClass(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r1 = "null";

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

     label2:
        return $r1;
    }

    public boolean setValue(org.apache.velocity.context.InternalContextAdapter, java.lang.Object) throws org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.util.introspection.VelPropertySet $r10;
        org.apache.velocity.runtime.parser.Token $r70;
        org.apache.velocity.exception.VelocityException $r40, $r99;
        org.apache.velocity.util.introspection.Uberspect $r6;
        java.lang.Object[] $r32;
        java.lang.StringBuffer $r12, $r13, $r16, $r17, $r19, $r20, $r41, $r42, $r45, $r46, $r49, $r50, $r53, $r54, $r57, $r62, $r63, $r66, $r72, $r73, $r74, $r75, $r81, $r82, $r85, $r90, $r91, $r92, $r93, $r96, $r103, $r104, $r106, $r107, $r109, $r110, $r113, $r120, $r121, $r122, $r123, $r126, $r127, $r130, $r131, $r133;
        org.apache.velocity.context.InternalContextAdapter r1;
        java.lang.Class[] $r33;
        org.apache.velocity.util.introspection.VelMethod $r39, r147;
        org.apache.velocity.exception.MethodInvocationException $r11, $r71, $r102, $r119;
        org.apache.velocity.runtime.parser.node.ASTIndex $r4, $r27, $r30, $r38, $r55, $r59, $r136, $r139, $r140;
        org.apache.velocity.util.introspection.Info $r8, $r22, $r25, $r26, $r64, $r77, $r83, $r94;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.lang.Object $r3, r7, $r29, $r31, $r34, $r35, $r36, $r37, $r61, r142;
        java.lang.Class $r14, $r43, $r47, $r51, $r108, $r124, $r128, $r132, $r144, $r145;
        java.lang.Exception $r89, $r118;
        java.lang.reflect.InvocationTargetException $r101;
        java.lang.Throwable $r111, $r115, $r135;
        java.lang.String $r2, $r9, $r15, $r18, $r21, $r23, $r24, $r44, $r48, $r52, $r56, $r58, $r65, $r67, $r76, $r78, $r84, $r86, $r88, $r95, $r97, $r105, $r112, $r114, $r116, $r117, $r125, $r129, $r134, $r137, $r138, r143, r146;
        org.apache.velocity.runtime.parser.node.ASTReference r0;
        java.lang.RuntimeException $r100, $r141;
        org.apache.velocity.runtime.log.Log $r68, $r87, $r98;
        boolean $z0, $z1, $z2;
        org.apache.velocity.runtime.RuntimeServices $r5;
        org.apache.velocity.runtime.parser.node.Node $r28, $r60, $r69, $r79, $r80;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r7 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int jjtGetNumChildren()>();

        if $i0 != 0 goto label01;

        $r88 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        interfaceinvoke r1.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object put(java.lang.String,java.lang.Object)>($r88, r7);

        return 1;

     label01:
        $r2 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String rootString>;

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.Object getVariableValue(org.apache.velocity.context.Context,java.lang.String)>(r1, $r2);

        r142 = $r3;

        if $r3 != null goto label02;

        $r81 = new java.lang.StringBuffer;

        specialinvoke $r81.<java.lang.StringBuffer: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("reference set is not a valid reference at ");

        $r83 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r84 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.util.introspection.Info)>($r83);

        $r85 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.String toString()>();

        $r87 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r87.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r86);

        return 0;

     label02:
        i14 = 0;

     label03:
        $i1 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int numChildren>;

        $i2 = $i1 - 1;

        if i14 >= $i2 goto label06;

        $r60 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i14);

        $r61 = interfaceinvoke $r60.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object execute(java.lang.Object,org.apache.velocity.context.InternalContextAdapter)>(r142, r1);

        r142 = $r61;

        if $r61 != null goto label05;

        $z2 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z2 == 0 goto label04;

        $i5 = i14 + 1;

        $r69 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>($i5);

        $r70 = interfaceinvoke $r69.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        r143 = $r70.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r71 = new org.apache.velocity.exception.MethodInvocationException;

        $r72 = new java.lang.StringBuffer;

        specialinvoke $r72.<java.lang.StringBuffer: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attempted to access \'");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r143);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' on a null value");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        $r77 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r78 = virtualinvoke $r77.<org.apache.velocity.util.introspection.Info: java.lang.String getTemplateName()>();

        $i6 = i14 + 1;

        $r79 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>($i6);

        $i7 = interfaceinvoke $r79.<org.apache.velocity.runtime.parser.node.Node: int getLine()>();

        $i8 = i14 + 1;

        $r80 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>($i8);

        $i9 = interfaceinvoke $r80.<org.apache.velocity.runtime.parser.node.Node: int getColumn()>();

        specialinvoke $r71.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r76, null, r143, $r78, $i7, $i9);

        throw $r71;

     label04:
        $r62 = new java.lang.StringBuffer;

        specialinvoke $r62.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("reference set is not a valid reference at ");

        $r64 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r65 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.util.introspection.Info)>($r64);

        $r66 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        $r68 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r68.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r67);

        return 0;

     label05:
        i14 = i14 + 1;

        goto label03;

     label06:
        $r4 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        if $r4 == null goto label18;

        $r27 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        $r28 = virtualinvoke $r27.<org.apache.velocity.runtime.parser.node.ASTIndex: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r29 = interfaceinvoke $r28.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r1);

        $r30 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        $r31 = staticinvoke <org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.Object adjMinusIndexArg(java.lang.Object,java.lang.Object,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.SimpleNode)>($r29, r142, r1, $r30);

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = $r31;

        $r32[1] = r7;

        $r33 = newarray (java.lang.Class)[2];

        $r34 = $r32[0];

        if $r34 != null goto label07;

        $r144 = null;

        goto label08;

     label07:
        $r35 = $r32[0];

        $r144 = virtualinvoke $r35.<java.lang.Object: java.lang.Class getClass()>();

     label08:
        $r33[0] = $r144;

        $r36 = $r32[1];

        if $r36 != null goto label09;

        $r145 = null;

        goto label10;

     label09:
        $r37 = $r32[1];

        $r145 = virtualinvoke $r37.<java.lang.Object: java.lang.Class getClass()>();

     label10:
        $r33[1] = $r145;

        r146 = "set";

        $r38 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        $r39 = staticinvoke <org.apache.velocity.util.ClassUtils: org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.Object,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.SimpleNode,boolean)>("set", $r32, $r33, r142, r1, $r38, 0);

        r147 = $r39;

        if $r39 != null goto label11;

        r146 = "put";

        $r59 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        r147 = staticinvoke <org.apache.velocity.util.ClassUtils: org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.Object,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.SimpleNode,boolean)>("put", $r32, $r33, r142, r1, $r59, 0);

     label11:
        if r147 != null goto label13;

        $z1 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z1 == 0 goto label12;

        $r40 = new org.apache.velocity.exception.VelocityException;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Found neither a \'set\' or \'put\' method with param types \'(");

        $r43 = $r33[0];

        $r44 = staticinvoke <org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String printClass(java.lang.Class)>($r43);

        $r45 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r47 = $r33[1];

        $r48 = staticinvoke <org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String printClass(java.lang.Class)>($r47);

        $r49 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")\' on class \'");

        $r51 = virtualinvoke r142.<java.lang.Object: java.lang.Class getClass()>();

        $r52 = virtualinvoke $r51.<java.lang.Class: java.lang.String getName()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' at ");

        $r55 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        $r56 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>($r55);

        $r57 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r40.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r58);

        throw $r40;

     label12:
        return 0;

     label13:
        interfaceinvoke r147.<org.apache.velocity.util.introspection.VelMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r142, $r32);

     label14:
        goto label17;

     label15:
        $r141 := @caughtexception;

        throw $r141;

     label16:
        $r118 := @caughtexception;

        $r119 = new org.apache.velocity.exception.MethodInvocationException;

        $r120 = new java.lang.StringBuffer;

        specialinvoke $r120.<java.lang.StringBuffer: void <init>()>();

        $r121 = virtualinvoke $r120.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception calling method \'");

        $r122 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r146);

        $r123 = virtualinvoke $r122.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r124 = $r33[0];

        $r125 = staticinvoke <org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String printClass(java.lang.Class)>($r124);

        $r126 = virtualinvoke $r123.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r125);

        $r127 = virtualinvoke $r126.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r128 = $r33[1];

        $r129 = staticinvoke <org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String printClass(java.lang.Class)>($r128);

        $r130 = virtualinvoke $r127.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")\' in  ");

        $r132 = virtualinvoke r142.<java.lang.Object: java.lang.Class getClass()>();

        $r133 = virtualinvoke $r131.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r132);

        $r134 = virtualinvoke $r133.<java.lang.StringBuffer: java.lang.String toString()>();

        $r135 = virtualinvoke $r118.<java.lang.Exception: java.lang.Throwable getCause()>();

        $r137 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier>;

        $r136 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        $r138 = virtualinvoke $r136.<org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.String getTemplateName()>();

        $r139 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        $i12 = virtualinvoke $r139.<org.apache.velocity.runtime.parser.node.ASTIndex: int getLine()>();

        $r140 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.node.ASTIndex astIndex>;

        $i13 = virtualinvoke $r140.<org.apache.velocity.runtime.parser.node.ASTIndex: int getColumn()>();

        specialinvoke $r119.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r134, $r135, $r137, $r138, $i12, $i13);

        throw $r119;

     label17:
        return 1;

     label18:
        $r5 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r6 = interfaceinvoke $r5.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.util.introspection.Uberspect getUberspect()>();

        $r9 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier>;

        $r8 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r10 = interfaceinvoke $r6.<org.apache.velocity.util.introspection.Uberspect: org.apache.velocity.util.introspection.VelPropertySet getPropertySet(java.lang.Object,java.lang.String,java.lang.Object,org.apache.velocity.util.introspection.Info)>(r142, $r9, r7, $r8);

        if $r10 != null goto label20;

        $z0 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z0 == 0 goto label19;

        $r11 = new org.apache.velocity.exception.MethodInvocationException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Object \'");

        $r14 = virtualinvoke r142.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not contain property \'");

        $r18 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier>;

        $r22 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r24 = virtualinvoke $r22.<org.apache.velocity.util.introspection.Info: java.lang.String getTemplateName()>();

        $r25 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $i3 = virtualinvoke $r25.<org.apache.velocity.util.introspection.Info: int getLine()>();

        $r26 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $i4 = virtualinvoke $r26.<org.apache.velocity.util.introspection.Info: int getColumn()>();

        specialinvoke $r11.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r21, null, $r23, $r24, $i3, $i4);

        throw $r11;

     label19:
        return 0;

     label20:
        interfaceinvoke $r10.<org.apache.velocity.util.introspection.VelPropertySet: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r142, r7);

     label21:
        goto label25;

     label22:
        $r101 := @caughtexception;

        $r102 = new org.apache.velocity.exception.MethodInvocationException;

        $r103 = new java.lang.StringBuffer;

        specialinvoke $r103.<java.lang.StringBuffer: void <init>()>();

        $r104 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTReference : Invocation of method \'");

        $r105 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier>;

        $r106 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in  ");

        $r108 = virtualinvoke r142.<java.lang.Object: java.lang.Class getClass()>();

        $r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r108);

        $r110 = virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" threw exception ");

        $r111 = virtualinvoke $r101.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r112 = virtualinvoke $r111.<java.lang.Throwable: java.lang.String toString()>();

        $r113 = virtualinvoke $r110.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r112);

        $r114 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.String toString()>();

        $r115 = virtualinvoke $r101.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r116 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier>;

        $r117 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String getTemplateName()>();

        $i10 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int getLine()>();

        $i11 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: int getColumn()>();

        specialinvoke $r102.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r114, $r115, $r116, $r117, $i10, $i11);

        throw $r102;

     label23:
        $r100 := @caughtexception;

        throw $r100;

     label24:
        $r89 := @caughtexception;

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTReference setValue() : exception : ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r89);

        $r93 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" template at ");

        $r94 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r95 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.util.introspection.Info)>($r94);

        $r96 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.String toString()>();

        $r98 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r98.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r97, $r89);

        $r99 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r99.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r97, $r89);

        throw $r99;

     label25:
        return 1;

        catch java.lang.RuntimeException from label13 to label14 with label15;
        catch java.lang.Exception from label13 to label14 with label16;
        catch java.lang.reflect.InvocationTargetException from label18 to label19 with label22;
        catch java.lang.reflect.InvocationTargetException from label20 to label21 with label22;
        catch java.lang.RuntimeException from label18 to label19 with label23;
        catch java.lang.RuntimeException from label20 to label21 with label23;
        catch java.lang.Exception from label18 to label19 with label24;
        catch java.lang.Exception from label20 to label21 with label24;
    }

    private java.lang.String getRoot()
    {
        org.apache.velocity.runtime.parser.Token $r1, $r11, $r16;
        java.lang.StringBuffer $r20, $r23, $r39, $r42, $r46, $r49, $r60, $r61, $r62;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r40, $r41, $r43, $r45, $r47, $r48, $r50, $r51, $r52, $r53, $r55, $r56, $r57, $r58, $r59;
        org.apache.velocity.runtime.parser.node.ASTReference r0;
        org.apache.velocity.runtime.log.Log $r54;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1, $i2, $i3, $i5, $i6, i7, $i8, $i9, $i10, $i11, i14, i15, i16, $i17, $i19, $i21, $i22, $i23, $i24;
        char $c4, $c12, $c13;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        $r2 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("\\!");

        $i19 = (int) -1;

        if $i0 == $i19 goto label06;

        $z6 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictEscape>;

        if $z6 == 0 goto label01;

        $r57 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString> = $r57;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped> = 1;

        $r58 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        return $r58;

     label01:
        $r33 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i5 = virtualinvoke $r33.<java.lang.String: int length()>();

        $r34 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i6 = virtualinvoke $r34.<java.lang.String: int indexOf(int)>(36);

        i14 = $i6;

        $i21 = (int) -1;

        if $i6 != $i21 goto label02;

        $r54 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r54.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("ASTReference.getRoot() : internal error : no $ found for slashbang.");

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean computableReference> = 0;

        $r55 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString> = $r55;

        $r56 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString>;

        return $r56;

     label02:
        if i14 >= $i5 goto label03;

        $r53 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $c13 = virtualinvoke $r53.<java.lang.String: char charAt(int)>(i14);

        $i22 = (int) $c13;

        if $i22 == 92 goto label03;

        i14 = i14 + 1;

        goto label02;

     label03:
        i7 = i14;

        i15 = 0;

     label04:
        if i14 >= $i5 goto label05;

        $r52 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i11 = i14;

        i14 = i14 + 1;

        $c12 = virtualinvoke $r52.<java.lang.String: char charAt(int)>($i11);

        $i23 = (int) $c12;

        if $i23 != 92 goto label05;

        i15 = i15 + 1;

        goto label04;

     label05:
        $r35 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String substring(int,int)>(0, i7);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString> = $r36;

        $r60 = new java.lang.StringBuffer;

        specialinvoke $r60.<java.lang.StringBuffer: void <init>()>();

        $r38 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString>;

        $r39 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r40 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i8 = i7 + i15;

        $i9 = $i8 - 1;

        $r41 = virtualinvoke $r40.<java.lang.String: java.lang.String substring(int,int)>(i7, $i9);

        $r42 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString> = $r43;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r45 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString>;

        $r46 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i10 = i7 + i15;

        $r48 = virtualinvoke $r47.<java.lang.String: java.lang.String substring(int)>($i10);

        $r49 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString> = $r50;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean computableReference> = 0;

        $r51 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString>;

        return $r51;

     label06:
        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped> = 0;

        $r3 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("\\");

        if $z0 == 0 goto label11;

        i16 = 0;

        $r27 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i1 = virtualinvoke $r27.<java.lang.String: int length()>();

     label07:
        if i16 >= $i1 goto label08;

        $r32 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $c4 = virtualinvoke $r32.<java.lang.String: char charAt(int)>(i16);

        $i24 = (int) $c4;

        if $i24 != 92 goto label08;

        i16 = i16 + 1;

        goto label07;

     label08:
        $i2 = i16 % 2;

        if $i2 == 0 goto label09;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped> = 1;

     label09:
        if i16 <= 0 goto label10;

        $r30 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i3 = i16 / 2;

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String escPrefix> = $r31;

     label10:
        $r28 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int)>(i16);

        $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image> = $r29;

     label11:
        $r59 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $i17 = virtualinvoke $r59.<java.lang.String: int lastIndexOf(int)>(36);

        if $i17 <= 0 goto label12;

        $r62 = new java.lang.StringBuffer;

        specialinvoke $r62.<java.lang.StringBuffer: void <init>()>();

        $r19 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String morePrefix>;

        $r20 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String substring(int,int)>(0, $i17);

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String morePrefix> = $r24;

        $r25 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int)>($i17);

        $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image> = $r26;

     label12:
        $r4 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String literal()>();

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString> = $r4;

        $r5 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("$!");

        if $z1 == 0 goto label15;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType> = 3;

        $z4 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: boolean escaped>;

        if $z4 != 0 goto label13;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String nullString> = "";

     label13:
        $r13 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $z5 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("$!{");

        if $z5 == 0 goto label14;

        $r16 = $r1.<org.apache.velocity.runtime.parser.Token: org.apache.velocity.runtime.parser.Token next>;

        $r17 = $r16.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        return $r17;

     label14:
        $r14 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>(2);

        return $r15;

     label15:
        $r6 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("${");

        if $z2 == 0 goto label16;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType> = 2;

        $r11 = $r1.<org.apache.velocity.runtime.parser.Token: org.apache.velocity.runtime.parser.Token next>;

        $r12 = $r11.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        return $r12;

     label16:
        $r7 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("$");

        if $z3 == 0 goto label17;

        r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType> = 1;

        $r9 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(1);

        return $r10;

     label17:
        r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType> = 4;

        $r8 = $r1.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        return $r8;
    }

    public java.lang.Object getVariableValue(org.apache.velocity.context.Context, java.lang.String) throws org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.context.Context r0;
        org.apache.velocity.exception.MethodInvocationException $r13;
        boolean $z0, $z1;
        org.apache.velocity.util.introspection.Info $r9, $r19, $r22, $r23, $r30;
        java.lang.StringBuffer $r4, $r6, $r7, $r8, $r11, $r14, $r15, $r16, $r17, $r25, $r27, $r28, $r29, $r32;
        int $i0, $i1;
        java.lang.String r1, $r10, $r12, $r18, $r20, $r21, $r31, $r33;
        org.apache.velocity.runtime.parser.node.ASTReference r3;
        java.lang.RuntimeException $r24;
        org.apache.velocity.runtime.log.Log $r5, $r26;
        java.lang.Object $r2;

        r3 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        r0 := @parameter0: org.apache.velocity.context.Context;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.velocity.context.Context: java.lang.Object get(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r24 := @caughtexception;

        $r26 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception calling reference $");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at ");

        $r30 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r31 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.util.introspection.Info)>($r30);

        $r32 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r26.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r33);

        throw $r24;

     label4:
        $z0 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: boolean strictRef>;

        if $z0 == 0 goto label5;

        if $r2 != null goto label5;

        $z1 = interfaceinvoke r0.<org.apache.velocity.context.Context: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label5;

        $r5 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.runtime.log.Log log>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Variable $");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" has not been set at ");

        $r9 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r10 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.util.introspection.Info)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r12);

        $r13 = new org.apache.velocity.exception.MethodInvocationException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Variable $");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" has not been set");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: java.lang.String identifier>;

        $r19 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $r21 = virtualinvoke $r19.<org.apache.velocity.util.introspection.Info: java.lang.String getTemplateName()>();

        $r22 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $i0 = virtualinvoke $r22.<org.apache.velocity.util.introspection.Info: int getLine()>();

        $r23 = r3.<org.apache.velocity.runtime.parser.node.ASTReference: org.apache.velocity.util.introspection.Info uberInfo>;

        $i1 = virtualinvoke $r23.<org.apache.velocity.util.introspection.Info: int getColumn()>();

        specialinvoke $r13.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r18, null, $r20, $r21, $i0, $i1);

        throw $r13;

     label5:
        return $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public java.lang.String getDollarBang()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.velocity.runtime.parser.node.ASTReference r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTReference;

        $i0 = r0.<org.apache.velocity.runtime.parser.node.ASTReference: int referenceType>;

        if $i0 != 3 goto label1;

        $r1 = "$!";

        goto label2;

     label1:
        $r1 = "$";

     label2:
        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.velocity.runtime.parser.node.ASTReference: int RUNT> = 4;

        <org.apache.velocity.runtime.parser.node.ASTReference: int QUIET_REFERENCE> = 3;

        <org.apache.velocity.runtime.parser.node.ASTReference: int FORMAL_REFERENCE> = 2;

        <org.apache.velocity.runtime.parser.node.ASTReference: int NORMAL_REFERENCE> = 1;

        return;
    }
}
