public final class org.apache.cxf.jaxrs.ext.search.SearchUtils extends java.lang.Object
{
    public static final java.lang.String DATE_FORMAT_PROPERTY;
    public static final java.lang.String TIMEZONE_SUPPORT_PROPERTY;

    private void <init>()
    {
        org.apache.cxf.jaxrs.ext.search.SearchUtils r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.SearchUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.text.SimpleDateFormat getDateFormat(java.util.Map, java.lang.String)
    {
        java.util.Map r0;
        java.text.SimpleDateFormat $r3;
        java.lang.Object $r1;
        java.lang.String r2, r4, $r5;

        r0 := @parameter0: java.util.Map;

        r4 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("search.date-format");

        r2 = (java.lang.String) $r1;

        $r3 = new java.text.SimpleDateFormat;

        if r2 != null goto label1;

        $r5 = r4;

        goto label2;

     label1:
        $r5 = r2;

     label2:
        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r5);

        return $r3;
    }

    public static boolean isTimeZoneSupported(java.util.Map, java.lang.Boolean)
    {
        java.util.Map r0;
        java.lang.Boolean r3, $r4;
        java.lang.Object $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r3 := @parameter1: java.lang.Boolean;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("search.timezone.support");

        r2 = (java.lang.String) $r1;

        if r2 != null goto label1;

        $r4 = r3;

        goto label2;

     label1:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r2);

     label2:
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static transient java.lang.String toSQL(org.apache.cxf.jaxrs.ext.search.SearchCondition, java.lang.String, java.lang.String[])
    {
        org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor $r0;
        java.lang.String[] r2;
        java.lang.String r1, $r4;
        org.apache.cxf.jaxrs.ext.search.SearchCondition r3;

        r3 := @parameter0: org.apache.cxf.jaxrs.ext.search.SearchCondition;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r0 = new org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor;

        specialinvoke $r0.<org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor: void <init>(java.lang.String,java.lang.String[])>(r1, r2);

        interfaceinvoke r3.<org.apache.cxf.jaxrs.ext.search.SearchCondition: void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)>($r0);

        $r4 = interfaceinvoke $r0.<org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor: java.lang.String getResult()>();

        return $r4;
    }

    public static transient void startSqlQuery(java.lang.StringBuilder, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder r0, $r2, $r4;
        java.lang.String r3, $r5;

        r0 := @parameter0: java.lang.StringBuilder;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String[];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT ");

        $i0 = lengthof r1;

        if $i0 <= 0 goto label4;

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label3;

        $r5 = r1[i4];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i3 = i4 + 1;

        $i2 = lengthof r1;

        if $i3 >= $i2 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        goto label5;

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

     label5:
        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        return;
    }

    public static java.lang.String conditionTypeToSqlOperator(org.apache.cxf.jaxrs.ext.search.ConditionType, java.lang.String)
    {
        java.lang.Object[] $r3;
        java.lang.RuntimeException $r6;
        int[] $r1;
        int $i0, $i1;
        java.lang.String r2, $r4, $r5, $r7, r8, $r9;
        org.apache.cxf.jaxrs.ext.search.ConditionType r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.search.ConditionType;

        r2 := @parameter1: java.lang.String;

        $r1 = <org.apache.cxf.jaxrs.ext.search.SearchUtils$1: int[] $SwitchMap$org$apache$cxf$jaxrs$ext$search$ConditionType>;

        $i0 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.search.ConditionType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            default: goto label11;
        };

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("%");

        if $z1 == 0 goto label02;

        $r7 = "LIKE";

        goto label03;

     label02:
        $r7 = "=";

     label03:
        r8 = $r7;

        goto label12;

     label04:
        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("%");

        if $z0 == 0 goto label05;

        $r9 = "NOT LIKE";

        goto label06;

     label05:
        $r9 = "<>";

     label06:
        r8 = $r9;

        goto label12;

     label07:
        r8 = ">";

        goto label12;

     label08:
        r8 = ">=";

        goto label12;

     label09:
        r8 = "<";

        goto label12;

     label10:
        r8 = "<=";

        goto label12;

     label11:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.search.ConditionType: java.lang.String name()>();

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Condition type %s is not supported", $r3);

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label12:
        return r8;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.jaxrs.ext.search.SearchUtils: java.lang.String TIMEZONE_SUPPORT_PROPERTY> = "search.timezone.support";

        <org.apache.cxf.jaxrs.ext.search.SearchUtils: java.lang.String DATE_FORMAT_PROPERTY> = "search.date-format";

        return;
    }
}
