abstract class org.apache.poi.poifs.storage.BlockListImpl extends java.lang.Object implements org.apache.poi.poifs.storage.BlockList
{
    private org.apache.poi.poifs.storage.ListManagedBlock[] _blocks;
    private org.apache.poi.poifs.storage.BlockAllocationTableReader _bat;

    protected void <init>()
    {
        org.apache.poi.poifs.storage.ListManagedBlock[] $r1;
        org.apache.poi.poifs.storage.BlockListImpl r0;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.poi.poifs.storage.ListManagedBlock)[0];

        r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks> = $r1;

        r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.BlockAllocationTableReader _bat> = null;

        return;
    }

    protected void setBlocks(org.apache.poi.poifs.storage.ListManagedBlock[])
    {
        org.apache.poi.poifs.storage.ListManagedBlock[] r1;
        org.apache.poi.poifs.storage.BlockListImpl r0;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        r1 := @parameter0: org.apache.poi.poifs.storage.ListManagedBlock[];

        r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks> = r1;

        return;
    }

    public void zap(int)
    {
        org.apache.poi.poifs.storage.BlockListImpl r0;
        int i0, $i1;
        org.apache.poi.poifs.storage.ListManagedBlock[] $r1, $r2;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $r2[i0] = null;

     label1:
        return;
    }

    protected org.apache.poi.poifs.storage.ListManagedBlock get(int)
    {
        org.apache.poi.poifs.storage.BlockListImpl r0;
        int i0;
        org.apache.poi.poifs.storage.ListManagedBlock[] $r1;
        org.apache.poi.poifs.storage.ListManagedBlock $r2;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $r2 = $r1[i0];

        return $r2;
    }

    public org.apache.poi.poifs.storage.ListManagedBlock remove(int) throws java.io.IOException
    {
        org.apache.poi.poifs.storage.BlockListImpl r0;
        int i0, $i1, $i2;
        java.lang.String $r9, $r19;
        java.io.IOException $r3, $r11;
        java.lang.ArrayIndexOutOfBoundsException $r10;
        org.apache.poi.poifs.storage.ListManagedBlock r20;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r15, $r17, $r18;
        org.apache.poi.poifs.storage.ListManagedBlock[] $r1, $r2, $r16;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        r20 = $r1[i0];

        if r20 != null goto label2;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("block[ ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] already removed - ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does your POIFS have circular or duplicate block references?");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        $r2 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $r2[i0] = null;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove block[ ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]; out of range[ 0 - ");

        $r16 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $i1 = lengthof $r16;

        $i2 = $i1 - 1;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r11;

     label5:
        return r20;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label3 with label4;
    }

    public org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int, int) throws java.io.IOException
    {
        org.apache.poi.poifs.storage.BlockListImpl r0;
        int i0, i1;
        java.io.IOException $r4;
        org.apache.poi.poifs.storage.ListManagedBlock[] $r3;
        org.apache.poi.poifs.storage.BlockAllocationTableReader $r1, $r2;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.BlockAllocationTableReader _bat>;

        if $r1 != null goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Improperly initialized list: no block allocation table provided");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.BlockAllocationTableReader _bat>;

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.storage.BlockAllocationTableReader: org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int,int,org.apache.poi.poifs.storage.BlockList)>(i0, i1, r0);

        return $r3;
    }

    public void setBAT(org.apache.poi.poifs.storage.BlockAllocationTableReader) throws java.io.IOException
    {
        org.apache.poi.poifs.storage.BlockListImpl r0;
        java.io.IOException $r3;
        org.apache.poi.poifs.storage.BlockAllocationTableReader $r1, r2;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        r2 := @parameter0: org.apache.poi.poifs.storage.BlockAllocationTableReader;

        $r1 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.BlockAllocationTableReader _bat>;

        if $r1 == null goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attempt to replace existing BlockAllocationTable");

        throw $r3;

     label1:
        r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.BlockAllocationTableReader _bat> = r2;

        return;
    }

    public int blockCount()
    {
        int $i0;
        org.apache.poi.poifs.storage.ListManagedBlock[] $r1;
        org.apache.poi.poifs.storage.BlockListImpl r0;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        $r1 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $i0 = lengthof $r1;

        return $i0;
    }

    protected int remainingBlocks()
    {
        org.apache.poi.poifs.storage.BlockListImpl r0;
        int $i0, i1, i2;
        org.apache.poi.poifs.storage.ListManagedBlock[] $r1, $r2;
        org.apache.poi.poifs.storage.ListManagedBlock $r3;

        r0 := @this: org.apache.poi.poifs.storage.BlockListImpl;

        i1 = 0;

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $i0 = lengthof $r1;

        if i2 >= $i0 goto label3;

        $r2 = r0.<org.apache.poi.poifs.storage.BlockListImpl: org.apache.poi.poifs.storage.ListManagedBlock[] _blocks>;

        $r3 = $r2[i2];

        if $r3 == null goto label2;

        i1 = i1 + 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return i1;
    }
}
