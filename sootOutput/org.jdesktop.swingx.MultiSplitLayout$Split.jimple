public class org.jdesktop.swingx.MultiSplitLayout$Split extends org.jdesktop.swingx.MultiSplitLayout$Node
{
    private java.util.List children;
    private boolean rowLayout;
    private java.lang.String name;

    public transient void <init>(org.jdesktop.swingx.MultiSplitLayout$Node[])
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        java.util.List $r1;
        org.jdesktop.swingx.MultiSplitLayout$Node[] r2;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r2 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Node[];

        specialinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children> = $r1;

        r0.<org.jdesktop.swingx.MultiSplitLayout$Split: boolean rowLayout> = 1;

        virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: void setChildren(org.jdesktop.swingx.MultiSplitLayout$Node[])>(r2);

        return;
    }

    public void <init>()
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        java.util.List $r1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        specialinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children> = $r1;

        r0.<org.jdesktop.swingx.MultiSplitLayout$Split: boolean rowLayout> = 1;

        return;
    }

    public boolean isVisible()
    {
        java.util.Iterator $r2;
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        org.jdesktop.swingx.MultiSplitLayout$Node r4;
        java.util.List $r1;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        $r1 = r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r3;

        $z1 = virtualinvoke r4.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible()>();

        if $z1 == 0 goto label2;

        $z2 = r4 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z2 != 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean isRowLayout()
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        $z0 = r0.<org.jdesktop.swingx.MultiSplitLayout$Split: boolean rowLayout>;

        return $z0;
    }

    public void setRowLayout(boolean)
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        z0 := @parameter0: boolean;

        r0.<org.jdesktop.swingx.MultiSplitLayout$Split: boolean rowLayout> = z0;

        return;
    }

    public java.util.List getChildren()
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r1;
        java.util.List $r2;
        java.util.ArrayList $r0;

        r1 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    public void remove(org.jdesktop.swingx.MultiSplitLayout$Node)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0, $r1, $r2, $r5, $r7;
        org.jdesktop.swingx.MultiSplitLayout$Split r3;
        java.util.List $r4, $r6, $r8;
        boolean $z0, $z1;

        r3 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r0 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()>();

        $z0 = $r1 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z0 == 0 goto label1;

        $r6 = r3.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()>();

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r7);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node previousSibling()>();

        $z1 = $r2 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z1 == 0 goto label2;

        $r4 = r3.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node previousSibling()>();

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r5);

     label2:
        $r8 = r3.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        interfaceinvoke $r8.<java.util.List: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public void replace(org.jdesktop.swingx.MultiSplitLayout$Node, org.jdesktop.swingx.MultiSplitLayout$Node)
    {
        java.util.List $r2, $r3, $r5;
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        org.jdesktop.swingx.MultiSplitLayout$Node r1, r4;
        int $i0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r1 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Node;

        r4 := @parameter1: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r2 = r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        $r3 = r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i0, r4);

        virtualinvoke r4.<org.jdesktop.swingx.MultiSplitLayout$Node: void setParent(org.jdesktop.swingx.MultiSplitLayout$Split)>(r0);

        virtualinvoke r1.<org.jdesktop.swingx.MultiSplitLayout$Node: void setParent(org.jdesktop.swingx.MultiSplitLayout$Split)>(r0);

        return;
    }

    public void hide(org.jdesktop.swingx.MultiSplitLayout$Node)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0, $r1, $r2;
        org.jdesktop.swingx.MultiSplitLayout$Split r3;
        boolean $z0, $z1;

        r3 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r0 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()>();

        $z0 = $r1 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout$Node: void setVisible(boolean)>(0);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node previousSibling()>();

        $z1 = $r2 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z1 == 0 goto label2;

        virtualinvoke $r2.<org.jdesktop.swingx.MultiSplitLayout$Node: void setVisible(boolean)>(0);

     label2:
        virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: void setVisible(boolean)>(0);

        return;
    }

    public void checkDividers(org.jdesktop.swingx.MultiSplitLayout$Split)
    {
        java.util.ListIterator $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.jdesktop.swingx.MultiSplitLayout$Split r0, r9;
        org.jdesktop.swingx.MultiSplitLayout$Node r4, r6, $r8, r10;
        java.util.List $r1;
        java.lang.Object $r3, $r5, $r7;

        r9 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r0 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Split;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z8 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z8 == 0 goto label8;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        r4 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r3;

        $z0 = virtualinvoke r4.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible()>();

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $z1 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r5 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        r6 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r5;

        $z2 = r6 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z2 == 0 goto label6;

        $z5 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        $r7 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        r10 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r7;

     label3:
        $z6 = virtualinvoke r10.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible()>();

        if $z6 != 0 goto label4;

        $r8 = virtualinvoke r10.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()>();

        r10 = $r8;

        if $r8 != null goto label3;

        virtualinvoke r6.<org.jdesktop.swingx.MultiSplitLayout$Node: void setVisible(boolean)>(0);

        goto label4;

     label4:
        if r10 == null goto label5;

        $z7 = r10 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z7 == 0 goto label5;

        virtualinvoke r6.<org.jdesktop.swingx.MultiSplitLayout$Node: void setVisible(boolean)>(0);

     label5:
        goto label7;

     label6:
        $z3 = r4 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z3 == 0 goto label7;

        $z4 = r6 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z4 == 0 goto label7;

        virtualinvoke r4.<org.jdesktop.swingx.MultiSplitLayout$Node: void setVisible(boolean)>(0);

     label7:
        goto label1;

     label8:
        return;
    }

    public void restoreDividers(org.jdesktop.swingx.MultiSplitLayout$Split)
    {
        java.util.ListIterator $r2;
        org.jdesktop.swingx.MultiSplitLayout$Split r0, $r3, r4, $r5;
        org.jdesktop.swingx.MultiSplitLayout$Node r7, $r8, r9;
        java.util.List $r1;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2, $z3;

        r4 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r0 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Split;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        r7 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r6;

        $z1 = r7 instanceof org.jdesktop.swingx.MultiSplitLayout$Divider;

        if $z1 == 0 goto label4;

        $r8 = virtualinvoke r7.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node previousSibling()>();

        $z2 = virtualinvoke $r8.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible()>();

        if $z2 == 0 goto label4;

        r9 = virtualinvoke r7.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()>();

     label2:
        if r9 == null goto label4;

        $z3 = virtualinvoke r9.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible()>();

        if $z3 == 0 goto label3;

        virtualinvoke r7.<org.jdesktop.swingx.MultiSplitLayout$Node: void setVisible(boolean)>(1);

        goto label4;

     label3:
        r9 = virtualinvoke r9.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()>();

        goto label2;

     label4:
        goto label1;

     label5:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: org.jdesktop.swingx.MultiSplitLayout$Split getParent()>();

        if $r3 == null goto label6;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: org.jdesktop.swingx.MultiSplitLayout$Split getParent()>();

        virtualinvoke r4.<org.jdesktop.swingx.MultiSplitLayout$Split: void restoreDividers(org.jdesktop.swingx.MultiSplitLayout$Split)>($r5);

     label6:
        return;
    }

    public void setChildren(java.util.List)
    {
        java.util.Iterator $r3, $r6;
        org.jdesktop.swingx.MultiSplitLayout$Split r1;
        org.jdesktop.swingx.MultiSplitLayout$Node r10, r11;
        java.lang.IllegalArgumentException $r9;
        java.util.ArrayList $r4;
        java.util.List r0, $r2, $r5;
        java.lang.Object $r7, $r8;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("children must be a non-null List");

        throw $r9;

     label1:
        $r2 = r1.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r8;

        virtualinvoke r10.<org.jdesktop.swingx.MultiSplitLayout$Node: void setParent(org.jdesktop.swingx.MultiSplitLayout$Split)>(null);

        goto label2;

     label3:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r0);

        r1.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children> = $r4;

        $r5 = r1.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List children>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r7;

        virtualinvoke r11.<org.jdesktop.swingx.MultiSplitLayout$Node: void setParent(org.jdesktop.swingx.MultiSplitLayout$Split)>(r1);

        goto label4;

     label5:
        return;
    }

    public transient void setChildren(org.jdesktop.swingx.MultiSplitLayout$Node[])
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        java.util.List $r2;
        org.jdesktop.swingx.MultiSplitLayout$Node[] r1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r1 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Node[];

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

     label2:
        virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: void setChildren(java.util.List)>($r2);

        return;
    }

    public final org.jdesktop.swingx.MultiSplitLayout$Node lastWeightedChild()
    {
        java.util.Iterator $r2;
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        org.jdesktop.swingx.MultiSplitLayout$Node r4, r5;
        java.util.List $r1;
        byte $b0;
        int $i1;
        java.lang.Object $r3;
        boolean $z0, $z1;
        double $d0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List getChildren()>();

        r5 = null;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r3;

        $z0 = virtualinvoke r4.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible()>();

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $d0 = virtualinvoke r4.<org.jdesktop.swingx.MultiSplitLayout$Node: double getWeight()>();

        $b0 = $d0 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label3;

        r5 = r4;

     label3:
        goto label1;

     label4:
        return r5;
    }

    public java.lang.String getName()
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        java.lang.String $r1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        $r1 = r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.lang.String name>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        org.jdesktop.swingx.MultiSplitLayout$Split r1;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name is null");

        throw $r2;

     label1:
        r1.<org.jdesktop.swingx.MultiSplitLayout$Split: java.lang.String name> = r0;

        return;
    }

    public java.lang.String toString()
    {
        java.awt.Rectangle $r8;
        org.jdesktop.swingx.MultiSplitLayout$Split r0;
        java.util.List $r1;
        java.lang.StringBuffer $r2;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r3, $r7, $r9, $r10, $r11;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Split;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List getChildren()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("MultiSplitLayout.Split");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: boolean isRowLayout()>();

        if $z0 == 0 goto label1;

        $r10 = " ROW [";

        goto label2;

     label1:
        $r10 = " COLUMN [";

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        if $i0 != 1 goto label3;

        $r11 = " child";

        goto label4;

     label3:
        $r11 = " children";

     label4:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ");

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Split: java.awt.Rectangle getBounds()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
