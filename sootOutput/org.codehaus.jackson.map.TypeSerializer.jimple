public abstract class org.codehaus.jackson.map.TypeSerializer extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.jackson.map.TypeSerializer r0;

        r0 := @this: org.codehaus.jackson.map.TypeSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion();

    public abstract java.lang.String getPropertyName();

    public abstract org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver();

    public abstract void writeTypePrefixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public abstract void writeTypePrefixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public abstract void writeTypePrefixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public abstract void writeTypeSuffixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public abstract void writeTypeSuffixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public abstract void writeTypeSuffixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public void writeTypePrefixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.TypeSerializer r0;
        org.codehaus.jackson.JsonGenerator r2;
        java.lang.Object r1;
        java.lang.Class r3;

        r0 := @this: org.codehaus.jackson.map.TypeSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: java.lang.Class;

        virtualinvoke r0.<org.codehaus.jackson.map.TypeSerializer: void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, r2);

        return;
    }

    public void writeTypePrefixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.TypeSerializer r0;
        org.codehaus.jackson.JsonGenerator r2;
        java.lang.Object r1;
        java.lang.Class r3;

        r0 := @this: org.codehaus.jackson.map.TypeSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: java.lang.Class;

        virtualinvoke r0.<org.codehaus.jackson.map.TypeSerializer: void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, r2);

        return;
    }

    public void writeTypePrefixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.TypeSerializer r0;
        org.codehaus.jackson.JsonGenerator r2;
        java.lang.Object r1;
        java.lang.Class r3;

        r0 := @this: org.codehaus.jackson.map.TypeSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: java.lang.Class;

        virtualinvoke r0.<org.codehaus.jackson.map.TypeSerializer: void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, r2);

        return;
    }
}
