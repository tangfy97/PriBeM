public class com.jidesoft.converter.DateConverter extends java.lang.Object implements com.jidesoft.converter.ObjectConverter
{
    public static final com.jidesoft.converter.ConverterContext DATETIME_CONTEXT;
    public static final com.jidesoft.converter.ConverterContext TIME_CONTEXT;
    public static final com.jidesoft.converter.ConverterContext DATE_CONTEXT;
    private java.text.DateFormat _shortFormat;
    private java.text.DateFormat _mediumFormat;
    private java.text.DateFormat _longFormat;
    private java.text.DateFormat _defaultFormat;
    private java.text.DateFormat _shortDatetimeFormat;
    private java.text.DateFormat _mediumDatetimeFormat;
    private java.text.DateFormat _longDatetimeFormat;
    private java.text.DateFormat _defaultDatetimeFormat;
    private java.text.DateFormat _shortTimeFormat;
    private java.text.DateFormat _mediumTimeFormat;
    private java.text.DateFormat _longTimeFormat;
    private java.text.DateFormat _defaultTimeFormat;

    public void <init>()
    {
        com.jidesoft.converter.DateConverter r0;
        java.text.DateFormat $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.jidesoft.converter.DateConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateInstance(int)>(3);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _shortFormat> = $r1;

        $r2 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateInstance(int)>(2);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _mediumFormat> = $r2;

        $r3 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateInstance(int)>(1);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _longFormat> = $r3;

        $r4 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateInstance(int)>(2);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultFormat> = $r4;

        $r5 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 3);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _shortDatetimeFormat> = $r5;

        $r6 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(2, 2);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _mediumDatetimeFormat> = $r6;

        $r7 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(1, 1);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _longDatetimeFormat> = $r7;

        $r8 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(2, 2);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultDatetimeFormat> = $r8;

        $r9 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getTimeInstance(int)>(3);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _shortTimeFormat> = $r9;

        $r10 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getTimeInstance(int)>(2);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _mediumTimeFormat> = $r10;

        $r11 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getTimeInstance(int)>(1);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _longTimeFormat> = $r11;

        $r12 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getTimeInstance(int)>(2);

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultTimeFormat> = $r12;

        return;
    }

    public synchronized java.lang.String toString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        java.util.Date $r19;
        java.text.DateFormat $r4, $r5, $r7, $r8, $r10, $r11, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.TimeZone r23;
        com.jidesoft.converter.DateConverter r3;
        java.util.Calendar $r18, $r20, $r21;
        java.lang.String $r6, $r9, $r12, $r16, $r17;
        com.jidesoft.converter.ConverterContext r0, $r1, $r2;
        java.lang.Object $r13, $r14, r22;

        r3 := @this: com.jidesoft.converter.DateConverter;

        r22 := @parameter0: java.lang.Object;

        r0 := @parameter1: com.jidesoft.converter.ConverterContext;

        if r22 != null goto label01;

        return "";

     label01:
        $z0 = r22 instanceof java.util.Calendar;

        if $z0 == 0 goto label02;

        $r20 = (java.util.Calendar) r22;

        r23 = virtualinvoke $r20.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r21 = (java.util.Calendar) r22;

        r22 = virtualinvoke $r21.<java.util.Calendar: java.util.Date getTime()>();

        goto label04;

     label02:
        $z1 = r22 instanceof java.util.Date;

        if $z1 == 0 goto label03;

        $r18 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r19 = (java.util.Date) r22;

        virtualinvoke $r18.<java.util.Calendar: void setTime(java.util.Date)>($r19);

        r23 = virtualinvoke $r18.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        goto label04;

     label03:
        r23 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

     label04:
        $z7 = r22 instanceof java.util.Date;

        if $z7 != 0 goto label05;

        $z5 = r22 instanceof java.lang.Number;

        if $z5 == 0 goto label09;

     label05:
        if r0 == null goto label06;

        $r13 = virtualinvoke r0.<com.jidesoft.converter.ConverterContext: java.lang.Object getUserObject()>();

        $z4 = $r13 instanceof java.text.DateFormat;

        if $z4 == 0 goto label06;

        $r14 = virtualinvoke r0.<com.jidesoft.converter.ConverterContext: java.lang.Object getUserObject()>();

        $r15 = (java.text.DateFormat) $r14;

        $r16 = virtualinvoke $r15.<java.text.DateFormat: java.lang.String format(java.lang.Object)>(r22);

        return $r16;

     label06:
        $r1 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext DATETIME_CONTEXT>;

        $z2 = virtualinvoke $r1.<com.jidesoft.converter.ConverterContext: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label07;

        $r10 = r3.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultDatetimeFormat>;

        virtualinvoke $r10.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r23);

        $r11 = r3.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultDatetimeFormat>;

        $r12 = virtualinvoke $r11.<java.text.DateFormat: java.lang.String format(java.lang.Object)>(r22);

        return $r12;

     label07:
        $r2 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext TIME_CONTEXT>;

        $z3 = virtualinvoke $r2.<com.jidesoft.converter.ConverterContext: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label08;

        $r7 = r3.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultTimeFormat>;

        virtualinvoke $r7.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r23);

        $r8 = r3.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultTimeFormat>;

        $r9 = virtualinvoke $r8.<java.text.DateFormat: java.lang.String format(java.lang.Object)>(r22);

        return $r9;

     label08:
        $r4 = r3.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultFormat>;

        virtualinvoke $r4.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r23);

        $r5 = r3.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultFormat>;

        $r6 = virtualinvoke $r5.<java.text.DateFormat: java.lang.String format(java.lang.Object)>(r22);

        return $r6;

     label09:
        $z6 = r22 instanceof java.lang.String;

        if $z6 == 0 goto label10;

        $r17 = (java.lang.String) r22;

        return $r17;

     label10:
        return null;
    }

    public boolean supportToString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.DateConverter r0;
        java.lang.Object r1;
        com.jidesoft.converter.ConverterContext r2;

        r0 := @this: com.jidesoft.converter.DateConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    public synchronized java.lang.Object fromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        java.util.Date $r6, $r8, $r10, $r12, $r16, $r21, $r24, $r28, $r31, $r35, $r38, $r43, $r45, $r47;
        java.text.ParseException $r13, $r17, $r19, $r22, $r25, $r26, $r29, $r32, $r33, $r36, $r39;
        java.text.DateFormat $r5, $r7, $r9, $r11, $r20, $r23, $r27, $r30, $r34, $r37, $r42, $r44, $r46;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.jidesoft.converter.DateConverter r4;
        java.text.SimpleDateFormat $r15;
        java.lang.String[] $r18;
        int $i0, $i1, i2;
        java.lang.String $r0, r14, r48;
        com.jidesoft.converter.ConverterContext r1, $r2, $r3, $r40, $r41;
        java.lang.Object $r49;

        r4 := @this: com.jidesoft.converter.DateConverter;

        r48 := @parameter0: java.lang.String;

        r1 := @parameter1: com.jidesoft.converter.ConverterContext;

        if r48 != null goto label01;

        return null;

     label01:
        $r0 = virtualinvoke r48.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        return null;

     label02:
        if r1 == null goto label03;

        $r49 = virtualinvoke r1.<com.jidesoft.converter.ConverterContext: java.lang.Object getUserObject()>();

        goto label04;

     label03:
        $r49 = null;

     label04:
        $z0 = $r49 instanceof java.text.DateFormat;

        if $z0 == 0 goto label06;

        $r11 = (java.text.DateFormat) $r49;

        $r12 = virtualinvoke $r11.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label05:
        return $r12;

     label06:
        $r2 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext DATETIME_CONTEXT>;

        $z1 = virtualinvoke $r2.<com.jidesoft.converter.ConverterContext: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label08;

        $r9 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultDatetimeFormat>;

        $r10 = virtualinvoke $r9.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label07:
        return $r10;

     label08:
        $r3 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext TIME_CONTEXT>;

        $z2 = virtualinvoke $r3.<com.jidesoft.converter.ConverterContext: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label10;

        $r7 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultTimeFormat>;

        $r8 = virtualinvoke $r7.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label09:
        return $r8;

     label10:
        $r5 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultFormat>;

        $r6 = virtualinvoke $r5.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label11:
        return $r6;

     label12:
        $r39 := @caughtexception;

        $r40 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext DATETIME_CONTEXT>;

        $z3 = virtualinvoke $r40.<com.jidesoft.converter.ConverterContext: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label22;

     label13:
        $r46 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _shortDatetimeFormat>;

        $r47 = virtualinvoke $r46.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label14:
        return $r47;

     label15:
        $r36 := @caughtexception;

     label16:
        $r37 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _mediumDatetimeFormat>;

        $r38 = virtualinvoke $r37.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label17:
        return $r38;

     label18:
        $r33 := @caughtexception;

     label19:
        $r34 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _longDatetimeFormat>;

        $r35 = virtualinvoke $r34.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label20:
        return $r35;

     label21:
        $r32 := @caughtexception;

        goto label41;

     label22:
        $r41 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext TIME_CONTEXT>;

        $z4 = virtualinvoke $r41.<com.jidesoft.converter.ConverterContext: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label32;

     label23:
        $r44 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _shortTimeFormat>;

        $r45 = virtualinvoke $r44.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label24:
        return $r45;

     label25:
        $r29 := @caughtexception;

     label26:
        $r30 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _mediumTimeFormat>;

        $r31 = virtualinvoke $r30.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label27:
        return $r31;

     label28:
        $r26 := @caughtexception;

     label29:
        $r27 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _longTimeFormat>;

        $r28 = virtualinvoke $r27.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label30:
        return $r28;

     label31:
        $r25 := @caughtexception;

        return $r0;

     label32:
        $r42 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _shortFormat>;

        $r43 = virtualinvoke $r42.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label33:
        return $r43;

     label34:
        $r22 := @caughtexception;

     label35:
        $r23 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _mediumFormat>;

        $r24 = virtualinvoke $r23.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label36:
        return $r24;

     label37:
        $r19 := @caughtexception;

     label38:
        $r20 = r4.<com.jidesoft.converter.DateConverter: java.text.DateFormat _longFormat>;

        $r21 = virtualinvoke $r20.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label39:
        return $r21;

     label40:
        $r17 := @caughtexception;

     label41:
        $r18 = newarray (java.lang.String)[6];

        $r18[0] = "yyyy-mm-dd";

        $r18[1] = "yy-mm-dd";

        $r18[2] = "yyyymmdd";

        $r18[3] = "yymmdd";

        $r18[4] = "dd-MMM-yy";

        $r18[5] = "dd-MMM-yyyy";

        $i1 = lengthof $r18;

        i2 = 0;

     label42:
        if i2 >= $i1 goto label46;

        r14 = $r18[i2];

     label43:
        $r15 = new java.text.SimpleDateFormat;

        specialinvoke $r15.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r14);

        $r16 = virtualinvoke $r15.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label44:
        return $r16;

     label45:
        $r13 := @caughtexception;

        i2 = i2 + 1;

        goto label42;

     label46:
        return $r0;

        catch java.text.ParseException from label02 to label05 with label12;
        catch java.text.ParseException from label06 to label07 with label12;
        catch java.text.ParseException from label08 to label09 with label12;
        catch java.text.ParseException from label10 to label11 with label12;
        catch java.text.ParseException from label13 to label14 with label15;
        catch java.text.ParseException from label16 to label17 with label18;
        catch java.text.ParseException from label19 to label20 with label21;
        catch java.text.ParseException from label23 to label24 with label25;
        catch java.text.ParseException from label26 to label27 with label28;
        catch java.text.ParseException from label29 to label30 with label31;
        catch java.text.ParseException from label32 to label33 with label34;
        catch java.text.ParseException from label35 to label36 with label37;
        catch java.text.ParseException from label38 to label39 with label40;
        catch java.text.ParseException from label43 to label44 with label45;
    }

    public boolean supportFromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.DateConverter r0;
        java.lang.String r1;
        com.jidesoft.converter.ConverterContext r2;

        r0 := @this: com.jidesoft.converter.DateConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    public java.text.DateFormat getDefaultFormat()
    {
        com.jidesoft.converter.DateConverter r0;
        java.text.DateFormat $r1;

        r0 := @this: com.jidesoft.converter.DateConverter;

        $r1 = r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultFormat>;

        return $r1;
    }

    public void setDefaultFormat(java.text.DateFormat)
    {
        com.jidesoft.converter.DateConverter r0;
        java.text.DateFormat r1;

        r0 := @this: com.jidesoft.converter.DateConverter;

        r1 := @parameter0: java.text.DateFormat;

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultFormat> = r1;

        return;
    }

    public java.text.DateFormat getDefaultTimeFormat()
    {
        com.jidesoft.converter.DateConverter r0;
        java.text.DateFormat $r1;

        r0 := @this: com.jidesoft.converter.DateConverter;

        $r1 = r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultTimeFormat>;

        return $r1;
    }

    public void setDefaultTimeFormat(java.text.DateFormat)
    {
        com.jidesoft.converter.DateConverter r0;
        java.text.DateFormat r1;

        r0 := @this: com.jidesoft.converter.DateConverter;

        r1 := @parameter0: java.text.DateFormat;

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultTimeFormat> = r1;

        return;
    }

    public java.text.DateFormat getDefaultDatetimeFormat()
    {
        com.jidesoft.converter.DateConverter r0;
        java.text.DateFormat $r1;

        r0 := @this: com.jidesoft.converter.DateConverter;

        $r1 = r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultDatetimeFormat>;

        return $r1;
    }

    public void setDefaultDatetimeFormat(java.text.DateFormat)
    {
        com.jidesoft.converter.DateConverter r0;
        java.text.DateFormat r1;

        r0 := @this: com.jidesoft.converter.DateConverter;

        r1 := @parameter0: java.text.DateFormat;

        r0.<com.jidesoft.converter.DateConverter: java.text.DateFormat _defaultDatetimeFormat> = r1;

        return;
    }

    static void <clinit>()
    {
        com.jidesoft.converter.ConverterContext $r0, $r1, $r2;

        $r0 = new com.jidesoft.converter.ConverterContext;

        specialinvoke $r0.<com.jidesoft.converter.ConverterContext: void <init>(java.lang.String)>("DateTime");

        <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext DATETIME_CONTEXT> = $r0;

        $r1 = new com.jidesoft.converter.ConverterContext;

        specialinvoke $r1.<com.jidesoft.converter.ConverterContext: void <init>(java.lang.String)>("Time");

        <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext TIME_CONTEXT> = $r1;

        $r2 = new com.jidesoft.converter.ConverterContext;

        specialinvoke $r2.<com.jidesoft.converter.ConverterContext: void <init>(java.lang.String)>("Date");

        <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext DATE_CONTEXT> = $r2;

        return;
    }
}
