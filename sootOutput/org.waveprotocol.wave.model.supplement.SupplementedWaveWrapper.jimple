public abstract class org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper extends java.lang.Object implements org.waveprotocol.wave.model.supplement.SupplementedWave
{
    protected final org.waveprotocol.wave.model.supplement.SupplementedWave delegate;

    protected void <init>(org.waveprotocol.wave.model.supplement.SupplementedWave)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.SupplementedWave;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate> = r1;

        return;
    }

    public void markAsRead(org.waveprotocol.wave.model.conversation.ConversationBlip)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.conversation.ConversationBlip r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationBlip;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: void markAsRead(org.waveprotocol.wave.model.conversation.ConversationBlip)>(r1);

        return;
    }

    public void markAsUnread()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void markAsUnread()>();

        return;
    }

    public void markAsRead()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void markAsRead()>();

        return;
    }

    public void markParticipantAsRead(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: void markParticipantAsRead(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return;
    }

    public void markTagsAsRead(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: void markTagsAsRead(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return;
    }

    public boolean isUnread(org.waveprotocol.wave.model.conversation.ConversationBlip)
    {
        org.waveprotocol.wave.model.conversation.ConversationBlip r1;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationBlip;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isUnread(org.waveprotocol.wave.model.conversation.ConversationBlip)>(r1);

        return $z0;
    }

    public boolean isParticipantsUnread(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isParticipantsUnread(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return $z0;
    }

    public boolean isTagsUnread(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isTagsUnread(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return $z0;
    }

    public boolean isTrashed()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isTrashed()>();

        return $z0;
    }

    public boolean isArchived()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isArchived()>();

        return $z0;
    }

    public boolean isFollowed()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isFollowed()>();

        return $z0;
    }

    public boolean isInbox()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isInbox()>();

        return $z0;
    }

    public boolean isMute()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isMute()>();

        return $z0;
    }

    public void inbox()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void inbox()>();

        return;
    }

    public void archive()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void archive()>();

        return;
    }

    public void follow()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void follow()>();

        return;
    }

    public void unfollow()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void unfollow()>();

        return;
    }

    public void mute()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void mute()>();

        return;
    }

    public java.util.Set getFolders()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        java.util.Set $r2;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: java.util.Set getFolders()>();

        return $r2;
    }

    public void moveToFolder(int)
    {
        int i0;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void moveToFolder(int)>(i0);

        return;
    }

    public void see()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void see()>();

        return;
    }

    public void see(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: void see(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getSeenVersion(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.version.HashedVersion $r3;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.id.WaveletId r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: org.waveprotocol.wave.model.version.HashedVersion getSeenVersion(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return $r3;
    }

    public boolean hasBeenSeen()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean hasBeenSeen()>();

        return $z0;
    }

    public void addWantedEvaluation(org.waveprotocol.wave.model.supplement.WantedEvaluation)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.supplement.WantedEvaluation r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.WantedEvaluation;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: void addWantedEvaluation(org.waveprotocol.wave.model.supplement.WantedEvaluation)>(r1);

        return;
    }

    public org.waveprotocol.wave.model.supplement.WantedEvaluationSet getWantedEvaluationSet(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.WantedEvaluationSet $r3;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: org.waveprotocol.wave.model.supplement.WantedEvaluationSet getWantedEvaluationSet(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return $r3;
    }

    public org.waveprotocol.wave.model.supplement.ThreadState getThreadState(org.waveprotocol.wave.model.conversation.ConversationThread)
    {
        org.waveprotocol.wave.model.conversation.ConversationThread r1;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        org.waveprotocol.wave.model.supplement.ThreadState $r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationThread;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: org.waveprotocol.wave.model.supplement.ThreadState getThreadState(org.waveprotocol.wave.model.conversation.ConversationThread)>(r1);

        return $r3;
    }

    public void setThreadState(org.waveprotocol.wave.model.conversation.ConversationThread, org.waveprotocol.wave.model.supplement.ThreadState)
    {
        org.waveprotocol.wave.model.conversation.ConversationThread r1;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r3;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        org.waveprotocol.wave.model.supplement.ThreadState r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationThread;

        r2 := @parameter1: org.waveprotocol.wave.model.supplement.ThreadState;

        $r3 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.supplement.SupplementedWave: void setThreadState(org.waveprotocol.wave.model.conversation.ConversationThread,org.waveprotocol.wave.model.supplement.ThreadState)>(r1, r2);

        return;
    }

    public boolean hasPendingNotification()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean hasPendingNotification()>();

        return $z0;
    }

    public void markAsNotified()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWave: void markAsNotified()>();

        return;
    }

    public boolean haveParticipantsEverBeenRead(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean haveParticipantsEverBeenRead(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return $z0;
    }

    public org.waveprotocol.wave.model.util.ReadableStringMap getGadgetState(java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.util.ReadableStringMap $r3;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.SupplementedWave: org.waveprotocol.wave.model.util.ReadableStringMap getGadgetState(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getGadgetStateValue(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r3;
        java.lang.String r1, r2, $r4;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.supplement.SupplementedWave: java.lang.String getGadgetStateValue(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public void setGadgetState(java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.SupplementedWave $r4;
        java.lang.String r1, r2, r3;
        org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: org.waveprotocol.wave.model.supplement.SupplementedWave delegate>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.supplement.SupplementedWave: void setGadgetState(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }
}
