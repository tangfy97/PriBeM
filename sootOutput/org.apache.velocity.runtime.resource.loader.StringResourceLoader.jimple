public class org.apache.velocity.runtime.resource.loader.StringResourceLoader extends org.apache.velocity.runtime.resource.loader.ResourceLoader
{
    public static final java.lang.String REPOSITORY_STATIC;
    public static final boolean REPOSITORY_STATIC_DEFAULT;
    public static final java.lang.String REPOSITORY_CLASS;
    public static final java.lang.String REPOSITORY_CLASS_DEFAULT;
    public static final java.lang.String REPOSITORY_NAME;
    public static final java.lang.String REPOSITORY_NAME_DEFAULT;
    public static final java.lang.String REPOSITORY_ENCODING;
    public static final java.lang.String REPOSITORY_ENCODING_DEFAULT;
    protected static final java.util.Map STATIC_REPOSITORIES;
    protected org.apache.velocity.runtime.resource.util.StringResourceRepository repository;
    static java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepositoryImpl;
    static java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepository;

    public void <init>()
    {
        org.apache.velocity.runtime.resource.loader.StringResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.StringResourceLoader;

        specialinvoke r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: void <init>()>();

        return;
    }

    public static org.apache.velocity.runtime.resource.util.StringResourceRepository getRepository()
    {
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r1;
        java.lang.String $r0;

        $r0 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_NAME_DEFAULT>;

        $r1 = staticinvoke <org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository getRepository(java.lang.String)>($r0);

        return $r1;
    }

    public static org.apache.velocity.runtime.resource.util.StringResourceRepository getRepository(java.lang.String)
    {
        java.util.Map $r1;
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r3;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.util.Map STATIC_REPOSITORIES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (org.apache.velocity.runtime.resource.util.StringResourceRepository) $r2;

        return $r3;
    }

    public static void setRepository(java.lang.String, org.apache.velocity.runtime.resource.util.StringResourceRepository)
    {
        org.apache.velocity.runtime.resource.util.StringResourceRepository r1;
        java.lang.String r0;
        java.util.Map $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.velocity.runtime.resource.util.StringResourceRepository;

        $r2 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.util.Map STATIC_REPOSITORIES>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static org.apache.velocity.runtime.resource.util.StringResourceRepository removeRepository(java.lang.String)
    {
        java.util.Map $r1;
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r3;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.util.Map STATIC_REPOSITORIES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        $r3 = (org.apache.velocity.runtime.resource.util.StringResourceRepository) $r2;

        return $r3;
    }

    public static void clearRepositories()
    {
        java.util.Map $r0;

        $r0 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.util.Map STATIC_REPOSITORIES>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        return;
    }

    public void init(org.apache.commons.collections.ExtendedProperties)
    {
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r10, $r11, $r12, $r15, $r18, $r24, $r35, $r43, $r44, $r46, $r54, $r55, $r63;
        java.lang.StringBuffer $r19, $r21, $r22, $r23, $r26, $r27, $r28, $r30, $r32, $r33, $r34, $r38, $r39, $r40, $r41, $r48, $r50, $r51, $r52, $r57, $r59, $r60, $r61;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r14, $r16, $r25, $r29, $r37, $r42, $r53, $r62;
        org.apache.commons.collections.ExtendedProperties r2;
        org.apache.velocity.runtime.log.Log $r1, $r17, $r20, $r31, $r47, $r49, $r56, $r58, $r64;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.velocity.runtime.resource.loader.StringResourceLoader r0;
        org.apache.velocity.runtime.RuntimeServices $r8, $r45;
        java.lang.Object $r9;
        java.lang.Class $r13, $r36;

        r0 := @this: org.apache.velocity.runtime.resource.loader.StringResourceLoader;

        r2 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r1 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("StringResourceLoader : initialization starting.");

        $r3 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_CLASS_DEFAULT>;

        $r4 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String,java.lang.String)>("repository.class", $r3);

        $r5 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_NAME_DEFAULT>;

        $r6 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String,java.lang.String)>("repository.name", $r5);

        $z0 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: boolean getBoolean(java.lang.String,boolean)>("repository.static", 1);

        $r7 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("repository.encoding");

        if $z0 == 0 goto label1;

        $r54 = staticinvoke <org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository getRepository(java.lang.String)>($r6);

        r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository> = $r54;

        $r55 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        if $r55 == null goto label2;

        $r56 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z5 = virtualinvoke $r56.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label2;

        $r58 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loaded repository \'");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from static repo store");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r58.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r62);

        goto label2;

     label1:
        $r8 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r9 = interfaceinvoke $r8.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getApplicationAttribute(java.lang.Object)>($r6);

        $r10 = (org.apache.velocity.runtime.resource.util.StringResourceRepository) $r9;

        r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository> = $r10;

        $r11 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        if $r11 == null goto label2;

        $r47 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z4 = virtualinvoke $r47.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label2;

        $r49 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loaded repository \'");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from application attributes");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r49.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r53);

     label2:
        $r63 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        if $r63 != null goto label4;

        $r43 = virtualinvoke r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository createRepository(java.lang.String,java.lang.String)>($r4, $r7);

        r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository> = $r43;

        if $z0 == 0 goto label3;

        $r46 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        staticinvoke <org.apache.velocity.runtime.resource.loader.StringResourceLoader: void setRepository(java.lang.String,org.apache.velocity.runtime.resource.util.StringResourceRepository)>($r6, $r46);

        goto label7;

     label3:
        $r45 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r44 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        interfaceinvoke $r45.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object setApplicationAttribute(java.lang.Object,java.lang.Object)>($r6, $r44);

        goto label7;

     label4:
        $r12 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label5;

        $r31 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot change class of string repository \'");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from ");

        $r35 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getName()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". The change will be ignored.");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r31.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r42);

     label5:
        if $r7 == null goto label7;

        $r15 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r16 = interfaceinvoke $r15.<org.apache.velocity.runtime.resource.util.StringResourceRepository: java.lang.String getEncoding()>();

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label7;

        $r17 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z3 = virtualinvoke $r17.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label6;

        $r20 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Changing the default encoding of string repository \'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from ");

        $r24 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r25 = interfaceinvoke $r24.<org.apache.velocity.runtime.resource.util.StringResourceRepository: java.lang.String getEncoding()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r20.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r29);

     label6:
        $r18 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        interfaceinvoke $r18.<org.apache.velocity.runtime.resource.util.StringResourceRepository: void setEncoding(java.lang.String)>($r7);

     label7:
        $r64 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r64.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("StringResourceLoader : initialization complete.");

        return;
    }

    public org.apache.velocity.runtime.resource.util.StringResourceRepository createRepository(java.lang.String, java.lang.String)
    {
        java.lang.InstantiationException $r19;
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r18;
        org.apache.velocity.exception.VelocityException $r20, $r27, $r34;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r26;
        org.apache.velocity.runtime.resource.loader.StringResourceLoader r0;
        java.lang.StringBuffer $r6, $r8, $r10, $r12, $r14, $r15, $r16, $r21, $r22, $r23, $r24, $r28, $r29, $r30, $r31, $r35, $r36, $r37, $r38;
        java.lang.String r2, r4, $r9, $r11, $r17, $r25, $r32, $r39;
        org.apache.velocity.runtime.log.Log $r1, $r5, $r7, $r13;
        java.lang.Object $r3;
        java.lang.ClassNotFoundException $r33;

        r0 := @this: org.apache.velocity.runtime.resource.loader.StringResourceLoader;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z0 = virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r13 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Creating string repository using class ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r17);

     label1:
        $r3 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>(r2);

        $r18 = (org.apache.velocity.runtime.resource.util.StringResourceRepository) $r3;

     label2:
        goto label6;

     label3:
        $r33 := @caughtexception;

        $r34 = new org.apache.velocity.exception.VelocityException;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find \'");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r34.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r39, $r33);

        throw $r34;

     label4:
        $r26 := @caughtexception;

        $r27 = new org.apache.velocity.exception.VelocityException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not access \'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r27.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r32, $r26);

        throw $r27;

     label5:
        $r19 := @caughtexception;

        $r20 = new org.apache.velocity.exception.VelocityException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate \'");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r19);

        throw $r20;

     label6:
        if r4 == null goto label7;

        interfaceinvoke $r18.<org.apache.velocity.runtime.resource.util.StringResourceRepository: void setEncoding(java.lang.String)>(r4);

        goto label8;

     label7:
        interfaceinvoke $r18.<org.apache.velocity.runtime.resource.util.StringResourceRepository: void setEncoding(java.lang.String)>("UTF-8");

     label8:
        $r5 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z1 = virtualinvoke $r5.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label9;

        $r7 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Default repository encoding is ");

        $r9 = interfaceinvoke $r18.<org.apache.velocity.runtime.resource.util.StringResourceRepository: java.lang.String getEncoding()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r11);

     label9:
        return $r18;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
    }

    public boolean resourceExists(java.lang.String)
    {
        org.apache.velocity.runtime.resource.loader.StringResourceLoader r1;
        org.apache.velocity.runtime.resource.util.StringResource $r3;
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r2;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.velocity.runtime.resource.loader.StringResourceLoader;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r3 = interfaceinvoke $r2.<org.apache.velocity.runtime.resource.util.StringResourceRepository: org.apache.velocity.runtime.resource.util.StringResource getStringResource(java.lang.String)>(r0);

        if $r3 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.io.InputStream getResourceStream(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException
    {
        byte[] $r6;
        org.apache.velocity.runtime.resource.util.StringResource $r3;
        java.io.ByteArrayInputStream $r7;
        java.lang.StringBuffer $r9, $r10, $r11, $r12, $r17, $r18, $r20;
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r2;
        java.lang.String r0, $r4, $r5, $r13, $r19, $r21;
        org.apache.velocity.exception.VelocityException $r16;
        boolean $z0;
        org.apache.velocity.runtime.resource.loader.StringResourceLoader r1;
        java.io.UnsupportedEncodingException $r15;
        org.apache.velocity.exception.ResourceNotFoundException $r8, $r14;

        r1 := @this: org.apache.velocity.runtime.resource.loader.StringResourceLoader;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r14 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r14.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>("No template name provided");

        throw $r14;

     label1:
        $r2 = r1.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r3 = interfaceinvoke $r2.<org.apache.velocity.runtime.resource.util.StringResourceRepository: org.apache.velocity.runtime.resource.util.StringResource getStringResource(java.lang.String)>(r0);

        if $r3 != null goto label2;

        $r8 = new org.apache.velocity.exception.ResourceNotFoundException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not locate resource \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        $r4 = virtualinvoke $r3.<org.apache.velocity.runtime.resource.util.StringResource: java.lang.String getBody()>();

        $r5 = virtualinvoke $r3.<org.apache.velocity.runtime.resource.util.StringResource: java.lang.String getEncoding()>();

        $r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);

        $r7 = new java.io.ByteArrayInputStream;

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

     label3:
        return $r7;

     label4:
        $r15 := @caughtexception;

        $r16 = new org.apache.velocity.exception.VelocityException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not convert String using encoding ");

        $r19 = virtualinvoke $r3.<org.apache.velocity.runtime.resource.util.StringResource: java.lang.String getEncoding()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r15);

        throw $r16;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public boolean isSourceModified(org.apache.velocity.runtime.resource.Resource)
    {
        org.apache.velocity.runtime.resource.loader.StringResourceLoader r0;
        org.apache.velocity.runtime.resource.util.StringResource $r4;
        long $l0, $l1;
        org.apache.velocity.runtime.resource.Resource r1;
        byte $b2;
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r2;
        java.lang.String $r3;
        boolean z0, $z1;

        r0 := @this: org.apache.velocity.runtime.resource.loader.StringResourceLoader;

        r1 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        z0 = 1;

        $r2 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r3 = virtualinvoke r1.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        $r4 = interfaceinvoke $r2.<org.apache.velocity.runtime.resource.util.StringResourceRepository: org.apache.velocity.runtime.resource.util.StringResource getStringResource(java.lang.String)>($r3);

        if $r4 == null goto label3;

        $l0 = virtualinvoke $r4.<org.apache.velocity.runtime.resource.util.StringResource: long getLastModified()>();

        $l1 = virtualinvoke r1.<org.apache.velocity.runtime.resource.Resource: long getLastModified()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        return z0;
    }

    public long getLastModified(org.apache.velocity.runtime.resource.Resource)
    {
        org.apache.velocity.runtime.resource.loader.StringResourceLoader r0;
        org.apache.velocity.runtime.resource.util.StringResource $r4;
        org.apache.velocity.runtime.resource.util.StringResourceRepository $r2;
        long $l0;
        java.lang.String $r3;
        org.apache.velocity.runtime.resource.Resource r1;

        r0 := @this: org.apache.velocity.runtime.resource.loader.StringResourceLoader;

        r1 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        $r2 = r0.<org.apache.velocity.runtime.resource.loader.StringResourceLoader: org.apache.velocity.runtime.resource.util.StringResourceRepository repository>;

        $r3 = virtualinvoke r1.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        $r4 = interfaceinvoke $r2.<org.apache.velocity.runtime.resource.util.StringResourceRepository: org.apache.velocity.runtime.resource.util.StringResource getStringResource(java.lang.String)>($r3);

        if $r4 == null goto label1;

        $l0 = virtualinvoke $r4.<org.apache.velocity.runtime.resource.util.StringResource: long getLastModified()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r4;
        java.util.Map $r5;
        java.lang.Class $r0, $r2, $r6, $r7;
        java.lang.String $r1, $r3;

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_ENCODING_DEFAULT> = "UTF-8";

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_ENCODING> = "repository.encoding";

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_NAME> = "repository.name";

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_CLASS> = "repository.class";

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: boolean REPOSITORY_STATIC_DEFAULT> = 1;

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_STATIC> = "repository.static";

        $r0 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepositoryImpl>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.resource.util.StringResourceRepositoryImpl");

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepositoryImpl> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepositoryImpl>;

     label2:
        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_CLASS_DEFAULT> = $r1;

        $r2 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepository>;

        if $r2 != null goto label3;

        $r7 = staticinvoke <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.resource.util.StringResourceRepository");

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepository> = $r7;

        goto label4;

     label3:
        $r7 = <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$util$StringResourceRepository>;

     label4:
        $r3 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.lang.String REPOSITORY_NAME_DEFAULT> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r4);

        <org.apache.velocity.runtime.resource.loader.StringResourceLoader: java.util.Map STATIC_REPOSITORIES> = $r5;

        return;
    }
}
