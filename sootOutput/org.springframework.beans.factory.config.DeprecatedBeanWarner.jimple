public class org.springframework.beans.factory.config.DeprecatedBeanWarner extends java.lang.Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor
{
    protected transient org.apache.commons.logging.Log logger;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.beans.factory.config.DeprecatedBeanWarner r0;

        r0 := @this: org.springframework.beans.factory.config.DeprecatedBeanWarner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.beans.factory.config.DeprecatedBeanWarner: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public void setLoggerName(java.lang.String)
    {
        org.apache.commons.logging.Log $r2;
        org.springframework.beans.factory.config.DeprecatedBeanWarner r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.DeprecatedBeanWarner;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>(r1);

        r0.<org.springframework.beans.factory.config.DeprecatedBeanWarner: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) throws org.springframework.beans.BeansException
    {
        java.lang.String[] $r2;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r1;
        int i0, i1;
        org.springframework.beans.factory.config.BeanDefinition $r5;
        java.lang.Class $r4;
        org.springframework.beans.factory.config.DeprecatedBeanWarner r0;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.config.DeprecatedBeanWarner;

        r1 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.config.DeprecatedBeanWarner: boolean isLogEnabled()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r1.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.String[] getBeanDefinitionNames()>();

        i0 = lengthof $r2;

        i1 = 0;

        goto label3;

     label1:
        r3 = $r2[i1];

        $r4 = interfaceinvoke r1.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.Class getType(java.lang.String)>(r3);

        if $r4 == null goto label2;

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Ljava/lang/Deprecated;");

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r1.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>(r3);

        virtualinvoke r0.<org.springframework.beans.factory.config.DeprecatedBeanWarner: void logDeprecatedBean(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r3, $r5);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

     label4:
        return;
    }

    protected void logDeprecatedBean(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.config.BeanDefinition r1;
        java.lang.StringBuilder $r0;
        org.apache.commons.logging.Log $r6;
        java.lang.String $r2, r3, $r4, $r7;
        org.springframework.beans.factory.config.DeprecatedBeanWarner r5;
        boolean $z0;

        r5 := @this: org.springframework.beans.factory.config.DeprecatedBeanWarner;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [\'");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r4 = interfaceinvoke r1.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getResourceDescription()>();

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] has been deprecated");

        $r6 = r5.<org.springframework.beans.factory.config.DeprecatedBeanWarner: org.apache.commons.logging.Log logger>;

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r7);

        return;
    }

    protected boolean isLogEnabled()
    {
        org.apache.commons.logging.Log $r1;
        org.springframework.beans.factory.config.DeprecatedBeanWarner r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.DeprecatedBeanWarner;

        $r1 = r0.<org.springframework.beans.factory.config.DeprecatedBeanWarner: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        return $z0;
    }
}
