class ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData extends ucar.nc2.ft.point.standard.CoordVarExtractor
{
    protected ucar.ma2.StructureData sdata;
    final ucar.nc2.ft.point.standard.NestedTable this$0;

    void <init>(ucar.nc2.ft.point.standard.NestedTable, java.lang.String, ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r3;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r0;
        java.lang.String r2;
        ucar.nc2.ft.point.standard.NestedTable r1;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        r1 := @parameter0: ucar.nc2.ft.point.standard.NestedTable;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: ucar.ma2.StructureData;

        r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: ucar.nc2.ft.point.standard.NestedTable this$0> = r1;

        specialinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: void <init>(java.lang.String,int)>(r2, 0);

        r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: ucar.ma2.StructureData sdata> = r3;

        return;
    }

    public double getCoordValue(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData $r2, r3;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        r3 := @parameter0: ucar.ma2.StructureData;

        $r2 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: ucar.ma2.StructureData sdata>;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: java.lang.String axisName>;

        $d0 = virtualinvoke $r2.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r1);

        return $d0;
    }

    public java.lang.String getCoordValueString(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData $r2, r4;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r0;
        java.lang.String $r1, $r3;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        r4 := @parameter0: ucar.ma2.StructureData;

        $r2 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: ucar.ma2.StructureData sdata>;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: java.lang.String axisName>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r1);

        return $r3;
    }

    public java.lang.String getUnitsString()
    {
        ucar.ma2.StructureData $r2;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r0;
        java.lang.String $r1, $r4;
        ucar.ma2.StructureMembers$Member $r3;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        $r2 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: ucar.ma2.StructureData sdata>;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: java.lang.String axisName>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureData: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<ucar.ma2.StructureMembers$Member: java.lang.String getUnitsString()>();

        return $r4;
    }

    public boolean isString()
    {
        ucar.ma2.StructureData $r2;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r0;
        ucar.ma2.DataType $r4;
        java.lang.String $r1;
        ucar.ma2.StructureMembers$Member $r3;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        $r2 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: ucar.ma2.StructureData sdata>;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: java.lang.String axisName>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureData: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $z0 = virtualinvoke $r4.<ucar.ma2.DataType: boolean isString()>();

        return $z0;
    }

    public boolean isInt()
    {
        ucar.ma2.StructureData $r2;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r0;
        ucar.ma2.DataType $r4;
        java.lang.String $r1;
        ucar.ma2.StructureMembers$Member $r3;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        $r2 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: ucar.ma2.StructureData sdata>;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: java.lang.String axisName>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureData: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $z0 = virtualinvoke $r4.<ucar.ma2.DataType: boolean isIntegral()>();

        return $z0;
    }

    public long getCoordValueLong(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r0;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r1;
        long $l0;
        java.lang.String $r2;

        r1 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        r0 := @parameter0: ucar.ma2.StructureData;

        $r2 = r1.<ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData: java.lang.String axisName>;

        $l0 = virtualinvoke r0.<ucar.ma2.StructureData: long convertScalarLong(java.lang.String)>($r2);

        return $l0;
    }

    public boolean isMissing(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r1;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData r0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarStructureData;

        r1 := @parameter0: ucar.ma2.StructureData;

        return 0;
    }
}
