public class com.google.gxp.compiler.base.Conditional extends com.google.gxp.compiler.base.Expression
{
    private final com.google.gxp.com.google.common.collect.ImmutableList clauses;
    private final com.google.gxp.compiler.base.Expression elseExpression;

    public void <init>(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.schema.Schema, java.util.List, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Conditional r0;
        com.google.gxp.compiler.schema.Schema r2, $r9, $r13, $r22;
        boolean $z0, $z1, $z2, $z3;
        com.google.gxp.com.google.common.collect.ImmutableList $r4;
        java.util.List r3;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r16, $r17, $r24, $r25, $r26, $r27, $r28, $r29;
        com.google.gxp.compiler.base.Conditional$Clause r20;
        com.google.gxp.compiler.base.Expression r5, $r7, $r21;
        com.google.gxp.compiler.base.Node r1;
        java.lang.String $r18, $r30;
        java.util.Iterator $r8;
        java.lang.IllegalArgumentException $r10, $r23, $r31;
        java.lang.Object $r6, $r19;

        r0 := @this: com.google.gxp.compiler.base.Conditional;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.schema.Schema;

        r3 := @parameter2: java.util.List;

        r5 := @parameter3: com.google.gxp.compiler.base.Expression;

        specialinvoke r0.<com.google.gxp.compiler.base.Expression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r1, r2);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r31 = new java.lang.IllegalArgumentException;

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one clause is required.");

        throw $r31;

     label1:
        if r2 == null goto label5;

        $r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r19 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.google.gxp.compiler.base.Conditional$Clause) $r19;

        $r21 = virtualinvoke r20.<com.google.gxp.compiler.base.Conditional$Clause: com.google.gxp.compiler.base.Expression getExpression()>();

        $r22 = virtualinvoke $r21.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z3 = virtualinvoke r2.<com.google.gxp.compiler.schema.Schema: boolean allows(com.google.gxp.compiler.schema.Schema)>($r22);

        if $z3 != 0 goto label3;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incompatible schemas: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clause in ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conditional");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r23;

     label3:
        goto label2;

     label4:
        $r9 = virtualinvoke r5.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z2 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r2, $r9);

        if $z2 != 0 goto label5;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incompatible schemas: ");

        $r13 = virtualinvoke r5.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" else in ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conditional");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label5:
        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>(r3);

        r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses> = $r4;

        $r6 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r7 = (com.google.gxp.compiler.base.Expression) $r6;

        r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression> = $r7;

        return;
    }

    public void <init>(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.schema.Schema, com.google.gxp.compiler.base.Expression, com.google.gxp.compiler.base.Expression, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r3, r4, r6;
        java.util.List $r5;
        com.google.gxp.compiler.base.Conditional r0;
        com.google.gxp.compiler.base.Node r1;
        com.google.gxp.compiler.schema.Schema r2;

        r0 := @this: com.google.gxp.compiler.base.Conditional;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.schema.Schema;

        r3 := @parameter2: com.google.gxp.compiler.base.Expression;

        r4 := @parameter3: com.google.gxp.compiler.base.Expression;

        r6 := @parameter4: com.google.gxp.compiler.base.Expression;

        $r5 = staticinvoke <com.google.gxp.compiler.base.Conditional: java.util.List createClauses(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r1, r3, r4);

        specialinvoke r0.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.util.List,com.google.gxp.compiler.base.Expression)>(r1, r2, $r5, r6);

        return;
    }

    private static java.util.List createClauses(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.base.Expression, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Conditional$Clause $r0;
        com.google.gxp.compiler.base.Expression r2, r3;
        com.google.gxp.compiler.base.Node r1;
        com.google.gxp.com.google.common.collect.ImmutableList $r4;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.base.Expression;

        r3 := @parameter2: com.google.gxp.compiler.base.Expression;

        $r0 = new com.google.gxp.compiler.base.Conditional$Clause;

        specialinvoke $r0.<com.google.gxp.compiler.base.Conditional$Clause: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r1, r2, r3);

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList of(java.lang.Object)>($r0);

        return $r4;
    }

    public com.google.gxp.compiler.base.Conditional withSchemaAndClauses(com.google.gxp.compiler.schema.Schema, java.util.List, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r4, $r6;
        com.google.gxp.compiler.base.Conditional r0, $r7, $r8;
        com.google.gxp.compiler.schema.Schema $r1, r2;
        com.google.gxp.com.google.common.collect.ImmutableList $r5;
        java.util.List r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.Conditional;

        r2 := @parameter0: com.google.gxp.compiler.schema.Schema;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: com.google.gxp.compiler.base.Expression;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z0 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $z1 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: boolean elementsEqual(java.lang.Iterable,java.lang.Iterable)>(r3, $r5);

        if $z1 == 0 goto label1;

        $r6 = r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression>;

        $z2 = virtualinvoke $r6.<com.google.gxp.compiler.base.Expression: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label1;

        $r7 = r0;

        goto label2;

     label1:
        $r8 = new com.google.gxp.compiler.base.Conditional;

        $r7 = $r8;

        specialinvoke $r8.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.util.List,com.google.gxp.compiler.base.Expression)>(r0, r2, r3, r4);

     label2:
        return $r7;
    }

    public java.util.List getClauses()
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r1;
        com.google.gxp.compiler.base.Conditional r0;

        r0 := @this: com.google.gxp.compiler.base.Conditional;

        $r1 = r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        return $r1;
    }

    public com.google.gxp.compiler.base.Expression getElseExpression()
    {
        com.google.gxp.compiler.base.Expression $r1;
        com.google.gxp.compiler.base.Conditional r0;

        r0 := @this: com.google.gxp.compiler.base.Conditional;

        $r1 = r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression>;

        return $r1;
    }

    public com.google.gxp.compiler.base.Conditional withClauses(java.util.List, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r4, $r5;
        com.google.gxp.compiler.base.Conditional r1, $r6;
        com.google.gxp.com.google.common.collect.ImmutableList $r2;
        com.google.gxp.compiler.schema.Schema $r3;
        java.util.List r0;
        boolean $z0, $z1;

        r1 := @this: com.google.gxp.compiler.base.Conditional;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r2 = r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: boolean elementsEqual(java.lang.Iterable,java.lang.Iterable)>(r0, $r2);

        if $z0 == 0 goto label1;

        $r5 = r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression>;

        $z1 = virtualinvoke $r5.<com.google.gxp.compiler.base.Expression: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r6 = new com.google.gxp.compiler.base.Conditional;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.schema.Schema getSchema()>();

        specialinvoke $r6.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.util.List,com.google.gxp.compiler.base.Expression)>(r1, $r3, r0, r4);

     label2:
        return $r6;
    }

    public boolean alwaysEquals(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Conditional$Clause $r13, $r15;
        com.google.gxp.compiler.base.Expression r0, $r9, $r10;
        com.google.gxp.compiler.base.Conditional r3, r5;
        com.google.gxp.compiler.schema.Schema $r1, $r2, $r4;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3;
        com.google.gxp.com.google.common.collect.ImmutableList $r7, $r8, $r11;
        java.util.List $r6;
        java.lang.Object $r12, $r14;

        r3 := @this: com.google.gxp.compiler.base.Conditional;

        r0 := @parameter0: com.google.gxp.compiler.base.Expression;

        $z0 = r0 instanceof com.google.gxp.compiler.base.Conditional;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r4 = virtualinvoke r3.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z1 = virtualinvoke $r2.<com.google.gxp.compiler.schema.Schema: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        r5 = (com.google.gxp.compiler.base.Conditional) r0;

        $r6 = virtualinvoke r5.<com.google.gxp.compiler.base.Conditional: java.util.List getClauses()>();

        $r7 = r3.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $i0 = virtualinvoke $r7.<com.google.gxp.com.google.common.collect.ImmutableList: int size()>();

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        i3 = 0;

     label4:
        $r8 = r3.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $i2 = virtualinvoke $r8.<com.google.gxp.com.google.common.collect.ImmutableList: int size()>();

        if i3 >= $i2 goto label6;

        $r11 = r3.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $r12 = virtualinvoke $r11.<com.google.gxp.com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i3);

        $r13 = (com.google.gxp.compiler.base.Conditional$Clause) $r12;

        $r14 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r15 = (com.google.gxp.compiler.base.Conditional$Clause) $r14;

        $z3 = virtualinvoke $r13.<com.google.gxp.compiler.base.Conditional$Clause: boolean alwaysEquals(com.google.gxp.compiler.base.Conditional$Clause)>($r15);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        $r9 = r3.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression>;

        $r10 = virtualinvoke r5.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression getElseExpression()>();

        $z2 = virtualinvoke $r9.<com.google.gxp.compiler.base.Expression: boolean alwaysEquals(com.google.gxp.compiler.base.Expression)>($r10);

        return $z2;
    }

    public java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)
    {
        java.lang.Object $r2;
        com.google.gxp.compiler.base.ExpressionVisitor r0;
        com.google.gxp.compiler.base.Conditional r1;

        r1 := @this: com.google.gxp.compiler.base.Conditional;

        r0 := @parameter0: com.google.gxp.compiler.base.ExpressionVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.ExpressionVisitor: java.lang.Object visitConditional(com.google.gxp.compiler.base.Conditional)>(r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.base.Conditional r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.gxp.compiler.base.Conditional;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.gxp.compiler.base.Conditional;

        if $z0 == 0 goto label1;

        $r2 = (com.google.gxp.compiler.base.Conditional) r0;

        $z1 = virtualinvoke r1.<com.google.gxp.compiler.base.Conditional: boolean equals(com.google.gxp.compiler.base.Conditional)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.Conditional)
    {
        com.google.gxp.compiler.base.Expression $r4, $r5;
        com.google.gxp.compiler.base.Conditional r0, r1;
        com.google.gxp.com.google.common.collect.ImmutableList $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.google.gxp.compiler.base.Conditional;

        r1 := @parameter0: com.google.gxp.compiler.base.Conditional;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.Conditional: boolean equalsExpression(com.google.gxp.compiler.base.Expression)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $r2 = r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $z1 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: boolean elementsEqual(java.lang.Iterable,java.lang.Iterable)>($r3, $r2);

        if $z1 == 0 goto label1;

        $r5 = r0.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression>;

        $r4 = r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression>;

        $z2 = virtualinvoke $r5.<com.google.gxp.compiler.base.Expression: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public int hashCode()
    {
        com.google.gxp.compiler.base.Expression $r4;
        java.lang.Object[] $r0;
        com.google.gxp.compiler.base.Conditional r1;
        int $i0, $i1;
        com.google.gxp.com.google.common.collect.ImmutableList $r3;
        java.lang.Integer $r2;

        r1 := @this: com.google.gxp.compiler.base.Conditional;

        $r0 = newarray (java.lang.Object)[3];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.Conditional: int expressionHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.com.google.common.collect.ImmutableList clauses>;

        $r0[1] = $r3;

        $r4 = r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression elseExpression>;

        $r0[2] = $r4;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }
}
