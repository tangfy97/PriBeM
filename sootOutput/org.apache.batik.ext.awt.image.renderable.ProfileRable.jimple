public class org.apache.batik.ext.awt.image.renderable.ProfileRable extends org.apache.batik.ext.awt.image.renderable.AbstractRable
{
    private org.apache.batik.ext.awt.color.ICCColorSpaceExt colorSpace;

    public void <init>(org.apache.batik.ext.awt.image.renderable.Filter, org.apache.batik.ext.awt.color.ICCColorSpaceExt)
    {
        org.apache.batik.ext.awt.color.ICCColorSpaceExt r2;
        org.apache.batik.ext.awt.image.renderable.Filter r1;
        org.apache.batik.ext.awt.image.renderable.ProfileRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.ProfileRable;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        r2 := @parameter1: org.apache.batik.ext.awt.color.ICCColorSpaceExt;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter)>(r1);

        r0.<org.apache.batik.ext.awt.image.renderable.ProfileRable: org.apache.batik.ext.awt.color.ICCColorSpaceExt colorSpace> = r2;

        return;
    }

    public void setSource(org.apache.batik.ext.awt.image.renderable.Filter)
    {
        org.apache.batik.ext.awt.image.renderable.Filter r1;
        org.apache.batik.ext.awt.image.renderable.ProfileRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.ProfileRable;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void init(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r1, null);

        return;
    }

    public org.apache.batik.ext.awt.image.renderable.Filter getSource()
    {
        java.util.Vector $r1;
        java.lang.Object $r2;
        org.apache.batik.ext.awt.image.renderable.Filter $r3;
        org.apache.batik.ext.awt.image.renderable.ProfileRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.ProfileRable;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: java.util.Vector getSources()>();

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        $r3 = (org.apache.batik.ext.awt.image.renderable.Filter) $r2;

        return $r3;
    }

    public void setColorSpace(org.apache.batik.ext.awt.color.ICCColorSpaceExt)
    {
        org.apache.batik.ext.awt.color.ICCColorSpaceExt r1;
        org.apache.batik.ext.awt.image.renderable.ProfileRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.ProfileRable;

        r1 := @parameter0: org.apache.batik.ext.awt.color.ICCColorSpaceExt;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r0.<org.apache.batik.ext.awt.image.renderable.ProfileRable: org.apache.batik.ext.awt.color.ICCColorSpaceExt colorSpace> = r1;

        return;
    }

    public org.apache.batik.ext.awt.color.ICCColorSpaceExt getColorSpace()
    {
        org.apache.batik.ext.awt.color.ICCColorSpaceExt $r1;
        org.apache.batik.ext.awt.image.renderable.ProfileRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.ProfileRable;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.ProfileRable: org.apache.batik.ext.awt.color.ICCColorSpaceExt colorSpace>;

        return $r1;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        java.awt.image.renderable.RenderContext r2;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r4;
        java.awt.image.RenderedImage $r3;
        org.apache.batik.ext.awt.image.rendered.ProfileRed $r5;
        org.apache.batik.ext.awt.color.ICCColorSpaceExt $r6;
        org.apache.batik.ext.awt.image.renderable.Filter $r1;
        org.apache.batik.ext.awt.image.renderable.ProfileRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.ProfileRable;

        r2 := @parameter0: java.awt.image.renderable.RenderContext;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.ProfileRable: org.apache.batik.ext.awt.image.renderable.Filter getSource()>();

        $r3 = interfaceinvoke $r1.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>(r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)>($r3);

        $r5 = new org.apache.batik.ext.awt.image.rendered.ProfileRed;

        $r6 = r0.<org.apache.batik.ext.awt.image.renderable.ProfileRable: org.apache.batik.ext.awt.color.ICCColorSpaceExt colorSpace>;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.rendered.ProfileRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,org.apache.batik.ext.awt.color.ICCColorSpaceExt)>($r4, $r6);

        return $r5;
    }
}
