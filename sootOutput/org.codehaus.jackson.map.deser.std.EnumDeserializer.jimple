public class org.codehaus.jackson.map.deser.std.EnumDeserializer extends org.codehaus.jackson.map.deser.std.StdScalarDeserializer
{
    protected final org.codehaus.jackson.map.util.EnumResolver _resolver;

    public void <init>(org.codehaus.jackson.map.util.EnumResolver)
    {
        org.codehaus.jackson.map.deser.std.EnumDeserializer r0;
        org.codehaus.jackson.map.util.EnumResolver r1;

        r0 := @this: org.codehaus.jackson.map.deser.std.EnumDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.util.EnumResolver;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Enum;");

        r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer: org.codehaus.jackson.map.util.EnumResolver _resolver> = r1;

        return;
    }

    public static org.codehaus.jackson.map.JsonDeserializer deserializerForCreator(org.codehaus.jackson.map.DeserializationConfig, java.lang.Class, org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer $r4;
        org.codehaus.jackson.map.DeserializationConfig r3;
        java.lang.String $r13;
        boolean $z0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r15;
        java.lang.reflect.Member $r6;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.IllegalArgumentException $r8;
        java.lang.Class $r1, $r2, r5, $r7, r14;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;

        r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r5 := @parameter1: java.lang.Class;

        r0 := @parameter2: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        if $r1 != class "Ljava/lang/String;" goto label1;

        r14 = null;

        goto label6;

     label1:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r1 == $r2 goto label2;

        if $r1 != class "Ljava/lang/Integer;" goto label3;

     label2:
        r14 = class "Ljava/lang/Integer;";

        goto label6;

     label3:
        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        if $r1 == $r7 goto label4;

        if $r1 != class "Ljava/lang/Long;" goto label5;

     label4:
        r14 = class "Ljava/lang/Long;";

        goto label6;

     label5:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameter #0 type for factory method (");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not suitable, must be java.lang.String or int/Integer/long/Long");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label6:
        $r15 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r15);

        if $z0 == 0 goto label7;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Member getMember()>();

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r6);

     label7:
        $r4 = new org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.Class)>(r5, r0, r14);

        return $r4;
    }

    public java.lang.Enum deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r11, $r12;
        java.lang.Enum $r6, $r18;
        boolean $z0;
        java.lang.StringBuilder $r21, $r22, $r24, $r25;
        org.codehaus.jackson.map.deser.std.EnumDeserializer r4;
        org.codehaus.jackson.map.DeserializationContext r7;
        org.codehaus.jackson.map.JsonMappingException $r10, $r15, $r27, $r28;
        int $i0, $i1;
        java.lang.String $r3, $r26;
        org.codehaus.jackson.map.util.EnumResolver $r5, $r8, $r13, $r17, $r19, $r23;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r16;
        java.lang.Class $r9, $r14, $r20;

        r4 := @this: org.codehaus.jackson.map.deser.std.EnumDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r1 == $r2 goto label1;

        $r11 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r1 != $r11 goto label3;

     label1:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r5 = r4.<org.codehaus.jackson.map.deser.std.EnumDeserializer: org.codehaus.jackson.map.util.EnumResolver _resolver>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Enum findEnum(java.lang.String)>($r3);

        if $r6 != null goto label2;

        $r8 = r4.<org.codehaus.jackson.map.deser.std.EnumDeserializer: org.codehaus.jackson.map.util.EnumResolver _resolver>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Class getEnumClass()>();

        $r10 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String)>($r9, "value not one of declared Enum instance names");

        throw $r10;

     label2:
        return $r6;

     label3:
        $r12 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        if $r1 != $r12 goto label6;

        $r16 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS>;

        $z0 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r16);

        if $z0 == 0 goto label4;

        $r28 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String)>("Not allowed to deserialize Enum value out of JSON number (disable DeserializationConfig.Feature.FAIL_ON_NUMBERS_FOR_ENUMS to allow)");

        throw $r28;

     label4:
        $i0 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: int getIntValue()>();

        $r17 = r4.<org.codehaus.jackson.map.deser.std.EnumDeserializer: org.codehaus.jackson.map.util.EnumResolver _resolver>;

        $r18 = virtualinvoke $r17.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Enum getEnum(int)>($i0);

        if $r18 != null goto label5;

        $r19 = r4.<org.codehaus.jackson.map.deser.std.EnumDeserializer: org.codehaus.jackson.map.util.EnumResolver _resolver>;

        $r20 = virtualinvoke $r19.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Class getEnumClass()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index value outside legal index range [0..");

        $r23 = r4.<org.codehaus.jackson.map.deser.std.EnumDeserializer: org.codehaus.jackson.map.util.EnumResolver _resolver>;

        $i1 = virtualinvoke $r23.<org.codehaus.jackson.map.util.EnumResolver: int lastValidIndex()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String)>($r20, $r26);

        throw $r27;

     label5:
        return $r18;

     label6:
        $r13 = r4.<org.codehaus.jackson.map.deser.std.EnumDeserializer: org.codehaus.jackson.map.util.EnumResolver _resolver>;

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.map.util.EnumResolver: java.lang.Class getEnumClass()>();

        $r15 = virtualinvoke r7.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r14);

        throw $r15;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Enum $r3;
        org.codehaus.jackson.map.deser.std.EnumDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.deser.std.EnumDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.EnumDeserializer: java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
