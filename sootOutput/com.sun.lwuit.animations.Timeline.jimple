public final class com.sun.lwuit.animations.Timeline extends com.sun.lwuit.Image implements com.sun.lwuit.animations.Animation, com.sun.lwuit.Painter
{
    private int time;
    private int duration;
    com.sun.lwuit.animations.AnimationObject[] animations;
    private com.sun.lwuit.geom.Dimension size;
    private com.sun.lwuit.geom.Dimension scaledTo;
    private long currentTime;
    private int animationDelay;
    private boolean pause;

    private void <init>()
    {
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        specialinvoke r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>(null);

        r0.<com.sun.lwuit.animations.Timeline: long currentTime> = -1L;

        r0.<com.sun.lwuit.animations.Timeline: int animationDelay> = 100;

        return;
    }

    public int[] getRGB()
    {
        com.sun.lwuit.animations.Timeline r0;
        int[] $r3;
        int $i0, $i1;
        com.sun.lwuit.Graphics $r2;
        com.sun.lwuit.Image $r1;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $i0 = virtualinvoke r0.<com.sun.lwuit.animations.Timeline: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.animations.Timeline: int getHeight()>();

        $r1 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createImage(int,int)>($i0, $i1);

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Image: com.sun.lwuit.Graphics getGraphics()>();

        virtualinvoke r0.<com.sun.lwuit.animations.Timeline: void paint(com.sun.lwuit.Graphics)>($r2);

        $r3 = virtualinvoke $r1.<com.sun.lwuit.Image: int[] getRGB()>();

        return $r3;
    }

    public int[] getRGBCached()
    {
        com.sun.lwuit.animations.Timeline r0;
        int[] $r1;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $r1 = specialinvoke r0.<com.sun.lwuit.Image: int[] getRGB()>();

        return $r1;
    }

    public static com.sun.lwuit.animations.Timeline createTimeline(int, com.sun.lwuit.animations.AnimationObject[], com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.animations.AnimationObject[] r1;
        com.sun.lwuit.animations.Timeline $r0;
        java.lang.IllegalArgumentException $r3;
        com.sun.lwuit.geom.Dimension r2;
        int i0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        i0 := @parameter0: int;

        r1 := @parameter1: com.sun.lwuit.animations.AnimationObject[];

        r2 := @parameter2: com.sun.lwuit.geom.Dimension;

        if i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal duration ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r0 = new com.sun.lwuit.animations.Timeline;

        specialinvoke $r0.<com.sun.lwuit.animations.Timeline: void <init>()>();

        $r0.<com.sun.lwuit.animations.Timeline: int duration> = i0;

        $r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations> = r1;

        $r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size> = r2;

        return $r0;
    }

    public void addAnimation(com.sun.lwuit.animations.AnimationObject)
    {
        com.sun.lwuit.animations.AnimationObject[] $r1, r2, $r3, $r4, $r5;
        com.sun.lwuit.animations.Timeline r0;
        com.sun.lwuit.animations.AnimationObject r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        r6 := @parameter0: com.sun.lwuit.animations.AnimationObject;

        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 1;

        r2 = newarray (com.sun.lwuit.animations.AnimationObject)[$i1];

        $r4 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r3 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $i2 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i2);

        $r5 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $i3 = lengthof $r5;

        r2[$i3] = r6;

        r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations> = r2;

        return;
    }

    public void setTime(int)
    {
        com.sun.lwuit.animations.Timeline r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        i0 := @parameter0: int;

        $z0 = r0.<com.sun.lwuit.animations.Timeline: boolean pause>;

        if $z0 != 0 goto label1;

        if i0 < 0 goto label1;

        $i1 = r0.<com.sun.lwuit.animations.Timeline: int duration>;

        if i0 > $i1 goto label1;

        r0.<com.sun.lwuit.animations.Timeline: int time> = i0;

     label1:
        return;
    }

    public int getTime()
    {
        int $i0;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $i0 = r0.<com.sun.lwuit.animations.Timeline: int time>;

        return $i0;
    }

    public boolean isAnimation()
    {
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        return 1;
    }

    public boolean animate()
    {
        long $l0, $l2, $l3, $l5, $l6, $l9, $l10, $l11, $l12, $l14;
        byte $b1, $b7;
        int $i4, $i8, $i13, i15, $i16, $i17;
        boolean $z0;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $z0 = r0.<com.sun.lwuit.animations.Timeline: boolean pause>;

        if $z0 != 0 goto label3;

        $l0 = r0.<com.sun.lwuit.animations.Timeline: long currentTime>;

        $b1 = $l0 cmp 0L;

        $i16 = (int) $b1;

        if $i16 >= 0 goto label1;

        $l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.animations.Timeline: long currentTime> = $l14;

        virtualinvoke r0.<com.sun.lwuit.animations.Timeline: void setTime(int)>(0);

        return 1;

     label1:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<com.sun.lwuit.animations.Timeline: long currentTime>;

        $l6 = $l2 - $l3;

        $i4 = r0.<com.sun.lwuit.animations.Timeline: int animationDelay>;

        $l5 = (long) $i4;

        $b7 = $l6 cmp $l5;

        $i17 = (int) $b7;

        if $i17 <= 0 goto label3;

        $i8 = r0.<com.sun.lwuit.animations.Timeline: int time>;

        $l11 = (long) $i8;

        $l9 = r0.<com.sun.lwuit.animations.Timeline: long currentTime>;

        $l10 = $l2 - $l9;

        $l12 = $l11 + $l10;

        i15 = (int) $l12;

        r0.<com.sun.lwuit.animations.Timeline: long currentTime> = $l2;

        $i13 = r0.<com.sun.lwuit.animations.Timeline: int duration>;

        if i15 <= $i13 goto label2;

        i15 = 0;

     label2:
        virtualinvoke r0.<com.sun.lwuit.animations.Timeline: void setTime(int)>(i15);

        return 1;

     label3:
        return 0;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        virtualinvoke r0.<com.sun.lwuit.animations.Timeline: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle)>(r1, null);

        return;
    }

    public void paint(com.sun.lwuit.Graphics, com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.geom.Rectangle r0;
        com.sun.lwuit.geom.Dimension $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;
        com.sun.lwuit.animations.Timeline r1;
        float $f0, $f1, $f2, $f3, f4, f5;

        r1 := @this: com.sun.lwuit.animations.Timeline;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.geom.Rectangle;

        f4 = 1.0F;

        f5 = 1.0F;

        if r0 == null goto label1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i0 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $f0 = (float) $i0;

        $r4 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i1 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $f1 = (float) $i1;

        f4 = $f0 / $f1;

        $r5 = virtualinvoke r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i2 = virtualinvoke $r5.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $f2 = (float) $i2;

        $r6 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i3 = virtualinvoke $r6.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $f3 = (float) $i3;

        f5 = $f2 / $f3;

     label1:
        specialinvoke r1.<com.sun.lwuit.animations.Timeline: void paintScaled(com.sun.lwuit.Graphics,float,float)>(r2, f4, f5);

        return;
    }

    private void paintScaled(com.sun.lwuit.Graphics, float, float)
    {
        com.sun.lwuit.animations.AnimationObject[] $r1, $r2, $r4, $r6, $r8;
        com.sun.lwuit.Graphics r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i10;
        com.sun.lwuit.animations.Timeline r0;
        com.sun.lwuit.animations.AnimationObject $r3, $r5, $r7, $r10;
        float f0, f1;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        r9 := @parameter0: com.sun.lwuit.Graphics;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i6 = 0;

     label1:
        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $i0 = lengthof $r1;

        if i6 >= $i0 goto label5;

        $r2 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r3 = $r2[i6];

        $i1 = virtualinvoke $r3.<com.sun.lwuit.animations.AnimationObject: int getStartTime()>();

        $i8 = (int) -1;

        if $i1 <= $i8 goto label2;

        $i5 = r0.<com.sun.lwuit.animations.Timeline: int time>;

        if $i1 <= $i5 goto label2;

        goto label4;

     label2:
        $r4 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r5 = $r4[i6];

        $i2 = virtualinvoke $r5.<com.sun.lwuit.animations.AnimationObject: int getEndTime()>();

        $i10 = (int) -1;

        if $i2 <= $i10 goto label3;

        $i4 = r0.<com.sun.lwuit.animations.Timeline: int time>;

        if $i2 >= $i4 goto label3;

        goto label4;

     label3:
        $r6 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r7 = $r6[i6];

        $i3 = r0.<com.sun.lwuit.animations.Timeline: int time>;

        virtualinvoke $r7.<com.sun.lwuit.animations.AnimationObject: void setTime(int)>($i3);

        $r8 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r10 = $r8[i6];

        virtualinvoke $r10.<com.sun.lwuit.animations.AnimationObject: void draw(com.sun.lwuit.Graphics,float,float)>(r9, f0, f1);

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        return;
    }

    public int getAnimationDelay()
    {
        int $i0;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $i0 = r0.<com.sun.lwuit.animations.Timeline: int animationDelay>;

        return $i0;
    }

    public void setAnimationDelay(int)
    {
        int i0;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.animations.Timeline: int animationDelay> = i0;

        return;
    }

    protected void drawImage(com.sun.lwuit.Graphics, java.lang.Object, int, int)
    {
        com.sun.lwuit.Graphics r0;
        com.sun.lwuit.geom.Dimension $r2, $r3, $r4, $r5, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.sun.lwuit.animations.Timeline r1;
        float $f0, $f1, f2, $f3, $f4, f5;
        java.lang.Object r7;

        r1 := @this: com.sun.lwuit.animations.Timeline;

        r0 := @parameter0: com.sun.lwuit.Graphics;

        r7 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.sun.lwuit.Graphics: void translate(int,int)>(i0, i1);

        $r2 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        if $r2 == null goto label1;

        $r3 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        $i4 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $f0 = (float) $i4;

        $r4 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i5 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $f1 = (float) $i5;

        f2 = $f0 / $f1;

        $r5 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        $i6 = virtualinvoke $r5.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $f3 = (float) $i6;

        $r6 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i7 = virtualinvoke $r6.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $f4 = (float) $i7;

        f5 = $f3 / $f4;

        specialinvoke r1.<com.sun.lwuit.animations.Timeline: void paintScaled(com.sun.lwuit.Graphics,float,float)>(r0, f2, f5);

        goto label2;

     label1:
        virtualinvoke r1.<com.sun.lwuit.animations.Timeline: void paint(com.sun.lwuit.Graphics)>(r0);

     label2:
        $i3 = neg i0;

        $i2 = neg i1;

        virtualinvoke r0.<com.sun.lwuit.Graphics: void translate(int,int)>($i3, $i2);

        return;
    }

    public int getWidth()
    {
        com.sun.lwuit.geom.Dimension $r1, $r2, $r3;
        com.sun.lwuit.animations.Timeline r0;
        int $i0, $i1;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        if $r1 == null goto label1;

        $r3 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        $i1 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        return $i1;

     label1:
        $r2 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i0 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        return $i0;
    }

    public int getHeight()
    {
        com.sun.lwuit.geom.Dimension $r1, $r2, $r3;
        com.sun.lwuit.animations.Timeline r0;
        int $i0, $i1;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        if $r1 == null goto label1;

        $r3 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        $i1 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        return $i1;

     label1:
        $r2 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i0 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        return $i0;
    }

    public com.sun.lwuit.Image scaled(int, int)
    {
        com.sun.lwuit.animations.AnimationObject[] $r2;
        com.sun.lwuit.animations.Timeline $r0, r1;
        long $l1;
        com.sun.lwuit.geom.Dimension $r3, $r4;
        int $i0, $i2, $i3, i4, i5;

        r1 := @this: com.sun.lwuit.animations.Timeline;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        $r0 = new com.sun.lwuit.animations.Timeline;

        specialinvoke $r0.<com.sun.lwuit.animations.Timeline: void <init>()>();

        $i0 = r1.<com.sun.lwuit.animations.Timeline: int animationDelay>;

        $r0.<com.sun.lwuit.animations.Timeline: int animationDelay> = $i0;

        $r2 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations> = $r2;

        $l1 = r1.<com.sun.lwuit.animations.Timeline: long currentTime>;

        $r0.<com.sun.lwuit.animations.Timeline: long currentTime> = $l1;

        $i2 = r1.<com.sun.lwuit.animations.Timeline: int duration>;

        $r0.<com.sun.lwuit.animations.Timeline: int duration> = $i2;

        $r3 = r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size> = $r3;

        $i3 = r1.<com.sun.lwuit.animations.Timeline: int time>;

        $r0.<com.sun.lwuit.animations.Timeline: int time> = $i3;

        $r4 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r4.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(i4, i5);

        $r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo> = $r4;

        return $r0;
    }

    public boolean isPause()
    {
        com.sun.lwuit.animations.Timeline r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $z0 = r0.<com.sun.lwuit.animations.Timeline: boolean pause>;

        return $z0;
    }

    public void setPause(boolean)
    {
        com.sun.lwuit.animations.Timeline r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.animations.Timeline: boolean pause> = z0;

        return;
    }

    public int getDuration()
    {
        int $i0;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $i0 = r0.<com.sun.lwuit.animations.Timeline: int duration>;

        return $i0;
    }

    public com.sun.lwuit.geom.Dimension getSize()
    {
        com.sun.lwuit.geom.Dimension $r1;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        return $r1;
    }

    public int getAnimationCount()
    {
        int $i0;
        com.sun.lwuit.animations.AnimationObject[] $r1;
        com.sun.lwuit.animations.Timeline r0;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public com.sun.lwuit.animations.AnimationObject getAnimation(int)
    {
        com.sun.lwuit.animations.AnimationObject[] $r1;
        com.sun.lwuit.animations.Timeline r0;
        int i0;
        com.sun.lwuit.animations.AnimationObject $r2;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r2 = $r1[i0];

        return $r2;
    }

    public com.sun.lwuit.animations.AnimationObject getAnimationAt(int, int)
    {
        int[] $r15;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13;
        com.sun.lwuit.animations.AnimationObject[] $r1, $r3, $r5, $r7, $r9, $r11, $r16;
        com.sun.lwuit.geom.Dimension $r2, $r18, $r19, $r20, $r21;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22;
        com.sun.lwuit.animations.Timeline r0;
        com.sun.lwuit.animations.AnimationObject $r4, $r6, $r8, $r10, $r12, $r17;
        com.sun.lwuit.Image $r13, $r14;

        r0 := @this: com.sun.lwuit.animations.Timeline;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        i22 = 0;

     label1:
        $r1 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $i0 = lengthof $r1;

        if i22 >= $i0 goto label4;

        f12 = 1.0F;

        f13 = 1.0F;

        $r2 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        if $r2 == null goto label2;

        $r18 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        $i14 = virtualinvoke $r18.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $f8 = (float) $i14;

        $r19 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i15 = virtualinvoke $r19.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $f9 = (float) $i15;

        f12 = $f8 / $f9;

        $r20 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension scaledTo>;

        $i16 = virtualinvoke $r20.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $f10 = (float) $i16;

        $r21 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension size>;

        $i17 = virtualinvoke $r21.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $f11 = (float) $i17;

        f13 = $f10 / $f11;

     label2:
        $r3 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r4 = $r3[i22];

        $i1 = virtualinvoke $r4.<com.sun.lwuit.animations.AnimationObject: int getWidth()>();

        $f0 = (float) $i1;

        $f1 = $f0 * f12;

        $i18 = (int) $f1;

        $r5 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r6 = $r5[i22];

        $i2 = virtualinvoke $r6.<com.sun.lwuit.animations.AnimationObject: int getHeight()>();

        $f2 = (float) $i2;

        $f3 = $f2 * f13;

        $i19 = (int) $f3;

        $r7 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r8 = $r7[i22];

        $i3 = virtualinvoke $r8.<com.sun.lwuit.animations.AnimationObject: int getX()>();

        $f4 = (float) $i3;

        $f5 = $f4 * f12;

        $i20 = (int) $f5;

        $r9 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r10 = $r9[i22];

        $i4 = virtualinvoke $r10.<com.sun.lwuit.animations.AnimationObject: int getY()>();

        $f6 = (float) $i4;

        $f7 = $f6 * f13;

        $i21 = (int) $f7;

        $z0 = staticinvoke <com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int,int,int,int,int)>($i20, $i21, $i18, $i19, i5, i6, 1, 1);

        if $z0 == 0 goto label3;

        $r11 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r12 = $r11[i22];

        $r13 = virtualinvoke $r12.<com.sun.lwuit.animations.AnimationObject: com.sun.lwuit.Image getImage()>();

        $r14 = virtualinvoke $r13.<com.sun.lwuit.Image: com.sun.lwuit.Image scaled(int,int)>($i18, $i19);

        $r15 = virtualinvoke $r14.<com.sun.lwuit.Image: int[] getRGB()>();

        i7 = i5 - $i20;

        i8 = i6 - $i21;

        $i9 = i8 * $i19;

        i10 = i7 + $i9;

        if i10 < 0 goto label3;

        $i11 = lengthof $r15;

        if i10 >= $i11 goto label3;

        $i12 = $r15[i10];

        $i13 = $i12 & -16777216;

        if $i13 == 0 goto label3;

        $r16 = r0.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject[] animations>;

        $r17 = $r16[i22];

        return $r17;

     label3:
        i22 = i22 + 1;

        goto label1;

     label4:
        return null;
    }
}
