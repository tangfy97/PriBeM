public final class org.apache.poi.hwpf.model.FontTable extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger _logger;
    private short _stringCount;
    private short _extraDataSz;
    private int lcbSttbfffn;
    private int fcSttbfffn;
    private org.apache.poi.hwpf.model.Ffn[] _fontNames;
    static final boolean $assertionsDisabled;

    public void <init>(byte[], int, int)
    {
        org.apache.poi.hwpf.model.Ffn $r6, $r7;
        byte[] r1;
        short $s1, $s2, $s3, $s4;
        org.apache.poi.hwpf.model.Ffn[] $r2, $r4, $r5;
        int i0, $i5, i6, i7, i8, i9, $i10, $i11;
        org.apache.poi.hwpf.model.FontTable r0;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        r1 := @parameter0: byte[];

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames> = null;

        r0.<org.apache.poi.hwpf.model.FontTable: int lcbSttbfffn> = i0;

        r0.<org.apache.poi.hwpf.model.FontTable: int fcSttbfffn> = i6;

        $s1 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, i6);

        r0.<org.apache.poi.hwpf.model.FontTable: short _stringCount> = $s1;

        i7 = i6 + 2;

        $s2 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, i7);

        r0.<org.apache.poi.hwpf.model.FontTable: short _extraDataSz> = $s2;

        i8 = i7 + 2;

        $s3 = r0.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        $i10 = (int) $s3;

        $r2 = newarray (org.apache.poi.hwpf.model.Ffn)[$i10];

        r0.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames> = $r2;

        i9 = 0;

     label1:
        $s4 = r0.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        $i11 = (int) $s4;

        if i9 >= $i11 goto label2;

        $r4 = r0.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $r7 = new org.apache.poi.hwpf.model.Ffn;

        specialinvoke $r7.<org.apache.poi.hwpf.model.Ffn: void <init>(byte[],int)>(r1, i8);

        $r4[i9] = $r7;

        $r5 = r0.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $r6 = $r5[i9];

        $i5 = virtualinvoke $r6.<org.apache.poi.hwpf.model.Ffn: int getSize()>();

        i8 = i8 + $i5;

        i9 = i9 + 1;

        goto label1;

     label2:
        return;
    }

    public short getStringCount()
    {
        org.apache.poi.hwpf.model.FontTable r0;
        short $s0;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        $s0 = r0.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        return $s0;
    }

    public short getExtraDataSz()
    {
        org.apache.poi.hwpf.model.FontTable r0;
        short $s0;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        $s0 = r0.<org.apache.poi.hwpf.model.FontTable: short _extraDataSz>;

        return $s0;
    }

    public org.apache.poi.hwpf.model.Ffn[] getFontNames()
    {
        org.apache.poi.hwpf.model.FontTable r0;
        org.apache.poi.hwpf.model.Ffn[] $r1;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        $r1 = r0.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        return $r1;
    }

    public int getSize()
    {
        org.apache.poi.hwpf.model.FontTable r0;
        int $i0;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        $i0 = r0.<org.apache.poi.hwpf.model.FontTable: int lcbSttbfffn>;

        return $i0;
    }

    public java.lang.String getMainFont(int)
    {
        org.apache.poi.hwpf.model.FontTable r0;
        org.apache.poi.hwpf.model.Ffn $r2;
        org.apache.poi.util.POILogger $r4;
        short $s1;
        org.apache.poi.hwpf.model.Ffn[] $r1;
        int i0, $i2;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        i0 := @parameter0: int;

        $s1 = r0.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        $i2 = (int) $s1;

        if i0 < $i2 goto label1;

        $r4 = <org.apache.poi.hwpf.model.FontTable: org.apache.poi.util.POILogger _logger>;

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(3, "Mismatch in chpFtc with stringCount");

        return null;

     label1:
        $r1 = r0.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.model.Ffn: java.lang.String getMainFontName()>();

        return $r3;
    }

    public java.lang.String getAltFont(int)
    {
        org.apache.poi.hwpf.model.FontTable r0;
        org.apache.poi.hwpf.model.Ffn $r2;
        org.apache.poi.util.POILogger $r4;
        short $s1;
        org.apache.poi.hwpf.model.Ffn[] $r1;
        int i0, $i2;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        i0 := @parameter0: int;

        $s1 = r0.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        $i2 = (int) $s1;

        if i0 < $i2 goto label1;

        $r4 = <org.apache.poi.hwpf.model.FontTable: org.apache.poi.util.POILogger _logger>;

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(3, "Mismatch in chpFtc with stringCount");

        return null;

     label1:
        $r1 = r0.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.model.Ffn: java.lang.String getAltFontName()>();

        return $r3;
    }

    public void setStringCount(short)
    {
        org.apache.poi.hwpf.model.FontTable r0;
        short s0;

        r0 := @this: org.apache.poi.hwpf.model.FontTable;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.FontTable: short _stringCount> = s0;

        return;
    }

    public void writeTo(org.apache.poi.hwpf.model.io.HWPFFileSystem) throws java.io.IOException
    {
        org.apache.poi.hwpf.model.FontTable r2;
        org.apache.poi.hwpf.model.io.HWPFOutputStream $r1;
        org.apache.poi.hwpf.model.io.HWPFFileSystem r0;

        r2 := @this: org.apache.poi.hwpf.model.FontTable;

        r0 := @parameter0: org.apache.poi.hwpf.model.io.HWPFFileSystem;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFFileSystem: org.apache.poi.hwpf.model.io.HWPFOutputStream getStream(java.lang.String)>("1Table");

        virtualinvoke r2.<org.apache.poi.hwpf.model.FontTable: void writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream)>($r1);

        return;
    }

    public void writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream) throws java.io.IOException
    {
        org.apache.poi.hwpf.model.FontTable r1;
        org.apache.poi.hwpf.model.Ffn $r5;
        byte[] r0, $r6;
        org.apache.poi.hwpf.model.io.HWPFOutputStream r2;
        short $s0, $s1;
        org.apache.poi.hwpf.model.Ffn[] $r3, $r4;
        int $i2, i3;

        r1 := @this: org.apache.poi.hwpf.model.FontTable;

        r2 := @parameter0: org.apache.poi.hwpf.model.io.HWPFOutputStream;

        r0 = newarray (byte)[2];

        $s0 = r1.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],short)>(r0, $s0);

        virtualinvoke r2.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>(r0);

        $s1 = r1.<org.apache.poi.hwpf.model.FontTable: short _extraDataSz>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],short)>(r0, $s1);

        virtualinvoke r2.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>(r0);

        i3 = 0;

     label1:
        $r3 = r1.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $i2 = lengthof $r3;

        if i3 >= $i2 goto label2;

        $r4 = r1.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $r5 = $r4[i3];

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.model.Ffn: byte[] toByteArray()>();

        virtualinvoke r2.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>($r6);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.poi.hwpf.model.Ffn $r8, $r9;
        short $s0, $s1, $s2, $s3;
        org.apache.poi.hwpf.model.Ffn[] $r3, $r4, $r5, $r6, $r7;
        int $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1;
        org.apache.poi.hwpf.model.FontTable r1, r2;
        java.lang.Object r0;

        r2 := @this: org.apache.poi.hwpf.model.FontTable;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.poi.hwpf.model.FontTable;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.poi.hwpf.model.FontTable) r0;

        $s1 = r1.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        $s0 = r2.<org.apache.poi.hwpf.model.FontTable: short _stringCount>;

        $i8 = (int) $s1;

        $i9 = (int) $s0;

        if $i8 != $i9 goto label2;

        $s3 = r1.<org.apache.poi.hwpf.model.FontTable: short _extraDataSz>;

        $s2 = r2.<org.apache.poi.hwpf.model.FontTable: short _extraDataSz>;

        $i10 = (int) $s3;

        $i11 = (int) $s2;

        if $i10 != $i11 goto label2;

        $r3 = r1.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $i5 = lengthof $r3;

        $r4 = r2.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $i4 = lengthof $r4;

        if $i5 == $i4 goto label3;

     label2:
        return 0;

     label3:
        i7 = 0;

     label4:
        $r5 = r1.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $i6 = lengthof $r5;

        if i7 >= $i6 goto label6;

        $r6 = r1.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $r9 = $r6[i7];

        $r7 = r2.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] _fontNames>;

        $r8 = $r7[i7];

        $z1 = virtualinvoke $r9.<org.apache.poi.hwpf.model.Ffn: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i7 = i7 + 1;

        goto label4;

     label6:
        return 1;
    }

    public int hashCode()
    {
        org.apache.poi.hwpf.model.FontTable r1;
        java.lang.AssertionError $r0;
        boolean $z0;

        r1 := @this: org.apache.poi.hwpf.model.FontTable;

        $z0 = <org.apache.poi.hwpf.model.FontTable: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>("hashCode not designed");

        throw $r0;

     label1:
        return 42;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.poi.util.POILogger $r1;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/poi/hwpf/model/FontTable;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.poi.hwpf.model.FontTable: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/model/FontTable;");

        <org.apache.poi.hwpf.model.FontTable: org.apache.poi.util.POILogger _logger> = $r1;

        return;
    }
}
