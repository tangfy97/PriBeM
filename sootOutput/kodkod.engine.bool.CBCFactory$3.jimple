final class kodkod.engine.bool.CBCFactory$3 extends kodkod.engine.bool.CBCFactory$Assembler
{
    final kodkod.engine.bool.CBCFactory this$0;

    void <init>(kodkod.engine.bool.CBCFactory)
    {
        kodkod.engine.bool.CBCFactory r1;
        kodkod.engine.bool.CBCFactory$3 r0;

        r0 := @this: kodkod.engine.bool.CBCFactory$3;

        r1 := @parameter0: kodkod.engine.bool.CBCFactory;

        r0.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0> = r1;

        specialinvoke r0.<kodkod.engine.bool.CBCFactory$Assembler: void <init>(kodkod.engine.bool.CBCFactory$Assembler)>(null);

        return;
    }

    kodkod.engine.bool.BooleanValue assemble(kodkod.engine.bool.Operator$Nary, kodkod.engine.bool.BooleanFormula, kodkod.engine.bool.BooleanFormula)
    {
        kodkod.engine.bool.BooleanValue $r25, $r28;
        boolean $z0, $z1, $z2;
        java.util.Set $r5, $r7, $r9, $r12, $r15, $r17, $r19, $r21, $r30, $r32, $r34, $r36;
        kodkod.engine.bool.CBCFactory$Assembler $r23, $r27;
        kodkod.engine.bool.Operator$Nary r24;
        kodkod.engine.bool.BooleanFormula r0, r1, $r40, $r41;
        java.lang.AssertionError $r39;
        kodkod.engine.bool.Operator $r2, $r37, $r38;
        kodkod.engine.bool.CBCFactory$3 r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        kodkod.engine.bool.CBCFactory $r4, $r6, $r8, $r10, $r11, $r13, $r14, $r16, $r18, $r20, $r22, $r26, $r29, $r31, $r33, $r35;

        r3 := @this: kodkod.engine.bool.CBCFactory$3;

        r24 := @parameter0: kodkod.engine.bool.Operator$Nary;

        r0 := @parameter1: kodkod.engine.bool.BooleanFormula;

        r1 := @parameter2: kodkod.engine.bool.BooleanFormula;

        $z0 = <kodkod.engine.bool.CBCFactory: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r37 = virtualinvoke r0.<kodkod.engine.bool.BooleanFormula: kodkod.engine.bool.Operator op()>();

        $r38 = virtualinvoke r1.<kodkod.engine.bool.BooleanFormula: kodkod.engine.bool.Operator op()>();

        if $r37 == $r38 goto label1;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label1:
        if r0 != r1 goto label2;

        return r0;

     label2:
        $r2 = virtualinvoke r0.<kodkod.engine.bool.BooleanFormula: kodkod.engine.bool.Operator op()>();

        $r4 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r5 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$2(kodkod.engine.bool.CBCFactory)>($r4);

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        $r6 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r7 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$3(kodkod.engine.bool.CBCFactory)>($r6);

        interfaceinvoke $r7.<java.util.Set: void clear()>();

        $r8 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r9 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$2(kodkod.engine.bool.CBCFactory)>($r8);

        $r10 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $i0 = staticinvoke <kodkod.engine.bool.CBCFactory: int access$0(kodkod.engine.bool.CBCFactory)>($r10);

        virtualinvoke r0.<kodkod.engine.bool.BooleanFormula: void flatten(kodkod.engine.bool.Operator,java.util.Set,int)>($r2, $r9, $i0);

        $r11 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r12 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$3(kodkod.engine.bool.CBCFactory)>($r11);

        $r13 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $i1 = staticinvoke <kodkod.engine.bool.CBCFactory: int access$0(kodkod.engine.bool.CBCFactory)>($r13);

        virtualinvoke r1.<kodkod.engine.bool.BooleanFormula: void flatten(kodkod.engine.bool.Operator,java.util.Set,int)>($r2, $r12, $i1);

        $r14 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r15 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$2(kodkod.engine.bool.CBCFactory)>($r14);

        $i2 = interfaceinvoke $r15.<java.util.Set: int size()>();

        $r16 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r17 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$3(kodkod.engine.bool.CBCFactory)>($r16);

        $i3 = interfaceinvoke $r17.<java.util.Set: int size()>();

        if $i2 >= $i3 goto label5;

        $r33 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r34 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$3(kodkod.engine.bool.CBCFactory)>($r33);

        $r35 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r36 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$2(kodkod.engine.bool.CBCFactory)>($r35);

        $z2 = interfaceinvoke $r34.<java.util.Set: boolean containsAll(java.util.Collection)>($r36);

        if $z2 == 0 goto label5;

        if r24 != $r2 goto label3;

        $r40 = r1;

        goto label4;

     label3:
        $r40 = r0;

     label4:
        return $r40;

     label5:
        $r18 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r19 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$2(kodkod.engine.bool.CBCFactory)>($r18);

        $i4 = interfaceinvoke $r19.<java.util.Set: int size()>();

        $r20 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r21 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$3(kodkod.engine.bool.CBCFactory)>($r20);

        $i5 = interfaceinvoke $r21.<java.util.Set: int size()>();

        if $i4 < $i5 goto label8;

        $r29 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r30 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$2(kodkod.engine.bool.CBCFactory)>($r29);

        $r31 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r32 = staticinvoke <kodkod.engine.bool.CBCFactory: java.util.Set access$3(kodkod.engine.bool.CBCFactory)>($r31);

        $z1 = interfaceinvoke $r30.<java.util.Set: boolean containsAll(java.util.Collection)>($r32);

        if $z1 == 0 goto label8;

        if r24 != $r2 goto label6;

        $r41 = r0;

        goto label7;

     label6:
        $r41 = r1;

     label7:
        return $r41;

     label8:
        $i6 = virtualinvoke r0.<kodkod.engine.bool.BooleanFormula: int label()>();

        $i7 = virtualinvoke r1.<kodkod.engine.bool.BooleanFormula: int label()>();

        if $i6 >= $i7 goto label9;

        $r26 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r27 = staticinvoke <kodkod.engine.bool.CBCFactory: kodkod.engine.bool.CBCFactory$Assembler access$4(kodkod.engine.bool.CBCFactory)>($r26);

        $r28 = virtualinvoke $r27.<kodkod.engine.bool.CBCFactory$Assembler: kodkod.engine.bool.BooleanValue assemble(kodkod.engine.bool.Operator$Nary,kodkod.engine.bool.BooleanFormula,kodkod.engine.bool.BooleanFormula)>(r24, r1, r0);

        return $r28;

     label9:
        $r22 = r3.<kodkod.engine.bool.CBCFactory$3: kodkod.engine.bool.CBCFactory this$0>;

        $r23 = staticinvoke <kodkod.engine.bool.CBCFactory: kodkod.engine.bool.CBCFactory$Assembler access$4(kodkod.engine.bool.CBCFactory)>($r22);

        $r25 = virtualinvoke $r23.<kodkod.engine.bool.CBCFactory$Assembler: kodkod.engine.bool.BooleanValue assemble(kodkod.engine.bool.Operator$Nary,kodkod.engine.bool.BooleanFormula,kodkod.engine.bool.BooleanFormula)>(r24, r0, r1);

        return $r25;
    }
}
