public final enum class org.apache.solr.common.SolrException$ErrorCode extends java.lang.Enum
{
    public static final enum org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST;
    public static final enum org.apache.solr.common.SolrException$ErrorCode UNAUTHORIZED;
    public static final enum org.apache.solr.common.SolrException$ErrorCode FORBIDDEN;
    public static final enum org.apache.solr.common.SolrException$ErrorCode NOT_FOUND;
    public static final enum org.apache.solr.common.SolrException$ErrorCode CONFLICT;
    public static final enum org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR;
    public static final enum org.apache.solr.common.SolrException$ErrorCode SERVICE_UNAVAILABLE;
    public static final enum org.apache.solr.common.SolrException$ErrorCode UNKNOWN;
    public final int code;
    private static final org.apache.solr.common.SolrException$ErrorCode[] $VALUES;

    public static org.apache.solr.common.SolrException$ErrorCode[] values()
    {
        org.apache.solr.common.SolrException$ErrorCode[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.solr.common.SolrException$ErrorCode[]) $r1;

        return $r2;
    }

    public static org.apache.solr.common.SolrException$ErrorCode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.solr.common.SolrException$ErrorCode $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/solr/common/SolrException$ErrorCode;", r0);

        $r2 = (org.apache.solr.common.SolrException$ErrorCode) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r1;
        org.apache.solr.common.SolrException$ErrorCode r0;

        r0 := @this: org.apache.solr.common.SolrException$ErrorCode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.solr.common.SolrException$ErrorCode: int code> = i1;

        return;
    }

    public static org.apache.solr.common.SolrException$ErrorCode getErrorCode(int)
    {
        org.apache.solr.common.SolrException$ErrorCode[] $r0;
        int i0, i1, $i2, i3;
        org.apache.solr.common.SolrException$ErrorCode $r1, r2;

        i1 := @parameter0: int;

        $r0 = staticinvoke <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r2 = $r0[i3];

        $i2 = r2.<org.apache.solr.common.SolrException$ErrorCode: int code>;

        if $i2 != i1 goto label2;

        return r2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode UNKNOWN>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.solr.common.SolrException$ErrorCode $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        org.apache.solr.common.SolrException$ErrorCode[] $r8;

        $r0 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r0.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("BAD_REQUEST", 0, 400);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST> = $r0;

        $r1 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r1.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("UNAUTHORIZED", 1, 401);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode UNAUTHORIZED> = $r1;

        $r2 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r2.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("FORBIDDEN", 2, 403);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode FORBIDDEN> = $r2;

        $r3 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r3.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("NOT_FOUND", 3, 404);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode NOT_FOUND> = $r3;

        $r4 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r4.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("CONFLICT", 4, 409);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode CONFLICT> = $r4;

        $r5 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r5.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("SERVER_ERROR", 5, 500);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR> = $r5;

        $r6 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r6.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("SERVICE_UNAVAILABLE", 6, 503);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVICE_UNAVAILABLE> = $r6;

        $r7 = new org.apache.solr.common.SolrException$ErrorCode;

        specialinvoke $r7.<org.apache.solr.common.SolrException$ErrorCode: void <init>(java.lang.String,int,int)>("UNKNOWN", 7, 0);

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode UNKNOWN> = $r7;

        $r8 = newarray (org.apache.solr.common.SolrException$ErrorCode)[8];

        $r9 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r8[0] = $r9;

        $r10 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode UNAUTHORIZED>;

        $r8[1] = $r10;

        $r11 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode FORBIDDEN>;

        $r8[2] = $r11;

        $r12 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode NOT_FOUND>;

        $r8[3] = $r12;

        $r13 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode CONFLICT>;

        $r8[4] = $r13;

        $r14 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        $r8[5] = $r14;

        $r15 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVICE_UNAVAILABLE>;

        $r8[6] = $r15;

        $r16 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode UNKNOWN>;

        $r8[7] = $r16;

        <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode[] $VALUES> = $r8;

        return;
    }
}
