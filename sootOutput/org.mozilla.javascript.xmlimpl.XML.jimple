class org.mozilla.javascript.xmlimpl.XML extends org.mozilla.javascript.xmlimpl.XMLObjectImpl
{
    static final long serialVersionUID;
    private org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno;
    private static final int APPEND_CHILD;
    private static final int PREPEND_CHILD;
    static java.lang.Class class$org$mozilla$javascript$xmlimpl$XML$XScriptAnnotation;

    private void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation r3, $r4;
        org.mozilla.javascript.xmlimpl.XML r0, $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter1: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XML xmlPrototype>;

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xml.XMLObject)>(r1, $r2);

        r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno> = r3;

        $r4 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        $r4.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: org.mozilla.javascript.xmlimpl.XML _xScriptXML> = r0;

        return;
    }

    static org.mozilla.javascript.xmlimpl.XML createEmptyXML(org.mozilla.javascript.xmlimpl.XMLLibImpl)
    {
        java.lang.Throwable $r5;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r4;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r2;
        org.apache.xmlbeans.XmlObject $r0;
        org.mozilla.javascript.xmlimpl.XML $r3;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r1 = interfaceinvoke $r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        $r2 = new org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        specialinvoke $r2.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: void <init>(org.apache.xmlbeans.XmlCursor)>($r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r2);

     label2:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r5;

     label5:
        $r3 = new org.mozilla.javascript.xmlimpl.XML;

        specialinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>(r4, $r2);

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static org.mozilla.javascript.xmlimpl.XML createXML(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.apache.xmlbeans.XmlCursor)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r4;
        org.apache.xmlbeans.XmlCursor$TokenType $r1;
        org.apache.xmlbeans.XmlCursor r0;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r2;
        org.mozilla.javascript.xmlimpl.XML $r3;
        boolean $z0;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter1: org.apache.xmlbeans.XmlCursor;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $r2 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>(r0);

        $r3 = new org.mozilla.javascript.xmlimpl.XML;

        specialinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>(r4, $r2);

        return $r3;
    }

    private static org.mozilla.javascript.xmlimpl.XML createAttributeXML(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.apache.xmlbeans.XmlCursor)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r3;
        org.apache.xmlbeans.XmlCursor r0;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r1;
        java.lang.IllegalArgumentException $r4;
        org.mozilla.javascript.xmlimpl.XML $r2;
        boolean $z0;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter1: org.apache.xmlbeans.XmlCursor;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r1 = new org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: void <init>(org.apache.xmlbeans.XmlCursor)>(r0);

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r1);

        $r2 = new org.mozilla.javascript.xmlimpl.XML;

        specialinvoke $r2.<org.mozilla.javascript.xmlimpl.XML: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>(r3, $r1);

        return $r2;
    }

    static org.mozilla.javascript.xmlimpl.XML createTextElement(org.mozilla.javascript.xmlimpl.XMLLibImpl, javax.xml.namespace.QName, java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r6;
        org.mozilla.javascript.xmlimpl.XML $r7;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r8;
        org.apache.xmlbeans.XmlObject $r0;
        javax.xml.namespace.QName r2;
        java.lang.String $r3, $r4, r5;

        r8 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r2 := @parameter1: javax.xml.namespace.QName;

        r5 := @parameter2: java.lang.String;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r1 = interfaceinvoke $r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void beginElement(java.lang.String,java.lang.String)>($r3, $r4);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void insertChars(java.lang.String)>(r5);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void toStartDoc()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r6 = new org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        specialinvoke $r6.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: void <init>(org.apache.xmlbeans.XmlCursor)>($r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r6);

     label2:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

     label4:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r9;

     label5:
        $r7 = new org.mozilla.javascript.xmlimpl.XML;

        specialinvoke $r7.<org.mozilla.javascript.xmlimpl.XML: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>(r8, $r6);

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static org.mozilla.javascript.xmlimpl.XML createFromXmlObject(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.apache.xmlbeans.XmlObject)
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r3;
        org.mozilla.javascript.xmlimpl.XML $r4;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r5;
        org.apache.xmlbeans.XmlCursor$TokenType $r2;
        org.apache.xmlbeans.XmlObject r0;
        boolean $z0;

        r5 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter1: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $r3 = new org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        specialinvoke $r3.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: void <init>(org.apache.xmlbeans.XmlCursor)>($r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r3);

     label2:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r6;

     label5:
        $r4 = new org.mozilla.javascript.xmlimpl.XML;

        specialinvoke $r4.<org.mozilla.javascript.xmlimpl.XML: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>(r5, $r3);

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static org.mozilla.javascript.xmlimpl.XML createFromJS(org.mozilla.javascript.xmlimpl.XMLLibImpl, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r27;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, z12, $z13, z14, $z15;
        org.mozilla.javascript.Wrapper $r23;
        javax.xml.namespace.QName $r11, $r15, $r42;
        org.mozilla.javascript.EcmaError $r21, $r30, $r34;
        java.lang.Throwable $r28, $r29, $r31;
        org.apache.xmlbeans.XmlCursor $r6, $r10;
        org.mozilla.javascript.xmlimpl.XML $r26, $r44;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        org.apache.xmlbeans.XmlCursor$TokenType $r7, $r38, $r39;
        java.lang.StringBuffer $r18, $r19, $r20, $r40;
        int $i0, $i1, $i2, $i3, $i5;
        org.apache.xmlbeans.XmlObject $r3, $r25, r37;
        java.lang.String $r5, $r12, $r14, $r16, $r32, $r33, r35, $r36;
        org.mozilla.javascript.Context $r4;
        org.apache.xmlbeans.XmlException $r45, $r46;
        org.apache.xmlbeans.XmlOptions $r41;
        java.lang.Object r0, $r22, $r24;

        r2 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter1: java.lang.Object;

        z10 = 0;

        if r0 == null goto label01;

        $r22 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r22 goto label02;

     label01:
        r35 = "";

        goto label05;

     label02:
        $z6 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLObjectImpl;

        if $z6 == 0 goto label03;

        $r27 = (org.mozilla.javascript.xmlimpl.XMLObjectImpl) r0;

        r35 = virtualinvoke $r27.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: java.lang.String toXMLString(int)>(0);

        goto label05;

     label03:
        $z7 = r0 instanceof org.mozilla.javascript.Wrapper;

        if $z7 == 0 goto label04;

        $r23 = (org.mozilla.javascript.Wrapper) r0;

        $r24 = interfaceinvoke $r23.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        $z8 = $r24 instanceof org.apache.xmlbeans.XmlObject;

        if $z8 == 0 goto label04;

        $r25 = (org.apache.xmlbeans.XmlObject) $r24;

        $r26 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createFromXmlObject(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlObject)>(r2, $r25);

        return $r26;

     label04:
        r35 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

     label05:
        $r36 = virtualinvoke r35.<java.lang.String: java.lang.String trim()>();

        $z11 = virtualinvoke $r36.<java.lang.String: boolean startsWith(java.lang.String)>("<>");

        if $z11 == 0 goto label06;

        $r21 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("Invalid use of XML object anonymous tags <></>.");

        throw $r21;

     label06:
        $i0 = virtualinvoke r35.<java.lang.String: int indexOf(java.lang.String)>("<");

        $i5 = (int) -1;

        if $i0 != $i5 goto label07;

        z10 = 1;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<textFragment>");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r35);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</textFragment>");

        r35 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        $r41 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r41.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $z0 = r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreComments>;

        if $z0 == 0 goto label08;

        virtualinvoke $r41.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("LOAD_STRIP_COMMENTS");

     label08:
        $z1 = r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreProcessingInstructions>;

        if $z1 == 0 goto label09;

        virtualinvoke $r41.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("LOAD_STRIP_PROCINSTS");

     label09:
        $z2 = r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreWhitespace>;

        if $z2 == 0 goto label10;

        virtualinvoke $r41.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("LOAD_STRIP_WHITESPACE");

     label10:
        $r3 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.lang.String,org.apache.xmlbeans.XmlOptions)>(r35, $r41);

        r37 = $r3;

        $r4 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

        $r5 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.String getDefaultNamespaceURI(org.mozilla.javascript.Context)>($r4);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label18;

        $r10 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        z12 = 1;

     label11:
        $r38 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z13 = virtualinvoke $r38.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z13 != 0 goto label17;

        $z4 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z4 != 0 goto label12;

        goto label11;

     label12:
        z14 = 0;

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: void push()>();

     label13:
        $r39 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z15 = virtualinvoke $r39.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAnyAttr()>();

        if $z15 == 0 goto label14;

        $z5 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: boolean isNamespace()>();

        if $z5 == 0 goto label13;

        $r15 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r16 = virtualinvoke $r15.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $i3 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i3 != 0 goto label13;

        z14 = 1;

        goto label14;

     label14:
        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        if z14 == 0 goto label15;

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

        goto label11;

     label15:
        $r11 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r12 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i2 != 0 goto label16;

        $r42 = new javax.xml.namespace.QName;

        $r14 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r42.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r5, $r14);

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: void setName(javax.xml.namespace.QName)>($r42);

     label16:
        if z12 == 0 goto label11;

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: void push()>();

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: void insertNamespace(java.lang.String,java.lang.String)>("", $r5);

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        z12 = 0;

        goto label11;

     label17:
        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label18:
        goto label23;

     label19:
        $r31 := @caughtexception;

        $r45 = (org.apache.xmlbeans.XmlException) $r31;

        $r32 = virtualinvoke $r45.<org.apache.xmlbeans.XmlException: java.lang.String getMessage()>();

        $z9 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("error: Unexpected end of file after null");

        if $z9 == 0 goto label20;

        r37 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        goto label21;

     label20:
        $r46 = (org.apache.xmlbeans.XmlException) $r31;

        $r33 = virtualinvoke $r46.<org.apache.xmlbeans.XmlException: java.lang.String getMessage()>();

        $r34 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r33);

        throw $r34;

     label21:
        goto label23;

     label22:
        $r29 := @caughtexception;

        $r30 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("Not Parsable as XML");

        throw $r30;

     label23:
        $r6 = interfaceinvoke r37.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z3 = virtualinvoke $r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z3 == 0 goto label24;

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label24:
        if z10 == 0 goto label25;

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label25:
        $r43 = new org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        specialinvoke $r43.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: void <init>(org.apache.xmlbeans.XmlCursor)>($r6);

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r43);

     label26:
        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label29;

     label27:
        $r28 := @caughtexception;

     label28:
        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r28;

     label29:
        $r44 = new org.mozilla.javascript.xmlimpl.XML;

        specialinvoke $r44.<org.mozilla.javascript.xmlimpl.XML: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>(r2, $r43);

        return $r44;

        catch org.apache.xmlbeans.XmlException from label10 to label18 with label19;
        catch java.lang.Throwable from label10 to label18 with label22;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    static org.mozilla.javascript.xmlimpl.XML getFromAnnotation(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r4;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation r0;
        org.mozilla.javascript.xmlimpl.XML $r1, $r2, $r3;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter1: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: org.mozilla.javascript.xmlimpl.XML _xScriptXML>;

        if $r1 != null goto label1;

        $r3 = new org.mozilla.javascript.xmlimpl.XML;

        specialinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>(r4, r0);

        r0.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: org.mozilla.javascript.xmlimpl.XML _xScriptXML> = $r3;

     label1:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: org.mozilla.javascript.xmlimpl.XML _xScriptXML>;

        return $r2;
    }

    private static org.apache.xmlbeans.XmlCursor$TokenType skipNonElements(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor$TokenType r1;
        org.apache.xmlbeans.XmlCursor r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

     label1:
        $z0 = virtualinvoke r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isComment()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isProcinst()>();

        if $z1 == 0 goto label3;

     label2:
        r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        goto label1;

     label3:
        return r1;
    }

    protected static org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.Object r6;
        org.apache.xmlbeans.XmlCursor$XmlBookmark $r2;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $r1 = <org.mozilla.javascript.xmlimpl.XML: java.lang.Class class$org$mozilla$javascript$xmlimpl$XML$XScriptAnnotation>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation");

        <org.mozilla.javascript.xmlimpl.XML: java.lang.Class class$org$mozilla$javascript$xmlimpl$XML$XScriptAnnotation> = $r5;

        goto label2;

     label1:
        $r5 = <org.mozilla.javascript.xmlimpl.XML: java.lang.Class class$org$mozilla$javascript$xmlimpl$XML$XScriptAnnotation>;

     label2:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$XmlBookmark getBookmark(java.lang.Object)>($r5);

        r6 = $r2;

        if $r2 != null goto label3;

        $r4 = new org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        specialinvoke $r4.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: void <init>(org.apache.xmlbeans.XmlCursor)>(r0);

        r6 = $r4;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r4);

     label3:
        $r3 = (org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation) r6;

        return $r3;
    }

    private org.apache.xmlbeans.XmlOptions getOptions()
    {
        java.lang.Integer $r6;
        org.mozilla.javascript.xmlimpl.XML r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2, $r3, $r4, $r5, $r7;
        org.apache.xmlbeans.XmlOptions $r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z0 = $r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreComments>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("LOAD_STRIP_COMMENTS");

     label1:
        $r3 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z1 = $r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreProcessingInstructions>;

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("LOAD_STRIP_PROCINSTS");

     label2:
        $r4 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z2 = $r4.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreWhitespace>;

        if $z2 == 0 goto label3;

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("LOAD_STRIP_WHITESPACE");

     label3:
        $r5 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z3 = $r5.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean prettyPrinting>;

        if $z3 == 0 goto label4;

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object,java.lang.Object)>("SAVE_PRETTY_PRINT", null);

        $r6 = new java.lang.Integer;

        $r7 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $i0 = $r7.<org.mozilla.javascript.xmlimpl.XMLLibImpl: int prettyIndent>;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object,java.lang.Object)>("SAVE_PRETTY_PRINT_INDENT", $r6);

     label4:
        return $r0;
    }

    private static java.lang.String dumpNode(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlCursor r0;
        org.apache.xmlbeans.XmlOptions r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r1 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        return $r2;

     label1:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isFinish()>();

        if $z1 == 0 goto label2;

        return "";

     label2:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void push()>();

        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z2 == 0 goto label3;

        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toFirstChild()>();

        if $z3 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        if $z4 == 0 goto label5;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        goto label6;

     label5:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: java.lang.String xmlText(org.apache.xmlbeans.XmlOptions)>(r1);

     label6:
        return $r3;
    }

    private org.apache.xmlbeans.XmlCursor newCursor()
    {
        org.apache.xmlbeans.XmlCursor $r4, $r6, r12;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r1, $r3, $r7, $r9, $r10;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.apache.xmlbeans.XmlObject $r2, $r5;
        javax.xml.namespace.QName $r8, $r11;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        if $r1 == null goto label2;

        $r3 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: org.apache.xmlbeans.XmlCursor createCursor()>();

        r12 = $r4;

        if $r4 != null goto label3;

        $r5 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        r12 = $r6;

        $r7 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        $r8 = $r7.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: javax.xml.namespace.QName _name>;

        if $r8 == null goto label1;

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r10 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        $r11 = $r10.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: javax.xml.namespace.QName _name>;

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: void insertElement(javax.xml.namespace.QName)>($r11);

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

     label1:
        $r9 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r9);

        goto label3;

     label2:
        $r2 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        r12 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label3:
        return r12;
    }

    private boolean moveToChild(org.apache.xmlbeans.XmlCursor, long, boolean, boolean)
    {
        org.apache.xmlbeans.XmlCursor r0;
        long l0, l3;
        org.mozilla.javascript.xmlimpl.XML r4;
        byte $b1, $b2, $b4;
        org.apache.xmlbeans.XmlCursor$TokenType $r1, $r2, $r5;
        int $i5;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.IllegalArgumentException $r6;

        r4 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        l0 := @parameter1: long;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $b1 = l0 cmp 0L;

        $i5 = (int) $b1;

        if $i5 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        l3 = 0L;

        if z0 != 0 goto label2;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z7 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z7 == 0 goto label2;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        $z8 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isNone()>();

        if $z8 != 0 goto label8;

        $z2 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z2 != 0 goto label8;

     label3:
        $b4 = l0 cmp l3;

        if $b4 != 0 goto label4;

        return 1;

     label4:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z3 = virtualinvoke $r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isText()>();

        if $z3 == 0 goto label5;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        goto label7;

     label5:
        $z4 = virtualinvoke $r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z4 == 0 goto label6;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        goto label7;

     label6:
        $z5 = virtualinvoke $r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isComment()>();

        if $z5 != 0 goto label3;

        $z6 = virtualinvoke $r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isProcinst()>();

        if $z6 == 0 goto label9;

        goto label3;

     label7:
        l3 = l3 + 1L;

        goto label3;

     label8:
        if z1 == 0 goto label9;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label9;

        return 1;

     label9:
        return 0;
    }

    org.apache.xmlbeans.XmlCursor$TokenType tokenType()
    {
        org.apache.xmlbeans.XmlCursor$TokenType $r2;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r2;
    }

    private boolean moveSrcToDest(org.apache.xmlbeans.XmlCursor, org.apache.xmlbeans.XmlCursor, boolean)
    {
        org.apache.xmlbeans.XmlCursor r0, r2, $r3;
        org.mozilla.javascript.xmlimpl.XML r1;
        org.apache.xmlbeans.XmlCursor$TokenType $r4, $r5;
        int $i0;
        boolean z0, $z1, $z2, $z3, $z4, z5, $z6;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r0 := @parameter1: org.apache.xmlbeans.XmlCursor;

        z0 := @parameter2: boolean;

        z5 = 1;

     label1:
        if z0 == 0 goto label2;

        $z4 = interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: boolean isInSameDocument(org.apache.xmlbeans.XmlCursor)>(r0);

        if $z4 == 0 goto label2;

        $i0 = interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: int comparePosition(org.apache.xmlbeans.XmlCursor)>(r0);

        if $i0 != 0 goto label2;

        z5 = 0;

        goto label4;

     label2:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z6 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z6 == 0 goto label3;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

     label3:
        $r3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor copy(org.apache.xmlbeans.XmlCursor)>(r2);

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean moveXml(org.apache.xmlbeans.XmlCursor)>(r0);

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r4 = interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z1 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z3 == 0 goto label1;

     label4:
        return z5;
    }

    private org.apache.xmlbeans.XmlCursor copy(org.apache.xmlbeans.XmlCursor)
    {
        org.mozilla.javascript.EcmaError $r17;
        org.apache.xmlbeans.XmlCursor r1, $r3, r19;
        org.mozilla.javascript.xmlimpl.XML r18;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, $r4, $r5, $r6, $r14;
        java.lang.StringBuffer $r7, $r8, $r10, $r11;
        org.apache.xmlbeans.XmlObject $r0, $r13;
        java.lang.String $r9, $r12, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r15;

        r18 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isText()>();

        if $z0 == 0 goto label4;

     label1:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<x:fragment xmlns:x=\"http://www.openuri.org/fragment\">");

        $r9 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</x:fragment>");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.lang.String)>($r12);

        r19 = interfaceinvoke $r13.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toNextSibling()>();

        if $z3 != 0 goto label2;

        $r14 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z4 = virtualinvoke $r14.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isText()>();

        if $z4 == 0 goto label2;

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

     label2:
        goto label6;

     label3:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>();

        $r17 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r16);

        throw $r17;

     label4:
        $r3 = interfaceinvoke $r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        r19 = $r3;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        $r4 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $r5 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType STARTDOC>;

        if $r4 != $r5 goto label5;

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

     label5:
        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean copyXml(org.apache.xmlbeans.XmlCursor)>($r3);

        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toNextSibling()>();

        if $z1 != 0 goto label6;

        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z2 = virtualinvoke $r6.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isText()>();

        if $z2 == 0 goto label6;

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

     label6:
        interfaceinvoke r19.<org.apache.xmlbeans.XmlCursor: void toStartDoc()>();

        interfaceinvoke r19.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        return r19;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void insertChild(org.apache.xmlbeans.XmlCursor, java.lang.Object)
    {
        org.apache.xmlbeans.XmlCursor $r3, r5, $r10, $r12;
        org.mozilla.javascript.xmlimpl.XML r4, $r6, $r9, r13;
        org.apache.xmlbeans.XmlCursor$TokenType $r7, $r8;
        int $i0, i1;
        java.lang.String $r1, $r11;
        org.apache.xmlbeans.XmlObject $r2;
        boolean $z0, $z1, $z2, $z3;
        org.mozilla.javascript.xmlimpl.XMLList r14;
        java.lang.Object r0;

        r4 := @this: org.mozilla.javascript.xmlimpl.XML;

        r5 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label7;

        $z0 = r0 instanceof org.mozilla.javascript.Undefined;

        if $z0 == 0 goto label1;

        goto label7;

     label1:
        $z1 = r0 instanceof org.apache.xmlbeans.XmlCursor;

        if $z1 == 0 goto label2;

        $r12 = (org.apache.xmlbeans.XmlCursor) r0;

        specialinvoke r4.<org.mozilla.javascript.xmlimpl.XML: boolean moveSrcToDest(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,boolean)>($r12, r5, 1);

        goto label7;

     label2:
        $z2 = r0 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z2 == 0 goto label4;

        r13 = (org.mozilla.javascript.xmlimpl.XML) r0;

        $r7 = virtualinvoke r13.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r8 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r7 != $r8 goto label3;

        $r11 = virtualinvoke r13.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        specialinvoke r4.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.apache.xmlbeans.XmlCursor,java.lang.Object)>(r5, $r11);

        goto label7;

     label3:
        $r9 = (org.mozilla.javascript.xmlimpl.XML) r0;

        $r10 = specialinvoke $r9.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        specialinvoke r4.<org.mozilla.javascript.xmlimpl.XML: boolean moveSrcToDest(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,boolean)>($r10, r5, 1);

        interfaceinvoke $r10.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label7;

     label4:
        $z3 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z3 == 0 goto label6;

        r14 = (org.mozilla.javascript.xmlimpl.XMLList) r0;

        i1 = 0;

     label5:
        $i0 = virtualinvoke r14.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i1 >= $i0 goto label7;

        $r6 = virtualinvoke r14.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i1);

        specialinvoke r4.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.apache.xmlbeans.XmlCursor,java.lang.Object)>(r5, $r6);

        i1 = i1 + 1;

        goto label5;

     label6:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void insertChars(java.lang.String)>($r1);

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

        specialinvoke r4.<org.mozilla.javascript.xmlimpl.XML: boolean moveSrcToDest(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,boolean)>($r3, r5, 1);

     label7:
        return;
    }

    private void insertChild(org.mozilla.javascript.xmlimpl.XML, java.lang.Object, int)
    {
        org.apache.xmlbeans.XmlCursor $r1, $r4;
        org.mozilla.javascript.xmlimpl.XML r0, r3;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, r6, r7;
        int $i0, i1;
        java.lang.Object r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r3 := @parameter0: org.mozilla.javascript.xmlimpl.XML;

        r5 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        r6 = $r2;

        $r4 = specialinvoke r3.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        r6 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = virtualinvoke r6.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isContainer()>();

        if $z1 == 0 goto label6;

        r7 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

     label2:
        $z2 = virtualinvoke r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z3 == 0 goto label4;

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: int comparePosition(org.apache.xmlbeans.XmlCursor)>($r4);

        if $i0 != 0 goto label4;

        if i1 != 1 goto label3;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

     label3:
        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.apache.xmlbeans.XmlCursor,java.lang.Object)>($r1, r5);

        goto label6;

     label4:
        $z4 = virtualinvoke r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z4 == 0 goto label5;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

     label5:
        r7 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        goto label2;

     label6:
        interfaceinvoke $r4.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    protected void removeToken(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor $r1, r2;
        org.apache.xmlbeans.XmlObject $r0;
        org.mozilla.javascript.xmlimpl.XML r3;

        r3 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r1 = interfaceinvoke $r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: boolean moveXml(org.apache.xmlbeans.XmlCursor)>($r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    protected void removeChild(long)
    {
        org.apache.xmlbeans.XmlCursor $r1;
        long l0;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: boolean moveToChild(org.apache.xmlbeans.XmlCursor,long,boolean,boolean)>($r1, l0, 0, 0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeToken(org.apache.xmlbeans.XmlCursor)>($r1);

     label1:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    protected static javax.xml.namespace.QName computeQName(java.lang.Object)
    {
        int $i0, $i1, $i2, $i4;
        java.lang.Object r0;
        java.lang.String r1, r4, r5;
        javax.xml.namespace.QName $r6, $r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        r4 = null;

        r1 = (java.lang.String) r0;

        r5 = r1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i4 = (int) -1;

        if $i0 == $i4 goto label1;

        $i1 = $i0 - 1;

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        $i2 = $i0 + 1;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);

     label1:
        if r4 != null goto label2;

        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String)>(r5);

        return $r6;

     label2:
        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r4, r5);

        return $r7;

     label3:
        return null;
    }

    private void replace(org.apache.xmlbeans.XmlCursor, org.mozilla.javascript.xmlimpl.XML)
    {
        org.apache.xmlbeans.XmlCursor r0, $r3;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r5;
        org.mozilla.javascript.xmlimpl.XML r1, r2;
        org.apache.xmlbeans.XmlCursor$TokenType $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r2 := @parameter1: org.mozilla.javascript.xmlimpl.XML;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: void removeToken(org.apache.xmlbeans.XmlCursor)>(r0);

        $r3 = specialinvoke r2.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z1 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean moveSrcToDest(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,boolean)>($r3, r0, 0);

        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z2 != 0 goto label3;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

     label3:
        $r5 = new org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation;

        specialinvoke $r5.<org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation: void <init>(org.apache.xmlbeans.XmlCursor)>(r0);

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void setBookmark(org.apache.xmlbeans.XmlCursor$XmlBookmark)>($r5);

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    private boolean doPut(org.mozilla.javascript.xmlimpl.XMLName, org.mozilla.javascript.xmlimpl.XML, org.mozilla.javascript.xmlimpl.XMLObjectImpl)
    {
        java.lang.Throwable $r11;
        org.mozilla.javascript.EcmaError $r14;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl r2;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0, r5, r15;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r7;
        org.mozilla.javascript.xmlimpl.XMLName r6;
        org.apache.xmlbeans.XmlCursor$TokenType $r3, $r4, $r9;
        int $i0, i1;
        java.lang.String $r8, $r13;
        boolean $z0;
        org.mozilla.javascript.xmlimpl.XMLList $r10;
        java.lang.Exception $r12;

        r5 := @this: org.mozilla.javascript.xmlimpl.XML;

        r6 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r0 := @parameter1: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter2: org.mozilla.javascript.xmlimpl.XMLObjectImpl;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label01:
        $i0 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: int length()>();

        i1 = 0;

     label02:
        if i1 >= $i0 goto label09;

        $z0 = r2 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z0 == 0 goto label03;

        $r10 = (org.mozilla.javascript.xmlimpl.XMLList) r2;

        r15 = virtualinvoke $r10.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i1);

        goto label04;

     label03:
        r15 = (org.mozilla.javascript.xmlimpl.XML) r2;

     label04:
        $r3 = virtualinvoke r15.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r4 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r3 == $r4 goto label05;

        $r9 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType TEXT>;

        if $r3 != $r9 goto label06;

     label05:
        $r7 = r5.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r8 = virtualinvoke r15.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        r15 = specialinvoke r5.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML makeXmlFromString(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XMLName,java.lang.String)>($r7, r6, $r8);

     label06:
        if i1 != 0 goto label07;

        specialinvoke r5.<org.mozilla.javascript.xmlimpl.XML: void replace(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.xmlimpl.XML)>($r1, r15);

        goto label08;

     label07:
        specialinvoke r5.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.apache.xmlbeans.XmlCursor,java.lang.Object)>($r1, r15);

     label08:
        i1 = i1 + 1;

        goto label02;

     label09:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label13;

     label10:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        $r13 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r13);

        throw $r14;

     label11:
        $r11 := @caughtexception;

     label12:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r11;

     label13:
        return 1;

        catch java.lang.Exception from label01 to label09 with label10;
        catch java.lang.Throwable from label01 to label09 with label11;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    private org.mozilla.javascript.xmlimpl.XML makeXmlFromString(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.mozilla.javascript.xmlimpl.XMLName, java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r9;
        org.mozilla.javascript.xmlimpl.XML $r6, r10;
        java.lang.Exception $r7;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r4;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        javax.xml.namespace.QName $r0;
        java.lang.String $r2, $r3, r5, $r8;

        r10 := @this: org.mozilla.javascript.xmlimpl.XML;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r1 := @parameter1: org.mozilla.javascript.xmlimpl.XMLName;

        r5 := @parameter2: java.lang.String;

     label1:
        $r0 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r8);

        throw $r9;

     label4:
        $r6 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createTextElement(org.mozilla.javascript.xmlimpl.XMLLibImpl,javax.xml.namespace.QName,java.lang.String)>(r4, $r0, r5);

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private org.mozilla.javascript.xmlimpl.XMLList matchAttributes(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r0;
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML r1, $r7;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r5;
        org.apache.xmlbeans.XmlCursor$TokenType $r4;
        javax.xml.namespace.QName $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r5 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        $r3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z1 == 0 goto label4;

        $z2 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean toFirstAttribute()>();

        if $z2 == 0 goto label4;

     label2:
        $r6 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean qnameMatches(org.mozilla.javascript.xmlimpl.XMLName,javax.xml.namespace.QName)>(r5, $r6);

        if $z3 == 0 goto label3;

        $r7 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createAttributeObject(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r7);

     label3:
        $z4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean toNextAttribute()>();

        if $z4 != 0 goto label2;

     label4:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r0;
    }

    private org.mozilla.javascript.xmlimpl.XML createAttributeObject(org.apache.xmlbeans.XmlCursor)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r3;
        org.apache.xmlbeans.XmlCursor$TokenType $r1;
        org.apache.xmlbeans.XmlCursor r0;
        org.mozilla.javascript.xmlimpl.XML r2, r4;
        boolean $z0;

        r2 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r4 = null;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAttr()>();

        if $z0 == 0 goto label1;

        $r3 = r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        r4 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createAttributeXML(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor)>($r3, r0);

     label1:
        return r4;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        return "XML";
    }

    public java.lang.Object get(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2;
        int i0;
        java.lang.Object $r0;
        org.mozilla.javascript.xmlimpl.XML r1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        i0 := @parameter0: int;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        if i0 != 0 goto label1;

        return r1;

     label1:
        $r0 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        return $r0;
    }

    boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r3;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        int $i0;
        java.lang.Object $r4, $r5, $r7, $r8;
        java.lang.String $r2, $r6;
        boolean $z0, z1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        z1 = 0;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XML: boolean prototypeFlag>;

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $r7 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object getMethod(java.lang.String)>($r6);

        $r8 = <org.mozilla.javascript.xmlimpl.XML: java.lang.Object NOT_FOUND>;

        if $r7 == $r8 goto label3;

        z1 = 1;

        goto label3;

     label1:
        $r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $r3 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r1);

        $i0 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 > 0 goto label2;

        $r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object getMethod(java.lang.String)>($r2);

        $r5 = <org.mozilla.javascript.xmlimpl.XML: java.lang.Object NOT_FOUND>;

        if $r4 == $r5 goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public boolean has(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r1;
        int i0;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object[] getIds()
    {
        java.lang.Object[] r2;
        java.lang.Integer $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XML: boolean prototypeFlag>;

        if $z0 == 0 goto label1;

        r2 = newarray (java.lang.Object)[0];

        goto label2;

     label1:
        r2 = newarray (java.lang.Object)[1];

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(0);

        r2[0] = $r1;

     label2:
        return r2;
    }

    public java.lang.Object[] getIdsForDebug()
    {
        java.lang.Object[] $r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object[] getIds()>();

        return $r1;
    }

    java.lang.Object getXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLName r1;
        java.lang.Object r3, r4;
        java.lang.String $r2;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r3 = <org.mozilla.javascript.xmlimpl.XML: java.lang.Object NOT_FOUND>;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XML: boolean prototypeFlag>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.Object getMethod(java.lang.String)>($r2);

        goto label2;

     label1:
        r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r1);

     label2:
        return r4;
    }

    void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLObjectImpl r22;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        long $l2;
        org.mozilla.javascript.xmlimpl.XML r0, $r5, $r6, $r8, $r14, $r15;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r3, $r12, $r18;
        org.apache.xmlbeans.XmlCursor$TokenType $r9, $r10, $r16, $r17;
        int $i0, $i1, $i3, i4, $i5, i6;
        java.lang.String $r2, $r4, $r13, $r19, $r20;
        org.mozilla.javascript.xmlimpl.XMLList $r7, $r11, $r23;
        java.lang.Object r21;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r21 := @parameter1: java.lang.Object;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XML: boolean prototypeFlag>;

        if $z0 == 0 goto label01;

        goto label14;

     label01:
        if r21 != null goto label02;

        r21 = "null";

        goto label03;

     label02:
        $z1 = r21 instanceof org.mozilla.javascript.Undefined;

        if $z1 == 0 goto label03;

        r21 = "undefined";

     label03:
        $z5 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z5 == 0 goto label04;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void setAttribute(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r1, r21);

        goto label14;

     label04:
        $r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        if $r2 != null goto label05;

        $r20 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z4 == 0 goto label05;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML setChildren(java.lang.Object)>(r21);

        goto label14;

     label05:
        $z2 = r21 instanceof org.mozilla.javascript.xmlimpl.XMLObjectImpl;

        if $z2 == 0 goto label09;

        r22 = (org.mozilla.javascript.xmlimpl.XMLObjectImpl) r21;

        $z3 = r22 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z3 == 0 goto label06;

        $r15 = (org.mozilla.javascript.xmlimpl.XML) r22;

        $r16 = virtualinvoke $r15.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r17 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r16 != $r17 goto label06;

        $r18 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r19 = virtualinvoke r22.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: java.lang.String toString()>();

        r22 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML makeXmlFromString(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XMLName,java.lang.String)>($r18, r1, $r19);

     label06:
        $z6 = r22 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z6 == 0 goto label10;

        i4 = 0;

     label07:
        $i3 = virtualinvoke r22.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: int length()>();

        if i4 >= $i3 goto label10;

        $r7 = (org.mozilla.javascript.xmlimpl.XMLList) r22;

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i4);

        $r9 = virtualinvoke $r8.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r10 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r9 != $r10 goto label08;

        $r11 = (org.mozilla.javascript.xmlimpl.XMLList) r22;

        $r12 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r13 = virtualinvoke $r8.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        $r14 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML makeXmlFromString(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XMLName,java.lang.String)>($r12, r1, $r13);

        virtualinvoke $r11.<org.mozilla.javascript.xmlimpl.XMLList: void replace(int,org.mozilla.javascript.xmlimpl.XML)>(i4, $r14);

     label08:
        i4 = i4 + 1;

        goto label07;

     label09:
        $r3 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r21);

        r22 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML makeXmlFromString(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XMLName,java.lang.String)>($r3, r1, $r4);

     label10:
        $r23 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r1);

        $i5 = virtualinvoke $r23.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i5 != 0 goto label11;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object)>(r22);

        goto label14;

     label11:
        i6 = 1;

     label12:
        $i0 = virtualinvoke $r23.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i6 >= $i0 goto label13;

        $r6 = virtualinvoke $r23.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i6);

        $i1 = virtualinvoke $r6.<org.mozilla.javascript.xmlimpl.XML: int childIndex()>();

        $l2 = (long) $i1;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeChild(long)>($l2);

        i6 = i6 + 1;

        goto label12;

     label13:
        $r5 = virtualinvoke $r23.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: boolean doPut(org.mozilla.javascript.xmlimpl.XMLName,org.mozilla.javascript.xmlimpl.XML,org.mozilla.javascript.xmlimpl.XMLObjectImpl)>(r1, $r5, r22);

     label14:
        return;
    }

    public void put(int, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r0;
        org.mozilla.javascript.Scriptable r2;
        int i0;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML r1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        i0 := @parameter0: int;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object;

        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("Assignment to indexed XML is not allowed");

        throw $r0;
    }

    void deleteXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2;
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML r1;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r8;
        java.lang.String $r4, $r6, $r7;
        javax.xml.namespace.QName $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants()>();

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z1 == 0 goto label4;

        $r3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z2 == 0 goto label2;

        $z3 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean toFirstAttribute()>();

        if $z3 == 0 goto label3;

     label1:
        $r8 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z4 = virtualinvoke $r8.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAttr()>();

        if $z4 == 0 goto label3;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean removeXml()>();

        goto label1;

     label2:
        $r5 = new javax.xml.namespace.QName;

        $r6 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        $r7 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r6, $r7);

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean removeAttribute(javax.xml.namespace.QName)>($r5);

     label3:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label5;

     label4:
        $r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: void remove()>();

     label5:
        return;
    }

    public void delete(int)
    {
        int i0;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void remove()>();

     label1:
        return;
    }

    protected org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation getAnnotation()
    {
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        return $r1;
    }

    protected void changeNS(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, r7, $r10;
        java.lang.String r3, r5, $r6, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.xml.namespace.QName $r4, $r8;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        r7 = $r2;

        $z1 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z1 == 0 goto label3;

        r7 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label3:
        $z2 = virtualinvoke r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z2 == 0 goto label7;

     label4:
        $z3 = virtualinvoke r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z3 != 0 goto label5;

        $z5 = virtualinvoke r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAttr()>();

        if $z5 != 0 goto label5;

        $z6 = virtualinvoke r7.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isNamespace()>();

        if $z6 == 0 goto label6;

     label5:
        $r8 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z7 == 0 goto label6;

        $r4 = new javax.xml.namespace.QName;

        $r6 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r5, $r6);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setName(javax.xml.namespace.QName)>($r4);

     label6:
        $r10 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        r7 = $r10;

        $z8 = virtualinvoke $r10.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z8 != 0 goto label7;

        $z4 = virtualinvoke $r10.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isNone()>();

        if $z4 == 0 goto label4;

     label7:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    void remove()
    {
        org.apache.xmlbeans.XmlCursor$TokenType $r2, r3;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = virtualinvoke r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z2 != 0 goto label3;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeToken(org.apache.xmlbeans.XmlCursor)>($r1);

        r3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        goto label1;

     label2:
        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeToken(org.apache.xmlbeans.XmlCursor)>($r1);

     label3:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    void replaceAll(org.mozilla.javascript.xmlimpl.XML)
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r3;
        org.mozilla.javascript.xmlimpl.XML r0, r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void replace(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.xmlimpl.XML)>($r1, r2);

        $r3 = r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno>;

        r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation _anno> = $r3;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    void setAttribute(org.mozilla.javascript.xmlimpl.XMLName, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r12, $r15;
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML r2;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r6, $r10;
        java.lang.String $r1, $r5, $r8, $r9, $r11, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r13;
        java.lang.Object r4;
        javax.xml.namespace.QName $r7;

        r2 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r4 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        if $r1 != null goto label1;

        $r11 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z3 == 0 goto label1;

        $r12 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>("@* assignment not supported.");

        throw $r12;

     label1:
        $r3 = specialinvoke r2.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r4);

        $r6 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r6.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        $r7 = new javax.xml.namespace.QName;

        $r8 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        $r9 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r8, $r9);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<java.lang.Exception: java.lang.String getMessage()>();

        $r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r14);

        throw $r15;

     label5:
        $z1 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean setAttributeText(javax.xml.namespace.QName,java.lang.String)>($r7, $r5);

        if $z1 != 0 goto label7;

        $r10 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z2 = virtualinvoke $r10.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z2 == 0 goto label6;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

     label6:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void insertAttributeWithValue(javax.xml.namespace.QName,java.lang.String)>($r7, $r5);

     label7:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private org.mozilla.javascript.xmlimpl.XMLList allChildNodes(java.lang.String)
    {
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r13, $r17;
        org.mozilla.javascript.xmlimpl.XML r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.apache.xmlbeans.XmlCursor$TokenType $r4, r14, r16;
        int $i0;
        java.lang.String r6, $r7, $r8, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.mozilla.javascript.xmlimpl.XMLList $r0;
        javax.xml.namespace.QName $r5, $r9, $r11, r15;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r6 := @parameter0: java.lang.String;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        $r3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        r14 = $r4;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r6, "*");

        r15 = $r5;

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        r14 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = virtualinvoke r14.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isContainer()>();

        if $z1 == 0 goto label8;

        r16 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        $z2 = virtualinvoke r16.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z2 != 0 goto label8;

        $z3 = virtualinvoke r16.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z3 != 0 goto label3;

        $r13 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r13);

        r15 = null;

        goto label6;

     label3:
        if r6 == null goto label4;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 == 0 goto label4;

        $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z6 != 0 goto label4;

        $r11 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r12 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z7 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z7 == 0 goto label6;

     label4:
        $r17 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r17);

        if r15 == null goto label6;

        $r7 = virtualinvoke r15.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z4 == 0 goto label5;

        r15 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        goto label6;

     label5:
        $r8 = virtualinvoke r15.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r9 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r10 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z5 != 0 goto label6;

        r15 = null;

     label6:
        $z8 = virtualinvoke r16.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z8 == 0 goto label7;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

     label7:
        r16 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        goto label2;

     label8:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl,javax.xml.namespace.QName)>(r1, r15);

        return $r0;
    }

    private org.mozilla.javascript.xmlimpl.XMLList matchDescendantAttributes(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r8;
        org.mozilla.javascript.xmlimpl.XML r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r6;
        org.apache.xmlbeans.XmlCursor$TokenType $r4, $r5, r9;
        int i0, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.mozilla.javascript.xmlimpl.XMLList $r10;
        javax.xml.namespace.QName $r7;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r6 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r10 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r10.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        $r3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        r9 = $r4;

        virtualinvoke $r10.<org.mozilla.javascript.xmlimpl.XMLList: void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl,javax.xml.namespace.QName)>(r1, null);

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        r9 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = virtualinvoke r9.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isContainer()>();

        if $z1 == 0 goto label6;

        i0 = 1;

     label2:
        if i0 <= 0 goto label6;

        $r5 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z2 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAttr()>();

        if $z2 == 0 goto label3;

        $r7 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z5 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean qnameMatches(org.mozilla.javascript.xmlimpl.XMLName,javax.xml.namespace.QName)>(r6, $r7);

        if $z5 == 0 goto label3;

        $r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r10.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r8);

     label3:
        $z6 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z6 == 0 goto label4;

        i0 = i0 + 1;

        goto label2;

     label4:
        $z3 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z3 == 0 goto label5;

        $i2 = (int) -1;

        i0 = i0 + $i2;

        goto label2;

     label5:
        $z4 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z4 == 0 goto label2;

        goto label6;

     label6:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r10;
    }

    private org.mozilla.javascript.xmlimpl.XMLList matchDescendantChildren(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r8, $r10;
        org.mozilla.javascript.xmlimpl.XML r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r6;
        org.apache.xmlbeans.XmlCursor$TokenType $r4, $r5, r11;
        int i0, $i2;
        java.lang.String $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.mozilla.javascript.xmlimpl.XMLList $r12;
        javax.xml.namespace.QName $r7;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r6 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r12 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r12.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        $r3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        r11 = $r4;

        virtualinvoke $r12.<org.mozilla.javascript.xmlimpl.XMLList: void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl,javax.xml.namespace.QName)>(r1, null);

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        r11 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = virtualinvoke r11.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isContainer()>();

        if $z1 == 0 goto label7;

        i0 = 1;

     label2:
        if i0 <= 0 goto label7;

        $r5 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z2 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAttr()>();

        if $z2 != 0 goto label4;

        $z5 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z5 != 0 goto label4;

        $z6 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z6 != 0 goto label4;

        $z7 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z7 != 0 goto label3;

        $z9 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isProcinst()>();

        if $z9 != 0 goto label3;

        $r9 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $z10 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z10 == 0 goto label4;

        $r10 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r12.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r10);

        goto label4;

     label3:
        $r7 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z8 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean qnameMatches(org.mozilla.javascript.xmlimpl.XMLName,javax.xml.namespace.QName)>(r6, $r7);

        if $z8 == 0 goto label4;

        $r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r12.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r8);

     label4:
        $z11 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z11 == 0 goto label5;

        i0 = i0 + 1;

        goto label2;

     label5:
        $z3 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z3 == 0 goto label6;

        $i2 = (int) -1;

        i0 = i0 + $i2;

        goto label2;

     label6:
        $z4 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z4 == 0 goto label2;

        goto label7;

     label7:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r12;
    }

    private org.mozilla.javascript.xmlimpl.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r3;
        org.mozilla.javascript.xmlimpl.XMLName $r2;
        org.apache.xmlbeans.XmlCursor$TokenType r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor$TokenType;

        $r2 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formStar()>();

        $r3 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType,org.mozilla.javascript.xmlimpl.XMLName)>(r1, $r2);

        return $r3;
    }

    private org.mozilla.javascript.xmlimpl.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType, org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r12, $r17;
        org.mozilla.javascript.xmlimpl.XML r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLName r6;
        org.apache.xmlbeans.XmlCursor$TokenType $r4, r9, $r10, r18, r20;
        java.lang.String $r7, $r8, $r13, $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.mozilla.javascript.xmlimpl.XMLList $r0;
        javax.xml.namespace.QName $r5, $r11, $r15, r19;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r9 := @parameter0: org.apache.xmlbeans.XmlCursor$TokenType;

        r6 := @parameter1: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        $r3 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        r18 = $r4;

        $r5 = new javax.xml.namespace.QName;

        $r7 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        $r8 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        r19 = $r5;

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        r18 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = virtualinvoke r18.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isContainer()>();

        if $z1 == 0 goto label7;

        r20 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        $z2 = virtualinvoke r20.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z2 != 0 goto label7;

        if r20 != r9 goto label5;

        $z3 = virtualinvoke r20.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z3 != 0 goto label3;

        $z7 = virtualinvoke r20.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isProcinst()>();

        if $z7 != 0 goto label3;

        $r17 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r17);

        r19 = null;

        goto label5;

     label3:
        $r11 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z4 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean qnameMatches(org.mozilla.javascript.xmlimpl.XMLName,javax.xml.namespace.QName)>(r6, $r11);

        if $z4 == 0 goto label5;

        $r12 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r3);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r12);

        if r19 == null goto label5;

        $r13 = virtualinvoke r19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z5 == 0 goto label4;

        r19 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        goto label5;

     label4:
        $r14 = virtualinvoke r19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r15 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r16 = virtualinvoke $r15.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z6 != 0 goto label5;

        r19 = null;

     label5:
        $z8 = virtualinvoke r20.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z8 == 0 goto label6;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

     label6:
        r20 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        goto label2;

     label7:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r10 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType START>;

        if r9 != $r10 goto label8;

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl,javax.xml.namespace.QName)>(r1, r19);

     label8:
        return $r0;
    }

    private boolean qnameMatches(org.mozilla.javascript.xmlimpl.XMLName, javax.xml.namespace.QName)
    {
        org.mozilla.javascript.xmlimpl.XML r8;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        java.lang.String $r1, $r2, $r3, $r5, $r6, $r7;
        javax.xml.namespace.QName r4;
        boolean $z0, $z1, $z2, z3;

        r8 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r4 := @parameter1: javax.xml.namespace.QName;

        z3 = 0;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        if $r1 == null goto label1;

        $r6 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        $r7 = virtualinvoke r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label3;

     label1:
        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $r5 = virtualinvoke r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    org.mozilla.javascript.xmlimpl.XML addNamespace(org.mozilla.javascript.xmlimpl.Namespace)
    {
        java.lang.Throwable $r13;
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XML r2;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r6;
        org.apache.xmlbeans.XmlCursor$TokenType $r14;
        java.util.Map $r7;
        java.lang.String $r1, $r5, $r9, $r11, $r12, $r15;
        org.mozilla.javascript.xmlimpl.Namespace r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r8;
        javax.xml.namespace.QName $r4, $r10;

        r2 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.Namespace;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        if $r1 != null goto label01;

        return r2;

     label01:
        $r3 = specialinvoke r2.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label02:
        $z0 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean isContainer()>();

        if $z0 != 0 goto label04;

     label03:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r2;

     label04:
        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label06;

        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z5 == 0 goto label06;

     label05:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r2;

     label06:
        $r6 = r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r7 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map getAllNamespaces(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor)>($r6, $r3);

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r12 = (java.lang.String) $r8;

        if $r12 == null goto label11;

        $r9 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label08;

     label07:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r2;

     label08:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void push()>();

     label09:
        $r14 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z6 = virtualinvoke $r14.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAnyAttr()>();

        if $z6 == 0 goto label10;

        $z3 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean isNamespace()>();

        if $z3 == 0 goto label09;

        $r10 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r11 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z4 == 0 goto label09;

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean removeXml()>();

        goto label10;

     label10:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

     label11:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r15 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void insertNamespace(java.lang.String,java.lang.String)>($r1, $r15);

     label12:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label15;

     label13:
        $r13 := @caughtexception;

     label14:
        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r13;

     label15:
        return r2;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object)
    {
        org.apache.xmlbeans.XmlCursor $r1;
        java.lang.Object r2;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

     label2:
        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.apache.xmlbeans.XmlCursor,java.lang.Object)>($r1, r2);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r0;
    }

    org.mozilla.javascript.xmlimpl.XMLList attribute(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r2 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchAttributes(org.mozilla.javascript.xmlimpl.XMLName)>(r1);

        return $r2;
    }

    org.mozilla.javascript.xmlimpl.XMLList attributes()
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2;
        org.mozilla.javascript.xmlimpl.XMLName $r0;
        org.mozilla.javascript.xmlimpl.XML r1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r0 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formStar()>();

        $r2 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchAttributes(org.mozilla.javascript.xmlimpl.XMLName)>($r0);

        return $r2;
    }

    org.mozilla.javascript.xmlimpl.XMLList child(long)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.mozilla.javascript.xmlimpl.XMLList $r0;
        long l0;
        org.mozilla.javascript.xmlimpl.XML r1, $r3;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        l0 := @parameter0: long;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r2 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl,javax.xml.namespace.QName)>(r1, null);

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML getXmlChild(long)>(l0);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r3);

        return $r0;
    }

    org.mozilla.javascript.xmlimpl.XMLList child(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r5, r7;
        org.mozilla.javascript.xmlimpl.XML r2;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r6;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r3;
        java.lang.String $r1, $r4;
        boolean $z0;

        r2 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        if r0 != null goto label1;

        $r5 = new org.mozilla.javascript.xmlimpl.XMLList;

        $r6 = r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r5.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r6);

        return $r5;

     label1:
        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        r7 = specialinvoke r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList allChildNodes(java.lang.String)>($r4);

        goto label3;

     label2:
        $r3 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType START>;

        r7 = specialinvoke r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType,org.mozilla.javascript.xmlimpl.XMLName)>($r3, r0);

     label3:
        return r7;
    }

    org.mozilla.javascript.xmlimpl.XML getXmlChild(long)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.apache.xmlbeans.XmlCursor $r1;
        long l0;
        org.mozilla.javascript.xmlimpl.XML r0, r3;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        l0 := @parameter0: long;

        r3 = null;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: boolean moveToChild(org.apache.xmlbeans.XmlCursor,long,boolean,boolean)>($r1, l0, 0, 1);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        r3 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createXML(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor)>($r2, $r1);

     label1:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r3;
    }

    int childIndex()
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, r3, $r4;
        int i0, $i1, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        i0 = 0;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        r3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

     label1:
        $z0 = virtualinvoke r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isText()>();

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        $z6 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z6 != 0 goto label6;

        goto label7;

     label2:
        $z1 = virtualinvoke r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

        $z4 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z4 == 0 goto label7;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z5 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z5 != 0 goto label3;

        goto label7;

     label3:
        i0 = i0 + 1;

        goto label6;

     label4:
        $z2 = virtualinvoke r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isComment()>();

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isProcinst()>();

        if $z3 == 0 goto label7;

     label5:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

     label6:
        r3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        goto label1;

     label7:
        $r4 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z7 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z7 == 0 goto label8;

        $i3 = (int) -1;

        $i1 = $i3;

        goto label9;

     label8:
        $i1 = i0;

     label9:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $i1;
    }

    org.mozilla.javascript.xmlimpl.XMLList children()
    {
        org.mozilla.javascript.xmlimpl.XMLList $r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList allChildNodes(java.lang.String)>(null);

        return $r1;
    }

    org.mozilla.javascript.xmlimpl.XMLList comments()
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType COMMENT>;

        $r2 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType)>($r1);

        return $r2;
    }

    boolean contains(java.lang.Object)
    {
        java.lang.Object r0;
        org.mozilla.javascript.xmlimpl.XML r1;
        boolean $z0, z1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: java.lang.Object;

        z1 = 0;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z0 == 0 goto label1;

        z1 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean equivalentXml(java.lang.Object)>(r0);

     label1:
        return z1;
    }

    java.lang.Object copy()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        org.apache.xmlbeans.XmlCursor $r1, $r4;
        org.mozilla.javascript.xmlimpl.XML r0, $r3;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r3 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createEmptyXML(org.mozilla.javascript.xmlimpl.XMLLibImpl)>($r2);

        $r4 = specialinvoke $r3.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r4.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean copyXml(org.apache.xmlbeans.XmlCursor)>($r4);

        interfaceinvoke $r4.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r3;
    }

    org.mozilla.javascript.xmlimpl.XMLList descendants(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList r2;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        org.mozilla.javascript.xmlimpl.XML r1;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z0 == 0 goto label1;

        r2 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchDescendantAttributes(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        goto label2;

     label1:
        r2 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchDescendantChildren(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

     label2:
        return r2;
    }

    java.lang.Object[] inScopeNamespaces()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        java.lang.Object[] $r3;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r2 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r3 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: java.lang.Object[] inScopeNamespaces(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor)>($r2, $r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r3;
    }

    org.mozilla.javascript.xmlimpl.XML insertChildAfter(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2;
        org.mozilla.javascript.xmlimpl.XML r1, $r3;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML prependChild(java.lang.Object)>(r2);

        goto label2;

     label1:
        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z0 == 0 goto label2;

        $r3 = (org.mozilla.javascript.xmlimpl.XML) r0;

        specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.mozilla.javascript.xmlimpl.XML,java.lang.Object,int)>($r3, r2, 1);

     label2:
        return r1;
    }

    org.mozilla.javascript.xmlimpl.XML insertChildBefore(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2;
        org.mozilla.javascript.xmlimpl.XML r1, $r3;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object)>(r2);

        goto label2;

     label1:
        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z0 == 0 goto label2;

        $r3 = (org.mozilla.javascript.xmlimpl.XML) r0;

        specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.mozilla.javascript.xmlimpl.XML,java.lang.Object,int)>($r3, r2, 2);

     label2:
        return r1;
    }

    boolean hasOwnProperty(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        int $i0, $i1;
        java.lang.String $r3;
        boolean $z0, $z1, z2, $z3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XML: boolean prototypeFlag>;

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $i1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: int findPrototypeId(java.lang.String)>($r3);

        if 0 == $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        goto label6;

     label3:
        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>(r1);

        $i0 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 <= 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z2 = $z3;

     label6:
        return z2;
    }

    boolean hasComplexContent()
    {
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: boolean hasSimpleContent()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean hasSimpleContent()
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z2 == 0 goto label3;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label3:
        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toFirstChild()>();

        if $z3 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $z4;
    }

    int length()
    {
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        return 1;
    }

    java.lang.String localName()
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        java.lang.String r2;
        javax.xml.namespace.QName $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        r2 = null;

        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z1 != 0 goto label2;

        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z2 != 0 goto label2;

        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z3 == 0 goto label3;

     label2:
        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        r2 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

     label3:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r2;
    }

    org.mozilla.javascript.xmlimpl.QName name()
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r5, $r8;
        java.lang.String $r2, $r3, $r6, $r9;
        org.mozilla.javascript.xmlimpl.QName $r4, $r7, r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.xml.namespace.QName $r11;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        r10 = null;

        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z1 != 0 goto label2;

        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z2 != 0 goto label2;

        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z3 == 0 goto label4;

     label2:
        $r11 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $z4 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z4 == 0 goto label3;

        $r7 = new org.mozilla.javascript.xmlimpl.QName;

        $r8 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r9 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r7.<org.mozilla.javascript.xmlimpl.QName: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String,java.lang.String)>($r8, "", $r9, "");

        r10 = $r7;

        goto label4;

     label3:
        $r2 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r4 = new org.mozilla.javascript.xmlimpl.QName;

        $r5 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r6 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r4.<org.mozilla.javascript.xmlimpl.QName: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String,java.lang.String)>($r5, $r2, $r6, $r3);

        r10 = $r4;

     label4:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r10;
    }

    java.lang.Object namespace(java.lang.String)
    {
        java.lang.Object[] $r8;
        org.apache.xmlbeans.XmlCursor $r1, $r9;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r3, $r6, $r7, $r10;
        java.util.Map $r4;
        java.lang.String r2, r12;
        org.mozilla.javascript.xmlimpl.Namespace $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r5, r11, $r13;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        r11 = null;

        if r2 != null goto label4;

        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z1 != 0 goto label2;

        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z3 == 0 goto label7;

     label2:
        $r7 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r8 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: java.lang.Object[] inScopeNamespaces(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor)>($r7, $r1);

        $r9 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z2 = interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z2 == 0 goto label3;

        interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label3:
        $r10 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        r11 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: org.mozilla.javascript.xmlimpl.Namespace getNamespace(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor,java.lang.Object[])>($r10, $r9, $r8);

        interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label7;

     label4:
        $r3 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r4 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map getAllNamespaces(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor)>($r3, $r1);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (java.lang.String) $r5;

        if r12 != null goto label5;

        $r13 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label6;

     label5:
        $r14 = new org.mozilla.javascript.xmlimpl.Namespace;

        $r13 = $r14;

        $r6 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r14.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>($r6, r2, r12);

     label6:
        r11 = $r13;

     label7:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r11;
    }

    java.lang.Object[] namespaceDeclarations()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        java.lang.Object[] $r3;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r2 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r3 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: java.lang.Object[] namespaceDeclarations(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor)>($r2, $r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r3;
    }

    java.lang.Object nodeKind()
    {
        org.mozilla.javascript.xmlimpl.XML r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.String r7;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r2 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r1 != $r2 goto label1;

        r7 = "attribute";

        goto label6;

     label1:
        $r3 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType TEXT>;

        if $r1 != $r3 goto label2;

        r7 = "text";

        goto label6;

     label2:
        $r4 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType COMMENT>;

        if $r1 != $r4 goto label3;

        r7 = "comment";

        goto label6;

     label3:
        $r5 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType PROCINST>;

        if $r1 != $r5 goto label4;

        r7 = "processing-instruction";

        goto label6;

     label4:
        $r6 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType START>;

        if $r1 != $r6 goto label5;

        r7 = "element";

        goto label6;

     label5:
        r7 = "text";

     label6:
        return r7;
    }

    void normalize()
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r2, $r3, $r4, r12;
        java.lang.StringBuffer $r9, $r10, $r14;
        int $i0, i1, $i3;
        java.lang.String $r5, $r6, $r7, $r11, r13;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        r12 = $r2;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        r12 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = virtualinvoke r12.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isContainer()>();

        if $z1 == 0 goto label9;

        i1 = 1;

        r13 = null;

     label2:
        if i1 <= 0 goto label9;

        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r4 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType TEXT>;

        if $r3 != $r4 goto label5;

        $r5 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeToken(org.apache.xmlbeans.XmlCursor)>($r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

        goto label6;

     label3:
        if r13 != null goto label4;

        r13 = $r6;

        goto label6;

     label4:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeToken(org.apache.xmlbeans.XmlCursor)>($r1);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeToken(org.apache.xmlbeans.XmlCursor)>($r1);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void insertChars(java.lang.String)>($r11);

        goto label6;

     label5:
        r13 = null;

     label6:
        $z4 = virtualinvoke $r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isStart()>();

        if $z4 == 0 goto label7;

        i1 = i1 + 1;

        goto label2;

     label7:
        $z2 = virtualinvoke $r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnd()>();

        if $z2 == 0 goto label8;

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label2;

     label8:
        $z3 = virtualinvoke $r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isEnddoc()>();

        if $z3 == 0 goto label2;

        goto label9;

     label9:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    java.lang.Object parent()
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation $r3;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2;
        java.lang.Object r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        r4 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label4;

     label1:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z1 == 0 goto label3;

        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z2 == 0 goto label2;

        r4 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label4;

     label2:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r3 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor)>($r1);

        r4 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML getFromAnnotation(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.xmlimpl.XML$XScriptAnnotation)>($r2, $r3);

        goto label4;

     label3:
        r4 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label4:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r4;
    }

    org.mozilla.javascript.xmlimpl.XML prependChild(java.lang.Object)
    {
        org.apache.xmlbeans.XmlCursor $r1;
        java.lang.Object r2;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

        specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void insertChild(org.apache.xmlbeans.XmlCursor,java.lang.Object)>($r1, r2);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r0;
    }

    java.lang.Object processingInstructions(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r3;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        org.apache.xmlbeans.XmlCursor$TokenType $r2;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $r2 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType PROCINST>;

        $r3 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType,org.mozilla.javascript.xmlimpl.XMLName)>($r2, r1);

        return $r3;
    }

    boolean propertyIsEnumerable(java.lang.Object)
    {
        java.lang.Integer $r3;
        org.mozilla.javascript.xmlimpl.XML r4;
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.String $r1;
        java.lang.Number $r2;
        boolean $z0, $z1, $z2, z3, $z4;
        double $d0, $d1;
        java.lang.Object r0;

        r4 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label3;

        $r3 = (java.lang.Integer) r0;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        if $i2 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z3 = $z2;

        goto label7;

     label3:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label6;

        $r2 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label4;

        $d1 = 1.0 / $d0;

        $b1 = $d1 cmpl 0.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        z3 = $z4;

        goto label7;

     label6:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("0");

     label7:
        return z3;
    }

    org.mozilla.javascript.xmlimpl.XML removeNamespace(org.mozilla.javascript.xmlimpl.Namespace)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12;
        java.util.Set $r6, $r16;
        org.mozilla.javascript.ObjArray $r40;
        java.lang.Throwable $r34;
        java.lang.Object[] $r10;
        org.apache.xmlbeans.XmlCursor $r1;
        java.util.HashMap $r39;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r9, $r11, $r22, $r29;
        org.apache.xmlbeans.XmlCursor$TokenType $r38;
        int i0, $i1, $i3;
        java.lang.String $r2, $r3, $r13, $r15, $r21, $r24, $r25, $r26, $r31, $r33;
        org.mozilla.javascript.xmlimpl.Namespace $r12, $r23, r35, $r41, $r42;
        java.util.Map$Entry r36, r37;
        java.util.Iterator $r7, $r17;
        java.lang.Object $r14, $r18, $r19, $r20, $r27, $r30, $r32;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r35 := @parameter0: org.mozilla.javascript.xmlimpl.Namespace;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label01:
        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label02;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label02:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z1 != 0 goto label04;

     label03:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r0;

     label04:
        $r2 = virtualinvoke r35.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        $r3 = virtualinvoke r35.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        $r39 = new java.util.HashMap;

        specialinvoke $r39.<java.util.HashMap: void <init>()>();

        i0 = 1;

     label05:
        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isEnd()>();

        if $z2 == 0 goto label06;

        if i0 == 0 goto label21;

     label06:
        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z3 == 0 goto label17;

        interfaceinvoke $r39.<java.util.Map: void clear()>();

        staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: void getNamespaces(org.apache.xmlbeans.XmlCursor,java.util.Map)>($r1, $r39);

        $r40 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r40.<org.mozilla.javascript.ObjArray: void <init>()>();

        $r6 = interfaceinvoke $r39.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r27 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.util.Map$Entry) $r27;

        $r41 = new org.mozilla.javascript.xmlimpl.Namespace;

        $r29 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r30 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (java.lang.String) $r30;

        $r32 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.lang.String) $r32;

        specialinvoke $r41.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>($r29, $r31, $r33);

        virtualinvoke $r40.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>($r41);

        goto label07;

     label08:
        $r42 = new org.mozilla.javascript.xmlimpl.Namespace;

        $r9 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r42.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String)>($r9, $r3);

        virtualinvoke $r40.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>($r42);

        $r10 = virtualinvoke $r40.<org.mozilla.javascript.ObjArray: java.lang.Object[] toArray()>();

        $r11 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r12 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: org.mozilla.javascript.xmlimpl.Namespace getNamespace(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor,java.lang.Object[])>($r11, $r1, $r10);

        $r13 = virtualinvoke $r12.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        $z5 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label10;

        if $r2 == null goto label09;

        $r26 = virtualinvoke $r12.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        $z10 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z10 == 0 goto label10;

     label09:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r0;

     label10:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void push()>();

        z11 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toFirstAttribute()>();

     label11:
        if z11 == 0 goto label14;

        $r22 = r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r23 = staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: org.mozilla.javascript.xmlimpl.Namespace getNamespace(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.apache.xmlbeans.XmlCursor,java.lang.Object[])>($r22, $r1, $r10);

        $r24 = virtualinvoke $r23.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        $z8 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z8 == 0 goto label13;

        if $r2 == null goto label12;

        $r25 = virtualinvoke $r23.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        $z9 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z9 == 0 goto label13;

     label12:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return r0;

     label13:
        z11 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toNextAttribute()>();

        goto label11;

     label14:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        if $r2 != null goto label16;

        $r16 = interfaceinvoke $r39.<java.util.Map: java.util.Set entrySet()>();

        $r17 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z12 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label17;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z7 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z7 == 0 goto label15;

        $r20 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.String) $r20;

        staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: void removeNamespace(org.apache.xmlbeans.XmlCursor,java.lang.String)>($r1, $r21);

        goto label15;

     label16:
        $r14 = interfaceinvoke $r39.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $z6 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 == 0 goto label17;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        staticinvoke <org.mozilla.javascript.xmlimpl.NamespaceHelper: void removeNamespace(org.apache.xmlbeans.XmlCursor,java.lang.String)>($r1, $r15);

     label17:
        $r38 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $i1 = virtualinvoke $r38.<org.apache.xmlbeans.XmlCursor$TokenType: int intValue()>();

        lookupswitch($i1)
        {
            case 3: goto label18;
            case 4: goto label19;
            default: goto label20;
        };

     label18:
        i0 = i0 + 1;

        goto label20;

     label19:
        $i3 = (int) -1;

        i0 = i0 + $i3;

     label20:
        goto label05;

     label21:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label24;

     label22:
        $r34 := @caughtexception;

     label23:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r34;

     label24:
        return r0;

        catch java.lang.Throwable from label01 to label03 with label22;
        catch java.lang.Throwable from label04 to label09 with label22;
        catch java.lang.Throwable from label10 to label12 with label22;
        catch java.lang.Throwable from label13 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    org.mozilla.javascript.xmlimpl.XML replace(long, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r1;
        int $i1;
        long l0;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML r0, $r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        l0 := @parameter0: long;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList child(long)>(l0);

        $i1 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i1 <= 0 goto label1;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML insertChildAfter(java.lang.Object,java.lang.Object)>($r2, r3);

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void removeChild(long)>(l0);

     label1:
        return r0;
    }

    org.mozilla.javascript.xmlimpl.XML replace(org.mozilla.javascript.xmlimpl.XMLName, java.lang.Object)
    {
        java.lang.Object r2;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r1, r2);

        return r0;
    }

    org.mozilla.javascript.xmlimpl.XML setChildren(java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2;
        org.mozilla.javascript.xmlimpl.XMLName $r0;
        java.lang.Object r3;
        org.mozilla.javascript.xmlimpl.XML r1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r3 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formStar()>();

        $r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)>($r0);

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: void remove()>();

        virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object)>(r3);

        return r1;
    }

    void setLocalName(java.lang.String)
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        javax.xml.namespace.QName $r2, $r3;
        java.lang.String $r4, r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r5 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z1 != 0 goto label3;

        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z2 == 0 goto label4;

     label3:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;

     label4:
        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r3 = new javax.xml.namespace.QName;

        $r4 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r4, r5, $r6);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setName(javax.xml.namespace.QName)>($r3);

     label5:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

     label7:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void setName(org.mozilla.javascript.xmlimpl.QName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        java.lang.String $r3, $r5, $r6, $r7, r10;
        javax.xml.namespace.QName $r4, $r8;
        org.mozilla.javascript.xmlimpl.QName r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: org.mozilla.javascript.xmlimpl.QName;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label01:
        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label02;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label02:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z1 != 0 goto label03;

        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z2 == 0 goto label04;

     label03:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;

     label04:
        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z3 == 0 goto label05;

        $r7 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        $r8 = new javax.xml.namespace.QName;

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String)>($r7);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setName(javax.xml.namespace.QName)>($r8);

        goto label07;

     label05:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.QName: java.lang.String prefix()>();

        r10 = $r3;

        if $r3 != null goto label06;

        r10 = "";

     label06:
        $r4 = new javax.xml.namespace.QName;

        $r5 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.QName: java.lang.String uri()>();

        $r6 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, r10);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setName(javax.xml.namespace.QName)>($r4);

     label07:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

     label09:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r9;

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void setNamespace(org.mozilla.javascript.xmlimpl.Namespace)
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        java.lang.String $r3, $r5, $r6, r8;
        javax.xml.namespace.QName $r4;
        org.mozilla.javascript.xmlimpl.Namespace r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: org.mozilla.javascript.xmlimpl.Namespace;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label2:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z1 != 0 goto label3;

        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z2 != 0 goto label3;

        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z3 == 0 goto label4;

     label3:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;

     label4:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        r8 = $r3;

        if $r3 != null goto label5;

        r8 = "";

     label5:
        $r4 = new javax.xml.namespace.QName;

        $r5 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        $r6 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.String localName()>();

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, r8);

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void setName(javax.xml.namespace.QName)>($r4);

     label6:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label9;

     label7:
        $r7 := @caughtexception;

     label8:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r7;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    org.mozilla.javascript.xmlimpl.XMLList text()
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2;
        org.mozilla.javascript.xmlimpl.XML r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType TEXT>;

        $r2 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.xmlbeans.XmlCursor $r1;
        java.lang.String r2;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label1:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z1 == 0 goto label2;

        r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        goto label4;

     label2:
        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStart()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: boolean hasSimpleContent()>();

        if $z3 == 0 goto label3;

        r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        goto label4;

     label3:
        r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toXMLString(int)>(0);

     label4:
        return r2;
    }

    java.lang.String toSource(int)
    {
        int i0;
        java.lang.String $r1;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toXMLString(int)>(i0);

        return $r1;
    }

    java.lang.String toXMLString(int)
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.XmlCursor $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r3, r4, r5, r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.XmlOptions $r2, $r6;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        i4 := @parameter0: int;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isStartdoc()>();

        if $z0 == 0 goto label01;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toFirstContentToken()>();

     label01:
        $z1 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isText()>();

        if $z1 == 0 goto label02;

        r8 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getChars()>();

        goto label07;

     label02:
        $z2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isAttr()>();

        if $z2 == 0 goto label03;

        r8 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: java.lang.String getTextValue()>();

        goto label07;

     label03:
        $z3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isComment()>();

        if $z3 != 0 goto label04;

        $z6 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z6 == 0 goto label06;

     label04:
        $r2 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlOptions getOptions()>();

        $r3 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: java.lang.String dumpNode(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlOptions)>($r1, $r2);

        r8 = $r3;

        r4 = "<xml-fragment>";

        r5 = "</xml-fragment>";

        $z4 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("<xml-fragment>");

        if $z4 == 0 goto label05;

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();

        r8 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i3);

     label05:
        $z5 = virtualinvoke r8.<java.lang.String: boolean endsWith(java.lang.String)>("</xml-fragment>");

        if $z5 == 0 goto label07;

        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        $i2 = $i0 - $i1;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        goto label07;

     label06:
        $r6 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlOptions getOptions()>();

        r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: java.lang.String dumpNode(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlOptions)>($r1, $r6);

     label07:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r7;

     label10:
        return r8;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    java.lang.Object valueOf()
    {
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        return r0;
    }

    boolean equivalentXml(java.lang.Object)
    {
        org.apache.xmlbeans.XmlCursor $r11, $r12;
        org.mozilla.javascript.xmlimpl.XML r1, $r4, r13;
        org.apache.xmlbeans.XmlCursor$TokenType $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0;
        java.lang.String $r2, $r3, $r14, $r15;
        boolean $z0, $z1, $z2, z3;
        org.mozilla.javascript.xmlimpl.XMLList r16;
        java.lang.Object r0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: java.lang.Object;

        z3 = 0;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z0 == 0 goto label3;

        r13 = (org.mozilla.javascript.xmlimpl.XML) r0;

        $r5 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r6 = virtualinvoke r13.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType tokenType()>();

        $r7 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r5 == $r7 goto label1;

        $r8 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r6 == $r8 goto label1;

        $r9 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType TEXT>;

        if $r5 == $r9 goto label1;

        $r10 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType TEXT>;

        if $r6 != $r10 goto label2;

     label1:
        $r14 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        $r15 = virtualinvoke r13.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        goto label5;

     label2:
        $r11 = specialinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r12 = specialinvoke r13.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

        z3 = staticinvoke <org.mozilla.javascript.xmlimpl.LogicalEquality: boolean nodesEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor)>($r11, $r12);

        interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        interfaceinvoke $r12.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label5;

     label3:
        $z1 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z1 == 0 goto label4;

        r16 = (org.mozilla.javascript.xmlimpl.XMLList) r0;

        $i0 = virtualinvoke r16.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i0 != 1 goto label5;

        $r4 = virtualinvoke r16.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int)>(0);

        z3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean equivalentXml(java.lang.Object)>($r4);

        goto label5;

     label4:
        $z2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: boolean hasSimpleContent()>();

        if $z2 == 0 goto label5;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label5:
        return z3;
    }

    org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName)
    {
        org.mozilla.javascript.xmlimpl.XMLList r2;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        org.mozilla.javascript.xmlimpl.XML r1;
        boolean $z0, $z1;

        r1 := @this: org.mozilla.javascript.xmlimpl.XML;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants()>();

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList descendants(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z1 == 0 goto label2;

        r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList attribute(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        goto label3;

     label2:
        r2 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLList child(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

     label3:
        return r2;
    }

    protected java.lang.Object jsConstructor(org.mozilla.javascript.Context, boolean, java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.mozilla.javascript.Context r7;
        org.mozilla.javascript.xmlimpl.XML r2, $r4, $r6;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r3, $r5;
        int $i0;
        java.lang.Object r1;
        boolean z0, $z1;

        r2 := @this: org.mozilla.javascript.xmlimpl.XML;

        r7 := @parameter0: org.mozilla.javascript.Context;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r5 = r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r6 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createFromJS(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.Object)>($r5, "");

        return $r6;

     label1:
        r1 = r0[0];

        if z0 != 0 goto label2;

        $z1 = r1 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z1 == 0 goto label2;

        return r1;

     label2:
        $r3 = r2.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $r4 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createFromJS(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.Object)>($r3, r1);

        return $r4;
    }

    public org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable $r3;
        org.mozilla.javascript.Context r2;
        java.lang.String $r1;
        org.mozilla.javascript.xmlimpl.XML r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter0: org.mozilla.javascript.Context;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: boolean hasSimpleContent()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XML: java.lang.String toString()>();

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r2, $r1);

        return $r3;

     label1:
        return null;
    }

    org.apache.xmlbeans.XmlObject getXmlObject()
    {
        java.lang.Throwable $r3;
        org.apache.xmlbeans.XmlCursor $r1;
        org.apache.xmlbeans.XmlObject $r2;
        org.mozilla.javascript.xmlimpl.XML r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XML;

        $r1 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

     label2:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r3;

     label5:
        return $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static org.apache.xmlbeans.XmlCursor$TokenType access$000(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor$TokenType $r1;
        org.apache.xmlbeans.XmlCursor r0;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $r1 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.apache.xmlbeans.XmlCursor$TokenType skipNonElements(org.apache.xmlbeans.XmlCursor)>(r0);

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.xmlimpl.XML: int PREPEND_CHILD> = 2;

        <org.mozilla.javascript.xmlimpl.XML: int APPEND_CHILD> = 1;

        <org.mozilla.javascript.xmlimpl.XML: long serialVersionUID> = -630969919086449092L;

        return;
    }
}
