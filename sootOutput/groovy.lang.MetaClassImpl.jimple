public class groovy.lang.MetaClassImpl extends java.lang.Object implements groovy.lang.MetaClass, groovy.lang.MutableMetaClass
{
    private static final java.lang.String CLOSURE_CALL_METHOD;
    private static final java.lang.String CLOSURE_DO_CALL_METHOD;
    private static final java.lang.String CLOSURE_CURRY_METHOD;
    protected static final java.lang.String STATIC_METHOD_MISSING;
    protected static final java.lang.String STATIC_PROPERTY_MISSING;
    protected static final java.lang.String METHOD_MISSING;
    protected static final java.lang.String PROPERTY_MISSING;
    private static final java.lang.Class[] METHOD_MISSING_ARGS;
    private static final java.lang.Class[] GETTER_MISSING_ARGS;
    private static final java.lang.Class[] SETTER_MISSING_ARGS;
    protected static final java.util.logging.Logger LOG;
    protected final java.lang.Class theClass;
    protected final org.codehaus.groovy.reflection.CachedClass theCachedClass;
    protected groovy.lang.MetaClassRegistry registry;
    protected final boolean isGroovyObject;
    protected final boolean isMap;
    private org.codehaus.groovy.ast.ClassNode classNode;
    private final groovy.lang.MetaClassImpl$Index classPropertyIndex;
    private groovy.lang.MetaClassImpl$Index classPropertyIndexForSuper;
    private final org.codehaus.groovy.reflection.SingleKeyHashMap staticPropertyIndex;
    private final java.util.Map listeners;
    private org.codehaus.groovy.reflection.FastArray constructors;
    private final java.util.List allMethods;
    private java.util.List interfaceMethods;
    private boolean initialized;
    private final groovy.lang.MetaProperty arrayLengthProperty;
    private static final groovy.lang.MetaMethod AMBIGUOUS_LISTENER_METHOD;
    private static final java.lang.Object[] EMPTY_ARGUMENTS;
    private final java.util.Set newGroovyMethodsSet;
    private groovy.lang.MetaMethod genericGetMethod;
    private groovy.lang.MetaMethod genericSetMethod;
    private groovy.lang.MetaMethod propertyMissingGet;
    private groovy.lang.MetaMethod propertyMissingSet;
    private static final groovy.lang.MetaMethod NULL_METHOD;
    private groovy.lang.MetaMethod methodMissing;
    private org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header mainClassMethodHeader;
    private final org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex;
    protected static final java.lang.Class[] EMPTY_CLASS_ARRAY;
    private static final java.util.HashMap propNames;
    private static final org.codehaus.groovy.reflection.SingleKeyHashMap$Copier NAME_INDEX_COPIER;
    private static final org.codehaus.groovy.reflection.SingleKeyHashMap$Copier METHOD_INDEX_COPIER;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$groovy$lang$GroovyObject;
    static java.lang.Class class$java$util$Map;
    static java.lang.Class array$Ljava$lang$Object;
    static java.lang.Class class$groovy$lang$GroovyObjectSupport;
    static java.lang.Class class$groovy$lang$Closure;
    static java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure;
    static java.lang.Class class$org$codehaus$groovy$runtime$CurriedClosure;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$java$lang$Void;
    static java.lang.Class class$java$beans$BeanInfo;

    public void <init>(java.lang.Class)
    {
        java.util.HashMap $r4;
        java.util.ArrayList $r5;
        java.util.HashSet $r7;
        groovy.lang.MetaArrayLengthProperty $r6;
        boolean $z0, $z1;
        org.codehaus.groovy.reflection.CachedClass $r9, $r14;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r12;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r3;
        groovy.lang.MetaClassImpl$MethodIndex $r1, $r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r13;
        java.lang.Class r8, $r10, $r11, $r15, $r16;

        r0 := @this: groovy.lang.MetaClassImpl;

        r8 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new groovy.lang.MetaClassImpl$MethodIndex;

        specialinvoke $r1.<groovy.lang.MetaClassImpl$MethodIndex: void <init>(groovy.lang.MetaClassImpl)>(r0);

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex> = $r1;

        $r2 = new groovy.lang.MetaClassImpl$MethodIndex;

        specialinvoke $r2.<groovy.lang.MetaClassImpl$MethodIndex: void <init>(groovy.lang.MetaClassImpl)>(r0);

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndexForSuper> = $r2;

        $r3 = new org.codehaus.groovy.reflection.SingleKeyHashMap;

        specialinvoke $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap: void <init>()>();

        r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap staticPropertyIndex> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<groovy.lang.MetaClassImpl: java.util.Map listeners> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<groovy.lang.MetaClassImpl: java.util.List allMethods> = $r5;

        $r6 = new groovy.lang.MetaArrayLengthProperty;

        specialinvoke $r6.<groovy.lang.MetaArrayLengthProperty: void <init>()>();

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty arrayLengthProperty> = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet> = $r7;

        r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass> = r8;

        $r9 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r8);

        r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass> = $r9;

        $r10 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r10 != null goto label1;

        $r15 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject> = $r15;

        goto label2;

     label1:
        $r15 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

     label2:
        $z0 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r8);

        r0.<groovy.lang.MetaClassImpl: boolean isGroovyObject> = $z0;

        $r11 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$util$Map>;

        if $r11 != null goto label3;

        $r16 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$util$Map> = $r16;

        goto label4;

     label3:
        $r16 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$util$Map>;

     label4:
        $z1 = virtualinvoke $r16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r8);

        r0.<groovy.lang.MetaClassImpl: boolean isMap> = $z1;

        $r12 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry> = $r12;

        $r13 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        $r14 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        specialinvoke $r13.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void <init>(org.codehaus.groovy.reflection.CachedClass)>($r14);

        r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex> = $r13;

        return;
    }

    public void <init>(groovy.lang.MetaClassRegistry, java.lang.Class)
    {
        org.codehaus.groovy.reflection.CachedClass $r4;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry r2;
        org.codehaus.groovy.reflection.CachedConstructor[] $r5;
        java.lang.Class r1;
        org.codehaus.groovy.reflection.FastArray $r3;

        r0 := @this: groovy.lang.MetaClassImpl;

        r2 := @parameter0: groovy.lang.MetaClassRegistry;

        r1 := @parameter1: java.lang.Class;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void <init>(java.lang.Class)>(r1);

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry> = r2;

        $r3 = new org.codehaus.groovy.reflection.FastArray;

        $r4 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedConstructor[] getConstructors()>();

        specialinvoke $r3.<org.codehaus.groovy.reflection.FastArray: void <init>(java.lang.Object[])>($r5);

        r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors> = $r3;

        return;
    }

    public java.util.List respondsTo(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        groovy.lang.MetaMethod $r4;
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r1;
        java.lang.Class[] $r2;
        java.lang.Object r6;
        java.lang.String r3;
        java.util.ArrayList $r5;

        r0 := @this: groovy.lang.MetaClassImpl;

        r6 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        $r2 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Class[] castArgumentsToClassArray(java.lang.Object[])>(r1);

        $r4 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getMetaMethod(java.lang.String,java.lang.Object[])>(r3, $r2);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        if $r4 == null goto label1;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return $r5;
    }

    private java.lang.Class[] castArgumentsToClassArray(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.Class[] r1, $r5;
        groovy.lang.MetaClassImpl r6;
        int $i0, $i1, i2;
        java.lang.Object r2;
        java.lang.Class $r3, $r4;
        boolean $z0;

        r6 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        $r5 = <groovy.lang.MetaClassImpl: java.lang.Class[] EMPTY_CLASS_ARRAY>;

        return $r5;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (java.lang.Class)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label6;

        r2 = r0[i2];

        $z0 = r2 instanceof java.lang.Class;

        if $z0 == 0 goto label3;

        $r4 = (java.lang.Class) r2;

        r1[i2] = $r4;

        goto label5;

     label3:
        if r2 != null goto label4;

        r1[i2] = null;

        goto label5;

     label4:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        r1[i2] = $r3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        return r1;
    }

    public java.util.List respondsTo(java.lang.Object, java.lang.String)
    {
        java.util.List $r4, $r6;
        groovy.lang.MetaClassImpl r0;
        java.lang.Class $r1;
        java.lang.Object $r3, r7;
        java.lang.String r2;
        org.codehaus.groovy.reflection.FastArray $r5;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r7 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Class getTheClass()>();

        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getMethods(java.lang.Class,java.lang.String,boolean)>($r1, r2, 0);

        $z0 = $r3 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label1;

        $r5 = (org.codehaus.groovy.reflection.FastArray) $r3;

        $r6 = virtualinvoke $r5.<org.codehaus.groovy.reflection.FastArray: java.util.List toList()>();

        return $r6;

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        return $r4;
    }

    public groovy.lang.MetaProperty hasProperty(java.lang.Object, java.lang.String)
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object r3;
        java.lang.String r1;
        groovy.lang.MetaProperty $r2;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty getMetaProperty(java.lang.String)>(r1);

        return $r2;
    }

    public groovy.lang.MetaProperty getMetaProperty(java.lang.String)
    {
        java.lang.String r4;
        groovy.lang.MetaProperty $r10, $r13, $r15;
        boolean $z0, $z1;
        org.codehaus.groovy.reflection.CachedClass $r1, $r6;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$Index $r2, $r7;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r3, $r5, $r8, $r11;
        java.lang.Object $r9, $r12, $r14;

        r0 := @this: groovy.lang.MetaClassImpl;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r3 = virtualinvoke $r2.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>($r1);

        $z0 = virtualinvoke $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap: boolean containsKey(java.lang.String)>(r4);

        if $z0 == 0 goto label1;

        $r14 = virtualinvoke $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r15 = (groovy.lang.MetaProperty) $r14;

        return $r15;

     label1:
        $r5 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap staticPropertyIndex>;

        $z1 = virtualinvoke $r5.<org.codehaus.groovy.reflection.SingleKeyHashMap: boolean containsKey(java.lang.String)>(r4);

        if $z1 == 0 goto label2;

        $r11 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap staticPropertyIndex>;

        $r12 = virtualinvoke $r11.<org.codehaus.groovy.reflection.SingleKeyHashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r13 = (groovy.lang.MetaProperty) $r12;

        return $r13;

     label2:
        $r7 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndexForSuper>;

        $r6 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r8 = virtualinvoke $r7.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>($r6);

        $r9 = virtualinvoke $r8.<org.codehaus.groovy.reflection.SingleKeyHashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r10 = (groovy.lang.MetaProperty) $r9;

        return $r10;
    }

    public groovy.lang.MetaMethod getStaticMetaMethod(java.lang.String, java.lang.Object[])
    {
        groovy.lang.MetaMethod $r4;
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r1;
        java.lang.Class[] $r2;
        java.lang.String r3;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Class[] castArgumentsToClassArray(java.lang.Object[])>(r1);

        $r4 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod pickStaticMethod(java.lang.String,java.lang.Class[])>(r3, $r2);

        return $r4;
    }

    public groovy.lang.MetaMethod getMetaMethod(java.lang.String, java.lang.Object[])
    {
        groovy.lang.MetaMethod $r4;
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r1;
        java.lang.Class[] $r2;
        java.lang.String r3;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Class[] castArgumentsToClassArray(java.lang.Object[])>(r1);

        $r4 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r3, $r2);

        return $r4;
    }

    public java.lang.Class getTheClass()
    {
        java.lang.Class $r1;
        groovy.lang.MetaClassImpl r0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $r1 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        return $r1;
    }

    public boolean isGroovyObject()
    {
        groovy.lang.MetaClassImpl r0;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $z0 = r0.<groovy.lang.MetaClassImpl: boolean isGroovyObject>;

        return $z0;
    }

    private void fillMethodIndex()
    {
        java.util.Set $r7;
        org.codehaus.groovy.reflection.CachedClass $r5, $r6, $r9;
        org.codehaus.groovy.reflection.CachedMethod[] $r10;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r3;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r2, $r8;
        java.lang.Class $r1;
        java.util.LinkedList $r4;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $r2 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r1 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r1);

        r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header mainClassMethodHeader> = $r3;

        $r4 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.util.LinkedList getSuperClasses()>();

        $r5 = specialinvoke r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass calcFirstGroovySuperClass(java.util.Collection)>($r4);

        $r6 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        specialinvoke r0.<groovy.lang.MetaClassImpl: void addInterfaceMethods(java.util.Set)>($r7);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void populateMethods(java.util.LinkedList,org.codehaus.groovy.reflection.CachedClass)>($r4, $r5);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void inheritInterfaceNewMetaMethods(java.util.Set)>($r7);

        $z0 = r0.<groovy.lang.MetaClassImpl: boolean isGroovyObject>;

        if $z0 == 0 goto label1;

        $r8 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        virtualinvoke $r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyMethodsToSuper()>();

        specialinvoke r0.<groovy.lang.MetaClassImpl: void connectMultimethods(java.util.List,org.codehaus.groovy.reflection.CachedClass)>($r4, $r5);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void removeMultimethodsOverloadedWithPrivateMethods()>();

        $r9 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r10 = $r9.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] mopMethods>;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void replaceWithMOPCalls(org.codehaus.groovy.reflection.CachedMethod[])>($r10);

     label1:
        return;
    }

    private void populateMethods(java.util.LinkedList, org.codehaus.groovy.reflection.CachedClass)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        groovy.lang.MetaMethod[] $r12, $r19;
        java.util.Set $r14, $r15, $r20, $r21;
        org.codehaus.groovy.reflection.CachedMethod r23, r27;
        org.codehaus.groovy.reflection.CachedClass r3, r22, r26;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r6, $r10, r25;
        groovy.lang.MetaMethod r13, r24;
        groovy.lang.MetaClassImpl r2;
        org.codehaus.groovy.reflection.CachedMethod[] $r11, $r18;
        int $i0, $i1, $i2, i3, i4, i5, $i6, i7;
        java.util.LinkedList r0;
        java.util.Iterator $r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r4, $r8, $r16;
        java.lang.Class $r5, $r9;
        java.lang.Object $r7, $r17;

        r2 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.util.LinkedList;

        r3 := @parameter1: org.codehaus.groovy.reflection.CachedClass;

        $r1 = virtualinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();

        $r4 = r2.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r5 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r6 = virtualinvoke $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r5);

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r17 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.codehaus.groovy.reflection.CachedClass) $r17;

        $r18 = virtualinvoke r22.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] getMethods()>();

        i3 = 0;

     label02:
        $i1 = lengthof $r18;

        if i3 >= $i1 goto label05;

        r23 = $r18[i3];

        specialinvoke r2.<groovy.lang.MetaClassImpl: void addToAllMethodsIfPublic(groovy.lang.MetaMethod)>(r23);

        $z3 = virtualinvoke r23.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z3 == 0 goto label03;

        if r22 != r3 goto label04;

     label03:
        specialinvoke r2.<groovy.lang.MetaClassImpl: void addMetaMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r23, $r6);

     label04:
        i3 = i3 + 1;

        goto label02;

     label05:
        $r19 = virtualinvoke r22.<org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] getNewMetaMethods()>();

        i4 = 0;

     label06:
        $i2 = lengthof $r19;

        if i4 >= $i2 goto label08;

        r24 = $r19[i4];

        $r20 = r2.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        $z2 = interfaceinvoke $r20.<java.util.Set: boolean contains(java.lang.Object)>(r24);

        if $z2 != 0 goto label07;

        $r21 = r2.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>(r24);

        specialinvoke r2.<groovy.lang.MetaClassImpl: void addMetaMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r24, $r6);

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        if r22 != r3 goto label09;

        goto label10;

     label09:
        goto label01;

     label10:
        r25 = $r6;

     label11:
        $z4 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        $r7 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.codehaus.groovy.reflection.CachedClass) $r7;

        $r8 = r2.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r9 = virtualinvoke r26.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r10 = virtualinvoke $r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r9);

        if r25 == null goto label12;

        $r16 = r2.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        virtualinvoke $r16.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r25, $r10);

     label12:
        r25 = $r10;

        $r11 = virtualinvoke r26.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] getMethods()>();

        i5 = 0;

     label13:
        $i6 = lengthof $r11;

        if i5 >= $i6 goto label14;

        r27 = $r11[i5];

        specialinvoke r2.<groovy.lang.MetaClassImpl: void addToAllMethodsIfPublic(groovy.lang.MetaMethod)>(r27);

        specialinvoke r2.<groovy.lang.MetaClassImpl: void addMetaMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r27, $r10);

        i5 = i5 + 1;

        goto label13;

     label14:
        $r12 = virtualinvoke r26.<org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] getNewMetaMethods()>();

        i7 = 0;

     label15:
        $i0 = lengthof $r12;

        if i7 >= $i0 goto label17;

        r13 = $r12[i7];

        $r14 = r2.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        $z1 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>(r13);

        if $z1 != 0 goto label16;

        $r15 = r2.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r13);

        specialinvoke r2.<groovy.lang.MetaClassImpl: void addMetaMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r13, $r10);

     label16:
        i7 = i7 + 1;

        goto label15;

     label17:
        goto label11;

     label18:
        return;
    }

    private void addInterfaceMethods(java.util.Set)
    {
        org.codehaus.groovy.reflection.CachedMethod[] $r8;
        int $i0, i1;
        java.lang.String $r10;
        boolean $z0;
        java.util.Iterator $r5;
        java.util.Set r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r12;
        org.codehaus.groovy.reflection.CachedMethod r9;
        org.codehaus.groovy.reflection.CachedClass r7;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r3;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r2, $r11, $r14;
        java.lang.Class $r1;
        java.lang.Object $r6, $r13, $r15;

        r0 := @this: groovy.lang.MetaClassImpl;

        r4 := @parameter0: java.util.Set;

        $r2 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r1 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r1);

        $r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.codehaus.groovy.reflection.CachedClass) $r6;

        $r8 = virtualinvoke r7.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] getMethods()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r8;

        if i1 == $i0 goto label3;

        r9 = $r8[i1];

        $r10 = virtualinvoke r9.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r11 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r12 = virtualinvoke $r11.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r10, $r3);

        $r14 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r13 = $r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r15 = virtualinvoke $r14.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r13, r9);

        $r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r15;

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    private java.util.LinkedList getSuperClasses()
    {
        org.codehaus.groovy.reflection.CachedClass $r3, $r8, $r9, r10;
        groovy.lang.MetaClassImpl r1;
        java.lang.Class $r2, $r4, $r5, $r6, $r7, $r11;
        java.util.LinkedList $r0;
        boolean $z0, $z1, $z2;

        r1 := @this: groovy.lang.MetaClassImpl;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = r1.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r9 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        virtualinvoke $r0.<java.util.LinkedList: void addFirst(java.lang.Object)>($r9);

        goto label6;

     label1:
        r10 = r1.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

     label2:
        if r10 == null goto label3;

        virtualinvoke $r0.<java.util.LinkedList: void addFirst(java.lang.Object)>(r10);

        r10 = virtualinvoke r10.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        goto label2;

     label3:
        $r3 = r1.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $z1 = $r3.<org.codehaus.groovy.reflection.CachedClass: boolean isArray>;

        if $z1 == 0 goto label6;

        $r5 = r1.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r4 = <groovy.lang.MetaClassImpl: java.lang.Class array$Ljava$lang$Object>;

        if $r4 != null goto label4;

        $r11 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("[Ljava.lang.Object;");

        <groovy.lang.MetaClassImpl: java.lang.Class array$Ljava$lang$Object> = $r11;

        goto label5;

     label4:
        $r11 = <groovy.lang.MetaClassImpl: java.lang.Class array$Ljava$lang$Object>;

     label5:
        if $r5 == $r11 goto label6;

        $r6 = r1.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isPrimitive()>();

        if $z2 != 0 goto label6;

        $r8 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_ARRAY_CLASS>;

        virtualinvoke $r0.<java.util.LinkedList: void addFirst(java.lang.Object)>($r8);

     label6:
        return $r0;
    }

    private void removeMultimethodsOverloadedWithPrivateMethods()
    {
        groovy.lang.MetaClassImpl$1 $r0;
        groovy.lang.MetaClassImpl r1;

        r1 := @this: groovy.lang.MetaClassImpl;

        $r0 = new groovy.lang.MetaClassImpl$1;

        specialinvoke $r0.<groovy.lang.MetaClassImpl$1: void <init>(groovy.lang.MetaClassImpl)>(r1);

        virtualinvoke $r0.<groovy.lang.MetaClassImpl$MethodIndexAction: void iterate()>();

        return;
    }

    private void replaceWithMOPCalls(org.codehaus.groovy.reflection.CachedMethod[])
    {
        org.codehaus.groovy.reflection.CachedMethod[] r2;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$1MOPIter $r1;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r2 := @parameter0: org.codehaus.groovy.reflection.CachedMethod[];

        $z0 = r0.<groovy.lang.MetaClassImpl: boolean isGroovyObject>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new groovy.lang.MetaClassImpl$1MOPIter;

        specialinvoke $r1.<groovy.lang.MetaClassImpl$1MOPIter: void <init>(groovy.lang.MetaClassImpl,org.codehaus.groovy.reflection.CachedMethod[])>(r0, r2);

        $r1.<groovy.lang.MetaClassImpl$1MOPIter: boolean useThis> = 0;

        virtualinvoke $r1.<groovy.lang.MetaClassImpl$1MOPIter: void iterate()>();

        $r1.<groovy.lang.MetaClassImpl$1MOPIter: boolean useThis> = 1;

        virtualinvoke $r1.<groovy.lang.MetaClassImpl$1MOPIter: void iterate()>();

        return;
    }

    private void inheritInterfaceNewMetaMethods(java.util.Set)
    {
        int $i0, i1;
        java.lang.String $r9;
        boolean $z0, $z1;
        java.util.Iterator $r1;
        groovy.lang.MetaMethod[] $r4;
        java.util.Set r0, $r7, $r15;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r11;
        org.codehaus.groovy.reflection.CachedClass r3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r10;
        groovy.lang.MetaMethod r5;
        groovy.lang.MetaClassImpl r6;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r8, $r13;
        java.lang.Object $r2, $r12, $r14;

        r6 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.util.Set;

        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.codehaus.groovy.reflection.CachedClass) $r2;

        $r4 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] getNewMetaMethods()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r4;

        if i1 >= $i0 goto label4;

        r5 = $r4[i1];

        $r7 = r6.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z1 != 0 goto label3;

        $r15 = r6.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label3:
        $r8 = r6.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r9 = virtualinvoke r5.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r10 = r6.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header mainClassMethodHeader>;

        $r11 = virtualinvoke $r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r9, $r10);

        $r13 = r6.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r12 = $r11.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r14 = virtualinvoke $r13.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r12, r5);

        $r11.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r14;

        i1 = i1 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return;
    }

    private void populateInterfaces(java.util.Set)
    {
        java.util.Set r1;
        groovy.lang.MetaClassImpl r0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.util.Set;

        return;
    }

    private void connectMultimethods(java.util.List, org.codehaus.groovy.reflection.CachedClass)
    {
        java.util.Iterator $r1;
        org.codehaus.groovy.reflection.CachedClass r3, r8;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r7, r11;
        java.util.List $r0, r10;
        groovy.lang.MetaClassImpl r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r5, $r9;
        java.lang.Object $r2;
        java.lang.Class $r6;
        boolean $z0;

        r4 := @this: groovy.lang.MetaClassImpl;

        r10 := @parameter0: java.util.List;

        r8 := @parameter1: org.codehaus.groovy.reflection.CachedClass;

        $r0 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List reverse(java.util.List)>(r10);

        r11 = null;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.codehaus.groovy.reflection.CachedClass) $r2;

        $r5 = r4.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r6 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r6);

        if r11 == null goto label2;

        $r9 = r4.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        virtualinvoke $r9.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateNonNewMetaMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r11, $r7);

     label2:
        r11 = $r7;

        if r3 != r8 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        return;
    }

    private void inheritMethods(java.util.Collection, org.codehaus.groovy.reflection.CachedClass)
    {
        boolean $z0, $z1;
        java.util.Iterator $r1;
        java.util.Collection r0;
        org.codehaus.groovy.reflection.CachedClass r3, r10, $r11, r12;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r7, r13;
        groovy.lang.MetaClassImpl r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r5, $r8;
        java.lang.Object $r2, $r9;
        java.lang.Class $r6;

        r4 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.util.Collection;

        r10 := @parameter1: org.codehaus.groovy.reflection.CachedClass;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.codehaus.groovy.reflection.CachedClass) $r9;

        $r11 = virtualinvoke r10.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        if r12 != $r11 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        r13 = null;

     label4:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.codehaus.groovy.reflection.CachedClass) $r2;

        $r5 = r4.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r6 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r6);

        if r13 == null goto label5;

        $r8 = r4.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        virtualinvoke $r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r13, $r7);

     label5:
        r13 = $r7;

        goto label4;

     label6:
        return;
    }

    private org.codehaus.groovy.reflection.CachedClass calcFirstGroovySuperClass(java.util.Collection)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r3;
        java.util.Collection r2;
        org.codehaus.groovy.reflection.CachedClass $r1, r12, $r15, r16, $r22;
        groovy.lang.MetaClassImpl r0;
        java.lang.Class $r4, $r5, $r6, $r8, $r9, $r13, $r14, $r17, $r18, $r19, $r20, $r21;
        java.lang.Object $r7, $r10, $r11;

        r0 := @this: groovy.lang.MetaClassImpl;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $z0 = $r1.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface>;

        if $z0 == 0 goto label01;

        $r15 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        return $r15;

     label01:
        r16 = null;

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.codehaus.groovy.reflection.CachedClass) $r11;

        $r13 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r13 != null goto label03;

        $r17 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject> = $r17;

        goto label04;

     label03:
        $r17 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

     label04:
        $r14 = virtualinvoke r12.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z5 = virtualinvoke $r17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z5 == 0 goto label05;

        r16 = r12;

        goto label06;

     label05:
        goto label02;

     label06:
        if r16 != null goto label07;

        r16 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        goto label12;

     label07:
        $r4 = virtualinvoke r16.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObjectSupport>;

        if $r5 != null goto label08;

        $r18 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObjectSupport");

        <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObjectSupport> = $r18;

        goto label09;

     label08:
        $r18 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObjectSupport>;

     label09:
        if $r4 != $r18 goto label12;

        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.codehaus.groovy.reflection.CachedClass) $r7;

        $r8 = virtualinvoke r16.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r9 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$Closure>;

        if $r9 != null goto label10;

        $r19 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$Closure> = $r19;

        goto label11;

     label10:
        $r19 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$Closure>;

     label11:
        if $r8 != $r19 goto label12;

        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r10 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.codehaus.groovy.reflection.CachedClass) $r10;

     label12:
        $r20 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r20 != null goto label13;

        $r21 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject> = $r21;

        goto label14;

     label13:
        $r21 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

     label14:
        $r6 = virtualinvoke r16.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z2 = virtualinvoke $r21.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z2 == 0 goto label15;

        $r22 = virtualinvoke r16.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        goto label16;

     label15:
        $r22 = r16;

     label16:
        return $r22;
    }

    private java.lang.Object getMethods(java.lang.Class, java.lang.String, boolean)
    {
        java.lang.String r2;
        org.codehaus.groovy.reflection.FastArray $r6, $r10, r12;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator $r7;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r4;
        java.util.List $r5;
        groovy.lang.MetaMethod r9;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r3;
        java.lang.Class r1;
        java.lang.Object $r8, r11;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getMethods(java.lang.Class,java.lang.String)>(r1, r2);

        if $r4 != null goto label1;

        r11 = <org.codehaus.groovy.reflection.FastArray: org.codehaus.groovy.reflection.FastArray EMPTY_LIST>;

        goto label3;

     label1:
        if z0 == 0 goto label2;

        r11 = $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        goto label3;

     label2:
        r11 = $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

     label3:
        if r11 != null goto label4;

        r11 = <org.codehaus.groovy.reflection.FastArray: org.codehaus.groovy.reflection.FastArray EMPTY_LIST>;

     label4:
        if z0 != 0 goto label9;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: boolean hasCategoryInAnyThread()>();

        if $z1 == 0 goto label9;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: java.util.List getCategoryMethods(java.lang.Class,java.lang.String)>(r1, r2);

        if $r5 == null goto label9;

        $z2 = r11 instanceof groovy.lang.MetaMethod;

        if $z2 == 0 goto label5;

        $r10 = new org.codehaus.groovy.reflection.FastArray;

        specialinvoke $r10.<org.codehaus.groovy.reflection.FastArray: void <init>()>();

        r12 = $r10;

        virtualinvoke $r10.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>(r11);

        goto label6;

     label5:
        $r6 = (org.codehaus.groovy.reflection.FastArray) r11;

        r12 = virtualinvoke $r6.<org.codehaus.groovy.reflection.FastArray: org.codehaus.groovy.reflection.FastArray copy()>();

     label6:
        $r7 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (groovy.lang.MetaMethod) $r8;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void filterMatchingMethodForCategory(org.codehaus.groovy.reflection.FastArray,groovy.lang.MetaMethod)>(r12, r9);

        goto label7;

     label8:
        r11 = r12;

     label9:
        return r11;
    }

    private java.lang.Object getStaticMethods(java.lang.Class, java.lang.String)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r4;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r3;
        java.lang.Class r1;
        java.lang.Object r5;
        java.lang.String r2;
        org.codehaus.groovy.reflection.FastArray $r6, $r7;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getMethods(java.lang.Class,java.lang.String)>(r1, r2);

        if $r4 != null goto label1;

        $r7 = <org.codehaus.groovy.reflection.FastArray: org.codehaus.groovy.reflection.FastArray EMPTY_LIST>;

        return $r7;

     label1:
        r5 = $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object staticMethods>;

        if r5 != null goto label2;

        $r6 = <org.codehaus.groovy.reflection.FastArray: org.codehaus.groovy.reflection.FastArray EMPTY_LIST>;

        return $r6;

     label2:
        return r5;
    }

    public boolean isModified()
    {
        groovy.lang.MetaClassImpl r0;

        r0 := @this: groovy.lang.MetaClassImpl;

        return 0;
    }

    public void addNewInstanceMethod(java.lang.reflect.Method)
    {
        org.codehaus.groovy.reflection.CachedMethod $r1;
        org.codehaus.groovy.reflection.CachedClass $r3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r7;
        groovy.lang.MetaClassImpl r4;
        org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod $r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r5;
        java.lang.Class $r6;
        java.lang.reflect.Method r0;

        r4 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = staticinvoke <org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedMethod find(java.lang.reflect.Method)>(r0);

        $r2 = new org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod;

        specialinvoke $r2.<org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod: void <init>(org.codehaus.groovy.reflection.CachedMethod)>($r1);

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r5 = r4.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r6 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r6);

        specialinvoke r4.<groovy.lang.MetaClassImpl: void addNewInstanceMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r2, $r7);

        return;
    }

    private void addNewInstanceMethodToIndex(groovy.lang.MetaMethod, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r4;
        groovy.lang.MetaMethod r1;
        groovy.lang.MetaClassImpl r0;
        java.util.Set $r2, $r3;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: groovy.lang.MetaMethod;

        r4 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        $r2 = r0.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void addMetaMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r1, r4);

     label1:
        return;
    }

    public void addNewStaticMethod(java.lang.reflect.Method)
    {
        org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod $r2;
        org.codehaus.groovy.reflection.CachedMethod $r1;
        org.codehaus.groovy.reflection.CachedClass $r3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r7;
        groovy.lang.MetaClassImpl r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r5;
        java.lang.Class $r6;
        java.lang.reflect.Method r0;

        r4 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = staticinvoke <org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedMethod find(java.lang.reflect.Method)>(r0);

        $r2 = new org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod;

        specialinvoke $r2.<org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod: void <init>(org.codehaus.groovy.reflection.CachedMethod)>($r1);

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r5 = r4.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r6 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r6);

        specialinvoke r4.<groovy.lang.MetaClassImpl: void addNewStaticMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r2, $r7);

        return;
    }

    private void addNewStaticMethodToIndex(groovy.lang.MetaMethod, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r4;
        groovy.lang.MetaMethod r1;
        groovy.lang.MetaClassImpl r0;
        java.util.Set $r2, $r3;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: groovy.lang.MetaMethod;

        r4 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        $r2 = r0.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void addMetaMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r1, r4);

     label1:
        return;
    }

    private void unwrap(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r3;
        groovy.lang.MetaClassImpl r5;
        int $i0, i1;
        java.lang.Object $r1, $r2, $r4;
        boolean $z0;

        r5 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Object[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 == $i0 goto label3;

        $r1 = r0[i1];

        $z0 = $r1 instanceof org.codehaus.groovy.runtime.wrappers.Wrapper;

        if $z0 == 0 goto label2;

        $r2 = r0[i1];

        $r3 = (org.codehaus.groovy.runtime.wrappers.Wrapper) $r2;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.runtime.wrappers.Wrapper: java.lang.Object unwrap()>();

        r0[i1] = $r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r4, $r6, $r7, $r10, $r12;
        java.lang.String r3;
        boolean $z0, $z1;
        groovy.lang.MetaClassImpl r1;
        groovy.lang.Tuple r9;
        java.lang.Object r0, r2, $r5, $r8, $r11, $r13;

        r1 := @this: groovy.lang.MetaClassImpl;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        $r12 = <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object[] EMPTY_ARRAY>;

        $r13 = virtualinvoke r1.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r2, r3, $r12);

        return $r13;

     label1:
        $z0 = r0 instanceof groovy.lang.Tuple;

        if $z0 == 0 goto label2;

        r9 = (groovy.lang.Tuple) r0;

        $r10 = virtualinvoke r9.<groovy.lang.Tuple: java.lang.Object[] toArray()>();

        $r11 = virtualinvoke r1.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r2, r3, $r10);

        return $r11;

     label2:
        $z1 = r0 instanceof java.lang.Object[];

        if $z1 == 0 goto label3;

        $r6 = (java.lang.Object[]) r0;

        $r7 = (java.lang.Object[]) $r6;

        $r8 = virtualinvoke r1.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r2, r3, $r7);

        return $r8;

     label3:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r0;

        $r5 = virtualinvoke r1.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r2, r3, $r4);

        return $r5;
    }

    public java.lang.Object invokeMissingMethod(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r3;
        java.lang.Object r1, $r4;
        java.lang.String r2;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.RuntimeException)>(r1, r2, r3, null);

        return $r4;
    }

    public java.lang.Object invokeMissingProperty(java.lang.Object, java.lang.String, java.lang.Object, boolean)
    {
        java.lang.Throwable $r15, $r16;
        java.lang.Object[] $r6, $r11;
        org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack $r1;
        org.codehaus.groovy.runtime.InvokerInvocationException $r14;
        java.lang.String r2;
        groovy.lang.MissingPropertyException $r17;
        boolean $z0, z1, $z2, $z3, $z4, z6, $z7, $z8, $z9;
        groovy.lang.MetaMethod $r5, $r8, $r10, $r12, $r18, $r19;
        groovy.lang.MetaClassImpl r3;
        java.lang.Object r0, r7, $r9, $r13;
        java.lang.Class $r4;

        r3 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.Object;

        z1 := @parameter3: boolean;

     label01:
        $z0 = r0 instanceof java.lang.Class;

        if $z0 != 0 goto label05;

        if z1 == 0 goto label03;

        $r10 = r3.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingGet>;

        if $r10 == null goto label03;

        $r12 = r3.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingGet>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r2;

        $r13 = virtualinvoke $r12.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r11);

     label02:
        return $r13;

     label03:
        $r5 = r3.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingSet>;

        if $r5 == null goto label05;

        $r8 = r3.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingSet>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r2;

        $r6[1] = r7;

        $r9 = virtualinvoke $r8.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r6);

     label04:
        return $r9;

     label05:
        goto label13;

     label06:
        $r14 := @caughtexception;

        if z1 == 0 goto label07;

        $r19 = r3.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingGet>;

        $z4 = $r19 instanceof org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        if $z4 == 0 goto label07;

        $z9 = 1;

        $z8 = 1;

        goto label08;

     label07:
        $z9 = 0;

        $z8 = 0;

     label08:
        z6 = $z9;

        if $z8 != 0 goto label11;

        if z1 != 0 goto label09;

        $r18 = r3.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingSet>;

        $z3 = $r18 instanceof org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        if $z3 == 0 goto label09;

        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        z6 = $z7;

     label11:
        if z6 == 0 goto label12;

        $r15 = virtualinvoke $r14.<org.codehaus.groovy.runtime.InvokerInvocationException: java.lang.Throwable getCause()>();

        $z2 = $r15 instanceof groovy.lang.MissingPropertyException;

        if $z2 == 0 goto label12;

        $r16 = virtualinvoke $r14.<org.codehaus.groovy.runtime.InvokerInvocationException: java.lang.Throwable getCause()>();

        $r17 = (groovy.lang.MissingPropertyException) $r16;

        throw $r17;

     label12:
        throw $r14;

     label13:
        $r1 = new org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack;

        $r4 = r3.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        specialinvoke $r1.<org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack: void <init>(java.lang.String,java.lang.Class)>(r2, $r4);

        throw $r1;

        catch org.codehaus.groovy.runtime.InvokerInvocationException from label01 to label02 with label06;
        catch org.codehaus.groovy.runtime.InvokerInvocationException from label03 to label04 with label06;
    }

    private java.lang.Object invokeMissingMethod(java.lang.Object, java.lang.String, java.lang.Object[], java.lang.RuntimeException)
    {
        java.lang.Throwable $r13, $r14;
        java.lang.Object[] r5, $r8, $r19;
        org.codehaus.groovy.runtime.metaclass.MissingMethodExecutionFailed $r16;
        org.codehaus.groovy.runtime.InvokerInvocationException $r11;
        java.lang.String r4, $r17;
        boolean $z0, $z1, $z2;
        groovy.lang.MissingMethodException r15;
        java.lang.RuntimeException r2;
        groovy.lang.MetaMethod $r1, $r9, $r12;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack $r3;
        java.lang.Class $r6, $r18;
        java.lang.Object r7, $r10;

        r0 := @this: groovy.lang.MetaClassImpl;

        r7 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object[];

        r2 := @parameter3: java.lang.RuntimeException;

        $r1 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod methodMissing>;

        if $r1 == null goto label5;

     label1:
        $r9 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod methodMissing>;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r4;

        $r8[1] = r5;

        $r10 = virtualinvoke $r9.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r7, $r8);

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;

        $r12 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod methodMissing>;

        $z0 = $r12 instanceof org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        if $z0 == 0 goto label4;

        $r13 = virtualinvoke $r11.<org.codehaus.groovy.runtime.InvokerInvocationException: java.lang.Throwable getCause()>();

        $z1 = $r13 instanceof groovy.lang.MissingMethodException;

        if $z1 == 0 goto label4;

        $r14 = virtualinvoke $r11.<org.codehaus.groovy.runtime.InvokerInvocationException: java.lang.Throwable getCause()>();

        r15 = (groovy.lang.MissingMethodException) $r14;

        $r16 = new org.codehaus.groovy.runtime.metaclass.MissingMethodExecutionFailed;

        $r17 = virtualinvoke r15.<groovy.lang.MissingMethodException: java.lang.String getMethod()>();

        $r18 = virtualinvoke r15.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke r15.<groovy.lang.MissingMethodException: java.lang.Object[] getArguments()>();

        $z2 = virtualinvoke r15.<groovy.lang.MissingMethodException: boolean isStatic()>();

        specialinvoke $r16.<org.codehaus.groovy.runtime.metaclass.MissingMethodExecutionFailed: void <init>(java.lang.String,java.lang.Class,java.lang.Object[],boolean,java.lang.Throwable)>($r17, $r18, $r19, $z2, r15);

        throw $r16;

     label4:
        throw $r11;

     label5:
        if r2 == null goto label6;

        throw r2;

     label6:
        $r3 = new org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack;

        $r6 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        specialinvoke $r3.<org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack: void <init>(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>(r4, $r6, r5, 0);

        throw $r3;

        catch org.codehaus.groovy.runtime.InvokerInvocationException from label1 to label2 with label3;
    }

    protected java.lang.Object invokeStaticMissingProperty(java.lang.Object, java.lang.String, java.lang.Object, boolean)
    {
        java.lang.Object[] $r9, $r14;
        java.lang.String r5;
        groovy.lang.MissingPropertyException $r4, $r7;
        boolean $z0, z1, $z2;
        groovy.lang.MetaClass $r18;
        java.lang.Class[] $r2, $r12;
        groovy.lang.MetaMethod $r3, $r13;
        groovy.lang.MetaClassImpl r1;
        groovy.lang.MetaClassRegistry $r17;
        java.lang.Object r0, r10, $r11, $r15;
        java.lang.Class $r6, $r8, $r16;

        r1 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.Object;

        z1 := @parameter3: boolean;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r17 = r1.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r16 = (java.lang.Class) r0;

        $r18 = interfaceinvoke $r17.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r16);

        goto label2;

     label1:
        $r18 = r1;

     label2:
        if z1 == 0 goto label4;

        $r12 = <groovy.lang.MetaClassImpl: java.lang.Class[] GETTER_MISSING_ARGS>;

        $r13 = interfaceinvoke $r18.<groovy.lang.MetaClass: groovy.lang.MetaMethod getMetaMethod(java.lang.String,java.lang.Object[])>("$static_propertyMissing", $r12);

        if $r13 == null goto label3;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r5;

        $r15 = virtualinvoke $r13.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r14);

        return $r15;

     label3:
        goto label5;

     label4:
        $r2 = <groovy.lang.MetaClassImpl: java.lang.Class[] SETTER_MISSING_ARGS>;

        $r3 = interfaceinvoke $r18.<groovy.lang.MetaClass: groovy.lang.MetaMethod getMetaMethod(java.lang.String,java.lang.Object[])>("$static_propertyMissing", $r2);

        if $r3 == null goto label5;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r5;

        $r9[1] = r10;

        $r11 = virtualinvoke $r3.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r9);

        return $r11;

     label5:
        $z2 = r0 instanceof java.lang.Class;

        if $z2 == 0 goto label6;

        $r7 = new groovy.lang.MissingPropertyException;

        $r8 = (java.lang.Class) r0;

        specialinvoke $r7.<groovy.lang.MissingPropertyException: void <init>(java.lang.String,java.lang.Class)>(r5, $r8);

        throw $r7;

     label6:
        $r4 = new groovy.lang.MissingPropertyException;

        $r6 = r1.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        specialinvoke $r4.<groovy.lang.MissingPropertyException: void <init>(java.lang.String,java.lang.Class)>(r5, $r6);

        throw $r4;
    }

    public java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r3;
        java.lang.Object r1, $r5;
        java.lang.Class $r4;
        java.lang.String r2;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r5 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean,boolean)>($r4, r1, r2, r3, 0, 0);

        return $r5;
    }

    public java.lang.Object invokeMethod(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object[], boolean, boolean)
    {
        groovy.lang.Closure $r66, r86, r96;
        java.util.Map $r11, $r20;
        org.codehaus.groovy.runtime.CurriedClosure r91;
        groovy.lang.MetaClassImpl$2 $r72;
        groovy.lang.MetaMethod $r5, $r30, $r33, $r42, $r45, $r51, $r54, $r71, r85;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r13, $r57, $r61;
        java.lang.Object[] r2, r3, $r56, $r70, $r84;
        java.lang.StringBuffer $r74, $r75, $r76, $r77;
        java.lang.String $r23, $r60, $r64, $r65, $r78, r83;
        groovy.lang.MetaClass $r15, $r17, $r29, $r32, $r36, $r41, $r44, $r50, $r53, $r58, $r62;
        java.lang.Class[] $r28;
        org.codehaus.groovy.runtime.MethodClosure r88;
        java.lang.NullPointerException $r73;
        groovy.lang.Binding $r10;
        boolean z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, $z18;
        groovy.lang.MissingMethodException $r79, $r80, $r81, $r82, r93, r94;
        org.codehaus.groovy.reflection.CachedClass $r6;
        java.util.List $r69;
        groovy.lang.Script $r9;
        int $i0, $i1;
        groovy.lang.MetaProperty $r7;
        java.lang.Object r1, $r8, $r12, $r16, $r19, $r21, $r22, $r27, $r31, $r34, $r35, $r37, $r38, $r39, $r40, $r43, $r46, $r47, $r48, $r49, $r52, $r55, $r59, $r63, $r67, $r68, r95;
        java.lang.Class r4, $r14, $r18, $r24, $r25, $r26, $r87, $r89, $r90, $r92;

        r0 := @this: groovy.lang.MetaClassImpl;

        r4 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        r83 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Object[];

        z0 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        if r1 != null goto label01;

        $r73 = new java.lang.NullPointerException;

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot invoke method: ");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r83);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on null object");

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r73.<java.lang.NullPointerException: void <init>(java.lang.String)>($r78);

        throw $r73;

     label01:
        if r2 != null goto label02;

        $r84 = <groovy.lang.MetaClassImpl: java.lang.Object[] EMPTY_ARGUMENTS>;

        goto label03;

     label02:
        $r84 = r2;

     label03:
        r3 = $r84;

        $r5 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getMethodWithCaching(java.lang.Class,java.lang.String,java.lang.Object[],boolean)>(r4, r83, $r84, z0);

        r85 = $r5;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void unwrap(java.lang.Object[])>($r84);

        if $r5 != null goto label04;

        $i1 = lengthof $r84;

        if $i1 != 1 goto label04;

        $r67 = $r84[0];

        $z14 = $r67 instanceof java.util.List;

        if $z14 == 0 goto label04;

        $r68 = $r84[0];

        $r69 = (java.util.List) $r68;

        $r70 = interfaceinvoke $r69.<java.util.List: java.lang.Object[] toArray()>();

        $r71 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getMethodWithCaching(java.lang.Class,java.lang.String,java.lang.Object[],boolean)>(r4, r83, $r70, z0);

        r85 = $r71;

        if $r71 == null goto label04;

        $r72 = new groovy.lang.MetaClassImpl$2;

        specialinvoke $r72.<groovy.lang.MetaClassImpl$2: void <init>(groovy.lang.MetaClassImpl,groovy.lang.MetaMethod)>(r0, $r71);

        r85 = $r72;

     label04:
        $z15 = r1 instanceof groovy.lang.Closure;

        if $z15 == 0 goto label49;

        r86 = (groovy.lang.Closure) r1;

        $r22 = virtualinvoke r86.<groovy.lang.Closure: java.lang.Object getOwner()>();

        $r23 = "call";

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r83);

        if $z4 != 0 goto label05;

        $r64 = "doCall";

        $z12 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>(r83);

        if $z12 == 0 goto label17;

     label05:
        $r24 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = <groovy.lang.MetaClassImpl: java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure>;

        if $r25 != null goto label06;

        $r87 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.MethodClosure");

        <groovy.lang.MetaClassImpl: java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure> = $r87;

        goto label07;

     label06:
        $r87 = <groovy.lang.MetaClassImpl: java.lang.Class class$org$codehaus$groovy$runtime$MethodClosure>;

     label07:
        if $r24 != $r87 goto label10;

        r88 = (org.codehaus.groovy.runtime.MethodClosure) r1;

        $r60 = virtualinvoke r88.<org.codehaus.groovy.runtime.MethodClosure: java.lang.String getMethod()>();

        $z11 = $r22 instanceof java.lang.Class;

        if $z11 == 0 goto label08;

        $r89 = (java.lang.Class) $r22;

        goto label09;

     label08:
        $r89 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

     label09:
        $r61 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r62 = interfaceinvoke $r61.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r89);

        $r63 = interfaceinvoke $r62.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean,boolean)>($r89, $r22, $r60, r3, 0, 0);

        return $r63;

     label10:
        $r26 = <groovy.lang.MetaClassImpl: java.lang.Class class$org$codehaus$groovy$runtime$CurriedClosure>;

        if $r26 != null goto label11;

        $r90 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.CurriedClosure");

        <groovy.lang.MetaClassImpl: java.lang.Class class$org$codehaus$groovy$runtime$CurriedClosure> = $r90;

        goto label12;

     label11:
        $r90 = <groovy.lang.MetaClassImpl: java.lang.Class class$org$codehaus$groovy$runtime$CurriedClosure>;

     label12:
        if $r24 != $r90 goto label15;

        r91 = (org.codehaus.groovy.runtime.CurriedClosure) r1;

        $r56 = virtualinvoke r91.<org.codehaus.groovy.runtime.CurriedClosure: java.lang.Object[] getUncurriedArguments(java.lang.Object[])>(r3);

        $z10 = $r22 instanceof java.lang.Class;

        if $z10 == 0 goto label13;

        $r92 = (java.lang.Class) $r22;

        goto label14;

     label13:
        $r92 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

     label14:
        $r57 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r58 = interfaceinvoke $r57.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r92);

        $r59 = interfaceinvoke $r58.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r22, r83, $r56);

        return $r59;

     label15:
        if r85 != null goto label16;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r83, r3);

     label16:
        goto label18;

     label17:
        $r65 = "curry";

        $z13 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>(r83);

        if $z13 == 0 goto label18;

        $r66 = virtualinvoke r86.<groovy.lang.Closure: groovy.lang.Closure curry(java.lang.Object[])>(r3);

        return $r66;

     label18:
        $r27 = virtualinvoke r86.<groovy.lang.Closure: java.lang.Object getDelegate()>();

        if $r22 == r86 goto label19;

        $z16 = 1;

        goto label20;

     label19:
        $z16 = 0;

     label20:
        z17 = $z16;

        $i0 = virtualinvoke r86.<groovy.lang.Closure: int getResolveStrategy()>();

        $r28 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r3);

        tableswitch($i0)
        {
            case 1: goto label26;
            case 2: goto label25;
            case 3: goto label22;
            case 4: goto label21;
            default: goto label38;
        };

     label21:
        $r29 = virtualinvoke r86.<groovy.lang.Closure: groovy.lang.MetaClass getMetaClass()>();

        $r30 = interfaceinvoke $r29.<groovy.lang.MetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r83, $r28);

        r85 = $r30;

        if $r30 == null goto label49;

        $r31 = virtualinvoke $r30.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r86, r3);

        return $r31;

     label22:
        if r85 != null goto label49;

        if $r27 == r86 goto label49;

        if $r27 == null goto label49;

        $r32 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClass lookupObjectMetaClass(java.lang.Object)>($r27);

        $r33 = interfaceinvoke $r32.<groovy.lang.MetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r83, $r28);

        r85 = $r33;

        if $r33 == null goto label23;

        $r35 = interfaceinvoke $r32.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r27, r83, r2);

        return $r35;

     label23:
        if $r27 == r86 goto label24;

        $z5 = $r27 instanceof groovy.lang.GroovyObject;

        if $z5 == 0 goto label24;

        $r34 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethodOnGroovyObject(java.lang.String,java.lang.Object[],java.lang.Object)>(r83, r2, $r27);

        return $r34;

     label24:
        goto label49;

     label25:
        if r85 != null goto label49;

        if $r22 == r86 goto label49;

        $r36 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClass lookupObjectMetaClass(java.lang.Object)>($r22);

        $r37 = interfaceinvoke $r36.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r22, r83, r2);

        return $r37;

     label26:
        if r85 != null goto label27;

        if $r27 == r86 goto label27;

        if $r27 == null goto label27;

        $r44 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClass lookupObjectMetaClass(java.lang.Object)>($r27);

        $r45 = interfaceinvoke $r44.<groovy.lang.MetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r83, $r28);

        r85 = $r45;

        if $r45 == null goto label27;

        $r46 = interfaceinvoke $r44.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r27, r83, r2);

        return $r46;

     label27:
        if r85 != null goto label28;

        if $r22 == r86 goto label28;

        $r41 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClass lookupObjectMetaClass(java.lang.Object)>($r22);

        $r42 = interfaceinvoke $r41.<groovy.lang.MetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r83, $r28);

        r85 = $r42;

        if $r42 == null goto label28;

        $r43 = interfaceinvoke $r41.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r22, r83, r2);

        return $r43;

     label28:
        if r85 != null goto label49;

        if $i0 == 4 goto label49;

        r93 = null;

        if $r27 == r86 goto label32;

        $z7 = $r27 instanceof groovy.lang.GroovyObject;

        if $z7 == 0 goto label32;

     label29:
        $r40 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethodOnGroovyObject(java.lang.String,java.lang.Object[],java.lang.Object)>(r83, r2, $r27);

     label30:
        return $r40;

     label31:
        $r82 := @caughtexception;

        if null != null goto label32;

        r93 = $r82;

     label32:
        if z17 == 0 goto label36;

        $z6 = $r22 instanceof groovy.lang.GroovyObject;

        if $z6 == 0 goto label36;

     label33:
        $r39 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethodOnGroovyObject(java.lang.String,java.lang.Object[],java.lang.Object)>(r83, r2, $r22);

     label34:
        return $r39;

     label35:
        $r81 := @caughtexception;

        r93 = $r81;

     label36:
        if r93 == null goto label37;

        $r38 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.RuntimeException)>(r1, r83, r2, r93);

        return $r38;

     label37:
        goto label49;

     label38:
        if r85 != null goto label39;

        if $r22 == r86 goto label39;

        $r53 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClass lookupObjectMetaClass(java.lang.Object)>($r22);

        $r54 = interfaceinvoke $r53.<groovy.lang.MetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r83, $r28);

        r85 = $r54;

        if $r54 == null goto label39;

        $r55 = interfaceinvoke $r53.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r22, r83, r2);

        return $r55;

     label39:
        if r85 != null goto label40;

        if $r27 == r86 goto label40;

        if $r27 == null goto label40;

        $r50 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClass lookupObjectMetaClass(java.lang.Object)>($r27);

        $r51 = interfaceinvoke $r50.<groovy.lang.MetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r83, $r28);

        r85 = $r51;

        if $r51 == null goto label40;

        $r52 = interfaceinvoke $r50.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r27, r83, r2);

        return $r52;

     label40:
        if r85 != null goto label49;

        if $i0 == 4 goto label49;

        r94 = null;

        if z17 == 0 goto label44;

        $z9 = $r22 instanceof groovy.lang.GroovyObject;

        if $z9 == 0 goto label44;

     label41:
        $r49 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethodOnGroovyObject(java.lang.String,java.lang.Object[],java.lang.Object)>(r83, r2, $r22);

     label42:
        return $r49;

     label43:
        $r80 := @caughtexception;

        if null != null goto label44;

        r94 = $r80;

     label44:
        if $r27 == r86 goto label48;

        $z8 = $r27 instanceof groovy.lang.GroovyObject;

        if $z8 == 0 goto label48;

     label45:
        $r48 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethodOnGroovyObject(java.lang.String,java.lang.Object[],java.lang.Object)>(r83, r2, $r27);

     label46:
        return $r48;

     label47:
        $r79 := @caughtexception;

        r94 = $r79;

     label48:
        if r94 == null goto label49;

        $r47 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.RuntimeException)>(r1, r83, r2, r94);

        return $r47;

     label49:
        if r85 == null goto label50;

        $r21 = virtualinvoke r85.<groovy.lang.MetaMethod: java.lang.Object doMethodInvoke(java.lang.Object,java.lang.Object[])>(r1, r3);

        return $r21;

     label50:
        r95 = null;

        $r6 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r7 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty getMetaProperty(org.codehaus.groovy.reflection.CachedClass,java.lang.String,boolean,boolean)>($r6, r83, 0, 0);

        if $r7 == null goto label51;

        r95 = virtualinvoke $r7.<groovy.lang.MetaProperty: java.lang.Object getProperty(java.lang.Object)>(r1);

        goto label52;

     label51:
        $z1 = r1 instanceof java.util.Map;

        if $z1 == 0 goto label52;

        $r20 = (java.util.Map) r1;

        r95 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r83);

     label52:
        $z18 = r95 instanceof groovy.lang.Closure;

        if $z18 == 0 goto label53;

        r96 = (groovy.lang.Closure) r95;

        $r17 = virtualinvoke r96.<groovy.lang.Closure: groovy.lang.MetaClass getMetaClass()>();

        $r18 = virtualinvoke r96.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = interfaceinvoke $r17.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean,boolean)>($r18, r96, "doCall", r2, 0, z3);

        return $r19;

     label53:
        $z2 = r1 instanceof groovy.lang.Script;

        if $z2 == 0 goto label54;

        $r9 = (groovy.lang.Script) r1;

        $r10 = virtualinvoke $r9.<groovy.lang.Script: groovy.lang.Binding getBinding()>();

        $r11 = virtualinvoke $r10.<groovy.lang.Binding: java.util.Map getVariables()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r83);

        if $r12 == null goto label54;

        $r13 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r14 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = interfaceinvoke $r13.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r14);

        $r16 = interfaceinvoke $r15.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r12, "call", r2);

        return $r16;

     label54:
        $r8 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r83, r2);

        return $r8;

        catch groovy.lang.MissingMethodException from label29 to label30 with label31;
        catch groovy.lang.MissingMethodException from label33 to label34 with label35;
        catch groovy.lang.MissingMethodException from label41 to label42 with label43;
        catch groovy.lang.MissingMethodException from label45 to label46 with label47;
    }

    private groovy.lang.MetaClass lookupObjectMetaClass(java.lang.Object)
    {
        groovy.lang.MetaClass $r5, $r6;
        groovy.lang.GroovyObject r7;
        groovy.lang.MetaClassImpl r3;
        groovy.lang.MetaClassRegistry $r4;
        java.lang.Object r0;
        java.lang.Class $r1, $r2, r8, $r9;
        boolean $z0;

        r3 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.lang.GroovyObject;

        if $z0 == 0 goto label1;

        r7 = (groovy.lang.GroovyObject) r0;

        $r6 = interfaceinvoke r7.<groovy.lang.GroovyObject: groovy.lang.MetaClass getMetaClass()>();

        return $r6;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r8 = $r1;

        $r2 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r2 != null goto label2;

        $r9 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r9;

        goto label3;

     label2:
        $r9 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label3:
        if $r1 != $r9 goto label4;

        r8 = (java.lang.Class) r0;

     label4:
        $r4 = r3.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r5 = interfaceinvoke $r4.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r8);

        return $r5;
    }

    private java.lang.Object invokeMethodOnGroovyObject(java.lang.String, java.lang.Object[], java.lang.Object)
    {
        groovy.lang.GroovyObject r1;
        java.lang.Object[] r3;
        groovy.lang.MetaClassImpl r5;
        java.lang.Object r0, $r4;
        java.lang.String r2;

        r5 := @this: groovy.lang.MetaClassImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        r0 := @parameter2: java.lang.Object;

        r1 = (groovy.lang.GroovyObject) r0;

        $r4 = interfaceinvoke r1.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r2, r3);

        return $r4;
    }

    public groovy.lang.MetaMethod getMethodWithCaching(java.lang.Class, java.lang.String, java.lang.Object[], boolean)
    {
        java.lang.Object[] r5;
        java.lang.Class[] $r6;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r4;
        groovy.lang.MetaMethod $r7, $r8;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r3;
        java.lang.Class r1;
        java.lang.String r2;
        boolean $z0, z1;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object[];

        z1 := @parameter3: boolean;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: boolean hasCategoryInAnyThread()>();

        if $z0 == 0 goto label1;

        if z1 != 0 goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r5);

        $r7 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getMethodWithoutCaching(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>(r1, r2, $r6, z1);

        return $r7;

     label1:
        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getMethods(java.lang.Class,java.lang.String)>(r1, r2);

        if $r4 != null goto label2;

        return null;

     label2:
        if z1 == 0 goto label3;

        $r8 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getSuperMethodWithCaching(java.lang.Object[],org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)>(r5, $r4);

        goto label4;

     label3:
        $r8 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getNormalMethodWithCaching(java.lang.Object[],org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)>(r5, $r4);

     label4:
        return $r8;
    }

    private groovy.lang.MetaMethod getSuperMethodWithCaching(java.lang.Object[], org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)
    {
        java.lang.Object[] r2;
        java.lang.String $r11;
        boolean $z0, $z1, $z2;
        java.lang.Class[] $r6, $r10;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry r7, $r9;
        groovy.lang.MetaMethod $r4, r8, $r14, $r15;
        groovy.lang.MetaClassImpl r3;
        java.lang.Object $r1, $r5, $r12, $r13;

        r3 := @this: groovy.lang.MetaClassImpl;

        r2 := @parameter0: java.lang.Object[];

        r0 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        if $r1 != null goto label1;

        return null;

     label1:
        r7 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethodForSuper>;

        if r7 == null goto label2;

        $r6 = r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: java.lang.Class[] params>;

        $r5 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        $z0 = $r5 instanceof groovy.lang.MetaMethod;

        $z1 = specialinvoke r3.<groovy.lang.MetaClassImpl: boolean sameClasses(java.lang.Class[],java.lang.Object[],boolean)>($r6, r2, $z0);

        if $z1 == 0 goto label2;

        r8 = r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method>;

        if r8 == null goto label2;

        return r8;

     label2:
        $r9 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry;

        specialinvoke $r9.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: void <init>()>();

        $r10 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r2);

        $r9.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: java.lang.Class[] params> = $r10;

        $r11 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $r12 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        $r13 = specialinvoke r3.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>($r11, $r12, $r10, 0);

        $r14 = (groovy.lang.MetaMethod) $r13;

        $r9.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method> = $r14;

        $r15 = $r9.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method>;

        $z2 = virtualinvoke $r15.<groovy.lang.MetaMethod: boolean isAbstract()>();

        if $z2 == 0 goto label3;

        $r9.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method> = null;

     label3:
        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethodForSuper> = $r9;

        $r4 = $r9.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method>;

        return $r4;
    }

    private groovy.lang.MetaMethod getNormalMethodWithCaching(java.lang.Object[], org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)
    {
        java.lang.Object[] r2;
        java.lang.Class[] $r4, $r8;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry r5, $r7;
        groovy.lang.MetaMethod r6, $r11, $r12;
        groovy.lang.MetaClassImpl r3;
        java.lang.Object r1, $r10;
        java.lang.String $r9;
        boolean $z0, $z1;

        r3 := @this: groovy.lang.MetaClassImpl;

        r2 := @parameter0: java.lang.Object[];

        r0 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        if r1 != null goto label1;

        return null;

     label1:
        r5 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethod>;

        if r5 == null goto label2;

        $r4 = r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: java.lang.Class[] params>;

        $z0 = r1 instanceof groovy.lang.MetaMethod;

        $z1 = specialinvoke r3.<groovy.lang.MetaClassImpl: boolean sameClasses(java.lang.Class[],java.lang.Object[],boolean)>($r4, r2, $z0);

        if $z1 == 0 goto label2;

        r6 = r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method>;

        if r6 == null goto label2;

        return r6;

     label2:
        $r7 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry;

        specialinvoke $r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: void <init>()>();

        $r8 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r2);

        $r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: java.lang.Class[] params> = $r8;

        $r9 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $r10 = specialinvoke r3.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>($r9, r1, $r8, 0);

        $r11 = (groovy.lang.MetaMethod) $r10;

        $r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method> = $r11;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethod> = $r7;

        $r12 = $r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method>;

        return $r12;
    }

    private boolean sameClasses(java.lang.Class[], java.lang.Object[], boolean)
    {
        java.lang.Object[] r1;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r5;
        int $i0, $i1, $i2, i3, $i5;
        boolean z0, $z1;
        java.lang.Class[] r0;
        groovy.lang.MetaClassImpl r8;
        java.lang.Object r2;
        java.lang.Class $r3, $r4, $r6, $r7;

        r8 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Class[];

        r1 := @parameter1: java.lang.Object[];

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        return 0;

     label1:
        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label2;

        return 0;

     label2:
        $i2 = lengthof r0;

        i3 = $i2 - 1;

     label3:
        if i3 < 0 goto label7;

        r2 = r1[i3];

        if r2 == null goto label5;

        $z1 = r2 instanceof org.codehaus.groovy.runtime.wrappers.Wrapper;

        if $z1 == 0 goto label4;

        $r6 = r0[i3];

        $r5 = (org.codehaus.groovy.runtime.wrappers.Wrapper) r2;

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.runtime.wrappers.Wrapper: java.lang.Class getType()>();

        if $r6 == $r7 goto label6;

        return 0;

     label4:
        $r3 = r0[i3];

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label6;

        return 0;

     label5:
        if z0 != 0 goto label6;

        return 0;

     label6:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label3;

     label7:
        return 1;
    }

    public java.lang.reflect.Constructor retrieveConstructor(java.lang.Class[])
    {
        java.lang.Class[] r1;
        java.lang.reflect.Constructor $r6, $r7;
        org.codehaus.groovy.reflection.CachedConstructor r8, r9;
        groovy.lang.MetaClassImpl r0;
        java.lang.Object $r3, $r5;
        org.codehaus.groovy.reflection.FastArray $r2, $r4;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Class[];

        $r2 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>("<init>", $r2, r1, 0);

        r8 = (org.codehaus.groovy.reflection.CachedConstructor) $r3;

        if r8 == null goto label1;

        $r7 = r8.<org.codehaus.groovy.reflection.CachedConstructor: java.lang.reflect.Constructor cachedConstructor>;

        return $r7;

     label1:
        $r4 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r5 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>("<init>", $r4, r1, 1);

        r9 = (org.codehaus.groovy.reflection.CachedConstructor) $r5;

        if r9 == null goto label2;

        $r6 = r9.<org.codehaus.groovy.reflection.CachedConstructor: java.lang.reflect.Constructor cachedConstructor>;

        return $r6;

     label2:
        return null;
    }

    public groovy.lang.MetaMethod retrieveStaticMethod(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r5;
        java.lang.String r1;
        boolean $z0, $z1;
        java.lang.Class[] $r6, $r9, $r13;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry r10, $r12;
        groovy.lang.MetaMethod $r7, r11, $r14, $r15;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r3;
        java.lang.Class $r2;
        java.lang.Object $r8;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object[];

        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r2 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getMethods(java.lang.Class,java.lang.String)>($r2, r1);

        if $r4 == null goto label2;

        r10 = $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedStaticMethod>;

        if r10 == null goto label1;

        $r9 = r10.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: java.lang.Class[] params>;

        $r8 = $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object staticMethods>;

        $z0 = $r8 instanceof groovy.lang.MetaMethod;

        $z1 = specialinvoke r0.<groovy.lang.MetaClassImpl: boolean sameClasses(java.lang.Class[],java.lang.Object[],boolean)>($r9, r5, $z0);

        if $z1 == 0 goto label1;

        r11 = r10.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method>;

        if r11 == null goto label1;

        return r11;

     label1:
        $r12 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry;

        specialinvoke $r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: void <init>()>();

        $r13 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r5);

        $r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: java.lang.Class[] params> = $r13;

        $r14 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod pickStaticMethod(java.lang.String,java.lang.Class[])>(r1, $r13);

        $r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method> = $r14;

        $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedStaticMethod> = $r12;

        $r15 = $r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry: groovy.lang.MetaMethod method>;

        return $r15;

     label2:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r5);

        $r7 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod pickStaticMethod(java.lang.String,java.lang.Class[])>(r1, $r6);

        return $r7;
    }

    public groovy.lang.MetaMethod getMethodWithoutCaching(java.lang.Class, java.lang.String, java.lang.Class[], boolean)
    {
        java.lang.Class[] r4;
        groovy.lang.MetaMethod r6;
        groovy.lang.MetaClassImpl r0;
        java.lang.Class r1;
        java.lang.Object $r3, $r5;
        java.lang.String r2;
        boolean z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Class[];

        z0 := @parameter3: boolean;

        r6 = null;

        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getMethods(java.lang.Class,java.lang.String,boolean)>(r1, r2, z0);

        if $r3 == null goto label1;

        $r5 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>(r2, $r3, r4, 0);

        r6 = (groovy.lang.MetaMethod) $r5;

     label1:
        return r6;
    }

    public java.lang.Object invokeStaticMethod(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        groovy.lang.MissingPropertyException $r31, $r32;
        boolean $z0, $z1, $z2;
        groovy.lang.MetaMethod $r6, $r20;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r14, $r18, $r28;
        java.lang.Object[] $r10, r33, r37;
        java.lang.String r5;
        groovy.lang.MetaClass $r16, $r19, $r29;
        java.lang.Class[] $r11;
        java.lang.Object r1, $r9, $r13, $r17, $r21, $r22, $r24, $r25, $r26, $r30, r36;
        java.lang.Class r2, $r3, $r4, $r7, $r8, $r12, $r15, $r23, $r27, $r34, $r35, r38, $r39;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.String;

        r33 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        $z0 = r1 instanceof java.lang.Class;

        if $z0 == 0 goto label01;

        $r34 = (java.lang.Class) r1;

        goto label02;

     label01:
        $r34 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        r2 = $r34;

        $r3 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        if $r34 == $r3 goto label03;

        $r28 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r29 = interfaceinvoke $r28.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r34);

        $r30 = interfaceinvoke $r29.<groovy.lang.MetaClass: java.lang.Object invokeStaticMethod(java.lang.Object,java.lang.String,java.lang.Object[])>($r34, r5, r33);

        return $r30;

     label03:
        $r27 = $r34;

        $r4 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r4 != null goto label04;

        $r35 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r35;

        goto label05;

     label04:
        $r35 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label05:
        if $r27 != $r35 goto label06;

        $r26 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r5, r33);

        return $r26;

     label06:
        if r33 != null goto label07;

        r33 = <groovy.lang.MetaClassImpl: java.lang.Object[] EMPTY_ARGUMENTS>;

     label07:
        $r6 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod retrieveStaticMethod(java.lang.String,java.lang.Object[])>(r5, r33);

        if $r6 == null goto label08;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void unwrap(java.lang.Object[])>(r33);

        $r25 = virtualinvoke $r6.<groovy.lang.MetaMethod: java.lang.Object doMethodInvoke(java.lang.Object,java.lang.Object[])>(r1, r33);

        return $r25;

     label08:
        r36 = null;

     label09:
        $r8 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r7 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        r36 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>($r8, $r7, r5, 0, 0);

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;

     label12:
        $z1 = r36 instanceof groovy.lang.Closure;

        if $z1 == 0 goto label13;

        $r24 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeStaticClosureProperty(java.lang.Object[],java.lang.Object)>(r33, r36);

        return $r24;

     label13:
        $r9 = virtualinvoke r33.<java.lang.Object: java.lang.Object clone()>();

        $r10 = (java.lang.Object[]) $r9;

        r37 = (java.lang.Object[]) $r10;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void unwrap(java.lang.Object[])>(r33);

        r38 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r11 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r33);

     label14:
        $r23 = r38;

        $r12 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object>;

        if $r12 != null goto label15;

        $r39 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object> = $r39;

        goto label16;

     label15:
        $r39 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object>;

     label16:
        if $r23 == $r39 goto label22;

        if r38 == null goto label22;

        $r18 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r19 = interfaceinvoke $r18.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r38);

        $r20 = interfaceinvoke $r19.<groovy.lang.MetaClass: groovy.lang.MetaMethod getStaticMetaMethod(java.lang.String,java.lang.Object[])>(r5, $r11);

        if $r20 == null goto label17;

        $r22 = virtualinvoke $r20.<groovy.lang.MetaMethod: java.lang.Object doMethodInvoke(java.lang.Object,java.lang.Object[])>(r1, r33);

        return $r22;

     label17:
        r36 = interfaceinvoke $r19.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>(r38, r38, r5, 0, 0);

     label18:
        goto label20;

     label19:
        $r31 := @caughtexception;

     label20:
        $z2 = r36 instanceof groovy.lang.Closure;

        if $z2 == 0 goto label21;

        $r21 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeStaticClosureProperty(java.lang.Object[],java.lang.Object)>(r37, r36);

        return $r21;

     label21:
        r38 = virtualinvoke r38.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label14;

     label22:
        if r36 == null goto label23;

        $r14 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r15 = virtualinvoke r36.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = interfaceinvoke $r14.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r15);

        $r17 = interfaceinvoke $r16.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r36, "call", r33);

        return $r17;

     label23:
        $r13 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeStaticMissingMethod(java.lang.Class,java.lang.String,java.lang.Object[])>(r2, r5, r33);

        return $r13;

        catch groovy.lang.MissingPropertyException from label09 to label10 with label11;
        catch groovy.lang.MissingPropertyException from label17 to label18 with label19;
    }

    private java.lang.Object invokeStaticClosureProperty(java.lang.Object[], java.lang.Object)
    {
        groovy.lang.MetaClass $r2;
        java.lang.Object[] r4;
        groovy.lang.MetaClassImpl r6;
        groovy.lang.Closure r1;
        java.lang.Object r0, $r5;
        java.lang.Class $r3;

        r6 := @this: groovy.lang.MetaClassImpl;

        r4 := @parameter0: java.lang.Object[];

        r0 := @parameter1: java.lang.Object;

        r1 = (groovy.lang.Closure) r0;

        $r2 = virtualinvoke r1.<groovy.lang.Closure: groovy.lang.MetaClass getMetaClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean,boolean)>($r3, r1, "doCall", r4, 0, 0);

        return $r5;
    }

    private java.lang.Object invokeStaticMissingMethod(java.lang.Class, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r6, $r7;
        groovy.lang.MissingMethodException $r3;
        java.lang.Class[] $r1;
        groovy.lang.MetaMethod $r2;
        groovy.lang.MetaClassImpl r0;
        java.lang.Class r5;
        java.lang.Object $r8;
        java.lang.String r4;

        r0 := @this: groovy.lang.MetaClassImpl;

        r5 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object[];

        $r1 = <groovy.lang.MetaClassImpl: java.lang.Class[] METHOD_MISSING_ARGS>;

        $r2 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getStaticMetaMethod(java.lang.String,java.lang.Object[])>("$static_methodMissing", $r1);

        if $r2 == null goto label1;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r4;

        $r7[1] = r6;

        $r8 = virtualinvoke $r2.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r5, $r7);

        return $r8;

     label1:
        $r3 = new groovy.lang.MissingMethodException;

        specialinvoke $r3.<groovy.lang.MissingMethodException: void <init>(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>(r4, r5, r6, 1);

        throw $r3;
    }

    private groovy.lang.MetaMethod pickStaticMethod(java.lang.String, java.lang.Class[])
    {
        java.lang.String r1;
        org.codehaus.groovy.reflection.FastArray $r13;
        boolean $z0, $z1;
        groovy.lang.MetaClass $r12;
        org.codehaus.groovy.runtime.metaclass.MethodSelectionException $r14, r16;
        java.lang.Class[] r4, $r6;
        groovy.lang.MetaMethod r15;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r11;
        java.lang.Class $r2, $r8, $r9, $r10, $r17, $r18;
        java.lang.Object $r3, $r5, $r7;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class[];

        r15 = null;

        r16 = null;

        $r2 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getStaticMethods(java.lang.Class,java.lang.String)>($r2, r1);

        $z0 = $r3 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label01;

        $r13 = (org.codehaus.groovy.reflection.FastArray) $r3;

        $z1 = virtualinvoke $r13.<org.codehaus.groovy.reflection.FastArray: boolean isEmpty()>();

        if $z1 != 0 goto label04;

     label01:
        $r5 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>(r1, $r3, r4, 0);

        r15 = (groovy.lang.MetaMethod) $r5;

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

        r16 = $r14;

     label04:
        if r15 != null goto label09;

        $r9 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r8 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r8 != null goto label05;

        $r17 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r17;

        goto label06;

     label05:
        $r17 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label06:
        if $r9 == $r17 goto label09;

        $r11 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r10 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r10 != null goto label07;

        $r18 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r18;

        goto label08;

     label07:
        $r18 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label08:
        $r12 = interfaceinvoke $r11.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r18);

        r15 = interfaceinvoke $r12.<groovy.lang.MetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r1, r4);

     label09:
        if r15 != null goto label10;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r4);

        $r7 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>(r1, $r3, $r6, 1);

        r15 = (groovy.lang.MetaMethod) $r7;

     label10:
        if r15 != null goto label11;

        if r16 == null goto label11;

        throw r16;

     label11:
        return r15;

        catch org.codehaus.groovy.runtime.metaclass.MethodSelectionException from label01 to label02 with label03;
    }

    public java.lang.Object invokeConstructorAt(java.lang.Class, java.lang.Object[])
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r1;
        java.lang.Object $r2;
        java.lang.Class r3;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object[];

        $r2 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeConstructor(java.lang.Object[])>(r1);

        return $r2;
    }

    public java.lang.Object invokeConstructor(java.lang.Object[])
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r1;
        java.lang.Class $r2;
        java.lang.Object $r3;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[])>($r2, r1);

        return $r3;
    }

    public int selectConstructorAndTransformArguments(int, java.lang.Object[])
    {
        groovy.lang.GroovyRuntimeException $r41;
        java.util.List $r7;
        groovy.lang.MetaClassImpl$3 $r43;
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] r36;
        java.util.ArrayList $r42;
        java.lang.StringBuffer $r12, $r15, $r16, $r18, $r19, $r26, $r29, $r30, $r31, $r32, $r34, $r38, $r40;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9;
        java.lang.String $r14, $r17, $r20, $r28, $r35;
        org.codehaus.groovy.reflection.FastArray $r1, $r3, $r6, $r21, $r33;
        java.lang.IncompatibleClassChangeError $r39;
        java.lang.Class[] $r2;
        org.codehaus.groovy.reflection.CachedConstructor $r23, r37;
        java.lang.Object $r4, $r9, $r22;
        java.lang.Class $r13, $r27;

        r0 := @this: groovy.lang.MetaClassImpl;

        i0 := @parameter0: int;

        r36 := @parameter1: java.lang.Object[];

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $i1 = virtualinvoke $r1.<org.codehaus.groovy.reflection.FastArray: int size()>();

        if i0 == $i1 goto label1;

        $r39 = new java.lang.IncompatibleClassChangeError;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("the number of constructors during runtime and compile time for ");

        $r27 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" do not match. Expected ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but got ");

        $r33 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $i5 = virtualinvoke $r33.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>($r35);

        throw $r39;

     label1:
        if r36 != null goto label2;

        r36 = <groovy.lang.MetaClassImpl: java.lang.Object[] EMPTY_ARGUMENTS>;

     label2:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r36);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void unwrap(java.lang.Object[])>(r36);

        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r4 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>("<init>", $r3, $r2, 0);

        $r23 = (org.codehaus.groovy.reflection.CachedConstructor) $r4;

        r37 = $r23;

        if $r23 != null goto label3;

        $r21 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r22 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>("<init>", $r21, $r2, 1);

        r37 = (org.codehaus.groovy.reflection.CachedConstructor) $r22;

     label3:
        if r37 != null goto label4;

        $r41 = new groovy.lang.GroovyRuntimeException;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find matching constructor for: ");

        $r13 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r17 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toTypeString(java.lang.Object[])>(r36);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r41.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r20);

        throw $r41;

     label4:
        $r42 = new java.util.ArrayList;

        $r6 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.reflection.FastArray: java.util.List toList()>();

        specialinvoke $r42.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        $r43 = new groovy.lang.MetaClassImpl$3;

        specialinvoke $r43.<groovy.lang.MetaClassImpl$3: void <init>(groovy.lang.MetaClassImpl)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r42, $r43);

        $i9 = (int) -1;

        i6 = $i9;

        i7 = 0;

     label5:
        $i2 = interfaceinvoke $r42.<java.util.List: int size()>();

        if i7 >= $i2 goto label8;

        $r9 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(i7);

        if $r9 == r37 goto label6;

        goto label7;

     label6:
        i6 = i7;

        goto label8;

     label7:
        i7 = i7 + 1;

        goto label5;

     label8:
        $i3 = i6 << 8;

        $i4 = 0 | $i3;

        return $i4;
    }

    protected void checkInitalised()
    {
        java.lang.IllegalStateException $r1;
        groovy.lang.MetaClassImpl r0;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        java.lang.Class $r4, $r7;
        java.lang.String $r13;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $z0 = virtualinvoke r0.<groovy.lang.MetaClassImpl: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("initialize must be called for meta class of ");

        $r4 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("to complete initialisation process ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("before any invocation or field/property ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("access can be done");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r1;

     label1:
        return;
    }

    private java.lang.Object invokeConstructor(java.lang.Class, java.lang.Object[])
    {
        java.util.Map $r13;
        boolean $z0;
        groovy.lang.GroovyRuntimeException $r20;
        groovy.lang.MetaClassImpl r0;
        java.lang.Object[] $r11, r17;
        java.lang.StringBuffer $r21, $r22, $r25, $r26, $r28, $r29;
        int $i0;
        java.lang.String $r24, $r27, $r30;
        org.codehaus.groovy.reflection.FastArray $r2, $r4, $r8;
        java.lang.Class[] $r1, $r7;
        org.codehaus.groovy.reflection.CachedConstructor $r16, r18, r19;
        java.lang.Object $r3, $r5, r6, $r9, $r12, $r14, $r15;
        java.lang.Class r10, $r23;

        r0 := @this: groovy.lang.MetaClassImpl;

        r10 := @parameter0: java.lang.Class;

        r17 := @parameter1: java.lang.Object[];

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        if r17 != null goto label1;

        r17 = <groovy.lang.MetaClassImpl: java.lang.Object[] EMPTY_ARGUMENTS>;

     label1:
        $r1 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r17);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void unwrap(java.lang.Object[])>(r17);

        $r2 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>("<init>", $r2, $r1, 0);

        $r16 = (org.codehaus.groovy.reflection.CachedConstructor) $r3;

        if $r16 == null goto label2;

        $r15 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Object doConstructorInvoke(java.lang.Class,org.codehaus.groovy.reflection.CachedConstructor,java.lang.Object[],boolean)>(r10, $r16, r17, 1);

        return $r15;

     label2:
        $r4 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r5 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>("<init>", $r4, $r1, 1);

        r18 = (org.codehaus.groovy.reflection.CachedConstructor) $r5;

        if r18 == null goto label3;

        $r14 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Object doConstructorInvoke(java.lang.Class,org.codehaus.groovy.reflection.CachedConstructor,java.lang.Object[],boolean)>(r10, r18, r17, 1);

        return $r14;

     label3:
        $i0 = lengthof r17;

        if $i0 != 1 goto label4;

        r6 = r17[0];

        $z0 = r6 instanceof java.util.Map;

        if $z0 == 0 goto label4;

        $r8 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.FastArray constructors>;

        $r7 = <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] EMPTY_TYPE_ARRAY>;

        $r9 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object chooseMethod(java.lang.String,java.lang.Object,java.lang.Class[],boolean)>("<init>", $r8, $r7, 0);

        r19 = (org.codehaus.groovy.reflection.CachedConstructor) $r9;

        if r19 == null goto label4;

        $r11 = <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object[] EMPTY_ARRAY>;

        $r12 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Object doConstructorInvoke(java.lang.Class,org.codehaus.groovy.reflection.CachedConstructor,java.lang.Object[],boolean)>(r10, r19, $r11, 1);

        $r13 = (java.util.Map) r6;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void setProperties(java.lang.Object,java.util.Map)>($r12, $r13);

        return $r12;

     label4:
        $r20 = new groovy.lang.GroovyRuntimeException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find matching constructor for: ");

        $r23 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r27 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toTypeString(java.lang.Object[])>(r17);

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r30);

        throw $r20;
    }

    public void setProperties(java.lang.Object, java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        groovy.lang.MetaClassImpl r0;
        java.util.Map r1;
        java.lang.Object $r4, $r6, $r8, r9;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r9 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Map;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r9, $r7, $r8);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object getProperty(java.lang.Class, java.lang.Object, java.lang.String, boolean, boolean)
    {
        java.util.Map $r11, $r38;
        groovy.lang.MetaMethod $r26, $r27, $r29, $r37, r47, r54;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r22, $r42;
        java.lang.Object[] $r15, $r16, $r28, $r30, r48;
        java.lang.StringBuffer $r32, $r33, $r35;
        java.lang.String r5, $r34, $r36;
        groovy.lang.MetaClass $r23, $r43;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z14, $z15;
        java.util.Collection $r19;
        org.codehaus.groovy.reflection.CachedClass $r4;
        java.util.List $r17, $r18, $r20;
        groovy.lang.MetaBeanProperty r50;
        groovy.lang.MetaProperty $r6, r49;
        java.lang.IllegalArgumentException $r45;
        java.lang.Class $r1, $r2, r3, $r9, $r10, $r21, $r24, $r40, $r41, $r46, $r51, $r52, $r53;
        java.lang.Object r7, $r8, $r12, $r13, $r14, $r25, $r31, $r39, $r44;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.Class;

        r7 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        z12 := @parameter4: boolean;

        $r2 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r1 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r1 != null goto label01;

        $r46 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r46;

        goto label02;

     label01:
        $r46 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label02:
        if $r2 == $r46 goto label03;

        $z11 = r7 instanceof java.lang.Class;

        if $z11 == 0 goto label03;

        $z15 = 1;

        $z14 = 1;

        goto label04;

     label03:
        $z15 = 0;

        $z14 = 0;

     label04:
        z0 = $z14;

        if $z15 == 0 goto label05;

        $r40 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        if r7 == $r40 goto label05;

        $r42 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r41 = (java.lang.Class) r7;

        $r43 = interfaceinvoke $r42.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r41);

        $r44 = interfaceinvoke $r43.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>(r3, r7, r5, z1, 0);

        return $r44;

     label05:
        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        if z0 != 0 goto label06;

        $z10 = r0.<groovy.lang.MetaClassImpl: boolean isMap>;

        if $z10 == 0 goto label06;

        $r38 = (java.util.Map) r7;

        $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        return $r39;

     label06:
        r47 = null;

        r48 = <groovy.lang.MetaClassImpl: java.lang.Object[] EMPTY_ARGUMENTS>;

        $r4 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r3);

        $r6 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty getMetaProperty(org.codehaus.groovy.reflection.CachedClass,java.lang.String,boolean,boolean)>($r4, r5, z1, z0);

        r49 = $r6;

        if $r6 == null goto label07;

        $z9 = $r6 instanceof groovy.lang.MetaBeanProperty;

        if $z9 == 0 goto label07;

        r50 = (groovy.lang.MetaBeanProperty) $r6;

        r47 = virtualinvoke r50.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        r49 = virtualinvoke r50.<groovy.lang.MetaBeanProperty: org.codehaus.groovy.reflection.CachedField getField()>();

     label07:
        if z1 != 0 goto label08;

        if z0 != 0 goto label08;

        $z8 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: boolean hasCategoryInAnyThread()>();

        if $z8 == 0 goto label08;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("get");

        $r34 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.String capitalize(java.lang.String)>(r5);

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getCategoryMethodGetter(java.lang.Class,java.lang.String,boolean)>(r3, $r36, 0);

        if $r37 == null goto label08;

        r47 = $r37;

     label08:
        if r47 != null goto label12;

        if r49 == null goto label12;

     label09:
        $r31 = virtualinvoke r49.<groovy.lang.MetaProperty: java.lang.Object getProperty(java.lang.Object)>(r7);

     label10:
        return $r31;

     label11:
        $r45 := @caughtexception;

     label12:
        if r47 != null goto label13;

        if z1 != 0 goto label13;

        if z0 != 0 goto label13;

        $z7 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: boolean hasCategoryInAnyThread()>();

        if $z7 == 0 goto label13;

        $r29 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getCategoryMethodGetter(java.lang.Class,java.lang.String,boolean)>(r3, "get", 1);

        r47 = $r29;

        if $r29 == null goto label13;

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = r5;

        r48 = $r30;

     label13:
        if r47 != null goto label15;

        $r26 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericGetMethod>;

        if $r26 == null goto label15;

        $r27 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericGetMethod>;

        $z6 = virtualinvoke $r27.<groovy.lang.MetaMethod: boolean isStatic()>();

        if $z6 != 0 goto label14;

        if z0 != 0 goto label15;

     label14:
        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = r5;

        r48 = $r28;

        r47 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericGetMethod>;

     label15:
        if r47 != null goto label26;

        $r10 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r9 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r9 != null goto label16;

        $r51 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r51;

        goto label17;

     label16:
        $r51 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label17:
        if $r10 == $r51 goto label22;

        $z5 = r7 instanceof java.lang.Class;

        if $z5 == 0 goto label22;

        $r22 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r21 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r21 != null goto label18;

        $r52 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r52;

        goto label19;

     label18:
        $r52 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label19:
        $r23 = interfaceinvoke $r22.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r52);

        $r24 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r24 != null goto label20;

        $r53 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r53;

        goto label21;

     label20:
        $r53 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label21:
        $r25 = interfaceinvoke $r23.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>($r53, r7, r5, z1, 0);

        return $r25;

     label22:
        $z2 = r7 instanceof java.util.Collection;

        if $z2 == 0 goto label23;

        $r19 = (java.util.Collection) r7;

        $r20 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List getAt(java.util.Collection,java.lang.String)>($r19, r5);

        return $r20;

     label23:
        $z3 = r7 instanceof java.lang.Object[];

        if $z3 == 0 goto label24;

        $r15 = (java.lang.Object[]) r7;

        $r16 = (java.lang.Object[]) $r15;

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16);

        $r18 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List getAt(java.util.Collection,java.lang.String)>($r17, r5);

        return $r18;

     label24:
        $r11 = r0.<groovy.lang.MetaClassImpl: java.util.Map listeners>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r54 = (groovy.lang.MetaMethod) $r12;

        if r54 == null goto label25;

        return null;

     label25:
        goto label27;

     label26:
        $r8 = virtualinvoke r47.<groovy.lang.MetaMethod: java.lang.Object doMethodInvoke(java.lang.Object,java.lang.Object[])>(r7, r48);

        return $r8;

     label27:
        if z0 != 0 goto label28;

        $z4 = r7 instanceof java.lang.Class;

        if $z4 == 0 goto label29;

     label28:
        $r13 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeStaticMissingProperty(java.lang.Object,java.lang.String,java.lang.Object,boolean)>(r7, r5, null, 1);

        return $r13;

     label29:
        $r14 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingProperty(java.lang.Object,java.lang.String,java.lang.Object,boolean)>(r7, r5, null, 1);

        return $r14;

        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
    }

    private groovy.lang.MetaMethod getCategoryMethodGetter(java.lang.Class, java.lang.String, boolean)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r6;
        int $i0, $i1;
        java.lang.String r1;
        boolean $z0, z1;
        java.util.Iterator $r3;
        org.codehaus.groovy.reflection.CachedClass $r7;
        java.util.List $r2;
        groovy.lang.MetaMethod r5;
        groovy.lang.MetaClassImpl r10;
        java.lang.Class r0, $r8, $r9, $r11;
        java.lang.Object $r4;

        r10 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: java.util.List getCategoryMethods(java.lang.Class,java.lang.String)>(r0, r1);

        if $r2 == null goto label6;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (groovy.lang.MetaMethod) $r4;

        $r6 = virtualinvoke r5.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        if z1 == 0 goto label4;

        $i1 = lengthof $r6;

        if $i1 != 1 goto label5;

        $r7 = $r6[0];

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r9 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label2;

        $r11 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String> = $r11;

        goto label3;

     label2:
        $r11 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

     label3:
        if $r8 != $r11 goto label5;

        return r5;

     label4:
        $i0 = lengthof $r6;

        if $i0 != 0 goto label5;

        return r5;

     label5:
        goto label1;

     label6:
        return null;
    }

    private groovy.lang.MetaMethod getCategoryMethodSetter(java.lang.Class, java.lang.String, boolean)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r6;
        int $i0, $i1;
        java.lang.String r1;
        boolean $z0, z1;
        java.util.Iterator $r3;
        org.codehaus.groovy.reflection.CachedClass $r7;
        java.util.List $r2;
        groovy.lang.MetaMethod r5;
        groovy.lang.MetaClassImpl r10;
        java.lang.Class r0, $r8, $r9, $r11;
        java.lang.Object $r4;

        r10 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: java.util.List getCategoryMethods(java.lang.Class,java.lang.String)>(r0, r1);

        if $r2 == null goto label6;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (groovy.lang.MetaMethod) $r4;

        $r6 = virtualinvoke r5.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        if z1 == 0 goto label4;

        $i1 = lengthof $r6;

        if $i1 != 2 goto label5;

        $r7 = $r6[0];

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r9 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label2;

        $r11 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String> = $r11;

        goto label3;

     label2:
        $r11 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

     label3:
        if $r8 != $r11 goto label5;

        return r5;

     label4:
        $i0 = lengthof $r6;

        if $i0 != 1 goto label5;

        return r5;

     label5:
        goto label1;

     label6:
        return null;
    }

    public java.util.List getProperties()
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r6;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z7, z8, z9, z10;
        org.codehaus.groovy.reflection.CachedClass $r1;
        groovy.lang.MetaMethod $r10, $r11, $r15, $r16, $r20, $r21, $r22, $r24;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r3;
        java.util.ArrayList $r4;
        groovy.lang.MetaBeanProperty r9, $r12, $r17;
        int $i0;
        java.lang.String $r13, $r18;
        groovy.lang.MetaProperty r23;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator $r5;
        groovy.lang.MetaClassImpl$Index $r2;
        java.lang.Object $r8;
        java.lang.Class $r14, $r19;
        org.codehaus.groovy.reflection.SingleKeyHashMap$Entry $r7;

        r0 := @this: groovy.lang.MetaClassImpl;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        $r2 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r3 = virtualinvoke $r2.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNullable(org.codehaus.groovy.reflection.CachedClass)>($r1);

        $r4 = new java.util.ArrayList;

        $i0 = virtualinvoke $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r5 = virtualinvoke $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator getEntrySetIterator()>();

     label01:
        $z4 = interfaceinvoke $r5.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r6 = interfaceinvoke $r5.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next()>();

        $r7 = (org.codehaus.groovy.reflection.SingleKeyHashMap$Entry) $r6;

        $r8 = $r7.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object value>;

        r23 = (groovy.lang.MetaProperty) $r8;

        $z0 = r23 instanceof org.codehaus.groovy.reflection.CachedField;

        if $z0 == 0 goto label02;

        goto label01;

     label02:
        $z1 = r23 instanceof groovy.lang.MetaBeanProperty;

        if $z1 == 0 goto label09;

        r9 = (groovy.lang.MetaBeanProperty) r23;

        z5 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        z10 = 1;

        z9 = 1;

        $r10 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        if $r10 == null goto label03;

        $r22 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        $z3 = $r22 instanceof org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod;

        if $z3 == 0 goto label04;

     label03:
        z6 = 0;

        z10 = 0;

        z9 = 0;

     label04:
        $r24 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        if $r24 == null goto label05;

        $r21 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        $z2 = $r21 instanceof org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod;

        if $z2 == 0 goto label06;

     label05:
        z5 = 0;

        z8 = 0;

        z7 = 0;

     label06:
        if z8 != 0 goto label07;

        if z9 != 0 goto label07;

        goto label01;

     label07:
        if z7 != 0 goto label08;

        $r16 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        if $r16 == null goto label08;

        $r17 = new groovy.lang.MetaBeanProperty;

        $r18 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        $r19 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: java.lang.Class getType()>();

        $r20 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        specialinvoke $r17.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>($r18, $r19, $r20, null);

        r23 = $r17;

     label08:
        if z10 != 0 goto label09;

        $r11 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        if $r11 == null goto label09;

        $r12 = new groovy.lang.MetaBeanProperty;

        $r13 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        $r14 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: java.lang.Class getType()>();

        $r15 = virtualinvoke r9.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        specialinvoke $r12.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>($r13, $r14, null, $r15);

        r23 = $r12;

     label09:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r23);

        goto label01;

     label10:
        return $r4;
    }

    private groovy.lang.MetaMethod findPropertyMethod(java.lang.Object, boolean)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r5, $r13, $r15, $r20, $r21;
        boolean $z0, $z1, $z2, z3;
        org.codehaus.groovy.reflection.CachedClass $r6;
        java.util.List $r2;
        groovy.lang.MetaMethod $r7, r23, r26, r28, r29;
        groovy.lang.MetaClassImpl r14;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9, $i11;
        org.codehaus.groovy.reflection.FastArray r25;
        java.util.Iterator $r3;
        java.lang.Object r0, $r4, $r8, r22;
        java.lang.Class $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r19, $r24, $r27, r30;

        r14 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Object;

        z3 := @parameter1: boolean;

        if r0 != null goto label01;

        return null;

     label01:
        r22 = null;

        $z0 = r0 instanceof groovy.lang.MetaMethod;

        if $z0 == 0 goto label06;

        r23 = (groovy.lang.MetaMethod) r0;

        if z3 != 0 goto label02;

        $r21 = virtualinvoke r23.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i5 = lengthof $r21;

        if $i5 != 1 goto label02;

        r22 = specialinvoke r14.<groovy.lang.MetaClassImpl: java.lang.Object addElementToList(java.lang.Object,groovy.lang.MetaMethod)>(null, r23);

     label02:
        if z3 == 0 goto label05;

        $r16 = virtualinvoke r23.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r17 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Void>;

        if $r17 != null goto label03;

        $r24 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Void");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Void> = $r24;

        goto label04;

     label03:
        $r24 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Void>;

     label04:
        if $r16 == $r24 goto label05;

        $r18 = virtualinvoke r23.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r19 = <java.lang.Void: java.lang.Class TYPE>;

        if $r18 == $r19 goto label05;

        $r20 = virtualinvoke r23.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i4 = lengthof $r20;

        if $i4 != 0 goto label05;

        r22 = specialinvoke r14.<groovy.lang.MetaClassImpl: java.lang.Object addElementToList(java.lang.Object,groovy.lang.MetaMethod)>(r22, r23);

     label05:
        goto label12;

     label06:
        r25 = (org.codehaus.groovy.reflection.FastArray) r0;

        $i0 = virtualinvoke r25.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r1 = virtualinvoke r25.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i6 = 0;

     label07:
        if i6 == $i0 goto label12;

        $r8 = $r1[i6];

        r26 = (groovy.lang.MetaMethod) $r8;

        if z3 != 0 goto label08;

        $r15 = virtualinvoke r26.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i3 = lengthof $r15;

        if $i3 != 1 goto label08;

        r22 = specialinvoke r14.<groovy.lang.MetaClassImpl: java.lang.Object addElementToList(java.lang.Object,groovy.lang.MetaMethod)>(r22, r26);

     label08:
        if z3 == 0 goto label11;

        $r9 = virtualinvoke r26.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r10 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Void>;

        if $r10 != null goto label09;

        $r27 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Void");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Void> = $r27;

        goto label10;

     label09:
        $r27 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Void>;

     label10:
        if $r9 == $r27 goto label11;

        $r11 = virtualinvoke r26.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r12 = <java.lang.Void: java.lang.Class TYPE>;

        if $r11 == $r12 goto label11;

        $r13 = virtualinvoke r26.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i2 = lengthof $r13;

        if $i2 != 0 goto label11;

        r22 = specialinvoke r14.<groovy.lang.MetaClassImpl: java.lang.Object addElementToList(java.lang.Object,groovy.lang.MetaMethod)>(r22, r26);

     label11:
        i6 = i6 + 1;

        goto label07;

     label12:
        if r22 != null goto label13;

        return null;

     label13:
        $z1 = r22 instanceof groovy.lang.MetaMethod;

        if $z1 == 0 goto label14;

        $r7 = (groovy.lang.MetaMethod) r22;

        return $r7;

     label14:
        r28 = null;

        $i9 = (int) -1;

        i7 = $i9;

        $r2 = (java.util.List) r22;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r29 = (groovy.lang.MetaMethod) $r4;

        if z3 == 0 goto label16;

        r30 = virtualinvoke r29.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        goto label17;

     label16:
        $r5 = virtualinvoke r29.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r6 = $r5[0];

        r30 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

     label17:
        $i1 = staticinvoke <groovy.lang.MetaClassImpl: int distanceToObject(java.lang.Class)>(r30);

        $i11 = (int) -1;

        if i7 == $i11 goto label18;

        if i7 <= $i1 goto label19;

     label18:
        i7 = $i1;

        r28 = r29;

     label19:
        goto label15;

     label20:
        return r28;
    }

    private java.lang.Object addElementToList(java.lang.Object, groovy.lang.MetaMethod)
    {
        groovy.lang.MetaMethod r1;
        java.util.List $r2;
        groovy.lang.MetaClassImpl r3;
        java.lang.Object r4;
        java.util.LinkedList $r0;
        boolean $z0;

        r3 := @this: groovy.lang.MetaClassImpl;

        r4 := @parameter0: java.lang.Object;

        r1 := @parameter1: groovy.lang.MetaMethod;

        if r4 != null goto label1;

        r4 = r1;

        goto label3;

     label1:
        $z0 = r4 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r2 = (java.util.List) r4;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        r4 = $r0;

     label3:
        return r4;
    }

    private static int distanceToObject(java.lang.Class)
    {
        int i0;
        java.lang.Class r0;

        r0 := @parameter0: java.lang.Class;

        i0 = 0;

     label1:
        if r0 == null goto label2;

        r0 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    private void setupProperties(java.beans.PropertyDescriptor[])
    {
        java.beans.PropertyDescriptor[] r6;
        boolean $z0, $z1, $z2;
        java.util.Set $r4, $r17;
        org.codehaus.groovy.reflection.CachedClass $r1, $r3, $r5, $r12, $r15, $r16, $r19, $r23, r27;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r10, $r21;
        groovy.lang.MetaProperty $r11;
        java.util.LinkedList $r2, $r14;
        java.util.Iterator $r22;
        groovy.lang.MetaClassImpl$Index $r7, $r8, $r9, $r13, $r18, $r20, $r24, $r25, $r28;
        java.lang.Object $r26;

        r0 := @this: groovy.lang.MetaClassImpl;

        r6 := @parameter0: java.beans.PropertyDescriptor[];

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $z0 = $r1.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface>;

        if $z0 == 0 goto label3;

        $r14 = new java.util.LinkedList;

        specialinvoke $r14.<java.util.LinkedList: void <init>()>();

        $r15 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        virtualinvoke $r14.<java.util.LinkedList: boolean add(java.lang.Object)>($r15);

        $r16 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r17 = virtualinvoke $r16.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        $r18 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndexForSuper> = $r18;

        $r20 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r19 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r21 = virtualinvoke $r20.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>($r19);

        $r22 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r26 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.codehaus.groovy.reflection.CachedClass) $r26;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void addFields(org.codehaus.groovy.reflection.CachedClass,org.codehaus.groovy.reflection.SingleKeyHashMap)>(r27, $r21);

        $r28 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        virtualinvoke $r28.<groovy.lang.MetaClassImpl$Index: void put(org.codehaus.groovy.reflection.CachedClass,org.codehaus.groovy.reflection.SingleKeyHashMap)>(r27, $r21);

        goto label1;

     label2:
        $r24 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r23 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        virtualinvoke $r24.<groovy.lang.MetaClassImpl$Index: void put(org.codehaus.groovy.reflection.CachedClass,org.codehaus.groovy.reflection.SingleKeyHashMap)>($r23, $r21);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void applyPropertyDescriptors(java.beans.PropertyDescriptor[])>(r6);

        $r25 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void applyStrayPropertyMethods(java.util.LinkedList,groovy.lang.MetaClassImpl$Index,boolean)>($r14, $r25, 1);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void makeStaticPropertyIndex()>();

        goto label5;

     label3:
        $r2 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.util.LinkedList getSuperClasses()>();

        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        $r5 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $z1 = $r5.<org.codehaus.groovy.reflection.CachedClass: boolean isArray>;

        if $z1 == 0 goto label4;

        $r10 = new org.codehaus.groovy.reflection.SingleKeyHashMap;

        specialinvoke $r10.<org.codehaus.groovy.reflection.SingleKeyHashMap: void <init>()>();

        $r11 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty arrayLengthProperty>;

        virtualinvoke $r10.<org.codehaus.groovy.reflection.SingleKeyHashMap: void put(java.lang.Object,java.lang.Object)>("length", $r11);

        $r13 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r12 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        virtualinvoke $r13.<groovy.lang.MetaClassImpl$Index: void put(org.codehaus.groovy.reflection.CachedClass,org.codehaus.groovy.reflection.SingleKeyHashMap)>($r12, $r10);

     label4:
        specialinvoke r0.<groovy.lang.MetaClassImpl: void inheritStaticInterfaceFields(java.util.LinkedList,java.util.Set)>($r2, $r4);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void inheritFields(java.util.LinkedList)>($r2);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void applyPropertyDescriptors(java.beans.PropertyDescriptor[])>(r6);

        $r7 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void applyStrayPropertyMethods(java.util.LinkedList,groovy.lang.MetaClassImpl$Index,boolean)>($r2, $r7, 1);

        $r8 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndexForSuper>;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void applyStrayPropertyMethods(java.util.LinkedList,groovy.lang.MetaClassImpl$Index,boolean)>($r2, $r8, 0);

        $r9 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndexForSuper>;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void copyClassPropertyIndexForSuper(groovy.lang.MetaClassImpl$Index)>($r9);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void makeStaticPropertyIndex()>();

     label5:
        return;
    }

    private void makeStaticPropertyIndex()
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r5;
        org.codehaus.groovy.reflection.CachedField r12;
        groovy.lang.MetaProperty $r8, r11;
        boolean $z0, $z1, $z2, $z3;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator $r4;
        org.codehaus.groovy.reflection.CachedClass $r1;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$Index $r2;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r3, $r9;
        java.lang.Object $r7, $r10;
        org.codehaus.groovy.reflection.SingleKeyHashMap$Entry r6;

        r0 := @this: groovy.lang.MetaClassImpl;

        $r2 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r3 = virtualinvoke $r2.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>($r1);

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator getEntrySetIterator()>();

     label1:
        $z3 = interfaceinvoke $r4.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next()>();

        r6 = (org.codehaus.groovy.reflection.SingleKeyHashMap$Entry) $r5;

        $r7 = virtualinvoke r6.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object getValue()>();

        r11 = (groovy.lang.MetaProperty) $r7;

        $z0 = r11 instanceof org.codehaus.groovy.reflection.CachedField;

        if $z0 == 0 goto label3;

        r12 = (org.codehaus.groovy.reflection.CachedField) r11;

        $z2 = virtualinvoke r12.<org.codehaus.groovy.reflection.CachedField: boolean isStatic()>();

        if $z2 != 0 goto label2;

        goto label1;

     label2:
        goto label5;

     label3:
        $z1 = r11 instanceof groovy.lang.MetaBeanProperty;

        if $z1 == 0 goto label1;

        $r8 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty establishStaticMetaProperty(groovy.lang.MetaProperty)>(r11);

        if $r8 != null goto label4;

        goto label1;

     label4:
        r11 = $r8;

     label5:
        $r9 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap staticPropertyIndex>;

        $r10 = virtualinvoke r6.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object getKey()>();

        virtualinvoke $r9.<org.codehaus.groovy.reflection.SingleKeyHashMap: void put(java.lang.Object,java.lang.Object)>($r10, r11);

        goto label1;

     label6:
        return;
    }

    private groovy.lang.MetaProperty establishStaticMetaProperty(groovy.lang.MetaProperty)
    {
        groovy.lang.MetaBeanProperty r1, $r5, $r6, $r7;
        org.codehaus.groovy.reflection.CachedField $r4;
        groovy.lang.MetaProperty r0, r11;
        java.lang.String $r9;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10;
        groovy.lang.MetaMethod $r2, $r3;
        groovy.lang.MetaClassImpl r8;
        java.lang.Class $r10;

        r8 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: groovy.lang.MetaProperty;

        r1 = (groovy.lang.MetaBeanProperty) r0;

        $r2 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        $r3 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        $r4 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: org.codehaus.groovy.reflection.CachedField getField()>();

        if $r2 == null goto label01;

        $z5 = virtualinvoke $r2.<groovy.lang.MetaMethod: boolean isStatic()>();

        if $z5 == 0 goto label02;

     label01:
        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z0 = $z6;

        if $r3 == null goto label04;

        $z4 = virtualinvoke $r3.<groovy.lang.MetaMethod: boolean isStatic()>();

        if $z4 == 0 goto label05;

     label04:
        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        z1 = $z7;

        if $r4 == null goto label07;

        $z3 = virtualinvoke $r4.<org.codehaus.groovy.reflection.CachedField: boolean isStatic()>();

        if $z3 == 0 goto label08;

     label07:
        $z10 = 1;

        $z9 = 1;

        goto label09;

     label08:
        $z10 = 0;

        $z9 = 0;

     label09:
        z2 = $z9;

        if z0 != 0 goto label10;

        if z1 != 0 goto label10;

        if $z10 != 0 goto label10;

        return null;

     label10:
        $r9 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        $r10 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: java.lang.Class getType()>();

        if z1 == 0 goto label12;

        if z0 == 0 goto label12;

        if z2 == 0 goto label11;

        r11 = r1;

        goto label19;

     label11:
        $r7 = new groovy.lang.MetaBeanProperty;

        specialinvoke $r7.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>($r9, $r10, $r2, $r3);

        r11 = $r7;

        goto label19;

     label12:
        if z0 == 0 goto label15;

        if z1 != 0 goto label15;

        if $r2 != null goto label13;

        r11 = $r4;

        goto label19;

     label13:
        $r6 = new groovy.lang.MetaBeanProperty;

        specialinvoke $r6.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>($r9, $r10, $r2, null);

        if z2 == 0 goto label14;

        virtualinvoke $r6.<groovy.lang.MetaBeanProperty: void setField(org.codehaus.groovy.reflection.CachedField)>($r4);

     label14:
        r11 = $r6;

        goto label19;

     label15:
        if z1 == 0 goto label18;

        if z0 != 0 goto label18;

        if $r3 != null goto label16;

        r11 = $r4;

        goto label19;

     label16:
        $r5 = new groovy.lang.MetaBeanProperty;

        specialinvoke $r5.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>($r9, $r10, null, $r3);

        if z2 == 0 goto label17;

        virtualinvoke $r5.<groovy.lang.MetaBeanProperty: void setField(org.codehaus.groovy.reflection.CachedField)>($r4);

     label17:
        r11 = $r5;

        goto label19;

     label18:
        r11 = $r4;

     label19:
        return r11;
    }

    private void copyClassPropertyIndexForSuper(groovy.lang.MetaClassImpl$Index)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator $r2;
        org.codehaus.groovy.reflection.CachedClass $r8;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$Index $r1, r6;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r5;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r3;
        java.lang.Object $r7;
        org.codehaus.groovy.reflection.SingleKeyHashMap$Entry r4;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r6 := @parameter0: groovy.lang.MetaClassImpl$Index;

        $r1 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r2 = virtualinvoke $r1.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator getEntrySetIterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next()>();

        r4 = (org.codehaus.groovy.reflection.SingleKeyHashMap$Entry) $r3;

        $r5 = new org.codehaus.groovy.reflection.SingleKeyHashMap;

        specialinvoke $r5.<org.codehaus.groovy.reflection.SingleKeyHashMap: void <init>()>();

        $r7 = virtualinvoke r4.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object getKey()>();

        $r8 = (org.codehaus.groovy.reflection.CachedClass) $r7;

        virtualinvoke r6.<groovy.lang.MetaClassImpl$Index: void put(org.codehaus.groovy.reflection.CachedClass,org.codehaus.groovy.reflection.SingleKeyHashMap)>($r8, $r5);

        goto label1;

     label2:
        return;
    }

    private void inheritStaticInterfaceFields(java.util.LinkedList, java.util.Set)
    {
        java.util.LinkedList r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1, $r8;
        java.util.Set r0;
        org.codehaus.groovy.reflection.CachedClass r3, r10;
        groovy.lang.MetaClassImpl r4;
        groovy.lang.MetaClassImpl$Index $r5, $r13;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r6, $r14;
        java.lang.Object $r2, $r9;
        java.lang.Class $r11, $r12;

        r4 := @this: groovy.lang.MetaClassImpl;

        r7 := @parameter0: java.util.LinkedList;

        r0 := @parameter1: java.util.Set;

        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.codehaus.groovy.reflection.CachedClass) $r2;

        $r5 = r4.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r6 = virtualinvoke $r5.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>(r3);

        specialinvoke r4.<groovy.lang.MetaClassImpl: void addFields(org.codehaus.groovy.reflection.CachedClass,org.codehaus.groovy.reflection.SingleKeyHashMap)>(r3, $r6);

        $r8 = virtualinvoke r7.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.codehaus.groovy.reflection.CachedClass) $r9;

        $r11 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r12 = virtualinvoke r10.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z1 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r12);

        if $z1 != 0 goto label3;

        goto label2;

     label3:
        $r13 = r4.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r14 = virtualinvoke $r13.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>(r10);

        specialinvoke r4.<groovy.lang.MetaClassImpl: void copyNonPrivateFields(org.codehaus.groovy.reflection.SingleKeyHashMap,org.codehaus.groovy.reflection.SingleKeyHashMap)>($r6, $r14);

        goto label2;

     label4:
        goto label1;

     label5:
        return;
    }

    private void inheritFields(java.util.LinkedList)
    {
        java.util.Iterator $r1;
        org.codehaus.groovy.reflection.CachedClass r3;
        groovy.lang.MetaClassImpl r4;
        groovy.lang.MetaClassImpl$Index $r5;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r6, r7;
        java.lang.Object $r2;
        java.util.LinkedList r0;
        boolean $z0;

        r4 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.util.LinkedList;

        r7 = null;

        $r1 = virtualinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.codehaus.groovy.reflection.CachedClass) $r2;

        $r5 = r4.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r6 = virtualinvoke $r5.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>(r3);

        if r7 == null goto label2;

        specialinvoke r4.<groovy.lang.MetaClassImpl: void copyNonPrivateFields(org.codehaus.groovy.reflection.SingleKeyHashMap,org.codehaus.groovy.reflection.SingleKeyHashMap)>(r7, $r6);

     label2:
        r7 = $r6;

        specialinvoke r4.<groovy.lang.MetaClassImpl: void addFields(org.codehaus.groovy.reflection.CachedClass,org.codehaus.groovy.reflection.SingleKeyHashMap)>(r3, $r6);

        goto label1;

     label3:
        return;
    }

    private void addFields(org.codehaus.groovy.reflection.CachedClass, org.codehaus.groovy.reflection.SingleKeyHashMap)
    {
        org.codehaus.groovy.reflection.CachedField[] $r1;
        org.codehaus.groovy.reflection.CachedClass r0;
        groovy.lang.MetaClassImpl r6;
        org.codehaus.groovy.reflection.SingleKeyHashMap r2;
        int $i0, i1;
        org.codehaus.groovy.reflection.CachedField $r3, $r5;
        java.lang.String $r4;

        r6 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: org.codehaus.groovy.reflection.CachedClass;

        r2 := @parameter1: org.codehaus.groovy.reflection.SingleKeyHashMap;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedField[] getFields()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedField: java.lang.String getName()>();

        $r5 = $r1[i1];

        virtualinvoke r2.<org.codehaus.groovy.reflection.SingleKeyHashMap: void put(java.lang.Object,java.lang.Object)>($r4, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void copyNonPrivateFields(org.codehaus.groovy.reflection.SingleKeyHashMap, org.codehaus.groovy.reflection.SingleKeyHashMap)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator $r1;
        groovy.lang.MetaClassImpl r8;
        org.codehaus.groovy.reflection.SingleKeyHashMap r0, r6;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r2;
        int $i0, $i1;
        org.codehaus.groovy.reflection.CachedField r5;
        java.lang.Object $r4, $r7;
        org.codehaus.groovy.reflection.SingleKeyHashMap$Entry r3;
        boolean $z0, $z1, $z2;

        r8 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: org.codehaus.groovy.reflection.SingleKeyHashMap;

        r6 := @parameter1: org.codehaus.groovy.reflection.SingleKeyHashMap;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.SingleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator getEntrySetIterator()>();

     label1:
        $z2 = interfaceinvoke $r1.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<org.codehaus.groovy.reflection.ComplexKeyHashMap$EntryIterator: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next()>();

        r3 = (org.codehaus.groovy.reflection.SingleKeyHashMap$Entry) $r2;

        $r4 = virtualinvoke r3.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object getValue()>();

        r5 = (org.codehaus.groovy.reflection.CachedField) $r4;

        $i0 = virtualinvoke r5.<org.codehaus.groovy.reflection.CachedField: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke r5.<org.codehaus.groovy.reflection.CachedField: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isProtected(int)>($i1);

        if $z1 != 0 goto label2;

        goto label1;

     label2:
        $r7 = virtualinvoke r3.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object getKey()>();

        virtualinvoke r6.<org.codehaus.groovy.reflection.SingleKeyHashMap: void put(java.lang.Object,java.lang.Object)>($r7, r5);

        goto label1;

     label3:
        return;
    }

    private void applyStrayPropertyMethods(java.util.LinkedList, groovy.lang.MetaClassImpl$Index, boolean)
    {
        int $i0;
        java.lang.String r10, $r12;
        java.util.LinkedList r0;
        boolean $z0, $z1, $z2, z3;
        java.util.Iterator $r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r13;
        org.codehaus.groovy.reflection.CachedClass r3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r7;
        groovy.lang.MetaMethod $r11;
        groovy.lang.MetaClassImpl r4;
        groovy.lang.MetaClassImpl$Index r8;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r9;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r5;
        java.lang.Object $r2, $r14;
        java.lang.Class $r6;

        r4 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.util.LinkedList;

        r8 := @parameter1: groovy.lang.MetaClassImpl$Index;

        z3 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.codehaus.groovy.reflection.CachedClass) $r2;

        $r5 = r4.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r6 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r6);

        $r9 = virtualinvoke r8.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>(r3);

        r13 = $r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head>;

     label02:
        if r13 == null goto label09;

        r10 = r13.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $i0 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i0 >= 4 goto label03;

        goto label08;

     label03:
        $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z1 != 0 goto label04;

        if $z2 != 0 goto label04;

        goto label08;

     label04:
        if z3 == 0 goto label05;

        $r14 = r13.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        goto label06;

     label05:
        $r14 = r13.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

     label06:
        $r11 = specialinvoke r4.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod findPropertyMethod(java.lang.Object,boolean)>($r14, $z1);

        if $r11 != null goto label07;

        goto label08;

     label07:
        $r12 = specialinvoke r4.<groovy.lang.MetaClassImpl: java.lang.String getPropName(java.lang.String)>(r10);

        specialinvoke r4.<groovy.lang.MetaClassImpl: void createMetaBeanProperty(org.codehaus.groovy.reflection.SingleKeyHashMap,java.lang.String,boolean,groovy.lang.MetaMethod)>($r9, $r12, $z1, $r11);

     label08:
        r13 = r13.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextClassEntry>;

        goto label02;

     label09:
        goto label01;

     label10:
        return;
    }

    private java.lang.String getPropName(java.lang.String)
    {
        java.lang.Throwable $r8;
        java.util.HashMap $r1, $r4, $r7;
        char $c3, $c4;
        groovy.lang.MetaClassImpl r9;
        int $i0, i1, $i2;
        char[] r5;
        java.lang.Object $r2;
        java.lang.String r0, r3, $r6;

        r9 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.String;

        $r1 = <groovy.lang.MetaClassImpl: java.util.HashMap propNames>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.String) $r2;

        if r3 == null goto label1;

        return r3;

     label1:
        $r4 = <groovy.lang.MetaClassImpl: java.util.HashMap propNames>;

        entermonitor $r4;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = $i0 - 3;

        r5 = newarray (char)[i1];

        $i2 = 3 + i1;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(3, $i2, r5, 0);

        $c3 = r5[0];

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3);

        r5[0] = $c4;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r5);

        $r7 = <groovy.lang.MetaClassImpl: java.util.HashMap propNames>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r6);

        exitmonitor $r4;

     label3:
        return $r6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void createMetaBeanProperty(org.codehaus.groovy.reflection.SingleKeyHashMap, java.lang.String, boolean, groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r15;
        groovy.lang.MetaBeanProperty $r9, $r14, $r18, r22, r23;
        java.lang.StringBuffer $r4, $r5, $r7;
        org.codehaus.groovy.reflection.CachedField r24;
        java.lang.String r1, $r8;
        groovy.lang.MetaProperty r21;
        boolean $z0, $z1, z2;
        org.codehaus.groovy.GroovyBugError $r3;
        org.codehaus.groovy.reflection.CachedClass $r16;
        groovy.lang.MetaMethod $r11, r12, $r13;
        groovy.lang.MetaClassImpl r20;
        org.codehaus.groovy.reflection.SingleKeyHashMap r0;
        java.lang.Object $r2;
        java.lang.Class $r6, $r10, $r17, $r19;

        r20 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: org.codehaus.groovy.reflection.SingleKeyHashMap;

        r1 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        r12 := @parameter3: groovy.lang.MetaMethod;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.reflection.SingleKeyHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r21 = (groovy.lang.MetaProperty) $r2;

        if r21 != null goto label2;

        if z2 == 0 goto label1;

        $r18 = new groovy.lang.MetaBeanProperty;

        $r19 = virtualinvoke r12.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        specialinvoke $r18.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r1, $r19, r12, null);

        r22 = $r18;

        goto label8;

     label1:
        $r14 = new groovy.lang.MetaBeanProperty;

        $r15 = virtualinvoke r12.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r16 = $r15[0];

        $r17 = virtualinvoke $r16.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        specialinvoke $r14.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r1, $r17, null, r12);

        r22 = $r14;

        goto label8;

     label2:
        $z0 = r21 instanceof groovy.lang.MetaBeanProperty;

        if $z0 == 0 goto label3;

        r23 = (groovy.lang.MetaBeanProperty) r21;

        r24 = virtualinvoke r23.<groovy.lang.MetaBeanProperty: org.codehaus.groovy.reflection.CachedField getField()>();

        goto label5;

     label3:
        $z1 = r21 instanceof org.codehaus.groovy.reflection.CachedField;

        if $z1 == 0 goto label4;

        r24 = (org.codehaus.groovy.reflection.CachedField) r21;

        $r9 = new groovy.lang.MetaBeanProperty;

        $r10 = virtualinvoke r24.<org.codehaus.groovy.reflection.CachedField: java.lang.Class getType()>();

        specialinvoke $r9.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r1, $r10, null, null);

        r23 = $r9;

        goto label5;

     label4:
        $r3 = new org.codehaus.groovy.GroovyBugError;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unknown MetaProperty class used. Class is ");

        $r6 = virtualinvoke r21.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>($r8);

        throw $r3;

     label5:
        if z2 == 0 goto label6;

        $r13 = virtualinvoke r23.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        if $r13 != null goto label6;

        virtualinvoke r23.<groovy.lang.MetaBeanProperty: void setGetter(groovy.lang.MetaMethod)>(r12);

        goto label7;

     label6:
        if z2 != 0 goto label7;

        $r11 = virtualinvoke r23.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        if $r11 != null goto label7;

        virtualinvoke r23.<groovy.lang.MetaBeanProperty: void setSetter(groovy.lang.MetaMethod)>(r12);

     label7:
        virtualinvoke r23.<groovy.lang.MetaBeanProperty: void setField(org.codehaus.groovy.reflection.CachedField)>(r24);

        r22 = r23;

     label8:
        virtualinvoke r0.<org.codehaus.groovy.reflection.SingleKeyHashMap: void put(java.lang.Object,java.lang.Object)>(r1, r22);

        return;
    }

    private void applyPropertyDescriptors(java.beans.PropertyDescriptor[])
    {
        java.beans.PropertyDescriptor[] r0;
        org.codehaus.groovy.reflection.CachedMethod $r9, $r10;
        groovy.lang.MetaBeanProperty $r5;
        groovy.lang.MetaMethod r11, r12;
        groovy.lang.MetaClassImpl r8;
        java.beans.PropertyDescriptor r1;
        int $i0, i1;
        java.lang.Class $r2, $r7;
        java.lang.String $r6;
        java.lang.reflect.Method $r3, $r4;

        r8 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.beans.PropertyDescriptor[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label8;

        r1 = r0[i1];

        $r2 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>();

        if $r2 != null goto label2;

        goto label7;

     label2:
        $r3 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        if $r3 == null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedMethod find(java.lang.reflect.Method)>($r3);

        r11 = specialinvoke r8.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod findMethod(org.codehaus.groovy.reflection.CachedMethod)>($r10);

        goto label4;

     label3:
        r11 = null;

     label4:
        $r4 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        if $r4 == null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedMethod find(java.lang.reflect.Method)>($r4);

        r12 = specialinvoke r8.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod findMethod(org.codehaus.groovy.reflection.CachedMethod)>($r9);

        goto label6;

     label5:
        r12 = null;

     label6:
        $r5 = new groovy.lang.MetaBeanProperty;

        $r6 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r7 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>();

        specialinvoke $r5.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>($r6, $r7, r11, r12);

        virtualinvoke r8.<groovy.lang.MetaClassImpl: void addMetaBeanProperty(groovy.lang.MetaBeanProperty)>($r5);

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return;
    }

    public void addMetaBeanProperty(groovy.lang.MetaBeanProperty)
    {
        org.codehaus.groovy.reflection.CachedClass $r3;
        groovy.lang.MetaBeanProperty r1, $r9;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$Index $r4;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r5, $r10;
        org.codehaus.groovy.reflection.CachedField r12;
        java.lang.Object $r7;
        groovy.lang.MetaProperty $r2, r8;
        java.lang.String $r6, $r11, $r13;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: groovy.lang.MetaBeanProperty;

        $r2 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty establishStaticMetaProperty(groovy.lang.MetaProperty)>(r1);

        if $r2 == null goto label1;

        $r10 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap staticPropertyIndex>;

        $r11 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        virtualinvoke $r10.<org.codehaus.groovy.reflection.SingleKeyHashMap: void put(java.lang.Object,java.lang.Object)>($r11, r1);

        goto label5;

     label1:
        $r4 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        $r5 = virtualinvoke $r4.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNotNull(org.codehaus.groovy.reflection.CachedClass)>($r3);

        $r6 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<org.codehaus.groovy.reflection.SingleKeyHashMap: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (groovy.lang.MetaProperty) $r7;

        if r8 == null goto label4;

        $z0 = r8 instanceof groovy.lang.MetaBeanProperty;

        if $z0 == 0 goto label2;

        $r9 = (groovy.lang.MetaBeanProperty) r8;

        r12 = virtualinvoke $r9.<groovy.lang.MetaBeanProperty: org.codehaus.groovy.reflection.CachedField getField()>();

        goto label3;

     label2:
        r12 = (org.codehaus.groovy.reflection.CachedField) r8;

     label3:
        virtualinvoke r1.<groovy.lang.MetaBeanProperty: void setField(org.codehaus.groovy.reflection.CachedField)>(r12);

     label4:
        $r13 = virtualinvoke r1.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        virtualinvoke $r5.<org.codehaus.groovy.reflection.SingleKeyHashMap: void put(java.lang.Object,java.lang.Object)>($r13, r1);

     label5:
        return;
    }

    public void setProperty(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object, boolean, boolean)
    {
        groovy.lang.Closure $r41;
        java.util.Map $r31, $r54;
        groovy.lang.GroovyRuntimeException $r10;
        groovy.lang.MetaMethod $r24, $r25, $r27, $r33, $r49, $r51, r62;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r58;
        java.lang.ClassLoader $r35;
        java.lang.Object[] $r26, $r28, $r43, $r50, $r53, r63;
        java.lang.StringBuffer $r11, $r12, $r13, $r14, $r44, $r45, $r47;
        org.codehaus.groovy.reflection.CachedField $r52;
        java.lang.String r5, $r15, $r46, $r48;
        groovy.lang.MetaClass $r59;
        java.lang.Class[] $r36;
        org.codehaus.groovy.runtime.ConvertedClosure $r40;
        org.codehaus.groovy.reflection.CachedClass[] $r16, $r20, $r37;
        groovy.lang.ReadOnlyPropertyException $r8, $r29;
        boolean z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, z14, $z16, $z17, $z18, $z19;
        org.codehaus.groovy.reflection.CachedClass $r4, $r17, $r21, $r38;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r55;
        groovy.lang.MetaBeanProperty r65;
        int $i0, $i1, $i2;
        groovy.lang.MetaProperty $r6, r64;
        java.lang.Class $r1, $r2, r3, $r9, $r18, $r22, $r30, $r34, $r39, $r56, $r57, $r61;
        java.lang.Object r7, $r19, $r23, $r32, $r42, r60;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.Class;

        r7 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        r60 := @parameter3: java.lang.Object;

        z2 := @parameter4: boolean;

        z11 := @parameter5: boolean;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        $r2 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r1 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r1 != null goto label01;

        $r61 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r61;

        goto label02;

     label01:
        $r61 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label02:
        if $r2 == $r61 goto label03;

        $z12 = r7 instanceof java.lang.Class;

        if $z12 == 0 goto label03;

        $z17 = 1;

        $z16 = 1;

        goto label04;

     label03:
        $z17 = 0;

        $z16 = 0;

     label04:
        z0 = $z17;

        if $z16 == 0 goto label05;

        $r56 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        if r7 == $r56 goto label05;

        $r58 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r57 = (java.lang.Class) r7;

        $r59 = interfaceinvoke $r58.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r57);

        interfaceinvoke $r59.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>(r3, r7, r5, z2, z11);

        return;

     label05:
        $z1 = r60 instanceof org.codehaus.groovy.runtime.wrappers.Wrapper;

        if $z1 == 0 goto label06;

        $r55 = (org.codehaus.groovy.runtime.wrappers.Wrapper) r60;

        r60 = virtualinvoke $r55.<org.codehaus.groovy.runtime.wrappers.Wrapper: java.lang.Object unwrap()>();

     label06:
        if z0 != 0 goto label07;

        $z10 = r0.<groovy.lang.MetaClassImpl: boolean isMap>;

        if $z10 == 0 goto label07;

        $r54 = (java.util.Map) r7;

        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r60);

        return;

     label07:
        r62 = null;

        r63 = null;

        $r4 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r3);

        $r6 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty getMetaProperty(org.codehaus.groovy.reflection.CachedClass,java.lang.String,boolean,boolean)>($r4, r5, z2, z0);

        r64 = null;

        if $r6 == null goto label11;

        $z8 = $r6 instanceof groovy.lang.MetaBeanProperty;

        if $z8 == 0 goto label10;

        r65 = (groovy.lang.MetaBeanProperty) $r6;

        $r51 = virtualinvoke r65.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        r62 = $r51;

        $r52 = virtualinvoke r65.<groovy.lang.MetaBeanProperty: org.codehaus.groovy.reflection.CachedField getField()>();

        if $r51 != null goto label08;

        if $r52 == null goto label09;

        $i2 = virtualinvoke $r52.<groovy.lang.MetaProperty: int getModifiers()>();

        $z9 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i2);

        if $z9 != 0 goto label09;

     label08:
        $r53 = newarray (java.lang.Object)[1];

        $r53[0] = r60;

        r63 = $r53;

        r64 = $r52;

     label09:
        goto label11;

     label10:
        r64 = $r6;

     label11:
        if z2 != 0 goto label12;

        if z0 != 0 goto label12;

        $z7 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: boolean hasCategoryInAnyThread()>();

        if $z7 == 0 goto label12;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("set");

        $r46 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.String capitalize(java.lang.String)>(r5);

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        $r49 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getCategoryMethodSetter(java.lang.Class,java.lang.String,boolean)>(r3, $r48, 0);

        if $r49 == null goto label12;

        r62 = $r49;

        $r50 = newarray (java.lang.Object)[1];

        $r50[0] = r60;

        r63 = $r50;

     label12:
        z14 = 0;

        if r62 != null goto label16;

        $r31 = r0.<groovy.lang.MetaClassImpl: java.util.Map listeners>;

        $r32 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r62 = (groovy.lang.MetaMethod) $r32;

        $r33 = <groovy.lang.MetaClassImpl: groovy.lang.MetaMethod AMBIGUOUS_LISTENER_METHOD>;

        if r62 != $r33 goto label13;

        $z19 = 1;

        $z18 = 1;

        goto label14;

     label13:
        $z19 = 0;

        $z18 = 0;

     label14:
        z14 = $z18;

        if r62 == null goto label15;

        if $z19 != 0 goto label15;

        $z6 = r60 instanceof groovy.lang.Closure;

        if $z6 == 0 goto label15;

        $r34 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r35 = virtualinvoke $r34.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r36 = newarray (java.lang.Class)[1];

        $r37 = virtualinvoke r62.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r38 = $r37[0];

        $r39 = virtualinvoke $r38.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r36[0] = $r39;

        $r40 = new org.codehaus.groovy.runtime.ConvertedClosure;

        $r41 = (groovy.lang.Closure) r60;

        specialinvoke $r40.<org.codehaus.groovy.runtime.ConvertedClosure: void <init>(groovy.lang.Closure,java.lang.String)>($r41, r5);

        $r42 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r35, $r36, $r40);

        $r43 = newarray (java.lang.Object)[1];

        $r43[0] = $r42;

        r63 = $r43;

        r60 = $r42;

        goto label16;

     label15:
        r62 = null;

     label16:
        if r62 != null goto label18;

        if r64 == null goto label18;

        $i1 = virtualinvoke r64.<groovy.lang.MetaProperty: int getModifiers()>();

        $z5 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i1);

        if $z5 == 0 goto label17;

        $r29 = new groovy.lang.ReadOnlyPropertyException;

        $r30 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        specialinvoke $r29.<groovy.lang.ReadOnlyPropertyException: void <init>(java.lang.String,java.lang.Class)>(r5, $r30);

        throw $r29;

     label17:
        virtualinvoke r64.<groovy.lang.MetaProperty: void setProperty(java.lang.Object,java.lang.Object)>(r7, r60);

        return;

     label18:
        if r62 != null goto label19;

        if z2 != 0 goto label19;

        if z0 != 0 goto label19;

        $z4 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: boolean hasCategoryInAnyThread()>();

        if $z4 == 0 goto label19;

        $r27 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getCategoryMethodSetter(java.lang.Class,java.lang.String,boolean)>(r3, "set", 1);

        r62 = $r27;

        if $r27 == null goto label19;

        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = r5;

        $r28[1] = r60;

        r63 = $r28;

     label19:
        if r62 != null goto label21;

        $r24 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericSetMethod>;

        if $r24 == null goto label21;

        $r25 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericSetMethod>;

        $z3 = virtualinvoke $r25.<groovy.lang.MetaMethod: boolean isStatic()>();

        if $z3 != 0 goto label20;

        if z0 != 0 goto label21;

     label20:
        $r26 = newarray (java.lang.Object)[2];

        $r26[0] = r5;

        $r26[1] = r60;

        r63 = $r26;

        r62 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericSetMethod>;

     label21:
        if r62 == null goto label24;

        $i0 = lengthof r63;

        if $i0 != 1 goto label22;

        $r20 = virtualinvoke r62.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r21 = $r20[0];

        $r22 = virtualinvoke $r21.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r23 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r60, $r22);

        r63[0] = $r23;

        goto label23;

     label22:
        $r16 = virtualinvoke r62.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r17 = $r16[1];

        $r18 = virtualinvoke $r17.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r19 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r60, $r18);

        r63[1] = $r19;

     label23:
        virtualinvoke r62.<groovy.lang.MetaMethod: java.lang.Object doMethodInvoke(java.lang.Object,java.lang.Object[])>(r7, r63);

        return;

     label24:
        if z14 == 0 goto label25;

        $r10 = new groovy.lang.GroovyRuntimeException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("There are multiple listeners for the property ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Please do not use the bean short form to access this listener.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label25:
        if $r6 == null goto label26;

        $r8 = new groovy.lang.ReadOnlyPropertyException;

        $r9 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        specialinvoke $r8.<groovy.lang.ReadOnlyPropertyException: void <init>(java.lang.String,java.lang.Class)>(r5, $r9);

        throw $r8;

     label26:
        virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingProperty(java.lang.Object,java.lang.String,java.lang.Object,boolean)>(r7, r5, r60, 0);

        return;
    }

    private groovy.lang.MetaProperty getMetaProperty(org.codehaus.groovy.reflection.CachedClass, java.lang.String, boolean, boolean)
    {
        org.codehaus.groovy.reflection.CachedClass $r5, r7;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$Index $r1, $r6;
        org.codehaus.groovy.reflection.SingleKeyHashMap r8;
        java.lang.Object $r3;
        java.lang.String r2;
        groovy.lang.MetaProperty $r4;
        boolean z0, z1;

        r0 := @this: groovy.lang.MetaClassImpl;

        r7 := @parameter0: org.codehaus.groovy.reflection.CachedClass;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

     label1:
        if z0 == 0 goto label2;

        r8 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap staticPropertyIndex>;

        goto label4;

     label2:
        if z1 == 0 goto label3;

        $r6 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndexForSuper>;

        r8 = virtualinvoke $r6.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNullable(org.codehaus.groovy.reflection.CachedClass)>(r7);

        goto label4;

     label3:
        $r1 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassImpl$Index classPropertyIndex>;

        r8 = virtualinvoke $r1.<groovy.lang.MetaClassImpl$Index: org.codehaus.groovy.reflection.SingleKeyHashMap getNullable(org.codehaus.groovy.reflection.CachedClass)>(r7);

     label4:
        if r8 != null goto label6;

        $r5 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        if r7 == $r5 goto label5;

        r7 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

        goto label1;

     label5:
        return null;

     label6:
        $r3 = virtualinvoke r8.<org.codehaus.groovy.reflection.SingleKeyHashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r4 = (groovy.lang.MetaProperty) $r3;

        return $r4;
    }

    public java.lang.Object getAttribute(java.lang.Class, java.lang.Object, java.lang.String, boolean)
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object r1, $r3;
        java.lang.Class r4;
        java.lang.String r2;
        boolean z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r4 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getAttribute(java.lang.Object,java.lang.String)>(r1, r2);

        return $r3;
    }

    public java.lang.Object getAttribute(java.lang.Class, java.lang.Object, java.lang.String, boolean, boolean)
    {
        boolean z0, z1, $z2, $z3, z4, $z6, $z7;
        groovy.lang.GroovyRuntimeException $r17;
        java.lang.Exception $r16;
        org.codehaus.groovy.reflection.CachedClass $r4;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r13;
        groovy.lang.MetaBeanProperty r24;
        java.lang.StringBuffer $r18, $r19, $r20;
        java.lang.String r5, $r21;
        groovy.lang.MetaProperty $r6, r23;
        groovy.lang.MissingFieldException $r7;
        groovy.lang.MetaClass $r14;
        java.lang.Class $r1, $r2, r3, $r8, $r11, $r12, $r22;
        java.lang.Object r9, $r10, $r15;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.Class;

        r9 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        z4 := @parameter4: boolean;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        $r2 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r1 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r1 != null goto label01;

        $r22 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r22;

        goto label02;

     label01:
        $r22 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label02:
        if $r2 == $r22 goto label03;

        $z3 = r9 instanceof java.lang.Class;

        if $z3 == 0 goto label03;

        $z7 = 1;

        $z6 = 1;

        goto label04;

     label03:
        $z7 = 0;

        $z6 = 0;

     label04:
        z0 = $z7;

        if $z6 == 0 goto label05;

        $r11 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        if r9 == $r11 goto label05;

        $r13 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r12 = (java.lang.Class) r9;

        $r14 = interfaceinvoke $r13.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r12);

        $r15 = interfaceinvoke $r14.<groovy.lang.MetaClass: java.lang.Object getAttribute(java.lang.Class,java.lang.Object,java.lang.String,boolean)>(r3, r9, r5, z1);

        return $r15;

     label05:
        $r4 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r3);

        $r6 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty getMetaProperty(org.codehaus.groovy.reflection.CachedClass,java.lang.String,boolean,boolean)>($r4, r5, z1, z0);

        r23 = $r6;

        if $r6 == null goto label10;

        $z2 = $r6 instanceof groovy.lang.MetaBeanProperty;

        if $z2 == 0 goto label06;

        r24 = (groovy.lang.MetaBeanProperty) $r6;

        r23 = virtualinvoke r24.<groovy.lang.MetaBeanProperty: org.codehaus.groovy.reflection.CachedField getField()>();

     label06:
        if r23 == null goto label08;

        $r10 = virtualinvoke r23.<groovy.lang.MetaProperty: java.lang.Object getProperty(java.lang.Object)>(r9);

     label07:
        return $r10;

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        $r17 = new groovy.lang.GroovyRuntimeException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot read field: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r16);

        throw $r17;

     label10:
        $r7 = new groovy.lang.MissingFieldException;

        $r8 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        specialinvoke $r7.<groovy.lang.MissingFieldException: void <init>(java.lang.String,java.lang.Class)>(r5, $r8);

        throw $r7;

        catch java.lang.Exception from label06 to label07 with label09;
    }

    public void setAttribute(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object, boolean, boolean)
    {
        groovy.lang.MetaBeanProperty r11;
        java.lang.String r5;
        groovy.lang.MetaProperty $r6, r17;
        groovy.lang.MissingFieldException $r7;
        boolean z0, z1, $z2, z3, $z4, $z6, $z7;
        groovy.lang.MetaClass $r15;
        org.codehaus.groovy.reflection.CachedClass $r4;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassRegistry $r14;
        java.lang.Class $r1, $r2, r3, $r8, $r12, $r13, $r16;
        java.lang.Object r9, r10;

        r0 := @this: groovy.lang.MetaClassImpl;

        r3 := @parameter0: java.lang.Class;

        r9 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.Object;

        z1 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void checkInitalised()>();

        $r2 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r1 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

        if $r1 != null goto label1;

        $r16 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Class>;

     label2:
        if $r2 == $r16 goto label3;

        $z4 = r9 instanceof java.lang.Class;

        if $z4 == 0 goto label3;

        $z7 = 1;

        $z6 = 1;

        goto label4;

     label3:
        $z7 = 0;

        $z6 = 0;

     label4:
        z0 = $z6;

        if $z7 == 0 goto label5;

        $r12 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        if r9 == $r12 goto label5;

        $r14 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaClassRegistry registry>;

        $r13 = (java.lang.Class) r9;

        $r15 = interfaceinvoke $r14.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r13);

        interfaceinvoke $r15.<groovy.lang.MetaClass: void setAttribute(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object,boolean,boolean)>(r3, r9, r5, r10, z1, z3);

        return;

     label5:
        $r4 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r3);

        $r6 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty getMetaProperty(org.codehaus.groovy.reflection.CachedClass,java.lang.String,boolean,boolean)>($r4, r5, z1, z0);

        r17 = $r6;

        if $r6 == null goto label7;

        $z2 = $r6 instanceof groovy.lang.MetaBeanProperty;

        if $z2 == 0 goto label6;

        r11 = (groovy.lang.MetaBeanProperty) $r6;

        r17 = virtualinvoke r11.<groovy.lang.MetaBeanProperty: org.codehaus.groovy.reflection.CachedField getField()>();

     label6:
        if r17 == null goto label7;

        virtualinvoke r17.<groovy.lang.MetaProperty: void setProperty(java.lang.Object,java.lang.Object)>(r9, r10);

        return;

     label7:
        $r7 = new groovy.lang.MissingFieldException;

        $r8 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        specialinvoke $r7.<groovy.lang.MissingFieldException: void <init>(java.lang.String,java.lang.Class)>(r5, $r8);

        throw $r7;
    }

    public org.codehaus.groovy.ast.ClassNode getClassNode()
    {
        java.net.URL $r13, r33;
        java.lang.Thread $r21;
        boolean $z0;
        groovy.lang.GroovyRuntimeException $r24;
        java.lang.Exception $r23;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$4 $r14;
        groovy.lang.MetaClassImpl$5 $r17;
        java.lang.ClassLoader $r12, $r16, $r22;
        groovy.lang.GroovyClassLoader r19;
        org.codehaus.groovy.control.CompilationUnit $r20;
        java.lang.StringBuffer $r6, $r8, $r9, $r25, $r26, $r27, $r28, $r29;
        int $i0;
        java.lang.String $r5, $r7, $r10, $r30, r32;
        org.codehaus.groovy.ast.ClassNode $r1, $r34;
        java.lang.Class $r2, $r3, $r4, $r11, $r15, $r31;
        java.lang.Object $r18;

        r0 := @this: groovy.lang.MetaClassImpl;

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.ast.ClassNode classNode>;

        if $r1 != null goto label8;

        $r2 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r2 != null goto label1;

        $r31 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject> = $r31;

        goto label2;

     label1:
        $r31 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$GroovyObject>;

     label2:
        $r3 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $z0 = virtualinvoke $r31.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label8;

        $r4 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        r32 = $r5;

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(36);

        if $i0 <= 0 goto label3;

        r32 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke r32.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".groovy");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r13 = virtualinvoke $r12.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r10);

        r33 = $r13;

        if $r13 != null goto label4;

        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r22 = virtualinvoke $r21.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r33 = virtualinvoke $r22.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r10);

     label4:
        if r33 == null goto label8;

     label5:
        $r14 = new groovy.lang.MetaClassImpl$4;

        specialinvoke $r14.<groovy.lang.MetaClassImpl$4: void <init>(groovy.lang.MetaClassImpl)>(r0);

        $r15 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r17 = new groovy.lang.MetaClassImpl$5;

        specialinvoke $r17.<groovy.lang.MetaClassImpl$5: void <init>(groovy.lang.MetaClassImpl,java.lang.ClassLoader)>(r0, $r16);

        $r18 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r17);

        r19 = (groovy.lang.GroovyClassLoader) $r18;

        $r20 = new org.codehaus.groovy.control.CompilationUnit;

        specialinvoke $r20.<org.codehaus.groovy.control.CompilationUnit: void <init>()>();

        virtualinvoke $r20.<org.codehaus.groovy.control.CompilationUnit: void setClassgenCallback(org.codehaus.groovy.control.CompilationUnit$ClassgenCallback)>($r14);

        virtualinvoke $r20.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.net.URL)>(r33);

        virtualinvoke $r20.<org.codehaus.groovy.control.CompilationUnit: void compile(int)>(7);

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;

        $r24 = new groovy.lang.GroovyRuntimeException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception thrown parsing: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Reason: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r23);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r23);

        throw $r24;

     label8:
        $r34 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.ast.ClassNode classNode>;

        return $r34;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.lang.String toString()
    {
        groovy.lang.MetaClassImpl r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r7;
        java.lang.Class $r5;
        java.lang.String $r2, $r8;

        r1 := @this: groovy.lang.MetaClassImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r5 = r1.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public void addMetaMethod(groovy.lang.MetaMethod)
    {
        java.lang.RuntimeException $r6;
        org.codehaus.groovy.reflection.CachedClass $r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r5;
        groovy.lang.MetaMethod r1;
        groovy.lang.MetaClassImpl r0;
        java.lang.StringBuffer $r7, $r8, $r9;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r3;
        java.lang.Class $r4;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: groovy.lang.MetaMethod;

        $z0 = virtualinvoke r0.<groovy.lang.MetaClassImpl: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Already initialized, cannot add new method: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r2 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r3 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r4 = virtualinvoke $r2.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = virtualinvoke $r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>($r4);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void addMetaMethodToIndex(groovy.lang.MetaMethod,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r1, $r5);

        return;
    }

    private void addMetaMethodToIndex(groovy.lang.MetaMethod, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r5;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r3;
        groovy.lang.MetaMethod r1;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r4, $r7, $r10;
        java.lang.Object $r6, $r8, $r9, $r11;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: groovy.lang.MetaMethod;

        r3 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void checkIfStdMethod(groovy.lang.MetaMethod)>(r1);

        $r2 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r4 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r2, r3);

        $z0 = virtualinvoke r1.<groovy.lang.MetaMethod: boolean isStatic()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r9 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object staticMethods>;

        $r11 = virtualinvoke $r10.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r9, r1);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object staticMethods> = $r11;

     label1:
        $r7 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r6 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r6, r1);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r8;

        return;
    }

    private void addMetaMethodToSuperIndex(groovy.lang.MetaMethod, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r5;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r3;
        groovy.lang.MetaMethod r1;
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r4, $r7, $r10;
        java.lang.Object $r6, $r8, $r9, $r11;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: groovy.lang.MetaMethod;

        r3 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void checkIfStdMethod(groovy.lang.MetaMethod)>(r1);

        $r2 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r4 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r2, r3);

        $z0 = virtualinvoke r1.<groovy.lang.MetaMethod: boolean isStatic()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r9 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object staticMethods>;

        $r11 = virtualinvoke $r10.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r9, r1);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object staticMethods> = $r11;

     label1:
        $r7 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        $r6 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r6, r1);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper> = $r8;

        return;
    }

    private void checkIfStdMethod(groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r2, $r10, $r12;
        int $i0, $i1, $i2;
        java.lang.String $r9, $r11, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.groovy.reflection.CachedClass $r3, $r6;
        groovy.lang.MetaMethod r1, $r13, $r14, $r15, $r16;
        groovy.lang.MetaClassImpl r0;
        java.lang.Class $r4, $r5, $r7, $r8, $r18, $r19;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: groovy.lang.MetaMethod;

        $z0 = specialinvoke r0.<groovy.lang.MetaClassImpl: boolean isGenericGetMethod(groovy.lang.MetaMethod)>(r1);

        if $z0 == 0 goto label1;

        $r14 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericGetMethod>;

        if $r14 != null goto label1;

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericGetMethod> = r1;

        goto label2;

     label1:
        $z1 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isGenericSetMethod(groovy.lang.MetaMethod)>(r1);

        if $z1 == 0 goto label2;

        $r13 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericSetMethod>;

        if $r13 != null goto label2;

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod genericSetMethod> = r1;

     label2:
        $r15 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingGet>;

        if $r15 != null goto label3;

        $r11 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("propertyMissing");

        if $z3 == 0 goto label3;

        $r12 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i2 = lengthof $r12;

        if $i2 != 1 goto label3;

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingGet> = r1;

     label3:
        $r16 = r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingSet>;

        if $r16 != null goto label4;

        $r9 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("propertyMissing");

        if $z2 == 0 goto label4;

        $r10 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i1 = lengthof $r10;

        if $i1 != 2 goto label4;

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod propertyMissingSet> = r1;

     label4:
        $r17 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $z4 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("methodMissing");

        if $z4 == 0 goto label9;

        $r2 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i0 = lengthof $r2;

        if $i0 != 2 goto label9;

        $r3 = $r2[0];

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label5;

        $r18 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

     label6:
        if $r4 != $r18 goto label9;

        $r6 = $r2[1];

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r8 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object>;

        if $r8 != null goto label7;

        $r19 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object> = $r19;

        goto label8;

     label7:
        $r19 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object>;

     label8:
        if $r7 != $r19 goto label9;

        r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod methodMissing> = r1;

     label9:
        return;
    }

    protected boolean isInitialized()
    {
        groovy.lang.MetaClassImpl r0;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $z0 = r0.<groovy.lang.MetaClassImpl: boolean initialized>;

        return $z0;
    }

    private java.lang.Boolean getMatchKindForCategory(groovy.lang.MetaMethod, groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r1, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.Boolean $r8, $r9, $r12, $r13;
        boolean $z0;
        org.codehaus.groovy.reflection.CachedClass $r4, $r6, $r10, $r11;
        groovy.lang.MetaMethod r0, r2;
        groovy.lang.MetaClassImpl r14;
        java.lang.Class $r5, $r7;

        r14 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: groovy.lang.MetaMethod;

        r2 := @parameter1: groovy.lang.MetaMethod;

        $r1 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r3 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i1 = lengthof $r1;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label1;

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r13;

     label1:
        i3 = 0;

     label2:
        $i2 = lengthof $r1;

        if i3 >= $i2 goto label4;

        $r11 = $r1[i3];

        $r10 = $r3[i3];

        if $r11 == $r10 goto label3;

        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r12;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r4 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r6 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        if $r5 != $r7 goto label5;

        $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r9;

     label5:
        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z0 == 0 goto label6;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r8;

     label6:
        return null;
    }

    private void filterMatchingMethodForCategory(org.codehaus.groovy.reflection.FastArray, groovy.lang.MetaMethod)
    {
        java.lang.Object[] $r1;
        groovy.lang.MetaMethod r2, r4;
        groovy.lang.MetaClassImpl r5;
        int $i0, i1;
        java.lang.Boolean $r6, $r7;
        java.lang.Object $r3;
        org.codehaus.groovy.reflection.FastArray r0;

        r5 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: org.codehaus.groovy.reflection.FastArray;

        r2 := @parameter1: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: int size()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>(r2);

        return;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label2:
        if i1 == $i0 goto label5;

        $r3 = $r1[i1];

        r4 = (groovy.lang.MetaMethod) $r3;

        $r6 = specialinvoke r5.<groovy.lang.MetaClassImpl: java.lang.Boolean getMatchKindForCategory(groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r4, r2);

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r6 != $r7 goto label3;

        virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: void set(int,java.lang.Object)>(i1, r2);

        return;

     label3:
        if $r6 != null goto label4;

        return;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>(r2);

        return;
    }

    private int findMatchingMethod(org.codehaus.groovy.reflection.CachedMethod[], int, int, groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r2, $r4;
        org.codehaus.groovy.reflection.CachedMethod[] r0;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i8;
        boolean z0;
        org.codehaus.groovy.reflection.CachedMethod r1;
        org.codehaus.groovy.reflection.CachedClass $r5, $r6;
        groovy.lang.MetaMethod r3;
        groovy.lang.MetaClassImpl r7;

        r7 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: org.codehaus.groovy.reflection.CachedMethod[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: groovy.lang.MetaMethod;

        i5 = i0;

     label1:
        if i5 > i1 goto label6;

        r1 = r0[i5];

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r4 = virtualinvoke r3.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i3 = lengthof $r2;

        $i2 = lengthof $r4;

        if $i3 != $i2 goto label5;

        z0 = 1;

        i6 = 0;

     label2:
        $i4 = lengthof $r2;

        if i6 >= $i4 goto label4;

        $r6 = $r2[i6];

        $r5 = $r4[i6];

        if $r6 == $r5 goto label3;

        z0 = 0;

        goto label4;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        return i5;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        $i8 = (int) -1;

        return $i8;
    }

    private groovy.lang.MetaMethod findMethod(org.codehaus.groovy.reflection.CachedMethod)
    {
        java.lang.Throwable $r9;
        java.lang.Object[] $r6;
        int i0, i1;
        java.lang.String $r3;
        org.codehaus.groovy.reflection.FastArray r10;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.reflection.CachedMethod r0;
        org.codehaus.groovy.reflection.CachedClass $r5;
        groovy.lang.MetaMethod r8, r11;
        groovy.lang.MetaClassImpl r1;
        java.lang.Class $r2;
        java.lang.Object $r4, $r7;

        r1 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: org.codehaus.groovy.reflection.CachedMethod;

        if r0 != null goto label01;

        return null;

     label01:
        $r2 = r1.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        $r4 = specialinvoke r1.<groovy.lang.MetaClassImpl: java.lang.Object getMethods(java.lang.Class,java.lang.String,boolean)>($r2, $r3, 0);

        $z0 = $r4 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label05;

        r10 = (org.codehaus.groovy.reflection.FastArray) $r4;

        i0 = r10.<org.codehaus.groovy.reflection.FastArray: int size>;

        $r6 = virtualinvoke r10.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label02:
        if i1 == i0 goto label04;

        $r7 = $r6[i1];

        r8 = (groovy.lang.MetaMethod) $r7;

        $z2 = virtualinvoke r8.<groovy.lang.MetaMethod: boolean isMethod(groovy.lang.MetaMethod)>(r0);

        if $z2 == 0 goto label03;

        return r8;

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        goto label06;

     label05:
        r11 = (groovy.lang.MetaMethod) $r4;

        $z1 = virtualinvoke r11.<groovy.lang.MetaMethod: boolean isMethod(groovy.lang.MetaMethod)>(r0);

        if $z1 == 0 goto label06;

        return r11;

     label06:
        $r5 = r0.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass cachedClass>;

        entermonitor $r5;

     label07:
        exitmonitor $r5;

     label08:
        return r0;

     label09:
        $r9 := @caughtexception;

        exitmonitor $r5;

     label10:
        throw $r9;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static java.lang.Object doConstructorInvoke(java.lang.Class, org.codehaus.groovy.reflection.CachedConstructor, java.lang.Object[], boolean)
    {
        org.codehaus.groovy.reflection.CachedConstructor r0;
        java.lang.Object[] r1;
        java.lang.Object $r2;
        java.lang.Class r3;
        boolean z0;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: org.codehaus.groovy.reflection.CachedConstructor;

        r1 := @parameter2: java.lang.Object[];

        z0 := @parameter3: boolean;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object doConstructorInvoke(org.codehaus.groovy.reflection.CachedConstructor,java.lang.Object[])>(r0, r1);

        return $r2;
    }

    private java.lang.Object chooseMethod(java.lang.String, java.lang.Object, java.lang.Class[], boolean)
    {
        java.lang.Object[] $r5;
        java.util.ArrayList $r10, $r11;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r4;
        org.codehaus.groovy.reflection.FastArray r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.codehaus.groovy.runtime.metaclass.MethodSelectionException $r3;
        java.lang.Class[] r2;
        java.util.List $r7;
        groovy.lang.MetaClassImpl r6;
        java.lang.Object r0, $r8, r9, $r13, r14, r15;
        java.lang.Class $r12;

        r6 := @this: groovy.lang.MetaClassImpl;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Class[];

        z6 := @parameter3: boolean;

        $z0 = r0 instanceof groovy.lang.MetaMethod;

        if $z0 == 0 goto label02;

        $z5 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isValidMethod(java.lang.Object,java.lang.Class[])>(r0, r2);

        if $z5 == 0 goto label01;

        return r0;

     label01:
        return null;

     label02:
        r1 = (org.codehaus.groovy.reflection.FastArray) r0;

        if r1 != null goto label03;

        return null;

     label03:
        $i0 = virtualinvoke r1.<org.codehaus.groovy.reflection.FastArray: int size()>();

        if $i0 > 0 goto label04;

        return null;

     label04:
        if $i0 != 1 goto label06;

        $r13 = virtualinvoke r1.<org.codehaus.groovy.reflection.FastArray: java.lang.Object get(int)>(0);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isValidMethod(java.lang.Object,java.lang.Class[])>($r13, r2);

        if $z4 == 0 goto label05;

        return $r13;

     label05:
        return null;

     label06:
        if r2 == null goto label07;

        $i1 = lengthof r2;

        if $i1 != 0 goto label08;

     label07:
        r14 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object chooseEmptyMethodParams(org.codehaus.groovy.reflection.FastArray)>(r1);

        goto label17;

     label08:
        $i2 = lengthof r2;

        if $i2 != 1 goto label09;

        $r12 = r2[0];

        if $r12 != null goto label09;

        r14 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object chooseMostGeneralMethodWith1NullParam(org.codehaus.groovy.reflection.FastArray)>(r1);

        goto label17;

     label09:
        r15 = null;

        $i3 = r1.<org.codehaus.groovy.reflection.FastArray: int size>;

        $r5 = virtualinvoke r1.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i4 = 0;

     label10:
        if i4 == $i3 goto label14;

        r9 = $r5[i4];

        $z2 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isValidMethod(java.lang.Object,java.lang.Class[])>(r9, r2);

        if $z2 == 0 goto label13;

        if r15 != null goto label11;

        r15 = r9;

        goto label13;

     label11:
        $z3 = r15 instanceof java.util.ArrayList;

        if $z3 == 0 goto label12;

        $r11 = (java.util.ArrayList) r15;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        goto label13;

     label12:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(4);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        r15 = $r10;

     label13:
        i4 = i4 + 1;

        goto label10;

     label14:
        if r15 != null goto label15;

        return null;

     label15:
        $z1 = r15 instanceof java.util.ArrayList;

        if $z1 != 0 goto label16;

        return r15;

     label16:
        $r7 = (java.util.List) r15;

        $r8 = specialinvoke r6.<groovy.lang.MetaClassImpl: java.lang.Object chooseMostSpecificParams(java.lang.String,java.util.List,java.lang.Class[])>(r4, $r7, r2);

        return $r8;

     label17:
        if r14 == null goto label18;

        return r14;

     label18:
        $r3 = new org.codehaus.groovy.runtime.metaclass.MethodSelectionException;

        specialinvoke $r3.<org.codehaus.groovy.runtime.metaclass.MethodSelectionException: void <init>(java.lang.String,org.codehaus.groovy.reflection.FastArray,java.lang.Class[])>(r4, r1, r2);

        throw $r3;
    }

    private java.lang.Object chooseMostSpecificParams(java.lang.String, java.util.List, java.lang.Class[])
    {
        byte $b3, $b5, $b6;
        boolean $z0, $z1;
        groovy.lang.GroovyRuntimeException $r46;
        java.util.List r1;
        groovy.lang.MetaClassImpl r5;
        org.codehaus.groovy.reflection.ParameterTypes $r29, $r38;
        long $l2, l7;
        java.lang.StringBuffer $r4, $r8, $r9, $r11, $r14, $r15, $r18, $r21, $r24, $r25, $r32, $r33, $r35, $r41, $r42, $r43, $r44, $r45;
        int $i0, $i1, $i4, $i8;
        java.lang.String $r7, r10, $r12, $r16, $r20, $r22, $r34, r39;
        java.util.LinkedList $r40;
        java.util.Iterator $r2, $r26;
        java.lang.Class[] r19, $r30;
        java.lang.Class $r6;
        java.lang.Object $r28, $r36, $r37;

        r5 := @this: groovy.lang.MetaClassImpl;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r19 := @parameter2: java.lang.Class[];

        l7 = -1L;

        $r40 = new java.util.LinkedList;

        specialinvoke $r40.<java.util.LinkedList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r37 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r38 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: org.codehaus.groovy.reflection.ParameterTypes getParameterTypes(java.lang.Object)>($r37);

        $l2 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: long calculateParameterDistance(java.lang.Class[],org.codehaus.groovy.reflection.ParameterTypes)>(r19, $r38);

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label02;

        return $r37;

     label02:
        $i4 = virtualinvoke $r40.<java.util.LinkedList: int size()>();

        if $i4 != 0 goto label03;

        virtualinvoke $r40.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

        l7 = $l2;

        goto label05;

     label03:
        $b5 = $l2 cmp l7;

        $i8 = (int) $b5;

        if $i8 >= 0 goto label04;

        l7 = $l2;

        virtualinvoke $r40.<java.util.LinkedList: void clear()>();

        virtualinvoke $r40.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

        goto label05;

     label04:
        $b6 = $l2 cmp l7;

        if $b6 != 0 goto label05;

        virtualinvoke $r40.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

     label05:
        goto label01;

     label06:
        $i0 = virtualinvoke $r40.<java.util.LinkedList: int size()>();

        if $i0 != 1 goto label07;

        $r36 = virtualinvoke $r40.<java.util.LinkedList: java.lang.Object getFirst()>();

        return $r36;

     label07:
        $i1 = virtualinvoke $r40.<java.util.LinkedList: int size()>();

        if $i1 != 0 goto label08;

        return null;

     label08:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ambiguous method overloading for method ");

        $r6 = r5.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".\nCannot resolve which method to invoke for ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r20 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" due to overlapping prototypes between:");

        r39 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = virtualinvoke $r40.<java.util.LinkedList: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r28 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        $r29 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: org.codehaus.groovy.reflection.ParameterTypes getParameterTypes(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] getNativeParameterTypes()>();

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r39);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t");

        $r34 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        r39 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label10:
        $r46 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r46.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>(r39);

        throw $r46;
    }

    private boolean isGenericGetMethod(groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r2;
        org.codehaus.groovy.reflection.CachedClass $r3;
        groovy.lang.MetaMethod r0;
        groovy.lang.MetaClassImpl r6;
        int $i0;
        java.lang.Class $r4, $r5, $r7;
        java.lang.String $r1;
        boolean $z0, $z1;

        r6 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: groovy.lang.MetaMethod;

        $r1 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("get");

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i0 = lengthof $r2;

        if $i0 != 1 goto label3;

        $r3 = $r2[0];

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label1;

        $r7 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

     label2:
        if $r4 != $r7 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public synchronized void initialize()
    {
        groovy.lang.MetaClassImpl r0;
        boolean $z0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $z0 = virtualinvoke r0.<groovy.lang.MetaClassImpl: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void fillMethodIndex()>();

        specialinvoke r0.<groovy.lang.MetaClassImpl: void addProperties()>();

        r0.<groovy.lang.MetaClassImpl: boolean initialized> = 1;

     label1:
        return;
    }

    private void addProperties()
    {
        java.beans.PropertyDescriptor[] $r4;
        java.beans.EventSetDescriptor r6;
        java.lang.reflect.Method[] $r7;
        java.util.Map $r12, $r13, $r15;
        java.beans.BeanInfo r21;
        int $i0, $i1, i2, i3;
        java.lang.String $r11;
        java.lang.reflect.Method r8, $r9;
        boolean $z0, $z1;
        java.security.PrivilegedActionException $r18;
        groovy.lang.GroovyRuntimeException $r19;
        java.lang.Exception $r20;
        org.codehaus.groovy.reflection.CachedMethod $r10;
        groovy.lang.MetaMethod $r14;
        groovy.lang.MetaClassImpl r0;
        groovy.lang.MetaClassImpl$6 $r16;
        groovy.lang.MetaClassImpl$7 $r2;
        java.lang.Class $r1;
        java.lang.Object $r3, $r17;
        java.beans.EventSetDescriptor[] $r5;

        r0 := @this: groovy.lang.MetaClassImpl;

     label01:
        $r1 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $z0 = specialinvoke r0.<groovy.lang.MetaClassImpl: boolean isBeanDerivative(java.lang.Class)>($r1);

        if $z0 == 0 goto label02;

        $r16 = new groovy.lang.MetaClassImpl$6;

        specialinvoke $r16.<groovy.lang.MetaClassImpl$6: void <init>(groovy.lang.MetaClassImpl)>(r0);

        $r17 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r16);

        r21 = (java.beans.BeanInfo) $r17;

        goto label03;

     label02:
        $r2 = new groovy.lang.MetaClassImpl$7;

        specialinvoke $r2.<groovy.lang.MetaClassImpl$7: void <init>(groovy.lang.MetaClassImpl)>(r0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r2);

        r21 = (java.beans.BeanInfo) $r3;

     label03:
        goto label05;

     label04:
        $r18 := @caughtexception;

        $r19 = new groovy.lang.GroovyRuntimeException;

        $r20 = virtualinvoke $r18.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        specialinvoke $r19.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("exception during bean introspection", $r20);

        throw $r19;

     label05:
        $r4 = interfaceinvoke r21.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        specialinvoke r0.<groovy.lang.MetaClassImpl: void setupProperties(java.beans.PropertyDescriptor[])>($r4);

        $r5 = interfaceinvoke r21.<java.beans.BeanInfo: java.beans.EventSetDescriptor[] getEventSetDescriptors()>();

        i2 = 0;

     label06:
        $i0 = lengthof $r5;

        if i2 >= $i0 goto label11;

        r6 = $r5[i2];

        $r7 = virtualinvoke r6.<java.beans.EventSetDescriptor: java.lang.reflect.Method[] getListenerMethods()>();

        i3 = 0;

     label07:
        $i1 = lengthof $r7;

        if i3 >= $i1 goto label10;

        r8 = $r7[i3];

        $r9 = virtualinvoke r6.<java.beans.EventSetDescriptor: java.lang.reflect.Method getAddListenerMethod()>();

        $r10 = staticinvoke <org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedMethod find(java.lang.reflect.Method)>($r9);

        specialinvoke r0.<groovy.lang.MetaClassImpl: void addToAllMethodsIfPublic(groovy.lang.MetaMethod)>($r10);

        $r11 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.String getName()>();

        $r12 = r0.<groovy.lang.MetaClassImpl: java.util.Map listeners>;

        $z1 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z1 == 0 goto label08;

        $r15 = r0.<groovy.lang.MetaClassImpl: java.util.Map listeners>;

        $r14 = <groovy.lang.MetaClassImpl: groovy.lang.MetaMethod AMBIGUOUS_LISTENER_METHOD>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r14);

        goto label09;

     label08:
        $r13 = r0.<groovy.lang.MetaClassImpl: java.util.Map listeners>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        i2 = i2 + 1;

        goto label06;

     label11:
        return;

        catch java.security.PrivilegedActionException from label01 to label03 with label04;
    }

    private boolean isBeanDerivative(java.lang.Class)
    {
        java.lang.Class[] $r1;
        java.util.List $r2;
        groovy.lang.MetaClassImpl r4;
        java.lang.Class r0, $r3, r5, $r6;
        boolean $z0;

        r4 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: java.lang.Class;

        r5 = r0;

     label1:
        if r5 == null goto label5;

        $r1 = virtualinvoke r5.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r3 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$beans$BeanInfo>;

        if $r3 != null goto label2;

        $r6 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.beans.BeanInfo");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$beans$BeanInfo> = $r6;

        goto label3;

     label2:
        $r6 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$beans$BeanInfo>;

     label3:
        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        r5 = virtualinvoke r5.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label5:
        return 0;
    }

    private void addToAllMethodsIfPublic(groovy.lang.MetaMethod)
    {
        groovy.lang.MetaMethod r0;
        java.util.List $r2;
        groovy.lang.MetaClassImpl r1;
        int $i0;
        boolean $z0;

        r1 := @this: groovy.lang.MetaClassImpl;

        r0 := @parameter0: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 == 0 goto label1;

        $r2 = r1.<groovy.lang.MetaClassImpl: java.util.List allMethods>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public java.util.List getMethods()
    {
        java.util.List $r1;
        groovy.lang.MetaClassImpl r0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $r1 = r0.<groovy.lang.MetaClassImpl: java.util.List allMethods>;

        return $r1;
    }

    public java.util.List getMetaMethods()
    {
        java.util.Set $r2;
        groovy.lang.MetaClassImpl r1;
        java.util.ArrayList $r0;

        r1 := @this: groovy.lang.MetaClassImpl;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<groovy.lang.MetaClassImpl: java.util.Set newGroovyMethodsSet>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    protected void dropStaticMethodCache(java.lang.String)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r2;
        groovy.lang.MetaClassImpl r0;
        java.lang.String r1;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void clearCaches(java.lang.String)>(r1);

        return;
    }

    protected void dropMethodCache(java.lang.String)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r2;
        groovy.lang.MetaClassImpl r0;
        java.lang.String r1;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void clearCaches(java.lang.String)>(r1);

        return;
    }

    public java.lang.Object getProperty(java.lang.Object, java.lang.String)
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object r1, $r4;
        java.lang.Class $r3;
        java.lang.String r2;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r4 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>($r3, r1, r2, 0, 0);

        return $r4;
    }

    public void setProperty(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object r1, r3;
        java.lang.Class $r4;
        java.lang.String r2;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void setProperty(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object,boolean,boolean)>($r4, r1, r2, r3, 0, 0);

        return;
    }

    public java.lang.Object getAttribute(java.lang.Object, java.lang.String)
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object r1, $r4;
        java.lang.Class $r3;
        java.lang.String r2;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r4 = virtualinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getAttribute(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>($r3, r1, r2, 0, 0);

        return $r4;
    }

    public void setAttribute(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClassImpl r0;
        java.lang.Object r1, r3;
        java.lang.Class $r4;
        java.lang.String r2;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        virtualinvoke r0.<groovy.lang.MetaClassImpl: void setAttribute(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object,boolean,boolean)>($r4, r1, r2, r3, 0, 0);

        return;
    }

    public groovy.lang.MetaMethod pickMethod(java.lang.String, java.lang.Class[])
    {
        groovy.lang.MetaMethod $r4;
        groovy.lang.MetaClassImpl r0;
        java.lang.Class[] r2;
        java.lang.Class $r3;
        java.lang.String r1;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class[];

        $r3 = r0.<groovy.lang.MetaClassImpl: java.lang.Class theClass>;

        $r4 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod getMethodWithoutCaching(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>($r3, r1, r2, 0);

        return $r4;
    }

    protected groovy.lang.MetaMethod retrieveMethod(java.lang.String, java.lang.Class[])
    {
        groovy.lang.MetaMethod $r3;
        groovy.lang.MetaClassImpl r0;
        java.lang.Class[] r2;
        java.lang.String r1;

        r0 := @this: groovy.lang.MetaClassImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class[];

        $r3 = virtualinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r1, r2);

        return $r3;
    }

    protected void clearInvocationCaches()
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r1;
        groovy.lang.MetaClassImpl r0;

        r0 := @this: groovy.lang.MetaClassImpl;

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        virtualinvoke $r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void clearCaches()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static int access$200(groovy.lang.MetaClassImpl, org.codehaus.groovy.reflection.CachedMethod[], int, int, groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedMethod[] r1;
        groovy.lang.MetaMethod r2;
        groovy.lang.MetaClassImpl r0;
        int i0, i1, $i2;

        r0 := @parameter0: groovy.lang.MetaClassImpl;

        r1 := @parameter1: org.codehaus.groovy.reflection.CachedMethod[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: groovy.lang.MetaMethod;

        $i2 = specialinvoke r0.<groovy.lang.MetaClassImpl: int findMatchingMethod(org.codehaus.groovy.reflection.CachedMethod[],int,int,groovy.lang.MetaMethod)>(r1, i0, i1, r2);

        return $i2;
    }

    static org.codehaus.groovy.ast.ClassNode access$302(groovy.lang.MetaClassImpl, org.codehaus.groovy.ast.ClassNode)
    {
        groovy.lang.MetaClassImpl r0;
        org.codehaus.groovy.ast.ClassNode r1;

        r0 := @parameter0: groovy.lang.MetaClassImpl;

        r1 := @parameter1: org.codehaus.groovy.ast.ClassNode;

        r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.ast.ClassNode classNode> = r1;

        return r1;
    }

    static org.codehaus.groovy.runtime.metaclass.MetaMethodIndex access$400(groovy.lang.MetaClassImpl)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex $r1;
        groovy.lang.MetaClassImpl r0;

        r0 := @parameter0: groovy.lang.MetaClassImpl;

        $r1 = r0.<groovy.lang.MetaClassImpl: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex metaMethodIndex>;

        return $r1;
    }

    static org.codehaus.groovy.reflection.SingleKeyHashMap$Copier access$500()
    {
        org.codehaus.groovy.reflection.SingleKeyHashMap$Copier $r0;

        $r0 = <groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap$Copier NAME_INDEX_COPIER>;

        return $r0;
    }

    static org.codehaus.groovy.reflection.SingleKeyHashMap$Copier access$600()
    {
        org.codehaus.groovy.reflection.SingleKeyHashMap$Copier $r0;

        $r0 = <groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap$Copier METHOD_INDEX_COPIER>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r10;
        java.util.HashMap $r13;
        java.lang.String $r7;
        groovy.lang.MetaClassImpl$DummyMetaMethod $r9, $r11;
        java.lang.Class[] $r0, $r3, $r5, $r12;
        java.util.logging.Logger $r8;
        groovy.lang.MetaClassImpl$8 $r14;
        groovy.lang.MetaClassImpl$9 $r15;
        java.lang.Class $r1, $r2, $r4, $r6, $r16, $r17, $r18, $r19;

        <groovy.lang.MetaClassImpl: java.lang.String PROPERTY_MISSING> = "propertyMissing";

        <groovy.lang.MetaClassImpl: java.lang.String METHOD_MISSING> = "methodMissing";

        <groovy.lang.MetaClassImpl: java.lang.String STATIC_PROPERTY_MISSING> = "$static_propertyMissing";

        <groovy.lang.MetaClassImpl: java.lang.String STATIC_METHOD_MISSING> = "$static_methodMissing";

        <groovy.lang.MetaClassImpl: java.lang.String CLOSURE_CURRY_METHOD> = "curry";

        <groovy.lang.MetaClassImpl: java.lang.String CLOSURE_DO_CALL_METHOD> = "doCall";

        <groovy.lang.MetaClassImpl: java.lang.String CLOSURE_CALL_METHOD> = "call";

        $r0 = newarray (java.lang.Class)[2];

        $r1 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

        if $r1 != null goto label1;

        $r16 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

     label2:
        $r0[0] = $r16;

        $r2 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$Object>;

     label4:
        $r0[1] = $r17;

        <groovy.lang.MetaClassImpl: java.lang.Class[] METHOD_MISSING_ARGS> = $r0;

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

        if $r4 != null goto label5;

        $r18 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.lang.MetaClassImpl: java.lang.Class class$java$lang$String>;

     label6:
        $r3[0] = $r18;

        <groovy.lang.MetaClassImpl: java.lang.Class[] GETTER_MISSING_ARGS> = $r3;

        $r5 = <groovy.lang.MetaClassImpl: java.lang.Class[] METHOD_MISSING_ARGS>;

        <groovy.lang.MetaClassImpl: java.lang.Class[] SETTER_MISSING_ARGS> = $r5;

        $r6 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$MetaClass>;

        if $r6 != null goto label7;

        $r19 = staticinvoke <groovy.lang.MetaClassImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$MetaClass> = $r19;

        goto label8;

     label7:
        $r19 = <groovy.lang.MetaClassImpl: java.lang.Class class$groovy$lang$MetaClass>;

     label8:
        $r7 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        $r8 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r7);

        <groovy.lang.MetaClassImpl: java.util.logging.Logger LOG> = $r8;

        $r9 = new groovy.lang.MetaClassImpl$DummyMetaMethod;

        specialinvoke $r9.<groovy.lang.MetaClassImpl$DummyMetaMethod: void <init>(groovy.lang.MetaClassImpl$1)>(null);

        <groovy.lang.MetaClassImpl: groovy.lang.MetaMethod AMBIGUOUS_LISTENER_METHOD> = $r9;

        $r10 = newarray (java.lang.Object)[0];

        <groovy.lang.MetaClassImpl: java.lang.Object[] EMPTY_ARGUMENTS> = $r10;

        $r11 = new groovy.lang.MetaClassImpl$DummyMetaMethod;

        specialinvoke $r11.<groovy.lang.MetaClassImpl$DummyMetaMethod: void <init>(groovy.lang.MetaClassImpl$1)>(null);

        <groovy.lang.MetaClassImpl: groovy.lang.MetaMethod NULL_METHOD> = $r11;

        $r12 = newarray (java.lang.Class)[0];

        <groovy.lang.MetaClassImpl: java.lang.Class[] EMPTY_CLASS_ARRAY> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>(int)>(1024);

        <groovy.lang.MetaClassImpl: java.util.HashMap propNames> = $r13;

        $r14 = new groovy.lang.MetaClassImpl$8;

        specialinvoke $r14.<groovy.lang.MetaClassImpl$8: void <init>()>();

        <groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap$Copier NAME_INDEX_COPIER> = $r14;

        $r15 = new groovy.lang.MetaClassImpl$9;

        specialinvoke $r15.<groovy.lang.MetaClassImpl$9: void <init>()>();

        <groovy.lang.MetaClassImpl: org.codehaus.groovy.reflection.SingleKeyHashMap$Copier METHOD_INDEX_COPIER> = $r15;

        return;
    }
}
