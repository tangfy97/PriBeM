public class com.sun.xml.bind.v2.runtime.output.C14nXmlOutput extends com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput
{
    private com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes;
    private int len;
    private int[] nsBuf;
    private final com.sun.istack.FinalArrayList otherAttributes;
    private final boolean namedAttributesAreOrdered;

    public void <init>(java.io.OutputStream, com.sun.xml.bind.v2.runtime.output.Encoded[], boolean, com.sun.xml.bind.marshaller.CharacterEscapeHandler)
    {
        java.io.OutputStream r1;
        com.sun.xml.bind.marshaller.CharacterEscapeHandler r3;
        com.sun.xml.bind.v2.runtime.output.Encoded[] r2;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] $r4, $r7, $r9;
        int[] $r5;
        com.sun.istack.FinalArrayList $r6;
        int $i0, i1;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute $r8;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.output.Encoded[];

        z0 := @parameter2: boolean;

        r3 := @parameter3: com.sun.xml.bind.marshaller.CharacterEscapeHandler;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void <init>(java.io.OutputStream,com.sun.xml.bind.v2.runtime.output.Encoded[],com.sun.xml.bind.marshaller.CharacterEscapeHandler)>(r1, r2, r3);

        $r4 = newarray (com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute)[8];

        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes> = $r4;

        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len> = 0;

        $r5 = newarray (int)[8];

        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf> = $r5;

        $r6 = new com.sun.istack.FinalArrayList;

        specialinvoke $r6.<com.sun.istack.FinalArrayList: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes> = $r6;

        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: boolean namedAttributesAreOrdered> = z0;

        i1 = 0;

     label1:
        $r7 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $i0 = lengthof $r7;

        if i1 >= $i0 goto label2;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $r8 = new com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute: void <init>(com.sun.xml.bind.v2.runtime.output.C14nXmlOutput)>(r0);

        $r9[i1] = $r8;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void attribute(com.sun.xml.bind.v2.runtime.Name, java.lang.String) throws java.io.IOException
    {
        com.sun.xml.bind.v2.runtime.Name r3;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7;
        java.lang.String r4;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute $r5, $r8;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] $r1, $r2, r6, $r7, $r9;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput;

        r3 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $i1 = lengthof $r1;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        if $i1 != $i0 goto label3;

        $i4 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        i5 = $i4 * 2;

        r6 = newarray (com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute)[i5];

        $r7 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $i6 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r6, 0, $i6);

        i7 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

     label1:
        if i7 >= i5 goto label2;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $r8 = new com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute: void <init>(com.sun.xml.bind.v2.runtime.output.C14nXmlOutput)>(r0);

        $r9[i7] = $r8;

        i7 = i7 + 1;

        goto label1;

     label2:
        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes> = r6;

     label3:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $i2 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        $i3 = $i2 + 1;

        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len> = $i3;

        $r5 = $r2[$i2];

        virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute: void set(com.sun.xml.bind.v2.runtime.Name,java.lang.String)>(r3, r4);

        return;
    }

    public void attribute(int, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.sun.istack.FinalArrayList $r4;
        int i0;
        java.lang.String r2, r3;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput r0;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes>;

        $r1 = new com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute: void <init>(com.sun.xml.bind.v2.runtime.output.C14nXmlOutput,int,java.lang.String,java.lang.String)>(r0, i0, r2, r3);

        virtualinvoke $r4.<com.sun.istack.FinalArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void endStartTag() throws java.io.IOException
    {
        com.sun.istack.FinalArrayList $r1, $r2, $r3, $r4, $r5, $r12;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7, i8;
        java.lang.String $r8, $r9;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute $r11, $r15;
        boolean $z0, $z1;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] $r10, $r14, $r16;
        java.lang.Object $r6;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput r0;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute r7, $r13;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes>;

        $z0 = virtualinvoke $r1.<com.sun.istack.FinalArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $i3 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        if $i3 == 0 goto label9;

        $z1 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: boolean namedAttributesAreOrdered>;

        if $z1 != 0 goto label1;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $i4 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int)>($r16, 0, $i4);

     label1:
        i5 = 0;

     label2:
        $i6 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        if i5 >= $i6 goto label3;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $r15 = $r14[i5];

        virtualinvoke $r15.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute: void write()>();

        i5 = i5 + 1;

        goto label2;

     label3:
        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len> = 0;

        goto label9;

     label4:
        i7 = 0;

     label5:
        $i0 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len>;

        if i7 >= $i0 goto label6;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes>;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute[] staticAttributes>;

        $r11 = $r10[i7];

        $r13 = virtualinvoke $r11.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute toDynamicAttribute()>();

        virtualinvoke $r12.<com.sun.istack.FinalArrayList: boolean add(java.lang.Object)>($r13);

        i7 = i7 + 1;

        goto label5;

     label6:
        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int len> = 0;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        $r3 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes>;

        $i1 = virtualinvoke $r3.<com.sun.istack.FinalArrayList: int size()>();

        i8 = 0;

     label7:
        if i8 >= $i1 goto label8;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes>;

        $r6 = virtualinvoke $r5.<com.sun.istack.FinalArrayList: java.lang.Object get(int)>(i8);

        r7 = (com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute) $r6;

        $i2 = r7.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute: int prefix>;

        $r9 = r7.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute: java.lang.String localName>;

        $r8 = r7.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute: java.lang.String value>;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void attribute(int,java.lang.String,java.lang.String)>($i2, $r9, $r8);

        i8 = i8 + 1;

        goto label7;

     label8:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.istack.FinalArrayList otherAttributes>;

        virtualinvoke $r4.<com.sun.istack.FinalArrayList: void clear()>();

     label9:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void endStartTag()>();

        return;
    }

    protected void writeNsDecls(int) throws java.io.IOException
    {
        int[] $r3, $r4, $r5, $r8, $r11, $r12, $r13, $r14, $r15, $r16;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r1, $r6, $r9;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r2;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8, $i9, i10, i11, i12, i13, $i15;
        java.lang.String $r7, $r10;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput;

        i8 := @parameter0: int;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element getCurrent()>();

        $i0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: int count()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $i1 = lengthof $r3;

        if $i0 <= $i1 goto label02;

        $r16 = newarray (int)[$i0];

        r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf> = $r16;

     label02:
        i10 = $i0 - 1;

     label03:
        if i10 < 0 goto label04;

        $r15 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $i9 = i8 + i10;

        $r15[i10] = $i9;

        $i15 = (int) -1;

        i10 = i10 + $i15;

        goto label03;

     label04:
        i11 = 0;

     label05:
        if i11 >= $i0 goto label09;

        i12 = i11 + 1;

     label06:
        if i12 >= $i0 goto label08;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $i3 = $r5[i11];

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getPrefix(int)>($i3);

        $r9 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $i4 = $r8[i12];

        $r10 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getPrefix(int)>($i4);

        $i5 = virtualinvoke $r7.<java.lang.String: int compareTo(java.lang.String)>($r10);

        if $i5 <= 0 goto label07;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        i6 = $r11[i12];

        $r13 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $i7 = $r12[i11];

        $r13[i12] = $i7;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $r14[i11] = i6;

     label07:
        i12 = i12 + 1;

        goto label06;

     label08:
        i11 = i11 + 1;

        goto label05;

     label09:
        i13 = 0;

     label10:
        if i13 >= $i0 goto label11;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: int[] nsBuf>;

        $i2 = $r4[i13];

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: void writeNsDecl(int)>($i2);

        i13 = i13 + 1;

        goto label10;

     label11:
        return;
    }

    static void access$001(com.sun.xml.bind.v2.runtime.output.C14nXmlOutput, com.sun.xml.bind.v2.runtime.Name, java.lang.String) throws java.io.IOException
    {
        com.sun.xml.bind.v2.runtime.Name r1;
        java.lang.String r2;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.output.C14nXmlOutput;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.Name;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void attribute(com.sun.xml.bind.v2.runtime.Name,java.lang.String)>(r1, r2);

        return;
    }
}
