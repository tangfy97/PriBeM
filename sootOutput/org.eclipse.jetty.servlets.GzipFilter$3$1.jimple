class org.eclipse.jetty.servlets.GzipFilter$3$1 extends org.eclipse.jetty.http.gzip.AbstractCompressedStream
{
    final org.eclipse.jetty.servlets.GzipFilter$3 this$1;

    void <init>(org.eclipse.jetty.servlets.GzipFilter$3, java.lang.String, javax.servlet.http.HttpServletRequest, org.eclipse.jetty.http.gzip.CompressedResponseWrapper, java.lang.String)
    {
        org.eclipse.jetty.http.gzip.CompressedResponseWrapper r4;
        javax.servlet.http.HttpServletRequest r3;
        org.eclipse.jetty.servlets.GzipFilter$3$1 r0;
        org.eclipse.jetty.servlets.GzipFilter$3 r1;
        java.lang.String r2, r5;

        r0 := @this: org.eclipse.jetty.servlets.GzipFilter$3$1;

        r1 := @parameter0: org.eclipse.jetty.servlets.GzipFilter$3;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.servlet.http.HttpServletRequest;

        r4 := @parameter3: org.eclipse.jetty.http.gzip.CompressedResponseWrapper;

        r5 := @parameter4: java.lang.String;

        r0.<org.eclipse.jetty.servlets.GzipFilter$3$1: org.eclipse.jetty.servlets.GzipFilter$3 this$1> = r1;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.AbstractCompressedStream: void <init>(java.lang.String,javax.servlet.http.HttpServletRequest,org.eclipse.jetty.http.gzip.CompressedResponseWrapper,java.lang.String)>(r2, r3, r4, r5);

        return;
    }

    protected java.util.zip.DeflaterOutputStream createStream() throws java.io.IOException
    {
        javax.servlet.http.HttpServletResponse $r2;
        java.util.zip.Deflater $r4;
        java.util.zip.DeflaterOutputStream $r0;
        org.eclipse.jetty.servlets.GzipFilter $r6, $r8;
        javax.servlet.ServletOutputStream $r3;
        int $i0;
        org.eclipse.jetty.servlets.GzipFilter$3$1 r1;
        org.eclipse.jetty.servlets.GzipFilter$3 $r5, $r7;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.servlets.GzipFilter$3$1;

        $r0 = new java.util.zip.DeflaterOutputStream;

        $r2 = r1.<org.eclipse.jetty.servlets.GzipFilter$3$1: javax.servlet.http.HttpServletResponse _response>;

        $r3 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r4 = new java.util.zip.Deflater;

        $r5 = r1.<org.eclipse.jetty.servlets.GzipFilter$3$1: org.eclipse.jetty.servlets.GzipFilter$3 this$1>;

        $r6 = $r5.<org.eclipse.jetty.servlets.GzipFilter$3: org.eclipse.jetty.servlets.GzipFilter this$0>;

        $i0 = $r6.<org.eclipse.jetty.servlets.GzipFilter: int _deflateCompressionLevel>;

        $r7 = r1.<org.eclipse.jetty.servlets.GzipFilter$3$1: org.eclipse.jetty.servlets.GzipFilter$3 this$1>;

        $r8 = $r7.<org.eclipse.jetty.servlets.GzipFilter$3: org.eclipse.jetty.servlets.GzipFilter this$0>;

        $z0 = $r8.<org.eclipse.jetty.servlets.GzipFilter: boolean _deflateNoWrap>;

        specialinvoke $r4.<java.util.zip.Deflater: void <init>(int,boolean)>($i0, $z0);

        specialinvoke $r0.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater)>($r3, $r4);

        return $r0;
    }
}
