final class minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector extends java.lang.Object implements kodkod.engine.bool.BooleanVisitor
{
    final int offset;
    private final int[] polarity;
    private final java.lang.Integer[] ints;

    void <init>(int, int)
    {
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer $r2, $r3, $r4;
        int[] $r5;
        int i0, $i1, i2, $i3, $i4;
        java.lang.Integer[] $r1;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Integer)[3];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r1[2] = $r4;

        r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Integer[] ints> = $r1;

        $i1 = i0 + 1;

        r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int offset> = $i1;

        $i3 = i2 - i0;

        $i4 = staticinvoke <java.lang.StrictMath: int max(int,int)>(0, $i3);

        $r5 = newarray (int)[$i4];

        r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int[] polarity> = $r5;

        return;
    }

    minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector apply(kodkod.engine.bool.BooleanFormula)
    {
        kodkod.engine.bool.BooleanFormula r0;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r1;
        java.lang.Integer $r3;
        java.lang.Integer[] $r2;

        r1 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r0 := @parameter0: kodkod.engine.bool.BooleanFormula;

        $r2 = r1.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Integer[] ints>;

        $r3 = $r2[1];

        virtualinvoke r0.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r1, $r3);

        return r1;
    }

    boolean positive(int)
    {
        int[] $r1;
        int i0, $i1, $i2, $i3, $i4;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        i0 := @parameter0: int;

        $r1 = r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int[] polarity>;

        $i1 = r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int offset>;

        $i2 = i0 - $i1;

        $i3 = $r1[$i2];

        $i4 = $i3 & 1;

        if $i4 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean negative(int)
    {
        int[] $r1;
        int i0, $i1, $i2, $i3, $i4;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        i0 := @parameter0: int;

        $r1 = r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int[] polarity>;

        $i1 = r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int offset>;

        $i2 = i0 - $i1;

        $i3 = $r1[$i2];

        $i4 = $i3 & 2;

        if $i4 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean visited(kodkod.engine.bool.BooleanFormula, java.lang.Integer)
    {
        kodkod.engine.bool.BooleanFormula r0;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r1;
        java.lang.Integer r3;
        int[] $r2, $r4;
        int $i0, $i1, i2, i3, $i4, $i5;

        r1 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r0 := @parameter0: kodkod.engine.bool.BooleanFormula;

        r3 := @parameter1: java.lang.Integer;

        $i0 = virtualinvoke r0.<kodkod.engine.bool.BooleanFormula: int label()>();

        $i1 = r1.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int offset>;

        i2 = $i0 - $i1;

        $r2 = r1.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int[] polarity>;

        i3 = $r2[i2];

        $r4 = r1.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: int[] polarity>;

        $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i5 = i3 | $i4;

        $r4[i2] = $i5;

        if $i5 != i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object visit(kodkod.engine.bool.MultiGate, java.lang.Integer)
    {
        java.util.Iterator $r3;
        kodkod.engine.bool.BooleanFormula r5;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer r2;
        kodkod.engine.bool.MultiGate r1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r1 := @parameter0: kodkod.engine.bool.MultiGate;

        r2 := @parameter1: java.lang.Integer;

        $z0 = specialinvoke r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: boolean visited(kodkod.engine.bool.BooleanFormula,java.lang.Integer)>(r1, r2);

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke r1.<kodkod.engine.bool.MultiGate: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (kodkod.engine.bool.BooleanFormula) $r4;

        virtualinvoke r5.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r0, r2);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

     label3:
        return null;
    }

    public java.lang.Object visit(kodkod.engine.bool.ITEGate, java.lang.Integer)
    {
        kodkod.engine.bool.BooleanFormula $r3, $r6, $r7;
        kodkod.engine.bool.ITEGate r1;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer r2, $r5;
        java.lang.Integer[] $r4;
        boolean $z0;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r1 := @parameter0: kodkod.engine.bool.ITEGate;

        r2 := @parameter1: java.lang.Integer;

        $z0 = specialinvoke r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: boolean visited(kodkod.engine.bool.BooleanFormula,java.lang.Integer)>(r1, r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<kodkod.engine.bool.ITEGate: kodkod.engine.bool.BooleanFormula input(int)>(0);

        $r4 = r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Integer[] ints>;

        $r5 = $r4[0];

        virtualinvoke $r3.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r0, $r5);

        $r6 = virtualinvoke r1.<kodkod.engine.bool.ITEGate: kodkod.engine.bool.BooleanFormula input(int)>(1);

        virtualinvoke $r6.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r0, r2);

        $r7 = virtualinvoke r1.<kodkod.engine.bool.ITEGate: kodkod.engine.bool.BooleanFormula input(int)>(2);

        virtualinvoke $r7.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r0, r2);

     label1:
        return null;
    }

    public java.lang.Object visit(kodkod.engine.bool.NotGate, java.lang.Integer)
    {
        kodkod.engine.bool.BooleanFormula $r1;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r2;
        java.lang.Integer r3, $r5;
        int $i0, $i1;
        kodkod.engine.bool.NotGate r0;
        java.lang.Object $r6;
        java.lang.Integer[] $r4;

        r2 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r0 := @parameter0: kodkod.engine.bool.NotGate;

        r3 := @parameter1: java.lang.Integer;

        $r1 = virtualinvoke r0.<kodkod.engine.bool.NotGate: kodkod.engine.bool.BooleanFormula input(int)>(0);

        $r4 = r2.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Integer[] ints>;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i1 = 3 - $i0;

        $r5 = $r4[$i1];

        $r6 = virtualinvoke $r1.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r2, $r5);

        return $r6;
    }

    public java.lang.Object visit(kodkod.engine.bool.BooleanVariable, java.lang.Integer)
    {
        kodkod.engine.bool.BooleanVariable r1;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer r2;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r1 := @parameter0: kodkod.engine.bool.BooleanVariable;

        r2 := @parameter1: java.lang.Integer;

        return null;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.BooleanVariable, java.lang.Object)
    {
        kodkod.engine.bool.BooleanVariable r1;
        java.lang.Object r2, $r4;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer $r3;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r1 := @parameter0: kodkod.engine.bool.BooleanVariable;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Integer) r2;

        $r4 = virtualinvoke r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Object visit(kodkod.engine.bool.BooleanVariable,java.lang.Integer)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.NotGate, java.lang.Object)
    {
        kodkod.engine.bool.NotGate r1;
        java.lang.Object r2, $r4;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer $r3;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r1 := @parameter0: kodkod.engine.bool.NotGate;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Integer) r2;

        $r4 = virtualinvoke r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Object visit(kodkod.engine.bool.NotGate,java.lang.Integer)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.ITEGate, java.lang.Object)
    {
        kodkod.engine.bool.ITEGate r1;
        java.lang.Object r2, $r4;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer $r3;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r1 := @parameter0: kodkod.engine.bool.ITEGate;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Integer) r2;

        $r4 = virtualinvoke r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Object visit(kodkod.engine.bool.ITEGate,java.lang.Integer)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.MultiGate, java.lang.Object)
    {
        java.lang.Object r2, $r4;
        minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector r0;
        java.lang.Integer $r3;
        kodkod.engine.bool.MultiGate r1;

        r0 := @this: minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector;

        r1 := @parameter0: kodkod.engine.bool.MultiGate;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Integer) r2;

        $r4 = virtualinvoke r0.<minsolver.fol2sat.MinBool2CNFTranslator$PolarityDetector: java.lang.Object visit(kodkod.engine.bool.MultiGate,java.lang.Integer)>(r1, $r3);

        return $r4;
    }
}
