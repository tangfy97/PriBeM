public class org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel extends org.eclipse.jdt.internal.compiler.codegen.Label
{
    public int[] ranges;
    public int count;
    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding exceptionType;

    public void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel r0;
        int[] $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i1, $i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.Label: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r2 = newarray (int)[2];

        $i1 = (int) -1;

        $r2[0] = $i1;

        $i3 = (int) -1;

        $r2[1] = $i3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges> = $r2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count> = 0;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: org.eclipse.jdt.internal.compiler.lookup.TypeBinding exceptionType> = r3;

        return;
    }

    public void place()
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel r0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream $r1, $r2;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void registerExceptionHandler(org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel)>(r0);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int getPosition()>();

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int position> = $i0;

        return;
    }

    public void placeEnd()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream $r1;
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel r0;
        int[] $r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        i0 = $r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $i2 = $i1 - 1;

        $i3 = $r2[$i2];

        if $i3 != i0 goto label1;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $i7 = $i6 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count> = $i7;

        goto label2;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count> = $i5;

        $r3[$i4] = i0;

     label2:
        return;
    }

    public void placeStart()
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel r0;
        int[] $r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        i0 = $r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        if $i1 <= 0 goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $i8 = $i7 - 1;

        $i9 = $r6[$i8];

        if $i9 != i0 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $i11 = $i10 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count> = $i11;

        return;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i2 = lengthof $r2;

        if $i3 != $i2 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i6 = $i2 * 2;

        $r4 = newarray (int)[$i6];

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i2);

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count> = $i5;

        $r3[$i4] = i0;

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel r0;
        int[] $r12, $r15;
        java.lang.StringBuffer $r4, $r5, $r7, $r10, $r11, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r8, $r9;
        java.lang.String $r2, $r3, $r6, $r17;
        char[] $r16;
        java.lang.Class $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $i2 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(type=");

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: org.eclipse.jdt.internal.compiler.lookup.TypeBinding exceptionType>;

        if $r8 != null goto label1;

        $r16 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        goto label2;

     label1:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: org.eclipse.jdt.internal.compiler.lookup.TypeBinding exceptionType>;

        $r16 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

     label2:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r16);

        $r10 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", position=");

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int position>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ranges = ");

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        if $i4 != 0 goto label3;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        goto label8;

     label3:
        i10 = 0;

        goto label7;

     label4:
        $i5 = i10 & 1;

        if $i5 != 0 goto label5;

        $r14 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r15 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i7 = $r15[i10];

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        goto label6;

     label5:
        $r11 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r12 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int[] ranges>;

        $i6 = $r12[i10];

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

     label6:
        i10 = i10 + 1;

     label7:
        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        if i10 < $i11 goto label4;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: int count>;

        $i9 = $i8 & 1;

        if $i9 != 1 goto label8;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",?]");

     label8:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r17 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }
}
