abstract class org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator extends java.lang.Object implements java.util.Iterator
{
    private int expectedModifications;
    protected org.apache.commons.collections.DoubleOrderedMap$Node lastReturnedNode;
    private org.apache.commons.collections.DoubleOrderedMap$Node nextNode;
    private int iteratorType;
    private final org.apache.commons.collections.DoubleOrderedMap this$0;

    void <init>(org.apache.commons.collections.DoubleOrderedMap, int)
    {
        org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator r0;
        org.apache.commons.collections.DoubleOrderedMap$Node $r3, $r4;
        int i0, $i1, $i2, $i3;
        org.apache.commons.collections.DoubleOrderedMap$Node[] $r2;
        org.apache.commons.collections.DoubleOrderedMap r1;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator;

        r1 := @parameter0: org.apache.commons.collections.DoubleOrderedMap;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap this$0> = r1;

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int iteratorType> = i0;

        $i1 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: int access$2200(org.apache.commons.collections.DoubleOrderedMap)>(r1);

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int expectedModifications> = $i1;

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node lastReturnedNode> = null;

        $r2 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: org.apache.commons.collections.DoubleOrderedMap$Node[] access$2300(org.apache.commons.collections.DoubleOrderedMap)>(r1);

        $i2 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int iteratorType>;

        $r3 = $r2[$i2];

        $i3 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int iteratorType>;

        $r4 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: org.apache.commons.collections.DoubleOrderedMap$Node access$2400(org.apache.commons.collections.DoubleOrderedMap$Node,int)>($r3, $i3);

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node nextNode> = $r4;

        return;
    }

    protected abstract java.lang.Object doGetNext();

    public final boolean hasNext()
    {
        org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator r0;
        org.apache.commons.collections.DoubleOrderedMap$Node $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node nextNode>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.Object next() throws java.util.NoSuchElementException, java.util.ConcurrentModificationException
    {
        org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator r0;
        org.apache.commons.collections.DoubleOrderedMap$Node $r1, $r3, $r4, $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r7;
        java.util.NoSuchElementException $r9;
        java.util.ConcurrentModificationException $r8;
        org.apache.commons.collections.DoubleOrderedMap $r2, $r5;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node nextNode>;

        if $r1 != null goto label1;

        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $i0 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: int access$2200(org.apache.commons.collections.DoubleOrderedMap)>($r2);

        $i1 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int expectedModifications>;

        if $i0 == $i1 goto label2;

        $r8 = new java.util.ConcurrentModificationException;

        specialinvoke $r8.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r8;

     label2:
        $r3 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node nextNode>;

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node lastReturnedNode> = $r3;

        $r5 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $r4 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node nextNode>;

        $i2 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int iteratorType>;

        $r6 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: org.apache.commons.collections.DoubleOrderedMap$Node access$2500(org.apache.commons.collections.DoubleOrderedMap,org.apache.commons.collections.DoubleOrderedMap$Node,int)>($r5, $r4, $i2);

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node nextNode> = $r6;

        $r7 = virtualinvoke r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: java.lang.Object doGetNext()>();

        return $r7;
    }

    public final void remove() throws java.lang.IllegalStateException, java.util.ConcurrentModificationException
    {
        java.lang.IllegalStateException $r6;
        org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator r0;
        org.apache.commons.collections.DoubleOrderedMap$Node $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.util.ConcurrentModificationException $r5;
        org.apache.commons.collections.DoubleOrderedMap $r2, $r4;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node lastReturnedNode>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $i0 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: int access$2200(org.apache.commons.collections.DoubleOrderedMap)>($r2);

        $i1 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int expectedModifications>;

        if $i0 == $i1 goto label2;

        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label2:
        $r4 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $r3 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node lastReturnedNode>;

        staticinvoke <org.apache.commons.collections.DoubleOrderedMap: void access$300(org.apache.commons.collections.DoubleOrderedMap,org.apache.commons.collections.DoubleOrderedMap$Node)>($r4, $r3);

        $i2 = r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int expectedModifications>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: int expectedModifications> = $i3;

        r0.<org.apache.commons.collections.DoubleOrderedMap$DoubleOrderedMapIterator: org.apache.commons.collections.DoubleOrderedMap$Node lastReturnedNode> = null;

        return;
    }
}
