public class com.jhlabs.image.MotionBlurOp extends com.jhlabs.image.AbstractBufferedImageOp
{
    private float centreX;
    private float centreY;
    private float distance;
    private float angle;
    private float rotation;
    private float zoom;

    public void <init>()
    {
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.MotionBlurOp: float centreX> = 0.5F;

        r0.<com.jhlabs.image.MotionBlurOp: float centreY> = 0.5F;

        return;
    }

    public void <init>(float, float, float, float)
    {
        com.jhlabs.image.MotionBlurOp r0;
        float f0, f1, f2, f3;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.MotionBlurOp: float centreX> = 0.5F;

        r0.<com.jhlabs.image.MotionBlurOp: float centreY> = 0.5F;

        r0.<com.jhlabs.image.MotionBlurOp: float distance> = f0;

        r0.<com.jhlabs.image.MotionBlurOp: float angle> = f1;

        r0.<com.jhlabs.image.MotionBlurOp: float rotation> = f2;

        r0.<com.jhlabs.image.MotionBlurOp: float zoom> = f3;

        return;
    }

    public void setAngle(float)
    {
        float f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.MotionBlurOp: float angle> = f0;

        return;
    }

    public float getAngle()
    {
        float $f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        $f0 = r0.<com.jhlabs.image.MotionBlurOp: float angle>;

        return $f0;
    }

    public void setDistance(float)
    {
        float f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.MotionBlurOp: float distance> = f0;

        return;
    }

    public float getDistance()
    {
        float $f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        $f0 = r0.<com.jhlabs.image.MotionBlurOp: float distance>;

        return $f0;
    }

    public void setRotation(float)
    {
        float f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.MotionBlurOp: float rotation> = f0;

        return;
    }

    public float getRotation()
    {
        float $f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        $f0 = r0.<com.jhlabs.image.MotionBlurOp: float rotation>;

        return $f0;
    }

    public void setZoom(float)
    {
        float f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.MotionBlurOp: float zoom> = f0;

        return;
    }

    public float getZoom()
    {
        float $f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        $f0 = r0.<com.jhlabs.image.MotionBlurOp: float zoom>;

        return $f0;
    }

    public void setCentreX(float)
    {
        float f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.MotionBlurOp: float centreX> = f0;

        return;
    }

    public float getCentreX()
    {
        float $f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        $f0 = r0.<com.jhlabs.image.MotionBlurOp: float centreX>;

        return $f0;
    }

    public void setCentreY(float)
    {
        float f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.MotionBlurOp: float centreY> = f0;

        return;
    }

    public float getCentreY()
    {
        float $f0;
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        $f0 = r0.<com.jhlabs.image.MotionBlurOp: float centreY>;

        return $f0;
    }

    public void setCentre(java.awt.geom.Point2D)
    {
        com.jhlabs.image.MotionBlurOp r0;
        java.awt.geom.Point2D r1;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        r1 := @parameter0: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        r0.<com.jhlabs.image.MotionBlurOp: float centreX> = $f0;

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d1;

        r0.<com.jhlabs.image.MotionBlurOp: float centreY> = $f1;

        return;
    }

    public java.awt.geom.Point2D getCentre()
    {
        java.awt.geom.Point2D$Float $r0;
        com.jhlabs.image.MotionBlurOp r1;
        float $f0, $f1;

        r1 := @this: com.jhlabs.image.MotionBlurOp;

        $r0 = new java.awt.geom.Point2D$Float;

        $f1 = r1.<com.jhlabs.image.MotionBlurOp: float centreX>;

        $f0 = r1.<com.jhlabs.image.MotionBlurOp: float centreY>;

        specialinvoke $r0.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f1, $f0);

        return $r0;
    }

    private int log2(int)
    {
        com.jhlabs.image.MotionBlurOp r0;
        int i0, i1, i2;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        i0 := @parameter0: int;

        i1 = 1;

        i2 = 0;

     label1:
        if i1 >= i0 goto label2;

        i1 = i1 * 2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i2;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        byte $b4;
        com.jhlabs.image.MotionBlurOp r1;
        java.awt.AlphaComposite $r7;
        java.awt.RenderingHints$Key $r4, $r6;
        java.awt.image.BufferedImage r0, r8, r10, r11, r12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, f31, f32, f33, f34;
        java.awt.Graphics2D $r2, $r9;
        int $i0, $i1, $i2, $i3, i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        java.lang.Object $r3, $r5;

        r1 := @this: com.jhlabs.image.MotionBlurOp;

        r0 := @parameter0: java.awt.image.BufferedImage;

        r10 := @parameter1: java.awt.image.BufferedImage;

        if r10 != null goto label1;

        r10 = virtualinvoke r1.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r0, null);

     label1:
        r11 = r0;

        $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = r1.<com.jhlabs.image.MotionBlurOp: float centreX>;

        $f23 = $f1 * $f0;

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $f3 = (float) $i1;

        $f2 = r1.<com.jhlabs.image.MotionBlurOp: float centreY>;

        $f24 = $f3 * $f2;

        $f5 = $f23 * $f23;

        $f4 = $f24 * $f24;

        $f6 = $f5 + $f4;

        $d0 = (double) $f6;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f25 = (float) $d1;

        $f7 = r1.<com.jhlabs.image.MotionBlurOp: float distance>;

        $d3 = (double) $f7;

        $f8 = r1.<com.jhlabs.image.MotionBlurOp: float angle>;

        $d2 = (double) $f8;

        $d4 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d5 = $d3 * $d4;

        $f26 = (float) $d5;

        $f9 = r1.<com.jhlabs.image.MotionBlurOp: float distance>;

        $d7 = (double) $f9;

        $f10 = r1.<com.jhlabs.image.MotionBlurOp: float angle>;

        $d6 = (double) $f10;

        $d8 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        $d9 = neg $d8;

        $d10 = $d7 * $d9;

        $f27 = (float) $d10;

        $f28 = r1.<com.jhlabs.image.MotionBlurOp: float zoom>;

        $f29 = r1.<com.jhlabs.image.MotionBlurOp: float rotation>;

        $f13 = r1.<com.jhlabs.image.MotionBlurOp: float distance>;

        $f11 = r1.<com.jhlabs.image.MotionBlurOp: float rotation>;

        $f12 = $f11 * $f25;

        $f14 = staticinvoke <java.lang.Math: float abs(float)>($f12);

        $f17 = $f13 + $f14;

        $f15 = r1.<com.jhlabs.image.MotionBlurOp: float zoom>;

        $f16 = $f15 * $f25;

        $f30 = $f17 + $f16;

        $i2 = (int) $f30;

        $i3 = specialinvoke r1.<com.jhlabs.image.MotionBlurOp: int log2(int)>($i2);

        f31 = $f26 / $f30;

        f32 = $f27 / $f30;

        f33 = $f28 / $f30;

        f34 = $f29 / $f30;

        if $i3 != 0 goto label2;

        $r9 = virtualinvoke r10.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        virtualinvoke $r9.<java.awt.Graphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>(r0, null);

        virtualinvoke $r9.<java.awt.Graphics: void dispose()>();

        return r10;

     label2:
        r12 = virtualinvoke r1.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r0, null);

        i5 = 0;

     label3:
        if i5 >= $i3 goto label5;

        $r2 = virtualinvoke r12.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        virtualinvoke $r2.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>(r11, null, null);

        $r4 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r4, $r3);

        $r6 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r5 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR>;

        virtualinvoke $r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r6, $r5);

        $r7 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, 0.5F);

        virtualinvoke $r2.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r7);

        $f18 = $f23 + f31;

        $d12 = (double) $f18;

        $f19 = $f24 + f32;

        $d11 = (double) $f19;

        virtualinvoke $r2.<java.awt.Graphics2D: void translate(double,double)>($d12, $d11);

        $d13 = (double) f33;

        $d16 = 1.0001 + $d13;

        $d14 = (double) f33;

        $d15 = 1.0001 + $d14;

        virtualinvoke $r2.<java.awt.Graphics2D: void scale(double,double)>($d16, $d15);

        $f20 = r1.<com.jhlabs.image.MotionBlurOp: float rotation>;

        $b4 = $f20 cmpl 0.0F;

        if $b4 == 0 goto label4;

        $d19 = (double) f34;

        virtualinvoke $r2.<java.awt.Graphics2D: void rotate(double)>($d19);

     label4:
        $f21 = neg $f23;

        $d18 = (double) $f21;

        $f22 = neg $f24;

        $d17 = (double) $f22;

        virtualinvoke $r2.<java.awt.Graphics2D: void translate(double,double)>($d18, $d17);

        virtualinvoke $r2.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>(r10, null, null);

        virtualinvoke $r2.<java.awt.Graphics: void dispose()>();

        r8 = r10;

        r10 = r12;

        r12 = r8;

        r11 = r10;

        f31 = f31 * 2.0F;

        f32 = f32 * 2.0F;

        f33 = f33 * 2.0F;

        f34 = f34 * 2.0F;

        i5 = i5 + 1;

        goto label3;

     label5:
        return r10;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.MotionBlurOp r0;

        r0 := @this: com.jhlabs.image.MotionBlurOp;

        return "Blur/Motion Blur...";
    }
}
