public class com.google.inject.internal.util.$ImmutableMap$Builder extends java.lang.Object
{
    final java.util.List entries;

    public void <init>()
    {
        com.google.inject.internal.util.$ImmutableMap$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.inject.internal.util.$ImmutableMap$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.internal.util.$ImmutableMap$Builder: java.util.List entries> = $r1;

        return;
    }

    public com.google.inject.internal.util.$ImmutableMap$Builder put(java.lang.Object, java.lang.Object)
    {
        java.util.List $r3;
        java.util.Map$Entry $r4;
        java.lang.Object r1, r2;
        com.google.inject.internal.util.$ImmutableMap$Builder r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableMap$Builder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.inject.internal.util.$ImmutableMap$Builder: java.util.List entries>;

        $r4 = staticinvoke <com.google.inject.internal.util.$ImmutableMap: java.util.Map$Entry access$300(java.lang.Object,java.lang.Object)>(r1, r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return r0;
    }

    public com.google.inject.internal.util.$ImmutableMap$Builder putAll(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r4, $r6, $r7;
        com.google.inject.internal.util.$ImmutableMap$Builder r3;
        boolean $z0;

        r3 := @this: com.google.inject.internal.util.$ImmutableMap$Builder;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r3.<com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return r3;
    }

    public com.google.inject.internal.util.$ImmutableMap build()
    {
        java.util.List $r1;
        com.google.inject.internal.util.$ImmutableMap$Builder r0;
        com.google.inject.internal.util.$ImmutableMap $r2;

        r0 := @this: com.google.inject.internal.util.$ImmutableMap$Builder;

        $r1 = r0.<com.google.inject.internal.util.$ImmutableMap$Builder: java.util.List entries>;

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap fromEntryList(java.util.List)>($r1);

        return $r2;
    }

    private static com.google.inject.internal.util.$ImmutableMap fromEntryList(java.util.List)
    {
        java.util.Map$Entry $r3;
        java.lang.Object[] $r6;
        com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap $r1;
        com.google.inject.internal.util.$ImmutableMap $r4;
        java.util.List r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.Map$Entry[] $r5, r7;
        com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap $r8;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = staticinvoke <com.google.inject.internal.util.$ImmutableMap: com.google.inject.internal.util.$ImmutableMap of()>();

        return $r4;

     label2:
        $r1 = new com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap;

        $r2 = staticinvoke <com.google.inject.internal.util.$Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>(r0);

        $r3 = (java.util.Map$Entry) $r2;

        specialinvoke $r1.<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry,com.google.inject.internal.util.$ImmutableMap$1)>($r3, null);

        return $r1;

     label3:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $r5 = newarray (java.util.Map$Entry)[$i1];

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        r7 = (java.util.Map$Entry[]) $r6;

        $r8 = new com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap;

        specialinvoke $r8.<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[],com.google.inject.internal.util.$ImmutableMap$1)>(r7, null);

        return $r8;
    }
}
