public class org.apache.xml.utils.DOMBuilder extends java.lang.Object implements org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler
{
    public org.w3c.dom.Document m_doc;
    protected org.w3c.dom.Node m_currentNode;
    public org.w3c.dom.DocumentFragment m_docFrag;
    protected java.util.Stack m_elemStack;
    protected boolean m_inCData;

    public void <init>(org.w3c.dom.Document, org.w3c.dom.Node)
    {
        org.w3c.dom.Document r2;
        org.w3c.dom.Node r3;
        org.apache.xml.utils.DOMBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: org.w3c.dom.Document;

        r3 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = null;

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack> = $r1;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc> = r2;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = r3;

        return;
    }

    public void <init>(org.w3c.dom.Document, org.w3c.dom.DocumentFragment)
    {
        org.w3c.dom.DocumentFragment r3;
        org.w3c.dom.Document r2;
        org.apache.xml.utils.DOMBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: org.w3c.dom.Document;

        r3 := @parameter1: org.w3c.dom.DocumentFragment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = null;

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack> = $r1;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc> = r2;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = r3;

        return;
    }

    public void <init>(org.w3c.dom.Document)
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.util.Stack $r1;
        org.w3c.dom.Document r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = null;

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack> = $r1;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc> = r2;

        return;
    }

    public org.w3c.dom.Node getRootNode()
    {
        org.w3c.dom.DocumentFragment $r1;
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node $r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

     label2:
        return $r2;
    }

    public org.w3c.dom.Node getCurrentNode()
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        return $r1;
    }

    public java.io.Writer getWriter()
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return null;
    }

    protected void append(org.w3c.dom.Node) throws org.xml.sax.SAXException
    {
        short $s0;
        org.w3c.dom.Document $r4, $r5;
        org.w3c.dom.Node r1, r3;
        int $i1, $i2;
        java.lang.String $r8, $r9, $r10, $r12;
        boolean z0;
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.DocumentFragment $r2, $r13;
        org.w3c.dom.Element $r6;
        org.xml.sax.SAXException $r14, $r15;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r3 := @parameter0: org.w3c.dom.Node;

        r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        if null == r1 goto label1;

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r3);

        goto label6;

     label1:
        $r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        if null == $r2 goto label2;

        $r13 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        interfaceinvoke $r13.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r3);

        goto label6;

     label2:
        z0 = 1;

        $s0 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s0;

        if $i2 != 3 goto label4;

        $r9 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if null == $r9 goto label3;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $r14 = new org.xml.sax.SAXException;

        $r12 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_CANT_OUTPUT_TEXT_BEFORE_DOC", null);

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label3:
        z0 = 0;

        goto label5;

     label4:
        if $s0 != 1 goto label5;

        $r5 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        if $r6 == null goto label5;

        $r15 = new org.xml.sax.SAXException;

        $r8 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_CANT_HAVE_MORE_THAN_ONE_ROOT", null);

        specialinvoke $r15.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r8);

        throw $r15;

     label5:
        if z0 == 0 goto label6;

        $r4 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r3);

     label6:
        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.xml.sax.Locator r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        java.util.Stack $r5;
        org.w3c.dom.Document $r3, $r12;
        org.xml.sax.Attributes r4;
        int $i0, $i1, i2;
        java.lang.String r0, r2, $r6, $r7, $r8, $r9, $r10, $r11, r15, r17;
        boolean $z0, $z1, $z2;
        org.apache.xml.utils.DOMBuilder r1;
        java.lang.Exception $r13;
        org.w3c.dom.Element r16;
        org.xml.sax.SAXException $r14;

        r1 := @this: org.apache.xml.utils.DOMBuilder;

        r0 := @parameter0: java.lang.String;

        r15 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        if null == r0 goto label01;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

     label01:
        $r3 = r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        r16 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(null, r2);

        goto label03;

     label02:
        $r12 = r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        r16 = interfaceinvoke $r12.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r0, r2);

     label03:
        virtualinvoke r1.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>(r16);

     label04:
        $i0 = interfaceinvoke r4.<org.xml.sax.Attributes: int getLength()>();

        if 0 == $i0 goto label10;

        i2 = 0;

        goto label09;

     label05:
        $r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getType(int)>(i2);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ID");

        if $z0 == 0 goto label06;

        $r11 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i2);

        virtualinvoke r1.<org.apache.xml.utils.DOMBuilder: void setIDAttribute(java.lang.String,org.w3c.dom.Element)>($r11, r16);

     label06:
        $r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i2);

        r17 = $r7;

        $r8 = "";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label07;

        r17 = null;

     label07:
        $r9 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i2);

        $z2 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z2 == 0 goto label08;

        r17 = "http://www.w3.org/2000/xmlns/";

     label08:
        $r10 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i2);

        interfaceinvoke r16.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(r17, $r9, $r10);

        i2 = i2 + 1;

     label09:
        if i2 < $i0 goto label05;

     label10:
        $r5 = r1.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        virtualinvoke $r5.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r16);

        r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = r16;

     label11:
        goto label13;

     label12:
        $r13 := @caughtexception;

        $r14 = new org.xml.sax.SAXException;

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r13);

        throw $r14;

     label13:
        return;

        catch java.lang.Exception from label04 to label11 with label12;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.util.Stack $r1, $r2, $r3;
        org.w3c.dom.Node $r8;
        java.lang.Object $r4;
        java.lang.String r5, r6, r7;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r2 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r3 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r8 = (org.w3c.dom.Node) $r4;

     label2:
        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = $r8;

        return;
    }

    public void setIDAttribute(java.lang.String, org.w3c.dom.Element)
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;
        org.w3c.dom.Element r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Element;

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Text $r5, $r6;
        short $s2;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Node $r3, $r7, $r8;
        int i0, i1, $i3;
        java.lang.String $r9;
        boolean $z0, $z1, $z2;
        org.apache.xml.utils.DOMBuilder r0;
        char[] r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char[],int,int)>(r2, i0, i1);

        if $z2 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void cdata(char[],int,int)>(r2, i0, i1);

        return;

     label2:
        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        if $r3 == null goto label3;

        $r7 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        goto label4;

     label3:
        $r8 = null;

     label4:
        if $r8 == null goto label5;

        $s2 = interfaceinvoke $r8.<org.w3c.dom.Node: short getNodeType()>();

        $i3 = (int) $s2;

        if $i3 != 3 goto label5;

        $r6 = (org.w3c.dom.Text) $r8;

        interfaceinvoke $r6.<org.w3c.dom.CharacterData: void appendData(java.lang.String)>($r9);

        goto label6;

     label5:
        $r4 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r9);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r5);

     label6:
        return;
    }

    public void charactersRaw(char[], int, int) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Text $r6;
        org.w3c.dom.ProcessingInstruction $r4;
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Document $r3, $r5;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char[],int,int)>(r2, i0, i1);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>("xslt-next-is-raw", "formatter-to-dom");

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r4);

        $r5 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r1);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r6);

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void entityReference(java.lang.String) throws org.xml.sax.SAXException
    {
        org.w3c.dom.EntityReference $r3;
        org.w3c.dom.Document $r2;
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.EntityReference createEntityReference(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r3);

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Text $r4;
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Document $r3;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r1);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r4);

        return;
    }

    private boolean isOutsideDocElem()
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.util.Stack $r2;
        org.w3c.dom.DocumentFragment $r1;
        short $s1;
        org.w3c.dom.Node $r3, $r4;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        if null != $r1 goto label2;

        $r2 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        if null == $r3 goto label1;

        $r4 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        $s1 = interfaceinvoke $r4.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s1;

        if $i2 != 9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.w3c.dom.ProcessingInstruction $r4;
        org.w3c.dom.Document $r3;
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r4);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Document $r3;
        int i0, i1;
        org.apache.xml.utils.DOMBuilder r0;
        char[] r2;
        java.lang.String $r1;
        org.w3c.dom.Comment $r4;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r1);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r4);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.w3c.dom.CDATASection $r2;
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 1;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>("");

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r2);

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        return;
    }

    public void cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node $r3, $r4;
        int i0, i1;
        org.w3c.dom.CDATASection $r5;
        char[] r2;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char[],int,int)>(r2, i0, i1);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        $r5 = (org.w3c.dom.CDATASection) $r4;

        interfaceinvoke $r5.<org.w3c.dom.CharacterData: void appendData(java.lang.String)>($r1);

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }
}
