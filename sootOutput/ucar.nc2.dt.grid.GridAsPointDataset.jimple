public class ucar.nc2.dt.grid.GridAsPointDataset extends java.lang.Object
{
    private java.util.List grids;
    private java.util.List dates;

    public void <init>(java.util.List)
    {
        ucar.nc2.dt.GridDatatype r10;
        java.lang.Object[] $r6;
        java.util.Date r14;
        java.util.ArrayList $r3;
        java.util.HashSet $r2;
        int $i0, i1, i2;
        boolean $z0, $z1;
        ucar.nc2.dataset.CoordinateAxis1DTime $r12;
        java.util.Iterator $r4;
        java.util.List r1, $r7, $r8;
        ucar.nc2.dt.GridCoordSystem $r11;
        java.util.Date[] $r5, $r13;
        ucar.nc2.dt.grid.GridAsPointDataset r0;
        java.lang.Object $r9;

        r0 := @this: ucar.nc2.dt.grid.GridAsPointDataset;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.grid.GridAsPointDataset: java.util.List grids> = r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.dt.GridDatatype) $r9;

        $r11 = interfaceinvoke r10.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r12 = interfaceinvoke $r11.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        if $r12 == null goto label3;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r12);

        if $z1 != 0 goto label3;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = virtualinvoke $r12.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        i1 = lengthof $r13;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r14 = $r13[i2];

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r14);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        $r5 = newarray (java.util.Date)[$i0];

        $r6 = virtualinvoke $r2.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        r0.<ucar.nc2.dt.grid.GridAsPointDataset: java.util.List dates> = $r7;

        $r8 = r0.<ucar.nc2.dt.grid.GridAsPointDataset: java.util.List dates>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        return;
    }

    public java.util.List getDates()
    {
        ucar.nc2.dt.grid.GridAsPointDataset r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.dt.grid.GridAsPointDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridAsPointDataset: java.util.List dates>;

        return $r1;
    }

    public boolean hasTime(ucar.nc2.dt.GridDatatype, java.util.Date)
    {
        ucar.nc2.dataset.CoordinateAxis1DTime $r2;
        ucar.nc2.dt.GridDatatype r0;
        java.util.Date r3;
        ucar.nc2.dt.GridCoordSystem $r1;
        ucar.nc2.dt.grid.GridAsPointDataset r4;
        boolean $z0, $z1;

        r4 := @this: ucar.nc2.dt.grid.GridAsPointDataset;

        r0 := @parameter0: ucar.nc2.dt.GridDatatype;

        r3 := @parameter1: java.util.Date;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1DTime: boolean hasTime(java.util.Date)>(r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public double getMissingValue(ucar.nc2.dt.GridDatatype)
    {
        ucar.nc2.dt.GridDatatype r1;
        ucar.nc2.dt.grid.GridAsPointDataset r0;

        r0 := @this: ucar.nc2.dt.grid.GridAsPointDataset;

        r1 := @parameter0: ucar.nc2.dt.GridDatatype;

        return #NaN;
    }

    public ucar.nc2.dt.grid.GridAsPointDataset$Point readData(ucar.nc2.dt.GridDatatype, java.util.Date, double, double) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype r0;
        java.util.Date r3;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        double d0, d1, $d2, $d3, $d4;
        ucar.nc2.dataset.CoordinateAxis1DTime $r2;
        ucar.ma2.Array $r5;
        ucar.unidata.geoloc.LatLonPoint $r6;
        ucar.ma2.Index $r9;
        ucar.nc2.dt.GridCoordSystem $r1;
        ucar.nc2.dt.grid.GridAsPointDataset$Point $r10;
        ucar.nc2.dt.grid.GridAsPointDataset r8;

        r8 := @this: ucar.nc2.dt.grid.GridAsPointDataset;

        r0 := @parameter0: ucar.nc2.dt.GridDatatype;

        r3 := @parameter1: java.util.Date;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>(r3);

        $r4 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: int[] findXYindexFromLatLonBounded(double,double,int[])>(d0, d1, null);

        $i2 = $r4[1];

        $i1 = $r4[0];

        $i6 = (int) -1;

        $r5 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.ma2.Array readDataSlice(int,int,int,int)>($i0, $i6, $i2, $i1);

        $i4 = $r4[0];

        $i3 = $r4[1];

        $r6 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.LatLonPoint getLatLon(int,int)>($i4, $i3);

        $r10 = new ucar.nc2.dt.grid.GridAsPointDataset$Point;

        specialinvoke $r10.<ucar.nc2.dt.grid.GridAsPointDataset$Point: void <init>(ucar.nc2.dt.grid.GridAsPointDataset)>(r8);

        $d2 = interfaceinvoke $r6.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r10.<ucar.nc2.dt.grid.GridAsPointDataset$Point: double lat> = $d2;

        $d3 = interfaceinvoke $r6.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r10.<ucar.nc2.dt.grid.GridAsPointDataset$Point: double lon> = $d3;

        $r9 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $d4 = virtualinvoke $r5.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r9);

        $r10.<ucar.nc2.dt.grid.GridAsPointDataset$Point: double dataValue> = $d4;

        return $r10;
    }

    public boolean hasVert(ucar.nc2.dt.GridDatatype, double)
    {
        ucar.nc2.dt.GridDatatype r0;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        ucar.nc2.dt.GridCoordSystem $r1;
        int $i0;
        ucar.nc2.dt.grid.GridAsPointDataset r3;
        double d0;
        boolean $z0;

        r3 := @this: ucar.nc2.dt.grid.GridAsPointDataset;

        r0 := @parameter0: ucar.nc2.dt.GridDatatype;

        d0 := @parameter1: double;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: int findCoordElement(double)>(d0);

        if $i0 < 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public ucar.nc2.dt.grid.GridAsPointDataset$Point readData(ucar.nc2.dt.GridDatatype, java.util.Date, double, double, double) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype r0;
        java.util.Date r3;
        ucar.nc2.dataset.CoordinateAxis1D $r4;
        int[] $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        ucar.nc2.dataset.CoordinateAxis1DTime $r2;
        ucar.ma2.Array $r6;
        ucar.unidata.geoloc.LatLonPoint $r7;
        ucar.ma2.Index $r10;
        ucar.nc2.dt.GridCoordSystem $r1;
        ucar.nc2.dt.grid.GridAsPointDataset$Point $r8;
        ucar.nc2.dt.grid.GridAsPointDataset r9;

        r9 := @this: ucar.nc2.dt.grid.GridAsPointDataset;

        r0 := @parameter0: ucar.nc2.dt.GridDatatype;

        r3 := @parameter1: java.util.Date;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>(r3);

        $r4 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        $i1 = virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: int findCoordElement(double)>(d0);

        $r5 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: int[] findXYindexFromLatLon(double,double,int[])>(d1, d2, null);

        $i3 = $r5[1];

        $i2 = $r5[0];

        $r6 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.ma2.Array readDataSlice(int,int,int,int)>($i0, $i1, $i3, $i2);

        $i5 = $r5[0];

        $i4 = $r5[1];

        $r7 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.LatLonPoint getLatLon(int,int)>($i5, $i4);

        $r8 = new ucar.nc2.dt.grid.GridAsPointDataset$Point;

        specialinvoke $r8.<ucar.nc2.dt.grid.GridAsPointDataset$Point: void <init>(ucar.nc2.dt.grid.GridAsPointDataset)>(r9);

        $d3 = interfaceinvoke $r7.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r8.<ucar.nc2.dt.grid.GridAsPointDataset$Point: double lat> = $d3;

        $d4 = interfaceinvoke $r7.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r8.<ucar.nc2.dt.grid.GridAsPointDataset$Point: double lon> = $d4;

        $d5 = virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>($i1);

        $r8.<ucar.nc2.dt.grid.GridAsPointDataset$Point: double z> = $d5;

        $r10 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $d6 = virtualinvoke $r6.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r10);

        $r8.<ucar.nc2.dt.grid.GridAsPointDataset$Point: double dataValue> = $d6;

        return $r8;
    }
}
