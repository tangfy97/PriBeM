final class org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader extends org.apache.lucene.codecs.StoredFieldsReader implements java.lang.Cloneable, java.io.Closeable
{
    private static final int FORMAT_SIZE;
    public static final java.lang.String FIELDS_EXTENSION;
    public static final java.lang.String FIELDS_INDEX_EXTENSION;
    static final int FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS;
    static final int FORMAT_LUCENE_3_2_NUMERIC_FIELDS;
    public static final int FORMAT_CURRENT;
    static final int FORMAT_MINIMUM;
    public static final int FIELD_IS_BINARY;
    private static final int _NUMERIC_BIT_SHIFT;
    static final int FIELD_IS_NUMERIC_MASK;
    public static final int FIELD_IS_NUMERIC_INT;
    public static final int FIELD_IS_NUMERIC_LONG;
    public static final int FIELD_IS_NUMERIC_FLOAT;
    public static final int FIELD_IS_NUMERIC_DOUBLE;
    private final org.apache.lucene.index.FieldInfos fieldInfos;
    private final org.apache.lucene.store.IndexInput fieldsStream;
    private final org.apache.lucene.store.IndexInput indexStream;
    private int numTotalDocs;
    private int size;
    private boolean closed;
    private final int format;
    private int docStoreOffset;
    private final org.apache.lucene.store.CompoundFileDirectory storeCFSReader;
    static final boolean $assertionsDisabled;

    public org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader clone()
    {
        org.apache.lucene.store.IndexInput $r2, $r4, $r5, $r6;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0, $r1;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.index.FieldInfos $r3;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: void ensureOpen()>();

        $r1 = new org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int numTotalDocs>;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int size>;

        $i2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int format>;

        $i3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int docStoreOffset>;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r4 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        specialinvoke $r1.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: void <init>(org.apache.lucene.index.FieldInfos,int,int,int,int,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput)>($r3, $i0, $i1, $i2, $i3, $r4, $r6);

        return $r1;
    }

    public static void checkCodeVersion(org.apache.lucene.store.Directory, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        org.apache.lucene.store.IndexInput $r4;
        org.apache.lucene.index.IndexFormatTooNewException $r5;
        org.apache.lucene.index.IndexFormatTooOldException $r6;
        org.apache.lucene.store.Directory r2;
        int $i0;
        java.lang.String r0, $r1;
        org.apache.lucene.store.IOContext $r3;

        r2 := @parameter0: org.apache.lucene.store.Directory;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r0, "", "fdx");

        $r3 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext DEFAULT>;

        $r4 = virtualinvoke r2.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r1, $r3);

     label1:
        $i0 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 >= 2 goto label2;

        $r6 = new org.apache.lucene.index.IndexFormatTooOldException;

        specialinvoke $r6.<org.apache.lucene.index.IndexFormatTooOldException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>($r4, $i0, 2, 3);

        throw $r6;

     label2:
        if $i0 <= 3 goto label3;

        $r5 = new org.apache.lucene.index.IndexFormatTooNewException;

        specialinvoke $r5.<org.apache.lucene.index.IndexFormatTooNewException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>($r4, $i0, 2, 3);

        throw $r5;

     label3:
        virtualinvoke $r4.<org.apache.lucene.store.IndexInput: void close()>();

        goto label6;

     label4:
        $r7 := @caughtexception;

     label5:
        virtualinvoke $r4.<org.apache.lucene.store.IndexInput: void close()>();

        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void <init>(org.apache.lucene.index.FieldInfos, int, int, int, int, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput)
    {
        org.apache.lucene.store.IndexInput r2, r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        int i0, i1, i2, i3;
        org.apache.lucene.index.FieldInfos r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        r1 := @parameter0: org.apache.lucene.index.FieldInfos;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: org.apache.lucene.store.IndexInput;

        r3 := @parameter6: org.apache.lucene.store.IndexInput;

        specialinvoke r0.<org.apache.lucene.codecs.StoredFieldsReader: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r1;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int numTotalDocs> = i0;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int size> = i1;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int format> = i2;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int docStoreOffset> = i3;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream> = r2;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream> = r3;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader> = null;

        return;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.index.IndexFormatTooNewException $r42;
        org.apache.lucene.index.FieldInfos r3;
        org.apache.lucene.store.IOContext r4;
        org.apache.lucene.index.SegmentInfo r1;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r21, $r22, $r43, $r45;
        java.lang.Throwable $r31, $r32, $r33;
        long $l3, l4, $l5, $l11, $l19;
        java.lang.AssertionError $r44;
        org.apache.lucene.store.CompoundFileDirectory $r40;
        java.lang.String $r2, $r14, $r23, $r30, $r35, $r37;
        org.apache.lucene.store.IndexInput $r5, $r25, $r27, $r36, $r38, $r39;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        org.apache.lucene.index.CorruptIndexException $r46;
        org.apache.lucene.store.Directory $r29, r34;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i22, $i24;
        org.apache.lucene.index.IndexFormatTooOldException $r41;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        r34 := @parameter0: org.apache.lucene.store.Directory;

        r1 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r3 := @parameter2: org.apache.lucene.index.FieldInfos;

        r4 := @parameter3: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.codecs.StoredFieldsReader: void <init>()>();

        $r2 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: java.lang.String getDocStoreSegment(org.apache.lucene.index.SegmentInfo)>(r1);

        $i0 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: int getDocStoreOffset(org.apache.lucene.index.SegmentInfo)>(r1);

        $i1 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r3;

     label01:
        $i22 = (int) -1;

        if $i0 == $i22 goto label02;

        $z1 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: boolean getDocStoreIsCompoundFile(org.apache.lucene.index.SegmentInfo)>(r1);

        if $z1 == 0 goto label02;

        $r40 = new org.apache.lucene.store.CompoundFileDirectory;

        $r29 = r1.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        $r30 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "cfx");

        specialinvoke $r40.<org.apache.lucene.store.CompoundFileDirectory: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext,boolean)>($r29, $r30, r4, 0);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader> = $r40;

        r34 = $r40;

        goto label03;

     label02:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader> = null;

     label03:
        $r35 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "fdt");

        $r36 = virtualinvoke r34.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r35, r4);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream> = $r36;

        $r37 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "fdx");

        $r38 = virtualinvoke r34.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r37, r4);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream> = $r38;

        $r39 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $i17 = virtualinvoke $r39.<org.apache.lucene.store.IndexInput: int readInt()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int format> = $i17;

        $i18 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int format>;

        if $i18 >= 2 goto label04;

        $r41 = new org.apache.lucene.index.IndexFormatTooOldException;

        $r27 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $i16 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int format>;

        specialinvoke $r41.<org.apache.lucene.index.IndexFormatTooOldException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>($r27, $i16, 2, 3);

        throw $r41;

     label04:
        $i2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int format>;

        if $i2 <= 3 goto label05;

        $r42 = new org.apache.lucene.index.IndexFormatTooNewException;

        $r25 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $i15 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int format>;

        specialinvoke $r42.<org.apache.lucene.index.IndexFormatTooNewException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>($r25, $i15, 2, 3);

        throw $r42;

     label05:
        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $l3 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: long length()>();

        l4 = $l3 - 4L;

        $i24 = (int) -1;

        if $i0 == $i24 goto label06;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int docStoreOffset> = $i0;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int size> = $i1;

        $z0 = <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        $l11 = l4 / 8L;

        $i14 = (int) $l11;

        $i12 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int docStoreOffset>;

        $i13 = $i1 + $i12;

        if $i14 >= $i13 goto label07;

        $r44 = new java.lang.AssertionError;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("indexSize=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docStoreOffset=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.AssertionError: void <init>(java.lang.Object)>($r23);

        throw $r44;

     label06:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int docStoreOffset> = 0;

        $l5 = l4 >> 3;

        $i6 = (int) $l5;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int size> = $i6;

        $i7 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int size>;

        $i8 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i7 == $i8 goto label07;

        $r46 = new org.apache.lucene.index.CorruptIndexException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doc counts differ for segment ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": fieldsReader shows ");

        $i9 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int size>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but segmentInfo shows ");

        $i10 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r14);

        throw $r46;

     label07:
        $l19 = l4 >> 3;

        $i20 = (int) $l19;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int numTotalDocs> = $i20;

     label08:
        if 1 != 0 goto label18;

     label09:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: void close()>();

     label10:
        goto label18;

     label11:
        $r33 := @caughtexception;

        goto label18;

     label12:
        $r32 := @caughtexception;

     label13:
        if 0 != 0 goto label17;

     label14:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: void close()>();

     label15:
        goto label17;

     label16:
        $r31 := @caughtexception;

     label17:
        throw $r32;

     label18:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label08 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void ensureOpen() throws org.apache.lucene.store.AlreadyClosedException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        org.apache.lucene.store.AlreadyClosedException $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        $z0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new org.apache.lucene.store.AlreadyClosedException;

        specialinvoke $r1.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>("this FieldsReader is closed");

        throw $r1;

     label1:
        return;
    }

    public final void close() throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r2, $r3;
        org.apache.lucene.store.CompoundFileDirectory $r4;
        java.io.Closeable[] $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        $z0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: boolean closed>;

        if $z0 != 0 goto label1;

        $r1 = newarray (java.io.Closeable)[3];

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $r1[1] = $r3;

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.CompoundFileDirectory storeCFSReader>;

        $r1[2] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r1);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: boolean closed> = 1;

     label1:
        return;
    }

    private void seekIndex(int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        long $l3, $l4, $l5;
        int i0, $i1, $i2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int docStoreOffset>;

        $i2 = i0 + $i1;

        $l3 = (long) $i2;

        $l4 = $l3 * 8L;

        $l5 = 4L + $l4;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void seek(long)>($l5);

        return;
    }

    public final void visitDocument(int, org.apache.lucene.index.StoredFieldVisitor) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.index.StoredFieldVisitor r8;
        org.apache.lucene.index.StoredFieldVisitor$Status $r10;
        byte $b4;
        int[] $r9;
        org.apache.lucene.index.FieldInfos $r5;
        boolean $z0;
        java.lang.StringBuilder $r13, $r15, $r17;
        long $l1;
        java.lang.AssertionError $r18;
        short s5, $s9;
        int i0, $i2, $i3, $i6, $i7, i8, $i10, $i11, $i12, $i13;
        java.lang.String $r14, $r16;
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r7;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        org.apache.lucene.index.FieldInfo $r6;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        i0 := @parameter0: int;

        r8 := @parameter1: org.apache.lucene.index.StoredFieldVisitor;

        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: void seekIndex(int)>(i0);

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $l1 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: long readLong()>();

        virtualinvoke $r2.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i2 = virtualinvoke $r3.<org.apache.lucene.store.IndexInput: int readVInt()>();

        i8 = 0;

     label1:
        if i8 >= $i2 goto label7;

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i3 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i3);

        $r7 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $b4 = virtualinvoke $r7.<org.apache.lucene.store.IndexInput: byte readByte()>();

        $s9 = (short) $b4;

        s5 = $s9 & 255;

        $z0 = <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i10 = (int) s5;

        if $i10 <= 58 goto label2;

        $r18 = new java.lang.AssertionError;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bits=");

        $i11 = (int) s5;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>($r16);

        throw $r18;

     label2:
        $r9 = <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader$1: int[] $SwitchMap$org$apache$lucene$index$StoredFieldVisitor$Status>;

        $r10 = virtualinvoke r8.<org.apache.lucene.index.StoredFieldVisitor: org.apache.lucene.index.StoredFieldVisitor$Status needsField(org.apache.lucene.index.FieldInfo)>($r6);

        $i6 = virtualinvoke $r10.<org.apache.lucene.index.StoredFieldVisitor$Status: int ordinal()>();

        $i7 = $r9[$i6];

        tableswitch($i7)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $i12 = (int) s5;

        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: void readField(org.apache.lucene.index.StoredFieldVisitor,org.apache.lucene.index.FieldInfo,int)>(r8, $r6, $i12);

        goto label6;

     label4:
        $i13 = (int) s5;

        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: void skipField(int)>($i13);

        goto label6;

     label5:
        return;

     label6:
        i8 = i8 + 1;

        goto label1;

     label7:
        return;
    }

    private void readField(org.apache.lucene.index.StoredFieldVisitor, org.apache.lucene.index.FieldInfo, int) throws java.io.IOException
    {
        byte[] r2;
        org.apache.lucene.index.StoredFieldVisitor r4;
        long $l5, $l7;
        org.apache.lucene.index.CorruptIndexException $r12;
        java.nio.charset.Charset $r7;
        int i0, i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String $r6, $r15, $r17;
        double $d0;
        org.apache.lucene.store.IndexInput $r1, $r3, $r8, $r9, $r10, $r11;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        org.apache.lucene.index.FieldInfo r5;
        float $f0;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        r4 := @parameter0: org.apache.lucene.index.StoredFieldVisitor;

        r5 := @parameter1: org.apache.lucene.index.FieldInfo;

        i0 := @parameter2: int;

        i1 = i0 & 56;

        if i1 == 0 goto label6;

        lookupswitch(i1)
        {
            case 8: goto label1;
            case 16: goto label2;
            case 24: goto label3;
            case 32: goto label4;
            default: goto label5;
        };

     label1:
        $r11 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i8 = virtualinvoke $r11.<org.apache.lucene.store.IndexInput: int readInt()>();

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void intField(org.apache.lucene.index.FieldInfo,int)>(r5, $i8);

        return;

     label2:
        $r10 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $l7 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: long readLong()>();

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void longField(org.apache.lucene.index.FieldInfo,long)>(r5, $l7);

        return;

     label3:
        $r9 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i6 = virtualinvoke $r9.<org.apache.lucene.store.IndexInput: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i6);

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void floatField(org.apache.lucene.index.FieldInfo,float)>(r5, $f0);

        return;

     label4:
        $r8 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $l5 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5);

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void doubleField(org.apache.lucene.index.FieldInfo,double)>(r5, $d0);

        return;

     label5:
        $r12 = new org.apache.lucene.index.CorruptIndexException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid numeric type: ");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label6:
        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r2 = newarray (byte)[$i2];

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        virtualinvoke $r3.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>(r2, 0, $i2);

        $i3 = i0 & 2;

        if $i3 == 0 goto label7;

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void binaryField(org.apache.lucene.index.FieldInfo,byte[])>(r5, r2);

        goto label8;

     label7:
        $r6 = new java.lang.String;

        $i4 = lengthof r2;

        $r7 = <org.apache.lucene.util.IOUtils: java.nio.charset.Charset CHARSET_UTF_8>;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r2, 0, $i4, $r7);

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void stringField(org.apache.lucene.index.FieldInfo,java.lang.String)>(r5, $r6);

     label8:
        return;
    }

    private void skipField(int) throws java.io.IOException
    {
        long $l3, $l4, $l5;
        org.apache.lucene.index.CorruptIndexException $r6;
        int i0, i1, $i2;
        java.lang.String $r9, $r11;
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r5;
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        i0 := @parameter0: int;

        i1 = i0 & 56;

        if i1 == 0 goto label4;

        lookupswitch(i1)
        {
            case 8: goto label1;
            case 16: goto label2;
            case 24: goto label1;
            case 32: goto label2;
            default: goto label3;
        };

     label1:
        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexInput: int readInt()>();

        return;

     label2:
        $r4 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        virtualinvoke $r4.<org.apache.lucene.store.IndexInput: long readLong()>();

        return;

     label3:
        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid numeric type: ");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label4:
        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $l3 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l4 = (long) $i2;

        $l5 = $l3 + $l4;

        virtualinvoke $r3.<org.apache.lucene.store.IndexInput: void seek(long)>($l5);

        return;
    }

    public volatile org.apache.lucene.codecs.StoredFieldsReader clone()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FIELD_IS_NUMERIC_DOUBLE> = 32;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FIELD_IS_NUMERIC_FLOAT> = 24;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FIELD_IS_NUMERIC_LONG> = 16;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FIELD_IS_NUMERIC_INT> = 8;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FIELD_IS_NUMERIC_MASK> = 56;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int _NUMERIC_BIT_SHIFT> = 3;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FIELD_IS_BINARY> = 2;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FORMAT_MINIMUM> = 2;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FORMAT_CURRENT> = 3;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FORMAT_LUCENE_3_2_NUMERIC_FIELDS> = 3;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS> = 2;

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: java.lang.String FIELDS_INDEX_EXTENSION> = "fdx";

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: java.lang.String FIELDS_EXTENSION> = "fdt";

        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: int FORMAT_SIZE> = 4;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.Lucene3xStoredFieldsReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
