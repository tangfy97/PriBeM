public class thredds.cataloggen.config.DodsDirDatasetSource extends thredds.cataloggen.config.DatasetSource
{
    private static org.slf4j.Logger log;
    private java.net.URI accessPointHeaderUri;
    private thredds.util.DodsURLExtractor urlExtractor;

    public void <init>()
    {
        thredds.cataloggen.config.DatasetSourceType $r1;
        thredds.util.DodsURLExtractor $r2;
        thredds.cataloggen.config.DodsDirDatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DodsDirDatasetSource;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void <init>()>();

        r0.<thredds.cataloggen.config.DodsDirDatasetSource: java.net.URI accessPointHeaderUri> = null;

        r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.util.DodsURLExtractor urlExtractor> = null;

        $r1 = staticinvoke <thredds.cataloggen.config.DatasetSourceType: thredds.cataloggen.config.DatasetSourceType getType(java.lang.String)>("DodsDir");

        r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.DatasetSourceType type> = $r1;

        $r2 = new thredds.util.DodsURLExtractor;

        specialinvoke $r2.<thredds.util.DodsURLExtractor: void <init>()>();

        r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.util.DodsURLExtractor urlExtractor> = $r2;

        return;
    }

    protected thredds.catalog.InvDataset createDataset(java.lang.String, java.lang.String) throws java.io.IOException
    {
        thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset $r2;
        thredds.cataloggen.config.DodsDirDatasetSource r3;
        java.net.URISyntaxException $r4;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;
        java.net.URI $r0;
        java.lang.String r1, $r10, $r12, r13;

        r3 := @this: thredds.cataloggen.config.DodsDirDatasetSource;

        r1 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

     label1:
        $r0 = new java.net.URI;

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URISyntaxException for dataset location <");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r10 = virtualinvoke $r4.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label4:
        $r2 = new thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset;

        specialinvoke $r2.<thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset: void <init>(thredds.cataloggen.config.DodsDirDatasetSource,thredds.catalog.InvDataset,java.net.URI)>(r3, null, $r0);

        return $r2;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    protected thredds.catalog.InvCatalog createSkeletonCatalog(java.lang.String) throws java.io.IOException
    {
        thredds.cataloggen.config.DodsDirDatasetSource r0;
        thredds.catalog.InvProperty $r38;
        thredds.catalog.InvCatalogImpl $r112;
        java.lang.StringBuilder $r5, $r6, $r40, $r41, $r42, $r46, $r47, $r52, $r53, $r54, $r58, $r59, $r60, $r61, $r62, $r67, $r68, $r69, $r74, $r75, $r76, $r80, $r81, $r82, $r86, $r87, $r91, $r93, $r97, $r99, $r101, $r102, $r103, $r104, $r106, $r107, $r110, $r116;
        thredds.util.DodsURLExtractor $r8;
        thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset $r115;
        java.lang.String $r2, $r3, $r7, $r9, $r13, $r16, $r18, $r20, $r22, $r32, $r43, $r48, $r55, $r63, $r70, $r77, $r83, $r88, $r92, $r94, r95;
        thredds.catalog.InvMetadata $r119;
        java.io.IOException $r78, $r98, $r100, $r105, $r108, $r111, $r117;
        java.net.URISyntaxException $r64, $r71;
        java.net.URI $r109, $r114;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r24, $r27;
        thredds.cataloggen.config.ResultService $r1, $r12, $r14, $r17, $r19, $r21, $r23, $r26;
        thredds.catalog.ServiceType $r15;
        int $i0, $i1, $i2, $i4, $i6, $i8;
        org.slf4j.Logger $r45, $r85;
        java.util.Iterator $r25, $r28;
        thredds.catalog.InvService $r36, $r113;
        thredds.catalog.ThreddsMetadata $r118, $r120;
        java.lang.Object $r35, $r37;

        r0 := @this: thredds.cataloggen.config.DodsDirDatasetSource;

        r95 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r2 = virtualinvoke $r1.<thredds.cataloggen.config.ResultService: java.lang.String getAccessPointHeader()>();

        $r3 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: java.lang.String getAccessPoint()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 != 0 goto label01;

        $r98 = new java.io.IOException;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint <");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> must start with the accessPointHeader <");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r98.<java.io.IOException: void <init>(java.lang.String)>($r63);

        throw $r98;

     label01:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label02;

        $r100 = new java.io.IOException;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint URL must end with a \"/\" <");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r100.<java.io.IOException: void <init>(java.lang.String)>($r55);

        throw $r100;

     label02:
        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r8 = r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.util.DodsURLExtractor urlExtractor>;

        $r9 = virtualinvoke $r8.<thredds.util.DodsURLExtractor: java.lang.String getTextContent(java.lang.String)>($r7);

     label04:
        goto label06;

     label05:
        $r78 := @caughtexception;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint URL is not an OPeNDAP server URL (no version info) <");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        $r85 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisType(): ");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r85.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r88, $r78);

        $r105 = new java.io.IOException;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r92 = virtualinvoke $r78.<java.io.IOException: java.lang.String getMessage()>();

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r105.<java.io.IOException: void <init>(java.lang.String)>($r94);

        virtualinvoke $r105.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r78);

        throw $r105;

     label06:
        $i0 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("DODS");

        $i4 = (int) -1;

        if $i0 != $i4 goto label07;

        $i1 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("OPeNDAP");

        $i6 = (int) -1;

        if $i1 != $i6 goto label07;

        $i2 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("DAP");

        $i8 = (int) -1;

        if $i2 != $i8 goto label07;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint URL version info is not valid <");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisType(): ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r48);

        $r108 = new java.io.IOException;

        specialinvoke $r108.<java.io.IOException: void <init>(java.lang.String)>($r43);

        throw $r108;

     label07:
        $r109 = new java.net.URI;

        specialinvoke $r109.<java.net.URI: void <init>(java.lang.String)>($r2);

        r0.<thredds.cataloggen.config.DodsDirDatasetSource: java.net.URI accessPointHeaderUri> = $r109;

     label08:
        goto label10;

     label09:
        $r71 := @caughtexception;

        $r111 = new java.io.IOException;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPointHeader URL failed to map to a URI <");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r111.<java.io.IOException: void <init>(java.lang.String)>($r77);

        throw $r111;

     label10:
        $r112 = new thredds.catalog.InvCatalogImpl;

        specialinvoke $r112.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>(null, null, null);

        $r113 = new thredds.catalog.InvService;

        $r12 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r13 = virtualinvoke $r12.<thredds.cataloggen.config.ResultService: java.lang.String getName()>();

        $r14 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r15 = virtualinvoke $r14.<thredds.cataloggen.config.ResultService: thredds.catalog.ServiceType getServiceType()>();

        $r16 = virtualinvoke $r15.<thredds.catalog.ServiceType: java.lang.String toString()>();

        $r17 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r18 = virtualinvoke $r17.<thredds.cataloggen.config.ResultService: java.lang.String getBase()>();

        $r19 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r20 = virtualinvoke $r19.<thredds.cataloggen.config.ResultService: java.lang.String getSuffix()>();

        $r21 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r22 = virtualinvoke $r21.<thredds.cataloggen.config.ResultService: java.lang.String getDescription()>();

        specialinvoke $r113.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, $r16, $r18, $r20, $r22);

        $r23 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r24 = virtualinvoke $r23.<thredds.cataloggen.config.ResultService: java.util.List getProperties()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r37 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (thredds.catalog.InvProperty) $r37;

        virtualinvoke $r113.<thredds.catalog.InvService: void addProperty(thredds.catalog.InvProperty)>($r38);

        goto label11;

     label12:
        $r26 = virtualinvoke r0.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r27 = virtualinvoke $r26.<thredds.cataloggen.config.ResultService: java.util.List getServices()>();

        $r28 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r35 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        $r36 = (thredds.catalog.InvService) $r35;

        virtualinvoke $r113.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>($r36);

        goto label13;

     label14:
        virtualinvoke $r112.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r113);

     label15:
        $r115 = new thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset;

        $r114 = new java.net.URI;

        specialinvoke $r114.<java.net.URI: void <init>(java.lang.String)>($r3);

        specialinvoke $r115.<thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset: void <init>(thredds.cataloggen.config.DodsDirDatasetSource,thredds.catalog.InvDataset,java.net.URI)>(r0, null, $r114);

     label16:
        goto label18;

     label17:
        $r64 := @caughtexception;

        $r117 = new java.io.IOException;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint URL failed to map to a URI <");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r117.<java.io.IOException: void <init>(java.lang.String)>($r70);

        throw $r117;

     label18:
        $r118 = new thredds.catalog.ThreddsMetadata;

        specialinvoke $r118.<thredds.catalog.ThreddsMetadata: void <init>(boolean)>(0);

        $r32 = virtualinvoke $r113.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r118.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r32);

        $r119 = new thredds.catalog.InvMetadata;

        specialinvoke $r119.<thredds.catalog.InvMetadata: void <init>(thredds.catalog.InvDataset,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,thredds.catalog.MetadataConverterIF,java.lang.Object)>($r115, null, "http://www.unidata.ucar.edu/namespaces/thredds/InvCatalog/v1.0", "", 1, 1, null, $r118);

        $r120 = new thredds.catalog.ThreddsMetadata;

        specialinvoke $r120.<thredds.catalog.ThreddsMetadata: void <init>(boolean)>(0);

        virtualinvoke $r120.<thredds.catalog.ThreddsMetadata: void addMetadata(thredds.catalog.InvMetadata)>($r119);

        virtualinvoke $r115.<thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset: void setLocalMetadata(thredds.catalog.ThreddsMetadata)>($r120);

        virtualinvoke $r112.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r115);

        virtualinvoke $r112.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r112;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.net.URISyntaxException from label07 to label08 with label09;
        catch java.net.URISyntaxException from label15 to label16 with label17;
    }

    protected boolean isCollection(thredds.catalog.InvDataset)
    {
        thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset $r1;
        thredds.cataloggen.config.DodsDirDatasetSource r2;
        thredds.catalog.InvDataset r0;
        boolean $z0;

        r2 := @this: thredds.cataloggen.config.DodsDirDatasetSource;

        r0 := @parameter0: thredds.catalog.InvDataset;

        $r1 = (thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset) r0;

        $z0 = virtualinvoke $r1.<thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset: boolean isDirectory()>();

        return $z0;
    }

    protected java.util.List expandThisLevel(thredds.catalog.InvDataset, java.lang.String)
    {
        thredds.cataloggen.config.DodsDirDatasetSource r1;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23, $r26, $r27, $r29, $r31, $r33, $r34, $r37, $r38, $r40, $r41, $r45, $r47, $r49, $r50, $r52, $r55, $r57, $r58, $r59, $r61, $r64, $r66, $r68, $r69, $r71;
        thredds.util.DodsURLExtractor $r3;
        thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset $r17;
        java.util.ArrayList $r2, $r5;
        java.lang.String $r4, $r9, $r16, $r25, $r28, $r32, $r35, $r39, $r42, $r48, $r51, $r53, $r60, $r62, $r67, $r70, $r72, r73, r74;
        java.io.IOException $r44, $r63;
        java.net.URISyntaxException $r54;
        java.lang.NullPointerException $r43;
        java.net.URI $r8, $r10, $r24;
        thredds.catalog.InvDataset r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1;
        org.slf4j.Logger $r12, $r19, $r30, $r46, $r56, $r65;
        java.util.Iterator $r6;
        java.lang.IllegalArgumentException $r36;
        java.lang.Object $r7;

        r1 := @this: thredds.cataloggen.config.DodsDirDatasetSource;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r73 := @parameter1: java.lang.String;

        if r0 != null goto label01;

        $r43 = new java.lang.NullPointerException;

        specialinvoke $r43.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given dataset cannot be null.");

        throw $r43;

     label01:
        $z0 = virtualinvoke r1.<thredds.cataloggen.config.DodsDirDatasetSource: boolean isCollection(thredds.catalog.InvDataset)>(r0);

        if $z0 != 0 goto label02;

        $r36 = new java.lang.IllegalArgumentException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset \"");

        $r39 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not a collection dataset.");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r36;

     label02:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label03:
        $r3 = r1.<thredds.cataloggen.config.DodsDirDatasetSource: thredds.util.DodsURLExtractor urlExtractor>;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<thredds.util.DodsURLExtractor: java.util.ArrayList extract(java.lang.String)>($r4);

     label04:
        goto label06;

     label05:
        $r63 := @caughtexception;

        $r65 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisLevel(): IOException while extracting dataset info from given OPeNDAP directory <");

        $r67 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, return empty list: ");

        $r70 = virtualinvoke $r63.<java.io.IOException: java.lang.String getMessage()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r65.<org.slf4j.Logger: void warn(java.lang.String)>($r72);

        return $r2;

     label06:
        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label18;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r74 = (java.lang.String) $r7;

        $z1 = virtualinvoke r74.<java.lang.String: boolean endsWith(java.lang.String)>(".html");

        if $z1 != 0 goto label08;

        $z4 = virtualinvoke r74.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z4 != 0 goto label08;

        $r30 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisLevel(): Dataset isn\'t an OPeNDAP dataset or collection dataset, skip <");

        $r32 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>($r35);

        goto label07;

     label08:
        $z2 = virtualinvoke r74.<java.lang.String: boolean endsWith(java.lang.String)>(".html");

        if $z2 == 0 goto label09;

        $i0 = virtualinvoke r74.<java.lang.String: int length()>();

        $i1 = $i0 - 5;

        r74 = virtualinvoke r74.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label09:
        $r8 = r1.<thredds.cataloggen.config.DodsDirDatasetSource: java.net.URI accessPointHeaderUri>;

        $r9 = virtualinvoke $r8.<java.net.URI: java.lang.String toString()>();

        $z3 = virtualinvoke r74.<java.lang.String: boolean startsWith(java.lang.String)>($r9);

        if $z3 != 0 goto label10;

        $r19 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisLevel(): current path <");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not child of given");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" location <");

        $r24 = r1.<thredds.cataloggen.config.DodsDirDatasetSource: java.net.URI accessPointHeaderUri>;

        $r25 = virtualinvoke $r24.<java.net.URI: java.lang.String toString()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, skip.");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String)>($r28);

        goto label07;

     label10:
        $r10 = new java.net.URI;

        specialinvoke $r10.<java.net.URI: void <init>(java.lang.String)>(r74);

     label11:
        goto label13;

     label12:
        $r54 := @caughtexception;

        $r56 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisLevel(): Skipping dataset  <");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> due to URISyntaxException: ");

        $r60 = virtualinvoke $r54.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r56.<org.slf4j.Logger: void error(java.lang.String)>($r62);

        goto label07;

     label13:
        $r12 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisLevel(): handle dataset (");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r16);

     label14:
        $r17 = new thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset;

        specialinvoke $r17.<thredds.cataloggen.config.DodsDirDatasetSource$DodsDirInvDataset: void <init>(thredds.cataloggen.config.DodsDirDatasetSource,thredds.catalog.InvDataset,java.net.URI)>(r1, null, $r10);

     label15:
        goto label17;

     label16:
        $r44 := @caughtexception;

        $r46 = <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expandThisLevel(): skipping dataset <");

        $r48 = virtualinvoke $r10.<java.net.URI: java.lang.String toString()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, not under accessPointHeader: ");

        $r51 = virtualinvoke $r44.<java.io.IOException: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<org.slf4j.Logger: void warn(java.lang.String)>($r53);

        goto label07;

     label17:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label07;

     label18:
        return $r2;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.net.URISyntaxException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
    }

    static java.net.URI access$000(thredds.cataloggen.config.DodsDirDatasetSource)
    {
        java.net.URI $r1;
        thredds.cataloggen.config.DodsDirDatasetSource r0;

        r0 := @parameter0: thredds.cataloggen.config.DodsDirDatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DodsDirDatasetSource: java.net.URI accessPointHeaderUri>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/config/DodsDirDatasetSource;");

        <thredds.cataloggen.config.DodsDirDatasetSource: org.slf4j.Logger log> = $r0;

        return;
    }
}
