public final class org.apache.poi.ss.formula.functions.Countblank extends org.apache.poi.ss.formula.functions.Fixed1ArgFunction
{
    private static final org.apache.poi.ss.formula.functions.CountUtils$I_MatchPredicate predicate;

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.Countblank r0;

        r0 := @this: org.apache.poi.ss.formula.functions.Countblank;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.Fixed1ArgFunction: void <init>()>();

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.RefEval $r13;
        org.apache.poi.ss.formula.functions.Countblank r14;
        int $i0, $i1, i2, i3;
        java.lang.String $r5, $r8;
        org.apache.poi.ss.formula.ThreeDEval $r10;
        boolean $z0, $z1;
        double d0;
        org.apache.poi.ss.formula.functions.CountUtils$I_MatchPredicate $r9, $r12;
        java.lang.IllegalArgumentException $r1;
        org.apache.poi.ss.formula.eval.ValueEval r0;
        org.apache.poi.ss.formula.eval.NumberEval $r11;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        java.lang.Class $r4;

        r14 := @this: org.apache.poi.ss.formula.functions.Countblank;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        $z0 = r0 instanceof org.apache.poi.ss.formula.eval.RefEval;

        if $z0 == 0 goto label1;

        $r13 = (org.apache.poi.ss.formula.eval.RefEval) r0;

        $r12 = <org.apache.poi.ss.formula.functions.Countblank: org.apache.poi.ss.formula.functions.CountUtils$I_MatchPredicate predicate>;

        $i1 = staticinvoke <org.apache.poi.ss.formula.functions.CountUtils: int countMatchingCellsInRef(org.apache.poi.ss.formula.eval.RefEval,org.apache.poi.ss.formula.functions.CountUtils$I_MatchPredicate)>($r13, $r12);

        d0 = (double) $i1;

        goto label3;

     label1:
        $z1 = r0 instanceof org.apache.poi.ss.formula.ThreeDEval;

        if $z1 == 0 goto label2;

        $r10 = (org.apache.poi.ss.formula.ThreeDEval) r0;

        $r9 = <org.apache.poi.ss.formula.functions.Countblank: org.apache.poi.ss.formula.functions.CountUtils$I_MatchPredicate predicate>;

        $i0 = staticinvoke <org.apache.poi.ss.formula.functions.CountUtils: int countMatchingCellsInArea(org.apache.poi.ss.formula.ThreeDEval,org.apache.poi.ss.formula.functions.CountUtils$I_MatchPredicate)>($r10, $r9);

        d0 = (double) $i0;

        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad range arg type (");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label3:
        $r11 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r11.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>(d0);

        return $r11;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.functions.Countblank$1 $r0;

        $r0 = new org.apache.poi.ss.formula.functions.Countblank$1;

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.Countblank$1: void <init>()>();

        <org.apache.poi.ss.formula.functions.Countblank: org.apache.poi.ss.formula.functions.CountUtils$I_MatchPredicate predicate> = $r0;

        return;
    }
}
