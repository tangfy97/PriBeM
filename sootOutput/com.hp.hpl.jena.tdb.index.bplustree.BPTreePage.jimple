public abstract class com.hp.hpl.jena.tdb.index.bplustree.BPTreePage extends java.lang.Object implements com.hp.hpl.jena.tdb.base.page.Page
{
    protected final com.hp.hpl.jena.tdb.index.bplustree.BPlusTree bpTree;
    protected final com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams params;

    protected void <init>(com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)
    {
        java.io.PrintStream $r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreePage r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreePage;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("NULL B+Tree");

     label1:
        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreePage: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree bpTree> = r1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams getParams()>();

        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreePage: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams params> = $r2;

        return;
    }

    public final com.hp.hpl.jena.tdb.index.bplustree.BPlusTree getBPlusTree()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreePage r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreePage;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreePage: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree bpTree>;

        return $r1;
    }

    public final com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams getParams()
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreePage r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreePage;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreePage: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams params>;

        return $r1;
    }

    abstract com.hp.hpl.jena.tdb.index.bplustree.BPTreePage split();

    abstract com.hp.hpl.jena.tdb.base.record.Record shiftRight(com.hp.hpl.jena.tdb.index.bplustree.BPTreePage, com.hp.hpl.jena.tdb.base.record.Record);

    abstract com.hp.hpl.jena.tdb.base.record.Record shiftLeft(com.hp.hpl.jena.tdb.index.bplustree.BPTreePage, com.hp.hpl.jena.tdb.base.record.Record);

    abstract com.hp.hpl.jena.tdb.index.bplustree.BPTreePage merge(com.hp.hpl.jena.tdb.index.bplustree.BPTreePage, com.hp.hpl.jena.tdb.base.record.Record);

    abstract boolean isFull();

    abstract boolean isMinSize();

    abstract int getCount();

    abstract void setCount(int);

    abstract int getMaxSize();

    abstract boolean hasAnyKeys();

    abstract com.hp.hpl.jena.tdb.base.record.Record internalSearch(com.hp.hpl.jena.tdb.base.record.Record);

    abstract com.hp.hpl.jena.tdb.base.record.Record internalInsert(com.hp.hpl.jena.tdb.base.record.Record);

    abstract com.hp.hpl.jena.tdb.base.record.Record internalDelete(com.hp.hpl.jena.tdb.base.record.Record);

    abstract com.hp.hpl.jena.tdb.base.record.Record getLowRecord();

    abstract com.hp.hpl.jena.tdb.base.record.Record getHighRecord();

    abstract com.hp.hpl.jena.tdb.base.record.Record minRecord();

    abstract com.hp.hpl.jena.tdb.base.record.Record maxRecord();

    abstract void write();

    abstract void promote();

    abstract void release();

    abstract void free();

    abstract void checkNode();

    abstract void checkNodeDeep();

    abstract com.hp.hpl.jena.tdb.base.record.Record getSplitKey();
}
