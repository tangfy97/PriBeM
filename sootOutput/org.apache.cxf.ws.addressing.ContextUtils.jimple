public final class org.apache.cxf.ws.addressing.ContextUtils extends java.lang.Object
{
    public static final org.apache.cxf.ws.addressing.ObjectFactory WSA_OBJECT_FACTORY;
    public static final java.lang.String ACTION;
    private static final org.apache.cxf.ws.addressing.EndpointReferenceType NONE_ENDPOINT_REFERENCE;
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String URN_UUID;
    private static javax.xml.bind.JAXBContext jaxbContext;
    private static java.util.Set jaxbContextClasses;
    private static final java.lang.String MAP_FAULT_NAME_PROPERTY;
    private static final java.lang.String MAP_FAULT_REASON_PROPERTY;
    private static final java.lang.String PARTIAL_RESPONSE_SENT_PROPERTY;

    private void <init>()
    {
        org.apache.cxf.ws.addressing.ContextUtils r0;

        r0 := @this: org.apache.cxf.ws.addressing.ContextUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isOutbound(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0, $r3, $r5;
        org.apache.cxf.message.Exchange $r1, $r2, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.message.Message;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label2;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        if r0 == $r3 goto label1;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutFaultMessage()>();

        if r0 != $r5 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isFault(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0, $r3, $r5;
        org.apache.cxf.message.Exchange $r1, $r2, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.message.Message;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label2;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInFaultMessage()>();

        if r0 == $r3 goto label1;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutFaultMessage()>();

        if r0 != $r5 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isRequestor(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean r2;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.client");

        r2 = (java.lang.Boolean) $r1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static java.lang.String getMAPProperty(boolean, boolean, boolean)
    {
        java.lang.String $r0;
        boolean z0, z1, z2;

        z0 := @parameter0: boolean;

        z2 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label3;

        if z2 == 0 goto label1;

        $r0 = "javax.xml.ws.addressing.context";

        goto label5;

     label1:
        if z1 == 0 goto label2;

        $r0 = "javax.xml.ws.addressing.context.outbound";

        goto label5;

     label2:
        $r0 = "javax.xml.ws.addressing.context.inbound";

        goto label5;

     label3:
        if z1 == 0 goto label4;

        $r0 = "javax.xml.ws.addressing.context.outbound";

        goto label5;

     label4:
        $r0 = "javax.xml.ws.addressing.context.inbound";

     label5:
        return $r0;
    }

    public static void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties, org.apache.cxf.message.Message, boolean)
    {
        org.apache.cxf.message.Message r1;
        org.apache.cxf.ws.addressing.AddressingProperties r0;
        boolean z0, $z1;

        r0 := @parameter0: org.apache.cxf.ws.addressing.AddressingProperties;

        r1 := @parameter1: org.apache.cxf.message.Message;

        z0 := @parameter2: boolean;

        $z1 = staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: boolean isRequestor(org.apache.cxf.message.Message)>(r1);

        staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)>(r0, r1, z0, $z1, 0);

        return;
    }

    public static void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties, org.apache.cxf.message.Message, boolean, boolean)
    {
        org.apache.cxf.message.Message r1;
        org.apache.cxf.ws.addressing.AddressingProperties r0;
        boolean z0, z1;

        r0 := @parameter0: org.apache.cxf.ws.addressing.AddressingProperties;

        r1 := @parameter1: org.apache.cxf.message.Message;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)>(r0, r1, z0, z1, 0);

        return;
    }

    public static void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties, org.apache.cxf.message.Message, boolean, boolean, boolean)
    {
        org.apache.cxf.message.Message r4;
        org.apache.cxf.ws.addressing.AddressingProperties r0;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;
        java.lang.String $r1;
        boolean z0, z1, z2;

        r0 := @parameter0: org.apache.cxf.ws.addressing.AddressingProperties;

        r4 := @parameter1: org.apache.cxf.message.Message;

        z2 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r0 == null goto label1;

        $r1 = staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: java.lang.String getMAPProperty(boolean,boolean,boolean)>(z0, z1, z2);

        $r3 = <org.apache.cxf.ws.addressing.ContextUtils: java.util.logging.Logger LOG>;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r2, "associating MAPs with context property {0}", $r1);

        interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

     label1:
        return;
    }

    public static org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message, boolean, boolean)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.ws.addressing.AddressingProperties $r1;
        boolean z0, z1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)>(r0, z0, z1, 1);

        return $r1;
    }

    public static org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message, boolean, boolean, boolean)
    {
        org.apache.cxf.ws.addressing.AddressingProperties r14;
        java.util.logging.Level $r2, $r6, $r15;
        java.lang.String $r1;
        boolean $z0, z1, z2, z3;
        org.apache.cxf.message.Message r0, $r10, $r12;
        java.util.logging.Logger $r3, $r5, $r7;
        org.apache.cxf.message.Exchange $r8, $r9, $r11;
        java.lang.Object $r4, $r13;

        r0 := @parameter0: org.apache.cxf.message.Message;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $z0 = staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: boolean isRequestor(org.apache.cxf.message.Message)>(r0);

        $r1 = staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: java.lang.String getMAPProperty(boolean,boolean,boolean)>(z1, $z0, z2);

        $r3 = <org.apache.cxf.ws.addressing.ContextUtils: java.util.logging.Logger LOG>;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r2, "retrieving MAPs from context property {0}", $r1);

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r1);

        r14 = (org.apache.cxf.ws.addressing.AddressingProperties) $r4;

        if r14 != null goto label1;

        if z2 == 0 goto label1;

        if $z0 != 0 goto label1;

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r8 == null goto label1;

        $r9 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        if $r10 == null goto label1;

        $r11 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r12 = interfaceinvoke $r11.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r13 = interfaceinvoke $r12.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r1);

        r14 = (org.apache.cxf.ws.addressing.AddressingProperties) $r13;

     label1:
        if r14 == null goto label2;

        $r7 = <org.apache.cxf.ws.addressing.ContextUtils: java.util.logging.Logger LOG>;

        $r6 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r6, "current MAPs {0}", r14);

        goto label5;

     label2:
        if z1 != 0 goto label5;

        $r5 = <org.apache.cxf.ws.addressing.ContextUtils: java.util.logging.Logger LOG>;

        if z3 == 0 goto label3;

        $r15 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        goto label4;

     label3:
        $r15 = <java.util.logging.Level: java.util.logging.Level FINE>;

     label4:
        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)>($r5, $r15, "MAPS_RETRIEVAL_FAILURE_MSG");

     label5:
        return r14;
    }

    public static org.apache.cxf.ws.addressing.AttributedURIType getAttributedURI(java.lang.String)
    {
        java.lang.String r2;
        org.apache.cxf.ws.addressing.AttributedURIType $r1;
        org.apache.cxf.ws.addressing.ObjectFactory $r0;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.ObjectFactory WSA_OBJECT_FACTORY>;

        $r1 = virtualinvoke $r0.<org.apache.cxf.ws.addressing.ObjectFactory: org.apache.cxf.ws.addressing.AttributedURIType createAttributedURIType()>();

        virtualinvoke $r1.<org.apache.cxf.ws.addressing.AttributedURIType: void setValue(java.lang.String)>(r2);

        return $r1;
    }

    public static org.apache.cxf.ws.addressing.RelatesToType getRelatesTo(java.lang.String)
    {
        org.apache.cxf.ws.addressing.RelatesToType $r1;
        java.lang.String r2;
        org.apache.cxf.ws.addressing.ObjectFactory $r0;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.ObjectFactory WSA_OBJECT_FACTORY>;

        $r1 = virtualinvoke $r0.<org.apache.cxf.ws.addressing.ObjectFactory: org.apache.cxf.ws.addressing.RelatesToType createRelatesToType()>();

        virtualinvoke $r1.<org.apache.cxf.ws.addressing.RelatesToType: void setValue(java.lang.String)>(r2);

        return $r1;
    }

    public static boolean isGenericAddress(org.apache.cxf.ws.addressing.EndpointReferenceType)
    {
        org.apache.cxf.ws.addressing.EndpointReferenceType r0;
        org.apache.cxf.ws.addressing.AttributedURIType $r1, $r3, $r6;
        java.lang.String $r2, $r4, $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.cxf.ws.addressing.EndpointReferenceType;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        if $r1 == null goto label1;

        $r2 = "http://www.w3.org/2005/08/addressing/anonymous";

        $r3 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.ws.addressing.AttributedURIType: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = "http://www.w3.org/2005/08/addressing/none";

        $r6 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        $r7 = virtualinvoke $r6.<org.apache.cxf.ws.addressing.AttributedURIType: java.lang.String getValue()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isAnonymousAddress(org.apache.cxf.ws.addressing.EndpointReferenceType)
    {
        org.apache.cxf.ws.addressing.EndpointReferenceType r0;
        org.apache.cxf.ws.addressing.AttributedURIType $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.ws.addressing.EndpointReferenceType;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        if $r1 == null goto label1;

        $r2 = "http://www.w3.org/2005/08/addressing/anonymous";

        $r3 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.ws.addressing.AttributedURIType: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean isNoneAddress(org.apache.cxf.ws.addressing.EndpointReferenceType)
    {
        org.apache.cxf.ws.addressing.EndpointReferenceType r0;
        org.apache.cxf.ws.addressing.AttributedURIType $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.ws.addressing.EndpointReferenceType;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        if $r1 == null goto label1;

        $r2 = "http://www.w3.org/2005/08/addressing/none";

        $r3 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.ws.addressing.AttributedURIType: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean hasEmptyAction(org.apache.cxf.ws.addressing.AddressingProperties)
    {
        org.apache.cxf.ws.addressing.AddressingProperties r0;
        org.apache.cxf.ws.addressing.AttributedURIType $r1, $r2, $r3;
        int $i0;
        java.lang.String $r4;
        boolean $z0, z1;

        r0 := @parameter0: org.apache.cxf.ws.addressing.AddressingProperties;

        $r1 = interfaceinvoke r0.<org.apache.cxf.ws.addressing.AddressingProperties: org.apache.cxf.ws.addressing.AttributedURIType getAction()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        z1 = $z0;

        $r2 = interfaceinvoke r0.<org.apache.cxf.ws.addressing.AddressingProperties: org.apache.cxf.ws.addressing.AttributedURIType getAction()>();

        if $r2 == null goto label3;

        $r3 = interfaceinvoke r0.<org.apache.cxf.ws.addressing.AddressingProperties: org.apache.cxf.ws.addressing.AttributedURIType getAction()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.ws.addressing.AttributedURIType: java.lang.String getValue()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        interfaceinvoke r0.<org.apache.cxf.ws.addressing.AddressingProperties: void setAction(org.apache.cxf.ws.addressing.AttributedURIType)>(null);

        z1 = 0;

     label3:
        return z1;
    }

    public static void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties, org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.message.Message $r1, $r3, $r4, $r5, $r6, $r7;
        org.apache.cxf.ws.addressing.AddressingProperties r2;
        org.apache.cxf.message.Exchange r0;

        r2 := @parameter0: org.apache.cxf.ws.addressing.AddressingProperties;

        r0 := @parameter1: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        if $r1 != null goto label1;

        $r7 = staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Exchange)>(r0);

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void setOutMessage(org.apache.cxf.message.Message)>($r7);

     label1:
        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)>(r2, $r3);

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutFaultMessage()>();

        if $r4 != null goto label2;

        $r6 = staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Exchange)>(r0);

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void setOutFaultMessage(org.apache.cxf.message.Message)>($r6);

     label2:
        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutFaultMessage()>();

        staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)>(r2, $r5);

        return;
    }

    public static void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties, org.apache.cxf.message.Message)
    {
        org.apache.cxf.ws.addressing.AddressingProperties r1;
        org.apache.cxf.message.Message r0;

        r1 := @parameter0: org.apache.cxf.ws.addressing.AddressingProperties;

        r0 := @parameter1: org.apache.cxf.message.Message;

        if r0 == null goto label1;

        staticinvoke <org.apache.cxf.ws.addressing.ContextUtils: void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)>(r1, r0, 0, 0, 0);

     label1:
        return;
    }

    public static void storeMAPFaultName(java.lang.String, org.apache.cxf.message.Message)
    {
        java.lang.String r1;
        org.apache.cxf.message.Message r0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.cxf.message.Message;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.ws.addressing.map.fault.name", r1);

        return;
    }

    public static java.lang.String retrieveMAPFaultName(org.apache.cxf.message.Message)
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        org.apache.cxf.message.Message r0;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.ws.addressing.map.fault.name");

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public static void storeMAPFaultReason(java.lang.String, org.apache.cxf.message.Message)
    {
        java.lang.String r1;
        org.apache.cxf.message.Message r0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.cxf.message.Message;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.ws.addressing.map.fault.reason", r1);

        return;
    }

    public static java.lang.String retrieveMAPFaultReason(org.apache.cxf.message.Message)
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        org.apache.cxf.message.Message r0;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.ws.addressing.map.fault.reason");

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public static void storePartialResponseSent(org.apache.cxf.message.Message)
    {
        java.lang.Boolean $r1;
        org.apache.cxf.message.Message r0;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.ws.addressing.partial.response.sent", $r1);

        return;
    }

    public static boolean retrievePartialResponseSent(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean r2;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.ws.addressing.partial.response.sent");

        r2 = (java.lang.Boolean) $r1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static void storeDeferUncorrelatedMessageAbort(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r3;
        org.apache.cxf.message.Exchange $r1, $r2;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("defer.uncorrelated.message.abort", $r3);

     label1:
        return;
    }

    public static boolean retrieveDeferUncorrelatedMessageAbort(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r4;
        java.lang.Object $r3;
        org.apache.cxf.message.Exchange $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("defer.uncorrelated.message.abort");

        $r4 = (java.lang.Boolean) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public static void storeDeferredUncorrelatedMessageAbort(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r3;
        org.apache.cxf.message.Exchange $r1, $r2;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("deferred.uncorrelated.message.abort", $r3);

     label1:
        return;
    }

    public static boolean retrieveDeferredUncorrelatedMessageAbort(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r4;
        java.lang.Object $r3;
        org.apache.cxf.message.Exchange $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("deferred.uncorrelated.message.abort");

        $r4 = (java.lang.Boolean) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public static boolean retrieveAsyncPostResponseDispatch(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean r2;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.async.post.response.dispatch");

        r2 = (java.lang.Boolean) $r1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static javax.xml.bind.JAXBContext getJAXBContext() throws javax.xml.bind.JAXBException
    {
        java.lang.Throwable $r14;
        java.lang.Package $r4;
        org.apache.cxf.ws.addressing.ObjectFactory $r2, $r6;
        java.util.Set $r10, $r13;
        org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas $r9;
        java.util.HashSet $r1;
        java.lang.Class $r3, $r7;
        java.lang.String $r5;
        java.lang.ClassLoader $r8;
        javax.xml.bind.JAXBContext $r0, $r11, $r12;

        entermonitor class "Lorg/apache/cxf/ws/addressing/ContextUtils;";

     label1:
        $r0 = <org.apache.cxf.ws.addressing.ContextUtils: javax.xml.bind.JAXBContext jaxbContext>;

        if $r0 == null goto label2;

        $r13 = <org.apache.cxf.ws.addressing.ContextUtils: java.util.Set jaxbContextClasses>;

        if $r13 != null goto label3;

     label2:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.ObjectFactory WSA_OBJECT_FACTORY>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Package getPackage()>();

        $r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getName()>();

        $r6 = <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.ObjectFactory WSA_OBJECT_FACTORY>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)>($r1, $r5, $r8);

        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void scanPackages(java.util.Set)>($r1);

        $r9 = staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r1, null, null, null, 0);

        $r10 = virtualinvoke $r9.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        <org.apache.cxf.ws.addressing.ContextUtils: java.util.Set jaxbContextClasses> = $r10;

        $r11 = virtualinvoke $r9.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        <org.apache.cxf.ws.addressing.ContextUtils: javax.xml.bind.JAXBContext jaxbContext> = $r11;

     label3:
        exitmonitor class "Lorg/apache/cxf/ws/addressing/ContextUtils;";

     label4:
        goto label7;

     label5:
        $r14 := @caughtexception;

        exitmonitor class "Lorg/apache/cxf/ws/addressing/ContextUtils;";

     label6:
        throw $r14;

     label7:
        $r12 = <org.apache.cxf.ws.addressing.ContextUtils: javax.xml.bind.JAXBContext jaxbContext>;

        return $r12;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void setJAXBContext(javax.xml.bind.JAXBContext) throws javax.xml.bind.JAXBException
    {
        java.util.HashSet $r1;
        java.lang.Throwable $r2;
        javax.xml.bind.JAXBContext r0;

        r0 := @parameter0: javax.xml.bind.JAXBContext;

        entermonitor class "Lorg/apache/cxf/ws/addressing/ContextUtils;";

     label1:
        <org.apache.cxf.ws.addressing.ContextUtils: javax.xml.bind.JAXBContext jaxbContext> = r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <org.apache.cxf.ws.addressing.ContextUtils: java.util.Set jaxbContextClasses> = $r1;

        exitmonitor class "Lorg/apache/cxf/ws/addressing/ContextUtils;";

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lorg/apache/cxf/ws/addressing/ContextUtils;";

     label4:
        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.String generateUUID()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.util.UUID $r2;
        java.lang.String $r4;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("urn:uuid:");

        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.transport.Conduit, org.apache.cxf.message.Message)
    {
        org.apache.cxf.transport.Conduit r2, $r3;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.Exchange $r1;

        r2 := @parameter0: org.apache.cxf.transport.Conduit;

        r0 := @parameter1: org.apache.cxf.message.Message;

        if r2 != null goto label3;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label1;

        $r3 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)>(r0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        r2 = $r3;

     label3:
        return r2;
    }

    public static org.apache.cxf.ws.addressing.EndpointReferenceType getNoneEndpointReference()
    {
        org.apache.cxf.ws.addressing.EndpointReferenceType $r0;

        $r0 = <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.EndpointReferenceType NONE_ENDPOINT_REFERENCE>;

        return $r0;
    }

    public static void applyReferenceParam(org.apache.cxf.ws.addressing.EndpointReferenceType, java.lang.Object)
    {
        java.util.List $r3;
        org.apache.cxf.ws.addressing.ReferenceParametersType $r1, $r2, $r6;
        org.apache.cxf.ws.addressing.EndpointReferenceType r0;
        org.apache.cxf.ws.addressing.ObjectFactory $r5;
        java.lang.Object r4;

        r0 := @parameter0: org.apache.cxf.ws.addressing.EndpointReferenceType;

        r4 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.ReferenceParametersType getReferenceParameters()>();

        if null != $r1 goto label1;

        $r5 = <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.ObjectFactory WSA_OBJECT_FACTORY>;

        $r6 = virtualinvoke $r5.<org.apache.cxf.ws.addressing.ObjectFactory: org.apache.cxf.ws.addressing.ReferenceParametersType createReferenceParametersType()>();

        virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: void setReferenceParameters(org.apache.cxf.ws.addressing.ReferenceParametersType)>($r6);

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.ReferenceParametersType getReferenceParameters()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.ws.addressing.ReferenceParametersType: java.util.List getAny()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        return;
    }

    public static org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.message.MessageImpl $r3;
        org.apache.cxf.endpoint.Endpoint r2;
        org.apache.cxf.binding.Binding $r4, $r5;
        org.apache.cxf.message.Message r6;
        java.lang.Object $r1;
        org.apache.cxf.message.Exchange r0;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        r2 = (org.apache.cxf.endpoint.Endpoint) $r1;

        r6 = null;

        if r2 == null goto label1;

        $r3 = new org.apache.cxf.message.MessageImpl;

        specialinvoke $r3.<org.apache.cxf.message.MessageImpl: void <init>()>();

        r6 = $r3;

        interfaceinvoke $r3.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>(r0);

        $r4 = interfaceinvoke r2.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.binding.Binding getBinding()>();

        if $r4 == null goto label1;

        $r5 = interfaceinvoke r2.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.binding.Binding getBinding()>();

        r6 = interfaceinvoke $r5.<org.apache.cxf.binding.Binding: org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)>($r3);

     label1:
        return r6;
    }

    public static org.apache.cxf.transport.Destination createDecoupledDestination(org.apache.cxf.message.Exchange, org.apache.cxf.ws.addressing.EndpointReferenceType)
    {
        org.apache.cxf.service.model.EndpointInfo $r3;
        org.apache.cxf.endpoint.Endpoint $r2;
        org.apache.cxf.ws.addressing.EndpointReferenceType r5;
        java.lang.Object $r1;
        org.apache.cxf.ws.addressing.ContextUtils$1 $r4;
        org.apache.cxf.message.Exchange r0;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r5 := @parameter1: org.apache.cxf.ws.addressing.EndpointReferenceType;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        $r2 = (org.apache.cxf.endpoint.Endpoint) $r1;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r4 = new org.apache.cxf.ws.addressing.ContextUtils$1;

        specialinvoke $r4.<org.apache.cxf.ws.addressing.ContextUtils$1: void <init>(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.service.model.EndpointInfo)>(r5, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.cxf.ws.addressing.EndpointReferenceType $r7;
        org.apache.cxf.ws.addressing.ObjectFactory $r0;
        java.util.logging.Logger $r8;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.Class $r2;
        java.lang.String $r3, $r6;

        <org.apache.cxf.ws.addressing.ContextUtils: java.lang.String PARTIAL_RESPONSE_SENT_PROPERTY> = "org.apache.cxf.ws.addressing.partial.response.sent";

        <org.apache.cxf.ws.addressing.ContextUtils: java.lang.String MAP_FAULT_REASON_PROPERTY> = "org.apache.cxf.ws.addressing.map.fault.reason";

        <org.apache.cxf.ws.addressing.ContextUtils: java.lang.String MAP_FAULT_NAME_PROPERTY> = "org.apache.cxf.ws.addressing.map.fault.name";

        <org.apache.cxf.ws.addressing.ContextUtils: java.lang.String URN_UUID> = "urn:uuid:";

        $r0 = new org.apache.cxf.ws.addressing.ObjectFactory;

        specialinvoke $r0.<org.apache.cxf.ws.addressing.ObjectFactory: void <init>()>();

        <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.ObjectFactory WSA_OBJECT_FACTORY> = $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = class "Lorg/apache/cxf/ws/addressing/ContextUtils;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ACTION");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.ws.addressing.ContextUtils: java.lang.String ACTION> = $r6;

        $r7 = staticinvoke <org.apache.cxf.wsdl.EndpointReferenceUtils: org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)>("http://www.w3.org/2005/08/addressing/none");

        <org.apache.cxf.ws.addressing.ContextUtils: org.apache.cxf.ws.addressing.EndpointReferenceType NONE_ENDPOINT_REFERENCE> = $r7;

        $r8 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/ws/addressing/ContextUtils;");

        <org.apache.cxf.ws.addressing.ContextUtils: java.util.logging.Logger LOG> = $r8;

        return;
    }
}
