public class org.apache.batik.bridge.CursorManager extends java.lang.Object implements org.apache.batik.util.SVGConstants, org.apache.batik.bridge.ErrorConstants
{
    protected static java.util.Map cursorMap;
    public static final java.awt.Cursor DEFAULT_CURSOR;
    public static final java.awt.Cursor ANCHOR_CURSOR;
    public static final java.awt.Cursor TEXT_CURSOR;
    public static final int DEFAULT_PREFERRED_WIDTH;
    public static final int DEFAULT_PREFERRED_HEIGHT;
    protected org.apache.batik.bridge.BridgeContext ctx;
    protected org.apache.batik.bridge.CursorManager$CursorCache cursorCache;
    static java.lang.Class class$org$apache$batik$bridge$CursorManager;

    public void <init>(org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.bridge.CursorManager$CursorCache $r1;
        org.apache.batik.bridge.BridgeContext r2;
        org.apache.batik.bridge.CursorManager r0;

        r0 := @this: org.apache.batik.bridge.CursorManager;

        r2 := @parameter0: org.apache.batik.bridge.BridgeContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.bridge.CursorManager$CursorCache;

        specialinvoke $r1.<org.apache.batik.bridge.CursorManager$CursorCache: void <init>()>();

        r0.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.CursorManager$CursorCache cursorCache> = $r1;

        r0.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx> = r2;

        return;
    }

    public static java.awt.Cursor getPredefinedCursor(java.lang.String)
    {
        java.util.Map $r1;
        java.awt.Cursor $r3;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.awt.Cursor) $r2;

        return $r3;
    }

    public java.awt.Cursor convertCursor(org.w3c.dom.Element)
    {
        java.awt.Cursor $r3, $r6, $r8, $r9;
        short $s0, $s1, $s3, $s4;
        int $i2, $i5, $i6, $i7;
        java.lang.String $r5, $r7;
        org.apache.batik.bridge.CursorManager r2;
        org.apache.batik.css.engine.value.Value $r1, $r4;
        org.w3c.dom.Element r0;

        r2 := @this: org.apache.batik.bridge.CursorManager;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.batik.bridge.CSSUtilities: org.apache.batik.css.engine.value.Value getComputedStyle(org.w3c.dom.Element,int)>(r0, 10);

        if $r1 == null goto label3;

        $s0 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        if $s0 != 1 goto label1;

        $s4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i5 = (int) $s4;

        if $i5 != 21 goto label1;

        $r7 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        $r8 = virtualinvoke r2.<org.apache.batik.bridge.CursorManager: java.awt.Cursor convertBuiltInCursor(org.w3c.dom.Element,java.lang.String)>(r0, $r7);

        return $r8;

     label1:
        $s1 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        $i6 = (int) $s1;

        if $i6 != 2 goto label3;

        $i2 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: int getLength()>();

        if $i2 != 1 goto label2;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $s3 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i7 = (int) $s3;

        if $i7 != 21 goto label3;

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        $r6 = virtualinvoke r2.<org.apache.batik.bridge.CursorManager: java.awt.Cursor convertBuiltInCursor(org.w3c.dom.Element,java.lang.String)>(r0, $r5);

        return $r6;

     label2:
        if $i2 <= 1 goto label3;

        $r3 = virtualinvoke r2.<org.apache.batik.bridge.CursorManager: java.awt.Cursor convertSVGCursor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value)>(r0, $r1);

        return $r3;

     label3:
        $r9 = virtualinvoke r2.<org.apache.batik.bridge.CursorManager: java.awt.Cursor convertBuiltInCursor(org.w3c.dom.Element,java.lang.String)>(r0, "auto");

        return $r9;
    }

    public java.awt.Cursor convertBuiltInCursor(org.w3c.dom.Element, java.lang.String)
    {
        java.awt.Cursor r11;
        int $i1;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.bridge.CursorManager r10;
        char $c0;
        org.w3c.dom.Element r1;

        r10 := @this: org.apache.batik.bridge.CursorManager;

        r1 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 97 goto label8;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r3 = "http://www.w3.org/2000/svg";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $r5 = "a";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        r11 = <org.apache.batik.bridge.CursorManager: java.awt.Cursor ANCHOR_CURSOR>;

        goto label5;

     label1:
        $r6 = "text";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label2;

        $r7 = "tspan";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 != 0 goto label2;

        $r8 = "tref";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z4 == 0 goto label3;

     label2:
        r11 = <org.apache.batik.bridge.CursorManager: java.awt.Cursor TEXT_CURSOR>;

        goto label5;

     label3:
        $r9 = "image";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z5 == 0 goto label4;

        return null;

     label4:
        r11 = <org.apache.batik.bridge.CursorManager: java.awt.Cursor DEFAULT_CURSOR>;

     label5:
        goto label7;

     label6:
        r11 = <org.apache.batik.bridge.CursorManager: java.awt.Cursor DEFAULT_CURSOR>;

     label7:
        goto label9;

     label8:
        r11 = staticinvoke <org.apache.batik.bridge.CursorManager: java.awt.Cursor getPredefinedCursor(java.lang.String)>(r0);

     label9:
        return r11;
    }

    public java.awt.Cursor convertSVGCursor(org.w3c.dom.Element, org.apache.batik.css.engine.value.Value)
    {
        java.awt.Cursor $r10, $r12;
        short $s1, $s3;
        int $i0, $i2, i4, $i5, $i6, $i7;
        java.lang.String $r2, $r6, $r7, $r8, $r9, $r14, $r15, r17;
        boolean $z0, $z1, $z2;
        org.apache.batik.bridge.CursorManager r3;
        org.apache.batik.bridge.BridgeException $r13;
        org.apache.batik.bridge.BridgeContext $r5;
        org.apache.batik.css.engine.value.Value r0, $r1, $r11;
        org.w3c.dom.Element r4, r16;

        r3 := @this: org.apache.batik.bridge.CursorManager;

        r4 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.apache.batik.css.engine.value.Value;

        $i0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: int getLength()>();

        r16 = null;

        i4 = 0;

        goto label7;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(i4);

        $s1 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i6 = (int) $s1;

        if $i6 != 20 goto label6;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

     label2:
        $r5 = r3.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        r16 = virtualinvoke $r5.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>(r4, $r2);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = "uri.badTarget";

        $r15 = virtualinvoke $r13.<org.apache.batik.bridge.BridgeException: java.lang.String getCode()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label5;

        throw $r13;

     label5:
        if r16 == null goto label6;

        $r6 = interfaceinvoke r16.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r7 = "http://www.w3.org/2000/svg";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

        $r8 = "cursor";

        $r9 = interfaceinvoke r16.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label6;

        $r10 = virtualinvoke r3.<org.apache.batik.bridge.CursorManager: java.awt.Cursor convertSVGCursorElement(org.w3c.dom.Element)>(r16);

        if $r10 == null goto label6;

        return $r10;

     label6:
        i4 = i4 + 1;

     label7:
        $i5 = $i0 - 1;

        if i4 < $i5 goto label1;

        $i2 = $i0 - 1;

        $r11 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>($i2);

        r17 = "auto";

        $s3 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i7 = (int) $s3;

        if $i7 != 21 goto label8;

        r17 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

     label8:
        $r12 = virtualinvoke r3.<org.apache.batik.bridge.CursorManager: java.awt.Cursor convertBuiltInCursor(org.w3c.dom.Element,java.lang.String)>(r4, r17);

        return $r12;

        catch org.apache.batik.bridge.BridgeException from label2 to label3 with label4;
    }

    public java.awt.Cursor convertSVGCursorElement(org.w3c.dom.Element)
    {
        java.awt.Cursor $r11, $r20;
        java.awt.geom.Rectangle2D $r14;
        byte $b5, $b6, $b9, $b12;
        org.apache.batik.bridge.CursorManager r4;
        org.apache.batik.bridge.BridgeException $r29;
        org.apache.batik.bridge.BridgeContext $r5, $r26;
        org.apache.batik.bridge.CursorManager$CursorDescriptor $r32;
        org.apache.batik.util.ParsedURL r27, $r30, $r31;
        java.lang.Object[] $r25;
        java.lang.String $r1, $r2, $r7, $r8, $r19;
        org.apache.batik.parser.UnitProcessor$Context $r6;
        java.awt.geom.Point2D$Float $r33;
        java.awt.Point $r34;
        boolean $z0;
        java.awt.Image r28;
        java.awt.image.RenderedImage $r16;
        org.apache.batik.ext.awt.image.renderable.Filter $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, $f10, $f11, $f12, $f13;
        java.awt.Toolkit $r17;
        java.awt.Rectangle $r15;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        org.apache.batik.bridge.CursorManager$CursorCache $r10, $r21, $r22;
        org.w3c.dom.Element r0;

        r4 := @this: org.apache.batik.bridge.CursorManager;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r29 = new org.apache.batik.bridge.BridgeException;

        $r26 = r4.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = "xlink:href";

        specialinvoke $r29.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r26, r0, "attribute.missing", $r25);

        throw $r29;

     label01:
        $r2 = staticinvoke <org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI(org.w3c.dom.Node)>(r0);

        if $r2 != null goto label02;

        $r30 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r30.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>($r1);

        r27 = $r30;

        goto label03;

     label02:
        $r31 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r31.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String,java.lang.String)>($r2, $r1);

        r27 = $r31;

     label03:
        $r5 = r4.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r6 = staticinvoke <org.apache.batik.bridge.UnitProcessor: org.apache.batik.parser.UnitProcessor$Context createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>($r5, r0);

        $r7 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "x");

        f8 = 0.0F;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 == 0 goto label04;

        f8 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgHorizontalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r7, "x", $r6);

     label04:
        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "y");

        f9 = 0.0F;

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i2 == 0 goto label05;

        f9 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgVerticalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r8, "y", $r6);

     label05:
        $r32 = new org.apache.batik.bridge.CursorManager$CursorDescriptor;

        specialinvoke $r32.<org.apache.batik.bridge.CursorManager$CursorDescriptor: void <init>(org.apache.batik.util.ParsedURL,float,float)>(r27, f8, f9);

        $r10 = r4.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.CursorManager$CursorCache cursorCache>;

        $r11 = virtualinvoke $r10.<org.apache.batik.bridge.CursorManager$CursorCache: java.awt.Cursor getCursor(org.apache.batik.bridge.CursorManager$CursorDescriptor)>($r32);

        if $r11 == null goto label06;

        return $r11;

     label06:
        $r33 = new java.awt.geom.Point2D$Float;

        specialinvoke $r33.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f8, f9);

        $r13 = virtualinvoke r4.<org.apache.batik.bridge.CursorManager: org.apache.batik.ext.awt.image.renderable.Filter cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)>(r0, r27, $r33);

        if $r13 != null goto label07;

        $r22 = r4.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.CursorManager$CursorCache cursorCache>;

        virtualinvoke $r22.<org.apache.batik.bridge.CursorManager$CursorCache: void clearCursor(org.apache.batik.bridge.CursorManager$CursorDescriptor)>($r32);

        return null;

     label07:
        $r14 = interfaceinvoke $r13.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r15 = virtualinvoke $r14.<java.awt.geom.RectangularShape: java.awt.Rectangle getBounds()>();

        $i4 = $r15.<java.awt.Rectangle: int width>;

        $i3 = $r15.<java.awt.Rectangle: int height>;

        $r16 = interfaceinvoke $r13.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createScaledRendering(int,int,java.awt.RenderingHints)>($i4, $i3, null);

        $z0 = $r16 instanceof java.awt.Image;

        if $z0 == 0 goto label08;

        r28 = (java.awt.Image) $r16;

        goto label09;

     label08:
        r28 = virtualinvoke r4.<org.apache.batik.bridge.CursorManager: java.awt.Image renderedImageToImage(java.awt.image.RenderedImage)>($r16);

     label09:
        $f0 = $r33.<java.awt.geom.Point2D$Float: float x>;

        $b5 = $f0 cmpg 0.0F;

        $i19 = (int) $b5;

        if $i19 >= 0 goto label10;

        $f10 = 0.0F;

        goto label11;

     label10:
        $f10 = $r33.<java.awt.geom.Point2D$Float: float x>;

     label11:
        $r33.<java.awt.geom.Point2D$Float: float x> = $f10;

        $f1 = $r33.<java.awt.geom.Point2D$Float: float y>;

        $b6 = $f1 cmpg 0.0F;

        $i20 = (int) $b6;

        if $i20 >= 0 goto label12;

        $f11 = 0.0F;

        goto label13;

     label12:
        $f11 = $r33.<java.awt.geom.Point2D$Float: float y>;

     label13:
        $r33.<java.awt.geom.Point2D$Float: float y> = $f11;

        $f3 = $r33.<java.awt.geom.Point2D$Float: float x>;

        $i7 = $r15.<java.awt.Rectangle: int width>;

        $i8 = $i7 - 1;

        $f2 = (float) $i8;

        $b9 = $f3 cmpl $f2;

        $i21 = (int) $b9;

        if $i21 <= 0 goto label14;

        $i17 = $r15.<java.awt.Rectangle: int width>;

        $i18 = $i17 - 1;

        $f12 = (float) $i18;

        goto label15;

     label14:
        $f12 = $r33.<java.awt.geom.Point2D$Float: float x>;

     label15:
        $r33.<java.awt.geom.Point2D$Float: float x> = $f12;

        $f5 = $r33.<java.awt.geom.Point2D$Float: float y>;

        $i10 = $r15.<java.awt.Rectangle: int height>;

        $i11 = $i10 - 1;

        $f4 = (float) $i11;

        $b12 = $f5 cmpl $f4;

        $i22 = (int) $b12;

        if $i22 <= 0 goto label16;

        $i15 = $r15.<java.awt.Rectangle: int height>;

        $i16 = $i15 - 1;

        $f13 = (float) $i16;

        goto label17;

     label16:
        $f13 = $r33.<java.awt.geom.Point2D$Float: float y>;

     label17:
        $r33.<java.awt.geom.Point2D$Float: float y> = $f13;

        $r17 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r34 = new java.awt.Point;

        $f6 = $r33.<java.awt.geom.Point2D$Float: float x>;

        $i13 = staticinvoke <java.lang.Math: int round(float)>($f6);

        $f7 = $r33.<java.awt.geom.Point2D$Float: float y>;

        $i14 = staticinvoke <java.lang.Math: int round(float)>($f7);

        specialinvoke $r34.<java.awt.Point: void <init>(int,int)>($i13, $i14);

        $r19 = virtualinvoke r27.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        $r20 = virtualinvoke $r17.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>(r28, $r34, $r19);

        $r21 = r4.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.CursorManager$CursorCache cursorCache>;

        virtualinvoke $r21.<org.apache.batik.bridge.CursorManager$CursorCache: void putCursor(org.apache.batik.bridge.CursorManager$CursorDescriptor,java.awt.Cursor)>($r32, $r20);

        return $r20;
    }

    protected org.apache.batik.ext.awt.image.renderable.Filter cursorHrefToFilter(org.w3c.dom.Element, org.apache.batik.util.ParsedURL, java.awt.geom.Point2D)
    {
        java.awt.geom.Rectangle2D $r37;
        org.w3c.dom.Document $r6;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r49, $r55, $r58;
        org.w3c.dom.svg.SVGSVGElement $r15;
        org.apache.batik.bridge.CursorManager r2;
        org.apache.batik.gvt.GraphicsNode $r19;
        org.apache.batik.bridge.BridgeException $r48, $r54, $r56;
        org.apache.batik.bridge.BridgeContext $r3, $r8, $r13, $r14, $r16, $r18, $r20, $r26, $r47;
        java.awt.geom.AffineTransform $r27, $r30, r52, $r57;
        org.apache.batik.ext.awt.image.spi.ImageTagRegistry $r35;
        java.lang.Exception $r43;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r60;
        org.apache.batik.util.ParsedURL r0;
        java.lang.Object[] $r12, $r46;
        org.w3c.dom.svg.SVGDocument r7, r51;
        float[] $r42;
        org.apache.batik.ext.awt.image.PadMode $r34;
        short $s0;
        java.lang.String $r1, $r22, $r23;
        org.apache.batik.bridge.URIResolver $r9;
        org.apache.batik.parser.UnitProcessor$Context $r21;
        org.apache.batik.bridge.DocumentLoader $r4;
        java.awt.geom.Point2D r31;
        java.lang.SecurityException $r44;
        boolean $z0;
        org.apache.batik.bridge.GVTBuilder $r17;
        org.apache.batik.ext.awt.image.renderable.Filter $r28, $r36;
        java.awt.Dimension $r25, $r40, r50;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7;
        java.awt.Toolkit $r24, $r39;
        java.awt.Rectangle $r38, $r59;
        org.w3c.dom.Node $r10;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        org.w3c.dom.Element r5;

        r2 := @this: org.apache.batik.bridge.CursorManager;

        r5 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.apache.batik.util.ParsedURL;

        r31 := @parameter2: java.awt.geom.Point2D;

        r49 = null;

        $r1 = virtualinvoke r0.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        r50 = null;

        $r3 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r4 = virtualinvoke $r3.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.DocumentLoader getDocumentLoader()>();

        $r6 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r7 = (org.w3c.dom.svg.SVGDocument) $r6;

        $r8 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r9 = virtualinvoke $r8.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.URIResolver createURIResolver(org.w3c.dom.svg.SVGDocument,org.apache.batik.bridge.DocumentLoader)>(r7, $r4);

     label01:
        $r10 = virtualinvoke $r9.<org.apache.batik.bridge.URIResolver: org.w3c.dom.Node getNode(java.lang.String,org.w3c.dom.Element)>($r1, r5);

        $s0 = interfaceinvoke $r10.<org.w3c.dom.Node: short getNodeType()>();

        $i21 = (int) $s0;

        if $i21 != 9 goto label02;

        r51 = (org.w3c.dom.svg.SVGDocument) $r10;

        $r14 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        virtualinvoke $r14.<org.apache.batik.bridge.BridgeContext: void initializeDocument(org.w3c.dom.Document)>(r51);

        $r15 = interfaceinvoke r51.<org.w3c.dom.svg.SVGDocument: org.w3c.dom.svg.SVGSVGElement getRootElement()>();

        goto label03;

     label02:
        $r54 = new org.apache.batik.bridge.BridgeException;

        $r13 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r1;

        specialinvoke $r54.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r13, r5, "uri.image.invalid", $r12);

        throw $r54;

     label03:
        $r16 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r17 = virtualinvoke $r16.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        $r18 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r19 = virtualinvoke $r17.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>($r18, $r15);

        f6 = 32.0F;

        f7 = 32.0F;

        $r20 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r21 = staticinvoke <org.apache.batik.bridge.UnitProcessor: org.apache.batik.parser.UnitProcessor$Context createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>($r20, $r15);

        $r22 = interfaceinvoke $r15.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("width");

        $i1 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i1 == 0 goto label04;

        f6 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgHorizontalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r22, "width", $r21);

     label04:
        $r23 = interfaceinvoke $r15.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("height");

        $i2 = virtualinvoke $r23.<java.lang.String: int length()>();

        if $i2 == 0 goto label05;

        f7 = staticinvoke <org.apache.batik.bridge.UnitProcessor: float svgVerticalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)>($r23, "height", $r21);

     label05:
        $r24 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $i3 = staticinvoke <java.lang.Math: int round(float)>(f6);

        $i4 = staticinvoke <java.lang.Math: int round(float)>(f7);

        $r25 = virtualinvoke $r24.<java.awt.Toolkit: java.awt.Dimension getBestCursorSize(int,int)>($i3, $i4);

        r50 = $r25;

        $i5 = $r25.<java.awt.Dimension: int width>;

        $f1 = (float) $i5;

        $i6 = $r25.<java.awt.Dimension: int height>;

        $f0 = (float) $i6;

        $r26 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r27 = staticinvoke <org.apache.batik.bridge.ViewBox: java.awt.geom.AffineTransform getPreserveAspectRatioTransform(org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)>($r15, $f1, $f0, $r26);

        $r28 = interfaceinvoke $r19.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getGraphicsNodeRable(boolean)>(1);

        $r55 = new org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        specialinvoke $r55.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)>($r28, $r27);

        r49 = $r55;

     label06:
        goto label10;

     label07:
        $r48 := @caughtexception;

        throw $r48;

     label08:
        $r44 := @caughtexception;

        $r56 = new org.apache.batik.bridge.BridgeException;

        $r47 = r2.<org.apache.batik.bridge.CursorManager: org.apache.batik.bridge.BridgeContext ctx>;

        $r46 = newarray (java.lang.Object)[1];

        $r46[0] = $r1;

        specialinvoke $r56.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>($r47, r5, $r44, "uri.unsecure", $r46);

        throw $r56;

     label09:
        $r43 := @caughtexception;

     label10:
        if r49 != null goto label16;

        $r35 = staticinvoke <org.apache.batik.ext.awt.image.spi.ImageTagRegistry: org.apache.batik.ext.awt.image.spi.ImageTagRegistry getRegistry()>();

        $r36 = virtualinvoke $r35.<org.apache.batik.ext.awt.image.spi.ImageTagRegistry: org.apache.batik.ext.awt.image.renderable.Filter readURL(org.apache.batik.util.ParsedURL)>(r0);

        if $r36 != null goto label11;

        return null;

     label11:
        $z0 = staticinvoke <org.apache.batik.ext.awt.image.spi.BrokenLinkProvider: boolean hasBrokenLinkProperty(org.apache.batik.ext.awt.image.renderable.Filter)>($r36);

        if $z0 == 0 goto label12;

        return null;

     label12:
        $r37 = interfaceinvoke $r36.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r38 = virtualinvoke $r37.<java.awt.geom.RectangularShape: java.awt.Rectangle getBounds()>();

        $r39 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $i10 = $r38.<java.awt.Rectangle: int width>;

        $i9 = $r38.<java.awt.Rectangle: int height>;

        $r40 = virtualinvoke $r39.<java.awt.Toolkit: java.awt.Dimension getBestCursorSize(int,int)>($i10, $i9);

        r50 = $r40;

        if $r38 == null goto label15;

        $i11 = $r38.<java.awt.Rectangle: int width>;

        if $i11 <= 0 goto label15;

        $i12 = $r38.<java.awt.Rectangle: int height>;

        if $i12 <= 0 goto label15;

        $r57 = new java.awt.geom.AffineTransform;

        specialinvoke $r57.<java.awt.geom.AffineTransform: void <init>()>();

        r52 = $r57;

        $i14 = $r38.<java.awt.Rectangle: int width>;

        $i13 = $r40.<java.awt.Dimension: int width>;

        if $i14 > $i13 goto label13;

        $i20 = $r38.<java.awt.Rectangle: int height>;

        $i19 = $r40.<java.awt.Dimension: int height>;

        if $i20 <= $i19 goto label14;

     label13:
        $r42 = newarray (float)[4];

        $r42[0] = 0.0F;

        $r42[1] = 0.0F;

        $i15 = $r38.<java.awt.Rectangle: int width>;

        $f2 = (float) $i15;

        $r42[2] = $f2;

        $i16 = $r38.<java.awt.Rectangle: int height>;

        $f3 = (float) $i16;

        $r42[3] = $f3;

        $i17 = $r40.<java.awt.Dimension: int width>;

        $f5 = (float) $i17;

        $i18 = $r40.<java.awt.Dimension: int height>;

        $f4 = (float) $i18;

        r52 = staticinvoke <org.apache.batik.bridge.ViewBox: java.awt.geom.AffineTransform getPreserveAspectRatioTransform(float[],short,boolean,float,float)>($r42, 2, 1, $f5, $f4);

     label14:
        $r58 = new org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        specialinvoke $r58.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)>($r36, r52);

        r49 = $r58;

        goto label16;

     label15:
        return null;

     label16:
        $r30 = virtualinvoke r49.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform getAffine()>();

        virtualinvoke $r30.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r31, r31);

        $r59 = new java.awt.Rectangle;

        $i8 = r50.<java.awt.Dimension: int width>;

        $i7 = r50.<java.awt.Dimension: int height>;

        specialinvoke $r59.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i8, $i7);

        $r60 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r34 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r60.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>(r49, $r59, $r34);

        return $r60;

        catch org.apache.batik.bridge.BridgeException from label01 to label06 with label07;
        catch java.lang.SecurityException from label01 to label06 with label08;
        catch java.lang.Exception from label01 to label06 with label09;
    }

    protected java.awt.Image renderedImageToImage(java.awt.image.RenderedImage)
    {
        java.awt.image.BufferedImage $r5;
        org.apache.batik.bridge.CursorManager r6;
        java.awt.image.RenderedImage r0;
        java.awt.Point $r3;
        java.awt.image.SampleModel $r1;
        java.awt.image.ColorModel $r2;
        int $i0, $i1;
        java.awt.image.WritableRaster $r4;
        boolean $z0;

        r6 := @this: org.apache.batik.bridge.CursorManager;

        r0 := @parameter0: java.awt.image.RenderedImage;

        $i0 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getMinX()>();

        $i1 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getMinY()>();

        $r1 = interfaceinvoke r0.<java.awt.image.RenderedImage: java.awt.image.SampleModel getSampleModel()>();

        $r2 = interfaceinvoke r0.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r3 = new java.awt.Point;

        specialinvoke $r3.<java.awt.Point: void <init>(int,int)>($i0, $i1);

        $r4 = staticinvoke <java.awt.image.Raster: java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel,java.awt.Point)>($r1, $r3);

        interfaceinvoke r0.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>($r4);

        $r5 = new java.awt.image.BufferedImage;

        $z0 = virtualinvoke $r2.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        specialinvoke $r5.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r2, $r4, $z0, null);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.net.URL $r31, $r36;
        java.awt.Cursor $r0, $r1, $r2, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, r41, r46;
        java.awt.Point $r33, $r38;
        java.util.Map $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r34, $r43;
        boolean $z0;
        java.awt.Image $r32, $r37;
        java.lang.Exception $r39, $r40;
        java.awt.Toolkit $r3;
        java.util.Hashtable $r4;
        java.lang.Class $r35, $r42, $r44, $r45;

        <org.apache.batik.bridge.CursorManager: int DEFAULT_PREFERRED_HEIGHT> = 32;

        <org.apache.batik.bridge.CursorManager: int DEFAULT_PREFERRED_WIDTH> = 32;

        $r0 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(0);

        <org.apache.batik.bridge.CursorManager: java.awt.Cursor DEFAULT_CURSOR> = $r0;

        $r1 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(12);

        <org.apache.batik.bridge.CursorManager: java.awt.Cursor ANCHOR_CURSOR> = $r1;

        $r2 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(2);

        <org.apache.batik.bridge.CursorManager: java.awt.Cursor TEXT_CURSOR> = $r2;

        $r3 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap> = $r4;

        $r5 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r6 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("crosshair", $r6);

        $r7 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r8 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("default", $r8);

        $r9 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r10 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(12);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pointer", $r10);

        $r11 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r12 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(11);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("e-resize", $r12);

        $r13 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r14 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(7);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ne-resize", $r14);

        $r15 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r16 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(6);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nw-resize", $r16);

        $r17 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r18 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(8);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("n-resize", $r18);

        $r19 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r20 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(5);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("se-resize", $r20);

        $r21 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r22 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(4);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sw-resize", $r22);

        $r23 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r24 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(9);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("s-resize", $r24);

        $r25 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r26 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(10);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("w-resize", $r26);

        $r27 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r28 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(2);

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text", $r28);

        $r29 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        $r30 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(3);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("wait", $r30);

        r41 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(13);

        $z0 = <org.apache.batik.util.Platform: boolean isOSX>;

        if $z0 == 0 goto label06;

     label01:
        $r35 = <org.apache.batik.bridge.CursorManager: java.lang.Class class$org$apache$batik$bridge$CursorManager>;

        if $r35 != null goto label02;

        $r42 = staticinvoke <org.apache.batik.bridge.CursorManager: java.lang.Class class$(java.lang.String)>("org.apache.batik.bridge.CursorManager");

        <org.apache.batik.bridge.CursorManager: java.lang.Class class$org$apache$batik$bridge$CursorManager> = $r42;

        goto label03;

     label02:
        $r42 = <org.apache.batik.bridge.CursorManager: java.lang.Class class$org$apache$batik$bridge$CursorManager>;

     label03:
        $r36 = virtualinvoke $r42.<java.lang.Class: java.net.URL getResource(java.lang.String)>("resources/move.gif");

        $r37 = virtualinvoke $r3.<java.awt.Toolkit: java.awt.Image createImage(java.net.URL)>($r36);

        $r38 = new java.awt.Point;

        specialinvoke $r38.<java.awt.Point: void <init>(int,int)>(11, 11);

        r41 = virtualinvoke $r3.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r37, $r38, "move");

     label04:
        goto label06;

     label05:
        $r40 := @caughtexception;

     label06:
        $r43 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("move", r41);

     label07:
        $r44 = <org.apache.batik.bridge.CursorManager: java.lang.Class class$org$apache$batik$bridge$CursorManager>;

        if $r44 != null goto label08;

        $r45 = staticinvoke <org.apache.batik.bridge.CursorManager: java.lang.Class class$(java.lang.String)>("org.apache.batik.bridge.CursorManager");

        <org.apache.batik.bridge.CursorManager: java.lang.Class class$org$apache$batik$bridge$CursorManager> = $r45;

        goto label09;

     label08:
        $r45 = <org.apache.batik.bridge.CursorManager: java.lang.Class class$org$apache$batik$bridge$CursorManager>;

     label09:
        $r31 = virtualinvoke $r45.<java.lang.Class: java.net.URL getResource(java.lang.String)>("resources/help.gif");

        $r32 = virtualinvoke $r3.<java.awt.Toolkit: java.awt.Image createImage(java.net.URL)>($r31);

        $r33 = new java.awt.Point;

        specialinvoke $r33.<java.awt.Point: void <init>(int,int)>(1, 3);

        r46 = virtualinvoke $r3.<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>($r32, $r33, "help");

     label10:
        goto label12;

     label11:
        $r39 := @caughtexception;

        r46 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(12);

     label12:
        $r34 = <org.apache.batik.bridge.CursorManager: java.util.Map cursorMap>;

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("help", r46);

        return;

        catch java.lang.Exception from label01 to label04 with label05;
        catch java.lang.Exception from label07 to label10 with label11;
    }
}
