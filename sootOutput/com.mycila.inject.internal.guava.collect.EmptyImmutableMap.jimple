final class com.mycila.inject.internal.guava.collect.EmptyImmutableMap extends com.mycila.inject.internal.guava.collect.ImmutableMap
{
    static final com.mycila.inject.internal.guava.collect.EmptyImmutableMap INSTANCE;
    private static final long serialVersionUID;

    private void <init>()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableMap: void <init>()>();

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public int size()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        return 0;
    }

    public boolean isEmpty()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        return 1;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public boolean containsValue(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableSet entrySet()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r1;
        com.mycila.inject.internal.guava.collect.ImmutableSet $r0;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableSet: com.mycila.inject.internal.guava.collect.ImmutableSet of()>();

        return $r0;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableSet keySet()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r1;
        com.mycila.inject.internal.guava.collect.ImmutableSet $r0;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableSet: com.mycila.inject.internal.guava.collect.ImmutableSet of()>();

        return $r0;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableCollection values()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r1;
        com.mycila.inject.internal.guava.collect.ImmutableCollection $r0;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        $r0 = <com.mycila.inject.internal.guava.collect.ImmutableCollection: com.mycila.inject.internal.guava.collect.ImmutableCollection EMPTY_IMMUTABLE_COLLECTION>;

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map r1;
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map;

        if $z0 == 0 goto label1;

        r1 = (java.util.Map) r0;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        return $z1;

     label1:
        return 0;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        return 0;
    }

    public int hashCode()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        return 0;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        return "{}";
    }

    java.lang.Object readResolve()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap $r0, r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        $r0 = <com.mycila.inject.internal.guava.collect.EmptyImmutableMap: com.mycila.inject.internal.guava.collect.EmptyImmutableMap INSTANCE>;

        return $r0;
    }

    public volatile java.util.Set entrySet()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;
        com.mycila.inject.internal.guava.collect.ImmutableSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableMap: com.mycila.inject.internal.guava.collect.ImmutableSet entrySet()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;
        com.mycila.inject.internal.guava.collect.ImmutableCollection $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableMap: com.mycila.inject.internal.guava.collect.ImmutableCollection values()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap r0;
        com.mycila.inject.internal.guava.collect.ImmutableSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableMap: com.mycila.inject.internal.guava.collect.ImmutableSet keySet()>();

        return $r1;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMap $r0;

        <com.mycila.inject.internal.guava.collect.EmptyImmutableMap: long serialVersionUID> = 0L;

        $r0 = new com.mycila.inject.internal.guava.collect.EmptyImmutableMap;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableMap: void <init>()>();

        <com.mycila.inject.internal.guava.collect.EmptyImmutableMap: com.mycila.inject.internal.guava.collect.EmptyImmutableMap INSTANCE> = $r0;

        return;
    }
}
