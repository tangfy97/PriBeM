public class org.apache.log4j.net.TelnetAppender extends org.apache.log4j.AppenderSkeleton
{
    private org.apache.log4j.net.TelnetAppender$SocketHandler sh;
    private int port;

    public void <init>()
    {
        org.apache.log4j.net.TelnetAppender r0;

        r0 := @this: org.apache.log4j.net.TelnetAppender;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        r0.<org.apache.log4j.net.TelnetAppender: int port> = 23;

        return;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.net.TelnetAppender r0;

        r0 := @this: org.apache.log4j.net.TelnetAppender;

        return 1;
    }

    public void activateOptions()
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler $r1, $r2;
        org.apache.log4j.net.TelnetAppender r0;
        java.io.IOException $r4;
        java.lang.RuntimeException $r3;
        java.io.InterruptedIOException $r5;
        java.lang.Thread $r6;
        int $i0;

        r0 := @this: org.apache.log4j.net.TelnetAppender;

     label1:
        $r1 = new org.apache.log4j.net.TelnetAppender$SocketHandler;

        $i0 = r0.<org.apache.log4j.net.TelnetAppender: int port>;

        specialinvoke $r1.<org.apache.log4j.net.TelnetAppender$SocketHandler: void <init>(org.apache.log4j.net.TelnetAppender,int)>(r0, $i0);

        r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh> = $r1;

        $r2 = r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh>;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

     label2:
        goto label6;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void interrupt()>();

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        goto label6;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>();

        goto label6;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

     label6:
        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void activateOptions()>();

        return;

        catch java.io.InterruptedIOException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public int getPort()
    {
        int $i0;
        org.apache.log4j.net.TelnetAppender r0;

        r0 := @this: org.apache.log4j.net.TelnetAppender;

        $i0 = r0.<org.apache.log4j.net.TelnetAppender: int port>;

        return $i0;
    }

    public void setPort(int)
    {
        int i0;
        org.apache.log4j.net.TelnetAppender r0;

        r0 := @this: org.apache.log4j.net.TelnetAppender;

        i0 := @parameter0: int;

        r0.<org.apache.log4j.net.TelnetAppender: int port> = i0;

        return;
    }

    public void close()
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler $r1, $r2, $r3;
        java.lang.InterruptedException $r4;
        org.apache.log4j.net.TelnetAppender r0;
        java.lang.Thread $r5;

        r0 := @this: org.apache.log4j.net.TelnetAppender;

        $r1 = r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh>;

        if $r1 == null goto label4;

        $r2 = r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh>;

        virtualinvoke $r2.<org.apache.log4j.net.TelnetAppender$SocketHandler: void close()>();

     label1:
        $r3 = r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh>;

        virtualinvoke $r3.<java.lang.Thread: void join()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r5.<java.lang.Thread: void interrupt()>();

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    protected void append(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler $r1, $r4, $r9;
        org.apache.log4j.net.TelnetAppender r0;
        org.apache.log4j.spi.LoggingEvent r2;
        java.lang.String[] $r7;
        java.lang.StringBuffer $r8;
        int $i0, i1;
        org.apache.log4j.Layout $r3, $r6;
        java.lang.String $r5, $r10, $r11;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.TelnetAppender;

        r2 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r1 = r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh>;

        if $r1 == null goto label3;

        $r4 = r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh>;

        $r3 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r5 = virtualinvoke $r3.<org.apache.log4j.Layout: java.lang.String format(org.apache.log4j.spi.LoggingEvent)>(r2);

        virtualinvoke $r4.<org.apache.log4j.net.TelnetAppender$SocketHandler: void send(java.lang.String)>($r5);

        $r6 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $z0 = virtualinvoke $r6.<org.apache.log4j.Layout: boolean ignoresThrowable()>();

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r2.<org.apache.log4j.spi.LoggingEvent: java.lang.String[] getThrowableStrRep()>();

        if $r7 == null goto label3;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r7;

        if i1 >= $i0 goto label2;

        $r11 = $r7[i1];

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = r0.<org.apache.log4j.net.TelnetAppender: org.apache.log4j.net.TelnetAppender$SocketHandler sh>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.log4j.net.TelnetAppender$SocketHandler: void send(java.lang.String)>($r10);

     label3:
        return;
    }
}
