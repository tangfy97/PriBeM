final class org.apache.lucene.index.TermVectorsTermsWriterPerField extends org.apache.lucene.index.TermsHashConsumerPerField
{
    final org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread;
    final org.apache.lucene.index.TermsHashPerField termsHashPerField;
    final org.apache.lucene.index.TermVectorsTermsWriter termsWriter;
    final org.apache.lucene.index.FieldInfo fieldInfo;
    final org.apache.lucene.index.DocumentsWriter$DocState docState;
    final org.apache.lucene.index.FieldInvertState fieldState;
    boolean doVectors;
    boolean doVectorPositions;
    boolean doVectorOffsets;
    int maxNumPostings;
    org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.TermVectorsTermsWriterPerThread, org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.FieldInvertState $r6;
        org.apache.lucene.index.DocumentsWriter$DocState $r5;
        org.apache.lucene.index.TermsHashPerField r1;
        org.apache.lucene.index.FieldInfo r4;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r2;
        org.apache.lucene.index.TermVectorsTermsWriter $r3;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        r1 := @parameter0: org.apache.lucene.index.TermsHashPerField;

        r2 := @parameter1: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        r4 := @parameter2: org.apache.lucene.index.FieldInfo;

        specialinvoke r0.<org.apache.lucene.index.TermsHashConsumerPerField: void <init>()>();

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute> = null;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField> = r1;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread> = r2;

        $r3 = r2.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter termsWriter>;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriter termsWriter> = $r3;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo> = r4;

        $r5 = r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState> = $r5;

        $r6 = r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState> = $r6;

        return;
    }

    int getStreamCount()
    {
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        return 2;
    }

    boolean start(org.apache.lucene.document.Fieldable[], int)
    {
        org.apache.lucene.index.TermsHashPerThread $r6;
        org.apache.lucene.document.Fieldable r29;
        org.apache.lucene.index.TermVectorsTermsWriter $r11;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;
        byte $b6, $b8;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread $r1, $r5, $r7, $r12, $r14, $r17, $r21, $r25;
        org.apache.lucene.document.Fieldable[] r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.lucene.index.DocumentsWriter$DocState $r9, $r15;
        org.apache.lucene.index.TermsHashPerField $r3, $r4;
        long $l5, $l7;
        java.lang.AssertionError $r10, $r20, $r24, $r27;
        int i0, $i1, $i2, $i3, $i4, $i9, i10;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc $r2, $r8, $r13, $r16, $r18, $r22, $r26;
        org.apache.lucene.store.RAMOutputStream $r19, $r23;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        r28 := @parameter0: org.apache.lucene.document.Fieldable[];

        i0 := @parameter1: int;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectors> = 0;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorPositions> = 0;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets> = 0;

        i10 = 0;

     label1:
        if i10 >= i0 goto label3;

        r29 = r28[i10];

        $z4 = interfaceinvoke r29.<org.apache.lucene.document.Fieldable: boolean isIndexed()>();

        if $z4 == 0 goto label2;

        $z5 = interfaceinvoke r29.<org.apache.lucene.document.Fieldable: boolean isTermVectorStored()>();

        if $z5 == 0 goto label2;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectors> = 1;

        $z6 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorPositions>;

        $z7 = interfaceinvoke r29.<org.apache.lucene.document.Fieldable: boolean isStorePositionWithTermVector()>();

        $z8 = $z6 | $z7;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorPositions> = $z8;

        $z9 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets>;

        $z10 = interfaceinvoke r29.<org.apache.lucene.document.Fieldable: boolean isStoreOffsetWithTermVector()>();

        $z11 = $z9 | $z10;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets> = $z11;

     label2:
        i10 = i10 + 1;

        goto label1;

     label3:
        $z0 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectors>;

        if $z0 == 0 goto label8;

        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r2 = $r1.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        if $r2 != null goto label6;

        $r12 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r11 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriter termsWriter>;

        $r13 = virtualinvoke $r11.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc getPerDoc()>();

        $r12.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc> = $r13;

        $r14 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r16 = $r14.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $r15 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $i4 = $r15.<org.apache.lucene.index.DocumentsWriter$DocState: int docID>;

        $r16.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int docID> = $i4;

        $z1 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r25 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r26 = $r25.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $i9 = $r26.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int numVectorFields>;

        if $i9 == 0 goto label4;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label4:
        $z2 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z2 != 0 goto label5;

        $r21 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r22 = $r21.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $r23 = $r22.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: org.apache.lucene.store.RAMOutputStream perDocTvf>;

        $l7 = virtualinvoke $r23.<org.apache.lucene.store.RAMOutputStream: long length()>();

        $b8 = 0L cmp $l7;

        if $b8 == 0 goto label5;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label5:
        $z3 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z3 != 0 goto label6;

        $r17 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r18 = $r17.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $r19 = $r18.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: org.apache.lucene.store.RAMOutputStream perDocTvf>;

        $l5 = virtualinvoke $r19.<org.apache.lucene.store.RAMOutputStream: long getFilePointer()>();

        $b6 = 0L cmp $l5;

        if $b6 == 0 goto label6;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label6:
        $z12 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z12 != 0 goto label7;

        $r7 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r8 = $r7.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $i3 = $r8.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int docID>;

        $r9 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $i2 = $r9.<org.apache.lucene.index.DocumentsWriter$DocState: int docID>;

        if $i3 == $i2 goto label7;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label7:
        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i1 = $r3.<org.apache.lucene.index.TermsHashPerField: int numPostings>;

        if $i1 == 0 goto label8;

        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r4.<org.apache.lucene.index.TermsHashPerField: void reset()>();

        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r6 = $r5.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermsHashPerThread termsHashPerThread>;

        virtualinvoke $r6.<org.apache.lucene.index.TermsHashPerThread: void reset(boolean)>(0);

     label8:
        $z13 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectors>;

        return $z13;
    }

    public void abort()
    {
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        return;
    }

    void finish() throws java.io.IOException
    {
        org.apache.lucene.index.TermsHashPerThread $r14, $r18;
        byte[] r34, r47, $r48;
        char[][] $r36;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;
        byte $b10, $b11, $b12, b14;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread $r2, $r4, $r12, $r13, $r17, $r23, $r28, $r31, $r38;
        org.apache.lucene.index.DocumentsWriter$DocState $r45;
        org.apache.lucene.util.UnicodeUtil$UTF8Result r25, $r30, $r33;
        org.apache.lucene.index.CharBlockPool $r15;
        java.lang.AssertionError $r49, $r50, $r51, $r52;
        org.apache.lucene.util.UnicodeUtil$UTF8Result[] $r24, $r29, $r32;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc $r3, $r7;
        org.apache.lucene.store.RAMOutputStream $r43;
        org.apache.lucene.index.FieldInfo $r6, $r37, $r41;
        char[] r21;
        org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray $r39;
        int[] $r11, $r19, $r20, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.lucene.index.TermsHashPerField $r1, $r5, $r8, $r10, $r16, $r26, $r27;
        org.apache.lucene.index.ParallelPostingsArray $r9;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, i7, i8, $i9, $i13, i15, i16, i17, i18, $i19, $i20, $i21;
        org.apache.lucene.index.ByteSliceReader $r35;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        $z0 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r45 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $z10 = virtualinvoke $r45.<org.apache.lucene.index.DocumentsWriter$DocState: boolean testPoint(java.lang.String)>("TermVectorsTermsWriterPerField.finish start");

        if $z10 != 0 goto label01;

        $r49 = new java.lang.AssertionError;

        specialinvoke $r49.<java.lang.AssertionError: void <init>()>();

        throw $r49;

     label01:
        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i13 = $r1.<org.apache.lucene.index.TermsHashPerField: int numPostings>;

        $z1 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if $i13 >= 0 goto label02;

        $r50 = new java.lang.AssertionError;

        specialinvoke $r50.<java.lang.AssertionError: void <init>()>();

        throw $r50;

     label02:
        $z2 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectors>;

        if $z2 == 0 goto label03;

        if $i13 != 0 goto label04;

     label03:
        return;

     label04:
        $i0 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: int maxNumPostings>;

        if $i13 <= $i0 goto label05;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: int maxNumPostings> = $i13;

     label05:
        $r2 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r3 = $r2.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $r43 = $r3.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: org.apache.lucene.store.RAMOutputStream perDocTvf>;

        $z3 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z3 != 0 goto label06;

        $r41 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z9 = $r41.<org.apache.lucene.index.FieldInfo: boolean storeTermVector>;

        if $z9 != 0 goto label06;

        $r51 = new java.lang.AssertionError;

        specialinvoke $r51.<java.lang.AssertionError: void <init>()>();

        throw $r51;

     label06:
        $z4 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z4 != 0 goto label07;

        $r38 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r37 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z8 = virtualinvoke $r38.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: boolean vectorFieldsInOrder(org.apache.lucene.index.FieldInfo)>($r37);

        if $z8 != 0 goto label07;

        $r52 = new java.lang.AssertionError;

        specialinvoke $r52.<java.lang.AssertionError: void <init>()>();

        throw $r52;

     label07:
        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r7 = $r4.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r6 = $r5.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $i1 = $r6.<org.apache.lucene.index.FieldInfo: int number>;

        virtualinvoke $r7.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: void addField(int)>($i1);

        $r8 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r9 = $r8.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r39 = (org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray) $r9;

        $r10 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.index.TermsHashPerField: int[] sortPostings()>();

        virtualinvoke $r43.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i13);

        b14 = 0;

        $z5 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorPositions>;

        if $z5 == 0 goto label08;

        b14 = (byte) 1;

     label08:
        $z6 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets>;

        if $z6 == 0 goto label09;

        $b12 = b14 | 2;

        b14 = (byte) $b12;

     label09:
        virtualinvoke $r43.<org.apache.lucene.store.IndexOutput: void writeByte(byte)>(b14);

        i15 = 0;

        i16 = 0;

        $r12 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r35 = $r12.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.ByteSliceReader vectorSliceReader>;

        $r13 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r14 = $r13.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermsHashPerThread termsHashPerThread>;

        $r15 = $r14.<org.apache.lucene.index.TermsHashPerThread: org.apache.lucene.index.CharBlockPool charPool>;

        $r36 = $r15.<org.apache.lucene.index.CharBlockPool: char[][] buffers>;

        i17 = 0;

     label10:
        if i17 >= $i13 goto label16;

        i2 = $r11[i17];

        $r19 = $r39.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] freqs>;

        i3 = $r19[i2];

        $r20 = $r39.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] textStarts>;

        $i4 = $r20[i2];

        $i5 = $i4 >> 14;

        r21 = $r36[$i5];

        $r22 = $r39.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] textStarts>;

        $i6 = $r22[i2];

        i7 = $i6 & 16383;

        $r23 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r24 = $r23.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        r25 = $r24[i15];

        staticinvoke <org.apache.lucene.util.UnicodeUtil: void UTF16toUTF8(char[],int,org.apache.lucene.util.UnicodeUtil$UTF8Result)>(r21, i7, r25);

        i8 = r25.<org.apache.lucene.util.UnicodeUtil$UTF8Result: int length>;

        i18 = 0;

        if i17 <= 0 goto label13;

        $r28 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r29 = $r28.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $i9 = 1 - i15;

        $r30 = $r29[$i9];

        r47 = $r30.<org.apache.lucene.util.UnicodeUtil$UTF8Result: byte[] result>;

        $r31 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r32 = $r31.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $r33 = $r32[i15];

        r34 = $r33.<org.apache.lucene.util.UnicodeUtil$UTF8Result: byte[] result>;

     label11:
        if i18 >= i16 goto label13;

        if i18 >= i8 goto label13;

        $b11 = r47[i18];

        $b10 = r34[i18];

        $i20 = (int) $b11;

        $i21 = (int) $b10;

        if $i20 == $i21 goto label12;

        goto label13;

     label12:
        i18 = i18 + 1;

        goto label11;

     label13:
        i15 = 1 - i15;

        i16 = i8;

        $i19 = i8 - i18;

        virtualinvoke $r43.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i18);

        virtualinvoke $r43.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i19);

        $r48 = r25.<org.apache.lucene.util.UnicodeUtil$UTF8Result: byte[] result>;

        virtualinvoke $r43.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r48, i18, $i19);

        virtualinvoke $r43.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i3);

        $z11 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorPositions>;

        if $z11 == 0 goto label14;

        $r27 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r27.<org.apache.lucene.index.TermsHashPerField: void initReader(org.apache.lucene.index.ByteSliceReader,int,int)>($r35, i2, 0);

        virtualinvoke $r35.<org.apache.lucene.index.ByteSliceReader: long writeTo(org.apache.lucene.store.IndexOutput)>($r43);

     label14:
        $z7 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets>;

        if $z7 == 0 goto label15;

        $r26 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r26.<org.apache.lucene.index.TermsHashPerField: void initReader(org.apache.lucene.index.ByteSliceReader,int,int)>($r35, i2, 1);

        virtualinvoke $r35.<org.apache.lucene.index.ByteSliceReader: long writeTo(org.apache.lucene.store.IndexOutput)>($r43);

     label15:
        i17 = i17 + 1;

        goto label10;

     label16:
        $r16 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r16.<org.apache.lucene.index.TermsHashPerField: void reset()>();

        $r17 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermVectorsTermsWriterPerThread perThread>;

        $r18 = $r17.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermsHashPerThread termsHashPerThread>;

        virtualinvoke $r18.<org.apache.lucene.index.TermsHashPerThread: void reset(boolean)>(0);

        return;
    }

    void shrinkHash()
    {
        int $i0;
        org.apache.lucene.index.TermsHashPerField $r1;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i0 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: int maxNumPostings>;

        virtualinvoke $r1.<org.apache.lucene.index.TermsHashPerField: void shrinkHash(int)>($i0);

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: int maxNumPostings> = 0;

        return;
    }

    void start(org.apache.lucene.document.Fieldable)
    {
        org.apache.lucene.document.Fieldable r5;
        org.apache.lucene.index.FieldInvertState $r1;
        org.apache.lucene.util.AttributeSource $r2;
        org.apache.lucene.util.Attribute $r3;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r4;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        r5 := @parameter0: org.apache.lucene.document.Fieldable;

        $z0 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r2 = $r1.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r3;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute> = $r4;

        goto label2;

     label1:
        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute> = null;

     label2:
        return;
    }

    void newTerm(int)
    {
        org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray $r16;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;
        int[] $r3, $r7, $r14;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.DocumentsWriter$DocState $r15;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r9, $r11;
        org.apache.lucene.index.FieldInvertState $r4, $r6, $r8, $r10;
        org.apache.lucene.index.TermsHashPerField $r1, $r5, $r12, $r13;
        org.apache.lucene.index.ParallelPostingsArray $r2;
        java.lang.AssertionError $r17;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, i8, $i9;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r15 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $z3 = virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriter$DocState: boolean testPoint(java.lang.String)>("TermVectorsTermsWriterPerField.newTerm start");

        if $z3 != 0 goto label1;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label1:
        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r2 = $r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r16 = (org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray) $r2;

        $r3 = $r16.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] freqs>;

        $r3[i0] = 1;

        $z1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets>;

        if $z1 == 0 goto label2;

        $r8 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i3 = $r8.<org.apache.lucene.index.FieldInvertState: int offset>;

        $r9 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute>;

        $i4 = interfaceinvoke $r9.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        i5 = $i3 + $i4;

        $r10 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i6 = $r10.<org.apache.lucene.index.FieldInvertState: int offset>;

        $r11 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute>;

        $i7 = interfaceinvoke $r11.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        i8 = $i6 + $i7;

        $r12 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r12.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, i5);

        $r13 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i9 = i8 - i5;

        virtualinvoke $r13.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i9);

        $r14 = $r16.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] lastOffsets>;

        $r14[i0] = i8;

     label2:
        $z2 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorPositions>;

        if $z2 == 0 goto label3;

        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i1 = $r4.<org.apache.lucene.index.FieldInvertState: int position>;

        virtualinvoke $r5.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(0, $i1);

        $r7 = $r16.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] lastPositions>;

        $r6 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i2 = $r6.<org.apache.lucene.index.FieldInvertState: int position>;

        $r7[i0] = $i2;

     label3:
        return;
    }

    void addTerm(int)
    {
        org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray $r18;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;
        int[] $r3, $r5, $r8, $r13, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.DocumentsWriter$DocState $r17;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r10, $r12;
        org.apache.lucene.index.FieldInvertState $r4, $r7, $r9, $r11;
        org.apache.lucene.index.TermsHashPerField $r1, $r6, $r14, $r15;
        org.apache.lucene.index.ParallelPostingsArray $r2;
        java.lang.AssertionError $r19;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, i12, $i13, $i14, $i15;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r17 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $z3 = virtualinvoke $r17.<org.apache.lucene.index.DocumentsWriter$DocState: boolean testPoint(java.lang.String)>("TermVectorsTermsWriterPerField.addTerm start");

        if $z3 != 0 goto label1;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label1:
        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r2 = $r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r18 = (org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray) $r2;

        $r3 = $r18.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] freqs>;

        $i1 = $r3[i0];

        $i2 = $i1 + 1;

        $r3[i0] = $i2;

        $z1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorOffsets>;

        if $z1 == 0 goto label2;

        $r9 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i7 = $r9.<org.apache.lucene.index.FieldInvertState: int offset>;

        $r10 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute>;

        $i8 = interfaceinvoke $r10.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        i9 = $i7 + $i8;

        $r11 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i10 = $r11.<org.apache.lucene.index.FieldInvertState: int offset>;

        $r12 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute>;

        $i11 = interfaceinvoke $r12.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        i12 = $i10 + $i11;

        $r14 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r13 = $r18.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] lastOffsets>;

        $i13 = $r13[i0];

        $i14 = i9 - $i13;

        virtualinvoke $r14.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i14);

        $r15 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i15 = i12 - i9;

        virtualinvoke $r15.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i15);

        $r16 = $r18.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] lastOffsets>;

        $r16[i0] = i12;

     label2:
        $z2 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean doVectorPositions>;

        if $z2 == 0 goto label3;

        $r6 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i4 = $r4.<org.apache.lucene.index.FieldInvertState: int position>;

        $r5 = $r18.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] lastPositions>;

        $i3 = $r5[i0];

        $i5 = $i4 - $i3;

        virtualinvoke $r6.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(0, $i5);

        $r8 = $r18.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: int[] lastPositions>;

        $r7 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i6 = $r7.<org.apache.lucene.index.FieldInvertState: int position>;

        $r8[i0] = $i6;

     label3:
        return;
    }

    void skippingLongTerm()
    {
        org.apache.lucene.index.TermVectorsTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        return;
    }

    org.apache.lucene.index.ParallelPostingsArray createPostingsArray(int)
    {
        int i0;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r1;
        org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray $r0;

        r1 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerField;

        i0 := @parameter0: int;

        $r0 = new org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray;

        specialinvoke $r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField$TermVectorsPostingsArray: void <init>(int)>(i0);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/TermVectorsTermsWriterPerField;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.TermVectorsTermsWriterPerField: boolean $assertionsDisabled> = $z1;

        return;
    }
}
