final class org.apache.lucene.index.TermInfosReader extends java.lang.Object implements java.io.Closeable
{
    private final org.apache.lucene.store.Directory directory;
    private final java.lang.String segment;
    private final org.apache.lucene.index.FieldInfos fieldInfos;
    private final org.apache.lucene.util.CloseableThreadLocal threadResources;
    private final org.apache.lucene.index.SegmentTermEnum origEnum;
    private final long size;
    private final org.apache.lucene.index.TermInfosReaderIndex index;
    private final int indexLength;
    private final int totalIndexInterval;
    private static final int DEFAULT_CACHE_SIZE;
    private final org.apache.lucene.util.DoubleBarrelLRUCache termsCache;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.index.FieldInfos, int, int) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.util.DoubleBarrelLRUCache $r30;
        org.apache.lucene.index.TermInfosReader r0;
        org.apache.lucene.store.Directory r3, $r8, $r17;
        org.apache.lucene.index.FieldInfos r5, $r11, $r19;
        boolean z0;
        java.lang.StringBuilder $r24, $r25, $r31;
        java.lang.Throwable $r27, $r28;
        long $l2, $l5;
        org.apache.lucene.index.TermInfosReaderIndex $r21, $r35;
        int i0, i1, $i3, $i4, $i6, $i7, $i9, $i11, $i13, $i15;
        java.lang.String r4, $r7, $r9, $r14, $r15, $r26;
        org.apache.lucene.index.SegmentTermEnum $r12, $r13, $r33, $r34;
        org.apache.lucene.store.IndexInput $r10, $r18;
        java.lang.IllegalArgumentException $r32;
        org.apache.lucene.util.CloseableThreadLocal $r29;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        r3 := @parameter0: org.apache.lucene.store.Directory;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.lucene.index.FieldInfos;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r29 = new org.apache.lucene.util.CloseableThreadLocal;

        specialinvoke $r29.<org.apache.lucene.util.CloseableThreadLocal: void <init>()>();

        r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources> = $r29;

        $r30 = new org.apache.lucene.util.DoubleBarrelLRUCache;

        specialinvoke $r30.<org.apache.lucene.util.DoubleBarrelLRUCache: void <init>(int)>(1024);

        r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache> = $r30;

        z0 = 0;

        if i0 >= 1 goto label01;

        $i9 = (int) -1;

        if i0 == $i9 goto label01;

        $r32 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("indexDivisor must be -1 (don\'t load terms index) or greater than 0: got ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r32;

     label01:
        r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.store.Directory directory> = r3;

        r0.<org.apache.lucene.index.TermInfosReader: java.lang.String segment> = r4;

        r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.FieldInfos fieldInfos> = r5;

        $r33 = new org.apache.lucene.index.SegmentTermEnum;

        $r8 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.store.Directory directory>;

        $r7 = r0.<org.apache.lucene.index.TermInfosReader: java.lang.String segment>;

        $r9 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r7, "tis");

        $r10 = virtualinvoke $r8.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,int)>($r9, i1);

        $r11 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        specialinvoke $r33.<org.apache.lucene.index.SegmentTermEnum: void <init>(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfos,boolean)>($r10, $r11, 0);

        r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum> = $r33;

        $r12 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum>;

        $l2 = $r12.<org.apache.lucene.index.SegmentTermEnum: long size>;

        r0.<org.apache.lucene.index.TermInfosReader: long size> = $l2;

        $i11 = (int) -1;

        if i0 == $i11 goto label07;

        $r13 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum>;

        $i3 = $r13.<org.apache.lucene.index.SegmentTermEnum: int indexInterval>;

        $i4 = $i3 * i0;

        r0.<org.apache.lucene.index.TermInfosReader: int totalIndexInterval> = $i4;

        $r14 = r0.<org.apache.lucene.index.TermInfosReader: java.lang.String segment>;

        $r15 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r14, "tii");

        $r34 = new org.apache.lucene.index.SegmentTermEnum;

        $r17 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.store.Directory directory>;

        $r18 = virtualinvoke $r17.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,int)>($r15, i1);

        $r19 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        specialinvoke $r34.<org.apache.lucene.index.SegmentTermEnum: void <init>(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfos,boolean)>($r18, $r19, 1);

     label02:
        $r35 = new org.apache.lucene.index.TermInfosReaderIndex;

        $l5 = virtualinvoke r3.<org.apache.lucene.store.Directory: long fileLength(java.lang.String)>($r15);

        $i6 = r0.<org.apache.lucene.index.TermInfosReader: int totalIndexInterval>;

        specialinvoke $r35.<org.apache.lucene.index.TermInfosReaderIndex: void <init>(org.apache.lucene.index.SegmentTermEnum,int,long,int)>($r34, i0, $l5, $i6);

        r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index> = $r35;

        $r21 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index>;

        $i7 = virtualinvoke $r21.<org.apache.lucene.index.TermInfosReaderIndex: int length()>();

        r0.<org.apache.lucene.index.TermInfosReader: int indexLength> = $i7;

        goto label13;

     label03:
        goto label06;

     label04:
        $r28 := @caughtexception;

        goto label14;

     label05:
        throw $r28;

     label06:
        goto label08;

     label07:
        $i13 = (int) -1;

        r0.<org.apache.lucene.index.TermInfosReader: int totalIndexInterval> = $i13;

        r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index> = null;

        $i15 = (int) -1;

        r0.<org.apache.lucene.index.TermInfosReader: int indexLength> = $i15;

     label08:
        z0 = 1;

        goto label15;

     label09:
        goto label12;

     label10:
        $r27 := @caughtexception;

        goto label17;

     label11:
        throw $r27;

     label12:
        return;

     label13:
        virtualinvoke $r34.<org.apache.lucene.index.SegmentTermEnum: void close()>();

        goto label03;

     label14:
        virtualinvoke $r34.<org.apache.lucene.index.SegmentTermEnum: void close()>();

        goto label05;

     label15:
        if 1 != 0 goto label16;

        virtualinvoke r0.<org.apache.lucene.index.TermInfosReader: void close()>();

     label16:
        goto label09;

     label17:
        if z0 != 0 goto label18;

        virtualinvoke r0.<org.apache.lucene.index.TermInfosReader: void close()>();

     label18:
        goto label11;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label14 to label15 with label10;
    }

    public int getSkipInterval()
    {
        org.apache.lucene.index.TermInfosReader r0;
        int $i0;
        org.apache.lucene.index.SegmentTermEnum $r1;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        $r1 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum>;

        $i0 = $r1.<org.apache.lucene.index.SegmentTermEnum: int skipInterval>;

        return $i0;
    }

    public int getMaxSkipLevels()
    {
        org.apache.lucene.index.TermInfosReader r0;
        int $i0;
        org.apache.lucene.index.SegmentTermEnum $r1;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        $r1 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum>;

        $i0 = $r1.<org.apache.lucene.index.SegmentTermEnum: int maxSkipLevels>;

        return $i0;
    }

    public final void close() throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermEnum $r1, $r3;
        org.apache.lucene.index.TermInfosReader r0;
        org.apache.lucene.util.CloseableThreadLocal $r2;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        $r1 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum>;

        virtualinvoke $r3.<org.apache.lucene.index.SegmentTermEnum: void close()>();

     label1:
        $r2 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources>;

        virtualinvoke $r2.<org.apache.lucene.util.CloseableThreadLocal: void close()>();

        return;
    }

    final long size()
    {
        org.apache.lucene.index.TermInfosReader r0;
        long $l0;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        $l0 = r0.<org.apache.lucene.index.TermInfosReader: long size>;

        return $l0;
    }

    private org.apache.lucene.index.TermInfosReader$ThreadResources getThreadResources()
    {
        org.apache.lucene.index.SegmentTermEnum $r4;
        org.apache.lucene.index.TermInfosReader r0;
        java.lang.Object $r2;
        org.apache.lucene.util.CloseableThreadLocal $r1, $r5;
        org.apache.lucene.index.TermInfosReader$ThreadResources $r3, r6;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        $r1 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        r6 = (org.apache.lucene.index.TermInfosReader$ThreadResources) $r2;

        if r6 != null goto label1;

        $r3 = new org.apache.lucene.index.TermInfosReader$ThreadResources;

        specialinvoke $r3.<org.apache.lucene.index.TermInfosReader$ThreadResources: void <init>(org.apache.lucene.index.TermInfosReader$1)>(null);

        r6 = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum terms()>();

        $r3.<org.apache.lucene.index.TermInfosReader$ThreadResources: org.apache.lucene.index.SegmentTermEnum termEnum> = $r4;

        $r5 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources>;

        virtualinvoke $r5.<org.apache.lucene.util.CloseableThreadLocal: void set(java.lang.Object)>($r3);

     label1:
        return r6;
    }

    org.apache.lucene.index.TermInfo get(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.TermInfo $r4;
        org.apache.lucene.util.BytesRef $r0;
        org.apache.lucene.index.Term r1;
        org.apache.lucene.index.TermInfosReader r3;
        java.lang.String $r2;

        r3 := @this: org.apache.lucene.index.TermInfosReader;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r0 = new org.apache.lucene.util.BytesRef;

        $r2 = r1.<org.apache.lucene.index.Term: java.lang.String text>;

        specialinvoke $r0.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>($r2);

        $r4 = specialinvoke r3.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfo get(org.apache.lucene.index.Term,boolean,org.apache.lucene.util.BytesRef)>(r1, 0, $r0);

        return $r4;
    }

    private org.apache.lucene.index.TermInfo get(org.apache.lucene.index.Term, boolean, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        org.apache.lucene.util.DoubleBarrelLRUCache $r3, $r17, $r26;
        org.apache.lucene.index.TermInfosReader r0;
        org.apache.lucene.index.Term r2, $r7, $r11, $r12, $r18, $r19, $r20, $r21, $r28;
        org.apache.lucene.index.TermInfosReader$ThreadResources $r6;
        byte $b1, $b5, $b24;
        org.apache.lucene.index.TermInfosReader$CloneableTerm $r1;
        long $l0, $l3, $l4, $l6, $l8, $l9, $l10, $l13, $l14, $l15, $l20, $l22, $l23, $l25;
        org.apache.lucene.index.TermInfosReaderIndex $r9, $r10, $r27;
        java.lang.AssertionError $r14, $r15, $r23, $r24;
        org.apache.lucene.index.TermInfosReader$TermInfoAndOrd r5, $r16, $r25;
        org.apache.lucene.index.SegmentTermEnum $r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.util.BytesRef r8;
        org.apache.lucene.index.TermInfo $r13, $r22, r30, r31;
        int $i2, $i7, $i11, $i12, $i16, $i17, $i18, $i19, $i21, $i26, $i27, $i28, i29;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        r2 := @parameter0: org.apache.lucene.index.Term;

        z0 := @parameter1: boolean;

        r8 := @parameter2: org.apache.lucene.util.BytesRef;

        $l0 = r0.<org.apache.lucene.index.TermInfosReader: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label01;

        return null;

     label01:
        specialinvoke r0.<org.apache.lucene.index.TermInfosReader: void ensureIndexIsRead()>();

        $r1 = new org.apache.lucene.index.TermInfosReader$CloneableTerm;

        specialinvoke $r1.<org.apache.lucene.index.TermInfosReader$CloneableTerm: void <init>(org.apache.lucene.index.Term)>(r2);

        $r3 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.util.DoubleBarrelLRUCache: java.lang.Object get(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey)>($r1);

        r5 = (org.apache.lucene.index.TermInfosReader$TermInfoAndOrd) $r4;

        $r6 = specialinvoke r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReader$ThreadResources getThreadResources()>();

        if z0 != 0 goto label02;

        if r5 == null goto label02;

        return r5;

     label02:
        $r29 = $r6.<org.apache.lucene.index.TermInfosReader$ThreadResources: org.apache.lucene.index.SegmentTermEnum termEnum>;

        $r7 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        if $r7 == null goto label10;

        $r18 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term prev()>();

        if $r18 == null goto label03;

        $r28 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term prev()>();

        $i27 = virtualinvoke r2.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r28);

        if $i27 > 0 goto label04;

     label03:
        $r19 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i11 = virtualinvoke r2.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r19);

        if $i11 < 0 goto label10;

     label04:
        $l14 = $r29.<org.apache.lucene.index.SegmentTermEnum: long position>;

        $i12 = r0.<org.apache.lucene.index.TermInfosReader: int totalIndexInterval>;

        $l13 = (long) $i12;

        $l15 = $l14 / $l13;

        $i16 = (int) $l15;

        $i28 = $i16 + 1;

        $i17 = r0.<org.apache.lucene.index.TermInfosReader: int indexLength>;

        if $i17 == $i28 goto label05;

        $r27 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index>;

        $i26 = virtualinvoke $r27.<org.apache.lucene.index.TermInfosReaderIndex: int compareTo(org.apache.lucene.index.Term,org.apache.lucene.util.BytesRef,int)>(r2, r8, $i28);

        if $i26 >= 0 goto label10;

     label05:
        $i18 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: int scanTo(org.apache.lucene.index.Term)>(r2);

        $r20 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        if $r20 == null goto label08;

        $r21 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i19 = virtualinvoke r2.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r21);

        if $i19 != 0 goto label08;

        $r22 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.TermInfo termInfo()>();

        r30 = $r22;

        if $i18 <= 1 goto label09;

        if r5 != null goto label06;

        $r26 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r25 = new org.apache.lucene.index.TermInfosReader$TermInfoAndOrd;

        $l25 = $r29.<org.apache.lucene.index.SegmentTermEnum: long position>;

        specialinvoke $r25.<org.apache.lucene.index.TermInfosReader$TermInfoAndOrd: void <init>(org.apache.lucene.index.TermInfo,long)>($r22, $l25);

        virtualinvoke $r26.<org.apache.lucene.util.DoubleBarrelLRUCache: void put(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey,java.lang.Object)>($r1, $r25);

        goto label09;

     label06:
        $z4 = <org.apache.lucene.index.TermInfosReader: boolean $assertionsDisabled>;

        if $z4 != 0 goto label07;

        $z6 = specialinvoke r0.<org.apache.lucene.index.TermInfosReader: boolean sameTermInfo(org.apache.lucene.index.TermInfo,org.apache.lucene.index.TermInfo,org.apache.lucene.index.SegmentTermEnum)>($r22, r5, $r29);

        if $z6 != 0 goto label07;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label07:
        $z5 = <org.apache.lucene.index.TermInfosReader: boolean $assertionsDisabled>;

        if $z5 != 0 goto label09;

        $l20 = $r29.<org.apache.lucene.index.SegmentTermEnum: long position>;

        $i21 = (int) $l20;

        $l23 = (long) $i21;

        $l22 = r5.<org.apache.lucene.index.TermInfosReader$TermInfoAndOrd: long termOrd>;

        $b24 = $l23 cmp $l22;

        if $b24 == 0 goto label09;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label08:
        r30 = null;

     label09:
        return r30;

     label10:
        if r5 == null goto label11;

        $l9 = r5.<org.apache.lucene.index.TermInfosReader$TermInfoAndOrd: long termOrd>;

        $i7 = r0.<org.apache.lucene.index.TermInfosReader: int totalIndexInterval>;

        $l8 = (long) $i7;

        $l10 = $l9 / $l8;

        i29 = (int) $l10;

        goto label12;

     label11:
        $r9 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index>;

        i29 = virtualinvoke $r9.<org.apache.lucene.index.TermInfosReaderIndex: int getIndexOffset(org.apache.lucene.index.Term,org.apache.lucene.util.BytesRef)>(r2, r8);

     label12:
        $r10 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index>;

        virtualinvoke $r10.<org.apache.lucene.index.TermInfosReaderIndex: void seekEnum(org.apache.lucene.index.SegmentTermEnum,int)>($r29, i29);

        virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: int scanTo(org.apache.lucene.index.Term)>(r2);

        $r11 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        if $r11 == null goto label15;

        $r12 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i2 = virtualinvoke r2.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r12);

        if $i2 != 0 goto label15;

        $r13 = virtualinvoke $r29.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.TermInfo termInfo()>();

        r31 = $r13;

        if r5 != null goto label13;

        $r17 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r16 = new org.apache.lucene.index.TermInfosReader$TermInfoAndOrd;

        $l6 = $r29.<org.apache.lucene.index.SegmentTermEnum: long position>;

        specialinvoke $r16.<org.apache.lucene.index.TermInfosReader$TermInfoAndOrd: void <init>(org.apache.lucene.index.TermInfo,long)>($r13, $l6);

        virtualinvoke $r17.<org.apache.lucene.util.DoubleBarrelLRUCache: void put(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey,java.lang.Object)>($r1, $r16);

        goto label16;

     label13:
        $z1 = <org.apache.lucene.index.TermInfosReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label14;

        $z3 = specialinvoke r0.<org.apache.lucene.index.TermInfosReader: boolean sameTermInfo(org.apache.lucene.index.TermInfo,org.apache.lucene.index.TermInfo,org.apache.lucene.index.SegmentTermEnum)>($r13, r5, $r29);

        if $z3 != 0 goto label14;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label14:
        $z2 = <org.apache.lucene.index.TermInfosReader: boolean $assertionsDisabled>;

        if $z2 != 0 goto label16;

        $l4 = $r29.<org.apache.lucene.index.SegmentTermEnum: long position>;

        $l3 = r5.<org.apache.lucene.index.TermInfosReader$TermInfoAndOrd: long termOrd>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label16;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label15:
        r31 = null;

     label16:
        return r31;
    }

    private final boolean sameTermInfo(org.apache.lucene.index.TermInfo, org.apache.lucene.index.TermInfo, org.apache.lucene.index.SegmentTermEnum)
    {
        org.apache.lucene.index.TermInfosReader r3;
        long $l2, $l3, $l5, $l6;
        org.apache.lucene.index.TermInfo r0, r1;
        byte $b4, $b7;
        int $i0, $i1, $i8, $i9, $i10, $i11;
        org.apache.lucene.index.SegmentTermEnum r2;

        r3 := @this: org.apache.lucene.index.TermInfosReader;

        r0 := @parameter0: org.apache.lucene.index.TermInfo;

        r1 := @parameter1: org.apache.lucene.index.TermInfo;

        r2 := @parameter2: org.apache.lucene.index.SegmentTermEnum;

        $i1 = r0.<org.apache.lucene.index.TermInfo: int docFreq>;

        $i0 = r1.<org.apache.lucene.index.TermInfo: int docFreq>;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        $l3 = r0.<org.apache.lucene.index.TermInfo: long freqPointer>;

        $l2 = r1.<org.apache.lucene.index.TermInfo: long freqPointer>;

        $b4 = $l3 cmp $l2;

        if $b4 == 0 goto label2;

        return 0;

     label2:
        $l6 = r0.<org.apache.lucene.index.TermInfo: long proxPointer>;

        $l5 = r1.<org.apache.lucene.index.TermInfo: long proxPointer>;

        $b7 = $l6 cmp $l5;

        if $b7 == 0 goto label3;

        return 0;

     label3:
        $i9 = r0.<org.apache.lucene.index.TermInfo: int docFreq>;

        $i8 = r2.<org.apache.lucene.index.SegmentTermEnum: int skipInterval>;

        if $i9 < $i8 goto label4;

        $i11 = r0.<org.apache.lucene.index.TermInfo: int skipOffset>;

        $i10 = r1.<org.apache.lucene.index.TermInfo: int skipOffset>;

        if $i11 == $i10 goto label4;

        return 0;

     label4:
        return 1;
    }

    private void ensureIndexIsRead()
    {
        org.apache.lucene.index.TermInfosReader r0;
        java.lang.IllegalStateException $r2;
        org.apache.lucene.index.TermInfosReaderIndex $r1;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        $r1 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("terms index was not loaded when this reader was created");

        throw $r2;

     label1:
        return;
    }

    final long getPosition(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.TermInfosReader r0;
        org.apache.lucene.index.Term r2, $r8, $r9;
        long $l0, $l5;
        org.apache.lucene.index.TermInfosReaderIndex $r4, $r7;
        org.apache.lucene.index.TermInfosReader$ThreadResources $r5;
        byte $b1;
        int $i2, $i3, $i4;
        java.lang.String $r3;
        boolean $z0;
        org.apache.lucene.index.SegmentTermEnum r6;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        r2 := @parameter0: org.apache.lucene.index.Term;

        $l0 = r0.<org.apache.lucene.index.TermInfosReader: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return -1L;

     label1:
        specialinvoke r0.<org.apache.lucene.index.TermInfosReader: void ensureIndexIsRead()>();

        $r1 = new org.apache.lucene.util.BytesRef;

        $r3 = r2.<org.apache.lucene.index.Term: java.lang.String text>;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>($r3);

        $r4 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index>;

        $i2 = virtualinvoke $r4.<org.apache.lucene.index.TermInfosReaderIndex: int getIndexOffset(org.apache.lucene.index.Term,org.apache.lucene.util.BytesRef)>(r2, $r1);

        $r5 = specialinvoke r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReader$ThreadResources getThreadResources()>();

        r6 = $r5.<org.apache.lucene.index.TermInfosReader$ThreadResources: org.apache.lucene.index.SegmentTermEnum termEnum>;

        $r7 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReaderIndex index>;

        virtualinvoke $r7.<org.apache.lucene.index.TermInfosReaderIndex: void seekEnum(org.apache.lucene.index.SegmentTermEnum,int)>(r6, $i2);

     label2:
        $r8 = virtualinvoke r6.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i3 = virtualinvoke r2.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r8);

        if $i3 <= 0 goto label3;

        $z0 = virtualinvoke r6.<org.apache.lucene.index.SegmentTermEnum: boolean next()>();

        if $z0 == 0 goto label3;

        goto label2;

     label3:
        $r9 = virtualinvoke r6.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i4 = virtualinvoke r2.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r9);

        if $i4 != 0 goto label4;

        $l5 = r6.<org.apache.lucene.index.SegmentTermEnum: long position>;

        return $l5;

     label4:
        return -1L;
    }

    public org.apache.lucene.index.SegmentTermEnum terms()
    {
        org.apache.lucene.index.SegmentTermEnum $r1, $r3;
        org.apache.lucene.index.TermInfosReader r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.lucene.index.TermInfosReader;

        $r1 = r0.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.SegmentTermEnum origEnum>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.SegmentTermEnum: java.lang.Object clone()>();

        $r3 = (org.apache.lucene.index.SegmentTermEnum) $r2;

        return $r3;
    }

    public org.apache.lucene.index.SegmentTermEnum terms(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermEnum $r5, $r7;
        org.apache.lucene.util.BytesRef $r0;
        org.apache.lucene.index.Term r1;
        org.apache.lucene.index.TermInfosReader r3;
        org.apache.lucene.index.TermInfosReader$ThreadResources $r4;
        java.lang.Object $r6;
        java.lang.String $r2;

        r3 := @this: org.apache.lucene.index.TermInfosReader;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r0 = new org.apache.lucene.util.BytesRef;

        $r2 = r1.<org.apache.lucene.index.Term: java.lang.String text>;

        specialinvoke $r0.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>($r2);

        specialinvoke r3.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfo get(org.apache.lucene.index.Term,boolean,org.apache.lucene.util.BytesRef)>(r1, 1, $r0);

        $r4 = specialinvoke r3.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfosReader$ThreadResources getThreadResources()>();

        $r5 = $r4.<org.apache.lucene.index.TermInfosReader$ThreadResources: org.apache.lucene.index.SegmentTermEnum termEnum>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.SegmentTermEnum: java.lang.Object clone()>();

        $r7 = (org.apache.lucene.index.SegmentTermEnum) $r6;

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.index.TermInfosReader: int DEFAULT_CACHE_SIZE> = 1024;

        $r0 = class "Lorg/apache/lucene/index/TermInfosReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.TermInfosReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
