class org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData extends java.lang.Object
{
    final boolean hasPositions;
    final boolean hasOffsets;
    final boolean hasPayloads;
    final int fieldNum;
    final int flags;
    final int numTerms;
    final int[] freqs;
    final int[] prefixLengths;
    final int[] suffixLengths;
    final int posStart;
    final int offStart;
    final int payStart;
    int totalPositions;
    int ord;
    final org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0;

    void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter, int, int, boolean, boolean, boolean, int, int, int)
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData r0;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter r1;
        byte $b2, $b3, $b7, $b8;
        int[] $r2, $r3, $r4;
        int i0, i1, i4, i5, i6;
        boolean z0, z1, z2, $z3;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData;

        r1 := @parameter0: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int fieldNum> = i0;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int numTerms> = i1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasPositions> = z0;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasOffsets> = z1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasPayloads> = z2;

        if z0 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if z1 == 0 goto label3;

        $b7 = 2;

        goto label4;

     label3:
        $b7 = 0;

     label4:
        $b2 = $z3 | $b7;

        if z2 == 0 goto label5;

        $b8 = 4;

        goto label6;

     label5:
        $b8 = 0;

     label6:
        $b3 = $b2 | $b8;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int flags> = $b3;

        $r2 = newarray (int)[i1];

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int[] freqs> = $r2;

        $r3 = newarray (int)[i1];

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int[] prefixLengths> = $r3;

        $r4 = newarray (int)[i1];

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int[] suffixLengths> = $r4;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int posStart> = i4;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int offStart> = i5;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int payStart> = i6;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions> = 0;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int ord> = 0;

        return;
    }

    void addTerm(int, int, int)
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData r0;
        int[] $r1, $r2, $r3;
        int i0, $i1, i2, $i3, i4, $i5, $i6, $i7;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int[] freqs>;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int ord>;

        $r1[$i1] = i0;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int[] prefixLengths>;

        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int ord>;

        $r2[$i3] = i2;

        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int[] suffixLengths>;

        $i5 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int ord>;

        $r3[$i5] = i4;

        $i6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int ord>;

        $i7 = $i6 + 1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int ord> = $i7;

        return;
    }

    void addPosition(int, int, int, int)
    {
        int[] $r2, $r4, $r7, $r8, $r10, $r12, $r14, $r17, $r18, $r21, $r22, $r24, $r26, $r29, $r30;
        boolean $z0, $z1, $z2;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData r0;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter $r1, $r3, $r5, $r6, $r9, $r11, $r13, $r15, $r16, $r19, $r20, $r23, $r25, $r27, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, $i31, $i32, $i33;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData;

        i30 := @parameter0: int;

        i14 := @parameter1: int;

        i18 := @parameter2: int;

        i6 := @parameter3: int;

        $z0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasPositions>;

        if $z0 == 0 goto label2;

        $i25 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int posStart>;

        $i24 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i26 = $i25 + $i24;

        $r23 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r24 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$000(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r23);

        $i27 = lengthof $r24;

        if $i26 != $i27 goto label1;

        $r28 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r27 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r29 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$000(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r27);

        $r30 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[])>($r29);

        staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$002(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter,int[])>($r28, $r30);

     label1:
        $r25 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r26 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$000(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r25);

        $i29 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int posStart>;

        $i28 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i31 = $i29 + $i28;

        $r26[$i31] = i30;

     label2:
        $z1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasOffsets>;

        if $z1 == 0 goto label4;

        $i9 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int offStart>;

        $i8 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i10 = $i9 + $i8;

        $r9 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r10 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$100(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r9);

        $i11 = lengthof $r10;

        if $i10 != $i11 goto label3;

        $i21 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int offStart>;

        $i20 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i22 = $i21 + $i20;

        $i23 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i22, 4);

        $r16 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r15 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r17 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$100(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r15);

        $r18 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r17, $i23);

        staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$102(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter,int[])>($r16, $r18);

        $r20 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r19 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r21 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$200(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r19);

        $r22 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r21, $i23);

        staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$202(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter,int[])>($r20, $r22);

     label3:
        $r11 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r12 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$100(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r11);

        $i13 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int offStart>;

        $i12 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i15 = $i13 + $i12;

        $r12[$i15] = i14;

        $r13 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r14 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$200(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r13);

        $i17 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int offStart>;

        $i16 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i19 = $i17 + $i16;

        $r14[$i19] = i18;

     label4:
        $z2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasPayloads>;

        if $z2 == 0 goto label6;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int payStart>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i2 = $i1 + $i0;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r2 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$300(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r1);

        $i3 = lengthof $r2;

        if $i2 != $i3 goto label5;

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r7 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$300(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r5);

        $r8 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[])>($r7);

        staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$302(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter,int[])>($r6, $r8);

     label5:
        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $r4 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: int[] access$300(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter)>($r3);

        $i5 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int payStart>;

        $i4 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i7 = $i5 + $i4;

        $r4[$i7] = i6;

     label6:
        $i32 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        $i33 = $i32 + 1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions> = $i33;

        return;
    }
}
