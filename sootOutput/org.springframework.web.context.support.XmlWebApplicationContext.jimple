public class org.springframework.web.context.support.XmlWebApplicationContext extends org.springframework.web.context.support.AbstractRefreshableWebApplicationContext
{
    public static final java.lang.String DEFAULT_CONFIG_LOCATION;
    public static final java.lang.String DEFAULT_CONFIG_LOCATION_PREFIX;
    public static final java.lang.String DEFAULT_CONFIG_LOCATION_SUFFIX;

    public void <init>()
    {
        org.springframework.web.context.support.XmlWebApplicationContext r0;

        r0 := @this: org.springframework.web.context.support.XmlWebApplicationContext;

        specialinvoke r0.<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void <init>()>();

        return;
    }

    protected void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory) throws org.springframework.beans.BeansException, java.io.IOException
    {
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader $r0;
        org.springframework.web.context.support.XmlWebApplicationContext r2;
        org.springframework.beans.factory.xml.ResourceEntityResolver $r3;
        org.springframework.beans.factory.support.DefaultListableBeanFactory r1;

        r2 := @this: org.springframework.web.context.support.XmlWebApplicationContext;

        r1 := @parameter0: org.springframework.beans.factory.support.DefaultListableBeanFactory;

        $r0 = new org.springframework.beans.factory.xml.XmlBeanDefinitionReader;

        specialinvoke $r0.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r1);

        virtualinvoke $r0.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setResourceLoader(org.springframework.core.io.ResourceLoader)>(r2);

        $r3 = new org.springframework.beans.factory.xml.ResourceEntityResolver;

        specialinvoke $r3.<org.springframework.beans.factory.xml.ResourceEntityResolver: void <init>(org.springframework.core.io.ResourceLoader)>(r2);

        virtualinvoke $r0.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r3);

        virtualinvoke r2.<org.springframework.web.context.support.XmlWebApplicationContext: void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)>($r0);

        virtualinvoke r2.<org.springframework.web.context.support.XmlWebApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)>($r0);

        return;
    }

    protected void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)
    {
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader r1;
        org.springframework.web.context.support.XmlWebApplicationContext r0;

        r0 := @this: org.springframework.web.context.support.XmlWebApplicationContext;

        r1 := @parameter0: org.springframework.beans.factory.xml.XmlBeanDefinitionReader;

        return;
    }

    protected void loadBeanDefinitions(org.springframework.beans.factory.xml.XmlBeanDefinitionReader) throws java.io.IOException
    {
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader r3;
        org.springframework.web.context.support.XmlWebApplicationContext r0;
        int i0, i1;
        java.lang.String[] $r1;
        java.lang.String r2;

        r0 := @this: org.springframework.web.context.support.XmlWebApplicationContext;

        r3 := @parameter0: org.springframework.beans.factory.xml.XmlBeanDefinitionReader;

        $r1 = virtualinvoke r0.<org.springframework.web.context.support.XmlWebApplicationContext: java.lang.String[] getConfigLocations()>();

        if $r1 == null goto label3;

        i0 = lengthof $r1;

        i1 = 0;

        goto label2;

     label1:
        r2 = $r1[i1];

        virtualinvoke r3.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int loadBeanDefinitions(java.lang.String)>(r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return;
    }

    protected java.lang.String[] getDefaultConfigLocations()
    {
        java.lang.String[] $r2, $r3;
        org.springframework.web.context.support.XmlWebApplicationContext r0;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r1, $r5, $r8;

        r0 := @this: org.springframework.web.context.support.XmlWebApplicationContext;

        $r1 = virtualinvoke r0.<org.springframework.web.context.support.XmlWebApplicationContext: java.lang.String getNamespace()>();

        if $r1 == null goto label1;

        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("/WEB-INF/");

        $r5 = virtualinvoke r0.<org.springframework.web.context.support.XmlWebApplicationContext: java.lang.String getNamespace()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r8;

        return $r3;

     label1:
        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "/WEB-INF/applicationContext.xml";

        return $r2;
    }

    public static void <clinit>()
    {
        <org.springframework.web.context.support.XmlWebApplicationContext: java.lang.String DEFAULT_CONFIG_LOCATION_SUFFIX> = ".xml";

        <org.springframework.web.context.support.XmlWebApplicationContext: java.lang.String DEFAULT_CONFIG_LOCATION_PREFIX> = "/WEB-INF/";

        <org.springframework.web.context.support.XmlWebApplicationContext: java.lang.String DEFAULT_CONFIG_LOCATION> = "/WEB-INF/applicationContext.xml";

        return;
    }
}
