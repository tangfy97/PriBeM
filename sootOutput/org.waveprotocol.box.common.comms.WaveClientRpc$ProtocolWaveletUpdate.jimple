public final class org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate extends com.google.protobuf.GeneratedMessage
{
    private static final org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate defaultInstance;
    public static final int WAVELET_NAME_FIELD_NUMBER;
    private boolean hasWaveletName;
    private java.lang.String waveletName_;
    public static final int APPLIED_DELTA_FIELD_NUMBER;
    private java.util.List appliedDelta_;
    public static final int COMMIT_NOTICE_FIELD_NUMBER;
    private boolean hasCommitNotice;
    private org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion commitNotice_;
    public static final int RESULTING_VERSION_FIELD_NUMBER;
    private boolean hasResultingVersion;
    private org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion resultingVersion_;
    public static final int SNAPSHOT_FIELD_NUMBER;
    private boolean hasSnapshot;
    private org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot snapshot_;
    public static final int MARKER_FIELD_NUMBER;
    private boolean hasMarker;
    private boolean marker_;
    public static final int CHANNEL_ID_FIELD_NUMBER;
    private boolean hasChannelId;
    private java.lang.String channelId_;
    private int memoizedSerializedSize;

    private void <init>()
    {
        int $i1;
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        specialinvoke r0.<com.google.protobuf.GeneratedMessage: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String waveletName_> = "";

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List appliedDelta_> = $r1;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean marker_> = 0;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String channelId_> = "";

        $i1 = (int) -1;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int memoizedSerializedSize> = $i1;

        specialinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: void initFields()>();

        return;
    }

    private void <init>(boolean)
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        int $i1;
        boolean z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.protobuf.GeneratedMessage: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String waveletName_> = "";

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List appliedDelta_> = $r1;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean marker_> = 0;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String channelId_> = "";

        $i1 = (int) -1;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int memoizedSerializedSize> = $i1;

        return;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate getDefaultInstance()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r0;

        $r0 = <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate defaultInstance>;

        return $r0;
    }

    public org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate getDefaultInstanceForType()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r0, r1;

        r1 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r0 = <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate defaultInstance>;

        return $r0;
    }

    public static final com.google.protobuf.Descriptors$Descriptor getDescriptor()
    {
        com.google.protobuf.Descriptors$Descriptor $r0;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc: com.google.protobuf.Descriptors$Descriptor access$7300()>();

        return $r0;
    }

    protected com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r1;
        com.google.protobuf.GeneratedMessage$FieldAccessorTable $r0;

        r1 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$7400()>();

        return $r0;
    }

    public boolean hasWaveletName()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasWaveletName>;

        return $z0;
    }

    public java.lang.String getWaveletName()
    {
        java.lang.String $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String waveletName_>;

        return $r1;
    }

    public java.util.List getAppliedDeltaList()
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List appliedDelta_>;

        return $r1;
    }

    public int getAppliedDeltaCount()
    {
        int $i0;
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List appliedDelta_>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta getAppliedDelta(int)
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r3;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List appliedDelta_>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta) $r2;

        return $r3;
    }

    public boolean hasCommitNotice()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasCommitNotice>;

        return $z0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getCommitNotice()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion commitNotice_>;

        return $r1;
    }

    public boolean hasResultingVersion()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasResultingVersion>;

        return $z0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getResultingVersion()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion resultingVersion_>;

        return $r1;
    }

    public boolean hasSnapshot()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasSnapshot>;

        return $z0;
    }

    public org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getSnapshot()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot snapshot_>;

        return $r1;
    }

    public boolean hasMarker()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasMarker>;

        return $z0;
    }

    public boolean getMarker()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean marker_>;

        return $z0;
    }

    public boolean hasChannelId()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasChannelId>;

        return $z0;
    }

    public java.lang.String getChannelId()
    {
        java.lang.String $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String channelId_>;

        return $r1;
    }

    private void initFields()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1, $r2;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getDefaultInstance()>();

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion commitNotice_> = $r1;

        $r2 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getDefaultInstance()>();

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion resultingVersion_> = $r2;

        $r3 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getDefaultInstance()>();

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot snapshot_> = $r3;

        return;
    }

    public final boolean isInitialized()
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Iterator $r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta r7;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r3;
        java.util.List $r1;
        java.lang.Object $r6;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r4, $r5;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $z0 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasWaveletName>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List getAppliedDeltaList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta) $r6;

        $z8 = virtualinvoke r7.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: boolean isInitialized()>();

        if $z8 != 0 goto label3;

        return 0;

     label3:
        goto label2;

     label4:
        $z2 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasCommitNotice()>();

        if $z2 == 0 goto label5;

        $r5 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getCommitNotice()>();

        $z7 = virtualinvoke $r5.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: boolean isInitialized()>();

        if $z7 != 0 goto label5;

        return 0;

     label5:
        $z3 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasResultingVersion()>();

        if $z3 == 0 goto label6;

        $r4 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getResultingVersion()>();

        $z6 = virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: boolean isInitialized()>();

        if $z6 != 0 goto label6;

        return 0;

     label6:
        $z4 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasSnapshot()>();

        if $z4 == 0 goto label7;

        $r3 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getSnapshot()>();

        $z5 = virtualinvoke $r3.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: boolean isInitialized()>();

        if $z5 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream) throws java.io.IOException
    {
        java.lang.String $r5, $r11;
        com.google.protobuf.CodedOutputStream r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.google.protobuf.UnknownFieldSet $r3;
        java.util.Iterator $r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta r10;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r6;
        java.util.List $r1;
        java.lang.Object $r9;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r7, $r8;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r4 := @parameter0: com.google.protobuf.CodedOutputStream;

        virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int getSerializedSize()>();

        $z0 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasWaveletName()>();

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String getWaveletName()>();

        virtualinvoke r4.<com.google.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>(1, $r11);

     label1:
        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List getAppliedDeltaList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        $r9 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta) $r9;

        virtualinvoke r4.<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>(2, r10);

        goto label2;

     label3:
        $z1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasCommitNotice()>();

        if $z1 == 0 goto label4;

        $r8 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getCommitNotice()>();

        virtualinvoke r4.<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>(3, $r8);

     label4:
        $z2 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasResultingVersion()>();

        if $z2 == 0 goto label5;

        $r7 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getResultingVersion()>();

        virtualinvoke r4.<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>(4, $r7);

     label5:
        $z3 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasSnapshot()>();

        if $z3 == 0 goto label6;

        $r6 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getSnapshot()>();

        virtualinvoke r4.<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>(5, $r6);

     label6:
        $z4 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasMarker()>();

        if $z4 == 0 goto label7;

        $z6 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean getMarker()>();

        virtualinvoke r4.<com.google.protobuf.CodedOutputStream: void writeBool(int,boolean)>(6, $z6);

     label7:
        $z5 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasChannelId()>();

        if $z5 == 0 goto label8;

        $r5 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String getChannelId()>();

        virtualinvoke r4.<com.google.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>(7, $r5);

     label8:
        $r3 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        virtualinvoke $r3.<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>(r4);

        return;
    }

    public int getSerializedSize()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i12;
        java.lang.String $r4, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.google.protobuf.UnknownFieldSet $r3;
        java.util.Iterator $r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta r9;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r5;
        java.util.List $r1;
        java.lang.Object $r8;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r6, $r7;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        i9 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int memoizedSerializedSize>;

        $i12 = (int) -1;

        if i9 == $i12 goto label1;

        return i9;

     label1:
        i10 = 0;

        $z0 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasWaveletName()>();

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String getWaveletName()>();

        $i8 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeStringSize(int,java.lang.String)>(1, $r10);

        i10 = 0 + $i8;

     label2:
        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List getAppliedDeltaList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z7 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label4;

        $r8 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta) $r8;

        $i7 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>(2, r9);

        i10 = i10 + $i7;

        goto label3;

     label4:
        $z1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasCommitNotice()>();

        if $z1 == 0 goto label5;

        $r7 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getCommitNotice()>();

        $i6 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>(3, $r7);

        i10 = i10 + $i6;

     label5:
        $z2 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasResultingVersion()>();

        if $z2 == 0 goto label6;

        $r6 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getResultingVersion()>();

        $i5 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>(4, $r6);

        i10 = i10 + $i5;

     label6:
        $z3 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasSnapshot()>();

        if $z3 == 0 goto label7;

        $r5 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getSnapshot()>();

        $i4 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>(5, $r5);

        i10 = i10 + $i4;

     label7:
        $z4 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasMarker()>();

        if $z4 == 0 goto label8;

        $z6 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean getMarker()>();

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBoolSize(int,boolean)>(6, $z6);

        i10 = i10 + $i3;

     label8:
        $z5 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasChannelId()>();

        if $z5 == 0 goto label9;

        $r4 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String getChannelId()>();

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeStringSize(int,java.lang.String)>(7, $r4);

        i10 = i10 + $i1;

     label9:
        $r3 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        $i0 = virtualinvoke $r3.<com.google.protobuf.UnknownFieldSet: int getSerializedSize()>();

        $i2 = i10 + $i0;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int memoizedSerializedSize> = $i2;

        return $i2;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(com.google.protobuf.ByteString) throws com.google.protobuf.InvalidProtocolBufferException
    {
        com.google.protobuf.ByteString r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r4;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r3;
        com.google.protobuf.AbstractMessage$Builder $r2;

        r1 := @parameter0: com.google.protobuf.ByteString;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString)>(r1);

        $r3 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite) throws com.google.protobuf.InvalidProtocolBufferException
    {
        com.google.protobuf.ByteString r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r5;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r4;
        com.google.protobuf.AbstractMessage$Builder $r3;

        r1 := @parameter0: com.google.protobuf.ByteString;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder) $r3;

        $r5 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r4);

        return $r5;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(byte[]) throws com.google.protobuf.InvalidProtocolBufferException
    {
        byte[] r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r4;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r3;
        com.google.protobuf.AbstractMessage$Builder $r2;

        r1 := @parameter0: byte[];

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(byte[])>(r1);

        $r3 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite) throws com.google.protobuf.InvalidProtocolBufferException
    {
        byte[] r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r5;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r4;
        com.google.protobuf.AbstractMessage$Builder $r3;

        r1 := @parameter0: byte[];

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder) $r3;

        $r5 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r4);

        return $r5;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(java.io.InputStream) throws java.io.IOException
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r4;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r3;
        com.google.protobuf.AbstractMessage$Builder $r2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(java.io.InputStream)>(r1);

        $r3 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r5;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r4;
        com.google.protobuf.AbstractMessage$Builder $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder) $r3;

        $r5 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r4);

        return $r5;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseDelimitedFrom(java.io.InputStream) throws java.io.IOException
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0;
        java.io.InputStream r1;
        boolean $z0;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $z0 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: boolean mergeDelimitedFrom(java.io.InputStream)>(r1);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r0);

        return $r2;

     label1:
        return null;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r3;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0;
        java.io.InputStream r1;
        boolean $z0;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $z0 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: boolean mergeDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r0);

        return $r3;

     label1:
        return null;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(com.google.protobuf.CodedInputStream) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r4;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r3;
        com.google.protobuf.AbstractMessage$Builder $r2;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream)>(r1);

        $r3 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r4;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r3;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate access$7500(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder access$7600()>();

        return $r0;
    }

    public org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilderForType()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r1;

        r1 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        return $r0;
    }

    public static org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r0, $r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r1;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r0 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder mergeFrom(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate)>(r1);

        return $r2;
    }

    public org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder toBuilder()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate)>(r0);

        return $r1;
    }

    public volatile com.google.protobuf.Message$Builder toBuilder()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder toBuilder()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message$Builder newBuilderForType()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilderForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message getDefaultInstanceForType()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0, $r1;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate getDefaultInstanceForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite$Builder toBuilder()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder toBuilder()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite$Builder newBuilderForType()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate$Builder newBuilderForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getDefaultInstanceForType()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0, $r1;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate getDefaultInstanceForType()>();

        return $r1;
    }

    void <init>(org.waveprotocol.box.common.comms.WaveClientRpc$1)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$1 r1;

        r0 := @this: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$1;

        specialinvoke r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: void <init>()>();

        return;
    }

    static java.util.List access$7800(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate)
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List appliedDelta_>;

        return $r1;
    }

    static java.util.List access$7802(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r1 := @parameter1: java.util.List;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.util.List appliedDelta_> = r1;

        return r1;
    }

    static boolean access$7902(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, boolean)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasWaveletName> = z0;

        return z0;
    }

    static java.lang.String access$8002(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r1 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String waveletName_> = r1;

        return r1;
    }

    static boolean access$8102(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, boolean)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasCommitNotice> = z0;

        return z0;
    }

    static org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion access$8202(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r1 := @parameter1: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion commitNotice_> = r1;

        return r1;
    }

    static org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion access$8200(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion commitNotice_>;

        return $r1;
    }

    static boolean access$8302(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, boolean)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasResultingVersion> = z0;

        return z0;
    }

    static org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion access$8402(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r1 := @parameter1: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion resultingVersion_> = r1;

        return r1;
    }

    static org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion access$8400(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion resultingVersion_>;

        return $r1;
    }

    static boolean access$8502(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, boolean)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasSnapshot> = z0;

        return z0;
    }

    static org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot access$8602(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r1 := @parameter1: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot snapshot_> = r1;

        return r1;
    }

    static org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot access$8600(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot snapshot_>;

        return $r1;
    }

    static boolean access$8702(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, boolean)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasMarker> = z0;

        return z0;
    }

    static boolean access$8802(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, boolean)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean marker_> = z0;

        return z0;
    }

    static boolean access$8902(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, boolean)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: boolean hasChannelId> = z0;

        return z0;
    }

    static java.lang.String access$9002(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate, java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate r0;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        r1 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: java.lang.String channelId_> = r1;

        return r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate $r0, $r1;

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int CHANNEL_ID_FIELD_NUMBER> = 7;

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int MARKER_FIELD_NUMBER> = 6;

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int SNAPSHOT_FIELD_NUMBER> = 5;

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int RESULTING_VERSION_FIELD_NUMBER> = 4;

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int COMMIT_NOTICE_FIELD_NUMBER> = 3;

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int APPLIED_DELTA_FIELD_NUMBER> = 2;

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: int WAVELET_NAME_FIELD_NUMBER> = 1;

        $r0 = new org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate;

        specialinvoke $r0.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: void <init>(boolean)>(1);

        <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate defaultInstance> = $r0;

        staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc: void internalForceInit()>();

        $r1 = <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate defaultInstance>;

        specialinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolWaveletUpdate: void initFields()>();

        return;
    }
}
