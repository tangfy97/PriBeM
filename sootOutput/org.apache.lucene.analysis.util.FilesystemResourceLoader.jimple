public final class org.apache.lucene.analysis.util.FilesystemResourceLoader extends java.lang.Object implements org.apache.lucene.analysis.util.ResourceLoader
{
    private final java.io.File baseDirectory;
    private final org.apache.lucene.analysis.util.ResourceLoader delegate;

    public void <init>()
    {
        org.apache.lucene.analysis.util.FilesystemResourceLoader r0;

        r0 := @this: org.apache.lucene.analysis.util.FilesystemResourceLoader;

        specialinvoke r0.<org.apache.lucene.analysis.util.FilesystemResourceLoader: void <init>(java.io.File)>(null);

        return;
    }

    public void <init>(java.io.File)
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader $r2;
        java.io.File r1;
        org.apache.lucene.analysis.util.FilesystemResourceLoader r0;

        r0 := @this: org.apache.lucene.analysis.util.FilesystemResourceLoader;

        r1 := @parameter0: java.io.File;

        $r2 = new org.apache.lucene.analysis.util.ClasspathResourceLoader;

        specialinvoke $r2.<org.apache.lucene.analysis.util.ClasspathResourceLoader: void <init>()>();

        specialinvoke r0.<org.apache.lucene.analysis.util.FilesystemResourceLoader: void <init>(java.io.File,org.apache.lucene.analysis.util.ResourceLoader)>(r1, $r2);

        return;
    }

    public void <init>(java.io.File, org.apache.lucene.analysis.util.ResourceLoader)
    {
        org.apache.lucene.analysis.util.ResourceLoader r2;
        java.lang.IllegalArgumentException $r3, $r4;
        java.io.File r1;
        org.apache.lucene.analysis.util.FilesystemResourceLoader r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.FilesystemResourceLoader;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.lucene.analysis.util.ResourceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("baseDirectory is not a directory or null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("delegate ResourceLoader may not be null");

        throw $r3;

     label2:
        r0.<org.apache.lucene.analysis.util.FilesystemResourceLoader: java.io.File baseDirectory> = r1;

        r0.<org.apache.lucene.analysis.util.FilesystemResourceLoader: org.apache.lucene.analysis.util.ResourceLoader delegate> = r2;

        return;
    }

    public java.io.InputStream openResource(java.lang.String) throws java.io.IOException
    {
        java.io.FileInputStream $r10;
        java.io.File $r0, $r3, $r4, $r5, r9;
        java.io.FileNotFoundException $r6;
        org.apache.lucene.analysis.util.ResourceLoader $r7;
        java.lang.String r1;
        org.apache.lucene.analysis.util.FilesystemResourceLoader r2;
        boolean $z0;
        java.io.InputStream $r8;

        r2 := @this: org.apache.lucene.analysis.util.FilesystemResourceLoader;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        r9 = $r0;

        $r3 = r2.<org.apache.lucene.analysis.util.FilesystemResourceLoader: java.io.File baseDirectory>;

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r0.<java.io.File: boolean isAbsolute()>();

        if $z0 != 0 goto label2;

        $r4 = new java.io.File;

        $r5 = r2.<org.apache.lucene.analysis.util.FilesystemResourceLoader: java.io.File baseDirectory>;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r1);

        r9 = $r4;

     label2:
        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r9);

     label3:
        return $r10;

     label4:
        $r6 := @caughtexception;

        $r7 = r2.<org.apache.lucene.analysis.util.FilesystemResourceLoader: org.apache.lucene.analysis.util.ResourceLoader delegate>;

        $r8 = interfaceinvoke $r7.<org.apache.lucene.analysis.util.ResourceLoader: java.io.InputStream openResource(java.lang.String)>(r1);

        return $r8;

        catch java.io.FileNotFoundException from label1 to label3 with label4;
    }

    public java.lang.Object newInstance(java.lang.String, java.lang.Class)
    {
        org.apache.lucene.analysis.util.ResourceLoader $r3;
        java.lang.Class r2;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.lucene.analysis.util.FilesystemResourceLoader r0;

        r0 := @this: org.apache.lucene.analysis.util.FilesystemResourceLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.lucene.analysis.util.FilesystemResourceLoader: org.apache.lucene.analysis.util.ResourceLoader delegate>;

        $r4 = interfaceinvoke $r3.<org.apache.lucene.analysis.util.ResourceLoader: java.lang.Object newInstance(java.lang.String,java.lang.Class)>(r1, r2);

        return $r4;
    }

    public java.lang.Class findClass(java.lang.String, java.lang.Class)
    {
        org.apache.lucene.analysis.util.ResourceLoader $r3;
        java.lang.Class r2, $r4;
        java.lang.String r1;
        org.apache.lucene.analysis.util.FilesystemResourceLoader r0;

        r0 := @this: org.apache.lucene.analysis.util.FilesystemResourceLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.lucene.analysis.util.FilesystemResourceLoader: org.apache.lucene.analysis.util.ResourceLoader delegate>;

        $r4 = interfaceinvoke $r3.<org.apache.lucene.analysis.util.ResourceLoader: java.lang.Class findClass(java.lang.String,java.lang.Class)>(r1, r2);

        return $r4;
    }
}
