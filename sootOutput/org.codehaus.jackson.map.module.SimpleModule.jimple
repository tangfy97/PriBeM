public class org.codehaus.jackson.map.module.SimpleModule extends org.codehaus.jackson.map.Module
{
    protected final java.lang.String _name;
    protected final org.codehaus.jackson.Version _version;
    protected org.codehaus.jackson.map.module.SimpleSerializers _serializers;
    protected org.codehaus.jackson.map.module.SimpleDeserializers _deserializers;
    protected org.codehaus.jackson.map.module.SimpleSerializers _keySerializers;
    protected org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers;
    protected org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes;
    protected org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators;
    protected java.util.HashMap _mixins;

    public void <init>(java.lang.String, org.codehaus.jackson.Version)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        java.lang.String r1;
        org.codehaus.jackson.Version r2;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.jackson.Version;

        specialinvoke r0.<org.codehaus.jackson.map.Module: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers> = null;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleDeserializers _deserializers> = null;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _keySerializers> = null;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers> = null;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes> = null;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators> = null;

        r0.<org.codehaus.jackson.map.module.SimpleModule: java.util.HashMap _mixins> = null;

        r0.<org.codehaus.jackson.map.module.SimpleModule: java.lang.String _name> = r1;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.Version _version> = r2;

        return;
    }

    public void setSerializers(org.codehaus.jackson.map.module.SimpleSerializers)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleSerializers r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r1 := @parameter0: org.codehaus.jackson.map.module.SimpleSerializers;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers> = r1;

        return;
    }

    public void setDeserializers(org.codehaus.jackson.map.module.SimpleDeserializers)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleDeserializers r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r1 := @parameter0: org.codehaus.jackson.map.module.SimpleDeserializers;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleDeserializers _deserializers> = r1;

        return;
    }

    public void setKeySerializers(org.codehaus.jackson.map.module.SimpleSerializers)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleSerializers r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r1 := @parameter0: org.codehaus.jackson.map.module.SimpleSerializers;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _keySerializers> = r1;

        return;
    }

    public void setKeyDeserializers(org.codehaus.jackson.map.module.SimpleKeyDeserializers)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleKeyDeserializers r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r1 := @parameter0: org.codehaus.jackson.map.module.SimpleKeyDeserializers;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers> = r1;

        return;
    }

    public void setAbstractTypes(org.codehaus.jackson.map.module.SimpleAbstractTypeResolver)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleAbstractTypeResolver r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r1 := @parameter0: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes> = r1;

        return;
    }

    public void setValueInstantiators(org.codehaus.jackson.map.module.SimpleValueInstantiators)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleValueInstantiators r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r1 := @parameter0: org.codehaus.jackson.map.module.SimpleValueInstantiators;

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators> = r1;

        return;
    }

    public org.codehaus.jackson.map.module.SimpleModule addSerializer(org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleSerializers $r1, $r3, $r4;
        org.codehaus.jackson.map.JsonSerializer r2;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: org.codehaus.jackson.map.JsonSerializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers>;

        if $r1 != null goto label1;

        $r4 = new org.codehaus.jackson.map.module.SimpleSerializers;

        specialinvoke $r4.<org.codehaus.jackson.map.module.SimpleSerializers: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers> = $r4;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers>;

        virtualinvoke $r3.<org.codehaus.jackson.map.module.SimpleSerializers: void addSerializer(org.codehaus.jackson.map.JsonSerializer)>(r2);

        return r0;
    }

    public org.codehaus.jackson.map.module.SimpleModule addSerializer(java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleSerializers $r1, $r4, $r5;
        java.lang.Class r2;
        org.codehaus.jackson.map.JsonSerializer r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers>;

        if $r1 != null goto label1;

        $r5 = new org.codehaus.jackson.map.module.SimpleSerializers;

        specialinvoke $r5.<org.codehaus.jackson.map.module.SimpleSerializers: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers> = $r5;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers>;

        virtualinvoke $r4.<org.codehaus.jackson.map.module.SimpleSerializers: void addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>(r2, r3);

        return r0;
    }

    public org.codehaus.jackson.map.module.SimpleModule addKeySerializer(java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleSerializers $r1, $r4, $r5;
        java.lang.Class r2;
        org.codehaus.jackson.map.JsonSerializer r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _keySerializers>;

        if $r1 != null goto label1;

        $r5 = new org.codehaus.jackson.map.module.SimpleSerializers;

        specialinvoke $r5.<org.codehaus.jackson.map.module.SimpleSerializers: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _keySerializers> = $r5;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _keySerializers>;

        virtualinvoke $r4.<org.codehaus.jackson.map.module.SimpleSerializers: void addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>(r2, r3);

        return r0;
    }

    public org.codehaus.jackson.map.module.SimpleModule addDeserializer(java.lang.Class, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleDeserializers $r1, $r4, $r5;
        java.lang.Class r2;
        org.codehaus.jackson.map.JsonDeserializer r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleDeserializers _deserializers>;

        if $r1 != null goto label1;

        $r5 = new org.codehaus.jackson.map.module.SimpleDeserializers;

        specialinvoke $r5.<org.codehaus.jackson.map.module.SimpleDeserializers: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleDeserializers _deserializers> = $r5;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleDeserializers _deserializers>;

        virtualinvoke $r4.<org.codehaus.jackson.map.module.SimpleDeserializers: void addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>(r2, r3);

        return r0;
    }

    public org.codehaus.jackson.map.module.SimpleModule addKeyDeserializer(java.lang.Class, org.codehaus.jackson.map.KeyDeserializer)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.KeyDeserializer r3;
        java.lang.Class r2;
        org.codehaus.jackson.map.module.SimpleKeyDeserializers $r1, $r4, $r5;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.codehaus.jackson.map.KeyDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers>;

        if $r1 != null goto label1;

        $r5 = new org.codehaus.jackson.map.module.SimpleKeyDeserializers;

        specialinvoke $r5.<org.codehaus.jackson.map.module.SimpleKeyDeserializers: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers> = $r5;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers>;

        virtualinvoke $r4.<org.codehaus.jackson.map.module.SimpleKeyDeserializers: org.codehaus.jackson.map.module.SimpleKeyDeserializers addDeserializer(java.lang.Class,org.codehaus.jackson.map.KeyDeserializer)>(r2, r3);

        return r0;
    }

    public org.codehaus.jackson.map.module.SimpleModule addAbstractTypeMapping(java.lang.Class, java.lang.Class)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleAbstractTypeResolver $r1, $r4, $r5, $r6;
        java.lang.Class r2, r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes>;

        if $r1 != null goto label1;

        $r6 = new org.codehaus.jackson.map.module.SimpleAbstractTypeResolver;

        specialinvoke $r6.<org.codehaus.jackson.map.module.SimpleAbstractTypeResolver: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes> = $r6;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.module.SimpleAbstractTypeResolver: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver addMapping(java.lang.Class,java.lang.Class)>(r2, r3);

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes> = $r5;

        return r0;
    }

    public org.codehaus.jackson.map.module.SimpleModule addValueInstantiator(java.lang.Class, org.codehaus.jackson.map.deser.ValueInstantiator)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.module.SimpleValueInstantiators $r1, $r4, $r5, $r6;
        java.lang.Class r2;
        org.codehaus.jackson.map.deser.ValueInstantiator r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.codehaus.jackson.map.deser.ValueInstantiator;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators>;

        if $r1 != null goto label1;

        $r6 = new org.codehaus.jackson.map.module.SimpleValueInstantiators;

        specialinvoke $r6.<org.codehaus.jackson.map.module.SimpleValueInstantiators: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators> = $r6;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.module.SimpleValueInstantiators: org.codehaus.jackson.map.module.SimpleValueInstantiators addValueInstantiator(java.lang.Class,org.codehaus.jackson.map.deser.ValueInstantiator)>(r2, r3);

        r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators> = $r5;

        return r0;
    }

    public org.codehaus.jackson.map.module.SimpleModule setMixInAnnotation(java.lang.Class, java.lang.Class)
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        java.util.HashMap $r1, $r4, $r5;
        java.lang.Class r2, r3;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: java.util.HashMap _mixins>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.module.SimpleModule: java.util.HashMap _mixins> = $r5;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: java.util.HashMap _mixins>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return r0;
    }

    public java.lang.String getModuleName()
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: java.lang.String _name>;

        return $r1;
    }

    public void setupModule(org.codehaus.jackson.map.Module$SetupContext)
    {
        org.codehaus.jackson.map.module.SimpleAbstractTypeResolver $r5, $r19;
        java.util.HashMap $r7, $r8;
        org.codehaus.jackson.map.module.SimpleDeserializers $r2, $r22;
        org.codehaus.jackson.map.module.SimpleValueInstantiators $r6, $r18;
        boolean $z0;
        java.util.Map$Entry r12;
        java.util.Iterator $r10;
        java.util.Set $r9;
        org.codehaus.jackson.map.module.SimpleKeyDeserializers $r4, $r20;
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.map.Module$SetupContext r13;
        org.codehaus.jackson.map.module.SimpleSerializers $r1, $r3, $r21, $r23;
        java.lang.Object $r11, $r14, $r16;
        java.lang.Class $r15, $r17;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        r13 := @parameter0: org.codehaus.jackson.map.Module$SetupContext;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers>;

        if $r1 == null goto label1;

        $r23 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _serializers>;

        interfaceinvoke r13.<org.codehaus.jackson.map.Module$SetupContext: void addSerializers(org.codehaus.jackson.map.Serializers)>($r23);

     label1:
        $r2 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleDeserializers _deserializers>;

        if $r2 == null goto label2;

        $r22 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleDeserializers _deserializers>;

        interfaceinvoke r13.<org.codehaus.jackson.map.Module$SetupContext: void addDeserializers(org.codehaus.jackson.map.Deserializers)>($r22);

     label2:
        $r3 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _keySerializers>;

        if $r3 == null goto label3;

        $r21 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleSerializers _keySerializers>;

        interfaceinvoke r13.<org.codehaus.jackson.map.Module$SetupContext: void addKeySerializers(org.codehaus.jackson.map.Serializers)>($r21);

     label3:
        $r4 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers>;

        if $r4 == null goto label4;

        $r20 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers>;

        interfaceinvoke r13.<org.codehaus.jackson.map.Module$SetupContext: void addKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers)>($r20);

     label4:
        $r5 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes>;

        if $r5 == null goto label5;

        $r19 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes>;

        interfaceinvoke r13.<org.codehaus.jackson.map.Module$SetupContext: void addAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)>($r19);

     label5:
        $r6 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators>;

        if $r6 == null goto label6;

        $r18 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators>;

        interfaceinvoke r13.<org.codehaus.jackson.map.Module$SetupContext: void addValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators)>($r18);

     label6:
        $r7 = r0.<org.codehaus.jackson.map.module.SimpleModule: java.util.HashMap _mixins>;

        if $r7 == null goto label8;

        $r8 = r0.<org.codehaus.jackson.map.module.SimpleModule: java.util.HashMap _mixins>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r14 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.Class) $r14;

        $r16 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.lang.Class) $r16;

        interfaceinvoke r13.<org.codehaus.jackson.map.Module$SetupContext: void setMixInAnnotations(java.lang.Class,java.lang.Class)>($r15, $r17);

        goto label7;

     label8:
        return;
    }

    public org.codehaus.jackson.Version version()
    {
        org.codehaus.jackson.map.module.SimpleModule r0;
        org.codehaus.jackson.Version $r1;

        r0 := @this: org.codehaus.jackson.map.module.SimpleModule;

        $r1 = r0.<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.Version _version>;

        return $r1;
    }
}
