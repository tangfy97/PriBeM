final class org.codehaus.groovy.runtime.DefaultGroovyMethods$13 extends java.lang.Object implements java.util.Iterator
{
    java.lang.Byte nextVal;
    boolean nextMustRead;
    boolean hasNext;
    private final java.io.DataInputStream val$self;

    void <init>(java.io.DataInputStream)
    {
        java.io.DataInputStream r1;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$13 r0;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$13;

        r1 := @parameter0: java.io.DataInputStream;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: java.io.DataInputStream val$self> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean nextMustRead> = 1;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean hasNext> = 1;

        return;
    }

    public boolean hasNext()
    {
        java.io.DataInputStream $r1;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$13 r0;
        java.io.IOException $r3;
        byte $b0;
        java.lang.Byte $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$13;

        $z0 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean nextMustRead>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean hasNext>;

        if $z1 == 0 goto label4;

     label1:
        $r1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: java.io.DataInputStream val$self>;

        $b0 = virtualinvoke $r1.<java.io.DataInputStream: byte readByte()>();

        $r2 = new java.lang.Byte;

        specialinvoke $r2.<java.lang.Byte: void <init>(byte)>($b0);

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: java.lang.Byte nextVal> = $r2;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean nextMustRead> = 0;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean hasNext> = 0;

     label4:
        $z2 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean hasNext>;

        return $z2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.Object next()
    {
        java.io.DataInputStream $r1;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$13 r0;
        byte $b0;
        java.io.IOException $r3;
        java.lang.Byte $r2, r4;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$13;

        r4 = null;

        $z0 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean nextMustRead>;

        if $z0 == 0 goto label4;

     label1:
        $r1 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: java.io.DataInputStream val$self>;

        $b0 = virtualinvoke $r1.<java.io.DataInputStream: byte readByte()>();

        $r2 = new java.lang.Byte;

        specialinvoke $r2.<java.lang.Byte: void <init>(byte)>($b0);

        r4 = $r2;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean hasNext> = 0;

        goto label5;

     label4:
        r4 = r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: java.lang.Byte nextVal>;

     label5:
        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$13: boolean nextMustRead> = 1;

        return r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.codehaus.groovy.runtime.DefaultGroovyMethods$13 r1;

        r1 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$13;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot remove() from an InputStream Iterator");

        throw $r0;
    }
}
