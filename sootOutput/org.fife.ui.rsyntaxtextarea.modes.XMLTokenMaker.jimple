public class org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker extends org.fife.ui.rsyntaxtextarea.modes.AbstractMarkupTokenMaker
{
    public static final int YYEOF;
    public static final int INTAG;
    public static final int DTD;
    public static final int INATTR_DOUBLE;
    public static final int YYINITIAL;
    public static final int COMMENT;
    public static final int CDATA;
    public static final int INATTR_SINGLE;
    public static final int PI;
    private static final java.lang.String ZZ_CMAP_PACKED;
    private static final char[] ZZ_CMAP;
    private static final int[] ZZ_ACTION;
    private static final java.lang.String ZZ_ACTION_PACKED_0;
    private static final int[] ZZ_ROWMAP;
    private static final java.lang.String ZZ_ROWMAP_PACKED_0;
    private static final int[] ZZ_TRANS;
    private static final java.lang.String ZZ_TRANS_PACKED_0;
    private static final int ZZ_UNKNOWN_ERROR;
    private static final int ZZ_NO_MATCH;
    private static final int ZZ_PUSHBACK_2BIG;
    private static final java.lang.String[] ZZ_ERROR_MSG;
    private static final int[] ZZ_ATTRIBUTE;
    private static final java.lang.String ZZ_ATTRIBUTE_PACKED_0;
    private java.io.Reader zzReader;
    private int zzState;
    private int zzLexicalState;
    private char[] zzBuffer;
    private int zzMarkedPos;
    private int zzCurrentPos;
    private int zzStartRead;
    private int zzEndRead;
    private boolean zzAtEOF;
    public static final int INTERNAL_ATTR_DOUBLE;
    public static final int INTERNAL_ATTR_SINGLE;
    public static final int INTERNAL_INTAG;
    public static final int INTERNAL_DTD;
    public static final int INTERNAL_DTD_INTERNAL;
    public static final int INTERNAL_IN_XML_COMMENT;
    private static boolean completeCloseTags;
    private boolean inInternalDtd;
    private int prevState;

    private static int[] zzUnpackAction()
    {
        int[] r0;

        r0 = newarray (int)[77];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzUnpackAction(java.lang.String,int,int[])>("\u0005\u0000\u0002\u0001\u0001\u0000\u0002\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0001\u0006\u0002\u0001\u0001\u0007\u0004\u0001\u0001\u0008\u0002\u0001\u0001\t\u0001\u0001\u0001\n\u0001\u000b\u0001\f\u0002\r\u0001\u000e\u0001\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0001\u0001\u0013\u0003\u0001\u0001\u0014\u0001\u0015\u0001\u0004\u0001\u0016\u0001\u0006\u0005\u0000\u0001\u0017\u0004\u0000\u0001\u0018\u0001\u0019\u0005\u0000\u0001\u001a\u0001\u001b\u0003\u0000\u0001\u001c\u0001\u001d\u0006\u0000\u0001\u001e", 0, r0);

        return r0;
    }

    private static int zzUnpackAction(java.lang.String, int, int[])
    {
        char $c2, $c8;
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, $i9, $i10, $i12;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i9 = (int) $c8;

        i7 = $i9;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        $i10 = (int) $c2;

        r1[$i3] = $i10;

        $i12 = (int) -1;

        i7 = i7 + $i12;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    private static int[] zzUnpackRowMap()
    {
        int[] r0;

        r0 = newarray (int)[77];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzUnpackRowMap(java.lang.String,int,int[])>("\u0000\u0000\u0000%\u0000J\u0000o\u0000\u0094\u0000\u00b9\u0000\u00de\u0000\u0103\u0000\u0128\u0000\u014d\u0000\u0172\u0000\u0197\u0000\u01bc\u0000\u01e1\u0000\u0206\u0000\u022b\u0000\u0172\u0000\u0250\u0000\u0275\u0000\u029a\u0000\u02bf\u0000\u0172\u0000\u02e4\u0000\u0309\u0000\u0172\u0000\u032e\u0000\u0172\u0000\u0172\u0000\u0172\u0000\u0353\u0000\u0378\u0000\u0172\u0000\u0172\u0000\u039d\u0000\u0172\u0000\u0172\u0000\u03c2\u0000\u0172\u0000\u03e7\u0000\u040c\u0000\u0431\u0000\u0456\u0000\u047b\u0000\u04a0\u0000\u0172\u0000\u0172\u0000\u04c5\u0000\u04ea\u0000\u050f\u0000\u0534\u0000\u0559\u0000\u0172\u0000\u057e\u0000\u05a3\u0000\u05c8\u0000\u05ed\u0000\u0612\u0000\u0172\u0000\u0637\u0000\u065c\u0000\u0681\u0000\u06a6\u0000\u06cb\u0000\u0172\u0000\u0172\u0000\u06f0\u0000\u0715\u0000\u073a\u0000\u075f\u0000\u0172\u0000\u0784\u0000\u07a9\u0000\u075f\u0000\u07ce\u0000\u07f3\u0000\u0818\u0000\u0172", 0, r0);

        return r0;
    }

    private static int zzUnpackRowMap(java.lang.String, int, int[])
    {
        char $c2, $c5;
        int[] r1;
        int i0, $i1, i3, $i4, $i6, i7, i8, i9, $i10, $i11;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i7 = 0;

        i8 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i7 >= $i1 goto label2;

        i9 = i7 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i10 = (int) $c2;

        i3 = $i10 << 16;

        $i4 = i8;

        i8 = i8 + 1;

        i7 = i9 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        $i11 = (int) $c5;

        $i6 = i3 | $i11;

        r1[$i4] = $i6;

        goto label1;

     label2:
        return i8;
    }

    private static int[] zzUnpackTrans()
    {
        int[] r0;

        r0 = newarray (int)[2109];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzUnpackTrans(java.lang.String,int,int[])>("\u0003\t\u0001\n\u0001\u000b\u0001\f\u0001\r\u0001\u000e\u001d\t\u0002\u000f\u0001\u0010\u0001\u000f\u0001\u0011\u0014\u000f\u0001\u0012\u0003\u000f\u0001\u0013\u0003\u000f\u0001\u0014\u0003\u000f\u0004\u0015\u0001\u0016\u001e\u0015\u0001\u0017\u0001\u0015\u0004\u0018\u0001\u0019\u0001\u001a\u0005\u0018\u0001\u001b\u0004\u0018\u0001\u001c\u0001\u001d\u0013\u0018\u0003\u001e\u0001\u001f\u0001\u0000\u0001\u001e\u0001\r\u0002\u001e\u0001 \u0007\u001e\u0001!\u0002\u001e\u0001\"\u0001#\u000e\u001e\u0001$\t%\u0001&\u001b%\u0015\'\u0001&\u000f\'\u0010(\u0001)\u0014(\u0004\t\u0004\u0000 \t\u0001\n\u0002\u0000\u0001\r\u0001\u0000\u001d\t&\u0000\u0001*\u0008\u0000\u0001+\u0001\u0000\u0004*\u0003\u0000\u0001*\u0001,\u0001\u0000\u0001*\u0002\u0000\t*\u0001\u0000\u0001-\u0004\u0000\u0001\r\u0002\u0000\u0001\r\u001e\u0000\u0006\u000e\u0001\u0000\u0001\u000e\u0001.\u001c\u000e\u0002\u000f\u0001\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0003\u000f\u0001\u0000\u0003\u000f\u0001\u0000\u0003\u000f\u0002\u0000\u0001/<\u0000\u00010$\u0000\u00011\u0003\u0000\u00012\'\u0000\u00013\u0003\u0000\u0004\u0015\u0001\u0000\u001e\u0015\u0001\u0000\u0001\u0015\u0011\u0000\u00014\u0013\u0000\u0004\u0018\u0002\u0000\u0005\u0018\u0001\u0000\u0004\u0018\u0002\u0000\u0013\u0018\n\u0000\u00015\u001a\u0000\u0004\u001e\u0001\u0000\u0001\u001e\u0001\u0000\u0002\u001e\u0001\u0000\u0007\u001e\u0001\u0000\u0002\u001e\u0002\u0000\u000e\u001e\u0001\u0000\u0003\u001e\u0001\u001f\u0001\u0000\u0001\u001e\u0001\r\u0002\u001e\u0001\u0000\u0007\u001e\u0001\u0000\u0002\u001e\u0002\u0000\u000e\u001e\u0012\u0000\u0001!\u0013\u0000\t%\u0001\u0000\u001b%\u0015\'\u0001\u0000\u000f\'\u0010(\u0001\u0000\u0014(\u0010\u0000\u00016\u0015\u0000\u0002*\t\u0000\u0004*\u0003\u0000\u0001*\u0002\u0000\u0002*\u0001\u0000\n*\u0004\u0000\u00017\u0008\u0000\u00018\u001a\u0000\u00019\n\u0000\u00049\u0003\u0000\u00019\u0002\u0000\u00019\u0002\u0000\t9\u0014\u0000\u0001:-\u0000\u0001;%\u0000\u0001<(\u0000\u0001=&\u0000\u0001>\u0005\u0000\u0001?3\u0000\u0001@\u0015\u0000\u0001A.\u0000\u0001B\u0019\u0000\u00029\t\u0000\u00049\u0003\u0000\u00019\u0002\u0000\u00029\u0001\u0000\n9\u001d\u0000\u0001C\u001c\u0000\u0001D1\u0000\u0001<&\u0000\u0001E\u0004\u0000\u0001F/\u0000\u0001G*\u0000\u0001D\u0008\u0000\u0001<\u001c\u0000\u0001H\u0011\u0000\u0002I\u0004\u0000\u0002I\u0001\u0000\u0002I\u0004E\u0001I\u0001\u0000\u0002I\u0001E\u0001I\fE\u0003I\u000e\u0000\u0001J*\u0000\u0001E\u001f\u0000\u0001K#\u0000\u0001L!\u0000\u0001M\u0019\u0000", 0, r0);

        return r0;
    }

    private static int zzUnpackTrans(java.lang.String, int, int[])
    {
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, i8, $i10, $i11, $i13, $i15;
        java.lang.String r0;
        char $c2, $c9;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i10 = (int) $c9;

        i7 = $i10;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i11 = (int) $c2;

        $i13 = (int) -1;

        i8 = $i11 + $i13;

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        r1[$i3] = i8;

        $i15 = (int) -1;

        i7 = i7 + $i15;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    private static int[] zzUnpackAttribute()
    {
        int[] r0;

        r0 = newarray (int)[77];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzUnpackAttribute(java.lang.String,int,int[])>("\u0005\u0000\u0002\u0001\u0001\u0000\u0002\u0001\u0001\t\u0005\u0001\u0001\t\u0004\u0001\u0001\t\u0002\u0001\u0001\t\u0001\u0001\u0003\t\u0002\u0001\u0002\t\u0001\u0001\u0002\t\u0001\u0001\u0001\t\u0006\u0001\u0002\t\u0005\u0000\u0001\t\u0004\u0000\u0001\u0001\u0001\t\u0005\u0000\u0002\t\u0003\u0000\u0001\u0001\u0001\t\u0006\u0000\u0001\t", 0, r0);

        return r0;
    }

    private static int zzUnpackAttribute(java.lang.String, int, int[])
    {
        char $c2, $c8;
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, $i9, $i10, $i12;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i9 = (int) $c8;

        i7 = $i9;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        $i10 = (int) $c2;

        r1[$i3] = $i10;

        $i12 = (int) -1;

        i7 = i7 + $i12;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.AbstractMarkupTokenMaker: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState> = 0;

        return;
    }

    private void addEndToken(int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int i0, $i1, $i2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i2, $i1, i0);

        return;
    }

    private void addHyperlinkToken(int, int, int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int i0, $i1, i2, i3, i4;
        char[] $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int offsetShift>;

        i2 = i0 + $i1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzBuffer>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(char[],int,int,int,int,boolean)>($r1, i0, i3, i4, i2, 1);

        return;
    }

    private void addToken(int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int $i0, i1, $i2, $i3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i1 := @parameter0: int;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i2 = $i0 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i3, $i2, i1);

        return;
    }

    private void addToken(int, int, int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int i0, $i1, i2, i3, i4;
        char[] $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int offsetShift>;

        i2 = i0 + $i1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzBuffer>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(char[],int,int,int,int)>($r1, i0, i3, i4, i2);

        return;
    }

    public void addToken(char[], int, int, int, int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int i0, i1, i2, i3, $i4;
        char[] r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.AbstractMarkupTokenMaker: void addToken(char[],int,int,int,int)>(r1, i0, i1, i2, i3);

        $i4 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead> = $i4;

        return;
    }

    public boolean getCompleteCloseTags()
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        $z0 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean completeCloseTags>;

        return $z0;
    }

    public static boolean getCompleteCloseMarkupTags()
    {
        boolean $z0;

        $z0 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean completeCloseTags>;

        return $z0;
    }

    public boolean getMarkOccurrencesOfTokenType(int)
    {
        int i0;
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

        return 0;
    }

    public org.fife.ui.rsyntaxtextarea.Token getTokenList(javax.swing.text.Segment, int, int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        byte b9;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i10, $i11, $i13, $i15;
        org.fife.ui.rsyntaxtextarea.DefaultToken $r6;
        java.io.IOException $r2;
        java.io.Reader $r4;
        javax.swing.text.Segment r1;
        org.fife.ui.rsyntaxtextarea.Token $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        r1 := @parameter0: javax.swing.text.Segment;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void resetTokenList()>();

        $i0 = r1.<javax.swing.text.Segment: int offset>;

        $i2 = neg $i0;

        $i3 = $i2 + i1;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int offsetShift> = $i3;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int prevState> = 0;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd> = 0;

        lookupswitch(i4)
        {
            case -5: goto label03;
            case -4: goto label02;
            case -3: goto label07;
            case -2: goto label05;
            case -1: goto label04;
            case 2: goto label01;
            case 29: goto label06;
            case 30: goto label08;
            default: goto label09;
        };

     label01:
        b9 = 1;

        goto label12;

     label02:
        b9 = 3;

        goto label12;

     label03:
        b9 = 3;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd> = 1;

        goto label12;

     label04:
        b9 = 5;

        goto label12;

     label05:
        b9 = 6;

        goto label12;

     label06:
        b9 = 2;

        goto label12;

     label07:
        b9 = 4;

        goto label12;

     label08:
        b9 = 7;

        goto label12;

     label09:
        $i13 = (int) -1024;

        if i4 >= $i13 goto label11;

        $i5 = neg i4;

        $i15 = (int) -256;

        $i6 = $i5 & $i15;

        i10 = neg $i6;

        lookupswitch(i10)
        {
            case -2048: goto label10;
            default: goto label10;
        };

     label10:
        b9 = 1;

        $i7 = neg i4;

        $i8 = $i7 & 255;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int prevState> = $i8;

        goto label12;

     label11:
        b9 = 0;

     label12:
        $i11 = r1.<javax.swing.text.Segment: int offset>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i11;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: javax.swing.text.Segment s> = r1;

     label13:
        $r4 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.io.Reader zzReader>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yyreset(java.io.Reader)>($r4);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(b9);

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token yylex()>();

     label14:
        return $r5;

     label15:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

        $r6 = new org.fife.ui.rsyntaxtextarea.DefaultToken;

        specialinvoke $r6.<org.fife.ui.rsyntaxtextarea.DefaultToken: void <init>()>();

        return $r6;

        catch java.io.IOException from label13 to label14 with label15;
    }

    public static void setCompleteCloseTags(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean completeCloseTags> = z0;

        return;
    }

    private boolean zzRefill()
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int $i0, $i1, $i2, $i3;
        javax.swing.text.Segment $r1, $r2;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzCurrentPos>;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: javax.swing.text.Segment s>;

        $i1 = $r1.<javax.swing.text.Segment: int offset>;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: javax.swing.text.Segment s>;

        $i0 = $r2.<javax.swing.text.Segment: int count>;

        $i2 = $i1 + $i0;

        if $i3 < $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void yyreset(java.io.Reader)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        java.io.Reader r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r2;
        javax.swing.text.Segment $r1, $r3, $r4, $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        r6 := @parameter0: java.io.Reader;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: javax.swing.text.Segment s>;

        $r2 = $r1.<javax.swing.text.Segment: char[] array>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzBuffer> = $r2;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: javax.swing.text.Segment s>;

        $i0 = $r3.<javax.swing.text.Segment: int offset>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead> = $i0;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: javax.swing.text.Segment s>;

        $i1 = $r4.<javax.swing.text.Segment: int count>;

        $i3 = $i2 + $i1;

        $i4 = $i3 - 1;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzEndRead> = $i4;

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: javax.swing.text.Segment s>;

        $i5 = $r5.<javax.swing.text.Segment: int offset>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos> = $i5;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzCurrentPos> = $i5;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState> = 0;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.io.Reader zzReader> = r6;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean zzAtEOF> = 0;

        return;
    }

    public void <init>(java.io.Reader)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        java.io.Reader r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.AbstractMarkupTokenMaker: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState> = 0;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.io.Reader zzReader> = r1;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void <init>(java.io.Reader)>($r1);

        return;
    }

    private static char[] zzUnpackCMap(java.lang.String)
    {
        char $c0, $c6;
        int $i1, i2, i3, i4, i5, $i7, $i9;
        char[] r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r0 = newarray (char)[65536];

        i2 = 0;

        i3 = 0;

     label1:
        if i2 >= 116 goto label3;

        i4 = i2 + 1;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i7 = (int) $c6;

        i5 = $i7;

        i2 = i4 + 1;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

     label2:
        $i1 = i3;

        i3 = i3 + 1;

        r0[$i1] = $c0;

        $i9 = (int) -1;

        i5 = i5 + $i9;

        if i5 > 0 goto label2;

        goto label1;

     label3:
        return r0;
    }

    public final void yyclose() throws java.io.IOException
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int $i0;
        java.io.Reader $r1, $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean zzAtEOF> = 1;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzEndRead> = $i0;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.io.Reader zzReader>;

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.io.Reader zzReader>;

        virtualinvoke $r2.<java.io.Reader: void close()>();

     label1:
        return;
    }

    public final int yystate()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState>;

        return $i0;
    }

    public final void yybegin(int)
    {
        int i0;
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState> = i0;

        return;
    }

    public final java.lang.String yytext()
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r1;
        int $i0, $i1, $i2, $i3;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        $r0 = new java.lang.String;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzBuffer>;

        $i3 = r1.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i1 = r1.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i2 = $i1 - $i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, $i2);

        return $r0;
    }

    public final char yycharat(int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int i0, $i1, $i2;
        char[] $r1;
        char $c3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzBuffer>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i2 = $i1 + i0;

        $c3 = $r1[$i2];

        return $c3;
    }

    public final int yylength()
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int $i0, $i1, $i2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    private void zzScanError(int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r4;
        int i0;
        java.lang.Error $r1;
        java.lang.String[] $r0, $r3;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.String r5;

        r4 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

     label1:
        $r0 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String[] ZZ_ERROR_MSG>;

        r5 = $r0[i0];

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String[] ZZ_ERROR_MSG>;

        r5 = $r3[0];

     label4:
        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>(r5);

        throw $r1;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void yypushback(int)
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int yylength()>();

        if i0 <= $i1 goto label1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void zzScanError(int)>(2);

     label1:
        $i2 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i3 = $i2 - i0;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos> = $i3;

        return;
    }

    public org.fife.ui.rsyntaxtextarea.Token yylex() throws java.io.IOException
    {
        org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker r0;
        byte $b112, $b115;
        org.fife.ui.rsyntaxtextarea.Token $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int[] r2, r3, r4, $r5;
        int $i0, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, i101, $i102, i103, i104, i105, $i106, i107, i108, $i109, i110, i111, i113, i114, $i117, $i118, $i120, $i121, $i123, $i125, $i127, $i128, $i130, $i132, $i134;
        char[] r1, r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        char $c1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker;

        i101 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzEndRead>;

        r18 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzBuffer>;

        r1 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] ZZ_CMAP>;

        r2 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_TRANS>;

        r3 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_ROWMAP>;

        r4 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_ATTRIBUTE>;

     label01:
        $i102 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        i103 = $i102;

        $i117 = (int) -1;

        i104 = $i117;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead> = $i102;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzCurrentPos> = $i102;

        i105 = $i102;

        $i106 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzState> = $i106;

     label02:
        if i105 >= i101 goto label03;

        $i99 = i105;

        i105 = i105 + 1;

        i107 = r18[$i99];

        goto label06;

     label03:
        $z0 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean zzAtEOF>;

        if $z0 == 0 goto label04;

        i107 = -1;

        goto label09;

     label04:
        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzCurrentPos> = i105;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos> = i103;

        $z1 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean zzRefill()>();

        i108 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzCurrentPos>;

        i103 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        r18 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzBuffer>;

        i101 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzEndRead>;

        if $z1 == 0 goto label05;

        i107 = -1;

        goto label09;

     label05:
        i105 = i108 + 1;

        i107 = r18[i108];

     label06:
        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzState>;

        $i2 = r3[$i0];

        $c1 = r1[i107];

        $i118 = (int) $c1;

        $i3 = $i2 + $i118;

        $i100 = r2[$i3];

        $i120 = (int) -1;

        if $i100 != $i120 goto label07;

        goto label09;

     label07:
        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzState> = $i100;

        $i4 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzState>;

        i5 = r4[$i4];

        $i6 = i5 & 1;

        if $i6 != 1 goto label08;

        i104 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzState>;

        i103 = i105;

        $i7 = i5 & 8;

        if $i7 != 8 goto label08;

        goto label09;

     label08:
        goto label02;

     label09:
        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos> = i103;

        if i104 >= 0 goto label10;

        $i109 = i104;

        goto label11;

     label10:
        $r5 = <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_ACTION>;

        $i109 = $r5[i104];

     label11:
        tableswitch($i109)
        {
            case 1: goto label72;
            case 2: goto label32;
            case 3: goto label14;
            case 4: goto label18;
            case 5: goto label24;
            case 6: goto label42;
            case 7: goto label68;
            case 8: goto label52;
            case 9: goto label34;
            case 10: goto label38;
            case 11: goto label16;
            case 12: goto label58;
            case 13: goto label70;
            case 14: goto label54;
            case 15: goto label56;
            case 16: goto label22;
            case 17: goto label60;
            case 18: goto label66;
            case 19: goto label12;
            case 20: goto label48;
            case 21: goto label46;
            case 22: goto label50;
            case 23: goto label44;
            case 24: goto label20;
            case 25: goto label30;
            case 26: goto label64;
            case 27: goto label26;
            case 28: goto label62;
            case 29: goto label28;
            case 30: goto label40;
            case 31: goto label13;
            case 32: goto label15;
            case 33: goto label17;
            case 34: goto label19;
            case 35: goto label21;
            case 36: goto label23;
            case 37: goto label25;
            case 38: goto label27;
            case 39: goto label29;
            case 40: goto label31;
            case 41: goto label33;
            case 42: goto label37;
            case 43: goto label39;
            case 44: goto label41;
            case 45: goto label43;
            case 46: goto label45;
            case 47: goto label47;
            case 48: goto label49;
            case 49: goto label51;
            case 50: goto label53;
            case 51: goto label55;
            case 52: goto label57;
            case 53: goto label59;
            case 54: goto label61;
            case 55: goto label63;
            case 56: goto label65;
            case 57: goto label67;
            case 58: goto label69;
            case 59: goto label71;
            case 60: goto label72;
            default: goto label73;
        };

     label12:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(4);

        $i55 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i54 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i55, $i54, 28);

     label13:
        goto label01;

     label14:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addNullToken()>();

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r9;

     label15:
        goto label01;

     label16:
        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd> = 0;

     label17:
        goto label01;

     label18:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(25);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(4);

     label19:
        goto label01;

     label20:
        $i30 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int yylength()>();

        $i33 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i31 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i32 = $i31 + 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i33, $i32, 25);

        $i35 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i34 = $i30 - 2;

        $i38 = $i35 - $i34;

        $i36 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i37 = $i36 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i38, $i37, 26);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(4);

     label21:
        goto label01;

     label22:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(25);

     label23:
        goto label01;

     label24:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(21);

     label25:
        goto label01;

     label26:
        $i19 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i19;

        $i20 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int prevState> = $i20;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(1);

     label27:
        goto label01;

     label28:
        i110 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i11 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i9 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i10 = $i9 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i11, $i10, 8);

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = i110;

        $i12 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int prevState> = $i12;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(1);

     label29:
        goto label01;

     label30:
        i111 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i28 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i26 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i27 = $i26 + 2;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i28, $i27, 2);

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = i111;

        $i29 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int prevState>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>($i29);

     label31:
        goto label01;

     label32:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(20);

     label33:
        goto label01;

     label34:
        $i64 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i62 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i63 = $i62 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i64, $i63, 8);

        $z3 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd>;

        if $z3 == 0 goto label35;

        $b112 = -5;

        goto label36;

     label35:
        $b112 = -4;

     label36:
        $i121 = (int) $b112;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addEndToken(int)>($i121);

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r6;

     label37:
        goto label01;

     label38:
        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd> = 1;

     label39:
        goto label01;

     label40:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(16);

        $i8 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i8;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(7);

     label41:
        goto label01;

     label42:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(16);

     label43:
        goto label01;

     label44:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(0);

        $i41 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i39 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i40 = $i39 + 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i41, $i40, 29);

     label45:
        goto label01;

     label46:
        $i44 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i45 = $i44 - 2;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i45;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd> = 0;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(3);

     label47:
        goto label01;

     label48:
        $i46 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int yylength()>();

        $i48 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i47 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i48, $i47, 25);

        $i50 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i49 = $i46 - 1;

        $i53 = $i50 - $i49;

        $i51 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i52 = $i51 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i53, $i52, 26);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(4);

     label49:
        goto label01;

     label50:
        $i42 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i43 = $i42 - 2;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i43;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(2);

     label51:
        goto label01;

     label52:
        $i67 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i65 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i66 = $i65 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i67, $i66, 29);

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r7;

     label53:
        goto label01;

     label54:
        $i58 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i59 = $i58 - 1;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i59;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(5);

     label55:
        goto label01;

     label56:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(0);

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(25);

     label57:
        goto label01;

     label58:
        $z2 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd>;

        if $z2 != 0 goto label59;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(0);

        $i61 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i60 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i61, $i60, 8);

     label59:
        goto label01;

     label60:
        $i56 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i57 = $i56 - 1;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i57;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(6);

     label61:
        goto label01;

     label62:
        i113 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i15 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i13 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i14 = $i13 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i15, $i14, 2);

        $i16 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i17 = $i16 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addHyperlinkToken(int,int,int)>(i113, $i17, 2);

        $i18 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start> = $i18;

     label63:
        goto label01;

     label64:
        i114 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void yybegin(int)>(0);

        $i23 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i21 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i22 = $i21 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i23, $i22, 30);

        $i24 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzMarkedPos>;

        $i25 = $i24 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>(i114, $i25, 16);

     label65:
        goto label01;

     label66:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(23);

     label67:
        goto label01;

     label68:
        $i70 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i68 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i69 = $i68 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i70, $i69, 2);

        $i71 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int prevState>;

        $i123 = (int) -2048;

        $i72 = $i123 - $i71;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addEndToken(int)>($i72);

        $r8 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r8;

     label69:
        goto label01;

     label70:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int)>(27);

     label71:
        goto label01;

     label72:
        goto label01;

     label73:
        $i125 = (int) -1;

        if i107 != $i125 goto label93;

        $i74 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i73 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzCurrentPos>;

        if $i74 != $i73 goto label93;

        r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean zzAtEOF> = 1;

        $i75 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzLexicalState>;

        lookupswitch($i75)
        {
            case 0: goto label82;
            case 1: goto label84;
            case 2: goto label90;
            case 3: goto label76;
            case 4: goto label74;
            case 5: goto label80;
            case 6: goto label88;
            case 7: goto label86;
            case 78: goto label75;
            case 79: goto label79;
            case 80: goto label81;
            case 81: goto label83;
            case 82: goto label85;
            case 83: goto label87;
            case 84: goto label89;
            case 85: goto label91;
            default: goto label92;
        };

     label74:
        $i87 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i85 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i86 = $i85 - 1;

        $i127 = (int) -3;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i87, $i86, $i127);

        $r13 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r13;

     label75:
        goto label01;

     label76:
        $i90 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i88 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i89 = $i88 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i90, $i89, 8);

        $z4 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean inInternalDtd>;

        if $z4 == 0 goto label77;

        $b115 = -5;

        goto label78;

     label77:
        $b115 = -4;

     label78:
        $i128 = (int) $b115;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addEndToken(int)>($i128);

        $r14 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r14;

     label79:
        goto label01;

     label80:
        $i84 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i82 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i83 = $i82 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i84, $i83, 28);

        $i130 = (int) -1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addEndToken(int)>($i130);

        $r12 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r12;

     label81:
        goto label01;

     label82:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addNullToken()>();

        $r17 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r17;

     label83:
        goto label01;

     label84:
        $i96 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i94 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i95 = $i94 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i96, $i95, 2);

        $i97 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int prevState>;

        $i132 = (int) -2048;

        $i98 = $i132 - $i97;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addEndToken(int)>($i98);

        $r16 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r16;

     label85:
        goto label01;

     label86:
        $i78 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i76 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i77 = $i76 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i78, $i77, 30);

        $r10 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r10;

     label87:
        goto label01;

     label88:
        $i81 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i79 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i80 = $i79 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i81, $i80, 28);

        $i134 = (int) -2;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addEndToken(int)>($i134);

        $r11 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r11;

     label89:
        goto label01;

     label90:
        $i93 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int start>;

        $i91 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int zzStartRead>;

        $i92 = $i91 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void addToken(int,int,int)>($i93, $i92, 29);

        $r15 = r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r15;

     label91:
        goto label01;

     label92:
        return null;

     label93:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: void zzScanError(int)>(1);

        goto label01;
    }

    static void <clinit>()
    {
        int[] $r1, $r2, $r3, $r5;
        char[] $r0;
        java.lang.String[] $r4;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INTERNAL_IN_XML_COMMENT> = -2048;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INTERNAL_DTD_INTERNAL> = -5;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INTERNAL_DTD> = -4;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INTERNAL_INTAG> = -3;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INTERNAL_ATTR_SINGLE> = -2;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INTERNAL_ATTR_DOUBLE> = -1;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String ZZ_ATTRIBUTE_PACKED_0> = "\u0005\u0000\u0002\u0001\u0001\u0000\u0002\u0001\u0001\t\u0005\u0001\u0001\t\u0004\u0001\u0001\t\u0002\u0001\u0001\t\u0001\u0001\u0003\t\u0002\u0001\u0002\t\u0001\u0001\u0002\t\u0001\u0001\u0001\t\u0006\u0001\u0002\t\u0005\u0000\u0001\t\u0004\u0000\u0001\u0001\u0001\t\u0005\u0000\u0002\t\u0003\u0000\u0001\u0001\u0001\t\u0006\u0000\u0001\t";

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int ZZ_PUSHBACK_2BIG> = 2;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int ZZ_NO_MATCH> = 1;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int ZZ_UNKNOWN_ERROR> = 0;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String ZZ_TRANS_PACKED_0> = "\u0003\t\u0001\n\u0001\u000b\u0001\f\u0001\r\u0001\u000e\u001d\t\u0002\u000f\u0001\u0010\u0001\u000f\u0001\u0011\u0014\u000f\u0001\u0012\u0003\u000f\u0001\u0013\u0003\u000f\u0001\u0014\u0003\u000f\u0004\u0015\u0001\u0016\u001e\u0015\u0001\u0017\u0001\u0015\u0004\u0018\u0001\u0019\u0001\u001a\u0005\u0018\u0001\u001b\u0004\u0018\u0001\u001c\u0001\u001d\u0013\u0018\u0003\u001e\u0001\u001f\u0001\u0000\u0001\u001e\u0001\r\u0002\u001e\u0001 \u0007\u001e\u0001!\u0002\u001e\u0001\"\u0001#\u000e\u001e\u0001$\t%\u0001&\u001b%\u0015\'\u0001&\u000f\'\u0010(\u0001)\u0014(\u0004\t\u0004\u0000 \t\u0001\n\u0002\u0000\u0001\r\u0001\u0000\u001d\t&\u0000\u0001*\u0008\u0000\u0001+\u0001\u0000\u0004*\u0003\u0000\u0001*\u0001,\u0001\u0000\u0001*\u0002\u0000\t*\u0001\u0000\u0001-\u0004\u0000\u0001\r\u0002\u0000\u0001\r\u001e\u0000\u0006\u000e\u0001\u0000\u0001\u000e\u0001.\u001c\u000e\u0002\u000f\u0001\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0003\u000f\u0001\u0000\u0003\u000f\u0001\u0000\u0003\u000f\u0002\u0000\u0001/<\u0000\u00010$\u0000\u00011\u0003\u0000\u00012\'\u0000\u00013\u0003\u0000\u0004\u0015\u0001\u0000\u001e\u0015\u0001\u0000\u0001\u0015\u0011\u0000\u00014\u0013\u0000\u0004\u0018\u0002\u0000\u0005\u0018\u0001\u0000\u0004\u0018\u0002\u0000\u0013\u0018\n\u0000\u00015\u001a\u0000\u0004\u001e\u0001\u0000\u0001\u001e\u0001\u0000\u0002\u001e\u0001\u0000\u0007\u001e\u0001\u0000\u0002\u001e\u0002\u0000\u000e\u001e\u0001\u0000\u0003\u001e\u0001\u001f\u0001\u0000\u0001\u001e\u0001\r\u0002\u001e\u0001\u0000\u0007\u001e\u0001\u0000\u0002\u001e\u0002\u0000\u000e\u001e\u0012\u0000\u0001!\u0013\u0000\t%\u0001\u0000\u001b%\u0015\'\u0001\u0000\u000f\'\u0010(\u0001\u0000\u0014(\u0010\u0000\u00016\u0015\u0000\u0002*\t\u0000\u0004*\u0003\u0000\u0001*\u0002\u0000\u0002*\u0001\u0000\n*\u0004\u0000\u00017\u0008\u0000\u00018\u001a\u0000\u00019\n\u0000\u00049\u0003\u0000\u00019\u0002\u0000\u00019\u0002\u0000\t9\u0014\u0000\u0001:-\u0000\u0001;%\u0000\u0001<(\u0000\u0001=&\u0000\u0001>\u0005\u0000\u0001?3\u0000\u0001@\u0015\u0000\u0001A.\u0000\u0001B\u0019\u0000\u00029\t\u0000\u00049\u0003\u0000\u00019\u0002\u0000\u00029\u0001\u0000\n9\u001d\u0000\u0001C\u001c\u0000\u0001D1\u0000\u0001<&\u0000\u0001E\u0004\u0000\u0001F/\u0000\u0001G*\u0000\u0001D\u0008\u0000\u0001<\u001c\u0000\u0001H\u0011\u0000\u0002I\u0004\u0000\u0002I\u0001\u0000\u0002I\u0004E\u0001I\u0001\u0000\u0002I\u0001E\u0001I\fE\u0003I\u000e\u0000\u0001J*\u0000\u0001E\u001f\u0000\u0001K#\u0000\u0001L!\u0000\u0001M\u0019\u0000";

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String ZZ_ROWMAP_PACKED_0> = "\u0000\u0000\u0000%\u0000J\u0000o\u0000\u0094\u0000\u00b9\u0000\u00de\u0000\u0103\u0000\u0128\u0000\u014d\u0000\u0172\u0000\u0197\u0000\u01bc\u0000\u01e1\u0000\u0206\u0000\u022b\u0000\u0172\u0000\u0250\u0000\u0275\u0000\u029a\u0000\u02bf\u0000\u0172\u0000\u02e4\u0000\u0309\u0000\u0172\u0000\u032e\u0000\u0172\u0000\u0172\u0000\u0172\u0000\u0353\u0000\u0378\u0000\u0172\u0000\u0172\u0000\u039d\u0000\u0172\u0000\u0172\u0000\u03c2\u0000\u0172\u0000\u03e7\u0000\u040c\u0000\u0431\u0000\u0456\u0000\u047b\u0000\u04a0\u0000\u0172\u0000\u0172\u0000\u04c5\u0000\u04ea\u0000\u050f\u0000\u0534\u0000\u0559\u0000\u0172\u0000\u057e\u0000\u05a3\u0000\u05c8\u0000\u05ed\u0000\u0612\u0000\u0172\u0000\u0637\u0000\u065c\u0000\u0681\u0000\u06a6\u0000\u06cb\u0000\u0172\u0000\u0172\u0000\u06f0\u0000\u0715\u0000\u073a\u0000\u075f\u0000\u0172\u0000\u0784\u0000\u07a9\u0000\u075f\u0000\u07ce\u0000\u07f3\u0000\u0818\u0000\u0172";

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String ZZ_ACTION_PACKED_0> = "\u0005\u0000\u0002\u0001\u0001\u0000\u0002\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0001\u0006\u0002\u0001\u0001\u0007\u0004\u0001\u0001\u0008\u0002\u0001\u0001\t\u0001\u0001\u0001\n\u0001\u000b\u0001\f\u0002\r\u0001\u000e\u0001\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0001\u0001\u0013\u0003\u0001\u0001\u0014\u0001\u0015\u0001\u0004\u0001\u0016\u0001\u0006\u0005\u0000\u0001\u0017\u0004\u0000\u0001\u0018\u0001\u0019\u0005\u0000\u0001\u001a\u0001\u001b\u0003\u0000\u0001\u001c\u0001\u001d\u0006\u0000\u0001\u001e";

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String ZZ_CMAP_PACKED> = "\t\u0000\u0001\u0006\u0001\u0004\u0001\u0000\u0001\u0003\u0013\u0000\u0001\u0006\u0001\n\u0001\t\u0001\u0012\u0001\u0018\u0001\u0012\u0001\u0007\u0001\u0015\u0005\u0012\u0001\u0002\u0001\"\u0001\u0014\n\u0017\u0001\u0013\u0001\u0008\u0001\u0005\u0001$\u0001\u0011\u0001#\u0001\u0012\u0001\u000e\u0001\u0016\u0001\f\u0001\r\u000f\u0016\u0001\u000f\u0006\u0016\u0001\u000b\u0001\u0000\u0001\u0010\u0001\u0000\u0001\u0001\u0001\u0000\u0004\u0016\u0001 \u0001\u001d\u0001\u0016\u0001\u0019\u0001\u001e\u0002\u0016\u0001\u001f\u0003\u0016\u0001\u001b\u0002\u0016\u0001\u001c\u0001\u001a\u0002\u0016\u0001!\u0003\u0016\u0003\u0000\u0001\u0012\uff81\u0000";

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int PI> = 2;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INATTR_SINGLE> = 6;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int CDATA> = 7;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int COMMENT> = 1;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int YYINITIAL> = 0;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INATTR_DOUBLE> = 5;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int DTD> = 3;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int INTAG> = 4;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int YYEOF> = -1;

        $r0 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] zzUnpackCMap(java.lang.String)>("\t\u0000\u0001\u0006\u0001\u0004\u0001\u0000\u0001\u0003\u0013\u0000\u0001\u0006\u0001\n\u0001\t\u0001\u0012\u0001\u0018\u0001\u0012\u0001\u0007\u0001\u0015\u0005\u0012\u0001\u0002\u0001\"\u0001\u0014\n\u0017\u0001\u0013\u0001\u0008\u0001\u0005\u0001$\u0001\u0011\u0001#\u0001\u0012\u0001\u000e\u0001\u0016\u0001\f\u0001\r\u000f\u0016\u0001\u000f\u0006\u0016\u0001\u000b\u0001\u0000\u0001\u0010\u0001\u0000\u0001\u0001\u0001\u0000\u0004\u0016\u0001 \u0001\u001d\u0001\u0016\u0001\u0019\u0001\u001e\u0002\u0016\u0001\u001f\u0003\u0016\u0001\u001b\u0002\u0016\u0001\u001c\u0001\u001a\u0002\u0016\u0001!\u0003\u0016\u0003\u0000\u0001\u0012\uff81\u0000");

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: char[] ZZ_CMAP> = $r0;

        $r1 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] zzUnpackAction()>();

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_ACTION> = $r1;

        $r2 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] zzUnpackRowMap()>();

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_ROWMAP> = $r2;

        $r3 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] zzUnpackTrans()>();

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_TRANS> = $r3;

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "Unkown internal scanner error";

        $r4[1] = "Error: could not match input";

        $r4[2] = "Error: pushback value was too large";

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: java.lang.String[] ZZ_ERROR_MSG> = $r4;

        $r5 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] zzUnpackAttribute()>();

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: int[] ZZ_ATTRIBUTE> = $r5;

        <org.fife.ui.rsyntaxtextarea.modes.XMLTokenMaker: boolean completeCloseTags> = 1;

        return;
    }
}
