class bsh.BSHWhileStatement extends bsh.SimpleNode implements bsh.ParserConstants
{
    public boolean isDoStatement;

    void <init>(int)
    {
        int i0;
        bsh.BSHWhileStatement r0;

        r0 := @this: bsh.BSHWhileStatement;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object eval(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.ReturnControl $r6;
        bsh.SimpleNode r10, r11;
        bsh.CallStack r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2, z3, z4;
        bsh.Interpreter r3;
        bsh.BSHWhileStatement r0;
        bsh.Primitive $r5;
        java.lang.Object $r4;
        bsh.Node $r1, $r7, $r8, $r9;

        r0 := @this: bsh.BSHWhileStatement;

        r2 := @parameter0: bsh.CallStack;

        r3 := @parameter1: bsh.Interpreter;

        $i0 = virtualinvoke r0.<bsh.BSHWhileStatement: int jjtGetNumChildren()>();

        r10 = null;

        $z0 = r0.<bsh.BSHWhileStatement: boolean isDoStatement>;

        if $z0 == 0 goto label01;

        $r8 = virtualinvoke r0.<bsh.BSHWhileStatement: bsh.Node jjtGetChild(int)>(1);

        r11 = (bsh.SimpleNode) $r8;

        $r9 = virtualinvoke r0.<bsh.BSHWhileStatement: bsh.Node jjtGetChild(int)>(0);

        r10 = (bsh.SimpleNode) $r9;

        goto label02;

     label01:
        $r1 = virtualinvoke r0.<bsh.BSHWhileStatement: bsh.Node jjtGetChild(int)>(0);

        r11 = (bsh.SimpleNode) $r1;

        if $i0 <= 1 goto label02;

        $r7 = virtualinvoke r0.<bsh.BSHWhileStatement: bsh.Node jjtGetChild(int)>(1);

        r10 = (bsh.SimpleNode) $r7;

     label02:
        z3 = r0.<bsh.BSHWhileStatement: boolean isDoStatement>;

        goto label10;

     label03:
        if r10 != null goto label04;

        goto label10;

     label04:
        $r4 = virtualinvoke r10.<bsh.SimpleNode: java.lang.Object eval(bsh.CallStack,bsh.Interpreter)>(r2, r3);

        z4 = 0;

        $z1 = $r4 instanceof bsh.ReturnControl;

        if $z1 == 0 goto label08;

        $r6 = (bsh.ReturnControl) $r4;

        $i1 = $r6.<bsh.ReturnControl: int kind>;

        lookupswitch($i1)
        {
            case 12: goto label07;
            case 19: goto label06;
            case 46: goto label05;
            default: goto label08;
        };

     label05:
        return $r4;

     label06:
        goto label10;

     label07:
        z4 = 1;

     label08:
        if z4 == 0 goto label09;

        goto label11;

     label09:
        z3 = 0;

     label10:
        if z3 != 0 goto label03;

        $z2 = staticinvoke <bsh.BSHIfStatement: boolean evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter)>(r11, r2, r3);

        if $z2 != 0 goto label03;

     label11:
        $r5 = <bsh.Primitive: bsh.Primitive VOID>;

        return $r5;
    }
}
