final class org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter extends org.apache.lucene.codecs.FieldInfosWriter
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter r0;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter;

        specialinvoke r0.<org.apache.lucene.codecs.FieldInfosWriter: void <init>()>();

        return;
    }

    public void write(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        byte $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b12, $b13, b14, $b16, $b17;
        org.apache.lucene.store.Directory r2;
        java.util.Map $r11;
        java.io.Closeable[] $r7, $r18;
        org.apache.lucene.index.FieldInfos r5;
        org.apache.lucene.store.IOContext r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.lucene.index.FieldInfo$IndexOptions $r10, $r13, $r14, $r15, $r20;
        java.lang.Throwable $r17;
        java.lang.AssertionError $r24, $r25;
        int $i0, $i1, $i2, $i3, $i11, $i15, $i18, $i19;
        java.lang.String r0, $r1, $r21;
        org.apache.lucene.store.IndexOutput $r4;
        org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter r19;
        java.util.Iterator $r6;
        org.apache.lucene.index.FieldInfo$DocValuesType $r22, $r23;
        org.apache.lucene.index.FieldInfo r9;
        java.lang.Object $r8;

        r19 := @this: org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter;

        r2 := @parameter0: org.apache.lucene.store.Directory;

        r0 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.lucene.index.FieldInfos;

        r3 := @parameter3: org.apache.lucene.store.IOContext;

        $r1 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r0, "", "fnm");

        $r4 = virtualinvoke r2.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r1, r3);

     label01:
        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r4, "Lucene42FieldInfos", 0);

        $i0 = virtualinvoke r5.<org.apache.lucene.index.FieldInfos: int size()>();

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i0);

        $r6 = virtualinvoke r5.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.lucene.index.FieldInfo) $r8;

        $r10 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        b14 = 0;

        $z1 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: boolean hasVectors()>();

        if $z1 == 0 goto label03;

        b14 = (byte) 2;

     label03:
        $z2 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: boolean omitsNorms()>();

        if $z2 == 0 goto label04;

        $b13 = b14 | 16;

        b14 = (byte) $b13;

     label04:
        $z3 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        if $z3 == 0 goto label05;

        $b12 = b14 | 32;

        b14 = (byte) $b12;

     label05:
        $z4 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: boolean isIndexed()>();

        if $z4 == 0 goto label09;

        $b7 = b14 | 1;

        b14 = (byte) $b7;

        $z5 = <org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter: boolean $assertionsDisabled>;

        if $z5 != 0 goto label06;

        $r15 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i11 = virtualinvoke $r10.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r15);

        if $i11 >= 0 goto label06;

        $z6 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        if $z6 == 0 goto label06;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label06:
        $r20 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if $r10 != $r20 goto label07;

        $b10 = b14 | 64;

        b14 = (byte) $b10;

        goto label09;

     label07:
        $r13 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        if $r10 != $r13 goto label08;

        $b9 = b14 | 4;

        b14 = (byte) $b9;

        goto label09;

     label08:
        $r14 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS>;

        if $r10 != $r14 goto label09;

        $b8 = b14 | -128;

        b14 = (byte) $b8;

     label09:
        $r21 = r9.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeString(java.lang.String)>($r21);

        $i15 = r9.<org.apache.lucene.index.FieldInfo: int number>;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i15);

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeByte(byte)>(b14);

        $r22 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $b16 = staticinvoke <org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter: byte docValuesByte(org.apache.lucene.index.FieldInfo$DocValuesType)>($r22);

        $r23 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getNormType()>();

        $b17 = staticinvoke <org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter: byte docValuesByte(org.apache.lucene.index.FieldInfo$DocValuesType)>($r23);

        $z7 = <org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter: boolean $assertionsDisabled>;

        if $z7 != 0 goto label11;

        $b4 = $b16 & -16;

        if $b4 != 0 goto label10;

        $b5 = $b17 & -16;

        if $b5 == 0 goto label11;

     label10:
        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label11:
        $i18 = (int) $b17;

        $i1 = $i18 << 4;

        $i19 = (int) $b16;

        $i2 = $i1 | $i19;

        $i3 = 255 & $i2;

        $b6 = (byte) $i3;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeByte(byte)>($b6);

        $r11 = virtualinvoke r9.<org.apache.lucene.index.FieldInfo: java.util.Map attributes()>();

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeStringStringMap(java.util.Map)>($r11);

        goto label02;

     label12:
        if 1 == 0 goto label13;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void close()>();

        goto label18;

     label13:
        $r7 = newarray (java.io.Closeable)[1];

        $r7[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r7);

        goto label18;

     label14:
        $r17 := @caughtexception;

     label15:
        if 0 == 0 goto label16;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void close()>();

        goto label17;

     label16:
        $r18 = newarray (java.io.Closeable)[1];

        $r18[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r18);

     label17:
        throw $r17;

     label18:
        return;

        catch java.lang.Throwable from label01 to label12 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private static byte docValuesByte(org.apache.lucene.index.FieldInfo$DocValuesType)
    {
        java.lang.AssertionError $r5;
        org.apache.lucene.index.FieldInfo$DocValuesType r0, $r1, $r2, $r3, $r4;

        r0 := @parameter0: org.apache.lucene.index.FieldInfo$DocValuesType;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType NUMERIC>;

        if r0 != $r1 goto label2;

        return 1;

     label2:
        $r2 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType BINARY>;

        if r0 != $r2 goto label3;

        return 2;

     label3:
        $r3 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED>;

        if r0 != $r3 goto label4;

        return 3;

     label4:
        $r4 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED_SET>;

        if r0 != $r4 goto label5;

        return 4;

     label5:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene42.Lucene42FieldInfosWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
