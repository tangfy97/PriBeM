public class org.apache.cxf.bus.CXFBusImpl extends org.apache.cxf.interceptor.AbstractBasicInterceptorProvider implements org.apache.cxf.Bus
{
    static final boolean FORCE_LOGGING;
    protected final java.util.Map extensions;
    protected final java.util.Set missingExtensions;
    protected java.lang.String id;
    private org.apache.cxf.bus.BusState state;
    private final java.util.Collection features;
    private final java.util.Map properties;

    public void <init>()
    {
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        specialinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void <init>(java.util.Map)>(null);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.cxf.bus.BusState $r5;
        java.util.Collection $r7;
        java.util.concurrent.ConcurrentHashMap $r2, $r3, $r8, r10;
        java.util.concurrent.CopyOnWriteArraySet $r4;
        org.apache.cxf.feature.LoggingFeature $r6;
        java.util.Map r9;
        org.apache.cxf.bus.CXFBusImpl r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r9 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 4);

        r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map properties> = $r2;

        if r9 != null goto label1;

        $r8 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r8.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 4);

        r10 = $r8;

        goto label2;

     label1:
        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>(java.util.Map)>(r9);

        r10 = $r3;

     label2:
        r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions> = r10;

        $r4 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Set missingExtensions> = $r4;

        $r5 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState INITIAL>;

        r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state> = $r5;

        staticinvoke <org.apache.cxf.bus.CXFBusFactory: boolean possiblySetDefaultBus(org.apache.cxf.Bus)>(r0);

        $z0 = <org.apache.cxf.bus.CXFBusImpl: boolean FORCE_LOGGING>;

        if $z0 == 0 goto label3;

        $r7 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features>;

        $r6 = new org.apache.cxf.feature.LoggingFeature;

        specialinvoke $r6.<org.apache.cxf.feature.LoggingFeature: void <init>()>();

        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>($r6);

     label3:
        return;
    }

    protected void setState(org.apache.cxf.bus.BusState)
    {
        org.apache.cxf.bus.BusState r1;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r1 := @parameter0: org.apache.cxf.bus.BusState;

        r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state> = r1;

        return;
    }

    public void setId(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.bus.CXFBusImpl: java.lang.String id> = r1;

        return;
    }

    public final java.lang.Object getExtension(java.lang.Class)
    {
        java.util.Map $r2, $r7, $r10, $r13;
        org.apache.cxf.bus.CXFBusImpl r0;
        boolean $z0, $z1;
        java.util.Iterator $r11;
        java.util.Collection $r9;
        java.util.Set $r4, $r6;
        org.apache.cxf.configuration.ConfiguredBeanLocator r15;
        java.lang.Class r1;
        java.lang.Object $r3, $r5, $r8, $r12, r14;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r14 = $r3;

        if $r3 != null goto label5;

        $r6 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Set missingExtensions>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r7 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

        r15 = (org.apache.cxf.configuration.ConfiguredBeanLocator) $r8;

        if r15 != null goto label2;

        r15 = virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()>();

     label2:
        if r15 == null goto label5;

        $r9 = interfaceinvoke r15.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.util.Collection getBeansOfType(java.lang.Class)>(r1);

        if $r9 == null goto label4;

        $r11 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12);

        goto label3;

     label4:
        $r10 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        r14 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

     label5:
        if null == r14 goto label6;

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r14);

        return $r5;

     label6:
        $r4 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Set missingExtensions>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return null;
    }

    public boolean hasExtensionByName(java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.apache.cxf.configuration.ConfiguredBeanLocator r10;
        java.util.Map $r1, $r4;
        java.lang.Object $r5, $r7;
        java.lang.Class r8;
        java.lang.String r6, $r9;
        org.apache.cxf.bus.CXFBusImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Class) $r7;

        $r9 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        $r4 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

        r10 = (org.apache.cxf.configuration.ConfiguredBeanLocator) $r5;

        if r10 != null goto label4;

        r10 = virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()>();

     label4:
        if r10 == null goto label5;

        $z1 = interfaceinvoke r10.<org.apache.cxf.configuration.ConfiguredBeanLocator: boolean hasBeanOfName(java.lang.String)>(r6);

        return $z1;

     label5:
        return 0;
    }

    protected synchronized org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.cxf.configuration.ConfiguredBeanLocator r4;
        org.apache.cxf.bus.CXFBusImpl$1 $r3;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

        r4 = (org.apache.cxf.configuration.ConfiguredBeanLocator) $r2;

        if r4 != null goto label1;

        $r3 = new org.apache.cxf.bus.CXFBusImpl$1;

        specialinvoke $r3.<org.apache.cxf.bus.CXFBusImpl$1: void <init>(org.apache.cxf.bus.CXFBusImpl)>(r0);

        r4 = $r3;

        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void setExtension(java.lang.Object,java.lang.Class)>($r3, class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

     label1:
        return r4;
    }

    public void setExtension(java.lang.Object, java.lang.Class)
    {
        java.util.Map $r3;
        java.util.Set $r4;
        java.lang.Class r1;
        java.lang.Object r2;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map extensions>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Set missingExtensions>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getId()
    {
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r1, $r4, $r6;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.lang.String id>;

        if null != $r1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cxf");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r6 = r0.<org.apache.cxf.bus.CXFBusImpl: java.lang.String id>;

     label2:
        return $r6;
    }

    public void run()
    {
        java.lang.Throwable $r2;
        org.apache.cxf.bus.BusState $r1, $r4, $r5;
        java.lang.InterruptedException $r3;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        entermonitor r0;

     label01:
        $r1 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState RUNNING>;

        r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state> = $r1;

     label02:
        $r4 = r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state>;

        $r5 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState RUNNING>;

        if $r4 != $r5 goto label06;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label04:
        goto label02;

     label05:
        $r3 := @caughtexception;

        goto label02;

     label06:
        exitmonitor r0;

     label07:
        goto label10;

     label08:
        $r2 := @caughtexception;

        exitmonitor r0;

     label09:
        throw $r2;

     label10:
        return;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void initialize()
    {
        org.apache.cxf.bus.BusState $r1, $r7;
        java.util.Iterator $r5;
        java.util.Collection $r4;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r3;
        org.apache.cxf.buslifecycle.BusLifeCycleManager r10;
        java.lang.Object $r2, $r6, $r8;
        org.apache.cxf.bus.CXFBusImpl r0;
        org.apache.cxf.buslifecycle.BusCreationListener r9;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        $r1 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState INITIALIZING>;

        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void setState(org.apache.cxf.bus.BusState)>($r1);

        $r2 = virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

        $r3 = (org.apache.cxf.configuration.ConfiguredBeanLocator) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.util.Collection getBeansOfType(java.lang.Class)>(class "Lorg/apache/cxf/buslifecycle/BusCreationListener;");

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.cxf.buslifecycle.BusCreationListener) $r8;

        interfaceinvoke r9.<org.apache.cxf.buslifecycle.BusCreationListener: void busCreated(org.apache.cxf.Bus)>(r0);

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void doInitializeInternal()>();

        $r6 = virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/buslifecycle/BusLifeCycleManager;");

        r10 = (org.apache.cxf.buslifecycle.BusLifeCycleManager) $r6;

        if null == r10 goto label3;

        interfaceinvoke r10.<org.apache.cxf.buslifecycle.BusLifeCycleManager: void initComplete()>();

     label3:
        $r7 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState RUNNING>;

        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void setState(org.apache.cxf.bus.BusState)>($r7);

        return;
    }

    protected void doInitializeInternal()
    {
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void initializeFeatures()>();

        return;
    }

    protected void loadAdditionalFeatures()
    {
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        return;
    }

    protected void initializeFeatures()
    {
        java.util.Iterator $r3;
        java.util.Collection $r1, $r2;
        java.lang.Object $r4;
        org.apache.cxf.bus.CXFBusImpl r0;
        boolean $z0;
        org.apache.cxf.feature.Feature r5;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void loadAdditionalFeatures()>();

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.feature.Feature) $r4;

        interfaceinvoke r5.<org.apache.cxf.feature.Feature: void initialize(org.apache.cxf.Bus)>(r0);

        goto label1;

     label2:
        return;
    }

    public void shutdown()
    {
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void shutdown(boolean)>(1);

        return;
    }

    protected void destroyBeans()
    {
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        return;
    }

    public void shutdown(boolean)
    {
        org.apache.cxf.Bus $r7;
        java.lang.Throwable $r8, $r9;
        org.apache.cxf.bus.BusState $r1, $r2, $r5, $r6;
        org.apache.cxf.buslifecycle.BusLifeCycleManager r4;
        java.lang.Object $r3;
        org.apache.cxf.bus.CXFBusImpl r0;
        boolean z0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state>;

        $r1 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState SHUTTING_DOWN>;

        if $r2 != $r1 goto label01;

        return;

     label01:
        $r3 = virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/buslifecycle/BusLifeCycleManager;");

        r4 = (org.apache.cxf.buslifecycle.BusLifeCycleManager) $r3;

        if null == r4 goto label02;

        interfaceinvoke r4.<org.apache.cxf.buslifecycle.BusLifeCycleManager: void preShutdown()>();

     label02:
        entermonitor r0;

     label03:
        $r5 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState SHUTTING_DOWN>;

        r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state> = $r5;

        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r9 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r9;

     label07:
        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void destroyBeans()>();

        entermonitor r0;

     label08:
        $r6 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState SHUTDOWN>;

        r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state> = $r6;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label09:
        goto label12;

     label10:
        $r8 := @caughtexception;

        exitmonitor r0;

     label11:
        throw $r8;

     label12:
        if null == r4 goto label13;

        interfaceinvoke r4.<org.apache.cxf.buslifecycle.BusLifeCycleManager: void postShutdown()>();

     label13:
        $r7 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getDefaultBus(boolean)>(0);

        if $r7 != r0 goto label14;

        staticinvoke <org.apache.cxf.BusFactory: void setDefaultBus(org.apache.cxf.Bus)>(null);

     label14:
        staticinvoke <org.apache.cxf.BusFactory: void clearDefaultBusForAnyThread(org.apache.cxf.Bus)>(r0);

        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public org.apache.cxf.bus.BusState getState()
    {
        org.apache.cxf.bus.BusState $r1;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state>;

        return $r1;
    }

    public java.util.Collection getFeatures()
    {
        org.apache.cxf.bus.CXFBusImpl r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features>;

        return $r1;
    }

    public synchronized void setFeatures(java.util.Collection)
    {
        org.apache.cxf.bus.BusState $r4, $r5;
        java.util.Collection $r1, r2, $r3, $r7;
        org.apache.cxf.feature.LoggingFeature $r6;
        org.apache.cxf.bus.CXFBusImpl r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features>;

        interfaceinvoke $r1.<java.util.Collection: void clear()>();

        $r3 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features>;

        interfaceinvoke $r3.<java.util.Collection: boolean addAll(java.util.Collection)>(r2);

        $z0 = <org.apache.cxf.bus.CXFBusImpl: boolean FORCE_LOGGING>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Collection features>;

        $r6 = new org.apache.cxf.feature.LoggingFeature;

        specialinvoke $r6.<org.apache.cxf.feature.LoggingFeature: void <init>()>();

        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>($r6);

     label1:
        $r5 = r0.<org.apache.cxf.bus.CXFBusImpl: org.apache.cxf.bus.BusState state>;

        $r4 = <org.apache.cxf.bus.BusState: org.apache.cxf.bus.BusState RUNNING>;

        if $r5 != $r4 goto label2;

        virtualinvoke r0.<org.apache.cxf.bus.CXFBusImpl: void initializeFeatures()>();

     label2:
        return;
    }

    public java.util.Map getProperties()
    {
        org.apache.cxf.bus.CXFBusImpl r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map properties>;

        return $r1;
    }

    public void setProperties(java.util.Map)
    {
        java.util.Map $r1, r2, $r3;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r2 := @parameter0: java.util.Map;

        $r1 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map properties>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r3 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map properties>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r2);

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.cxf.bus.CXFBusImpl r0;

        r0 := @this: org.apache.cxf.bus.CXFBusImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.bus.CXFBusImpl: java.util.Map properties>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3, $r4;
        java.lang.Object r0;
        java.lang.String r2;
        org.apache.cxf.bus.CXFBusImpl r1;

        r1 := @this: org.apache.cxf.bus.CXFBusImpl;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r4 = r1.<org.apache.cxf.bus.CXFBusImpl: java.util.Map properties>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r3 = r1.<org.apache.cxf.bus.CXFBusImpl: java.util.Map properties>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r0;
        boolean $z0, $z1, $z2, $z3, $z4, z5;

        z5 = 0;

     label1:
        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("org.apache.cxf.logging.enabled");

        z5 = $z0;

        $z1 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("com.sun.xml.ws.transport.local.LocalTransportPipe.dump");

        z5 = $z0 | $z1;

        $z2 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("com.sun.xml.ws.util.pipe.StandaloneTubeAssembler.dump");

        z5 = z5 | $z2;

        $z3 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("com.sun.xml.ws.transport.http.client.HttpTransportPipe.dump");

        z5 = z5 | $z3;

        $z4 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("com.sun.xml.ws.transport.http.HttpAdapter.dump");

        z5 = z5 | $z4;

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

     label4:
        <org.apache.cxf.bus.CXFBusImpl: boolean FORCE_LOGGING> = z5;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
