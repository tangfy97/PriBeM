class ucar.util.prefs.Bean$Collection extends java.lang.Object
{
    private java.util.Collection collect;
    private java.lang.Class beanClass;
    private ucar.util.prefs.Bean$BeanParser p;

    void <init>(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection r1;
        ucar.util.prefs.Bean$Collection r0;
        ucar.util.prefs.Bean$BeanParser $r6;
        java.lang.Object $r3;
        java.lang.Class $r4, $r5;
        boolean $z0;

        r0 := @this: ucar.util.prefs.Bean$Collection;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.util.prefs.Bean$Collection: ucar.util.prefs.Bean$BeanParser p> = null;

        r0.<ucar.util.prefs.Bean$Collection: java.util.Collection collect> = r1;

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        r0.<ucar.util.prefs.Bean$Collection: java.lang.Class beanClass> = $r4;

        $r5 = r0.<ucar.util.prefs.Bean$Collection: java.lang.Class beanClass>;

        $r6 = staticinvoke <ucar.util.prefs.Bean$BeanParser: ucar.util.prefs.Bean$BeanParser getParser(java.lang.Class)>($r5);

        r0.<ucar.util.prefs.Bean$Collection: ucar.util.prefs.Bean$BeanParser p> = $r6;

     label1:
        return;
    }

    void <init>(org.xml.sax.Attributes) throws java.lang.ClassNotFoundException
    {
        org.xml.sax.Attributes r1;
        ucar.util.prefs.Bean$BeanParser $r5;
        java.lang.Class $r3, $r4;
        java.lang.String $r2;
        ucar.util.prefs.Bean$Collection r0;
        java.util.ArrayList $r6;

        r0 := @this: ucar.util.prefs.Bean$Collection;

        r1 := @parameter0: org.xml.sax.Attributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.util.prefs.Bean$Collection: ucar.util.prefs.Bean$BeanParser p> = null;

        $r2 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("class");

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

        r0.<ucar.util.prefs.Bean$Collection: java.lang.Class beanClass> = $r3;

        $r4 = r0.<ucar.util.prefs.Bean$Collection: java.lang.Class beanClass>;

        $r5 = staticinvoke <ucar.util.prefs.Bean$BeanParser: ucar.util.prefs.Bean$BeanParser getParser(java.lang.Class)>($r4);

        r0.<ucar.util.prefs.Bean$Collection: ucar.util.prefs.Bean$BeanParser p> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<ucar.util.prefs.Bean$Collection: java.util.Collection collect> = $r6;

        return;
    }

    public void writeProperties(java.io.PrintWriter, java.lang.Object) throws java.io.IOException
    {
        java.io.PrintWriter r2;
        ucar.util.prefs.Bean$BeanParser $r3;
        java.lang.Object r1;
        ucar.util.prefs.Bean$Collection r0;

        r0 := @this: ucar.util.prefs.Bean$Collection;

        r2 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.Object;

        $r3 = r0.<ucar.util.prefs.Bean$Collection: ucar.util.prefs.Bean$BeanParser p>;

        virtualinvoke $r3.<ucar.util.prefs.Bean$BeanParser: void writeProperties(java.lang.Object,java.io.PrintWriter)>(r1, r2);

        return;
    }

    public java.util.Collection getCollection()
    {
        ucar.util.prefs.Bean$Collection r0;
        java.util.Collection $r1;

        r0 := @this: ucar.util.prefs.Bean$Collection;

        $r1 = r0.<ucar.util.prefs.Bean$Collection: java.util.Collection collect>;

        return $r1;
    }

    public java.lang.Class getBeanClass()
    {
        java.lang.Class $r1;
        ucar.util.prefs.Bean$Collection r0;

        r0 := @this: ucar.util.prefs.Bean$Collection;

        $r1 = r0.<ucar.util.prefs.Bean$Collection: java.lang.Class beanClass>;

        return $r1;
    }

    public java.lang.Object readProperties(org.xml.sax.Attributes) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.util.Collection $r5;
        org.xml.sax.Attributes r3;
        ucar.util.prefs.Bean$BeanParser $r4;
        java.lang.Class $r1;
        java.lang.Object $r2;
        ucar.util.prefs.Bean$Collection r0;

        r0 := @this: ucar.util.prefs.Bean$Collection;

        r3 := @parameter0: org.xml.sax.Attributes;

        $r1 = r0.<ucar.util.prefs.Bean$Collection: java.lang.Class beanClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = r0.<ucar.util.prefs.Bean$Collection: ucar.util.prefs.Bean$BeanParser p>;

        virtualinvoke $r4.<ucar.util.prefs.Bean$BeanParser: void readProperties(java.lang.Object,org.xml.sax.Attributes)>($r2, r3);

        $r5 = r0.<ucar.util.prefs.Bean$Collection: java.util.Collection collect>;

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        return $r2;
    }
}
