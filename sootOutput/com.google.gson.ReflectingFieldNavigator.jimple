final class com.google.gson.ReflectingFieldNavigator extends java.lang.Object
{
    private static final com.google.gson.Cache fieldsCache;
    private final com.google.gson.ExclusionStrategy exclusionStrategy;

    void <init>(com.google.gson.ExclusionStrategy)
    {
        com.google.gson.ReflectingFieldNavigator r0;
        java.lang.Object $r2;
        com.google.gson.ExclusionStrategy r1, $r3;

        r0 := @this: com.google.gson.ReflectingFieldNavigator;

        r1 := @parameter0: com.google.gson.ExclusionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.gson.ExclusionStrategy) $r2;

        r0.<com.google.gson.ReflectingFieldNavigator: com.google.gson.ExclusionStrategy exclusionStrategy> = $r3;

        return;
    }

    void visitFieldsReflectively(com.google.gson.ObjectTypePair, com.google.gson.ObjectNavigator$Visitor)
    {
        com.google.gson.ObjectNavigator$Visitor r13;
        com.google.gson.ReflectingFieldNavigator r3;
        com.google.gson.ObjectTypePair r0;
        com.google.gson.FieldAttributes r8;
        com.google.gson.ExclusionStrategy $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r6;
        java.util.List $r5;
        java.lang.reflect.Type $r1, $r4, $r12;
        java.lang.Object $r2, $r7;
        java.lang.Class $r11;

        r3 := @this: com.google.gson.ReflectingFieldNavigator;

        r0 := @parameter0: com.google.gson.ObjectTypePair;

        r13 := @parameter1: com.google.gson.ObjectNavigator$Visitor;

        $r1 = virtualinvoke r0.<com.google.gson.ObjectTypePair: java.lang.reflect.Type getMoreSpecificType()>();

        $r2 = virtualinvoke r0.<com.google.gson.ObjectTypePair: java.lang.Object getObject()>();

        $r4 = virtualinvoke r0.<com.google.gson.ObjectTypePair: java.lang.reflect.Type getType()>();

        $r5 = specialinvoke r3.<com.google.gson.ReflectingFieldNavigator: java.util.List getAllFields(java.lang.reflect.Type,java.lang.reflect.Type)>($r1, $r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.google.gson.FieldAttributes) $r7;

        $r9 = r3.<com.google.gson.ReflectingFieldNavigator: com.google.gson.ExclusionStrategy exclusionStrategy>;

        $z0 = interfaceinvoke $r9.<com.google.gson.ExclusionStrategy: boolean shouldSkipField(com.google.gson.FieldAttributes)>(r8);

        if $z0 != 0 goto label1;

        $r10 = r3.<com.google.gson.ReflectingFieldNavigator: com.google.gson.ExclusionStrategy exclusionStrategy>;

        $r11 = virtualinvoke r8.<com.google.gson.FieldAttributes: java.lang.Class getDeclaredClass()>();

        $z1 = interfaceinvoke $r10.<com.google.gson.ExclusionStrategy: boolean shouldSkipClass(java.lang.Class)>($r11);

        if $z1 == 0 goto label2;

        goto label1;

     label2:
        $r12 = virtualinvoke r8.<com.google.gson.FieldAttributes: java.lang.reflect.Type getResolvedType()>();

        $z2 = interfaceinvoke r13.<com.google.gson.ObjectNavigator$Visitor: boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object)>(r8, $r12, $r2);

        if $z2 != 0 goto label4;

        $z3 = staticinvoke <com.google.gson.internal.$Gson$Types: boolean isArray(java.lang.reflect.Type)>($r12);

        if $z3 == 0 goto label3;

        interfaceinvoke r13.<com.google.gson.ObjectNavigator$Visitor: void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object)>(r8, $r12, $r2);

        goto label4;

     label3:
        interfaceinvoke r13.<com.google.gson.ObjectNavigator$Visitor: void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object)>(r8, $r12, $r2);

     label4:
        goto label1;

     label5:
        return;
    }

    private java.util.List getAllFields(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        com.google.gson.ReflectingFieldNavigator r4;
        com.google.gson.FieldAttributes $r12;
        java.util.ArrayList $r3;
        com.google.gson.Cache $r1, $r7;
        int i0, i1;
        boolean $z0;
        java.util.Iterator $r6;
        java.lang.reflect.Field r11;
        java.lang.reflect.Field[] $r10;
        java.util.List $r5, r14;
        java.lang.reflect.Type r0, r13;
        java.lang.Object $r2, $r8;
        java.lang.Class r9;

        r4 := @this: com.google.gson.ReflectingFieldNavigator;

        r0 := @parameter0: java.lang.reflect.Type;

        r13 := @parameter1: java.lang.reflect.Type;

        $r1 = <com.google.gson.ReflectingFieldNavigator: com.google.gson.Cache fieldsCache>;

        $r2 = interfaceinvoke $r1.<com.google.gson.Cache: java.lang.Object getElement(java.lang.Object)>(r0);

        r14 = (java.util.List) $r2;

        if r14 != null goto label5;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r14 = $r3;

        $r5 = specialinvoke r4.<com.google.gson.ReflectingFieldNavigator: java.util.List getInheritanceHierarchy(java.lang.reflect.Type)>(r0);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.Class) $r8;

        $r10 = virtualinvoke r9.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        staticinvoke <java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>($r10, 1);

        i0 = lengthof $r10;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r11 = $r10[i1];

        $r12 = new com.google.gson.FieldAttributes;

        specialinvoke $r12.<com.google.gson.FieldAttributes: void <init>(java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Type)>(r9, r11, r13);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $r7 = <com.google.gson.ReflectingFieldNavigator: com.google.gson.Cache fieldsCache>;

        interfaceinvoke $r7.<com.google.gson.Cache: void addElement(java.lang.Object,java.lang.Object)>(r0, $r3);

     label5:
        return r14;
    }

    private java.util.List getInheritanceHierarchy(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r1;
        com.google.gson.ReflectingFieldNavigator r2;
        java.lang.Class r3;
        java.util.ArrayList $r0;
        boolean $z0, $z1;

        r2 := @this: com.google.gson.ReflectingFieldNavigator;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>(r1);

     label1:
        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Object;");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r3.<java.lang.Class: boolean isSynthetic()>();

        if $z1 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return $r0;
    }

    static void <clinit>()
    {
        com.google.gson.LruCache $r0;

        $r0 = new com.google.gson.LruCache;

        specialinvoke $r0.<com.google.gson.LruCache: void <init>(int)>(500);

        <com.google.gson.ReflectingFieldNavigator: com.google.gson.Cache fieldsCache> = $r0;

        return;
    }
}
