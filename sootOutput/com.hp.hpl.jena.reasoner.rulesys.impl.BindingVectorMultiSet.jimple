public class com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet extends java.lang.Object
{
    protected java.util.Map data;
    protected byte[] matchIndices;

    public void <init>(byte[])
    {
        byte[] r2;
        java.util.HashMap $r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r2 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data> = $r1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: byte[] matchIndices> = r2;

        return;
    }

    public void add(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count $r2, $r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count get(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r1);

        if $r2 != null goto label1;

        $r3 = new com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count;

        specialinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count: void <init>(int)>(1);

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: void put(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector,com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count)>(r1, $r3);

        goto label2;

     label1:
        virtualinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count: void inc()>();

     label2:
        return;
    }

    protected com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count get(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map getRawSubSet(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r1);

        if $r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count) $r3;

     label2:
        return $r4;
    }

    protected com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector getPartialEnv(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)
    {
        byte[] r4;
        com.hp.hpl.jena.graph.Node[] $r1, r2;
        com.hp.hpl.jena.graph.Node $r6;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r0, $r7;
        byte b2;
        int $i0, i1, i3, $i4, $i5;

        r3 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector: com.hp.hpl.jena.graph.Node[] getEnvironment()>();

        $i0 = lengthof $r1;

        r2 = newarray (com.hp.hpl.jena.graph.Node)[$i0];

        r4 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: byte[] matchIndices>;

        i1 = lengthof r4;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        b2 = r4[i3];

        $i4 = (int) b2;

        $r6 = $r1[$i4];

        $i5 = (int) b2;

        r2[$i5] = $r6;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r7 = new com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        specialinvoke $r7.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector: void <init>(com.hp.hpl.jena.graph.Node[])>(r2);

        return $r7;
    }

    protected java.util.Map getRawSubSet(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r1, $r3;
        java.util.Map $r2, $r5;
        java.lang.Object $r4;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector getPartialEnv(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.Map) $r4;

        return $r5;
    }

    public java.util.Iterator getSubSet(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r1;
        java.util.Iterator $r4;
        java.util.Map $r2, $r5;
        java.util.Set $r3;
        java.util.HashMap $r6;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map getRawSubSet(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r1);

        if $r2 != null goto label1;

        $r6 = new java.util.HashMap;

        $r5 = $r6;

        specialinvoke $r6.<java.util.HashMap: void <init>(int)>(0);

        goto label2;

     label1:
        $r5 = $r2;

     label2:
        $r3 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    protected void put(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector, com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count)
    {
        java.util.HashMap $r4;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r1, $r6;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count r3;
        java.util.Map $r2, $r5, r7;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        r3 := @parameter1: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map getRawSubSet(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r1);

        r7 = $r2;

        if $r2 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r7 = $r4;

        $r5 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector getPartialEnv(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r4);

     label1:
        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public void putAll(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r11;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0, r6;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r5;
        java.util.Map $r1, $r7, $r8, $r10, $r12, r13;
        java.lang.Object $r4, $r9;
        boolean $z0;

        r6 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector) $r4;

        $r7 = virtualinvoke r6.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map getRawSubSet(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r5);

        r13 = $r7;

        if $r7 != null goto label2;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r13 = $r11;

        $r12 = r6.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r11);

     label2:
        $r8 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r10 = (java.util.Map) $r9;

        interfaceinvoke r13.<java.util.Map: void putAll(java.util.Map)>($r10);

        goto label1;

     label3:
        return;
    }

    public void remove(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector r1, $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count r7;
        java.util.Map $r3, r5, $r8;
        int $i0;
        java.lang.Object $r4, $r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector getPartialEnv(com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector)>(r1);

        $r3 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.util.Map) $r4;

        if r5 == null goto label3;

        $r6 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count) $r6;

        if r7 == null goto label2;

        $i0 = virtualinvoke r7.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count: int getCount()>();

        if $i0 <= 1 goto label1;

        virtualinvoke r7.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet$Count: void dec()>();

        goto label2;

     label1:
        interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        $z0 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.BindingVectorMultiSet: java.util.Map data>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

     label3:
        return;
    }
}
