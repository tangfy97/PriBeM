public abstract class org.apache.solr.common.cloud.ZkClientConnectionStrategy extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private java.util.List disconnectedListeners;
    private java.util.List connectedListeners;

    public void <init>()
    {
        org.apache.solr.common.cloud.ZkClientConnectionStrategy r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.solr.common.cloud.ZkClientConnectionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: java.util.List disconnectedListeners> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: java.util.List connectedListeners> = $r2;

        return;
    }

    public abstract void connect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;

    public abstract void reconnect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;

    public synchronized void disconnected()
    {
        java.lang.Throwable $r5;
        org.slf4j.Logger $r6;
        java.util.Iterator $r2;
        java.util.List $r1;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener r4;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.solr.common.cloud.ZkClientConnectionStrategy;

        $r1 = r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: java.util.List disconnectedListeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener) $r3;

     label2:
        interfaceinvoke r4.<org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener: void disconnected()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = <org.apache.solr.common.cloud.ZkClientConnectionStrategy: org.slf4j.Logger log>;

        staticinvoke <org.apache.solr.common.SolrException: void log(org.slf4j.Logger,java.lang.String,java.lang.Throwable)>($r6, "", $r5);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public synchronized void connected()
    {
        java.lang.Throwable $r5;
        org.slf4j.Logger $r6;
        java.util.Iterator $r2;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener r4;
        java.util.List $r1;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.solr.common.cloud.ZkClientConnectionStrategy;

        $r1 = r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: java.util.List connectedListeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener) $r3;

     label2:
        interfaceinvoke r4.<org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener: void connected()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = <org.apache.solr.common.cloud.ZkClientConnectionStrategy: org.slf4j.Logger log>;

        staticinvoke <org.apache.solr.common.SolrException: void log(org.slf4j.Logger,java.lang.String,java.lang.Throwable)>($r6, "", $r5);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public synchronized void addDisconnectedListener(org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener)
    {
        java.util.List $r2;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener r1;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy r0;

        r0 := @this: org.apache.solr.common.cloud.ZkClientConnectionStrategy;

        r1 := @parameter0: org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener;

        $r2 = r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: java.util.List disconnectedListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public synchronized void addConnectedListener(org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener)
    {
        org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener r1;
        java.util.List $r2;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy r0;

        r0 := @this: org.apache.solr.common.cloud.ZkClientConnectionStrategy;

        r1 := @parameter0: org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener;

        $r2 = r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: java.util.List connectedListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/solr/common/cloud/ZkClientConnectionStrategy;");

        <org.apache.solr.common.cloud.ZkClientConnectionStrategy: org.slf4j.Logger log> = $r0;

        return;
    }
}
