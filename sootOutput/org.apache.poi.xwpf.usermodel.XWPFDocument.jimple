public class org.apache.poi.xwpf.usermodel.XWPFDocument extends org.apache.poi.POIXMLDocument implements org.apache.poi.xwpf.usermodel.Document, org.apache.poi.xwpf.usermodel.IBody
{
    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument;
    private org.apache.poi.xwpf.usermodel.XWPFSettings settings;
    private org.apache.poi.util.IdentifierManager drawingIdManager;
    protected java.util.List footers;
    protected java.util.List headers;
    protected java.util.List comments;
    protected java.util.List hyperlinks;
    protected java.util.List paragraphs;
    protected java.util.List tables;
    protected java.util.List contentControls;
    protected java.util.List bodyElements;
    protected java.util.List pictures;
    protected java.util.Map packagePictures;
    protected java.util.Map endnotes;
    protected org.apache.poi.xwpf.usermodel.XWPFNumbering numbering;
    protected org.apache.poi.xwpf.usermodel.XWPFStyles styles;
    protected org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes;
    private org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy headerFooterPolicy;

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage) throws java.io.IOException
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.HashMap $r12, $r13;
        org.apache.poi.xwpf.usermodel.XWPFFactory $r14;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.poi.openxml4j.opc.OPCPackage r1;
        org.apache.poi.util.IdentifierManager $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        specialinvoke r0.<org.apache.poi.POIXMLDocument: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r1);

        $r2 = new org.apache.poi.util.IdentifierManager;

        specialinvoke $r2.<org.apache.poi.util.IdentifierManager: void <init>(long,long)>(1L, 4294967295L);

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.util.IdentifierManager drawingIdManager> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List footers> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List headers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List comments> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List hyperlinks> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List contentControls> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List pictures> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map packagePictures> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map endnotes> = $r13;

        $r14 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFFactory: org.apache.poi.xwpf.usermodel.XWPFFactory getInstance()>();

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void load(org.apache.poi.POIXMLFactory)>($r14);

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.HashMap $r13, $r14;
        org.apache.poi.xwpf.usermodel.XWPFFactory $r15;
        java.util.ArrayList $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.poi.util.IdentifierManager $r3;
        org.apache.poi.openxml4j.opc.OPCPackage $r2;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <org.apache.poi.util.PackageHelper: org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)>(r1);

        specialinvoke r0.<org.apache.poi.POIXMLDocument: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r2);

        $r3 = new org.apache.poi.util.IdentifierManager;

        specialinvoke $r3.<org.apache.poi.util.IdentifierManager: void <init>(long,long)>(1L, 4294967295L);

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.util.IdentifierManager drawingIdManager> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List footers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List headers> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List comments> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List hyperlinks> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List contentControls> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List pictures> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map packagePictures> = $r13;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map endnotes> = $r14;

        $r15 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFFactory: org.apache.poi.xwpf.usermodel.XWPFFactory getInstance()>();

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void load(org.apache.poi.POIXMLFactory)>($r15);

        return;
    }

    public void <init>()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.HashMap $r12, $r13;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        org.apache.poi.util.IdentifierManager $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.OPCPackage newPackage()>();

        specialinvoke r0.<org.apache.poi.POIXMLDocument: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r1);

        $r2 = new org.apache.poi.util.IdentifierManager;

        specialinvoke $r2.<org.apache.poi.util.IdentifierManager: void <init>(long,long)>(1L, 4294967295L);

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.util.IdentifierManager drawingIdManager> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List footers> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List headers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List comments> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List hyperlinks> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List contentControls> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List pictures> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map packagePictures> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map endnotes> = $r13;

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void onDocumentCreate()>();

        return;
    }

    protected void onDocumentRead() throws java.io.IOException
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFTable $r63;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r40, $r41;
        java.lang.Exception $r73;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r68;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r64;
        org.apache.poi.xwpf.usermodel.XWPFNumbering $r53, $r54;
        java.lang.Object[] $r38;
        org.apache.xmlbeans.XmlCursor $r7;
        org.apache.poi.xwpf.usermodel.XWPFStyles $r55, $r56;
        org.apache.poi.xwpf.usermodel.XWPFComment $r49;
        java.lang.String $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;
        org.apache.poi.xwpf.usermodel.XWPFFooter r76;
        org.apache.poi.xwpf.usermodel.XWPFSDT $r59;
        java.lang.Class[] $r36;
        org.apache.poi.xwpf.usermodel.XWPFRelation $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30;
        org.apache.xmlbeans.XmlException $r71;
        org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy $r57;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComments $r45;
        org.apache.poi.xwpf.usermodel.XWPFHeader r77;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r67;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSectPr $r10;
        org.apache.poi.openxml4j.opc.PackagePart $r1, $r42;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment r78;
        java.lang.reflect.Method $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.List $r11, $r32, $r39, $r46, $r50, $r51, $r52, $r61, $r62, $r65, $r66, $r69, $r70;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r6, $r9;
        org.apache.poi.openxml4j.opc.PackageRelationship $r14;
        org.apache.poi.POIXMLDocumentPart r75, r80;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock $r60;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CommentsDocument $r44;
        org.apache.xmlbeans.XmlObject $r58;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r4, $r5, $r8;
        org.apache.poi.POIXMLException $r72, $r74;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.DocumentDocument $r3;
        java.util.Iterator $r12, $r33, $r47;
        java.lang.Object $r13, $r34, $r48;
        java.lang.Class $r35;
        org.apache.poi.xwpf.usermodel.XWPFPictureData r79;
        java.io.InputStream $r2, $r43;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

     label01:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.DocumentDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.DocumentDocument parse(java.io.InputStream)>($r2);

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.DocumentDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 getDocument()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument> = $r4;

        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void initFootnotes()>();

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r7.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>("./*");

     label02:
        $z0 = interfaceinvoke $r7.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z0 == 0 goto label06;

        $r58 = interfaceinvoke $r7.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z11 = $r58 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z11 == 0 goto label03;

        $r67 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r68 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) $r58;

        specialinvoke $r67.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>($r68, r0);

        $r69 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r67);

        $r70 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r67);

        goto label05;

     label03:
        $z12 = $r58 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z12 == 0 goto label04;

        $r63 = new org.apache.poi.xwpf.usermodel.XWPFTable;

        $r64 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) $r58;

        specialinvoke $r63.<org.apache.poi.xwpf.usermodel.XWPFTable: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl,org.apache.poi.xwpf.usermodel.IBody)>($r64, r0);

        $r65 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r65.<java.util.List: boolean add(java.lang.Object)>($r63);

        $r66 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r66.<java.util.List: boolean add(java.lang.Object)>($r63);

        goto label05;

     label04:
        $z13 = $r58 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock;

        if $z13 == 0 goto label05;

        $r59 = new org.apache.poi.xwpf.usermodel.XWPFSDT;

        $r60 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock) $r58;

        specialinvoke $r59.<org.apache.poi.xwpf.usermodel.XWPFSDT: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock,org.apache.poi.xwpf.usermodel.IBody)>($r60, r0);

        $r61 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r61.<java.util.List: boolean add(java.lang.Object)>($r59);

        $r62 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List contentControls>;

        interfaceinvoke $r62.<java.util.List: boolean add(java.lang.Object)>($r59);

     label05:
        goto label02;

     label06:
        interfaceinvoke $r7.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r8 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.DocumentDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 getDocument()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSectPr getSectPr()>();

        if $r10 == null goto label07;

        $r57 = new org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;

        specialinvoke $r57.<org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy: void <init>(org.apache.poi.xwpf.usermodel.XWPFDocument)>(r0);

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy headerFooterPolicy> = $r57;

     label07:
        $r11 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getRelations()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z14 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label24;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r75 = (org.apache.poi.POIXMLDocumentPart) $r13;

        $r14 = virtualinvoke r75.<org.apache.poi.POIXMLDocumentPart: org.apache.poi.openxml4j.opc.PackageRelationship getPackageRelationship()>();

        $r15 = virtualinvoke $r14.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r16 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation STYLES>;

        $r17 = virtualinvoke $r16.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label09;

        $r55 = (org.apache.poi.xwpf.usermodel.XWPFStyles) r75;

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFStyles styles> = $r55;

        $r56 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFStyles styles>;

        virtualinvoke $r56.<org.apache.poi.xwpf.usermodel.XWPFStyles: void onDocumentRead()>();

        goto label23;

     label09:
        $r18 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation NUMBERING>;

        $r19 = virtualinvoke $r18.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z2 == 0 goto label10;

        $r53 = (org.apache.poi.xwpf.usermodel.XWPFNumbering) r75;

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFNumbering numbering> = $r53;

        $r54 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFNumbering numbering>;

        virtualinvoke $r54.<org.apache.poi.xwpf.usermodel.XWPFNumbering: void onDocumentRead()>();

        goto label23;

     label10:
        $r20 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation FOOTER>;

        $r21 = virtualinvoke $r20.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z3 == 0 goto label11;

        r76 = (org.apache.poi.xwpf.usermodel.XWPFFooter) r75;

        $r52 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List footers>;

        interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>(r76);

        virtualinvoke r76.<org.apache.poi.xwpf.usermodel.XWPFFooter: void onDocumentRead()>();

        goto label23;

     label11:
        $r22 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation HEADER>;

        $r23 = virtualinvoke $r22.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z4 == 0 goto label12;

        r77 = (org.apache.poi.xwpf.usermodel.XWPFHeader) r75;

        $r51 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List headers>;

        interfaceinvoke $r51.<java.util.List: boolean add(java.lang.Object)>(r77);

        virtualinvoke r77.<org.apache.poi.xwpf.usermodel.XWPFHeader: void onDocumentRead()>();

        goto label23;

     label12:
        $r24 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation COMMENT>;

        $r25 = virtualinvoke $r24.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z5 == 0 goto label15;

        $r42 = virtualinvoke r75.<org.apache.poi.POIXMLDocumentPart: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r43 = virtualinvoke $r42.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r44 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.CommentsDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.CommentsDocument parse(java.io.InputStream)>($r43);

        $r45 = interfaceinvoke $r44.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CommentsDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComments getComments()>();

        $r46 = interfaceinvoke $r45.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComments: java.util.List getCommentList()>();

        $r47 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z10 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label14;

        $r48 = interfaceinvoke $r47.<java.util.Iterator: java.lang.Object next()>();

        r78 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment) $r48;

        $r50 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List comments>;

        $r49 = new org.apache.poi.xwpf.usermodel.XWPFComment;

        specialinvoke $r49.<org.apache.poi.xwpf.usermodel.XWPFComment: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment,org.apache.poi.xwpf.usermodel.XWPFDocument)>(r78, r0);

        interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>($r49);

        goto label13;

     label14:
        goto label23;

     label15:
        $r26 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation SETTINGS>;

        $r27 = virtualinvoke $r26.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z6 == 0 goto label16;

        $r40 = (org.apache.poi.xwpf.usermodel.XWPFSettings) r75;

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings> = $r40;

        $r41 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        virtualinvoke $r41.<org.apache.poi.xwpf.usermodel.XWPFSettings: void onDocumentRead()>();

        goto label23;

     label16:
        $r28 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation IMAGES>;

        $r29 = virtualinvoke $r28.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z7 == 0 goto label17;

        r79 = (org.apache.poi.xwpf.usermodel.XWPFPictureData) r75;

        virtualinvoke r79.<org.apache.poi.xwpf.usermodel.XWPFPictureData: void onDocumentRead()>();

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void registerPackagePictureData(org.apache.poi.xwpf.usermodel.XWPFPictureData)>(r79);

        $r39 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List pictures>;

        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>(r79);

        goto label23;

     label17:
        $r30 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation GLOSSARY_DOCUMENT>;

        $r31 = virtualinvoke $r30.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z8 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z8 == 0 goto label23;

        $r32 = virtualinvoke r75.<org.apache.poi.POIXMLDocumentPart: java.util.List getRelations()>();

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z9 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label23;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r80 = (org.apache.poi.POIXMLDocumentPart) $r34;

     label19:
        $r35 = virtualinvoke r80.<java.lang.Object: java.lang.Class getClass()>();

        $r36 = newarray (java.lang.Class)[0];

        $r37 = virtualinvoke $r35.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("onDocumentRead", $r36);

        virtualinvoke $r37.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r38 = newarray (java.lang.Object)[0];

        virtualinvoke $r37.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r80, $r38);

     label20:
        goto label22;

     label21:
        $r73 := @caughtexception;

        $r74 = new org.apache.poi.POIXMLException;

        specialinvoke $r74.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r73);

        throw $r74;

     label22:
        goto label18;

     label23:
        goto label08;

     label24:
        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void initHyperlinks()>();

     label25:
        goto label27;

     label26:
        $r71 := @caughtexception;

        $r72 = new org.apache.poi.POIXMLException;

        specialinvoke $r72.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r71);

        throw $r72;

     label27:
        return;

        catch java.lang.Exception from label19 to label20 with label21;
        catch org.apache.xmlbeans.XmlException from label01 to label25 with label26;
    }

    private void initHyperlinks()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.openxml4j.opc.PackageRelationship r7;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r4;
        org.apache.poi.openxml4j.opc.PackagePart $r1;
        java.lang.String $r3, $r10, $r12;
        java.net.URI $r11;
        org.apache.poi.xwpf.usermodel.XWPFHyperlink $r8;
        org.apache.poi.POIXMLException $r14;
        boolean $z0;
        java.util.Iterator $r5;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r13;
        java.util.List $r9;
        org.apache.poi.xwpf.usermodel.XWPFRelation $r2;
        java.lang.Object $r6;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation HYPERLINK>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $r4 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r6;

        $r9 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List hyperlinks>;

        $r8 = new org.apache.poi.xwpf.usermodel.XWPFHyperlink;

        $r10 = virtualinvoke r7.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        $r11 = virtualinvoke r7.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r12 = virtualinvoke $r11.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.poi.xwpf.usermodel.XWPFHyperlink: void <init>(java.lang.String,java.lang.String)>($r10, $r12);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = new org.apache.poi.POIXMLException;

        specialinvoke $r14.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label5:
        return;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label3 with label4;
    }

    private void initFootnotes() throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTEndnotes $r14;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn r18;
        org.apache.poi.openxml4j.opc.PackageRelationship $r5;
        java.lang.Integer $r21;
        org.apache.poi.POIXMLDocumentPart r4;
        java.util.Map $r19;
        int $i0;
        org.apache.poi.openxml4j.opc.PackagePart $r11;
        java.math.BigInteger $r20;
        java.lang.String $r6, $r8, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2, $r16;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.EndnotesDocument $r13;
        org.apache.poi.xwpf.usermodel.XWPFFootnotes $r23, $r24;
        org.apache.poi.xwpf.usermodel.XWPFFootnote $r22;
        java.util.List $r1, $r15;
        org.apache.poi.xwpf.usermodel.XWPFRelation $r7, $r9;
        java.lang.Object $r3, $r17;
        java.io.InputStream $r12;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getRelations()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.POIXMLDocumentPart) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.POIXMLDocumentPart: org.apache.poi.openxml4j.opc.PackageRelationship getPackageRelationship()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r7 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation FOOTNOTE>;

        $r8 = virtualinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        $r23 = (org.apache.poi.xwpf.usermodel.XWPFFootnotes) r4;

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes> = $r23;

        $r24 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        virtualinvoke $r24.<org.apache.poi.xwpf.usermodel.XWPFFootnotes: void onDocumentRead()>();

        goto label4;

     label2:
        $r9 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation ENDNOTE>;

        $r10 = virtualinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label4;

        $r11 = virtualinvoke r4.<org.apache.poi.POIXMLDocumentPart: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r12 = virtualinvoke $r11.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r13 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.EndnotesDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.EndnotesDocument parse(java.io.InputStream)>($r12);

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.EndnotesDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTEndnotes getEndnotes()>();

        $r15 = interfaceinvoke $r14.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTEndnotes: java.util.List getEndnoteList()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn) $r17;

        $r19 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map endnotes>;

        $r20 = interfaceinvoke r18.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn: java.math.BigInteger getId()>();

        $i0 = virtualinvoke $r20.<java.math.BigInteger: int intValue()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r22 = new org.apache.poi.xwpf.usermodel.XWPFFootnote;

        specialinvoke $r22.<org.apache.poi.xwpf.usermodel.XWPFFootnote: void <init>(org.apache.poi.xwpf.usermodel.XWPFDocument,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn)>(r0, r18);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

        goto label3;

     label4:
        goto label1;

     label5:
        return;
    }

    protected static org.apache.poi.openxml4j.opc.OPCPackage newPackage()
    {
        org.apache.poi.openxml4j.opc.PackageProperties $r8;
        java.io.ByteArrayOutputStream $r0;
        org.apache.poi.openxml4j.opc.PackagePartName $r4;
        java.lang.Exception $r9;
        org.apache.poi.xwpf.usermodel.XWPFRelation $r2, $r6;
        org.apache.poi.openxml4j.opc.TargetMode $r5;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        java.lang.String $r3, $r7;
        org.apache.poi.POIXMLException $r10;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage create(java.io.OutputStream)>($r0);

        $r2 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation DOCUMENT>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getDefaultFileName()>();

        $r4 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.lang.String)>($r3);

        $r5 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode INTERNAL>;

        virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String)>($r4, $r5, "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument");

        $r6 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation DOCUMENT>;

        $r7 = virtualinvoke $r6.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getContentType()>();

        virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart createPart(org.apache.poi.openxml4j.opc.PackagePartName,java.lang.String)>($r4, $r7);

        $r8 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackageProperties getPackageProperties()>();

        interfaceinvoke $r8.<org.apache.poi.openxml4j.opc.PackageProperties: void setCreatorProperty(java.lang.String)>("Apache POI");

     label2:
        return $r1;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.apache.poi.POIXMLException;

        specialinvoke $r10.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void onDocumentCreate()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.CTProperties $r9;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r6;
        org.apache.poi.POIXMLProperties $r7;
        org.apache.poi.POIXMLProperties$ExtendedProperties $r8;
        org.apache.poi.xwpf.usermodel.XWPFFactory $r4;
        org.apache.poi.xwpf.usermodel.XWPFRelation $r3;
        org.apache.poi.POIXMLDocumentPart $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r1, $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 newInstance()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument> = $r1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody addNewBody()>();

        $r3 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation SETTINGS>;

        $r4 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFFactory: org.apache.poi.xwpf.usermodel.XWPFFactory getInstance()>();

        $r5 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLDocumentPart createRelationship(org.apache.poi.POIXMLRelation,org.apache.poi.POIXMLFactory)>($r3, $r4);

        $r6 = (org.apache.poi.xwpf.usermodel.XWPFSettings) $r5;

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings> = $r6;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLProperties getProperties()>();

        $r8 = virtualinvoke $r7.<org.apache.poi.POIXMLProperties: org.apache.poi.POIXMLProperties$ExtendedProperties getExtendedProperties()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.POIXMLProperties$ExtendedProperties: org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.CTProperties getUnderlyingProperties()>();

        interfaceinvoke $r9.<org.openxmlformats.schemas.officeDocument.x2006.extendedProperties.CTProperties: void setApplication(java.lang.String)>("Apache POI");

        return;
    }

    public org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 getDocument()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        return $r1;
    }

    org.apache.poi.util.IdentifierManager getDrawingIdManager()
    {
        org.apache.poi.util.IdentifierManager $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.util.IdentifierManager drawingIdManager>;

        return $r1;
    }

    public java.util.List getBodyElements()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.Iterator getBodyElementsIterator()
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.Iterator $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.List getParagraphs()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getTables()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable getTableArray(int)
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        int i0, $i1;
        java.lang.Object $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTable) $r3;

        return $r4;

     label1:
        return null;
    }

    public java.util.List getFooterList()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List footers>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFFooter getFooterArray(int)
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xwpf.usermodel.XWPFFooter $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List footers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.xwpf.usermodel.XWPFFooter) $r2;

        return $r3;
    }

    public java.util.List getHeaderList()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List headers>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFHeader getHeaderArray(int)
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xwpf.usermodel.XWPFHeader $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List headers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.xwpf.usermodel.XWPFHeader) $r2;

        return $r3;
    }

    public java.lang.String getTblStyle(org.apache.poi.xwpf.usermodel.XWPFTable)
    {
        java.lang.String $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r2;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r2 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r0 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.lang.String getStyleID()>();

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFHyperlink getHyperlinkByID(java.lang.String)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        org.apache.poi.xwpf.usermodel.XWPFHyperlink r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List hyperlinks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xwpf.usermodel.XWPFHyperlink) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFHyperlink: java.lang.String getId()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.XWPFFootnote getFootnoteByID(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        int i0;
        org.apache.poi.xwpf.usermodel.XWPFFootnotes $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFFootnote $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFFootnotes: org.apache.poi.xwpf.usermodel.XWPFFootnote getFootnoteById(int)>(i0);

        return $r3;
    }

    public org.apache.poi.xwpf.usermodel.XWPFFootnote getEndnoteByID(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.Map $r1, $r2;
        int i0;
        java.lang.Object $r4;
        java.lang.Integer $r3;
        org.apache.poi.xwpf.usermodel.XWPFFootnote $r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map endnotes>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map endnotes>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (org.apache.poi.xwpf.usermodel.XWPFFootnote) $r4;

        return $r5;
    }

    public java.util.List getFootnotes()
    {
        java.util.List $r3, $r4;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFFootnotes $r1, $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFFootnotes: java.util.List getFootnotesList()>();

        return $r3;
    }

    public org.apache.poi.xwpf.usermodel.XWPFHyperlink[] getHyperlinks()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.lang.Object[] $r4;
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFHyperlink[] $r3, $r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List hyperlinks>;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List hyperlinks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.poi.xwpf.usermodel.XWPFHyperlink)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.poi.xwpf.usermodel.XWPFHyperlink[]) $r4;

        return $r5;
    }

    public org.apache.poi.xwpf.usermodel.XWPFComment getCommentByID(java.lang.String)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFComment r4;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List comments>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xwpf.usermodel.XWPFComment) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.String getId()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.XWPFComment[] getComments()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.lang.Object[] $r4;
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFComment[] $r3, $r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List comments>;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List comments>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.poi.xwpf.usermodel.XWPFComment)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.poi.xwpf.usermodel.XWPFComment[]) $r4;

        return $r5;
    }

    public org.apache.poi.openxml4j.opc.PackagePart getPartById(java.lang.String)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r5;
        org.apache.poi.openxml4j.opc.PackagePart $r1, $r4;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r6;
        org.apache.poi.openxml4j.opc.PackageRelationship $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r2 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getCorePart()>();

        $r3 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)>(r2);

        $r4 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label2 with label3;
    }

    public org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy getHeaderFooterPolicy()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy headerFooterPolicy>;

        return $r1;
    }

    public org.openxmlformats.schemas.wordprocessingml.x2006.main.CTStyles getStyle() throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        java.lang.IllegalStateException $r8, $r14;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.openxml4j.opc.PackagePart[] $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTStyles $r7;
        int $i0, $i1;
        org.apache.poi.openxml4j.opc.PackagePart $r4;
        java.lang.String $r2, $r12;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r13;
        org.apache.poi.xwpf.usermodel.XWPFRelation $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument $r6;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.io.InputStream $r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

     label1:
        $r1 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation STYLES>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $r3 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart[] getRelatedByType(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label4:
        $i0 = lengthof $r3;

        if $i0 == 1 goto label5;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting one Styles document part, but found ");

        $i1 = lengthof $r3;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label5:
        $r4 = $r3[0];

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r6 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument parse(java.io.InputStream)>($r5);

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTStyles getStyles()>();

        return $r7;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label2 with label3;
    }

    public java.util.List getAllEmbedds() throws org.apache.poi.openxml4j.exceptions.OpenXML4JException
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        org.apache.poi.openxml4j.opc.PackageRelationship r13, r14;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r4, $r7;
        org.apache.poi.openxml4j.opc.PackagePart $r2, $r3, $r6, $r10, $r12;
        java.util.LinkedList $r0;
        boolean $z0, $z1;
        java.util.Iterator $r5, $r8;
        java.lang.Object $r9, $r11;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r3 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships/oleObject");

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r11;

        $r12 = virtualinvoke $r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>(r13);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r7 = virtualinvoke $r6.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships/package");

        $r8 = virtualinvoke $r7.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r9;

        $r10 = virtualinvoke $r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>(r14);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label3;

     label4:
        return $r0;
    }

    private int getBodyElementSpecificPos(int, java.util.List)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        org.apache.poi.xwpf.usermodel.IBodyElement r5, $r8;
        int $i0, i1, $i2, $i3, $i4, i5, $i7, $i9, $i11, $i13;
        java.util.List r0, $r2, $r3;
        org.apache.poi.xwpf.usermodel.BodyElementType $r6, $r9;
        java.lang.Object $r4, $r7, $r10;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i1 := @parameter0: int;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $i7 = (int) -1;

        return $i7;

     label1:
        if i1 < 0 goto label5;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i2 goto label5;

        $r3 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.apache.poi.xwpf.usermodel.IBodyElement) $r4;

        $r6 = interfaceinvoke r5.<org.apache.poi.xwpf.usermodel.IBodyElement: org.apache.poi.xwpf.usermodel.BodyElementType getElementType()>();

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (org.apache.poi.xwpf.usermodel.IBodyElement) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.poi.xwpf.usermodel.IBodyElement: org.apache.poi.xwpf.usermodel.BodyElementType getElementType()>();

        if $r6 == $r9 goto label2;

        $i9 = (int) -1;

        return $i9;

     label2:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i4);

     label3:
        if i5 < 0 goto label5;

        $r10 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        if $r10 != r5 goto label4;

        return i5;

     label4:
        $i11 = (int) -1;

        i5 = i5 + $i11;

        goto label3;

     label5:
        $i13 = (int) -1;

        return $i13;
    }

    public int getParagraphPos(int)
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        int i0, $i1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $i1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getBodyElementSpecificPos(int,java.util.List)>(i0, $r1);

        return $i1;
    }

    public int getTablePos(int)
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        int i0, $i1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        $i1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getBodyElementSpecificPos(int,java.util.List)>(i0, $r1);

        return $i1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph insertNewParagraph(org.apache.xmlbeans.XmlCursor)
    {
        java.lang.Throwable $r17;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.xmlbeans.XmlCursor r1, $r9;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r7, $r15;
        int $i0, i1, i2;
        java.lang.String $r4;
        org.apache.xmlbeans.XmlObject $r5, $r11, r18;
        org.apache.xmlbeans.SchemaType $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r8, $r10, $r14, $r16;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP r6, $r12, $r13;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $z0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: boolean isCursorInBody(org.apache.xmlbeans.XmlCursor)>(r1);

        if $z0 == 0 goto label13;

        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.apache.xmlbeans.SchemaType type>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: void beginElement(java.lang.String,java.lang.String)>("p", $r4);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        r6 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) $r5;

        $r7 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        specialinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>(r6, r0);

        r18 = null;

     label01:
        $z1 = r18 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z1 != 0 goto label02;

        $z5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z5 == 0 goto label02;

        r18 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        goto label01;

     label02:
        $z2 = r18 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z2 == 0 goto label03;

        $r12 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) r18;

        if $r12 != r6 goto label04;

     label03:
        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(0, $r7);

        goto label05;

     label04:
        $r14 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $r13 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) r18;

        $r15 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraph(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP)>($r13);

        $i0 = interfaceinvoke $r14.<java.util.List: int indexOf(java.lang.Object)>($r15);

        i1 = $i0 + 1;

        $r16 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        interfaceinvoke $r16.<java.util.List: void add(int,java.lang.Object)>(i1, $r7);

     label05:
        $r9 = interfaceinvoke r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.apache.xmlbeans.XmlCursor newCursor()>();

     label06:
        i2 = 0;

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toCursor(org.apache.xmlbeans.XmlCursor)>($r9);

     label07:
        $z6 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z6 == 0 goto label09;

        $r11 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z3 = $r11 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z3 != 0 goto label08;

        $z4 = $r11 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z4 == 0 goto label07;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(i2, $r7);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toCursor(org.apache.xmlbeans.XmlCursor)>($r9);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

     label10:
        interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r7;

     label11:
        $r17 := @caughtexception;

     label12:
        interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r17;

     label13:
        return null;

        catch java.lang.Throwable from label06 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable insertNewTbl(org.apache.xmlbeans.XmlCursor)
    {
        java.lang.Throwable $r16;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.xmlbeans.XmlCursor r1, $r12;
        int $i0, i1, i2;
        java.lang.String $r4;
        org.apache.xmlbeans.XmlObject $r5, $r14, r17;
        org.apache.xmlbeans.SchemaType $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.xwpf.usermodel.XWPFTable $r7, $r10;
        java.util.List $r9, $r11, $r13, $r15;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl r6, $r8;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $z0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: boolean isCursorInBody(org.apache.xmlbeans.XmlCursor)>(r1);

        if $z0 == 0 goto label12;

        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.apache.xmlbeans.SchemaType type>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: void beginElement(java.lang.String,java.lang.String)>("tbl", $r4);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        r6 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) $r5;

        $r7 = new org.apache.poi.xwpf.usermodel.XWPFTable;

        specialinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFTable: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl,org.apache.poi.xwpf.usermodel.IBody)>(r6, r0);

        r17 = null;

     label01:
        $z1 = r17 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z1 != 0 goto label02;

        $z5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z5 == 0 goto label02;

        r17 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        goto label01;

     label02:
        $z2 = r17 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z2 != 0 goto label03;

        $r15 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r15.<java.util.List: void add(int,java.lang.Object)>(0, $r7);

        goto label04;

     label03:
        $r9 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        $r8 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) r17;

        $r10 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFTable getTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)>($r8);

        $i0 = interfaceinvoke $r9.<java.util.List: int indexOf(java.lang.Object)>($r10);

        i1 = $i0 + 1;

        $r11 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r11.<java.util.List: void add(int,java.lang.Object)>(i1, $r7);

     label04:
        i2 = 0;

        $r12 = interfaceinvoke r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.apache.xmlbeans.XmlCursor newCursor()>();

     label05:
        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toCursor(org.apache.xmlbeans.XmlCursor)>($r12);

     label06:
        $z6 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z6 == 0 goto label08;

        $r14 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z3 = $r14 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z3 != 0 goto label07;

        $z4 = $r14 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z4 == 0 goto label06;

     label07:
        i2 = i2 + 1;

        goto label06;

     label08:
        $r13 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r13.<java.util.List: void add(int,java.lang.Object)>(i2, $r7);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toCursor(org.apache.xmlbeans.XmlCursor)>($r12);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

     label09:
        interfaceinvoke $r12.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r7;

     label10:
        $r16 := @caughtexception;

     label11:
        interfaceinvoke $r12.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r16;

     label12:
        return null;

        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private boolean isCursorInBody(org.apache.xmlbeans.XmlCursor)
    {
        java.lang.Throwable $r6;
        org.apache.poi.xwpf.usermodel.XWPFDocument r3;
        org.apache.xmlbeans.XmlCursor r0, $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r5;
        org.apache.xmlbeans.XmlObject $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r4;
        boolean $z0;

        r3 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $r4 = r3.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        if $r2 != $r5 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $z0;

     label4:
        $r6 := @caughtexception;

     label5:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private int getPosOfBodyElement(org.apache.poi.xwpf.usermodel.IBodyElement)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r2;
        org.apache.poi.xwpf.usermodel.IBodyElement r0, r6;
        java.util.List $r3, $r4;
        int $i0, i1, $i3;
        org.apache.poi.xwpf.usermodel.BodyElementType $r1, $r7;
        java.lang.Object $r5;
        boolean $z0;

        r2 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r0 := @parameter0: org.apache.poi.xwpf.usermodel.IBodyElement;

        $r1 = interfaceinvoke r0.<org.apache.poi.xwpf.usermodel.IBodyElement: org.apache.poi.xwpf.usermodel.BodyElementType getElementType()>();

        i1 = 0;

     label1:
        $r3 = r2.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r2.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (org.apache.poi.xwpf.usermodel.IBodyElement) $r5;

        $r7 = interfaceinvoke r6.<org.apache.poi.xwpf.usermodel.IBodyElement: org.apache.poi.xwpf.usermodel.BodyElementType getElementType()>();

        if $r7 != $r1 goto label2;

        $z0 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public int getPosOfParagraph(org.apache.poi.xwpf.usermodel.XWPFParagraph)
    {
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $i0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getPosOfBodyElement(org.apache.poi.xwpf.usermodel.IBodyElement)>(r1);

        return $i0;
    }

    public int getPosOfTable(org.apache.poi.xwpf.usermodel.XWPFTable)
    {
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFTable r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTable;

        $i0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getPosOfBodyElement(org.apache.poi.xwpf.usermodel.IBodyElement)>(r1);

        return $i0;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r9;
        org.apache.poi.xwpf.usermodel.XWPFDocument r7;
        java.util.HashMap $r6;
        org.apache.xmlbeans.XmlOptions $r0, $r1;
        org.apache.poi.openxml4j.opc.PackagePart $r8;
        javax.xml.namespace.QName $r2, $r4;
        java.lang.String $r5;
        org.apache.xmlbeans.SchemaType $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r10;

        r7 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        $r1 = <org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>(org.apache.xmlbeans.XmlOptions)>($r1);

        $r2 = new javax.xml.namespace.QName;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.apache.xmlbeans.SchemaType type>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r5, "document");

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSyntheticDocumentElement(javax.xml.namespace.QName)>($r2);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/officeDocument/2006/math", "m");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("urn:schemas-microsoft-com:office:office", "o");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "r");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("urn:schemas-microsoft-com:vml", "v");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/markup-compatibility/2006", "ve");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/wordprocessingml/2006/main", "w");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("urn:schemas-microsoft-com:office:word", "w10");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.microsoft.com/office/word/2006/wordml", "wne");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing", "wp");

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSuggestedPrefixes(java.util.Map)>($r6);

        $r8 = virtualinvoke r7.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        $r10 = r7.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>($r9, $r0);

        virtualinvoke $r9.<java.io.OutputStream: void close()>();

        return;
    }

    private int getRelationIndex(org.apache.poi.xwpf.usermodel.XWPFRelation)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.Iterator $r2;
        org.apache.poi.openxml4j.opc.PackageRelationship $r5;
        java.util.List $r1;
        org.apache.poi.POIXMLDocumentPart r4;
        org.apache.poi.xwpf.usermodel.XWPFRelation r7;
        int i0;
        java.lang.Object $r3;
        java.lang.String $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r7 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFRelation;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getRelations()>();

        i0 = 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.POIXMLDocumentPart) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.POIXMLDocumentPart: org.apache.poi.openxml4j.opc.PackageRelationship getPackageRelationship()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r8 = virtualinvoke r7.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getRelation()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        goto label1;

     label3:
        return i0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph createParagraph()
    {
        java.util.List $r5, $r6;
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r0 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP addNewP()>();

        specialinvoke $r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>($r4, r1);

        $r5 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r6 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFNumbering createNumbering()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFFactory $r5;
        org.apache.poi.xwpf.usermodel.XWPFRelation r4;
        org.apache.poi.POIXMLDocumentPart $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument $r3;
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFNumbering $r1, $r2, r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r8;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFNumbering numbering>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument newInstance()>();

        r4 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation NUMBERING>;

        $i0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getRelationIndex(org.apache.poi.xwpf.usermodel.XWPFRelation)>(r4);

        $r5 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFFactory: org.apache.poi.xwpf.usermodel.XWPFFactory getInstance()>();

        $r6 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLDocumentPart createRelationship(org.apache.poi.POIXMLRelation,org.apache.poi.POIXMLFactory,int)>(r4, $r5, $i0);

        r7 = (org.apache.poi.xwpf.usermodel.XWPFNumbering) $r6;

        $r8 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering addNewNumbering()>();

        virtualinvoke r7.<org.apache.poi.xwpf.usermodel.XWPFNumbering: void setNumbering(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering)>($r8);

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFNumbering numbering> = r7;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFNumbering numbering>;

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFStyles createStyles()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTStyles $r8;
        org.apache.poi.xwpf.usermodel.XWPFFactory $r5;
        org.apache.poi.xwpf.usermodel.XWPFRelation r4;
        org.apache.poi.POIXMLDocumentPart $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument $r3;
        org.apache.poi.xwpf.usermodel.XWPFStyles $r1, $r2, r7;
        int $i0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFStyles styles>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument newInstance()>();

        r4 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation STYLES>;

        $i0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getRelationIndex(org.apache.poi.xwpf.usermodel.XWPFRelation)>(r4);

        $r5 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFFactory: org.apache.poi.xwpf.usermodel.XWPFFactory getInstance()>();

        $r6 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLDocumentPart createRelationship(org.apache.poi.POIXMLRelation,org.apache.poi.POIXMLFactory,int)>(r4, $r5, $i0);

        r7 = (org.apache.poi.xwpf.usermodel.XWPFStyles) $r6;

        $r8 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.StylesDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTStyles addNewStyles()>();

        virtualinvoke r7.<org.apache.poi.xwpf.usermodel.XWPFStyles: void setStyles(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTStyles)>($r8);

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFStyles styles> = r7;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFStyles styles>;

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFFootnotes createFootnotes()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFFootnotes $r1, $r2, r7;
        org.apache.poi.xwpf.usermodel.XWPFFactory $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFootnotes $r8;
        org.apache.poi.xwpf.usermodel.XWPFRelation r4;
        org.apache.poi.POIXMLDocumentPart $r6;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.FootnotesDocument $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.FootnotesDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.FootnotesDocument newInstance()>();

        r4 = <org.apache.poi.xwpf.usermodel.XWPFRelation: org.apache.poi.xwpf.usermodel.XWPFRelation FOOTNOTE>;

        $i0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getRelationIndex(org.apache.poi.xwpf.usermodel.XWPFRelation)>(r4);

        $r5 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFFactory: org.apache.poi.xwpf.usermodel.XWPFFactory getInstance()>();

        $r6 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLDocumentPart createRelationship(org.apache.poi.POIXMLRelation,org.apache.poi.POIXMLFactory,int)>(r4, $r5, $i0);

        r7 = (org.apache.poi.xwpf.usermodel.XWPFFootnotes) $r6;

        $r8 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.FootnotesDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFootnotes addNewFootnotes()>();

        virtualinvoke r7.<org.apache.poi.xwpf.usermodel.XWPFFootnotes: void setFootnotes(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFootnotes)>($r8);

        r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes> = r7;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFFootnote addFootnote(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFFootnotes $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn r1;
        org.apache.poi.xwpf.usermodel.XWPFFootnote $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnotes footnotes>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFFootnotes: org.apache.poi.xwpf.usermodel.XWPFFootnote addFootnote(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn)>(r1);

        return $r3;
    }

    public org.apache.poi.xwpf.usermodel.XWPFFootnote addEndnote(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        java.util.Map $r3;
        int $i0;
        java.math.BigInteger $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn r2;
        java.lang.Integer $r5;
        org.apache.poi.xwpf.usermodel.XWPFFootnote $r0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r2 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn;

        $r0 = new org.apache.poi.xwpf.usermodel.XWPFFootnote;

        specialinvoke $r0.<org.apache.poi.xwpf.usermodel.XWPFFootnote: void <init>(org.apache.poi.xwpf.usermodel.XWPFDocument,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn)>(r1, r2);

        $r3 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map endnotes>;

        $r4 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdn: java.math.BigInteger getId()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r0);

        return $r0;
    }

    public boolean removeBodyElement(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.IBodyElement $r4;
        int i0, $i1, $i2, $i3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r10, $r13;
        java.util.List $r1, $r2, $r8, $r9, $r12;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r11, $r14;
        org.apache.poi.xwpf.usermodel.BodyElementType $r5, $r6, $r7;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        if i0 < 0 goto label3;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.poi.xwpf.usermodel.IBodyElement) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.poi.xwpf.usermodel.IBodyElement: org.apache.poi.xwpf.usermodel.BodyElementType getElementType()>();

        $r6 = <org.apache.poi.xwpf.usermodel.BodyElementType: org.apache.poi.xwpf.usermodel.BodyElementType TABLE>;

        if $r5 != $r6 goto label1;

        $i3 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getTablePos(int)>(i0);

        $r12 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r12.<java.util.List: java.lang.Object remove(int)>($i3);

        $r13 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        interfaceinvoke $r14.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: void removeTbl(int)>($i3);

     label1:
        $r7 = <org.apache.poi.xwpf.usermodel.BodyElementType: org.apache.poi.xwpf.usermodel.BodyElementType PARAGRAPH>;

        if $r5 != $r7 goto label2;

        $i2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getParagraphPos(int)>(i0);

        $r9 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>($i2);

        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: void removeP(int)>($i2);

     label2:
        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>(i0);

        return 1;

     label3:
        return 0;
    }

    public void setParagraph(org.apache.poi.xwpf.usermodel.XWPFParagraph, int)
    {
        java.util.List $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r5;
        int i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r3;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r5 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: void setPArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP)>(i0, $r5);

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph getLastParagraph()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.lang.Object[] $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r5;
        java.util.List $r1, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r4;

        return $r5;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable createTable()
    {
        java.util.List $r5, $r6;
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r2;
        org.apache.poi.xwpf.usermodel.XWPFTable $r0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r0 = new org.apache.poi.xwpf.usermodel.XWPFTable;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl addNewTbl()>();

        specialinvoke $r0.<org.apache.poi.xwpf.usermodel.XWPFTable: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl,org.apache.poi.xwpf.usermodel.IBody)>($r4, r1);

        $r5 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r6 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable createTable(int, int)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        java.util.List $r5, $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r4;
        int i0, i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r2;
        org.apache.poi.xwpf.usermodel.XWPFTable $r0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.apache.poi.xwpf.usermodel.XWPFTable;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl addNewTbl()>();

        specialinvoke $r0.<org.apache.poi.xwpf.usermodel.XWPFTable: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl,org.apache.poi.xwpf.usermodel.IBody,int,int)>($r4, r1, i0, i1);

        $r5 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r6 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public void createTOC()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.lang.Integer $r12;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock $r3;
        int $i0, $i1;
        java.lang.String $r9, $r10, $r11, $r13;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r1;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        java.lang.NumberFormatException $r14;
        java.util.List $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r2;
        org.apache.poi.xwpf.usermodel.TOC $r4;
        java.lang.Object $r7;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 getDocument()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock addNewSdt()>();

        $r4 = new org.apache.poi.xwpf.usermodel.TOC;

        specialinvoke $r4.<org.apache.poi.xwpf.usermodel.TOC: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock)>($r3);

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r7;

        $r9 = virtualinvoke r8.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getStyle()>();

        if $r9 == null goto label5;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("Heading");

        if $z1 == 0 goto label5;

     label2:
        $r10 = "Heading";

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r11);

        $i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = virtualinvoke r8.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getText()>();

        virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.TOC: void addRow(int,java.lang.String,int,java.lang.String)>($i1, $r13, 1, "112723803");

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.NumberFormatException: void printStackTrace()>();

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public void setTable(int, org.apache.poi.xwpf.usermodel.XWPFTable)
    {
        java.util.List $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r4;
        int i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r5 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getCTTbl()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: void setTblArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)>(i0, $r5);

        return;
    }

    public boolean isEnforcedReadonlyProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum READ_ONLY>;

        $z0 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: boolean isEnforcedWith(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return $z0;
    }

    public boolean isEnforcedFillingFormsProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum FORMS>;

        $z0 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: boolean isEnforcedWith(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return $z0;
    }

    public boolean isEnforcedCommentsProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum COMMENTS>;

        $z0 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: boolean isEnforcedWith(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return $z0;
    }

    public boolean isEnforcedTrackedChangesProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum TRACKED_CHANGES>;

        $z0 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: boolean isEnforcedWith(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return $z0;
    }

    public boolean isEnforcedUpdateFields()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $z0 = virtualinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFSettings: boolean isUpdateFields()>();

        return $z0;
    }

    public void enforceReadonlyProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum READ_ONLY>;

        virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return;
    }

    public void enforceReadonlyProtection(java.lang.String, org.apache.poi.poifs.crypt.HashAlgorithm)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r4;
        java.lang.String r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r3;
        org.apache.poi.poifs.crypt.HashAlgorithm r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.poi.poifs.crypt.HashAlgorithm;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum READ_ONLY>;

        virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum,java.lang.String,org.apache.poi.poifs.crypt.HashAlgorithm)>($r3, r1, r2);

        return;
    }

    public void enforceFillingFormsProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum FORMS>;

        virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return;
    }

    public void enforceFillingFormsProtection(java.lang.String, org.apache.poi.poifs.crypt.HashAlgorithm)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r4;
        java.lang.String r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r3;
        org.apache.poi.poifs.crypt.HashAlgorithm r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.poi.poifs.crypt.HashAlgorithm;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum FORMS>;

        virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum,java.lang.String,org.apache.poi.poifs.crypt.HashAlgorithm)>($r3, r1, r2);

        return;
    }

    public void enforceCommentsProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum COMMENTS>;

        virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return;
    }

    public void enforceCommentsProtection(java.lang.String, org.apache.poi.poifs.crypt.HashAlgorithm)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r4;
        java.lang.String r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r3;
        org.apache.poi.poifs.crypt.HashAlgorithm r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.poi.poifs.crypt.HashAlgorithm;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum COMMENTS>;

        virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum,java.lang.String,org.apache.poi.poifs.crypt.HashAlgorithm)>($r3, r1, r2);

        return;
    }

    public void enforceTrackedChangesProtection()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r1;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum TRACKED_CHANGES>;

        virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum)>($r1);

        return;
    }

    public void enforceTrackedChangesProtection(java.lang.String, org.apache.poi.poifs.crypt.HashAlgorithm)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r4;
        java.lang.String r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum $r3;
        org.apache.poi.poifs.crypt.HashAlgorithm r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.poi.poifs.crypt.HashAlgorithm;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect: org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum TRACKED_CHANGES>;

        virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setEnforcementEditValue(org.openxmlformats.schemas.wordprocessingml.x2006.main.STDocProtect$Enum,java.lang.String,org.apache.poi.poifs.crypt.HashAlgorithm)>($r3, r1, r2);

        return;
    }

    public boolean validateProtectionPassword(java.lang.String)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $z0 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSettings: boolean validateProtectionPassword(java.lang.String)>(r1);

        return $z0;
    }

    public void removeProtectionEnforcement()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        virtualinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFSettings: void removeEnforcement()>();

        return;
    }

    public void enforceUpdateFields()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        virtualinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setUpdateFields()>();

        return;
    }

    public boolean isTrackRevisions()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        $z0 = virtualinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFSettings: boolean isTrackRevisions()>();

        return $z0;
    }

    public void setTrackRevisions(boolean)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFSettings $r1;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFSettings settings>;

        virtualinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFSettings: void setTrackRevisions(boolean)>(z0);

        return;
    }

    public void insertTable(int, org.apache.poi.xwpf.usermodel.XWPFTable)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.List $r2, $r5, $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody $r4, $r8;
        int i0, $i1, i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r9, $r10;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 $r3, $r7;
        org.apache.poi.xwpf.usermodel.XWPFTable r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List bodyElements>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        i2 = 0;

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: java.util.List getTblList()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1 ctDocument>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDocument1: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody getBody()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBody: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getTblArray(int)>(i2);

        $r10 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getCTTbl()>();

        if $r9 != $r10 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>(i2, r1);

        return;
    }

    public java.util.List getAllPictures()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List pictures>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getAllPackagePictures()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.util.ArrayList $r0;
        java.util.List $r5, r7;
        java.util.Map $r2;
        java.lang.Object $r6;
        boolean $z0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map packagePictures>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.List) $r6;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>(r7);

        goto label1;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r5;
    }

    void registerPackagePictureData(org.apache.poi.xwpf.usermodel.XWPFPictureData)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.ArrayList $r5;
        java.util.List r8;
        java.lang.Long $r3, $r7;
        java.util.Map $r2, $r6;
        java.lang.Object $r4;
        org.apache.poi.xwpf.usermodel.XWPFPictureData r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFPictureData;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map packagePictures>;

        $r3 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFPictureData: java.lang.Long getChecksum()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r8 = (java.util.List) $r4;

        if r8 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(1);

        r8 = $r5;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map packagePictures>;

        $r7 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFPictureData: java.lang.Long getChecksum()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r5);

     label1:
        $z0 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    org.apache.poi.xwpf.usermodel.XWPFPictureData findPackagePictureData(byte[], int)
    {
        byte[] r0, $r9;
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        java.util.Iterator $r6;
        long $l0;
        java.util.List r5;
        java.lang.Long $r3;
        java.util.Map $r2;
        int i1;
        java.lang.Object $r4, $r7;
        org.apache.poi.xwpf.usermodel.XWPFPictureData r8, r10;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r0 := @parameter0: byte[];

        i1 := @parameter1: int;

        $l0 = staticinvoke <org.apache.poi.util.IOUtils: long calculateChecksum(byte[])>(r0);

        r10 = null;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.Map packagePictures>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.util.List) $r4;

        if r5 == null goto label3;

        $r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if r10 != null goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.poi.xwpf.usermodel.XWPFPictureData) $r7;

        $r9 = virtualinvoke r8.<org.apache.poi.xwpf.usermodel.XWPFPictureData: byte[] getData()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r0, $r9);

        if $z1 == 0 goto label2;

        r10 = r8;

     label2:
        goto label1;

     label3:
        return r10;
    }

    public java.lang.String addPictureData(byte[], int) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        java.lang.Throwable $r21;
        byte[] r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.POIXMLRelation[] $r3;
        org.apache.poi.openxml4j.opc.PackageRelationship $r11;
        org.apache.poi.xwpf.usermodel.XWPFFactory $r14;
        org.apache.poi.POIXMLRelation r4;
        org.apache.poi.POIXMLDocumentPart $r15;
        int i0, $i1;
        org.apache.poi.openxml4j.opc.PackagePart $r7, $r10, $r16;
        java.lang.String $r6, $r9, $r12, $r19;
        org.apache.poi.POIXMLException $r23;
        boolean $z0;
        java.io.OutputStream $r17, r26;
        org.apache.poi.openxml4j.opc.PackagePartName $r8;
        java.io.IOException $r20, $r22, $r24;
        java.util.List $r5, $r13, $r18;
        org.apache.poi.openxml4j.opc.TargetMode r27;
        org.apache.poi.xwpf.usermodel.XWPFPictureData $r2, r25;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFPictureData findPackagePictureData(byte[],int)>(r1, i0);

        $r3 = <org.apache.poi.xwpf.usermodel.XWPFPictureData: org.apache.poi.POIXMLRelation[] RELATIONS>;

        r4 = $r3[i0];

        if $r2 != null goto label12;

        $i1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: int getNextPicNameNumber(int)>(i0);

        $r14 = staticinvoke <org.apache.poi.xwpf.usermodel.XWPFFactory: org.apache.poi.xwpf.usermodel.XWPFFactory getInstance()>();

        $r15 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLDocumentPart createRelationship(org.apache.poi.POIXMLRelation,org.apache.poi.POIXMLFactory,int)>(r4, $r14, $i1);

        r25 = (org.apache.poi.xwpf.usermodel.XWPFPictureData) $r15;

        $r16 = virtualinvoke r25.<org.apache.poi.xwpf.usermodel.XWPFPictureData: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        r26 = null;

     label01:
        $r17 = virtualinvoke $r16.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        r26 = $r17;

        virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(r1);

     label02:
        if $r17 == null goto label03;

        virtualinvoke $r17.<java.io.OutputStream: void close()>();

     label03:
        goto label11;

     label04:
        $r24 := @caughtexception;

        goto label11;

     label05:
        $r22 := @caughtexception;

        $r23 = new org.apache.poi.POIXMLException;

        specialinvoke $r23.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r22);

        throw $r23;

     label06:
        $r21 := @caughtexception;

     label07:
        if r26 == null goto label08;

        virtualinvoke r26.<java.io.OutputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r20 := @caughtexception;

     label10:
        throw $r21;

     label11:
        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void registerPackagePictureData(org.apache.poi.xwpf.usermodel.XWPFPictureData)>(r25);

        $r18 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List pictures>;

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r25);

        $r19 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.lang.String getRelationId(org.apache.poi.POIXMLDocumentPart)>(r25);

        return $r19;

     label12:
        $r5 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getRelations()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label13;

        $r7 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFPictureData: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        r27 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode INTERNAL>;

        $r8 = virtualinvoke $r7.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r9 = virtualinvoke r4.<org.apache.poi.POIXMLRelation: java.lang.String getRelation()>();

        $r10 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r11 = virtualinvoke $r10.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String)>($r8, r27, $r9);

        $r12 = virtualinvoke $r11.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: void addRelation(java.lang.String,org.apache.poi.POIXMLDocumentPart)>($r12, $r2);

        $r13 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List pictures>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r12;

     label13:
        $r6 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.lang.String getRelationId(org.apache.poi.POIXMLDocumentPart)>($r2);

        return $r6;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public java.lang.String addPictureData(java.io.InputStream, int) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        byte[] $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r2;
        int i0;
        java.io.IOException $r4;
        java.lang.String $r3;
        org.apache.poi.POIXMLException $r5;
        java.io.InputStream r0;

        r2 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

     label1:
        $r1 = staticinvoke <org.apache.poi.util.IOUtils: byte[] toByteArray(java.io.InputStream)>(r0);

        $r3 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.lang.String addPictureData(byte[],int)>($r1, i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.poi.POIXMLException;

        specialinvoke $r5.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getNextPicNameNumber(int) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.POIXMLRelation[] $r2, $r7;
        org.apache.poi.openxml4j.opc.PackagePartName r10;
        org.apache.poi.POIXMLRelation $r3, $r8;
        java.util.List $r1;
        org.apache.poi.openxml4j.opc.OPCPackage $r5;
        int $i0, i1, i2;
        org.apache.poi.openxml4j.opc.PackagePart $r6;
        java.lang.String $r4, $r9;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i1 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getAllPackagePictures()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i2 = $i0 + 1;

        $r2 = <org.apache.poi.xwpf.usermodel.XWPFPictureData: org.apache.poi.POIXMLRelation[] RELATIONS>;

        $r3 = $r2[i1];

        $r4 = virtualinvoke $r3.<org.apache.poi.POIXMLRelation: java.lang.String getFileName(int)>(i2);

        r10 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.lang.String)>($r4);

     label1:
        $r5 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>(r10);

        if $r6 == null goto label2;

        i2 = i2 + 1;

        $r7 = <org.apache.poi.xwpf.usermodel.XWPFPictureData: org.apache.poi.POIXMLRelation[] RELATIONS>;

        $r8 = $r7[i1];

        $r9 = virtualinvoke $r8.<org.apache.poi.POIXMLRelation: java.lang.String getFileName(int)>(i2);

        r10 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.lang.String)>($r9);

        goto label1;

     label2:
        return i2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFPictureData getPictureDataByID(java.lang.String)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.POIXMLDocumentPart $r2;
        java.lang.String r1;
        org.apache.poi.xwpf.usermodel.XWPFPictureData r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.POIXMLDocumentPart getRelationById(java.lang.String)>(r1);

        $z0 = $r2 instanceof org.apache.poi.xwpf.usermodel.XWPFPictureData;

        if $z0 == 0 goto label1;

        r3 = (org.apache.poi.xwpf.usermodel.XWPFPictureData) $r2;

        return r3;

     label1:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.XWPFNumbering getNumbering()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFNumbering $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFNumbering numbering>;

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFStyles getStyles()
    {
        org.apache.poi.xwpf.usermodel.XWPFStyles $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFStyles styles>;

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraph(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r4, $r9;
        java.util.List $r1, $r2, $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r5, r6;
        int $i0, i1;
        java.lang.Object $r3, $r8;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r6 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        i1 = 0;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getParagraphs()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getParagraphs()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()>();

        if $r5 != r6 goto label2;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getParagraphs()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r8;

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable getTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.List $r1, $r2, $r7;
        int $i0, i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r5, r6;
        java.lang.Object $r3, $r8;
        org.apache.poi.xwpf.usermodel.XWPFTable $r4, $r9;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r6 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getTables()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTable) $r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getCTTbl()>();

        if $r5 != r6 goto label2;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List getTables()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (org.apache.poi.xwpf.usermodel.XWPFTable) $r8;

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.util.Iterator getTablesIterator()
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.Iterator $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List tables>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.Iterator getParagraphsIterator()
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        java.util.Iterator $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraphArray(int)
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;
        int i0, $i1;
        java.lang.Object $r3;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFDocument: java.util.List paragraphs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r3;

        return $r4;

     label1:
        return null;
    }

    public org.apache.poi.POIXMLDocumentPart getPart()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        return r0;
    }

    public org.apache.poi.xwpf.usermodel.BodyType getPartType()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r1;
        org.apache.poi.xwpf.usermodel.BodyType $r0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        $r0 = <org.apache.poi.xwpf.usermodel.BodyType: org.apache.poi.xwpf.usermodel.BodyType DOCUMENT>;

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableCell getTableCell(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc r0;
        org.apache.xmlbeans.XmlCursor $r1;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r9;
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl r5;
        org.apache.xmlbeans.XmlObject $r2, $r4;
        boolean $z0, $z1;
        org.apache.poi.xwpf.usermodel.XWPFTable $r7;

        r6 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        r0 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z0 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow) $r2;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r4 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $z1 = $r4 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z1 != 0 goto label2;

        return null;

     label2:
        r5 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) $r4;

        $r7 = virtualinvoke r6.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFTable getTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)>(r5);

        if $r7 != null goto label3;

        return null;

     label3:
        $r8 = virtualinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow)>(r3);

        if $r8 != null goto label4;

        return null;

     label4:
        $r9 = virtualinvoke $r8.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTableCell getTableCell(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc)>(r0);

        return $r9;
    }

    public org.apache.poi.xwpf.usermodel.XWPFDocument getXWPFDocument()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFDocument;

        return r0;
    }
}
