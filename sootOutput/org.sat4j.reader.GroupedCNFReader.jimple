public class org.sat4j.reader.GroupedCNFReader extends org.sat4j.reader.DimacsReader
{
    private static final long serialVersionUID;
    private int numberOfComponents;
    private final org.sat4j.tools.xplain.HighLevelXplain hlxplain;
    private int currentComponentIndex;
    static final boolean $assertionsDisabled;

    public void <init>(org.sat4j.tools.xplain.HighLevelXplain)
    {
        org.sat4j.reader.GroupedCNFReader r0;
        org.sat4j.tools.xplain.HighLevelXplain r1;

        r0 := @this: org.sat4j.reader.GroupedCNFReader;

        r1 := @parameter0: org.sat4j.tools.xplain.HighLevelXplain;

        specialinvoke r0.<org.sat4j.reader.DimacsReader: void <init>(org.sat4j.specs.ISolver,java.lang.String)>(r1, "gcnf");

        r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.tools.xplain.HighLevelXplain hlxplain> = r1;

        return;
    }

    protected void readProblemLine() throws java.io.IOException, org.sat4j.reader.ParseFormatException
    {
        boolean $z0, $z1, $z2, $z3;
        org.sat4j.reader.ParseFormatException $r16, $r23;
        java.lang.StringBuilder $r17, $r18, $r20, $r21, $r24, $r25, $r27, $r28;
        org.sat4j.reader.EfficientScanner $r1;
        org.sat4j.specs.ISolver $r10, $r13;
        java.lang.String[] $r4;
        java.lang.AssertionError $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r19, $r22, $r26, $r29;
        org.sat4j.reader.GroupedCNFReader r0;

        r0 := @this: org.sat4j.reader.GroupedCNFReader;

        $r1 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.reader.EfficientScanner scanner>;

        $r2 = virtualinvoke $r1.<org.sat4j.reader.EfficientScanner: java.lang.String nextLine()>();

        if $r2 != null goto label1;

        $r16 = new org.sat4j.reader.ParseFormatException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("premature end of file: <p ");

        $r19 = r0.<org.sat4j.reader.GroupedCNFReader: java.lang.String formatString>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ...> expected");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>($r22);

        throw $r16;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        $i0 = lengthof $r4;

        if $i0 < 5 goto label2;

        $r6 = "p";

        $r5 = $r4[0];

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r8 = r0.<org.sat4j.reader.GroupedCNFReader: java.lang.String formatString>;

        $r7 = $r4[1];

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label3;

     label2:
        $r23 = new org.sat4j.reader.ParseFormatException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem line expected (p ");

        $r26 = r0.<org.sat4j.reader.GroupedCNFReader: java.lang.String formatString>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ...)");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>($r29);

        throw $r23;

     label3:
        $r9 = $r4[2];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $z2 = <org.sat4j.reader.GroupedCNFReader: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        if $i1 > 0 goto label4;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label4:
        $r10 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r10.<org.sat4j.specs.ISolver: int newVar(int)>($i1);

        $r11 = $r4[3];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r0.<org.sat4j.reader.GroupedCNFReader: int expectedNbOfConstr> = $i2;

        $z3 = <org.sat4j.reader.GroupedCNFReader: boolean $assertionsDisabled>;

        if $z3 != 0 goto label5;

        $i5 = r0.<org.sat4j.reader.GroupedCNFReader: int expectedNbOfConstr>;

        if $i5 > 0 goto label5;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label5:
        $r12 = $r4[4];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        r0.<org.sat4j.reader.GroupedCNFReader: int numberOfComponents> = $i3;

        $r13 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.ISolver solver>;

        $i4 = r0.<org.sat4j.reader.GroupedCNFReader: int expectedNbOfConstr>;

        interfaceinvoke $r13.<org.sat4j.specs.ISolver: void setExpectedNumberOfClauses(int)>($i4);

        return;
    }

    protected boolean handleLine() throws org.sat4j.specs.ContradictionException, java.io.IOException, org.sat4j.reader.ParseFormatException
    {
        java.lang.Integer $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r2, $r4, $r10;
        boolean $z0, $z1, $z2, z3;
        org.sat4j.reader.GroupedCNFReader r0;
        org.sat4j.specs.IVecInt $r13, $r14, $r15;
        org.sat4j.reader.ParseFormatException $r3, $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.sat4j.reader.EfficientScanner $r1, $r11, $r12;

        r0 := @this: org.sat4j.reader.GroupedCNFReader;

        z3 = 0;

        $r1 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.reader.EfficientScanner scanner>;

        $r2 = virtualinvoke $r1.<org.sat4j.reader.EfficientScanner: java.lang.String next()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("}");

        if $z1 != 0 goto label2;

     label1:
        $r3 = new org.sat4j.reader.ParseFormatException;

        specialinvoke $r3.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>("Component index required at the beginning of the clause");

        throw $r3;

     label2:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r0.<org.sat4j.reader.GroupedCNFReader: int currentComponentIndex> = $i2;

        $i3 = r0.<org.sat4j.reader.GroupedCNFReader: int currentComponentIndex>;

        if $i3 < 0 goto label3;

        $i6 = r0.<org.sat4j.reader.GroupedCNFReader: int currentComponentIndex>;

        $i5 = r0.<org.sat4j.reader.GroupedCNFReader: int numberOfComponents>;

        if $i6 <= $i5 goto label4;

     label3:
        $r6 = new org.sat4j.reader.ParseFormatException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrong component index: ");

        $i4 = r0.<org.sat4j.reader.GroupedCNFReader: int currentComponentIndex>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.sat4j.reader.ParseFormatException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        $r11 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.reader.EfficientScanner scanner>;

        $z2 = virtualinvoke $r11.<org.sat4j.reader.EfficientScanner: boolean eof()>();

        if $z2 != 0 goto label6;

        $r12 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.reader.EfficientScanner scanner>;

        $i7 = virtualinvoke $r12.<org.sat4j.reader.EfficientScanner: int nextInt()>();

        if $i7 != 0 goto label5;

        $r14 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.IVecInt literals>;

        $i8 = interfaceinvoke $r14.<org.sat4j.specs.IVecInt: int size()>();

        if $i8 <= 0 goto label6;

        virtualinvoke r0.<org.sat4j.reader.GroupedCNFReader: void flushConstraint()>();

        $r15 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.IVecInt literals>;

        interfaceinvoke $r15.<org.sat4j.specs.IVecInt: void clear()>();

        z3 = 1;

        goto label6;

     label5:
        $r13 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.IVecInt literals>;

        interfaceinvoke $r13.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i7);

        goto label4;

     label6:
        return z3;
    }

    protected void flushConstraint() throws org.sat4j.specs.ContradictionException
    {
        java.io.PrintStream $r7;
        org.sat4j.reader.GroupedCNFReader r0;
        org.sat4j.specs.IVecInt $r1, $r3, $r9;
        java.lang.IllegalArgumentException $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r8, $r10;
        java.lang.String $r11;
        org.sat4j.tools.xplain.HighLevelXplain $r2, $r4;
        boolean $z0;

        r0 := @this: org.sat4j.reader.GroupedCNFReader;

     label1:
        $i0 = r0.<org.sat4j.reader.GroupedCNFReader: int currentComponentIndex>;

        if $i0 != 0 goto label2;

        $r4 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.tools.xplain.HighLevelXplain hlxplain>;

        $r3 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.IVecInt literals>;

        virtualinvoke $r4.<org.sat4j.tools.xplain.HighLevelXplain: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r3);

        goto label3;

     label2:
        $r2 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.tools.xplain.HighLevelXplain hlxplain>;

        $r1 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.IVecInt literals>;

        $i1 = r0.<org.sat4j.reader.GroupedCNFReader: int currentComponentIndex>;

        virtualinvoke $r2.<org.sat4j.tools.xplain.HighLevelXplain: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt,int)>($r1, $i1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $z0 = virtualinvoke r0.<org.sat4j.reader.GroupedCNFReader: boolean isVerbose()>();

        if $z0 == 0 goto label5;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c Skipping constraint ");

        $r9 = r0.<org.sat4j.reader.GroupedCNFReader: org.sat4j.specs.IVecInt literals>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.reader.GroupedCNFReader: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/reader/GroupedCNFReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.reader.GroupedCNFReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
