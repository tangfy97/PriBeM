abstract class org.apache.commons.codec.language.ColognePhonetic$CologneBuffer extends java.lang.Object
{
    protected final char[] data;
    protected int length;
    final org.apache.commons.codec.language.ColognePhonetic this$0;

    public void <init>(org.apache.commons.codec.language.ColognePhonetic, char[])
    {
        org.apache.commons.codec.language.ColognePhonetic$CologneBuffer r0;
        int $i0;
        char[] r2;
        org.apache.commons.codec.language.ColognePhonetic r1;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic$CologneBuffer;

        r1 := @parameter0: org.apache.commons.codec.language.ColognePhonetic;

        r2 := @parameter1: char[];

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: org.apache.commons.codec.language.ColognePhonetic this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: int length> = 0;

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: char[] data> = r2;

        $i0 = lengthof r2;

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: int length> = $i0;

        return;
    }

    public void <init>(org.apache.commons.codec.language.ColognePhonetic, int)
    {
        org.apache.commons.codec.language.ColognePhonetic$CologneBuffer r0;
        int i0;
        char[] $r2;
        org.apache.commons.codec.language.ColognePhonetic r1;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic$CologneBuffer;

        r1 := @parameter0: org.apache.commons.codec.language.ColognePhonetic;

        i0 := @parameter1: int;

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: org.apache.commons.codec.language.ColognePhonetic this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: int length> = 0;

        $r2 = newarray (char)[i0];

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: char[] data> = $r2;

        r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: int length> = 0;

        return;
    }

    protected abstract char[] copyData(int, int);

    public int length()
    {
        int $i0;
        org.apache.commons.codec.language.ColognePhonetic$CologneBuffer r0;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic$CologneBuffer;

        $i0 = r0.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: int length>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.codec.language.ColognePhonetic$CologneBuffer r1;
        int $i0;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.apache.commons.codec.language.ColognePhonetic$CologneBuffer;

        $r0 = new java.lang.String;

        $i0 = r1.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: int length>;

        $r2 = virtualinvoke r1.<org.apache.commons.codec.language.ColognePhonetic$CologneBuffer: char[] copyData(int,int)>(0, $i0);

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        return $r0;
    }
}
