class ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset extends java.lang.Object
{
    private int ntimes;
    private int nruns;
    private int noffsets;
    private short[][] countInv;
    private short[][] expected;
    private short[][] countOffsetInv;
    private short[][] expectedOffset;
    private int[] countTotalRunInv;
    private int[] expectedTotalRun;
    final ucar.nc2.dt.fmrc.FmrcInventory this$0;

    void <init>(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        short[][] $r5, $r6, $r7, $r8, $r14, $r17;
        ucar.nc2.dt.fmrc.FmrcInventory r1;
        int[] $r11, $r12, $r13, $r16;
        boolean $z0;
        java.util.List $r2, $r3, $r4, $r9;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;
        short[] $r15, $r18;
        short $s15, $s18;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19, $i20, i21, i22, $i23, $i24;
        java.util.Iterator $r10;
        java.lang.Object $r19;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        r1 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1100(ucar.nc2.dt.fmrc.FmrcInventory)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns> = $i0;

        $r3 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1200(ucar.nc2.dt.fmrc.FmrcInventory)>(r1);

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int ntimes> = $i1;

        $r4 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1300(ucar.nc2.dt.fmrc.FmrcInventory)>(r1);

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int noffsets> = $i2;

        $i4 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int ntimes>;

        $i3 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns>;

        $r5 = newmultiarray (short)[$i4][$i3];

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] countInv> = $r5;

        $i6 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int ntimes>;

        $i5 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns>;

        $r6 = newmultiarray (short)[$i6][$i5];

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] expected> = $r6;

        $i8 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns>;

        $i7 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int noffsets>;

        $r7 = newmultiarray (short)[$i8][$i7];

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] countOffsetInv> = $r7;

        $i10 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns>;

        $i9 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int noffsets>;

        $r8 = newmultiarray (short)[$i10][$i9];

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] expectedOffset> = $r8;

        $r9 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1400(ucar.nc2.dt.fmrc.FmrcInventory)>(r1);

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r19 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r20 = (ucar.nc2.dt.fmrc.FmrcInventory$UberGrid) $r19;

        virtualinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: void addInventory(ucar.nc2.dt.fmrc.FmrcInventory$UberGrid)>(r20);

        goto label1;

     label2:
        $i11 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns>;

        $r11 = newarray (int)[$i11];

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] countTotalRunInv> = $r11;

        $i12 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns>;

        $r12 = newarray (int)[$i12];

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] expectedTotalRun> = $r12;

        i21 = 0;

     label3:
        $i13 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int nruns>;

        if i21 >= $i13 goto label6;

        i22 = 0;

     label4:
        $i14 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int noffsets>;

        if i22 >= $i14 goto label5;

        $r13 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] countTotalRunInv>;

        $i16 = $r13[i21];

        $r14 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] countOffsetInv>;

        $r15 = $r14[i21];

        $s15 = $r15[i22];

        $i23 = (int) $s15;

        $i17 = $i16 + $i23;

        $r13[i21] = $i17;

        $r16 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] expectedTotalRun>;

        $i19 = $r16[i21];

        $r17 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] expectedOffset>;

        $r18 = $r17[i21];

        $s18 = $r18[i22];

        $i24 = (int) $s18;

        $i20 = $i19 + $i24;

        $r16[i21] = $i20;

        i22 = i22 + 1;

        goto label4;

     label5:
        i21 = i21 + 1;

        goto label3;

     label6:
        return;
    }

    void addInventory(ucar.nc2.dt.fmrc.FmrcInventory$UberGrid)
    {
        ucar.nc2.dt.fmrc.FmrcInventory $r2, $r4, $r9, $r11, $r15, $r28, $r35;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r1;
        java.lang.StringBuilder $r27, $r31, $r32, $r33, $r34, $r37, $r39;
        java.lang.Double $r14;
        short $s5, $s7, $s8, $s10, $s11, $s13, $s14, $s16;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid r0;
        ucar.nc2.dt.fmrc.FmrcInventory$RunExpected $r8;
        java.lang.String $r30, $r36, $r38;
        java.util.Date r7, $r16;
        short[][] $r17, $r19, $r21, $r23;
        java.util.List $r3, $r5, $r10, $r12;
        short[] $r18, $r20, $r22, $r24;
        ucar.nc2.units.DateFormatter $r29;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i9, $i12, $i15, $i17, $i18, $i19, $i20, i21, i22, $i23, $i24, $i25, $i26;
        double $d0;
        org.slf4j.Logger $r25;
        java.lang.Object $r6, $r13;

        r1 := @this: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory$UberGrid;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countInv> = 0;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countExpected> = 0;

        i21 = 0;

     label1:
        $r2 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1100(ucar.nc2.dt.fmrc.FmrcInventory)>($r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i21 >= $i0 goto label7;

        $r4 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r5 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1100(ucar.nc2.dt.fmrc.FmrcInventory)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i21);

        r7 = (java.util.Date) $r6;

        $r8 = virtualinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: ucar.nc2.dt.fmrc.FmrcInventory$RunExpected findRun(java.util.Date)>(r7);

        if $r8 != null goto label2;

        goto label6;

     label2:
        i22 = 0;

     label3:
        $r9 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r10 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1300(ucar.nc2.dt.fmrc.FmrcInventory)>($r9);

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i22 >= $i1 goto label6;

        $r11 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r12 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1300(ucar.nc2.dt.fmrc.FmrcInventory)>($r11);

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i22);

        $r14 = (java.lang.Double) $r13;

        $d0 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $i2 = virtualinvoke $r8.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: int countInventory(double)>($d0);

        $i3 = virtualinvoke $r8.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: int countExpected(double)>($d0);

        $r15 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r16 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.Date access$200(ucar.nc2.dt.fmrc.FmrcInventory,java.util.Date,double)>($r15, r7, $d0);

        $i4 = virtualinvoke r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int findForecastIndex(java.util.Date)>($r16);

        if $i4 >= 0 goto label4;

        $r25 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: org.slf4j.Logger access$1700()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Forecast for runTime=");

        $r28 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r29 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.units.DateFormatter access$1500(ucar.nc2.dt.fmrc.FmrcInventory)>($r28);

        $r30 = virtualinvoke $r29.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>(r7);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OffsetHour=");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataset=");

        $r35 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r36 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String access$1600(ucar.nc2.dt.fmrc.FmrcInventory)>($r35);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>($r38);

        goto label5;

     label4:
        $r17 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] countInv>;

        $r18 = $r17[$i4];

        $s5 = $r18[i21];

        $i23 = (int) $s5;

        $i6 = $i23 + $i2;

        $s7 = (short) $i6;

        $r18[i21] = $s7;

        $r19 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] expected>;

        $r20 = $r19[$i4];

        $s8 = $r20[i21];

        $i24 = (int) $s8;

        $i9 = $i24 + $i3;

        $s10 = (short) $i9;

        $r20[i21] = $s10;

     label5:
        $r21 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] countOffsetInv>;

        $r22 = $r21[i21];

        $s11 = $r22[i22];

        $i25 = (int) $s11;

        $i12 = $i25 + $i2;

        $s13 = (short) $i12;

        $r22[i22] = $s13;

        $r23 = r1.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] expectedOffset>;

        $r24 = $r23[i21];

        $s14 = $r24[i22];

        $i26 = (int) $s14;

        $i15 = $i26 + $i3;

        $s16 = (short) $i15;

        $r24[i22] = $s16;

        $i17 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countInv>;

        $i18 = $i17 + $i2;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countInv> = $i18;

        $i19 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countExpected>;

        $i20 = $i19 + $i3;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countExpected> = $i20;

        i22 = i22 + 1;

        goto label3;

     label6:
        i21 = i21 + 1;

        goto label1;

     label7:
        return;
    }

    int findRunIndex(java.util.Date)
    {
        java.util.Date r6, r7;
        ucar.nc2.dt.fmrc.FmrcInventory $r1, $r3;
        java.util.List $r2, $r4;
        int $i0, i1, $i3;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        r7 := @parameter0: java.util.Date;

        i1 = 0;

     label1:
        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r2 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1100(ucar.nc2.dt.fmrc.FmrcInventory)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r4 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1100(ucar.nc2.dt.fmrc.FmrcInventory)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (java.util.Date) $r5;

        $z0 = virtualinvoke r6.<java.util.Date: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    int findForecastIndex(java.util.Date)
    {
        java.util.Date r6, r7;
        ucar.nc2.dt.fmrc.FmrcInventory $r1, $r3;
        java.util.List $r2, $r4;
        int $i0, i1, $i3;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        r7 := @parameter0: java.util.Date;

        i1 = 0;

     label1:
        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r2 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1200(ucar.nc2.dt.fmrc.FmrcInventory)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r4 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1200(ucar.nc2.dt.fmrc.FmrcInventory)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (java.util.Date) $r5;

        $z0 = virtualinvoke r6.<java.util.Date: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    int findOffsetIndex(double)
    {
        java.lang.Double $r6;
        ucar.nc2.dt.fmrc.FmrcInventory $r1, $r3;
        java.util.List $r2, $r4;
        byte $b1;
        int $i0, i2, $i4;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;
        java.lang.Object $r5;
        double d0, $d1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        d0 := @parameter0: double;

        i2 = 0;

     label1:
        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r2 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1300(ucar.nc2.dt.fmrc.FmrcInventory)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r3 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: ucar.nc2.dt.fmrc.FmrcInventory this$0>;

        $r4 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: java.util.List access$1300(ucar.nc2.dt.fmrc.FmrcInventory)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (java.lang.Double) $r5;

        $d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $b1 = d0 cmpl $d1;

        if $b1 != 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i4 = (int) -1;

        return $i4;
    }

    static int[] access$1800(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)
    {
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;
        int[] $r1;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] countTotalRunInv>;

        return $r1;
    }

    static int[] access$1900(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)
    {
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;
        int[] $r1;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] expectedTotalRun>;

        return $r1;
    }

    static short[][] access$2000(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)
    {
        short[][] $r1;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] countOffsetInv>;

        return $r1;
    }

    static short[][] access$2100(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)
    {
        short[][] $r1;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] expectedOffset>;

        return $r1;
    }

    static short[][] access$2200(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)
    {
        short[][] $r1;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] countInv>;

        return $r1;
    }

    static short[][] access$2300(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)
    {
        short[][] $r1;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] expected>;

        return $r1;
    }
}
