public class org.apache.jena.riot.stream.StreamManager extends java.lang.Object
{
    private static org.slf4j.Logger log;
    public static boolean logAllLookups;
    private java.util.List handlers;
    private org.apache.jena.riot.stream.LocationMapper mapper;
    private static org.apache.jena.riot.stream.StreamManager globalStreamManager;

    public void <init>()
    {
        org.apache.jena.riot.stream.StreamManager r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers> = $r1;

        r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper> = null;

        return;
    }

    public org.apache.jena.riot.stream.StreamManager clone()
    {
        org.apache.jena.riot.stream.StreamManager r0, $r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        $r1 = staticinvoke <org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.StreamManager clone(org.apache.jena.riot.stream.StreamManager)>(r0);

        return $r1;
    }

    private static org.apache.jena.riot.stream.StreamManager clone(org.apache.jena.riot.stream.StreamManager)
    {
        java.util.List $r2, $r3;
        org.apache.jena.riot.stream.LocationMapper $r4, $r5, $r6;
        org.apache.jena.riot.stream.StreamManager $r0, r1;

        r1 := @parameter0: org.apache.jena.riot.stream.StreamManager;

        $r0 = new org.apache.jena.riot.stream.StreamManager;

        specialinvoke $r0.<org.apache.jena.riot.stream.StreamManager: void <init>()>();

        $r3 = $r0.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers>;

        $r2 = r1.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $r4 = r1.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper>;

        if $r4 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r5 = r1.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper>;

        $r6 = virtualinvoke $r5.<org.apache.jena.riot.stream.LocationMapper: org.apache.jena.riot.stream.LocationMapper clone()>();

     label2:
        $r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper> = $r6;

        return $r0;
    }

    public static org.apache.jena.riot.stream.StreamManager makeDefaultStreamManager()
    {
        org.apache.jena.riot.stream.LocatorClassLoader $r3;
        org.apache.jena.riot.stream.LocationMapper $r6;
        org.apache.jena.riot.stream.LocatorFile $r1;
        org.apache.jena.riot.stream.StreamManager $r0;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        org.apache.jena.riot.stream.LocatorURL $r2;

        $r0 = new org.apache.jena.riot.stream.StreamManager;

        specialinvoke $r0.<org.apache.jena.riot.stream.StreamManager: void <init>()>();

        $r1 = new org.apache.jena.riot.stream.LocatorFile;

        specialinvoke $r1.<org.apache.jena.riot.stream.LocatorFile: void <init>(java.lang.String)>(null);

        virtualinvoke $r0.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r1);

        $r2 = new org.apache.jena.riot.stream.LocatorURL;

        specialinvoke $r2.<org.apache.jena.riot.stream.LocatorURL: void <init>()>();

        virtualinvoke $r0.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r2);

        $r3 = new org.apache.jena.riot.stream.LocatorClassLoader;

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r3.<org.apache.jena.riot.stream.LocatorClassLoader: void <init>(java.lang.ClassLoader)>($r5);

        virtualinvoke $r0.<org.apache.jena.riot.stream.StreamManager: void addLocator(org.apache.jena.riot.stream.Locator)>($r3);

        $r6 = staticinvoke <org.apache.jena.riot.stream.JenaIOEnvironment: org.apache.jena.riot.stream.LocationMapper getLocationMapper()>();

        virtualinvoke $r0.<org.apache.jena.riot.stream.StreamManager: void setLocationMapper(org.apache.jena.riot.stream.LocationMapper)>($r6);

        return $r0;
    }

    public static org.apache.jena.riot.stream.StreamManager get()
    {
        org.apache.jena.riot.stream.StreamManager $r0;

        $r0 = <org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.StreamManager globalStreamManager>;

        return $r0;
    }

    public static void setGlobal(org.apache.jena.riot.stream.StreamManager)
    {
        org.apache.jena.riot.stream.StreamManager r0;

        r0 := @parameter0: org.apache.jena.riot.stream.StreamManager;

        <org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.StreamManager globalStreamManager> = r0;

        return;
    }

    public org.apache.jena.atlas.web.TypedInputStream open(java.lang.String)
    {
        java.lang.String r2, $r3, $r9, $r15;
        boolean $z0, $z1, $z2;
        org.apache.jena.atlas.web.TypedInputStream $r16;
        org.slf4j.Logger $r0, $r4, $r6, $r11;
        org.apache.jena.riot.stream.StreamManager r1;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r12, $r13, $r14;

        r1 := @this: org.apache.jena.riot.stream.StreamManager;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("open(");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r15);

     label1:
        $r3 = virtualinvoke r1.<org.apache.jena.riot.stream.StreamManager: java.lang.String mapURI(java.lang.String)>(r2);

        $r4 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label2;

        $r6 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("open: mapped to ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>($r9);

     label2:
        $r16 = virtualinvoke r1.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.atlas.web.TypedInputStream openNoMapOrNull(java.lang.String)>($r3);

        return $r16;
    }

    public java.lang.String mapURI(java.lang.String)
    {
        org.apache.jena.riot.stream.LocationMapper $r1, $r3;
        java.lang.String r2, $r4, $r12, $r18, r19;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r5, $r7, $r13, $r15;
        org.apache.jena.riot.stream.StreamManager r0;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r14, $r16, $r17;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper>;

        if $r1 != null goto label1;

        return r2;

     label1:
        $r3 = r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper>;

        $r4 = virtualinvoke $r3.<org.apache.jena.riot.stream.LocationMapper: java.lang.String altMapping(java.lang.String,java.lang.String)>(r2, null);

        r19 = $r4;

        if $r4 != null goto label3;

        $z1 = <org.apache.jena.riot.stream.StreamManager: boolean logAllLookups>;

        if $z1 == 0 goto label2;

        $r13 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label2;

        $r15 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not mapped: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r18);

     label2:
        r19 = r2;

        goto label4;

     label3:
        $r5 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r7 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mapped: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r12);

     label4:
        return r19;
    }

    public org.apache.jena.atlas.web.TypedInputStream openNoMap(java.lang.String)
    {
        org.apache.jena.atlas.web.TypedInputStream $r2;
        org.apache.jena.riot.stream.StreamManager r0;
        java.lang.String r1;
        org.apache.jena.riot.RiotNotFoundException $r3;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.atlas.web.TypedInputStream openNoMapOrNull(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = new org.apache.jena.riot.RiotNotFoundException;

        specialinvoke $r3.<org.apache.jena.riot.RiotNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;

     label1:
        return $r2;
    }

    public org.apache.jena.atlas.web.TypedInputStream openNoMapOrNull(java.lang.String)
    {
        java.lang.String r5, $r13, $r16;
        boolean $z0, $z1;
        org.apache.jena.atlas.web.TypedInputStream $r6;
        org.slf4j.Logger $r7, $r9;
        java.util.Iterator $r2;
        org.apache.jena.riot.stream.StreamManager r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r14, $r15;
        org.apache.jena.riot.stream.Locator r4;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.jena.riot.stream.Locator) $r3;

        $r6 = interfaceinvoke r4.<org.apache.jena.riot.stream.Locator: org.apache.jena.atlas.web.TypedInputStream open(java.lang.String)>(r5);

        if $r6 == null goto label3;

        $r7 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r9 = <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r13 = interfaceinvoke r4.<org.apache.jena.riot.stream.Locator: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r16);

     label2:
        return $r6;

     label3:
        goto label1;

     label4:
        return null;
    }

    public void setLocationMapper(org.apache.jena.riot.stream.LocationMapper)
    {
        org.apache.jena.riot.stream.StreamManager r0;
        org.apache.jena.riot.stream.LocationMapper r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        r1 := @parameter0: org.apache.jena.riot.stream.LocationMapper;

        r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper> = r1;

        return;
    }

    public org.apache.jena.riot.stream.LocationMapper getLocationMapper()
    {
        org.apache.jena.riot.stream.StreamManager r0;
        org.apache.jena.riot.stream.LocationMapper $r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        $r1 = r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.LocationMapper mapper>;

        return $r1;
    }

    public java.util.List locators()
    {
        org.apache.jena.riot.stream.StreamManager r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        $r1 = r0.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void remove(org.apache.jena.riot.stream.Locator)
    {
        org.apache.jena.riot.stream.StreamManager r0;
        java.util.List $r2;
        org.apache.jena.riot.stream.Locator r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        r1 := @parameter0: org.apache.jena.riot.stream.Locator;

        $r2 = r0.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void clearLocators()
    {
        org.apache.jena.riot.stream.StreamManager r0;
        java.util.List $r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        $r1 = r0.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void addLocator(org.apache.jena.riot.stream.Locator)
    {
        org.apache.jena.riot.stream.StreamManager r0;
        java.util.List $r2;
        org.apache.jena.riot.stream.Locator r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        r1 := @parameter0: org.apache.jena.riot.stream.Locator;

        $r2 = r0.<org.apache.jena.riot.stream.StreamManager: java.util.List handlers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.jena.riot.stream.StreamManager r0, $r1;

        r0 := @this: org.apache.jena.riot.stream.StreamManager;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.StreamManager clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.jena.riot.stream.StreamManager $r1;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jena/riot/stream/StreamManager;");

        <org.apache.jena.riot.stream.StreamManager: org.slf4j.Logger log> = $r0;

        <org.apache.jena.riot.stream.StreamManager: boolean logAllLookups> = 1;

        $r1 = staticinvoke <org.apache.jena.riot.stream.StreamManager: org.apache.jena.riot.stream.StreamManager makeDefaultStreamManager()>();

        staticinvoke <org.apache.jena.riot.stream.StreamManager: void setGlobal(org.apache.jena.riot.stream.StreamManager)>($r1);

        return;
    }
}
