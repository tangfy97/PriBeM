public class org.apache.batik.util.gui.LanguageDialog$Panel extends javax.swing.JPanel implements org.apache.batik.util.gui.resource.ActionMap
{
    protected javax.swing.JList userList;
    protected javax.swing.JList languageList;
    protected javax.swing.DefaultListModel userListModel;
    protected javax.swing.DefaultListModel languageListModel;
    protected javax.swing.JButton addLanguageButton;
    protected javax.swing.JButton removeLanguageButton;
    protected javax.swing.JButton upLanguageButton;
    protected javax.swing.JButton downLanguageButton;
    protected javax.swing.JButton clearLanguageButton;
    protected java.util.Map listeners;
    private static java.util.Map iconMap;
    static java.lang.Class class$org$apache$batik$util$gui$LanguageDialog$Panel;

    public void <init>()
    {
        javax.swing.border.Border $r5, $r35, $r39, $r47, $r51;
        org.apache.batik.util.gui.LanguageDialog$Panel r0;
        java.util.Map $r10, $r12, $r14, $r16, $r18;
        javax.swing.border.CompoundBorder $r40, $r52;
        javax.swing.border.TitledBorder $r8, $r38, $r50;
        org.apache.batik.util.gui.LanguageDialog$Panel$UpLanguageButtonAction $r13;
        org.apache.batik.util.gui.LanguageDialog$Panel$RemoveLanguageButtonAction $r11;
        java.awt.GridBagLayout $r1, $r76;
        javax.swing.JPanel $r63, $r75;
        java.util.ResourceBundle $r62;
        java.util.StringTokenizer $r27;
        java.lang.String $r7, $r29, $r31, $r37, $r49, $r60;
        org.apache.batik.util.gui.LanguageDialog$Panel$UserListSelectionListener $r56;
        javax.swing.JButton $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74;
        javax.swing.JScrollPane $r34, $r46;
        javax.swing.DefaultListModel $r2, $r3, $r20, $r24, $r30;
        org.apache.batik.util.gui.resource.ButtonFactory $r61;
        org.apache.batik.util.gui.LanguageDialog$Panel$AddLanguageButtonAction $r9;
        org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer $r21, $r25;
        boolean $z0;
        java.awt.Dimension $r78;
        java.awt.Insets $r33, $r77;
        java.util.HashMap $r4;
        java.awt.GridLayout $r64;
        org.apache.batik.util.gui.LanguageDialog$Panel$DownLanguageButtonAction $r15;
        javax.swing.JList $r19, $r22, $r23, $r26, $r42, $r43, $r45, $r54, $r55, $r57;
        org.apache.batik.util.gui.LanguageDialog$Panel$LanguageListSelectionListener $r44;
        org.apache.batik.util.gui.ExtendedGridBagConstraints $r32;
        javax.swing.JLabel $r58;
        org.apache.batik.util.gui.LanguageDialog$Panel$ClearLanguageButtonAction $r17;
        org.apache.batik.util.resources.ResourceManager $r6, $r28, $r36, $r48, $r59;
        javax.swing.JViewport $r41, $r53;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog$Panel;

        $r1 = new java.awt.GridBagLayout;

        specialinvoke $r1.<java.awt.GridBagLayout: void <init>()>();

        specialinvoke r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r1);

        $r2 = new javax.swing.DefaultListModel;

        specialinvoke $r2.<javax.swing.DefaultListModel: void <init>()>();

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel> = $r2;

        $r3 = new javax.swing.DefaultListModel;

        specialinvoke $r3.<javax.swing.DefaultListModel: void <init>()>();

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map listeners> = $r4;

        staticinvoke <org.apache.batik.util.gui.LanguageDialog$Panel: void initCountryIcons()>();

        $r5 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $r6 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r7 = virtualinvoke $r6.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Panel.title");

        $r8 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($r5, $r7);

        virtualinvoke r0.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r8);

        $r10 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map listeners>;

        $r9 = new org.apache.batik.util.gui.LanguageDialog$Panel$AddLanguageButtonAction;

        specialinvoke $r9.<org.apache.batik.util.gui.LanguageDialog$Panel$AddLanguageButtonAction: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AddLanguageButtonAction", $r9);

        $r12 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map listeners>;

        $r11 = new org.apache.batik.util.gui.LanguageDialog$Panel$RemoveLanguageButtonAction;

        specialinvoke $r11.<org.apache.batik.util.gui.LanguageDialog$Panel$RemoveLanguageButtonAction: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("RemoveLanguageButtonAction", $r11);

        $r14 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map listeners>;

        $r13 = new org.apache.batik.util.gui.LanguageDialog$Panel$UpLanguageButtonAction;

        specialinvoke $r13.<org.apache.batik.util.gui.LanguageDialog$Panel$UpLanguageButtonAction: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("UpLanguageButtonAction", $r13);

        $r16 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map listeners>;

        $r15 = new org.apache.batik.util.gui.LanguageDialog$Panel$DownLanguageButtonAction;

        specialinvoke $r15.<org.apache.batik.util.gui.LanguageDialog$Panel$DownLanguageButtonAction: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("DownLanguageButtonAction", $r15);

        $r18 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map listeners>;

        $r17 = new org.apache.batik.util.gui.LanguageDialog$Panel$ClearLanguageButtonAction;

        specialinvoke $r17.<org.apache.batik.util.gui.LanguageDialog$Panel$ClearLanguageButtonAction: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClearLanguageButtonAction", $r17);

        $r19 = new javax.swing.JList;

        $r20 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        specialinvoke $r19.<javax.swing.JList: void <init>(javax.swing.ListModel)>($r20);

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList userList> = $r19;

        $r22 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList userList>;

        $r21 = new org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer;

        specialinvoke $r21.<org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        virtualinvoke $r22.<javax.swing.JList: void setCellRenderer(javax.swing.ListCellRenderer)>($r21);

        $r23 = new javax.swing.JList;

        $r24 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel>;

        specialinvoke $r23.<javax.swing.JList: void <init>(javax.swing.ListModel)>($r24);

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList languageList> = $r23;

        $r26 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList languageList>;

        $r25 = new org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer;

        specialinvoke $r25.<org.apache.batik.util.gui.LanguageDialog$Panel$IconAndTextCellRenderer: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        virtualinvoke $r26.<javax.swing.JList: void setCellRenderer(javax.swing.ListCellRenderer)>($r25);

        $r27 = new java.util.StringTokenizer;

        $r28 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r29 = virtualinvoke $r28.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Country.list");

        specialinvoke $r27.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r29, " ");

        goto label2;

     label1:
        $r30 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel>;

        $r31 = virtualinvoke $r27.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r30.<javax.swing.DefaultListModel: void addElement(java.lang.Object)>($r31);

     label2:
        $z0 = virtualinvoke $r27.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label1;

        $r32 = new org.apache.batik.util.gui.ExtendedGridBagConstraints;

        specialinvoke $r32.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void <init>()>();

        $r33 = new java.awt.Insets;

        specialinvoke $r33.<java.awt.Insets: void <init>(int,int,int,int)>(5, 5, 5, 5);

        $r32.<java.awt.GridBagConstraints: java.awt.Insets insets> = $r33;

        $r32.<java.awt.GridBagConstraints: double weightx> = 1.0;

        $r32.<java.awt.GridBagConstraints: double weighty> = 1.0;

        $r32.<java.awt.GridBagConstraints: int fill> = 1;

        virtualinvoke $r32.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(0, 0, 1, 1);

        $r34 = new javax.swing.JScrollPane;

        specialinvoke $r34.<javax.swing.JScrollPane: void <init>()>();

        $r35 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        $r36 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r37 = virtualinvoke $r36.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Languages.title");

        $r38 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($r35, $r37);

        $r39 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLoweredBevelBorder()>();

        $r40 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r38, $r39);

        virtualinvoke $r34.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r40);

        $r41 = virtualinvoke $r34.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r42 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList languageList>;

        virtualinvoke $r41.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r42);

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r34, $r32);

        $r43 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList languageList>;

        virtualinvoke $r43.<javax.swing.JList: void setSelectionMode(int)>(0);

        $r45 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList languageList>;

        $r44 = new org.apache.batik.util.gui.LanguageDialog$Panel$LanguageListSelectionListener;

        specialinvoke $r44.<org.apache.batik.util.gui.LanguageDialog$Panel$LanguageListSelectionListener: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        virtualinvoke $r45.<javax.swing.JList: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r44);

        virtualinvoke $r32.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(2, 0, 1, 1);

        $r46 = new javax.swing.JScrollPane;

        specialinvoke $r46.<javax.swing.JScrollPane: void <init>()>();

        $r47 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        $r48 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r49 = virtualinvoke $r48.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("User.title");

        $r50 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($r47, $r49);

        $r51 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLoweredBevelBorder()>();

        $r52 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r50, $r51);

        virtualinvoke $r46.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r52);

        $r53 = virtualinvoke $r46.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r54 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList userList>;

        virtualinvoke $r53.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r54);

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r46, $r32);

        $r55 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList userList>;

        virtualinvoke $r55.<javax.swing.JList: void setSelectionMode(int)>(0);

        $r57 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList userList>;

        $r56 = new org.apache.batik.util.gui.LanguageDialog$Panel$UserListSelectionListener;

        specialinvoke $r56.<org.apache.batik.util.gui.LanguageDialog$Panel$UserListSelectionListener: void <init>(org.apache.batik.util.gui.LanguageDialog$Panel)>(r0);

        virtualinvoke $r57.<javax.swing.JList: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r56);

        virtualinvoke $r32.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(0, 1, 3, 1);

        $r32.<java.awt.GridBagConstraints: double weightx> = 0.0;

        $r32.<java.awt.GridBagConstraints: double weighty> = 0.0;

        $r58 = new javax.swing.JLabel;

        $r59 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r60 = virtualinvoke $r59.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("InfoLabel.text");

        specialinvoke $r58.<javax.swing.JLabel: void <init>(java.lang.String)>($r60);

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r58, $r32);

        $r61 = new org.apache.batik.util.gui.resource.ButtonFactory;

        $r62 = <org.apache.batik.util.gui.LanguageDialog: java.util.ResourceBundle bundle>;

        specialinvoke $r61.<org.apache.batik.util.gui.resource.ButtonFactory: void <init>(java.util.ResourceBundle,org.apache.batik.util.gui.resource.ActionMap)>($r62, r0);

        $r63 = new javax.swing.JPanel;

        $r64 = new java.awt.GridLayout;

        specialinvoke $r64.<java.awt.GridLayout: void <init>(int,int,int,int)>(5, 1, 0, 3);

        specialinvoke $r63.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r64);

        $r65 = virtualinvoke $r61.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("AddLanguageButton");

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton addLanguageButton> = $r65;

        virtualinvoke $r63.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r65);

        $r66 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton addLanguageButton>;

        virtualinvoke $r66.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

        $r67 = virtualinvoke $r61.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("RemoveLanguageButton");

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton removeLanguageButton> = $r67;

        virtualinvoke $r63.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r67);

        $r68 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton removeLanguageButton>;

        virtualinvoke $r68.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

        $r69 = virtualinvoke $r61.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("UpLanguageButton");

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton upLanguageButton> = $r69;

        virtualinvoke $r63.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r69);

        $r70 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton upLanguageButton>;

        virtualinvoke $r70.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

        $r71 = virtualinvoke $r61.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("DownLanguageButton");

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton downLanguageButton> = $r71;

        virtualinvoke $r63.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r71);

        $r72 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton downLanguageButton>;

        virtualinvoke $r72.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

        $r73 = virtualinvoke $r61.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("ClearLanguageButton");

        r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton clearLanguageButton> = $r73;

        virtualinvoke $r63.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r73);

        $r74 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton clearLanguageButton>;

        virtualinvoke $r74.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

        $r75 = new javax.swing.JPanel;

        $r76 = new java.awt.GridBagLayout;

        specialinvoke $r76.<java.awt.GridBagLayout: void <init>()>();

        specialinvoke $r75.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r76);

        virtualinvoke $r32.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(1, 0, 1, 1);

        virtualinvoke r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r75, $r32);

        $r32.<java.awt.GridBagConstraints: int fill> = 2;

        virtualinvoke $r32.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(0, 0, 1, 1);

        $r77 = new java.awt.Insets;

        specialinvoke $r77.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r32.<java.awt.GridBagConstraints: java.awt.Insets insets> = $r77;

        virtualinvoke $r75.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r63, $r32);

        $r78 = virtualinvoke $r34.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        virtualinvoke $r46.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>($r78);

        return;
    }

    public static synchronized void initCountryIcons()
    {
        java.util.HashMap $r1;
        java.util.StringTokenizer $r2;
        java.util.Map $r0;
        org.apache.batik.util.resources.ResourceManager $r3;
        java.lang.Class $r5, $r7;
        java.lang.String $r4, $r6;
        boolean $z0;

        $r0 = <org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map iconMap>;

        if $r0 != null goto label5;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map iconMap> = $r1;

        $r2 = new java.util.StringTokenizer;

        $r3 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r4 = virtualinvoke $r3.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Country.list");

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, " ");

        goto label4;

     label1:
        $r5 = <org.apache.batik.util.gui.LanguageDialog$Panel: java.lang.Class class$org$apache$batik$util$gui$LanguageDialog$Panel>;

        if $r5 != null goto label2;

        $r7 = staticinvoke <org.apache.batik.util.gui.LanguageDialog$Panel: java.lang.Class class$(java.lang.String)>("org.apache.batik.util.gui.LanguageDialog$Panel");

        <org.apache.batik.util.gui.LanguageDialog$Panel: java.lang.Class class$org$apache$batik$util$gui$LanguageDialog$Panel> = $r7;

        goto label3;

     label2:
        $r7 = <org.apache.batik.util.gui.LanguageDialog$Panel: java.lang.Class class$org$apache$batik$util$gui$LanguageDialog$Panel>;

     label3:
        $r6 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        staticinvoke <org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.Icon computeCountryIcon(java.lang.Class,java.lang.String)>($r7, $r6);

     label4:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label1;

     label5:
        return;
    }

    public java.lang.String getLanguages()
    {
        org.apache.batik.util.gui.LanguageDialog$Panel r1;
        javax.swing.DefaultListModel $r2, $r4, $r6, $r7;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2;
        java.lang.Object $r5, $r8;
        java.lang.String $r3;

        r1 := @this: org.apache.batik.util.gui.LanguageDialog$Panel;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        $i0 = virtualinvoke $r2.<javax.swing.DefaultListModel: int getSize()>();

        if $i0 <= 0 goto label3;

        $r4 = r1.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        $r5 = virtualinvoke $r4.<javax.swing.DefaultListModel: java.lang.Object getElementAt(int)>(0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        i2 = 1;

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r7 = r1.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        $r8 = virtualinvoke $r7.<javax.swing.DefaultListModel: java.lang.Object getElementAt(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        i2 = i2 + 1;

     label2:
        $r6 = r1.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        $i1 = virtualinvoke $r6.<javax.swing.DefaultListModel: int getSize()>();

        if i2 < $i1 goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public void setLanguages(java.lang.String)
    {
        org.apache.batik.util.gui.LanguageDialog$Panel r0;
        java.util.StringTokenizer $r10;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String r8, r11, $r12, r15;
        boolean $z0;
        javax.swing.DefaultListModel $r1, $r2, $r4, $r5, $r6, $r9, $r13, $r14;
        java.lang.Object $r3, $r7;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog$Panel;

        r11 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        $i0 = virtualinvoke $r1.<javax.swing.DefaultListModel: int getSize()>();

        i3 = 0;

        goto label6;

     label1:
        $r2 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        $r3 = virtualinvoke $r2.<javax.swing.DefaultListModel: java.lang.Object getElementAt(int)>(0);

        $r4 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        virtualinvoke $r4.<javax.swing.DefaultListModel: void removeElementAt(int)>(0);

        r15 = (java.lang.String) $r3;

        $r5 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel>;

        $i1 = virtualinvoke $r5.<javax.swing.DefaultListModel: int getSize()>();

        i4 = 0;

        goto label4;

     label2:
        $r6 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel>;

        $r7 = virtualinvoke $r6.<javax.swing.DefaultListModel: java.lang.Object getElementAt(int)>(i4);

        r8 = (java.lang.String) $r7;

        $i2 = virtualinvoke r15.<java.lang.String: int compareTo(java.lang.String)>(r8);

        if $i2 <= 0 goto label3;

        goto label5;

     label3:
        i4 = i4 + 1;

     label4:
        if i4 < $i1 goto label2;

     label5:
        $r9 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel>;

        virtualinvoke $r9.<javax.swing.DefaultListModel: void insertElementAt(java.lang.Object,int)>($r3, i4);

        i3 = i3 + 1;

     label6:
        if i3 < $i0 goto label1;

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r11, ",");

        goto label8;

     label7:
        $r12 = virtualinvoke $r10.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r13 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        virtualinvoke $r13.<javax.swing.DefaultListModel: void addElement(java.lang.Object)>($r12);

        $r14 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel>;

        virtualinvoke $r14.<javax.swing.DefaultListModel: boolean removeElement(java.lang.Object)>($r12);

     label8:
        $z0 = virtualinvoke $r10.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label7;

        virtualinvoke r0.<org.apache.batik.util.gui.LanguageDialog$Panel: void updateButtons()>();

        return;
    }

    protected void updateButtons()
    {
        org.apache.batik.util.gui.LanguageDialog$Panel r0;
        boolean z0, z1, $z2, z3, $z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, $z15;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        javax.swing.JButton $r3, $r6, $r7, $r8, $r9;
        javax.swing.JList $r2, $r5;
        javax.swing.DefaultListModel $r1, $r4;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog$Panel;

        $r1 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel userListModel>;

        $i0 = virtualinvoke $r1.<javax.swing.DefaultListModel: int size()>();

        $r2 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList userList>;

        $i1 = virtualinvoke $r2.<javax.swing.JList: int getSelectedIndex()>();

        if $i0 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z3 = $z2;

        $i6 = (int) -1;

        if $i1 == $i6 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z5 = $z4;

        if $i1 != 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z0 = $z6;

        $i2 = $i0 - 1;

        if $i1 != $i2 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        z1 = $z7;

        $r6 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton removeLanguageButton>;

        if z3 != 0 goto label09;

        if z5 == 0 goto label09;

        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        virtualinvoke $r6.<javax.swing.AbstractButton: void setEnabled(boolean)>($z8);

        $r7 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton upLanguageButton>;

        if z3 != 0 goto label11;

        if z5 == 0 goto label11;

        if z0 != 0 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        virtualinvoke $r7.<javax.swing.AbstractButton: void setEnabled(boolean)>($z9);

        $r8 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton downLanguageButton>;

        if z3 != 0 goto label13;

        if z5 == 0 goto label13;

        if z1 != 0 goto label13;

        $z10 = 1;

        goto label14;

     label13:
        $z10 = 0;

     label14:
        virtualinvoke $r8.<javax.swing.AbstractButton: void setEnabled(boolean)>($z10);

        $r3 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton clearLanguageButton>;

        if z3 != 0 goto label15;

        $z11 = 1;

        goto label16;

     label15:
        $z11 = 0;

     label16:
        virtualinvoke $r3.<javax.swing.AbstractButton: void setEnabled(boolean)>($z11);

        $r4 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.DefaultListModel languageListModel>;

        $i3 = virtualinvoke $r4.<javax.swing.DefaultListModel: int size()>();

        $r5 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JList languageList>;

        $i4 = virtualinvoke $r5.<javax.swing.JList: int getSelectedIndex()>();

        if $i3 != 0 goto label17;

        $z12 = 1;

        goto label18;

     label17:
        $z12 = 0;

     label18:
        z13 = $z12;

        $i8 = (int) -1;

        if $i4 == $i8 goto label19;

        $z14 = 1;

        goto label20;

     label19:
        $z14 = 0;

     label20:
        $r9 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.JButton addLanguageButton>;

        if z13 != 0 goto label21;

        if $z14 == 0 goto label21;

        $z15 = 1;

        goto label22;

     label21:
        $z15 = 0;

     label22:
        virtualinvoke $r9.<javax.swing.AbstractButton: void setEnabled(boolean)>($z15);

        return;
    }

    protected java.lang.String getCountryText(java.lang.String)
    {
        org.apache.batik.util.gui.LanguageDialog$Panel r7;
        java.lang.StringBuffer $r0, $r3, $r4;
        org.apache.batik.util.resources.ResourceManager $r1;
        java.lang.String r2, $r5, $r6;

        r7 := @this: org.apache.batik.util.gui.LanguageDialog$Panel;

        r2 := @parameter0: java.lang.String;

        $r1 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".text");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>($r5);

        return $r6;
    }

    protected javax.swing.Icon getCountryIcon(java.lang.String)
    {
        org.apache.batik.util.gui.LanguageDialog$Panel r0;
        java.lang.Class $r1;
        javax.swing.Icon $r3;
        java.lang.String r2;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog$Panel;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.apache.batik.util.gui.LanguageDialog$Panel: javax.swing.Icon computeCountryIcon(java.lang.Class,java.lang.String)>($r1, r2);

        return $r3;
    }

    private static javax.swing.Icon computeCountryIcon(java.lang.Class, java.lang.String)
    {
        java.net.URL $r11, $r13;
        java.lang.StringBuffer $r4, $r6, $r7;
        java.util.Map $r1, $r15;
        javax.swing.ImageIcon $r3, $r12, $r14;
        java.lang.String r0, $r8, $r9;
        java.util.MissingResourceException $r16;
        java.lang.Object $r2;
        org.apache.batik.util.resources.ResourceManager $r5;
        java.lang.Class r10;

        r10 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = <org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map iconMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (javax.swing.ImageIcon) $r2;

        if $r3 == null goto label2;

        return $r3;

     label2:
        $r5 = <org.apache.batik.util.gui.LanguageDialog: org.apache.batik.util.resources.ResourceManager resources>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".icon");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke $r5.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>($r8);

        $r11 = virtualinvoke r10.<java.lang.Class: java.net.URL getResource(java.lang.String)>($r9);

        if $r11 == null goto label3;

        $r15 = <org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map iconMap>;

        $r14 = new javax.swing.ImageIcon;

        specialinvoke $r14.<javax.swing.ImageIcon: void <init>(java.net.URL)>($r11);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r14);

        return $r14;

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

     label5:
        $r12 = new javax.swing.ImageIcon;

        $r13 = virtualinvoke r10.<java.lang.Class: java.net.URL getResource(java.lang.String)>("resources/blank.gif");

        specialinvoke $r12.<javax.swing.ImageIcon: void <init>(java.net.URL)>($r13);

        return $r12;

        catch java.util.MissingResourceException from label1 to label3 with label4;
    }

    public javax.swing.Action getAction(java.lang.String) throws org.apache.batik.util.gui.resource.MissingListenerException
    {
        org.apache.batik.util.gui.LanguageDialog$Panel r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.swing.Action $r4;

        r0 := @this: org.apache.batik.util.gui.LanguageDialog$Panel;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map listeners>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (javax.swing.Action) $r3;

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        <org.apache.batik.util.gui.LanguageDialog$Panel: java.util.Map iconMap> = null;

        return;
    }
}
