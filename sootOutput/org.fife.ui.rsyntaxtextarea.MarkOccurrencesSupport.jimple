class org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport extends java.lang.Object implements javax.swing.event.CaretListener, java.awt.event.ActionListener
{
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea;
    private javax.swing.Timer timer;
    private org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p;
    public static final java.awt.Color DEFAULT_COLOR;
    private static final int DEFAULT_DELAY_MS;

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void <init>(int)>(1000);

        return;
    }

    public void <init>(int)
    {
        int i0;
        java.awt.Color $r1;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        i0 := @parameter0: int;

        $r1 = <org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: java.awt.Color DEFAULT_COLOR>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void <init>(int,java.awt.Color)>(i0, $r1);

        return;
    }

    public void <init>(int, java.awt.Color)
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter $r3;
        java.awt.Color r4;
        int i0;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;
        javax.swing.Timer $r1, $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        i0 := @parameter0: int;

        r4 := @parameter1: java.awt.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new javax.swing.Timer;

        specialinvoke $r1.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>(i0, r0);

        r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: javax.swing.Timer timer> = $r1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: javax.swing.Timer timer>;

        virtualinvoke $r2.<javax.swing.Timer: void setRepeats(boolean)>(0);

        $r3 = new org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter;

        specialinvoke $r3.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p> = $r3;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void setColor(java.awt.Color)>(r4);

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1, $r3, $r6, $r7, $r10, $r11, $r15, $r16, $r23;
        javax.swing.text.BadLocationException $r19, $r20;
        javax.swing.text.Highlighter $r12;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter $r17;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r24;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r5;
        javax.swing.text.Document $r4;
        java.lang.Throwable $r18;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, $i10, i11, i12, $i14;
        java.lang.String $r13;
        javax.swing.text.Caret $r2;
        java.awt.event.ActionEvent r21;
        char[] $r14;
        org.fife.ui.rsyntaxtextarea.Token $r8, $r9, r22, r25;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        r21 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Caret getCaret()>();

        $i0 = interfaceinvoke $r2.<javax.swing.text.Caret: int getDot()>();

        $i1 = interfaceinvoke $r2.<javax.swing.text.Caret: int getMark()>();

        if $i0 == $i1 goto label01;

        return;

     label01:
        $r3 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        r5 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r4;

        virtualinvoke r5.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: void readLock()>();

     label02:
        $r6 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i2 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getCaretLineNumber()>();

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r8 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i2);

        $i3 = interfaceinvoke $r2.<javax.swing.text.Caret: int getDot()>();

        $r9 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: org.fife.ui.rsyntaxtextarea.Token getTokenAtOffset(org.fife.ui.rsyntaxtextarea.Token,int)>($r8, $i3);

        r22 = $r9;

        if $r9 == null goto label03;

        $z4 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: boolean isValidType(org.fife.ui.rsyntaxtextarea.Token)>($r9);

        if $z4 == 0 goto label03;

        $z5 = staticinvoke <org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: boolean isNonWordChar(org.fife.ui.rsyntaxtextarea.Token)>($r9);

        if $z5 == 0 goto label07;

     label03:
        $i14 = (int) -1;

        i9 = $i3 + $i14;

     label04:
        $r23 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i10 = virtualinvoke $r23.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineStartOffset(int)>($i2);

        if i9 < $i10 goto label05;

        r22 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: org.fife.ui.rsyntaxtextarea.Token getTokenAtOffset(org.fife.ui.rsyntaxtextarea.Token,int)>($r8, i9);

     label05:
        goto label07;

     label06:
        $r20 := @caughtexception;

        virtualinvoke $r20.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label07:
        if r22 == null goto label15;

        $z0 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: boolean isValidType(org.fife.ui.rsyntaxtextarea.Token)>(r22);

        if $z0 == 0 goto label15;

        $z1 = staticinvoke <org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: boolean isNonWordChar(org.fife.ui.rsyntaxtextarea.Token)>(r22);

        if $z1 != 0 goto label15;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void removeHighlights()>();

        $r11 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r12 = virtualinvoke $r11.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Highlighter getHighlighter()>();

        r24 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter) $r12;

        $r13 = virtualinvoke r22.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        $r14 = virtualinvoke $r13.<java.lang.String: char[] toCharArray()>();

        i4 = r22.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        i11 = 0;

     label08:
        $r15 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i5 = virtualinvoke $r15.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        if i11 >= $i5 goto label15;

        $r16 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        r25 = virtualinvoke $r16.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i11);

     label09:
        if r25 == null goto label14;

        $z2 = virtualinvoke r25.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z2 == 0 goto label14;

        $z3 = virtualinvoke r25.<org.fife.ui.rsyntaxtextarea.Token: boolean is(int,char[])>(i4, $r14);

        if $z3 == 0 goto label13;

     label10:
        $i7 = r25.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i6 = r25.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        i12 = $i7 + $i6;

        $i8 = r25.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $r17 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p>;

        virtualinvoke r24.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.lang.Object addMarkedOccurrenceHighlight(int,int,org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter)>($i8, i12, $r17);

     label11:
        goto label13;

     label12:
        $r19 := @caughtexception;

        virtualinvoke $r19.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label13:
        r25 = virtualinvoke r25.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label09;

     label14:
        i11 = i11 + 1;

        goto label08;

     label15:
        virtualinvoke r5.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: void readUnlock()>();

        goto label18;

     label16:
        $r18 := @caughtexception;

     label17:
        virtualinvoke r5.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: void readUnlock()>();

        throw $r18;

     label18:
        $r10 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void fireMarkedOccurrencesChanged()>();

        return;

        catch javax.swing.text.BadLocationException from label04 to label05 with label06;
        catch javax.swing.text.BadLocationException from label10 to label11 with label12;
        catch java.lang.Throwable from label02 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public void caretUpdate(javax.swing.event.CaretEvent)
    {
        javax.swing.event.CaretEvent r2;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;
        javax.swing.Timer $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        r2 := @parameter0: javax.swing.event.CaretEvent;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: javax.swing.Timer timer>;

        virtualinvoke $r1.<javax.swing.Timer: void restart()>();

        return;
    }

    public java.awt.Color getColor()
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter $r1;
        java.awt.Color $r2;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: java.awt.Color getColor()>();

        return $r2;
    }

    public int getDelay()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;
        javax.swing.Timer $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: javax.swing.Timer timer>;

        $i0 = virtualinvoke $r1.<javax.swing.Timer: int getDelay()>();

        return $i0;
    }

    public boolean getPaintBorder()
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter $r1;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: boolean getPaintBorder()>();

        return $z0;
    }

    public void install(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        java.awt.Color $r3, $r4;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1, r2;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        r2 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void uninstall()>();

     label1:
        r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea> = r2;

        virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void addCaretListener(javax.swing.event.CaretListener)>(r0);

        $r3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMarkOccurrencesColor()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMarkOccurrencesColor()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void setColor(java.awt.Color)>($r4);

     label2:
        return;
    }

    private static final boolean isNonWordChar(org.fife.ui.rsyntaxtextarea.Token)
    {
        int $i0, $i1;
        char[] $r1;
        char $c2;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        if $i0 != 1 goto label1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $c2 = $r1[$i1];

        $z0 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: boolean isLetter(char)>($c2);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isValidType(org.fife.ui.rsyntaxtextarea.Token)
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2;
        org.fife.ui.rsyntaxtextarea.Token r1;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        $z0 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getMarkOccurrencesOfTokenType(int)>($i0);

        return $z0;
    }

    private void removeHighlights()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r4;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1, $r2;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;
        javax.swing.text.Highlighter $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Highlighter getHighlighter()>();

        r4 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter) $r3;

        virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void clearMarkOccurrencesHighlights()>();

     label1:
        return;
    }

    public void setColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter $r2;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r3;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p>;

        virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: void setColor(java.awt.Color)>(r1);

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        if $r3 == null goto label1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void removeHighlights()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void caretUpdate(javax.swing.event.CaretEvent)>(null);

     label1:
        return;
    }

    public void setDelay(int)
    {
        int i0;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;
        javax.swing.Timer $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: javax.swing.Timer timer>;

        virtualinvoke $r1.<javax.swing.Timer: void setDelay(int)>(i0);

        return;
    }

    public void setPaintBorder(boolean)
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter $r1, $r2;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r3, $r4;
        boolean z0, $z1;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p>;

        $z1 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: boolean getPaintBorder()>();

        if z0 == $z1 goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter p>;

        virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: void setPaintBorder(boolean)>(z0);

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        if $r3 == null goto label1;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void repaint()>();

     label1:
        return;
    }

    public void uninstall()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1, $r2;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: void removeHighlights()>();

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void removeCaretListener(javax.swing.event.CaretListener)>(r0);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;

        <org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: int DEFAULT_DELAY_MS> = 1000;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>(224, 224, 224);

        <org.fife.ui.rsyntaxtextarea.MarkOccurrencesSupport: java.awt.Color DEFAULT_COLOR> = $r0;

        return;
    }
}
