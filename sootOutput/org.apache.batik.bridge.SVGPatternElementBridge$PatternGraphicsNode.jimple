public class org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode extends org.apache.batik.gvt.AbstractGraphicsNode
{
    org.apache.batik.gvt.GraphicsNode pcn;
    java.awt.geom.Rectangle2D pBounds;
    java.awt.geom.Rectangle2D gBounds;
    java.awt.geom.Rectangle2D sBounds;
    java.awt.Shape oShape;

    public void <init>(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode r1;

        r0 := @this: org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void <init>()>();

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: org.apache.batik.gvt.GraphicsNode pcn> = r1;

        return;
    }

    public void primitivePaint(java.awt.Graphics2D)
    {
        org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode r0;
        java.awt.Graphics2D r1;
        org.apache.batik.gvt.GraphicsNode $r2;

        r0 := @this: org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode;

        r1 := @parameter0: java.awt.Graphics2D;

        $r2 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: org.apache.batik.gvt.GraphicsNode pcn>;

        interfaceinvoke $r2.<org.apache.batik.gvt.GraphicsNode: void paint(java.awt.Graphics2D)>(r1);

        return;
    }

    public java.awt.geom.Rectangle2D getPrimitiveBounds()
    {
        org.apache.batik.gvt.GraphicsNode $r3;
        java.awt.geom.Rectangle2D $r1, $r4, $r5, $r6;
        org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode r0;
        java.awt.geom.AffineTransform $r2;

        r0 := @this: org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode;

        $r1 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D pBounds>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D pBounds>;

        return $r6;

     label1:
        $r3 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: org.apache.batik.gvt.GraphicsNode pcn>;

        $r2 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedBounds(java.awt.geom.AffineTransform)>($r2);

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D pBounds> = $r4;

        $r5 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D pBounds>;

        return $r5;
    }

    public java.awt.geom.Rectangle2D getGeometryBounds()
    {
        org.apache.batik.gvt.GraphicsNode $r3;
        java.awt.geom.Rectangle2D $r1, $r4, $r5, $r6;
        org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode r0;
        java.awt.geom.AffineTransform $r2;

        r0 := @this: org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode;

        $r1 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D gBounds>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D gBounds>;

        return $r6;

     label1:
        $r3 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: org.apache.batik.gvt.GraphicsNode pcn>;

        $r2 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)>($r2);

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D gBounds> = $r4;

        $r5 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D gBounds>;

        return $r5;
    }

    public java.awt.geom.Rectangle2D getSensitiveBounds()
    {
        org.apache.batik.gvt.GraphicsNode $r3;
        java.awt.geom.Rectangle2D $r1, $r4, $r5, $r6;
        org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode r0;
        java.awt.geom.AffineTransform $r2;

        r0 := @this: org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode;

        $r1 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D sBounds>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D sBounds>;

        return $r6;

     label1:
        $r3 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: org.apache.batik.gvt.GraphicsNode pcn>;

        $r2 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedSensitiveBounds(java.awt.geom.AffineTransform)>($r2);

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D sBounds> = $r4;

        $r5 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D sBounds>;

        return $r5;
    }

    public java.awt.Shape getOutline()
    {
        java.awt.Shape $r1, $r3, $r6, $r7, $r8, $r9;
        org.apache.batik.gvt.GraphicsNode $r2, $r4;
        java.awt.geom.AffineTransform $r5;
        org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode r0;

        r0 := @this: org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode;

        $r1 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.Shape oShape>;

        if $r1 == null goto label1;

        $r9 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.Shape oShape>;

        return $r9;

     label1:
        $r2 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: org.apache.batik.gvt.GraphicsNode pcn>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.gvt.GraphicsNode: java.awt.Shape getOutline()>();

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.Shape oShape> = $r3;

        $r4 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: org.apache.batik.gvt.GraphicsNode pcn>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r5 == null goto label2;

        $r7 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.Shape oShape>;

        $r8 = virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r7);

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.Shape oShape> = $r8;

     label2:
        $r6 = r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.Shape oShape>;

        return $r6;
    }

    protected void invalidateGeometryCache()
    {
        org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode r0;

        r0 := @this: org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode;

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D pBounds> = null;

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D gBounds> = null;

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.geom.Rectangle2D sBounds> = null;

        r0.<org.apache.batik.bridge.SVGPatternElementBridge$PatternGraphicsNode: java.awt.Shape oShape> = null;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void invalidateGeometryCache()>();

        return;
    }
}
