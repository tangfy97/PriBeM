public abstract class org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser
{
    public static final java.lang.String WIRE_BUS_ATTRIBUTE;
    public static final java.lang.String WIRE_BUS_NAME;
    public static final java.lang.String WIRE_BUS_CREATE;
    public static final java.lang.String WIRE_BUS_HANDLER;
    private static final java.util.logging.Logger LOG;
    private java.lang.Class beanClass;
    private javax.xml.bind.JAXBContext context;
    private java.util.Set classes;

    public void <init>()
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void <init>()>();

        return;
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r3;
        org.springframework.beans.factory.xml.ParserContext r2;
        org.apache.cxf.configuration.spring.BusWiringType $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r3 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $z0 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r1, r2, r3);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: boolean hasBusProperty()>();

        if $z1 == 0 goto label1;

        $r4 = <org.apache.cxf.configuration.spring.BusWiringType: org.apache.cxf.configuration.spring.BusWiringType PROPERTY>;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)>(r3, $r4);

     label1:
        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void parseChildElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r1, r2, r3);

        return;
    }

    protected boolean parseAttributes(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r15;
        org.w3c.dom.Attr r3;
        org.w3c.dom.Node $r2;
        org.springframework.beans.factory.xml.ParserContext r16;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r8;
        org.w3c.dom.Element r0;

        r8 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r16 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r15 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        z8 = 0;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label9;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r3 = (org.w3c.dom.Attr) $r2;

        $r4 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $r5 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $r6 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r7 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $z0 = specialinvoke r8.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: boolean isNamespace(java.lang.String,java.lang.String)>($r6, $r7);

        if $z0 == 0 goto label2;

        goto label8;

     label2:
        $r9 = "createdFromAPI";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

        virtualinvoke r15.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)>(1);

        goto label8;

     label3:
        $r10 = "abstract";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

        virtualinvoke r15.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)>(1);

        goto label8;

     label4:
        $r11 = "depends-on";

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label5;

        virtualinvoke r15.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addDependsOn(java.lang.String)>($r4);

        goto label8;

     label5:
        $r12 = "name";

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label6;

        virtualinvoke r8.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void processNameAttribute(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)>(r0, r16, r15, $r4);

        goto label8;

     label6:
        $r13 = "bus";

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label7;

        z8 = virtualinvoke r8.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: boolean processBusAttribute(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)>(r0, r16, r15, $r4);

        goto label8;

     label7:
        $r14 = "id";

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z6 != 0 goto label8;

        $z7 = virtualinvoke r8.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: boolean isAttribute(java.lang.String,java.lang.String)>($r5, $r6);

        if $z7 == 0 goto label8;

        virtualinvoke r8.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)>(r15, r0, $r6, $r4);

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        return z8;
    }

    protected boolean processBusAttribute(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r4;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r5;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r3;
        org.w3c.dom.Element r7;
        org.springframework.beans.factory.xml.ParserContext r2;
        int $i0;
        org.apache.cxf.configuration.spring.BusWiringType $r6;
        java.lang.String r0, $r1;
        boolean $z0;

        r4 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r7 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r5 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r0 := @parameter3: java.lang.String;

        if r0 == null goto label3;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $z0 = interfaceinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("bus", r0);

        goto label2;

     label1:
        $r6 = <org.apache.cxf.configuration.spring.BusWiringType: org.apache.cxf.configuration.spring.BusWiringType PROPERTY>;

        virtualinvoke r4.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)>(r5, $r6, r0, r2);

     label2:
        return 1;

     label3:
        return 0;
    }

    protected void processNameAttribute(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r3;
        org.springframework.beans.factory.xml.ParserContext r2;
        java.lang.String r4;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r3 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r4 := @parameter3: java.lang.String;

        return;
    }

    private boolean isNamespace(java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r4;
        java.lang.String r0, $r1, r2, $r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = "xmlns";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        if r0 != null goto label2;

        $r3 = "xmlns";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected void parseChildElements(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r2;
        org.w3c.dom.Element r0, r5;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r4;
        org.springframework.beans.factory.xml.ParserContext r3;
        java.lang.String $r1;

        r2 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r4 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r5 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r0);

     label1:
        if r5 == null goto label2;

        $r1 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        virtualinvoke r2.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)>(r3, r4, r5, $r1);

        r5 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getNextElement(org.w3c.dom.Element)>(r5);

        goto label1;

     label2:
        return;
    }

    public java.lang.Class getBeanClass()
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.Class beanClass>;

        return $r1;
    }

    public void setBeanClass(java.lang.Class)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        java.lang.Class r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: java.lang.Class;

        r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.Class beanClass> = r1;

        return;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        java.lang.Class $r1;
        org.w3c.dom.Element r2;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.Class beanClass>;

        return $r1;
    }

    protected void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.w3c.dom.Element r4;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r4 := @parameter1: org.w3c.dom.Element;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    protected void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void mapToProperty(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    protected void mapElement(org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder, org.w3c.dom.Element, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.w3c.dom.Element r3;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        org.springframework.beans.factory.xml.ParserContext r1;
        java.lang.String r4;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r3 := @parameter2: org.w3c.dom.Element;

        r4 := @parameter3: java.lang.String;

        return;
    }

    protected java.lang.String resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext) throws org.springframework.beans.factory.BeanDefinitionStoreException
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition r4;
        org.springframework.beans.factory.xml.ParserContext r5;
        java.lang.String $r2, $r3, $r6, $r7, $r8, $r9, $r12, $r14;
        boolean $z0, $z1;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.w3c.dom.Element r1;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.support.AbstractBeanDefinition;

        r5 := @parameter2: org.springframework.beans.factory.xml.ParserContext;

        $r2 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String getIdOrName(org.w3c.dom.Element)>(r1);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("createdFromAPI");

        if null == $r2 goto label1;

        $r7 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $r6 = specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)>(r1, r4, r5);

        return $r6;

     label2:
        if $r3 == null goto label3;

        $r8 = "true";

        $r9 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String getSuffix()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label3:
        return $r2;
    }

    protected boolean hasBusProperty()
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        return 0;
    }

    protected java.lang.String getSuffix()
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        return "";
    }

    protected void setFirstChildAsProperty(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String)
    {
        java.lang.IllegalStateException $r33, $r34;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r7;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r5, $r22;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r20, $r29, $r30, $r32, $r35;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r6;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r23;
        org.springframework.beans.factory.xml.ParserContext r4;
        org.springframework.beans.factory.config.BeanDefinition $r8, $r24, $r37;
        java.lang.String $r3, r9, $r10, $r11, $r12, $r19, $r21, $r25, $r31;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        java.lang.UnsupportedOperationException $r36;
        org.w3c.dom.Element r1, $r2;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r6 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r9 := @parameter3: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: org.w3c.dom.Element getFirstChild(org.w3c.dom.Element)>(r1);

        if $r2 != null goto label1;

        $r33 = new java.lang.IllegalStateException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" property must have child elements!");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r31);

        throw $r33;

     label1:
        $r3 = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("http://www.springframework.org/schema/beans");

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r11 = "ref";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label3;

        $r25 = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("bean");

        if $r25 != null goto label2;

        $r34 = new java.lang.IllegalStateException;

        specialinvoke $r34.<java.lang.IllegalStateException: void <init>(java.lang.String)>("<ref> elements must have a \"bean\" attribute!");

        throw $r34;

     label2:
        virtualinvoke r6.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>(r9, $r25);

        return;

     label3:
        $r12 = "bean";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label4;

        $r22 = virtualinvoke r4.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r23 = virtualinvoke $r22.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder parseBeanDefinitionElement(org.w3c.dom.Element)>($r2);

        $r24 = virtualinvoke $r23.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        virtualinvoke r6.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>(r9, $r24);

        return;

     label4:
        $r36 = new java.lang.UnsupportedOperationException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Elements with the name ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" are not currently ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("supported as sub elements of ");

        $r19 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r21);

        throw $r36;

     label5:
        $r5 = virtualinvoke r4.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r7 = virtualinvoke r6.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r37 = (org.springframework.beans.factory.config.BeanDefinition) $r7;

        $r8 = virtualinvoke $r5.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinition parseCustomElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>($r2, $r37);

        virtualinvoke r6.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>(r9, $r8);

        return;
    }

    protected org.w3c.dom.Element getFirstChild(org.w3c.dom.Element)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r2;
        org.w3c.dom.Element r0, $r1;

        r2 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r0);

        return $r1;
    }

    protected void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.apache.cxf.configuration.spring.BusWiringType)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.apache.cxf.configuration.spring.BusWiringType r2;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r2 := @parameter1: org.apache.cxf.configuration.spring.BusWiringType;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)>(r1, r2, null, null);

        return;
    }

    protected void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.apache.cxf.configuration.spring.BusWiringType, java.lang.String, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r9, $r16;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r12, $r18, $r19;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r15, $r17;
        org.springframework.beans.factory.xml.ParserContext r14;
        int $i1;
        org.springframework.beans.factory.config.BeanDefinition $r24;
        java.lang.String $r3, $r11, $r13, $r20, r22;
        boolean $z0, $z1;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r21;
        char $c0;
        java.util.logging.Logger $r1;
        org.apache.cxf.configuration.spring.BusWiringType r6;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r10, $r23;

        r21 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r9 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r6 := @parameter1: org.apache.cxf.configuration.spring.BusWiringType;

        r22 := @parameter2: java.lang.String;

        r14 := @parameter3: org.springframework.beans.factory.xml.ParserContext;

        $r1 = <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.util.logging.Logger LOG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ");

        $r3 = <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String WIRE_BUS_ATTRIBUTE>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to bean ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void fine(java.lang.String)>($r11);

        $r12 = virtualinvoke r9.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        $r13 = <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String WIRE_BUS_ATTRIBUTE>;

        virtualinvoke $r12.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAttribute(java.lang.String,java.lang.Object)>($r13, r6);

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r22);

        if $z0 != 0 goto label2;

        $c0 = virtualinvoke r22.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 35 goto label1;

        r22 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $r19 = virtualinvoke r9.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        $r20 = <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String WIRE_BUS_NAME>;

        virtualinvoke $r19.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAttribute(java.lang.String,java.lang.Object)>($r20, r22);

     label2:
        if r14 == null goto label3;

        $r15 = virtualinvoke r14.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $z1 = interfaceinvoke $r15.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor");

        if $z1 != 0 goto label3;

        $r16 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.String)>("org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor");

        $r17 = virtualinvoke r14.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r18 = virtualinvoke $r16.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r24 = (org.springframework.beans.factory.config.BeanDefinition) $r18;

        interfaceinvoke $r17.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>("org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor", $r24);

     label3:
        return;
    }

    protected void mapElementToJaxbProperty(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder, javax.xml.namespace.QName, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        javax.xml.namespace.QName r3;
        java.lang.String r4;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r3 := @parameter2: javax.xml.namespace.QName;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)>(r1, r2, r3, r4, null);

        return;
    }

    protected void mapElementToJaxbProperty(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder, javax.xml.namespace.QName, java.lang.String, java.lang.Class)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        short $s0;
        org.w3c.dom.Element r0, r10;
        org.w3c.dom.Node r11;
        java.lang.Class r4;
        java.lang.String r3, $r6, $r7, $r8, $r9;
        javax.xml.namespace.QName r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r5 := @parameter2: javax.xml.namespace.QName;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Class;

        r10 = null;

        r11 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r11 == null goto label3;

        $s0 = interfaceinvoke r11.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label2;

        $r6 = virtualinvoke r5.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r7 = interfaceinvoke r11.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r5.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r9 = interfaceinvoke r11.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        r10 = (org.w3c.dom.Element) r11;

        goto label3;

     label2:
        r11 = interfaceinvoke r11.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        if r10 != null goto label4;

        return;

     label4:
        virtualinvoke r1.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>(r10, r2, r3, r4);

        return;
    }

    private synchronized javax.xml.bind.JAXBContext getContext(java.lang.Class)
    {
        java.util.HashSet $r18;
        java.lang.String $r2, $r10, $r11;
        javax.xml.bind.JAXBContext $r1, $r4, $r23;
        boolean $z0, $z1, $z2, z3;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        java.util.Iterator $r5;
        java.lang.Package $r8, $r9;
        java.util.Set $r13, $r14, $r15, $r19, $r22;
        java.lang.RuntimeException $r17;
        org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas $r21;
        javax.xml.bind.JAXBException $r16;
        java.lang.Class r3, r7, $r12;
        java.lang.Object $r6;
        java.lang.ClassLoader $r20;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: javax.xml.bind.JAXBContext context>;

        if $r1 == null goto label01;

        $r14 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.util.Set classes>;

        if $r14 == null goto label01;

        $r15 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.util.Set classes>;

        $z2 = interfaceinvoke $r15.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z2 != 0 goto label11;

     label01:
        $r18 = new java.util.HashSet;

        specialinvoke $r18.<java.util.HashSet: void <init>()>();

        $r19 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.util.Set classes>;

        if $r19 == null goto label02;

        $r13 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.util.Set classes>;

        interfaceinvoke $r18.<java.util.Set: boolean addAll(java.util.Collection)>($r13);

     label02:
        $r2 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String getJaxbPackage()>();

        if r3 != null goto label03;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label04;

     label03:
        $r20 = virtualinvoke r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label04:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)>($r18, $r2, $r20);

        if r3 == null goto label08;

        z3 = 0;

        $r5 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Class) $r6;

        $r8 = virtualinvoke r7.<java.lang.Class: java.lang.Package getPackage()>();

        $r9 = virtualinvoke r3.<java.lang.Class: java.lang.Package getPackage()>();

        if $r8 != $r9 goto label06;

        $r10 = "ObjectFactory";

        $r11 = virtualinvoke r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label06;

        z3 = 1;

     label06:
        goto label05;

     label07:
        if z3 != 0 goto label08;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label08:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void scanPackages(java.util.Set)>($r18);

        $r21 = staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r18, null, null, null, 0);

        $r22 = virtualinvoke $r21.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.util.Set classes> = $r22;

        $r23 = virtualinvoke $r21.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: javax.xml.bind.JAXBContext context> = $r23;

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label11:
        $r4 = r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: javax.xml.bind.JAXBContext context>;

        return $r4;

        catch javax.xml.bind.JAXBException from label01 to label09 with label10;
    }

    protected void mapElementToJaxbProperty(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String, java.lang.Class)
    {
        java.lang.Throwable $r14;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r3, r9;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r4, $r11;
        javax.xml.stream.XMLStreamWriter $r1, r19;
        java.lang.String $r8, r10;
        javax.xml.bind.JAXBContext $r7, $r16;
        boolean $z0;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r5;
        javax.xml.bind.Unmarshaller $r17;
        java.io.StringWriter $r0;
        javax.xml.bind.JAXBElement r18;
        java.lang.RuntimeException $r13;
        javax.xml.bind.JAXBException $r12;
        java.lang.Exception $r15;
        org.w3c.dom.Element r2;
        java.lang.Class r6;
        java.lang.Object r20;

        r5 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r9 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r10 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.Class;

     label01:
        r19 = null;

     label02:
        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>($r0);

        r19 = $r1;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)>(r2, $r1);

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void flush()>();

        $r3 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>(class "Lorg/apache/cxf/configuration/spring/JAXBBeanFactory;");

        $r4 = virtualinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        virtualinvoke $r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)>("createJAXBBean");

        $r7 = specialinvoke r5.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r6);

        virtualinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArg(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArg(java.lang.Object)>($r8);

        virtualinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArg(java.lang.Object)>(r6);

        $r11 = virtualinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        virtualinvoke r9.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>(r10, $r11);

     label03:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>($r1);

        goto label11;

     label04:
        $r15 := @caughtexception;

        $r16 = specialinvoke r5.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r6);

        $r17 = virtualinvoke $r16.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        if r6 == null goto label05;

        r20 = interfaceinvoke $r17.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(org.w3c.dom.Node,java.lang.Class)>(r2, r6);

        goto label06;

     label05:
        r20 = interfaceinvoke $r17.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(org.w3c.dom.Node)>(r2);

     label06:
        $z0 = r20 instanceof javax.xml.bind.JAXBElement;

        if $z0 == 0 goto label07;

        r18 = (javax.xml.bind.JAXBElement) r20;

        r20 = virtualinvoke r18.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label07:
        if r20 == null goto label08;

        virtualinvoke r9.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>(r10, r20);

     label08:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>(r19);

        goto label11;

     label09:
        $r14 := @caughtexception;

     label10:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>(r19);

        throw $r14;

     label11:
        goto label13;

     label12:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not parse configuration.", $r12);

        throw $r13;

     label13:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch javax.xml.bind.JAXBException from label01 to label11 with label12;
    }

    public transient void mapElementToJaxbPropertyFactory(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String, java.lang.Class, java.lang.Class, java.lang.String, java.lang.Object[])
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r2;
        java.lang.Object[] r7;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r8;
        org.w3c.dom.Element r3;
        java.lang.Class r4, r5;
        java.lang.String r1, r6;

        r2 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r3 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Class;

        r4 := @parameter4: java.lang.Class;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.Object[];

        $r8 = virtualinvoke r2.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r3, r4, null, r5, r6, r7);

        virtualinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>(r1, $r8);

        return;
    }

    public transient org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element, java.lang.Class, java.lang.Class, java.lang.String, java.lang.Object[])
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;
        org.w3c.dom.Element r1;
        java.lang.Object[] r5;
        java.lang.Class r2, r3;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r6;
        java.lang.String r4;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object[];

        $r6 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, r2, r3, r2, r4, r5);

        return $r6;
    }

    public transient org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r17;
        java.lang.Object[] r12;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r4;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r6, $r13, $r15;
        javax.xml.stream.XMLStreamException $r18;
        int i0, i1;
        javax.xml.stream.XMLStreamWriter $r1;
        java.lang.String r7, $r8, $r16;
        javax.xml.bind.JAXBContext $r11;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r9;
        java.io.StringWriter $r0;
        java.lang.RuntimeException $r19;
        org.w3c.dom.Element r2;
        java.lang.Class r3, r5, r10;
        java.lang.Object r14;

        r9 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.Class;

        r5 := @parameter2: java.lang.Class;

        r10 := @parameter3: java.lang.Class;

        r7 := @parameter4: java.lang.String;

        r12 := @parameter5: java.lang.Object[];

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>($r0);

     label1:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)>(r2, $r1);

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void flush()>();

     label2:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>($r1);

        goto label6;

     label3:
        $r18 := @caughtexception;

        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r18);

        throw $r19;

     label4:
        $r17 := @caughtexception;

     label5:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>($r1);

        throw $r17;

     label6:
        $r4 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>(r3);

        if r5 == null goto label7;

        $r15 = virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        $r16 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r15.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryBeanName(java.lang.String)>($r16);

     label7:
        $r6 = virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        virtualinvoke $r6.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)>(r7);

        $r8 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArg(java.lang.Object)>($r8);

        $r11 = specialinvoke r9.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r10);

        virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArg(java.lang.Object)>($r11);

        if r12 == null goto label9;

        i0 = lengthof r12;

        i1 = 0;

     label8:
        if i1 >= i0 goto label9;

        r14 = r12[i1];

        virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArg(java.lang.Object)>(r14);

        i1 = i1 + 1;

        goto label8;

     label9:
        $r13 = virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        return $r13;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    protected static java.lang.Object unmarshalFactoryString(java.lang.String, javax.xml.bind.JAXBContext, java.lang.Class)
    {
        java.lang.Throwable $r9;
        javax.xml.bind.Unmarshaller $r4;
        javax.xml.bind.JAXBElement $r6;
        java.lang.RuntimeException $r11, $r12;
        java.lang.Exception $r10;
        java.io.StringReader $r0;
        javax.xml.stream.XMLStreamReader $r2;
        java.lang.Class r5;
        java.lang.Object $r7, $r8;
        java.lang.String r1;
        javax.xml.bind.JAXBContext r3;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.xml.bind.JAXBContext;

        r5 := @parameter2: java.lang.Class;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>($r0);

     label1:
        $r4 = virtualinvoke r3.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r6 = interfaceinvoke $r4.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.stream.XMLStreamReader,java.lang.Class)>($r2, r5);

        $r7 = virtualinvoke $r6.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

        $r8 = virtualinvoke r5.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r7);

     label2:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>($r2);

        return $r8;

     label3:
        $r12 := @caughtexception;

        throw $r12;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label5:
        $r9 := @caughtexception;

     label6:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>($r2);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label6 with label5;
    }

    protected java.lang.String getJaxbPackage()
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        return "";
    }

    protected void mapToProperty(org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r5;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r3;
        java.lang.String r0, $r1, r2, $r4;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r3 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r1 = "id";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r2);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z2 == 0 goto label2;

        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("#{");

        if $z3 != 0 goto label2;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>(r0, $r4);

        goto label3;

     label2:
        virtualinvoke r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>(r0, r2);

     label3:
        return;
    }

    protected boolean isAttribute(java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r6;
        java.lang.String r0, $r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r6 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = "xmlns";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        if r2 == null goto label1;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z4 != 0 goto label2;

     label1:
        $r3 = "abstract";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r4 = "lazy-init";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label2;

        $r5 = "id";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    protected javax.xml.namespace.QName parseQName(org.w3c.dom.Element, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String $r0, r5, r6, r7, r8;
        boolean $z0;
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r4;
        java.lang.RuntimeException $r9;
        org.w3c.dom.Element r1;
        javax.xml.namespace.QName $r10;

        r4 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(125);

        $i5 = (int) -1;

        if $i2 != $i5 goto label1;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Namespace bracket \'{\' must having a closing bracket \'}\'.");

        throw $r9;

     label1:
        virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        $i3 = $i2 + 1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i3);

     label2:
        $i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(58);

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        r6 = r5;

        r7 = "";

        r8 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)>(r1, "");

        goto label4;

     label3:
        $r0 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r7 = $r0;

        $i1 = $i0 + 1;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i1);

        r8 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)>(r1, $r0);

     label4:
        $r10 = new javax.xml.namespace.QName;

        specialinvoke $r10.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r8, r6, r7);

        return $r10;
    }

    protected java.lang.String getIdOrName(org.w3c.dom.Element)
    {
        org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser r5;
        org.w3c.dom.Element r0;
        java.util.StringTokenizer $r3;
        int $i0;
        java.lang.String $r1, $r2, $r4, r6;
        boolean $z0;

        r5 := @this: org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        r6 = $r1;

        if null == $r1 goto label1;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        if null == $r2 goto label2;

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, ",; ");

        $i0 = virtualinvoke $r3.<java.util.StringTokenizer: int countTokens()>();

        if $i0 <= 0 goto label2;

        r6 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label2:
        return r6;
    }

    static void <clinit>()
    {
        java.lang.String $r2, $r5, $r8, $r11, $r14, $r17;
        java.util.logging.Logger $r18;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r9, $r10, $r12, $r15, $r16;
        java.lang.Class $r1, $r7, $r13;

        <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String WIRE_BUS_HANDLER> = "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lorg/apache/cxf/configuration/spring/AbstractBeanDefinitionParser;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".wireBus");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String WIRE_BUS_ATTRIBUTE> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = class "Lorg/apache/cxf/configuration/spring/AbstractBeanDefinitionParser;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".wireBusName");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String WIRE_BUS_NAME> = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = class "Lorg/apache/cxf/configuration/spring/AbstractBeanDefinitionParser;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".wireBusCreate");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.lang.String WIRE_BUS_CREATE> = $r17;

        $r18 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/configuration/spring/AbstractBeanDefinitionParser;");

        <org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: java.util.logging.Logger LOG> = $r18;

        return;
    }
}
