public abstract class org.apache.jena.fuseki.servlets.ServletBase extends javax.servlet.http.HttpServlet
{
    protected static final org.slf4j.Logger log;
    public final boolean verboseLogging;
    private static java.util.concurrent.atomic.AtomicLong requestIdAlloc;
    static java.lang.String varyHeaderSetting;

    protected void <init>()
    {
        org.apache.jena.fuseki.servlets.ServletBase r0;
        boolean $z0;

        r0 := @this: org.apache.jena.fuseki.servlets.ServletBase;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        $z0 = <org.apache.jena.fuseki.Fuseki: boolean verboseLogging>;

        r0.<org.apache.jena.fuseki.servlets.ServletBase: boolean verboseLogging> = $z0;

        return;
    }

    protected long allocRequestId(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        java.util.concurrent.atomic.AtomicLong $r0;
        javax.servlet.http.HttpServletRequest r3;
        javax.servlet.http.HttpServletResponse r2;
        org.apache.jena.fuseki.servlets.ServletBase r1;
        long $l0;

        r1 := @this: org.apache.jena.fuseki.servlets.ServletBase;

        r3 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r0 = <org.apache.jena.fuseki.servlets.ServletBase: java.util.concurrent.atomic.AtomicLong requestIdAlloc>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        virtualinvoke r1.<org.apache.jena.fuseki.servlets.ServletBase: void addRequestId(javax.servlet.http.HttpServletResponse,long)>(r2, $l0);

        return $l0;
    }

    protected void addRequestId(javax.servlet.http.HttpServletResponse, long)
    {
        javax.servlet.http.HttpServletResponse r0;
        org.apache.jena.fuseki.servlets.ServletBase r2;
        long l0;
        java.lang.String $r1;

        r2 := @this: org.apache.jena.fuseki.servlets.ServletBase;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        l0 := @parameter1: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Fuseki-Request-ID", $r1);

        return;
    }

    protected void responseSendError(javax.servlet.http.HttpServletResponse, int, java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        javax.servlet.http.HttpServletResponse r0;
        int i0;
        org.apache.jena.fuseki.servlets.ServletBase r4;
        java.io.IOException $r3;
        java.lang.String r1;

        r4 := @this: org.apache.jena.fuseki.servlets.ServletBase;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(i0, r1);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void errorOccurred(java.lang.Throwable)>($r3);

        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
    }

    protected void responseSendError(javax.servlet.http.HttpServletResponse, int)
    {
        javax.servlet.http.HttpServletResponse r0;
        int i0;
        org.apache.jena.fuseki.servlets.ServletBase r2;
        java.io.IOException $r1;

        r2 := @this: org.apache.jena.fuseki.servlets.ServletBase;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        i0 := @parameter1: int;

     label1:
        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void sendError(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void errorOccurred(java.lang.Throwable)>($r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected static java.lang.String wholeRequestURL(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        if $r2 == null goto label1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    protected static void successNoContent(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void success(org.apache.jena.fuseki.servlets.HttpAction,int)>(r0, 204);

        return;
    }

    protected static void success(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void success(org.apache.jena.fuseki.servlets.HttpAction,int)>(r0, 200);

        return;
    }

    protected static void successCreated(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void success(org.apache.jena.fuseki.servlets.HttpAction,int)>(r0, 201);

        return;
    }

    protected static void successNotFound(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void success(org.apache.jena.fuseki.servlets.HttpAction,int)>(r0, 404);

        return;
    }

    protected static void success(org.apache.jena.fuseki.servlets.HttpAction, int)
    {
        int i0;
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r1.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setStatus(int)>(i0);

        return;
    }

    protected static void successPage(org.apache.jena.fuseki.servlets.HttpAction, java.lang.String)
    {
        java.io.PrintWriter $r4;
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r1, $r2, $r3;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.io.IOException $r6;
        java.lang.String r5;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r5 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r1.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setContentType(java.lang.String)>("text/html");

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r2.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setStatus(int)>(200);

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        $r4 = virtualinvoke $r3.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: java.io.PrintWriter getWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("<html>");

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("<head>");

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("</head>");

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("<body>");

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("<h1>Success</h1>");

        if r5 == null goto label2;

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("<p>");

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>(r5);

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("</p>");

     label2:
        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("</body>");

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("</html>");

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void errorOccurred(java.lang.Throwable)>($r6);

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    protected static void warning(java.lang.String)
    {
        java.lang.String r0;
        org.slf4j.Logger $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.jena.fuseki.servlets.ServletBase: org.slf4j.Logger log>;

        interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>(r0);

        return;
    }

    protected static void warning(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r1;
        java.lang.String r0;
        org.slf4j.Logger $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = <org.apache.jena.fuseki.servlets.ServletBase: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(r0, r1);

        return;
    }

    protected static void errorBadRequest(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void error(int,java.lang.String)>(400, r0);

        return;
    }

    protected static void errorNotFound(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void error(int,java.lang.String)>(404, r0);

        return;
    }

    protected static void errorNotImplemented(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void error(int,java.lang.String)>(501, r0);

        return;
    }

    protected static void errorMethodNotAllowed(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP method not allowed: ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void error(int,java.lang.String)>(405, $r4);

        return;
    }

    protected static void errorForbidden(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void error(int,java.lang.String)>(403, r0);

        goto label2;

     label1:
        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void error(int,java.lang.String)>(403, "Forbidden");

     label2:
        return;
    }

    protected static void error(int)
    {
        org.apache.jena.fuseki.servlets.ActionErrorException $r0;
        int i0;

        i0 := @parameter0: int;

        $r0 = new org.apache.jena.fuseki.servlets.ActionErrorException;

        specialinvoke $r0.<org.apache.jena.fuseki.servlets.ActionErrorException: void <init>(java.lang.Throwable,java.lang.String,int)>(null, null, i0);

        throw $r0;
    }

    protected static void error(int, java.lang.String)
    {
        org.apache.jena.fuseki.servlets.ActionErrorException $r0;
        int i0;
        java.lang.String r1;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.apache.jena.fuseki.servlets.ActionErrorException;

        specialinvoke $r0.<org.apache.jena.fuseki.servlets.ActionErrorException: void <init>(java.lang.Throwable,java.lang.String,int)>(null, r1, i0);

        throw $r0;
    }

    protected static void errorOccurred(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void errorOccurred(java.lang.String,java.lang.Throwable)>(r0, null);

        return;
    }

    protected static void errorOccurred(java.lang.Throwable)
    {
        java.lang.Throwable r0;

        r0 := @parameter0: java.lang.Throwable;

        staticinvoke <org.apache.jena.fuseki.servlets.ServletBase: void errorOccurred(java.lang.String,java.lang.Throwable)>(null, r0);

        return;
    }

    protected static void errorOccurred(java.lang.String, java.lang.Throwable)
    {
        org.apache.jena.fuseki.servlets.ActionErrorException $r0;
        java.lang.Throwable r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        $r0 = new org.apache.jena.fuseki.servlets.ActionErrorException;

        specialinvoke $r0.<org.apache.jena.fuseki.servlets.ActionErrorException: void <init>(java.lang.Throwable,java.lang.String,int)>(r1, r2, 500);

        throw $r0;
    }

    protected static java.lang.String formatForLog(java.lang.String)
    {
        java.lang.String $r0, $r1, r2;

        r2 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(13, 32);

        return $r1;
    }

    public static void setVaryHeader(javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletResponse r0;
        java.lang.String $r1;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        $r1 = <org.apache.jena.fuseki.servlets.ServletBase: java.lang.String varyHeaderSetting>;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Vary", $r1);

        return;
    }

    public static void setCommonHeaders(javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletResponse r0;
        java.lang.String $r1;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Origin", "*");

        $r1 = <org.apache.jena.fuseki.Fuseki: java.lang.String serverHttpName>;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Server", $r1);

        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.slf4j.Logger $r0;
        java.lang.String[] $r2;
        java.lang.String $r3;

        $r0 = <org.apache.jena.fuseki.Fuseki: org.slf4j.Logger requestLog>;

        <org.apache.jena.fuseki.servlets.ServletBase: org.slf4j.Logger log> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        <org.apache.jena.fuseki.servlets.ServletBase: java.util.concurrent.atomic.AtomicLong requestIdAlloc> = $r1;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "Accept";

        $r2[1] = "Accept-Encoding";

        $r2[2] = "Accept-Charset";

        $r3 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoin(java.lang.String,java.lang.String[])>(",", $r2);

        <org.apache.jena.fuseki.servlets.ServletBase: java.lang.String varyHeaderSetting> = $r3;

        return;
    }
}
