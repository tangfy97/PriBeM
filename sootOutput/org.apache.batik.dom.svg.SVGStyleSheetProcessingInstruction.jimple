public class org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction extends org.apache.batik.dom.StyleSheetProcessingInstruction implements org.apache.batik.css.engine.CSSStyleSheetNode
{
    protected org.apache.batik.css.engine.StyleSheet styleSheet;

    protected void <init>()
    {
        org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction r0;

        r0 := @this: org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        specialinvoke r0.<org.apache.batik.dom.StyleSheetProcessingInstruction: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument, org.apache.batik.dom.StyleSheetFactory)
    {
        org.apache.batik.dom.StyleSheetFactory r3;
        org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction r0;
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        r3 := @parameter2: org.apache.batik.dom.StyleSheetFactory;

        specialinvoke r0.<org.apache.batik.dom.StyleSheetProcessingInstruction: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument,org.apache.batik.dom.StyleSheetFactory)>(r1, r2, r3);

        return;
    }

    public java.lang.String getStyleSheetURI()
    {
        org.apache.batik.dom.svg.SVGOMDocument r2;
        org.apache.batik.dom.util.HashTable $r4;
        org.apache.batik.util.ParsedURL $r3, $r7;
        org.w3c.dom.Document $r1;
        org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction r0;
        java.lang.Object $r5;
        java.lang.String r6, $r8;

        r0 := @this: org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Document getOwnerDocument()>();

        r2 = (org.apache.batik.dom.svg.SVGOMDocument) $r1;

        $r3 = virtualinvoke r2.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL getParsedURL()>();

        $r4 = virtualinvoke r0.<org.apache.batik.dom.StyleSheetProcessingInstruction: org.apache.batik.dom.util.HashTable getPseudoAttributes()>();

        $r5 = virtualinvoke $r4.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>("href");

        r6 = (java.lang.String) $r5;

        if $r3 == null goto label1;

        $r7 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r7.<org.apache.batik.util.ParsedURL: void <init>(org.apache.batik.util.ParsedURL,java.lang.String)>($r3, r6);

        $r8 = virtualinvoke $r7.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        return $r8;

     label1:
        return r6;
    }

    public org.apache.batik.css.engine.StyleSheet getCSSStyleSheet()
    {
        org.apache.batik.css.engine.CSSEngine $r18;
        org.apache.batik.css.engine.StyleSheet $r1, $r19, $r21, $r22, $r23;
        org.apache.batik.dom.util.HashTable $r2;
        org.w3c.dom.Document $r14;
        org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction r0;
        java.lang.String r4, $r5, r7, r9, r11, r13, $r20;
        boolean $z0, $z1;
        org.apache.batik.dom.svg.SVGOMDocument r15;
        org.apache.batik.util.ParsedURL $r16, $r17;
        java.lang.Object $r3, $r6, $r8, $r10, $r12;

        r0 := @this: org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        $r1 = r0.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: org.apache.batik.css.engine.StyleSheet styleSheet>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.StyleSheetProcessingInstruction: org.apache.batik.dom.util.HashTable getPseudoAttributes()>();

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>("type");

        r4 = (java.lang.String) $r3;

        $r5 = "text/css";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>("title");

        r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>("media");

        r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>("href");

        r11 = (java.lang.String) $r10;

        $r12 = virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>("alternate");

        r13 = (java.lang.String) $r12;

        $r14 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Document getOwnerDocument()>();

        r15 = (org.apache.batik.dom.svg.SVGOMDocument) $r14;

        $r16 = virtualinvoke r15.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL getParsedURL()>();

        $r17 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r17.<org.apache.batik.util.ParsedURL: void <init>(org.apache.batik.util.ParsedURL,java.lang.String)>($r16, r11);

        $r18 = virtualinvoke r15.<org.apache.batik.dom.AbstractStylableDocument: org.apache.batik.css.engine.CSSEngine getCSSEngine()>();

        $r19 = virtualinvoke $r18.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleSheet parseStyleSheet(org.apache.batik.util.ParsedURL,java.lang.String)>($r17, r9);

        r0.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: org.apache.batik.css.engine.StyleSheet styleSheet> = $r19;

        $r21 = r0.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: org.apache.batik.css.engine.StyleSheet styleSheet>;

        $r20 = "yes";

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        virtualinvoke $r21.<org.apache.batik.css.engine.StyleSheet: void setAlternate(boolean)>($z1);

        $r22 = r0.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: org.apache.batik.css.engine.StyleSheet styleSheet>;

        virtualinvoke $r22.<org.apache.batik.css.engine.StyleSheet: void setTitle(java.lang.String)>(r7);

     label1:
        $r23 = r0.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: org.apache.batik.css.engine.StyleSheet styleSheet>;

        return $r23;
    }

    public void setData(java.lang.String) throws org.w3c.dom.DOMException
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction r0;

        r0 := @this: org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.dom.StyleSheetProcessingInstruction: void setData(java.lang.String)>(r1);

        r0.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: org.apache.batik.css.engine.StyleSheet styleSheet> = null;

        return;
    }

    protected org.w3c.dom.Node newNode()
    {
        org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction $r0, r1;

        r1 := @this: org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        $r0 = new org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        specialinvoke $r0.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: void <init>()>();

        return $r0;
    }
}
