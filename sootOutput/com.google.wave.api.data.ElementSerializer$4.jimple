final class com.google.wave.api.data.ElementSerializer$4 extends com.google.wave.api.data.ElementSerializer
{

    void <init>(java.lang.String, com.google.wave.api.ElementType)
    {
        java.lang.String r1;
        com.google.wave.api.data.ElementSerializer$4 r0;
        com.google.wave.api.ElementType r2;

        r0 := @this: com.google.wave.api.data.ElementSerializer$4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.wave.api.ElementType;

        specialinvoke r0.<com.google.wave.api.data.ElementSerializer: void <init>(java.lang.String,com.google.wave.api.ElementType)>(r1, r2);

        return;
    }

    public org.waveprotocol.wave.model.document.util.XmlStringBuilder toXml(com.google.wave.api.Element)
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r0, $r8, $r11, $r12, $r13, $r14, $r15;
        com.google.wave.api.Element r1;
        java.lang.String[] $r6;
        java.lang.Iterable $r4;
        java.lang.String $r2, $r7, r10;
        com.google.common.base.Splitter $r3;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        com.google.wave.api.data.ElementSerializer$4 r16;
        java.lang.Object $r9;

        r16 := @this: com.google.wave.api.data.ElementSerializer$4;

        r1 := @parameter0: com.google.wave.api.Element;

        $r0 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r2 = virtualinvoke r1.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("value");

        $z0 = staticinvoke <com.google.wave.api.data.ElementSerializer: boolean access$000(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r14 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r15 = virtualinvoke $r14.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String)>("line");

        virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder append(org.waveprotocol.wave.model.document.util.XmlStringBuilder)>($r15);

        goto label3;

     label1:
        $r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>("\n");

        $r4 = virtualinvoke $r3.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>($r2);

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r12 = virtualinvoke $r11.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String)>("line");

        virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder append(org.waveprotocol.wave.model.document.util.XmlStringBuilder)>($r12);

        $r13 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createText(java.lang.String)>(r10);

        virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder append(org.waveprotocol.wave.model.document.util.XmlStringBuilder)>($r13);

        goto label2;

     label3:
        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "name";

        $r7 = virtualinvoke r1.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("name");

        $r6[1] = $r7;

        $r8 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String,java.lang.String[])>("textarea", $r6);

        return $r8;
    }

    public com.google.wave.api.Element fromXml(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E, org.waveprotocol.wave.model.wave.Wavelet)
    {
        java.lang.String $r5, $r10, $r11;
        boolean $z0, z1;
        org.waveprotocol.wave.model.document.Doc$N r14;
        org.waveprotocol.wave.model.document.Document r1;
        com.google.wave.api.FormElement $r6;
        org.waveprotocol.wave.model.document.Doc$T r8;
        org.waveprotocol.wave.model.wave.Wavelet r13;
        com.google.wave.api.data.ElementSerializer$4 r4;
        java.lang.StringBuilder $r0;
        java.lang.Object $r3, $r7, $r9, $r15;
        org.waveprotocol.wave.model.document.Doc$E r2, $r12;

        r4 := @this: com.google.wave.api.data.ElementSerializer$4;

        r1 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r2 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        r13 := @parameter2: org.waveprotocol.wave.model.wave.Wavelet;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.Object getFirstChild(java.lang.Object)>(r2);

        r14 = (org.waveprotocol.wave.model.document.Doc$N) $r3;

        z1 = 1;

     label1:
        if r14 == null goto label5;

        $r7 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.Object asText(java.lang.Object)>(r14);

        r8 = (org.waveprotocol.wave.model.document.Doc$T) $r7;

        if r8 == null goto label2;

        $r11 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getData(java.lang.Object)>(r8);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label2:
        $r9 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.Object asElement(java.lang.Object)>(r14);

        $r12 = (org.waveprotocol.wave.model.document.Doc$E) $r9;

        if $r12 == null goto label4;

        $r10 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getTagName(java.lang.Object)>($r12);

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("line");

        if $z0 == 0 goto label4;

        if z1 == 0 goto label3;

        z1 = 0;

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label4:
        $r15 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.Object getNextSibling(java.lang.Object)>(r14);

        r14 = (org.waveprotocol.wave.model.document.Doc$N) $r15;

        goto label1;

     label5:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r4.<com.google.wave.api.data.ElementSerializer$4: com.google.wave.api.FormElement createFormElement(org.waveprotocol.wave.model.document.Document,org.waveprotocol.wave.model.document.Doc$E,java.lang.String)>(r1, r2, $r5);

        return $r6;
    }
}
