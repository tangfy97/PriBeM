public class ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset extends ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private static java.lang.String timeDimName;
    private static java.lang.String timeVarName;
    private static java.lang.String latVarName;
    private static java.lang.String lonVarName;
    private static java.lang.String elevVarName;
    private static java.lang.String trajId;

    public static boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r1;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = staticinvoke <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.Group $r1, $r7, $r21, $r30, $r39;
        ucar.nc2.Attribute $r14, $r28, $r37, $r46;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r6;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.String $r4, $r5, $r8, $r12, $r13, $r15, $r19, $r22, $r26, $r27, $r29, $r31, $r35, $r36, $r38, $r40, $r44, $r45, $r47, $r48;
        ucar.nc2.Dimension r49, r50, r51, r52, r53;
        ucar.nc2.dataset.NetcdfDataset r0;
        java.util.Date $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r2, $r10, $r24, $r33, $r42;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.Variable $r9, $r23, $r32, $r41;
        java.lang.Object $r3, $r11, $r25, $r34, $r43;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r2 = virtualinvoke $r1.<ucar.nc2.Group: java.util.List getDimensions()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == 1 goto label01;

        return null;

     label01:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r49 = (ucar.nc2.Dimension) $r3;

        $r4 = virtualinvoke r49.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r5 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeDimName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r6 = new ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config;

        specialinvoke $r6.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void <init>()>();

        virtualinvoke $r6.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTimeDim(ucar.nc2.Dimension)>(r49);

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r8 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeVarName>;

        $r9 = virtualinvoke $r7.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r8);

        if $r9 != null goto label03;

        return null;

     label03:
        $r10 = virtualinvoke $r9.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 == 1 goto label04;

        return null;

     label04:
        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r50 = (ucar.nc2.Dimension) $r11;

        $r12 = virtualinvoke r50.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r13 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeDimName>;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label05;

        return null;

     label05:
        $r14 = virtualinvoke $r9.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r15 = virtualinvoke $r14.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0 ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardDate(java.lang.String)>($r19);

        if $r20 != null goto label06;

        return null;

     label06:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTimeVar(ucar.nc2.Variable)>($r9);

        $r21 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r22 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String latVarName>;

        $r23 = virtualinvoke $r21.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r22);

        if $r23 != null goto label07;

        return null;

     label07:
        $r24 = virtualinvoke $r23.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i2 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i2 == 1 goto label08;

        return null;

     label08:
        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0);

        r51 = (ucar.nc2.Dimension) $r25;

        $r26 = virtualinvoke r51.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r27 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeDimName>;

        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z2 != 0 goto label09;

        return null;

     label09:
        $r28 = virtualinvoke $r23.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r29 = virtualinvoke $r28.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z3 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r29, "degrees_north");

        if $z3 != 0 goto label10;

        return null;

     label10:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setLatVar(ucar.nc2.Variable)>($r23);

        $r30 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r31 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String lonVarName>;

        $r32 = virtualinvoke $r30.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r31);

        if $r32 != null goto label11;

        return null;

     label11:
        $r33 = virtualinvoke $r32.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i3 = interfaceinvoke $r33.<java.util.List: int size()>();

        if $i3 == 1 goto label12;

        return null;

     label12:
        $r34 = interfaceinvoke $r33.<java.util.List: java.lang.Object get(int)>(0);

        r52 = (ucar.nc2.Dimension) $r34;

        $r35 = virtualinvoke r52.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r36 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeDimName>;

        $z4 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z4 != 0 goto label13;

        return null;

     label13:
        $r37 = virtualinvoke $r32.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r38 = virtualinvoke $r37.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z5 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r38, "degrees_east");

        if $z5 != 0 goto label14;

        return null;

     label14:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setLonVar(ucar.nc2.Variable)>($r32);

        $r39 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r40 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String elevVarName>;

        $r41 = virtualinvoke $r39.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r40);

        if $r41 != null goto label15;

        return null;

     label15:
        $r42 = virtualinvoke $r41.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i4 = interfaceinvoke $r42.<java.util.List: int size()>();

        if $i4 == 1 goto label16;

        return null;

     label16:
        $r43 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(0);

        r53 = (ucar.nc2.Dimension) $r43;

        $r44 = virtualinvoke r53.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r45 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeDimName>;

        $z6 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z6 != 0 goto label17;

        return null;

     label17:
        $r46 = virtualinvoke $r41.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r47 = virtualinvoke $r46.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z7 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r47, "meters");

        if $z7 != 0 goto label18;

        return null;

     label18:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setElevVar(ucar.nc2.Variable)>($r41);

        $r48 = <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String trajId>;

        virtualinvoke $r6.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTrajectoryId(java.lang.String)>($r48);

        return $r6;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;
        ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset r1;

        r1 := @this: ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset $r0, r2;

        r2 := @this: ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public ucar.nc2.constants.FeatureType getScientificDataType()
    {
        ucar.nc2.constants.FeatureType $r0;
        ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset r1;

        r1 := @this: ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset r0;

        r0 := @this: ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset r0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r2;

        r0 := @this: ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = staticinvoke <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r1);

        virtualinvoke r0.<ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: void setTrajectoryInfo(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config)>($r2);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeDimName> = "time";

        <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String timeVarName> = "time";

        <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String latVarName> = "latitude";

        <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String lonVarName> = "longitude";

        <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String elevVarName> = "altitude";

        <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: java.lang.String trajId> = "trajectory data";

        return;
    }
}
