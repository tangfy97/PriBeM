final class org.apache.lucene.index.TermVectorsTermsWriterPerThread extends org.apache.lucene.index.TermsHashConsumerPerThread
{
    final org.apache.lucene.index.TermVectorsTermsWriter termsWriter;
    final org.apache.lucene.index.TermsHashPerThread termsHashPerThread;
    final org.apache.lucene.index.DocumentsWriter$DocState docState;
    org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc;
    final org.apache.lucene.index.ByteSliceReader vectorSliceReader;
    final org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results;
    java.lang.String lastVectorFieldName;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.TermsHashPerThread, org.apache.lucene.index.TermVectorsTermsWriter)
    {
        org.apache.lucene.index.TermsHashPerThread r6;
        org.apache.lucene.index.DocumentsWriter$DocState $r7;
        org.apache.lucene.util.UnicodeUtil$UTF8Result $r3, $r4;
        org.apache.lucene.index.TermVectorsTermsWriter r5;
        org.apache.lucene.util.UnicodeUtil$UTF8Result[] $r2;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r0;
        org.apache.lucene.index.ByteSliceReader $r1;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        r6 := @parameter0: org.apache.lucene.index.TermsHashPerThread;

        r5 := @parameter1: org.apache.lucene.index.TermVectorsTermsWriter;

        specialinvoke r0.<org.apache.lucene.index.TermsHashConsumerPerThread: void <init>()>();

        $r1 = new org.apache.lucene.index.ByteSliceReader;

        specialinvoke $r1.<org.apache.lucene.index.ByteSliceReader: void <init>()>();

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.ByteSliceReader vectorSliceReader> = $r1;

        $r2 = newarray (org.apache.lucene.util.UnicodeUtil$UTF8Result)[2];

        $r3 = new org.apache.lucene.util.UnicodeUtil$UTF8Result;

        specialinvoke $r3.<org.apache.lucene.util.UnicodeUtil$UTF8Result: void <init>()>();

        $r2[0] = $r3;

        $r4 = new org.apache.lucene.util.UnicodeUtil$UTF8Result;

        specialinvoke $r4.<org.apache.lucene.util.UnicodeUtil$UTF8Result: void <init>()>();

        $r2[1] = $r4;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results> = $r2;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter termsWriter> = r5;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermsHashPerThread termsHashPerThread> = r6;

        $r7 = r6.<org.apache.lucene.index.TermsHashPerThread: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.DocumentsWriter$DocState docState> = $r7;

        return;
    }

    public void startDocument()
    {
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc $r1, $r2, $r4;
        org.apache.lucene.index.DocumentsWriter$DocState $r3;
        java.lang.AssertionError $r5;
        int $i0;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        $z0 = <org.apache.lucene.index.TermVectorsTermsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: boolean clearLastVectorFieldName()>();

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        virtualinvoke $r2.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: void reset()>();

        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        $i0 = $r3.<org.apache.lucene.index.DocumentsWriter$DocState: int docID>;

        $r4.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int docID> = $i0;

     label2:
        return;
    }

    public org.apache.lucene.index.DocumentsWriter$DocWriter finishDocument()
    {
        java.lang.Throwable $r2;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc r1;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

     label1:
        r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        goto label5;

     label2:
        return r1;

     label3:
        $r2 := @caughtexception;

        goto label6;

     label4:
        throw $r2;

     label5:
        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc> = null;

        goto label2;

     label6:
        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc> = null;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.lucene.index.TermsHashConsumerPerField addField(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.TermsHashPerField r1;
        org.apache.lucene.index.FieldInfo r3;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r2;
        org.apache.lucene.index.TermVectorsTermsWriterPerField $r0;

        r2 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        r1 := @parameter0: org.apache.lucene.index.TermsHashPerField;

        r3 := @parameter1: org.apache.lucene.index.FieldInfo;

        $r0 = new org.apache.lucene.index.TermVectorsTermsWriterPerField;

        specialinvoke $r0.<org.apache.lucene.index.TermVectorsTermsWriterPerField: void <init>(org.apache.lucene.index.TermsHashPerField,org.apache.lucene.index.TermVectorsTermsWriterPerThread,org.apache.lucene.index.FieldInfo)>(r1, r2, r3);

        return $r0;
    }

    public void abort()
    {
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc $r1, $r2;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc>;

        virtualinvoke $r2.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: void abort()>();

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc doc> = null;

     label1:
        return;
    }

    final boolean clearLastVectorFieldName()
    {
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: java.lang.String lastVectorFieldName> = null;

        return 1;
    }

    final boolean vectorFieldsInOrder(org.apache.lucene.index.FieldInfo)
    {
        java.lang.Throwable $r7;
        int $i0;
        org.apache.lucene.index.FieldInfo r2;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r8;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        r2 := @parameter0: org.apache.lucene.index.FieldInfo;

     label01:
        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: java.lang.String lastVectorFieldName>;

        if $r1 == null goto label05;

        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: java.lang.String lastVectorFieldName>;

        $r4 = r2.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        if $i0 >= 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        goto label09;

     label04:
        return $z0;

     label05:
        goto label10;

     label06:
        return 1;

     label07:
        $r7 := @caughtexception;

        goto label11;

     label08:
        throw $r7;

     label09:
        $r6 = r2.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: java.lang.String lastVectorFieldName> = $r6;

        goto label04;

     label10:
        $r3 = r2.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: java.lang.String lastVectorFieldName> = $r3;

        goto label06;

     label11:
        $r8 = r2.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: java.lang.String lastVectorFieldName> = $r8;

        goto label08;

        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/TermVectorsTermsWriterPerThread;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.TermVectorsTermsWriterPerThread: boolean $assertionsDisabled> = $z1;

        return;
    }
}
