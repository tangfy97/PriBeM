public class org.apache.xml.utils.StringComparable extends java.lang.Object implements java.lang.Comparable
{
    public static final int UNKNOWN_CASE;
    public static final int UPPER_CASE;
    public static final int LOWER_CASE;
    private java.lang.String m_text;
    private java.util.Locale m_locale;
    private java.text.RuleBasedCollator m_collator;
    private java.lang.String m_caseOrder;
    private int m_mask;

    public void <init>(java.lang.String, java.util.Locale, java.text.Collator, java.lang.String)
    {
        java.text.RuleBasedCollator $r4, $r6;
        org.apache.xml.utils.StringComparable r0;
        java.util.Locale r2;
        int $i0, $i1, $i3;
        java.lang.String r1, r5;
        java.text.Collator r3;

        r0 := @this: org.apache.xml.utils.StringComparable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        r3 := @parameter2: java.text.Collator;

        r5 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = (int) -1;

        r0.<org.apache.xml.utils.StringComparable: int m_mask> = $i3;

        r0.<org.apache.xml.utils.StringComparable: java.lang.String m_text> = r1;

        r0.<org.apache.xml.utils.StringComparable: java.util.Locale m_locale> = r2;

        $r4 = (java.text.RuleBasedCollator) r3;

        r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator> = $r4;

        r0.<org.apache.xml.utils.StringComparable: java.lang.String m_caseOrder> = r5;

        $r6 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $i0 = virtualinvoke $r6.<java.text.Collator: int getStrength()>();

        $i1 = staticinvoke <org.apache.xml.utils.StringComparable: int getMask(int)>($i0);

        r0.<org.apache.xml.utils.StringComparable: int m_mask> = $i1;

        return;
    }

    public static final java.lang.Comparable getComparator(java.lang.String, java.util.Locale, java.text.Collator, java.lang.String)
    {
        java.text.RuleBasedCollator $r3;
        org.apache.xml.utils.StringComparable $r5;
        java.text.CollationKey $r4;
        java.util.Locale r6;
        int $i0;
        java.lang.String r0, r2;
        java.text.Collator r1;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.Locale;

        r1 := @parameter2: java.text.Collator;

        r0 := @parameter3: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = (java.text.RuleBasedCollator) r1;

        $r4 = virtualinvoke $r3.<java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>(r2);

        return $r4;

     label2:
        $r5 = new org.apache.xml.utils.StringComparable;

        specialinvoke $r5.<org.apache.xml.utils.StringComparable: void <init>(java.lang.String,java.util.Locale,java.text.Collator,java.lang.String)>(r2, r6, r1, r0);

        return $r5;
    }

    public final java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.xml.utils.StringComparable r0;

        r0 := @this: org.apache.xml.utils.StringComparable;

        $r1 = r0.<org.apache.xml.utils.StringComparable: java.lang.String m_text>;

        return $r1;
    }

    public int compareTo(java.lang.Object)
    {
        int $i0, $i1, $i2, i3;
        java.lang.String $r2, $r4, $r6, $r8, $r9, $r12;
        boolean $z0;
        java.text.RuleBasedCollator $r5, $r7, $r10, $r11, $r13, $r14;
        org.apache.xml.utils.StringComparable $r1, r3;
        java.lang.Object r0;

        r3 := @this: org.apache.xml.utils.StringComparable;

        r0 := @parameter0: java.lang.Object;

        $r1 = (org.apache.xml.utils.StringComparable) r0;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.StringComparable: java.lang.String toString()>();

        $r4 = r3.<org.apache.xml.utils.StringComparable: java.lang.String m_text>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = r3.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $i0 = virtualinvoke $r5.<java.text.Collator: int getStrength()>();

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label3;

     label2:
        $r7 = r3.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $r6 = r3.<org.apache.xml.utils.StringComparable: java.lang.String m_text>;

        i3 = virtualinvoke $r7.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r6, $r2);

        goto label4;

     label3:
        $r11 = r3.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        virtualinvoke $r11.<java.text.Collator: void setStrength(int)>(1);

        $r13 = r3.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $r12 = r3.<org.apache.xml.utils.StringComparable: java.lang.String m_text>;

        i3 = virtualinvoke $r13.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r12, $r2);

        $r14 = r3.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        virtualinvoke $r14.<java.text.Collator: void setStrength(int)>($i0);

     label4:
        if i3 == 0 goto label5;

        return i3;

     label5:
        $r8 = r3.<org.apache.xml.utils.StringComparable: java.lang.String m_text>;

        $i1 = specialinvoke r3.<org.apache.xml.utils.StringComparable: int getCaseDiff(java.lang.String,java.lang.String)>($r8, $r2);

        if $i1 == 0 goto label6;

        return $i1;

     label6:
        $r10 = r3.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $r9 = r3.<org.apache.xml.utils.StringComparable: java.lang.String m_text>;

        $i2 = virtualinvoke $r10.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r9, $r2);

        return $i2;
    }

    private final int getCaseDiff(java.lang.String, java.lang.String)
    {
        int[] $r8;
        java.util.Locale $r7;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String r5, r6, $r11;
        boolean $z0;
        java.text.RuleBasedCollator $r1, $r2, $r3, $r4, $r9, $r10;
        org.apache.xml.utils.StringComparable r0;

        r0 := @this: org.apache.xml.utils.StringComparable;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $i0 = virtualinvoke $r1.<java.text.Collator: int getStrength()>();

        $r2 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $i1 = virtualinvoke $r2.<java.text.Collator: int getDecomposition()>();

        $r3 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        virtualinvoke $r3.<java.text.Collator: void setStrength(int)>(2);

        $r4 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        virtualinvoke $r4.<java.text.Collator: void setDecomposition(int)>(1);

        $r7 = r0.<org.apache.xml.utils.StringComparable: java.util.Locale m_locale>;

        $r8 = specialinvoke r0.<org.apache.xml.utils.StringComparable: int[] getFirstCaseDiff(java.lang.String,java.lang.String,java.util.Locale)>(r5, r6, $r7);

        $r9 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        virtualinvoke $r9.<java.text.Collator: void setStrength(int)>($i0);

        $r10 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        virtualinvoke $r10.<java.text.Collator: void setDecomposition(int)>($i1);

        if $r8 == null goto label4;

        $r11 = r0.<org.apache.xml.utils.StringComparable: java.lang.String m_caseOrder>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("upper-first");

        if $z0 == 0 goto label2;

        $i3 = $r8[0];

        if $i3 != 1 goto label1;

        $i5 = (int) -1;

        return $i5;

     label1:
        return 1;

     label2:
        $i2 = $r8[0];

        if $i2 != 2 goto label3;

        $i7 = (int) -1;

        return $i7;

     label3:
        return 1;

     label4:
        return 0;
    }

    private final int[] getFirstCaseDiff(java.lang.String, java.lang.String, java.util.Locale)
    {
        int[] $r13;
        java.util.Locale r9;
        boolean z0, z1;
        org.apache.xml.utils.StringComparable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, $i16, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31;
        java.lang.String r1, r4, $r7, $r8, $r10, $r11, $r16, $r18;
        java.text.CollationElementIterator $r3, $r6;
        java.text.RuleBasedCollator $r2, $r5, $r12, $r14, $r15, $r17, $r19;

        r0 := @this: org.apache.xml.utils.StringComparable;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r9 := @parameter2: java.util.Locale;

        $r2 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $r3 = virtualinvoke $r2.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r1);

        $r5 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $r6 = virtualinvoke $r5.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r4);

        $i19 = (int) -1;

        i10 = $i19;

        $i21 = (int) -1;

        i11 = $i21;

        $i23 = (int) -1;

        i12 = $i23;

        $i25 = (int) -1;

        i13 = $i25;

        $i27 = (int) -1;

        $i0 = specialinvoke r0.<org.apache.xml.utils.StringComparable: int getElement(int)>($i27);

        i14 = 0;

        i15 = 0;

        z0 = 1;

        z1 = 1;

        goto label01;

     label01:
        if z0 == 0 goto label02;

        i12 = virtualinvoke $r6.<java.text.CollationElementIterator: int getOffset()>();

        $i9 = virtualinvoke $r6.<java.text.CollationElementIterator: int next()>();

        i14 = specialinvoke r0.<org.apache.xml.utils.StringComparable: int getElement(int)>($i9);

        i13 = virtualinvoke $r6.<java.text.CollationElementIterator: int getOffset()>();

     label02:
        if z1 == 0 goto label03;

        i10 = virtualinvoke $r3.<java.text.CollationElementIterator: int getOffset()>();

        $i8 = virtualinvoke $r3.<java.text.CollationElementIterator: int next()>();

        i15 = specialinvoke r0.<org.apache.xml.utils.StringComparable: int getElement(int)>($i8);

        i11 = virtualinvoke $r3.<java.text.CollationElementIterator: int getOffset()>();

     label03:
        z0 = 1;

        z1 = 1;

        if i14 == $i0 goto label04;

        if i15 != $i0 goto label05;

     label04:
        return null;

     label05:
        if i15 != 0 goto label06;

        z0 = 0;

        goto label01;

     label06:
        if i14 != 0 goto label07;

        z1 = 0;

        goto label01;

     label07:
        if i15 == i14 goto label01;

        if i12 >= i13 goto label01;

        if i10 >= i11 goto label01;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i10, i11);

        $r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(i12, i13);

        $r10 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r9);

        $r11 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r9);

        $r12 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $i1 = virtualinvoke $r12.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r10, $r11);

        if $i1 == 0 goto label08;

        goto label01;

     label08:
        $r13 = newarray (int)[2];

        $i29 = (int) -1;

        $r13[0] = $i29;

        $i31 = (int) -1;

        $r13[1] = $i31;

        $r14 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $i2 = virtualinvoke $r14.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r7, $r10);

        if $i2 != 0 goto label09;

        $r13[0] = 1;

        goto label10;

     label09:
        $r15 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $r16 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r9);

        $i3 = virtualinvoke $r15.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r7, $r16);

        if $i3 != 0 goto label10;

        $r13[0] = 2;

     label10:
        $r19 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $i16 = virtualinvoke $r19.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r8, $r11);

        if $i16 != 0 goto label11;

        $r13[1] = 1;

        goto label12;

     label11:
        $r17 = r0.<org.apache.xml.utils.StringComparable: java.text.RuleBasedCollator m_collator>;

        $r18 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r9);

        $i4 = virtualinvoke $r17.<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>($r8, $r18);

        if $i4 != 0 goto label12;

        $r13[1] = 2;

     label12:
        $i17 = $r13[0];

        if $i17 != 1 goto label13;

        $i7 = $r13[1];

        if $i7 == 2 goto label14;

     label13:
        $i5 = $r13[0];

        if $i5 != 2 goto label01;

        $i6 = $r13[1];

        if $i6 != 1 goto label01;

     label14:
        return $r13;
    }

    private static final int getMask(int)
    {
        int i0, $i2, $i4;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        return -65536;

     label2:
        $i2 = (int) -256;

        return $i2;

     label3:
        $i4 = (int) -1;

        return $i4;
    }

    private final int getElement(int)
    {
        org.apache.xml.utils.StringComparable r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.xml.utils.StringComparable;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xml.utils.StringComparable: int m_mask>;

        $i2 = i0 & $i1;

        return $i2;
    }

    public static void <clinit>()
    {
        <org.apache.xml.utils.StringComparable: int LOWER_CASE> = 2;

        <org.apache.xml.utils.StringComparable: int UPPER_CASE> = 1;

        <org.apache.xml.utils.StringComparable: int UNKNOWN_CASE> = -1;

        return;
    }
}
