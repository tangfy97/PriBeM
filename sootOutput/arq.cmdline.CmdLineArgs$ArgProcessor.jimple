class arq.cmdline.CmdLineArgs$ArgProcessor extends java.lang.Object implements arq.cmdline.ArgProc
{
    boolean nextArgProcessed;
    boolean positionalArgsStarted;
    final arq.cmdline.CmdLineArgs this$0;

    void <init>(arq.cmdline.CmdLineArgs)
    {
        arq.cmdline.CmdLineArgs$ArgProcessor r0;
        arq.cmdline.CmdLineArgs r1;

        r0 := @this: arq.cmdline.CmdLineArgs$ArgProcessor;

        r1 := @parameter0: arq.cmdline.CmdLineArgs;

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean nextArgProcessed> = 0;

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean positionalArgsStarted> = 0;

        return;
    }

    public void startArgs()
    {
        arq.cmdline.CmdLineArgs$ArgProcessor r0;

        r0 := @this: arq.cmdline.CmdLineArgs$ArgProcessor;

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean nextArgProcessed> = 0;

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean positionalArgsStarted> = 0;

        return;
    }

    public void finishArgs()
    {
        arq.cmdline.CmdLineArgs$ArgProcessor r0;

        r0 := @this: arq.cmdline.CmdLineArgs$ArgProcessor;

        return;
    }

    public void arg(java.lang.String, int)
    {
        arq.cmdline.ArgDecl r7;
        java.util.Map $r3, $r5;
        arq.cmdline.CmdLineArgs $r2, $r4, $r8, $r9, $r12, $r13, $r14, $r15;
        int i0, $i1;
        java.lang.String $r1, $r10, $r11, r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        arq.cmdline.CmdLineArgs$ArgProcessor r0;
        java.lang.Object $r6;

        r0 := @this: arq.cmdline.CmdLineArgs$ArgProcessor;

        r16 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean nextArgProcessed>;

        if $z0 == 0 goto label1;

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean nextArgProcessed> = 0;

        return;

     label1:
        $z1 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean positionalArgsStarted>;

        if $z1 == 0 goto label2;

        $r15 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        virtualinvoke $r15.<arq.cmdline.CmdLineArgs: arq.cmdline.CmdLineArgs addPositional(java.lang.String)>(r16);

        return;

     label2:
        $z2 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z3 == 0 goto label4;

     label3:
        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean positionalArgsStarted> = 1;

        return;

     label4:
        $z4 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z4 != 0 goto label5;

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean positionalArgsStarted> = 1;

        $r14 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        virtualinvoke $r14.<arq.cmdline.CmdLineArgs: arq.cmdline.CmdLineArgs addPositional(java.lang.String)>(r16);

        return;

     label5:
        $r1 = staticinvoke <arq.cmdline.ArgDecl: java.lang.String canonicalForm(java.lang.String)>(r16);

        $r2 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        $r3 = $r2.<arq.cmdline.CmdLineArgs: java.util.Map argMap>;

        $z5 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z5 != 0 goto label6;

        $r13 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        virtualinvoke $r13.<arq.cmdline.CmdLineArgs: void handleUnrecognizedArg(java.lang.String)>($r1);

        return;

     label6:
        $r4 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        $r5 = $r4.<arq.cmdline.CmdLineArgs: java.util.Map argMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (arq.cmdline.ArgDecl) $r6;

        $z6 = virtualinvoke r7.<arq.cmdline.ArgDecl: boolean takesValue()>();

        if $z6 == 0 goto label7;

        $r9 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        $i1 = i0 + 1;

        $r10 = virtualinvoke $r9.<arq.cmdline.CmdLineArgs: java.lang.String getArg(int)>($i1);

        $r11 = virtualinvoke r7.<arq.cmdline.ArgDecl: java.lang.String getKeyName()>();

        $r12 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        virtualinvoke $r12.<arq.cmdline.CmdLineArgs: arq.cmdline.CmdLineArgs addArg(java.lang.String,java.lang.String)>($r11, $r10);

        r0.<arq.cmdline.CmdLineArgs$ArgProcessor: boolean nextArgProcessed> = 1;

        goto label8;

     label7:
        $r8 = r0.<arq.cmdline.CmdLineArgs$ArgProcessor: arq.cmdline.CmdLineArgs this$0>;

        virtualinvoke $r8.<arq.cmdline.CmdLineArgs: arq.cmdline.CmdLineArgs addArg(java.lang.String)>($r1);

     label8:
        return;
    }
}
