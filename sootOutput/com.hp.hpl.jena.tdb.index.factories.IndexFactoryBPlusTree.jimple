public class com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree extends java.lang.Object implements com.hp.hpl.jena.tdb.index.IndexFactory, com.hp.hpl.jena.tdb.index.IndexRangeFactory
{
    private static org.slf4j.Logger log;
    private final int blockSize;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: void <init>(int)>(8192);

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: int blockSize> = i0;

        return;
    }

    public com.hp.hpl.jena.tdb.index.Index createIndex(com.hp.hpl.jena.tdb.base.file.FileSet, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree r0;
        com.hp.hpl.jena.tdb.base.file.FileSet r1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r2;
        com.hp.hpl.jena.tdb.index.RangeIndex $r3;

        r0 := @this: com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: com.hp.hpl.jena.tdb.index.RangeIndex createRangeIndex(com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.tdb.index.RangeIndex createRangeIndex(com.hp.hpl.jena.tdb.base.file.FileSet, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree r0;
        com.hp.hpl.jena.tdb.TDBException $r7;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r2;
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r4, $r5;
        com.hp.hpl.jena.tdb.base.file.FileSet r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r6;

        r0 := @this: com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree;

        r3 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        $i0 = r0.<com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: int blockSize>;

        $i1 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int calcOrder(int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>($i0, r1);

        $r2 = new com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: void <init>(int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>($i1, r1);

        $i2 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int getCalcBlockSize()>();

        $i3 = r0.<com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: int blockSize>;

        if $i2 <= $i3 goto label1;

        $r7 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r7.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>("Calculated block size is greater than required size");

        throw $r7;

     label1:
        $i4 = r0.<com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: int blockSize>;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: com.hp.hpl.jena.tdb.base.block.BlockMgr createBlockMgr(com.hp.hpl.jena.tdb.base.file.FileSet,java.lang.String,int)>(r3, "idn", $i4);

        $i5 = r0.<com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: int blockSize>;

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: com.hp.hpl.jena.tdb.base.block.BlockMgr createBlockMgr(com.hp.hpl.jena.tdb.base.file.FileSet,java.lang.String,int)>(r3, "dat", $i5);

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree create(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r2, $r4, $r5);

        return $r6;
    }

    static com.hp.hpl.jena.tdb.base.block.BlockMgr createBlockMgr(com.hp.hpl.jena.tdb.base.file.FileSet, java.lang.String, int)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r3, $r4;
        com.hp.hpl.jena.tdb.base.file.FileSet r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: boolean isMem()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createMem(java.lang.String,int)>(r1, i0);

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: java.lang.String filename(java.lang.String)>(r1);

        $i2 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int BlockReadCacheSize>;

        $i1 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int BlockWriteCacheSize>;

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr createFile(java.lang.String,int,int,int)>($r2, i0, $i2, $i1);

        return $r3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/index/factories/IndexFactoryBPlusTree;");

        <com.hp.hpl.jena.tdb.index.factories.IndexFactoryBPlusTree: org.slf4j.Logger log> = $r0;

        return;
    }
}
