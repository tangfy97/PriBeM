public class org.apache.xerces.util.SymbolHash extends java.lang.Object
{
    protected int fTableSize;
    protected org.apache.xerces.util.SymbolHash$Entry[] fBuckets;
    protected int fNum;

    public void <init>()
    {
        int $i0;
        org.apache.xerces.util.SymbolHash$Entry[] $r1;
        org.apache.xerces.util.SymbolHash r0;

        r0 := @this: org.apache.xerces.util.SymbolHash;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.SymbolHash: int fTableSize> = 101;

        r0.<org.apache.xerces.util.SymbolHash: int fNum> = 0;

        $i0 = r0.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        $r1 = newarray (org.apache.xerces.util.SymbolHash$Entry)[$i0];

        r0.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets> = $r1;

        return;
    }

    public void <init>(int)
    {
        org.apache.xerces.util.SymbolHash$Entry[] $r1;
        int i0, $i1;
        org.apache.xerces.util.SymbolHash r0;

        r0 := @this: org.apache.xerces.util.SymbolHash;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.SymbolHash: int fTableSize> = 101;

        r0.<org.apache.xerces.util.SymbolHash: int fNum> = 0;

        r0.<org.apache.xerces.util.SymbolHash: int fTableSize> = i0;

        $i1 = r0.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        $r1 = newarray (org.apache.xerces.util.SymbolHash$Entry)[$i1];

        r0.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets> = $r1;

        return;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        org.apache.xerces.util.SymbolHash$Entry[] $r5, $r7;
        org.apache.xerces.util.SymbolHash$Entry $r2, $r3, $r6;
        int $i0, $i1, $i2, i3, $i4, $i5;
        org.apache.xerces.util.SymbolHash r1;
        java.lang.Object r0, r4;

        r1 := @this: org.apache.xerces.util.SymbolHash;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i2 = $i0 & 2147483647;

        $i1 = r1.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        i3 = $i2 % $i1;

        $r2 = virtualinvoke r1.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry search(java.lang.Object,int)>(r0, i3);

        if $r2 == null goto label1;

        $r2.<org.apache.xerces.util.SymbolHash$Entry: java.lang.Object value> = r4;

        goto label2;

     label1:
        $r3 = new org.apache.xerces.util.SymbolHash$Entry;

        $r5 = r1.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        $r6 = $r5[i3];

        specialinvoke $r3.<org.apache.xerces.util.SymbolHash$Entry: void <init>(java.lang.Object,java.lang.Object,org.apache.xerces.util.SymbolHash$Entry)>(r0, r4, $r6);

        $r7 = r1.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        $r7[i3] = $r3;

        $i4 = r1.<org.apache.xerces.util.SymbolHash: int fNum>;

        $i5 = $i4 + 1;

        r1.<org.apache.xerces.util.SymbolHash: int fNum> = $i5;

     label2:
        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.xerces.util.SymbolHash$Entry $r2;
        int $i0, $i1, $i2, i3;
        org.apache.xerces.util.SymbolHash r1;
        java.lang.Object r0, $r3;

        r1 := @this: org.apache.xerces.util.SymbolHash;

        r0 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i2 = $i0 & 2147483647;

        $i1 = r1.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        i3 = $i2 % $i1;

        $r2 = virtualinvoke r1.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry search(java.lang.Object,int)>(r0, i3);

        if $r2 == null goto label1;

        $r3 = $r2.<org.apache.xerces.util.SymbolHash$Entry: java.lang.Object value>;

        return $r3;

     label1:
        return null;
    }

    public int getLength()
    {
        int $i0;
        org.apache.xerces.util.SymbolHash r0;

        r0 := @this: org.apache.xerces.util.SymbolHash;

        $i0 = r0.<org.apache.xerces.util.SymbolHash: int fNum>;

        return $i0;
    }

    public int getValues(java.lang.Object[], int)
    {
        org.apache.xerces.util.SymbolHash$Entry[] $r1;
        java.lang.Object[] r2;
        org.apache.xerces.util.SymbolHash$Entry r4;
        int $i0, $i1, $i2, i3, $i4, i5, i6;
        org.apache.xerces.util.SymbolHash r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.xerces.util.SymbolHash;

        r2 := @parameter0: java.lang.Object[];

        i3 := @parameter1: int;

        i5 = 0;

        i6 = 0;

        goto label4;

     label1:
        $r1 = r0.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        r4 = $r1[i5];

        goto label3;

     label2:
        $i4 = i3 + i6;

        $r3 = r4.<org.apache.xerces.util.SymbolHash$Entry: java.lang.Object value>;

        r2[$i4] = $r3;

        i6 = i6 + 1;

        r4 = r4.<org.apache.xerces.util.SymbolHash$Entry: org.apache.xerces.util.SymbolHash$Entry next>;

     label3:
        if r4 != null goto label2;

        i5 = i5 + 1;

     label4:
        $i0 = r0.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        if i5 >= $i0 goto label5;

        $i2 = r0.<org.apache.xerces.util.SymbolHash: int fNum>;

        if i6 < $i2 goto label1;

     label5:
        $i1 = r0.<org.apache.xerces.util.SymbolHash: int fNum>;

        return $i1;
    }

    public java.lang.Object[] getEntries()
    {
        org.apache.xerces.util.SymbolHash$Entry[] $r2;
        java.lang.Object[] r1;
        org.apache.xerces.util.SymbolHash$Entry r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        org.apache.xerces.util.SymbolHash r0;
        java.lang.Object $r3, $r4;

        r0 := @this: org.apache.xerces.util.SymbolHash;

        $i0 = r0.<org.apache.xerces.util.SymbolHash: int fNum>;

        $i1 = $i0 << 1;

        r1 = newarray (java.lang.Object)[$i1];

        i5 = 0;

        i6 = 0;

        goto label4;

     label1:
        $r2 = r0.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        r5 = $r2[i5];

        goto label3;

     label2:
        $r3 = r5.<org.apache.xerces.util.SymbolHash$Entry: java.lang.Object key>;

        r1[i6] = $r3;

        i7 = i6 + 1;

        $r4 = r5.<org.apache.xerces.util.SymbolHash$Entry: java.lang.Object value>;

        r1[i7] = $r4;

        i6 = i7 + 1;

        r5 = r5.<org.apache.xerces.util.SymbolHash$Entry: org.apache.xerces.util.SymbolHash$Entry next>;

     label3:
        if r5 != null goto label2;

        i5 = i5 + 1;

     label4:
        $i2 = r0.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        if i5 >= $i2 goto label5;

        $i3 = r0.<org.apache.xerces.util.SymbolHash: int fNum>;

        $i4 = $i3 << 1;

        if i6 < $i4 goto label1;

     label5:
        return r1;
    }

    public org.apache.xerces.util.SymbolHash makeClone()
    {
        org.apache.xerces.util.SymbolHash$Entry[] $r2, $r4, $r6;
        org.apache.xerces.util.SymbolHash$Entry $r3, $r5, $r7;
        int $i0, $i1, i2, $i3;
        org.apache.xerces.util.SymbolHash $r0, r1;

        r1 := @this: org.apache.xerces.util.SymbolHash;

        $r0 = new org.apache.xerces.util.SymbolHash;

        $i0 = r1.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        specialinvoke $r0.<org.apache.xerces.util.SymbolHash: void <init>(int)>($i0);

        $i1 = r1.<org.apache.xerces.util.SymbolHash: int fNum>;

        $r0.<org.apache.xerces.util.SymbolHash: int fNum> = $i1;

        i2 = 0;

        goto label3;

     label1:
        $r2 = r1.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        $r3 = $r2[i2];

        if $r3 == null goto label2;

        $r6 = $r0.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        $r4 = r1.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        $r5 = $r4[i2];

        $r7 = virtualinvoke $r5.<org.apache.xerces.util.SymbolHash$Entry: org.apache.xerces.util.SymbolHash$Entry makeClone()>();

        $r6[i2] = $r7;

     label2:
        i2 = i2 + 1;

     label3:
        $i3 = r1.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        if i2 < $i3 goto label1;

        return $r0;
    }

    public void clear()
    {
        org.apache.xerces.util.SymbolHash$Entry[] $r1;
        int $i0, i1;
        org.apache.xerces.util.SymbolHash r0;

        r0 := @this: org.apache.xerces.util.SymbolHash;

        i1 = 0;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        $r1[i1] = null;

        i1 = i1 + 1;

     label2:
        $i0 = r0.<org.apache.xerces.util.SymbolHash: int fTableSize>;

        if i1 < $i0 goto label1;

        r0.<org.apache.xerces.util.SymbolHash: int fNum> = 0;

        return;
    }

    protected org.apache.xerces.util.SymbolHash$Entry search(java.lang.Object, int)
    {
        org.apache.xerces.util.SymbolHash$Entry[] $r1;
        org.apache.xerces.util.SymbolHash$Entry r4;
        int i0;
        org.apache.xerces.util.SymbolHash r0;
        java.lang.Object r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xerces.util.SymbolHash;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xerces.util.SymbolHash: org.apache.xerces.util.SymbolHash$Entry[] fBuckets>;

        r4 = $r1[i0];

        goto label3;

     label1:
        $r3 = r4.<org.apache.xerces.util.SymbolHash$Entry: java.lang.Object key>;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        r4 = r4.<org.apache.xerces.util.SymbolHash$Entry: org.apache.xerces.util.SymbolHash$Entry next>;

     label3:
        if r4 != null goto label1;

        return null;
    }
}
