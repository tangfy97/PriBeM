public class org.apache.commons.compress.compressors.FileNameUtil extends java.lang.Object
{
    private final java.util.Map compressSuffix;
    private final java.util.Map uncompressSuffix;
    private final int longestCompressedSuffix;
    private final int shortestCompressedSuffix;
    private final int longestUncompressedSuffix;
    private final int shortestUncompressedSuffix;
    private final java.lang.String defaultExtension;

    public void <init>(java.util.Map, java.lang.String)
    {
        java.util.HashMap $r1;
        java.util.Map r2, $r3, $r12, $r13;
        int $i0, $i1, i2, i3, i4, i5;
        java.lang.String r6, $r10, $r15;
        boolean $z0, $z1;
        java.util.Map$Entry r8;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r7, $r9, $r11, $r14;
        org.apache.commons.compress.compressors.FileNameUtil r0;

        r0 := @this: org.apache.commons.compress.compressors.FileNameUtil;

        r2 := @parameter0: java.util.Map;

        r6 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.compress.compressors.FileNameUtil: java.util.Map compressSuffix> = $r1;

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r2);

        r0.<org.apache.commons.compress.compressors.FileNameUtil: java.util.Map uncompressSuffix> = $r3;

        i2 = -2147483648;

        i3 = 2147483647;

        i4 = -2147483648;

        i5 = 2147483647;

        $r4 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 <= i2 goto label2;

        i2 = $i0;

     label2:
        if $i0 >= i3 goto label3;

        i3 = $i0;

     label3:
        $r11 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.String) $r11;

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i1 <= 0 goto label6;

        $r12 = r0.<org.apache.commons.compress.compressors.FileNameUtil: java.util.Map compressSuffix>;

        $z1 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>($r15);

        if $z1 != 0 goto label4;

        $r13 = r0.<org.apache.commons.compress.compressors.FileNameUtil: java.util.Map compressSuffix>;

        $r14 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r14);

     label4:
        if $i1 <= i4 goto label5;

        i4 = $i1;

     label5:
        if $i1 >= i5 goto label6;

        i5 = $i1;

     label6:
        goto label1;

     label7:
        r0.<org.apache.commons.compress.compressors.FileNameUtil: int longestCompressedSuffix> = i2;

        r0.<org.apache.commons.compress.compressors.FileNameUtil: int longestUncompressedSuffix> = i4;

        r0.<org.apache.commons.compress.compressors.FileNameUtil: int shortestCompressedSuffix> = i3;

        r0.<org.apache.commons.compress.compressors.FileNameUtil: int shortestUncompressedSuffix> = i5;

        r0.<org.apache.commons.compress.compressors.FileNameUtil: java.lang.String defaultExtension> = r6;

        return;
    }

    public boolean isCompressedFilename(java.lang.String)
    {
        java.util.Locale $r1;
        java.util.Map $r4;
        int $i0, $i1, $i2, i3;
        java.lang.String r0, $r2, $r5;
        org.apache.commons.compress.compressors.FileNameUtil r3;
        boolean $z0;

        r3 := @this: org.apache.commons.compress.compressors.FileNameUtil;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        i3 = r3.<org.apache.commons.compress.compressors.FileNameUtil: int shortestCompressedSuffix>;

     label1:
        $i1 = r3.<org.apache.commons.compress.compressors.FileNameUtil: int longestCompressedSuffix>;

        if i3 > $i1 goto label3;

        if i3 >= $i0 goto label3;

        $r4 = r3.<org.apache.commons.compress.compressors.FileNameUtil: java.util.Map uncompressSuffix>;

        $i2 = $i0 - i3;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String getUncompressedFilename(java.lang.String)
    {
        java.util.Locale $r1;
        java.util.Map $r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, $r2, $r5, r7, $r9, $r12;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r10, $r11;
        org.apache.commons.compress.compressors.FileNameUtil r3;

        r3 := @this: org.apache.commons.compress.compressors.FileNameUtil;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        i4 = r3.<org.apache.commons.compress.compressors.FileNameUtil: int shortestCompressedSuffix>;

     label1:
        $i1 = r3.<org.apache.commons.compress.compressors.FileNameUtil: int longestCompressedSuffix>;

        if i4 > $i1 goto label3;

        if i4 >= $i0 goto label3;

        $r4 = r3.<org.apache.commons.compress.compressors.FileNameUtil: java.util.Map uncompressSuffix>;

        $i2 = $i0 - i4;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.lang.String) $r6;

        if r7 == null goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i3 = $i0 - i4;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return r0;
    }

    public java.lang.String getCompressedFilename(java.lang.String)
    {
        java.util.Locale $r1;
        java.util.Map $r9;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, $r2, $r6, $r8, $r10, r12, $r14, $r17;
        java.lang.StringBuilder $r4, $r5, $r7, $r13, $r15, $r16;
        java.lang.Object $r11;
        org.apache.commons.compress.compressors.FileNameUtil r3;

        r3 := @this: org.apache.commons.compress.compressors.FileNameUtil;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        i4 = r3.<org.apache.commons.compress.compressors.FileNameUtil: int shortestUncompressedSuffix>;

     label1:
        $i1 = r3.<org.apache.commons.compress.compressors.FileNameUtil: int longestUncompressedSuffix>;

        if i4 > $i1 goto label3;

        if i4 >= $i0 goto label3;

        $r9 = r3.<org.apache.commons.compress.compressors.FileNameUtil: java.util.Map compressSuffix>;

        $i2 = $i0 - i4;

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r12 = (java.lang.String) $r11;

        if r12 == null goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $i3 = $i0 - i4;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = r3.<org.apache.commons.compress.compressors.FileNameUtil: java.lang.String defaultExtension>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
