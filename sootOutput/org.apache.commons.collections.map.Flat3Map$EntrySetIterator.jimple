class org.apache.commons.collections.map.Flat3Map$EntrySetIterator extends java.lang.Object implements java.util.Iterator, java.util.Map$Entry
{
    private final org.apache.commons.collections.map.Flat3Map parent;
    private int nextIndex;
    private boolean canRemove;

    void <init>(org.apache.commons.collections.map.Flat3Map)
    {
        org.apache.commons.collections.map.Flat3Map r1;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        r1 := @parameter0: org.apache.commons.collections.map.Flat3Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex> = 0;

        r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove> = 0;

        r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent> = r1;

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        org.apache.commons.collections.map.Flat3Map $r1;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        $i0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex>;

        $r1 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $i1 = staticinvoke <org.apache.commons.collections.map.Flat3Map: int access$000(org.apache.commons.collections.map.Flat3Map)>($r1);

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        int $i0, $i1;
        java.util.NoSuchElementException $r1;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No next() entry in the iteration");

        throw $r1;

     label1:
        r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove> = 1;

        $i0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex> = $i1;

        return r0;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        org.apache.commons.collections.map.Flat3Map $r1;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        $z0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() can only be called once after next()");

        throw $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getKey()>();

        virtualinvoke $r1.<org.apache.commons.collections.map.Flat3Map: java.lang.Object remove(java.lang.Object)>($r2);

        $i0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex> = $i1;

        r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove> = 0;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.IllegalStateException $r7, $r8;
        org.apache.commons.collections.map.Flat3Map $r1, $r3, $r5;
        int $i0;
        java.lang.Object $r2, $r4, $r6;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        $z0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKey() can only be called after next() and before remove()");

        throw $r8;

     label1:
        $i0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r1 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $r2 = staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$100(org.apache.commons.collections.map.Flat3Map)>($r1);

        return $r2;

     label3:
        $r3 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $r4 = staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$200(org.apache.commons.collections.map.Flat3Map)>($r3);

        return $r4;

     label4:
        $r5 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $r6 = staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$300(org.apache.commons.collections.map.Flat3Map)>($r5);

        return $r6;

     label5:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid map index");

        throw $r7;
    }

    public java.lang.Object getValue()
    {
        java.lang.IllegalStateException $r7, $r8;
        org.apache.commons.collections.map.Flat3Map $r1, $r3, $r5;
        int $i0;
        java.lang.Object $r2, $r4, $r6;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        $z0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getValue() can only be called after next() and before remove()");

        throw $r8;

     label1:
        $i0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r1 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $r2 = staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$400(org.apache.commons.collections.map.Flat3Map)>($r1);

        return $r2;

     label3:
        $r3 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $r4 = staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$500(org.apache.commons.collections.map.Flat3Map)>($r3);

        return $r4;

     label4:
        $r5 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        $r6 = staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$600(org.apache.commons.collections.map.Flat3Map)>($r5);

        return $r6;

     label5:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid map index");

        throw $r7;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.IllegalStateException $r5;
        org.apache.commons.collections.map.Flat3Map $r3, $r4, $r6;
        int $i0;
        java.lang.Object $r1, r2;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        r2 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setValue() can only be called after next() and before remove()");

        throw $r5;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getValue()>();

        $i0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: int nextIndex>;

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $r3 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$402(org.apache.commons.collections.map.Flat3Map,java.lang.Object)>($r3, r2);

     label3:
        $r4 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$502(org.apache.commons.collections.map.Flat3Map,java.lang.Object)>($r4, r2);

     label4:
        $r6 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: org.apache.commons.collections.map.Flat3Map parent>;

        staticinvoke <org.apache.commons.collections.map.Flat3Map: java.lang.Object access$602(org.apache.commons.collections.map.Flat3Map,java.lang.Object)>($r6, r2);

     label5:
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map$Entry r2;
        java.lang.Object r1, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r1 instanceof java.util.Map$Entry;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getKey()>();

        $r4 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getValue()>();

        if $r3 != null goto label3;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r8 != null goto label7;

        goto label4;

     label3:
        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label7;

     label4:
        if $r4 != null goto label5;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r7 != null goto label7;

        goto label6;

     label5:
        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z3 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label7;

     label6:
        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        return $z4;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r2;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        $z0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getKey()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getValue()>();

        if $r1 != null goto label2;

        $i0 = 0;

        goto label3;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label3:
        if $r2 != null goto label4;

        $i1 = 0;

        goto label5;

     label4:
        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label5:
        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r1, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;
        org.apache.commons.collections.map.Flat3Map$EntrySetIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.Flat3Map$EntrySetIterator;

        $z0 = r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: boolean canRemove>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getKey()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r5 = virtualinvoke r0.<org.apache.commons.collections.map.Flat3Map$EntrySetIterator: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;

     label1:
        return "";
    }
}
