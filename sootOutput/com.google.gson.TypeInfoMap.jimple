final class com.google.gson.TypeInfoMap extends java.lang.Object
{
    private final java.lang.reflect.Type keyType;
    private final java.lang.reflect.Type valueType;

    public void <init>(java.lang.reflect.Type)
    {
        com.google.gson.TypeInfoMap r0;
        boolean $z0, $z1, $z2, $z3;
        com.google.gson.TypeInfo $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.reflect.ParameterizedType r6;
        java.lang.reflect.Type r1, $r8, $r10;
        java.lang.reflect.Type[] $r7, $r9;
        java.lang.Class $r4, $r5, $r11, $r12;

        r0 := @this: com.google.gson.TypeInfoMap;

        r1 := @parameter0: java.lang.reflect.Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r12 = class "Ljava/util/Properties;";

        $r11 = (java.lang.Class) r1;

        $z3 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

        if $z3 == 0 goto label1;

        r0.<com.google.gson.TypeInfoMap: java.lang.reflect.Type keyType> = class "Ljava/lang/String;";

        r0.<com.google.gson.TypeInfoMap: java.lang.reflect.Type valueType> = class "Ljava/lang/String;";

        goto label3;

     label1:
        $z1 = r1 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        $r3 = new com.google.gson.TypeInfo;

        specialinvoke $r3.<com.google.gson.TypeInfo: void <init>(java.lang.reflect.Type)>(r1);

        $r4 = class "Ljava/util/Map;";

        $r5 = virtualinvoke $r3.<com.google.gson.TypeInfo: java.lang.Class getRawClass()>();

        $z2 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        staticinvoke <com.google.gson.Preconditions: void checkArgument(boolean)>($z2);

        r6 = (java.lang.reflect.ParameterizedType) r1;

        $r7 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r8 = $r7[0];

        r0.<com.google.gson.TypeInfoMap: java.lang.reflect.Type keyType> = $r8;

        $r9 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r10 = $r9[1];

        r0.<com.google.gson.TypeInfoMap: java.lang.reflect.Type valueType> = $r10;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Map objects need to be parameterized unless you use a custom serializer. Use the com.google.gson.reflect.TypeToken to extract the ParameterizedType.");

        throw $r2;

     label3:
        return;
    }

    public java.lang.reflect.Type getKeyType()
    {
        com.google.gson.TypeInfoMap r0;
        java.lang.reflect.Type $r1;

        r0 := @this: com.google.gson.TypeInfoMap;

        $r1 = r0.<com.google.gson.TypeInfoMap: java.lang.reflect.Type keyType>;

        return $r1;
    }

    public java.lang.reflect.Type getValueType()
    {
        com.google.gson.TypeInfoMap r0;
        java.lang.reflect.Type $r1;

        r0 := @this: com.google.gson.TypeInfoMap;

        $r1 = r0.<com.google.gson.TypeInfoMap: java.lang.reflect.Type valueType>;

        return $r1;
    }
}
