public class thredds.inventory.DatasetCollectionFromCatalog extends thredds.inventory.DatasetCollectionManager implements thredds.catalog.crawl.CatalogCrawler$Listener
{
    private static final org.slf4j.Logger log;
    private final java.lang.String catalogUrl;
    private boolean debug;

    public void <init>(java.lang.String)
    {
        thredds.inventory.DatasetCollectionFromCatalog r0;
        thredds.inventory.DateExtractorFromName $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, r4;
        boolean $z0;

        r0 := @this: thredds.inventory.DatasetCollectionFromCatalog;

        r4 := @parameter0: java.lang.String;

        specialinvoke r0.<thredds.inventory.DatasetCollectionManager: void <init>()>();

        r0.<thredds.inventory.DatasetCollectionFromCatalog: boolean debug> = 0;

        r0.<thredds.inventory.DatasetCollectionFromCatalog: java.lang.String collectionName> = r4;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("catalog:");

        if $z0 == 0 goto label1;

        $r3 = "catalog:";

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i2);

     label1:
        $i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(63);

        if $i0 <= 0 goto label2;

        $r1 = new thredds.inventory.DateExtractorFromName;

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i1);

        specialinvoke $r1.<thredds.inventory.DateExtractorFromName: void <init>(java.lang.String,boolean)>($r2, 1);

        r0.<thredds.inventory.DatasetCollectionFromCatalog: thredds.inventory.DateExtractor dateExtractor> = $r1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        r0.<thredds.inventory.DatasetCollectionFromCatalog: java.lang.String catalogUrl> = r4;

        return;
    }

    protected boolean hasScans()
    {
        thredds.inventory.DatasetCollectionFromCatalog r0;

        r0 := @this: thredds.inventory.DatasetCollectionFromCatalog;

        return 1;
    }

    protected void scan(java.util.Map, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r36;
        java.util.Map r6;
        thredds.catalog.InvCatalogFactory $r0;
        boolean $z0, $z1, $z2;
        thredds.inventory.DatasetCollectionFromCatalog r1;
        thredds.catalog.InvCatalogImpl $r3;
        java.lang.StringBuilder $r4, $r7, $r9, $r11, $r12, $r13, $r14, $r17, $r19, $r21, $r22, $r23, $r26, $r28, $r30, $r31, $r32, $r33;
        java.lang.Throwable $r25;
        java.lang.Object[] $r16, $r35;
        long $l0, $l1, l2, $l3, l4;
        java.lang.String $r2, $r10, $r15, $r20, $r24, $r29, $r34;
        java.io.PrintStream $r8, $r27;
        org.slf4j.Logger $r18;
        thredds.catalog.crawl.CatalogCrawler $r5;

        r1 := @this: thredds.inventory.DatasetCollectionFromCatalog;

        r6 := @parameter0: java.util.Map;

        r36 := @parameter1: ucar.nc2.util.CancelTask;

        $r0 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(1);

        $r2 = r1.<thredds.inventory.DatasetCollectionFromCatalog: java.lang.String catalogUrl>;

        $r3 = virtualinvoke $r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.lang.String)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r3.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder,boolean)>($r4, 0);

        if $z0 != 0 goto label1;

        $r18 = <thredds.inventory.DatasetCollectionFromCatalog: org.slf4j.Logger log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Catalog invalid= ");

        $r20 = r1.<thredds.inventory.DatasetCollectionFromCatalog: java.lang.String catalogUrl>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" validation output= ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void warn(java.lang.String)>($r24);

        return;

     label1:
        $r5 = new thredds.catalog.crawl.CatalogCrawler;

        specialinvoke $r5.<thredds.catalog.crawl.CatalogCrawler: void <init>(int,boolean,thredds.catalog.crawl.CatalogCrawler$Listener)>(1, 0, r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        virtualinvoke $r5.<thredds.catalog.crawl.CatalogCrawler: int crawl(thredds.catalog.InvCatalogImpl,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object)>($r3, null, null, r6);

     label3:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l1 - $l0;

        $z1 = r1.<thredds.inventory.DatasetCollectionFromCatalog: boolean debug>;

        if $z1 == 0 goto label4;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***Done ");

        $r10 = r1.<thredds.inventory.DatasetCollectionFromCatalog: java.lang.String catalogUrl>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>($r15, $r16);

     label4:
        goto label8;

     label5:
        $r25 := @caughtexception;

     label6:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l4 = $l3 - $l0;

        $z2 = r1.<thredds.inventory.DatasetCollectionFromCatalog: boolean debug>;

        if $z2 == 0 goto label7;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***Done ");

        $r29 = r1.<thredds.inventory.DatasetCollectionFromCatalog: java.lang.String catalogUrl>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took = ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = newarray (java.lang.Object)[0];

        virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>($r34, $r35);

     label7:
        throw $r25;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void getDataset(thredds.catalog.InvDataset, java.lang.Object)
    {
        java.lang.Object[] $r10;
        thredds.catalog.InvAccess $r3;
        ucar.nc2.thredds.ThreddsDataFactory $r1;
        thredds.inventory.DatasetCollectionFromCatalog$MFileRemote $r4;
        java.util.Map r8;
        java.lang.String $r6, $r9, $r12;
        thredds.catalog.InvDataset r0;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r11;
        thredds.inventory.DatasetCollectionFromCatalog r5;
        java.util.List $r2;
        java.lang.Object r7;

        r5 := @this: thredds.inventory.DatasetCollectionFromCatalog;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r7 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<thredds.catalog.InvDataset: boolean hasAccess()>();

        if $z0 == 0 goto label2;

        $r1 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r1.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r2 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r3 = virtualinvoke $r1.<ucar.nc2.thredds.ThreddsDataFactory: thredds.catalog.InvAccess chooseDatasetAccess(java.util.List)>($r2);

        $r4 = new thredds.inventory.DatasetCollectionFromCatalog$MFileRemote;

        specialinvoke $r4.<thredds.inventory.DatasetCollectionFromCatalog$MFileRemote: void <init>(thredds.inventory.DatasetCollectionFromCatalog,thredds.catalog.InvAccess)>(r5, $r3);

        $r6 = virtualinvoke $r4.<thredds.inventory.DatasetCollectionFromCatalog$MFileRemote: java.lang.String getPath()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 == 0 goto label1;

        return;

     label1:
        r8 = (java.util.Map) r7;

        $r9 = virtualinvoke $r4.<thredds.inventory.DatasetCollectionFromCatalog$MFileRemote: java.lang.String getPath()>();

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r4);

        $z2 = r5.<thredds.inventory.DatasetCollectionFromCatalog: boolean debug>;

        if $z2 == 0 goto label2;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke $r4.<thredds.inventory.DatasetCollectionFromCatalog$MFileRemote: java.lang.String getPath()>();

        $r10[0] = $r12;

        virtualinvoke $r11.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("add %s %n", $r10);

     label2:
        return;
    }

    public boolean getCatalogRef(thredds.catalog.InvCatalogRef, java.lang.Object)
    {
        thredds.catalog.InvCatalogRef r1;
        java.lang.Object r2;
        thredds.inventory.DatasetCollectionFromCatalog r0;

        r0 := @this: thredds.inventory.DatasetCollectionFromCatalog;

        r1 := @parameter0: thredds.catalog.InvCatalogRef;

        r2 := @parameter1: java.lang.Object;

        return 1;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r7;
        java.lang.Object[] $r6;
        java.lang.String[] r8;
        thredds.inventory.DatasetCollectionFromCatalog $r0;
        java.util.Formatter $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r8 := @parameter0: java.lang.String[];

        $r0 = new thredds.inventory.DatasetCollectionFromCatalog;

        specialinvoke $r0.<thredds.inventory.DatasetCollectionFromCatalog: void <init>(java.lang.String)>("http://motherlode.ucar.edu:8080/thredds/catalog/fmrc/NCEP/NDFD/CONUS_5km/files/catalog.xml");

        $r0.<thredds.inventory.DatasetCollectionFromCatalog: boolean debug> = 1;

        virtualinvoke $r0.<thredds.inventory.DatasetCollectionFromCatalog: void scan(ucar.nc2.util.CancelTask)>(null);

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("catalog:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://motherlode.ucar.edu:8080/thredds/catalog/fmrc/NCEP/NDFD/CONUS_5km/files/catalog.xml");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.Fmrc open(java.lang.String,java.util.Formatter)>($r5, $r1);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r1;

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("errlog = %s %n", $r6);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/inventory/DatasetCollectionFromCatalog;");

        <thredds.inventory.DatasetCollectionFromCatalog: org.slf4j.Logger log> = $r0;

        return;
    }
}
