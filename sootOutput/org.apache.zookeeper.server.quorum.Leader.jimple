public class org.apache.zookeeper.server.quorum.Leader extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;
    private static final boolean nodelay;
    final org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk;
    final org.apache.zookeeper.server.quorum.QuorumPeer self;
    org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor cnxAcceptor;
    private final java.util.HashSet learners;
    private final java.util.HashSet forwardingFollowers;
    private final java.util.HashSet observingLearners;
    private final java.util.HashMap pendingSyncs;
    final java.util.concurrent.atomic.AtomicLong followerCounter;
    java.net.ServerSocket ss;
    static final int DIFF;
    static final int TRUNC;
    static final int SNAP;
    static final int OBSERVERINFO;
    static final int NEWLEADER;
    static final int FOLLOWERINFO;
    static final int UPTODATE;
    public static final int LEADERINFO;
    public static final int ACKEPOCH;
    static final int REQUEST;
    public static final int PROPOSAL;
    static final int ACK;
    static final int COMMIT;
    static final int PING;
    static final int REVALIDATE;
    static final int SYNC;
    static final int INFORM;
    java.util.concurrent.ConcurrentMap outstandingProposals;
    java.util.concurrent.ConcurrentLinkedQueue toBeApplied;
    org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal;
    org.apache.zookeeper.server.quorum.StateSummary leaderStateSummary;
    long epoch;
    boolean waitingForNewEpoch;
    volatile boolean readyToStart;
    boolean isShutdown;
    long lastCommitted;
    long lastProposed;
    private java.util.HashSet connectingFollowers;
    private java.util.HashSet electingFollowers;
    private boolean electionFinished;

    public java.util.List getLearners()
    {
        java.util.HashSet $r1, $r3;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        entermonitor $r1;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getForwardingFollowers()
    {
        java.util.HashSet $r1, $r3;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        entermonitor $r1;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void addForwardingFollower(org.apache.zookeeper.server.quorum.LearnerHandler)
    {
        java.util.HashSet $r1, $r3;
        org.apache.zookeeper.server.quorum.LearnerHandler r2;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r2 := @parameter0: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getObservingLearners()
    {
        java.util.HashSet $r1, $r3;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet observingLearners>;

        entermonitor $r1;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet observingLearners>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void addObserverLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler)
    {
        java.util.HashSet $r1, $r3;
        org.apache.zookeeper.server.quorum.LearnerHandler r2;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r2 := @parameter0: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet observingLearners>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet observingLearners>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public synchronized int getNumPendingSyncs()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashMap pendingSyncs>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    void addLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler)
    {
        java.util.HashSet $r1, $r3;
        org.apache.zookeeper.server.quorum.LearnerHandler r2;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r2 := @parameter0: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void removeLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler)
    {
        java.lang.Throwable $r8, $r9, $r10;
        java.util.HashSet $r1, $r3, $r4, $r5, $r6, $r7;
        org.apache.zookeeper.server.quorum.LearnerHandler r2;
        org.apache.zookeeper.server.quorum.Leader r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r2 := @parameter0: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        entermonitor $r1;

     label01:
        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>(r2);

        exitmonitor $r1;

     label02:
        goto label05;

     label03:
        $r10 := @caughtexception;

        exitmonitor $r1;

     label04:
        throw $r10;

     label05:
        $r4 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        entermonitor $r4;

     label06:
        $r5 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>(r2);

        exitmonitor $r4;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label09:
        throw $r9;

     label10:
        $r6 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet observingLearners>;

        entermonitor $r6;

     label11:
        $r7 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet observingLearners>;

        virtualinvoke $r7.<java.util.HashSet: boolean remove(java.lang.Object)>(r2);

        exitmonitor $r6;

     label12:
        goto label15;

     label13:
        $r8 := @caughtexception;

        exitmonitor $r6;

     label14:
        throw $r8;

     label15:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    boolean isLearnerSynced(org.apache.zookeeper.server.quorum.LearnerHandler)
    {
        java.util.HashSet $r1, $r3;
        org.apache.zookeeper.server.quorum.LearnerHandler r2;
        java.lang.Throwable $r4;
        org.apache.zookeeper.server.quorum.Leader r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r2 := @parameter0: org.apache.zookeeper.server.quorum.LearnerHandler;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void <init>(org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.quorum.LeaderZooKeeperServer) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r11;
        java.util.HashMap $r4;
        java.net.BindException $r18;
        java.util.HashSet $r1, $r2, $r3, $r9, $r10;
        java.net.ServerSocket $r12, $r13, $r15;
        int $i0, $i1;
        java.lang.String $r24;
        org.slf4j.Logger $r20;
        java.util.concurrent.ConcurrentHashMap $r6;
        java.net.InetSocketAddress $r14, $r16, $r22;
        java.util.concurrent.atomic.AtomicLong $r5;
        org.apache.zookeeper.server.quorum.LeaderZooKeeperServer r17;
        org.apache.zookeeper.server.quorum.Leader r0;
        org.apache.zookeeper.server.quorum.Leader$Proposal $r8;
        java.lang.StringBuilder $r19, $r21, $r23;
        java.util.concurrent.ConcurrentLinkedQueue $r7;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r11 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer;

        r17 := @parameter1: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet observingLearners> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashMap pendingSyncs> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(-1L);

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.atomic.AtomicLong followerCounter> = $r5;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals> = $r6;

        $r7 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r7.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentLinkedQueue toBeApplied> = $r7;

        $r8 = new org.apache.zookeeper.server.quorum.Leader$Proposal;

        specialinvoke $r8.<org.apache.zookeeper.server.quorum.Leader$Proposal: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal> = $r8;

        r0.<org.apache.zookeeper.server.quorum.Leader: long epoch> = -1L;

        r0.<org.apache.zookeeper.server.quorum.Leader: boolean waitingForNewEpoch> = 1;

        r0.<org.apache.zookeeper.server.quorum.Leader: boolean readyToStart> = 0;

        r0.<org.apache.zookeeper.server.quorum.Leader: long lastCommitted> = -1L;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet connectingFollowers> = $r9;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet electingFollowers> = $r10;

        r0.<org.apache.zookeeper.server.quorum.Leader: boolean electionFinished> = 0;

        r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self> = r11;

     label1:
        $r12 = new java.net.ServerSocket;

        specialinvoke $r12.<java.net.ServerSocket: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: java.net.ServerSocket ss> = $r12;

        $r13 = r0.<org.apache.zookeeper.server.quorum.Leader: java.net.ServerSocket ss>;

        virtualinvoke $r13.<java.net.ServerSocket: void setReuseAddress(boolean)>(1);

        $r15 = r0.<org.apache.zookeeper.server.quorum.Leader: java.net.ServerSocket ss>;

        $r14 = new java.net.InetSocketAddress;

        $r16 = virtualinvoke r11.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.InetSocketAddress getQuorumAddress()>();

        $i0 = virtualinvoke $r16.<java.net.InetSocketAddress: int getPort()>();

        specialinvoke $r14.<java.net.InetSocketAddress: void <init>(int)>($i0);

        virtualinvoke $r15.<java.net.ServerSocket: void bind(java.net.SocketAddress)>($r14);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        $r20 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t bind to port ");

        $r22 = virtualinvoke r11.<org.apache.zookeeper.server.quorum.QuorumPeer: java.net.InetSocketAddress getQuorumAddress()>();

        $i1 = virtualinvoke $r22.<java.net.InetSocketAddress: int getPort()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, $r18);

        throw $r18;

     label4:
        r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk> = r17;

        return;

        catch java.net.BindException from label1 to label2 with label3;
    }

    void lead() throws java.io.IOException, java.lang.InterruptedException
    {
        byte $b14;
        java.lang.Long $r35, $r40, $r48, $r66, $r93, r114;
        java.util.Map $r58;
        org.apache.zookeeper.server.quorum.StateSummary $r18, $r42;
        org.apache.zookeeper.server.quorum.LearnerHandler r63, r115;
        java.lang.StringBuilder $r2, $r4, $r7, $r53, $r54, $r55, $r56, $r59, $r77, $r81, $r82, $r83, $r95, $r96, $r97, $r99, $r101, $r105;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier $r52, $r89, $r111;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l15, $l16, $l17, $l18, $l22, $l25, $l26, $l27, $l28, $l32, $l35, $l36, $l39;
        java.util.concurrent.ConcurrentMap $r34;
        java.util.HashSet $r39, $r46, $r79, $r85, $r113;
        int $i19, $i20, $i21, $i23, $i24, $i29, $i30, $i31, $i33, $i34, $i37, $i38;
        org.slf4j.Logger $r3, $r91, $r100;
        org.apache.zookeeper.server.quorum.LeaderZooKeeperServer $r12, $r13, $r17, $r20, $r25, $r26, $r28, $r61, $r69, $r71, $r72, $r90, $r108;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.lang.Object $r62, $r92, $r94;
        org.apache.zookeeper.server.quorum.QuorumPeer $r1, $r5, $r6, $r9, $r10, $r14, $r16, $r19, $r23, $r24, $r38, $r41, $r43, $r47, $r51, $r57, $r67, $r68, $r73, $r74, $r75, $r76, $r88, $r110, $r116;
        org.apache.zookeeper.server.quorum.LocalPeerBean $r15;
        org.apache.zookeeper.server.quorum.QuorumPacket $r27, $r31, $r33, $r103;
        org.apache.zookeeper.server.quorum.LeaderBean $r11;
        org.apache.zookeeper.server.quorum.Leader$Proposal $r29, $r30, $r32, $r36, $r37, $r78, $r102, $r112;
        java.lang.Throwable $r107, $r109;
        org.apache.zookeeper.server.ServerCnxnFactory $r70;
        java.lang.String $r8, $r44, $r45, $r60, $r84, $r98, $r104, $r106;
        org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor $r21, $r22;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r64, $r65;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9;
        java.util.List $r49, $r86;
        java.util.Iterator $r50, $r80, $r87;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1.<org.apache.zookeeper.server.quorum.QuorumPeer: long end_fle> = $l0;

        $r3 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEADING - LEADER ELECTION TOOK - ");

        $r5 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l2 = $r5.<org.apache.zookeeper.server.quorum.QuorumPeer: long end_fle>;

        $r6 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l1 = $r6.<org.apache.zookeeper.server.quorum.QuorumPeer: long start_fle>;

        $l3 = $l2 - $l1;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r8);

        $r9 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r9.<org.apache.zookeeper.server.quorum.QuorumPeer: long start_fle> = 0L;

        $r10 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r10.<org.apache.zookeeper.server.quorum.QuorumPeer: long end_fle> = 0L;

        $r13 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r11 = new org.apache.zookeeper.server.quorum.LeaderBean;

        $r12 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        specialinvoke $r11.<org.apache.zookeeper.server.quorum.LeaderBean: void <init>(org.apache.zookeeper.server.quorum.Leader,org.apache.zookeeper.server.ZooKeeperServer)>(r0, $r12);

        $r14 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r15 = $r14.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean>;

        virtualinvoke $r13.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void registerJMX(org.apache.zookeeper.server.quorum.LeaderBean,org.apache.zookeeper.server.quorum.LocalPeerBean)>($r11, $r15);

     label01:
        $r16 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r16.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick> = 0;

        $r17 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r17.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void loadData()>();

        $r18 = new org.apache.zookeeper.server.quorum.StateSummary;

        $r19 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l4 = virtualinvoke $r19.<org.apache.zookeeper.server.quorum.QuorumPeer: long getCurrentEpoch()>();

        $r20 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $l5 = virtualinvoke $r20.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: long getLastProcessedZxid()>();

        specialinvoke $r18.<org.apache.zookeeper.server.quorum.StateSummary: void <init>(long,long)>($l4, $l5);

        r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.StateSummary leaderStateSummary> = $r18;

        $r21 = new org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor;

        specialinvoke $r21.<org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor: void <init>(org.apache.zookeeper.server.quorum.Leader)>(r0);

        r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor cnxAcceptor> = $r21;

        $r22 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor cnxAcceptor>;

        virtualinvoke $r22.<org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor: void start()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: boolean readyToStart> = 1;

        $r23 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l6 = virtualinvoke $r23.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r24 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l7 = virtualinvoke $r24.<org.apache.zookeeper.server.quorum.QuorumPeer: long getAcceptedEpoch()>();

        $l8 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: long getEpochToPropose(long,long)>($l6, $l7);

        $r25 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $l9 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long makeZxid(long,long)>($l8, 0L);

        virtualinvoke $r25.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void setZxid(long)>($l9);

        entermonitor r0;

     label02:
        $r26 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $l10 = virtualinvoke $r26.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: long getZxid()>();

        r0.<org.apache.zookeeper.server.quorum.Leader: long lastProposed> = $l10;

        exitmonitor r0;

     label03:
        goto label06;

     label04:
        $r109 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r109;

     label06:
        $r29 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        $r27 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $r28 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $l11 = virtualinvoke $r28.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: long getZxid()>();

        specialinvoke $r27.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(10, $l11, null, null);

        $r29.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet> = $r27;

        $r30 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        $r31 = $r30.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l12 = virtualinvoke $r31.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $l13 = $l12 & 4294967295L;

        $b14 = $l13 cmp 0L;

        if $b14 == 0 goto label07;

        $r100 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NEWLEADER proposal has Zxid of ");

        $r102 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        $r103 = $r102.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l36 = virtualinvoke $r103.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r104 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l36);

        $r105 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r100.<org.slf4j.Logger: void info(java.lang.String)>($r106);

     label07:
        $r34 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $r32 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        $r33 = $r32.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l15 = virtualinvoke $r33.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l15);

        $r36 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        interfaceinvoke $r34.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, $r36);

        $r37 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        $r39 = $r37.<org.apache.zookeeper.server.quorum.Leader$Proposal: java.util.HashSet ackSet>;

        $r38 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l16 = virtualinvoke $r38.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l16);

        virtualinvoke $r39.<java.util.HashSet: boolean add(java.lang.Object)>($r40);

        $r41 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l17 = virtualinvoke $r41.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r42 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.StateSummary leaderStateSummary>;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: void waitForEpochAck(long,org.apache.zookeeper.server.quorum.StateSummary)>($l17, $r42);

        $r43 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        virtualinvoke $r43.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentEpoch(long)>($l8);

     label08:
        $r110 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r111 = virtualinvoke $r110.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()>();

        $r112 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        $r113 = $r112.<org.apache.zookeeper.server.quorum.Leader$Proposal: java.util.HashSet ackSet>;

        $z6 = interfaceinvoke $r111.<org.apache.zookeeper.server.quorum.flexible.QuorumVerifier: boolean containsQuorum(java.util.HashSet)>($r113);

        if $z6 != 0 goto label16;

        $r73 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i30 = $r73.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick>;

        $r74 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i29 = $r74.<org.apache.zookeeper.server.quorum.QuorumPeer: int initLimit>;

        if $i30 <= $i29 goto label15;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r78 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$Proposal newLeaderProposal>;

        $r79 = $r78.<org.apache.zookeeper.server.quorum.Leader$Proposal: java.util.HashSet ackSet>;

        $r80 = virtualinvoke $r79.<java.util.HashSet: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r80.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r94 = interfaceinvoke $r80.<java.util.Iterator: java.lang.Object next()>();

        r114 = (java.lang.Long) $r94;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r114);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        goto label09;

     label10:
        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for a quorum of followers, only synced with: ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r77);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: void shutdown(java.lang.String)>($r84);

        $r85 = new java.util.HashSet;

        specialinvoke $r85.<java.util.HashSet: void <init>()>();

        $r86 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: java.util.List getLearners()>();

        $r87 = interfaceinvoke $r86.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke $r87.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r92 = interfaceinvoke $r87.<java.util.Iterator: java.lang.Object next()>();

        r115 = (org.apache.zookeeper.server.quorum.LearnerHandler) $r92;

        $l35 = virtualinvoke r115.<org.apache.zookeeper.server.quorum.LearnerHandler: long getSid()>();

        $r93 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l35);

        virtualinvoke $r85.<java.util.HashSet: boolean add(java.lang.Object)>($r93);

        goto label11;

     label12:
        $r88 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r89 = virtualinvoke $r88.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()>();

        $z5 = interfaceinvoke $r89.<org.apache.zookeeper.server.quorum.flexible.QuorumVerifier: boolean containsQuorum(java.util.HashSet)>($r85);

        if $z5 == 0 goto label13;

        $r91 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        interfaceinvoke $r91.<org.slf4j.Logger: void warn(java.lang.String)>("Enough followers present. Perhaps the initTicks need to be increased.");

     label13:
        goto label30;

     label14:
        return;

     label15:
        $r75 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i31 = $r75.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $l32 = (long) $i31;

        staticinvoke <java.lang.Thread: void sleep(long)>($l32);

        $r76 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i33 = $r76.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick>;

        $i34 = $i33 + 1;

        $r76.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick> = $i34;

        goto label08;

     label16:
        $r44 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.testingonly.initialZxid");

        if $r44 == null goto label17;

        $l25 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r44);

        $r72 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r71 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $l26 = virtualinvoke $r71.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: long getZxid()>();

        $l27 = $l26 & -4294967296L;

        $l28 = $l27 | $l25;

        virtualinvoke $r72.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void setZxid(long)>($l28);

     label17:
        $r45 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("zookeeper.leaderServes", "yes");

        $z0 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>("no");

        if $z0 != 0 goto label18;

        $r68 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r70 = $r68.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        $r69 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r70.<org.apache.zookeeper.server.ServerCnxnFactory: void setZooKeeperServer(org.apache.zookeeper.server.ZooKeeperServer)>($r69);

     label18:
        z7 = 1;

     label19:
        $r116 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i37 = $r116.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $i38 = $i37 / 2;

        $l39 = (long) $i38;

        staticinvoke <java.lang.Thread: void sleep(long)>($l39);

        if z7 != 0 goto label20;

        $r67 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i23 = $r67.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick>;

        $i24 = $i23 + 1;

        $r67.<org.apache.zookeeper.server.quorum.QuorumPeer: int tick> = $i24;

     label20:
        $r46 = new java.util.HashSet;

        specialinvoke $r46.<java.util.HashSet: void <init>()>();

        $r47 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l18 = virtualinvoke $r47.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l18);

        virtualinvoke $r46.<java.util.HashSet: boolean add(java.lang.Object)>($r48);

        $r49 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: java.util.List getLearners()>();

        $r50 = interfaceinvoke $r49.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z8 = interfaceinvoke $r50.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label23;

        $r62 = interfaceinvoke $r50.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.apache.zookeeper.server.quorum.LearnerHandler) $r62;

        $z2 = virtualinvoke r63.<org.apache.zookeeper.server.quorum.LearnerHandler: boolean synced()>();

        if $z2 == 0 goto label22;

        $r64 = virtualinvoke r63.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType getLearnerType()>();

        $r65 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        if $r64 != $r65 goto label22;

        $l22 = virtualinvoke r63.<org.apache.zookeeper.server.quorum.LearnerHandler: long getSid()>();

        $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l22);

        virtualinvoke $r46.<java.util.HashSet: boolean add(java.lang.Object)>($r66);

     label22:
        virtualinvoke r63.<org.apache.zookeeper.server.quorum.LearnerHandler: void ping()>();

        goto label21;

     label23:
        if z7 != 0 goto label25;

        $r51 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r52 = virtualinvoke $r51.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()>();

        $z1 = interfaceinvoke $r52.<org.apache.zookeeper.server.quorum.flexible.QuorumVerifier: boolean containsQuorum(java.util.HashSet)>($r46);

        if $z1 != 0 goto label25;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only ");

        $i19 = virtualinvoke $r46.<java.util.HashSet: int size()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" followers, need ");

        $r57 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r58 = virtualinvoke $r57.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getVotingView()>();

        $i20 = interfaceinvoke $r58.<java.util.Map: int size()>();

        $i21 = $i20 / 2;

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: void shutdown(java.lang.String)>($r60);

        goto label31;

     label24:
        return;

     label25:
        if z7 != 0 goto label26;

        $z9 = 1;

        goto label27;

     label26:
        $z9 = 0;

     label27:
        z7 = $z9;

        goto label19;

     label28:
        $r107 := @caughtexception;

        goto label32;

     label29:
        throw $r107;

     label30:
        $r90 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r90.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void unregisterJMX(org.apache.zookeeper.server.quorum.Leader)>(r0);

        goto label14;

     label31:
        $r61 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r61.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void unregisterJMX(org.apache.zookeeper.server.quorum.Leader)>(r0);

        goto label24;

     label32:
        $r108 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r108.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void unregisterJMX(org.apache.zookeeper.server.quorum.Leader)>(r0);

        goto label29;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label14 with label28;
        catch java.lang.Throwable from label15 to label24 with label28;
        catch java.lang.Throwable from label25 to label29 with label28;
    }

    void shutdown(java.lang.String)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r10, $r13;
        java.lang.Throwable $r23;
        org.apache.zookeeper.server.ServerCnxnFactory $r11, $r14;
        java.net.ServerSocket $r12;
        java.util.HashSet $r16, $r17;
        java.lang.String r6, $r8;
        org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor $r9, $r22;
        boolean $z0, $z1;
        org.slf4j.Logger $r0, $r4, $r25;
        java.util.Iterator $r18;
        java.io.IOException $r24;
        java.lang.Exception $r2;
        org.apache.zookeeper.server.quorum.LearnerHandler r20;
        org.apache.zookeeper.server.quorum.LeaderZooKeeperServer $r15, $r21;
        org.apache.zookeeper.server.quorum.Leader r1;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.lang.Object $r19;

        r1 := @this: org.apache.zookeeper.server.quorum.Leader;

        r6 := @parameter0: java.lang.String;

        $r0 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Shutting down");

        $z0 = r1.<org.apache.zookeeper.server.quorum.Leader: boolean isShutdown>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r4 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r2 = new java.lang.Exception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shutdown Leader! reason: ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>($r8);

        interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Shutdown called", $r2);

        $r9 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor cnxAcceptor>;

        if $r9 == null goto label02;

        $r22 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor cnxAcceptor>;

        virtualinvoke $r22.<org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor: void halt()>();

     label02:
        $r10 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r11 = $r10.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        virtualinvoke $r11.<org.apache.zookeeper.server.ServerCnxnFactory: void setZooKeeperServer(org.apache.zookeeper.server.ZooKeeperServer)>(null);

     label03:
        $r12 = r1.<org.apache.zookeeper.server.quorum.Leader: java.net.ServerSocket ss>;

        virtualinvoke $r12.<java.net.ServerSocket: void close()>();

     label04:
        goto label06;

     label05:
        $r24 := @caughtexception;

        $r25 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring unexpected exception during close", $r24);

     label06:
        $r13 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r14 = $r13.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        virtualinvoke $r14.<org.apache.zookeeper.server.ServerCnxnFactory: void closeAll()>();

        $r15 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        if $r15 == null goto label07;

        $r21 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r21.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void shutdown()>();

     label07:
        $r16 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        entermonitor $r16;

     label08:
        $r17 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet learners>;

        $r18 = virtualinvoke $r17.<java.util.HashSet: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.zookeeper.server.quorum.LearnerHandler) $r19;

        interfaceinvoke $r18.<java.util.Iterator: void remove()>();

        virtualinvoke r20.<org.apache.zookeeper.server.quorum.LearnerHandler: void shutdown()>();

        goto label09;

     label10:
        exitmonitor $r16;

     label11:
        goto label14;

     label12:
        $r23 := @caughtexception;

        exitmonitor $r16;

     label13:
        throw $r23;

     label14:
        r1.<org.apache.zookeeper.server.quorum.Leader: boolean isShutdown> = 1;

        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public synchronized void processAck(long, long, java.net.SocketAddress)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r9;
        java.lang.Integer $r44;
        org.apache.zookeeper.server.quorum.QuorumPacket $r60;
        byte $b3, $b7, $b9;
        java.lang.Long $r4, $r7, $r13, $r27, $r29;
        org.apache.zookeeper.server.quorum.Leader$Proposal r63, r64;
        org.apache.zookeeper.server.quorum.LearnerSyncRequest r65;
        org.apache.zookeeper.server.ZKDatabase $r20;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier $r10;
        long l1, $l2, l4, $l5, $l6, $l8, $l10, $l11, $l12, $l13, $l15, $l16;
        java.lang.String $r17, $r37, $r40, $r42, $r46, $r49, $r50, $r54, $r62;
        java.net.SocketAddress r38;
        org.apache.zookeeper.server.quorum.CommitProcessor $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r56;
        org.apache.zookeeper.server.Request $r14, $r22, $r24;
        java.util.List $r31;
        java.util.concurrent.ConcurrentLinkedQueue $r35;
        java.util.HashMap $r26, $r28;
        java.util.concurrent.ConcurrentMap $r2, $r3, $r12, $r55;
        java.util.HashSet $r6, $r11, $r43;
        int $i0, $i14, $i17;
        org.slf4j.Logger $r0, $r8, $r16, $r34, $r36, $r39, $r41, $r45, $r47, $r48, $r51, $r52, $r53, $r58, $r61;
        java.util.Iterator $r32, $r57;
        org.apache.zookeeper.server.quorum.LeaderZooKeeperServer $r15, $r18, $r19, $r21, $r23;
        org.apache.zookeeper.server.quorum.Leader r1;
        java.lang.Object $r5, $r30, $r33, $r59;

        r1 := @this: org.apache.zookeeper.server.quorum.Leader;

        l4 := @parameter0: long;

        l1 := @parameter1: long;

        r38 := @parameter2: java.net.SocketAddress;

        $r0 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label03;

        $r53 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r54 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        interfaceinvoke $r53.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Ack zxid: 0x{}", $r54);

        $r55 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $r56 = interfaceinvoke $r55.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>();

        $r57 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke $r57.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label02;

        $r59 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.apache.zookeeper.server.quorum.Leader$Proposal) $r59;

        $r60 = r63.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l16 = virtualinvoke $r60.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r61 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r62 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l16);

        interfaceinvoke $r61.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("outstanding proposal: 0x{}", $r62);

        goto label01;

     label02:
        $r58 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        interfaceinvoke $r58.<org.slf4j.Logger: void trace(java.lang.String)>("outstanding proposals all");

     label03:
        $r2 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $i0 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: int size()>();

        if $i0 != 0 goto label05;

        $r51 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $z6 = interfaceinvoke $r51.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label04;

        $r52 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        interfaceinvoke $r52.<org.slf4j.Logger: void debug(java.lang.String)>("outstanding is 0");

     label04:
        return;

     label05:
        $l2 = r1.<org.apache.zookeeper.server.quorum.Leader: long lastCommitted>;

        $b3 = $l2 cmp l1;

        $i17 = (int) $b3;

        if $i17 < 0 goto label07;

        $r47 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $z5 = interfaceinvoke $r47.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label06;

        $r48 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $l15 = r1.<org.apache.zookeeper.server.quorum.Leader: long lastCommitted>;

        $r49 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l15);

        $r50 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        interfaceinvoke $r48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("proposal has already been committed, pzxid: 0x{} zxid: 0x{}", $r49, $r50);

     label06:
        return;

     label07:
        $r3 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r5 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r4);

        r64 = (org.apache.zookeeper.server.quorum.Leader$Proposal) $r5;

        if r64 != null goto label08;

        $r45 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r46 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        interfaceinvoke $r45.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Trying to commit future proposal: zxid 0x{} from {}", $r46, r38);

        return;

     label08:
        $r6 = r64.<org.apache.zookeeper.server.quorum.Leader$Proposal: java.util.HashSet ackSet>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

        $r8 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label09;

        $r41 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r42 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        $r43 = r64.<org.apache.zookeeper.server.quorum.Leader$Proposal: java.util.HashSet ackSet>;

        $i14 = virtualinvoke $r43.<java.util.HashSet: int size()>();

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        interfaceinvoke $r41.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Count for zxid: 0x{} is {}", $r42, $r44);

     label09:
        $r9 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r10 = virtualinvoke $r9.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()>();

        $r11 = r64.<org.apache.zookeeper.server.quorum.Leader$Proposal: java.util.HashSet ackSet>;

        $z2 = interfaceinvoke $r10.<org.apache.zookeeper.server.quorum.flexible.QuorumVerifier: boolean containsQuorum(java.util.HashSet)>($r11);

        if $z2 == 0 goto label16;

        $l5 = r1.<org.apache.zookeeper.server.quorum.Leader: long lastCommitted>;

        $l6 = $l5 + 1L;

        $b7 = l1 cmp $l6;

        if $b7 == 0 goto label10;

        $r36 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r37 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        interfaceinvoke $r36.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Commiting zxid 0x{} from {} not first!", $r37, r38);

        $r39 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $l12 = r1.<org.apache.zookeeper.server.quorum.Leader: long lastCommitted>;

        $l13 = $l12 + 1L;

        $r40 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13);

        interfaceinvoke $r39.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("First is 0x{}", $r40);

     label10:
        $r12 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        interfaceinvoke $r12.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>($r13);

        $r14 = r64.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.Request request>;

        if $r14 == null goto label11;

        $r35 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentLinkedQueue toBeApplied>;

        virtualinvoke $r35.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r64);

     label11:
        $l8 = l1 & 4294967295L;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label15;

        $r22 = r64.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.Request request>;

        if $r22 != null goto label12;

        $r34 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        interfaceinvoke $r34.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Going to commmit null request for proposal: {}", r64);

     label12:
        virtualinvoke r1.<org.apache.zookeeper.server.quorum.Leader: void commit(long)>(l1);

        virtualinvoke r1.<org.apache.zookeeper.server.quorum.Leader: void inform(org.apache.zookeeper.server.quorum.Leader$Proposal)>(r64);

        $r23 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r25 = $r23.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.quorum.CommitProcessor commitProcessor>;

        $r24 = r64.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.Request request>;

        virtualinvoke $r25.<org.apache.zookeeper.server.quorum.CommitProcessor: void commit(org.apache.zookeeper.server.Request)>($r24);

        $r26 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.HashMap pendingSyncs>;

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $z3 = virtualinvoke $r26.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r27);

        if $z3 == 0 goto label14;

        $r28 = r1.<org.apache.zookeeper.server.quorum.Leader: java.util.HashMap pendingSyncs>;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r30 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r29);

        $r31 = (java.util.List) $r30;

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r65 = (org.apache.zookeeper.server.quorum.LearnerSyncRequest) $r33;

        virtualinvoke r1.<org.apache.zookeeper.server.quorum.Leader: void sendSync(org.apache.zookeeper.server.quorum.LearnerSyncRequest)>(r65);

        goto label13;

     label14:
        return;

     label15:
        r1.<org.apache.zookeeper.server.quorum.Leader: long lastCommitted> = l1;

        $r16 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r15 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $l10 = virtualinvoke $r15.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: long getZxid()>();

        $r17 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l10);

        interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Have quorum of supporters; starting up and setting last processed zxid: 0x{}", $r17);

        $r18 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        virtualinvoke $r18.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: void startup()>();

        $r19 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $r20 = virtualinvoke $r19.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $r21 = r1.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.LeaderZooKeeperServer zk>;

        $l11 = virtualinvoke $r21.<org.apache.zookeeper.server.quorum.LeaderZooKeeperServer: long getZxid()>();

        virtualinvoke $r20.<org.apache.zookeeper.server.ZKDatabase: void setlastProcessedZxid(long)>($l11);

     label16:
        return;
    }

    void sendPacket(org.apache.zookeeper.server.quorum.QuorumPacket)
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r3;
        java.util.HashSet $r1, $r2;
        org.apache.zookeeper.server.quorum.LearnerHandler r5;
        org.apache.zookeeper.server.quorum.QuorumPacket r6;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r6 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet forwardingFollowers>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.zookeeper.server.quorum.LearnerHandler) $r4;

        virtualinvoke r5.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>(r6);

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void sendObserverPacket(org.apache.zookeeper.server.quorum.QuorumPacket)
    {
        org.apache.zookeeper.server.quorum.LearnerHandler r4;
        org.apache.zookeeper.server.quorum.QuorumPacket r5;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r5 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        $r1 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: java.util.List getObservingLearners()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.zookeeper.server.quorum.LearnerHandler) $r3;

        virtualinvoke r4.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>(r5);

        goto label1;

     label2:
        return;
    }

    public void commit(long)
    {
        org.apache.zookeeper.server.quorum.QuorumPacket $r1;
        java.lang.Throwable $r2;
        org.apache.zookeeper.server.quorum.Leader r0;
        long l0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        r0.<org.apache.zookeeper.server.quorum.Leader: long lastCommitted> = l0;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

     label5:
        $r1 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(4, l0, null, null);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: void sendPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void inform(org.apache.zookeeper.server.quorum.Leader$Proposal)
    {
        org.apache.zookeeper.server.quorum.QuorumPacket $r0, $r3;
        org.apache.zookeeper.server.Request $r2;
        byte[] $r4;
        org.apache.zookeeper.server.quorum.Leader r5;
        org.apache.zookeeper.server.quorum.Leader$Proposal r1;
        long $l0;

        r5 := @this: org.apache.zookeeper.server.quorum.Leader;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.Leader$Proposal;

        $r0 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $r2 = r1.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.Request request>;

        $l0 = $r2.<org.apache.zookeeper.server.Request: long zxid>;

        $r3 = r1.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $r4 = virtualinvoke $r3.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        specialinvoke $r0.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(8, $l0, $r4, null);

        virtualinvoke r5.<org.apache.zookeeper.server.quorum.Leader: void sendObserverPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r0);

        return;
    }

    public long getEpoch()
    {
        org.apache.zookeeper.server.quorum.Leader r0;
        long $l0, $l1;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        $l0 = r0.<org.apache.zookeeper.server.quorum.Leader: long lastProposed>;

        $l1 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long getEpochFromZxid(long)>($l0);

        return $l1;
    }

    public org.apache.zookeeper.server.quorum.Leader$Proposal propose(org.apache.zookeeper.server.Request) throws org.apache.zookeeper.server.quorum.Leader$XidRolloverException
    {
        java.lang.Throwable $r20;
        org.apache.jute.BinaryOutputArchive $r2;
        byte[] $r6;
        java.io.ByteArrayOutputStream $r1;
        long $l0, $l1, $l3, $l4, $l5;
        java.util.concurrent.ConcurrentMap $r11;
        org.apache.zookeeper.server.quorum.QuorumPacket $r5, $r10;
        byte $b2;
        org.apache.zookeeper.server.quorum.Leader$XidRolloverException $r19;
        java.lang.Long $r12;
        java.lang.String $r17;
        boolean $z0;
        org.slf4j.Logger $r9, $r14, $r22;
        org.apache.zookeeper.txn.TxnHeader $r3;
        org.apache.jute.Record $r4, $r18;
        java.io.IOException $r21;
        org.apache.zookeeper.server.Request r0;
        org.apache.zookeeper.server.quorum.Leader r8;
        org.apache.zookeeper.server.quorum.Leader$Proposal $r7;
        java.lang.StringBuilder $r13, $r15, $r16;

        r8 := @this: org.apache.zookeeper.server.quorum.Leader;

        r0 := @parameter0: org.apache.zookeeper.server.Request;

        $l0 = r0.<org.apache.zookeeper.server.Request: long zxid>;

        $l1 = $l0 & 4294967295L;

        $b2 = $l1 cmp 4294967295L;

        if $b2 != 0 goto label01;

        virtualinvoke r8.<org.apache.zookeeper.server.quorum.Leader: void shutdown(java.lang.String)>("zxid lower 32 bits have rolled over, forcing re-election, and therefore new epoch start");

        $r19 = new org.apache.zookeeper.server.quorum.Leader$XidRolloverException;

        specialinvoke $r19.<org.apache.zookeeper.server.quorum.Leader$XidRolloverException: void <init>(java.lang.String)>("zxid lower 32 bits have rolled over, forcing re-election, and therefore new epoch start");

        throw $r19;

     label01:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r1);

     label02:
        $r3 = r0.<org.apache.zookeeper.server.Request: org.apache.zookeeper.txn.TxnHeader hdr>;

        virtualinvoke $r3.<org.apache.zookeeper.txn.TxnHeader: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r2, "hdr");

        $r4 = r0.<org.apache.zookeeper.server.Request: org.apache.jute.Record txn>;

        if $r4 == null goto label03;

        $r18 = r0.<org.apache.zookeeper.server.Request: org.apache.jute.Record txn>;

        interfaceinvoke $r18.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r2, "txn");

     label03:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r21 := @caughtexception;

        $r22 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("This really should be impossible", $r21);

     label06:
        $r5 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $l3 = r0.<org.apache.zookeeper.server.Request: long zxid>;

        $r6 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(2, $l3, $r6, null);

        $r7 = new org.apache.zookeeper.server.quorum.Leader$Proposal;

        specialinvoke $r7.<org.apache.zookeeper.server.quorum.Leader$Proposal: void <init>()>();

        $r7.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet> = $r5;

        $r7.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.Request request> = r0;

        entermonitor r8;

     label07:
        $r9 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label08;

        $r14 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proposing:: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>($r17);

     label08:
        $r10 = $r7.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l4 = virtualinvoke $r10.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        r8.<org.apache.zookeeper.server.quorum.Leader: long lastProposed> = $l4;

        $r11 = r8.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $l5 = r8.<org.apache.zookeeper.server.quorum.Leader: long lastProposed>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke $r11.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r7);

        virtualinvoke r8.<org.apache.zookeeper.server.quorum.Leader: void sendPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r5);

        exitmonitor r8;

     label09:
        goto label12;

     label10:
        $r20 := @caughtexception;

        exitmonitor r8;

     label11:
        throw $r20;

     label12:
        return $r7;

        catch java.io.IOException from label02 to label04 with label05;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public synchronized void processSync(org.apache.zookeeper.server.quorum.LearnerSyncRequest)
    {
        org.apache.zookeeper.server.quorum.LearnerSyncRequest r5;
        long $l0, $l1;
        java.util.HashMap $r2, $r6;
        java.util.concurrent.ConcurrentMap $r1;
        java.util.ArrayList $r8;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.util.List r9;
        java.lang.Long $r3, $r7;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r5 := @parameter0: org.apache.zookeeper.server.quorum.LearnerSyncRequest;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Leader: void sendSync(org.apache.zookeeper.server.quorum.LearnerSyncRequest)>(r5);

        goto label3;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashMap pendingSyncs>;

        $l0 = r0.<org.apache.zookeeper.server.quorum.Leader: long lastProposed>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r9 = (java.util.List) $r4;

        if r9 != null goto label2;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r9 = $r8;

     label2:
        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r6 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashMap pendingSyncs>;

        $l1 = r0.<org.apache.zookeeper.server.quorum.Leader: long lastProposed>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r9);

     label3:
        return;
    }

    public void sendSync(org.apache.zookeeper.server.quorum.LearnerSyncRequest)
    {
        org.apache.zookeeper.server.quorum.QuorumPacket $r0;
        org.apache.zookeeper.server.quorum.LearnerHandler $r2;
        org.apache.zookeeper.server.quorum.Leader r3;
        org.apache.zookeeper.server.quorum.LearnerSyncRequest r1;

        r3 := @this: org.apache.zookeeper.server.quorum.Leader;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.LearnerSyncRequest;

        $r0 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r0.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(7, 0L, null, null);

        $r2 = r1.<org.apache.zookeeper.server.quorum.LearnerSyncRequest: org.apache.zookeeper.server.quorum.LearnerHandler fh>;

        virtualinvoke $r2.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r0);

        return;
    }

    public synchronized long startForwarding(org.apache.zookeeper.server.quorum.LearnerHandler, long)
    {
        org.apache.zookeeper.server.quorum.QuorumPacket $r14, $r16, $r17, $r19, $r22;
        byte $b2, $b5, $b7;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r2, $r3;
        java.lang.Long r21;
        boolean $z0, $z1;
        java.util.Set $r8;
        org.apache.zookeeper.server.quorum.LearnerHandler r1;
        org.apache.zookeeper.server.quorum.Leader$Proposal $r13, r20;
        java.util.concurrent.ConcurrentLinkedQueue $r4;
        long l0, $l1, $l3, $l4, $l6, $l8;
        java.util.concurrent.ConcurrentMap $r7, $r11;
        java.util.ArrayList $r23;
        int $i9, $i10, $i11;
        java.util.Iterator $r5, $r9;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.lang.Object $r10, $r12, $r15;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.LearnerHandler;

        l0 := @parameter1: long;

        $l1 = r0.<org.apache.zookeeper.server.quorum.Leader: long lastProposed>;

        $b2 = $l1 cmp l0;

        $i9 = (int) $b2;

        if $i9 <= 0 goto label6;

        $r4 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentLinkedQueue toBeApplied>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.zookeeper.server.quorum.Leader$Proposal) $r15;

        $r16 = r20.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l6 = virtualinvoke $r16.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $b7 = $l6 cmp l0;

        $i10 = (int) $b7;

        if $i10 > 0 goto label2;

        goto label1;

     label2:
        $r17 = r20.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        virtualinvoke r1.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r17);

        $r22 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $r19 = r20.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        $l8 = virtualinvoke $r19.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        specialinvoke $r22.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(4, $l8, null, null);

        virtualinvoke r1.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r22);

        goto label1;

     label3:
        $r23 = new java.util.ArrayList;

        $r7 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $r8 = interfaceinvoke $r7.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>();

        specialinvoke $r23.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r23);

        $r9 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.Long) $r10;

        $l4 = virtualinvoke r21.<java.lang.Long: long longValue()>();

        $b5 = $l4 cmp l0;

        $i11 = (int) $b5;

        if $i11 > 0 goto label5;

        goto label4;

     label5:
        $r11 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.concurrent.ConcurrentMap outstandingProposals>;

        $r12 = interfaceinvoke $r11.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r21);

        $r13 = (org.apache.zookeeper.server.quorum.Leader$Proposal) $r12;

        $r14 = $r13.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.quorum.QuorumPacket packet>;

        virtualinvoke r1.<org.apache.zookeeper.server.quorum.LearnerHandler: void queuePacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r14);

        goto label4;

     label6:
        $r2 = virtualinvoke r1.<org.apache.zookeeper.server.quorum.LearnerHandler: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType getLearnerType()>();

        $r3 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        if $r2 != $r3 goto label7;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.Leader: void addForwardingFollower(org.apache.zookeeper.server.quorum.LearnerHandler)>(r1);

        goto label8;

     label7:
        specialinvoke r0.<org.apache.zookeeper.server.quorum.Leader: void addObserverLearnerHandler(org.apache.zookeeper.server.quorum.LearnerHandler)>(r1);

     label8:
        $l3 = r0.<org.apache.zookeeper.server.quorum.Leader: long lastProposed>;

        return $l3;
    }

    public long getEpochToPropose(long, long) throws java.lang.InterruptedException, java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r4, $r6, $r9, $r10, $r14;
        byte $b2, $b11;
        java.lang.Long $r3, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r16;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier $r5;
        long l0, $l1, l3, $l4, $l5, $l9, $l10, $l12, $l13, $l14, $l15, $l16, l17;
        java.util.HashSet $r1, $r2, $r7, $r12, $r13, $r15;
        int $i6, $i7, $i8, $i18, $i19;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.lang.InterruptedException $r17;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        l3 := @parameter0: long;

        l0 := @parameter1: long;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet connectingFollowers>;

        entermonitor $r1;

     label01:
        $z0 = r0.<org.apache.zookeeper.server.quorum.Leader: boolean waitingForNewEpoch>;

        if $z0 != 0 goto label03;

        $l16 = r0.<org.apache.zookeeper.server.quorum.Leader: long epoch>;

        exitmonitor $r1;

     label02:
        return $l16;

     label03:
        $l1 = r0.<org.apache.zookeeper.server.quorum.Leader: long epoch>;

        $b2 = l0 cmp $l1;

        $i18 = (int) $b2;

        if $i18 < 0 goto label04;

        $l15 = l0 + 1L;

        r0.<org.apache.zookeeper.server.quorum.Leader: long epoch> = $l15;

     label04:
        $r2 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet connectingFollowers>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r5 = virtualinvoke $r4.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()>();

        $r7 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet connectingFollowers>;

        $r6 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l4 = virtualinvoke $r6.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $z1 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r8);

        if $z1 == 0 goto label05;

        $r13 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet connectingFollowers>;

        $z3 = interfaceinvoke $r5.<org.apache.zookeeper.server.quorum.flexible.QuorumVerifier: boolean containsQuorum(java.util.HashSet)>($r13);

        if $z3 == 0 goto label05;

        r0.<org.apache.zookeeper.server.quorum.Leader: boolean waitingForNewEpoch> = 0;

        $r14 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l14 = r0.<org.apache.zookeeper.server.quorum.Leader: long epoch>;

        virtualinvoke $r14.<org.apache.zookeeper.server.quorum.QuorumPeer: void setAcceptedEpoch(long)>($l14);

        $r15 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet connectingFollowers>;

        virtualinvoke $r15.<java.lang.Object: void notifyAll()>();

        goto label08;

     label05:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l17 = $l5;

        $r9 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i6 = virtualinvoke $r9.<org.apache.zookeeper.server.quorum.QuorumPeer: int getInitLimit()>();

        $r10 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i7 = virtualinvoke $r10.<org.apache.zookeeper.server.quorum.QuorumPeer: int getTickTime()>();

        $i8 = $i6 * $i7;

        $l9 = (long) $i8;

        $l13 = $l5 + $l9;

     label06:
        $z4 = r0.<org.apache.zookeeper.server.quorum.Leader: boolean waitingForNewEpoch>;

        if $z4 == 0 goto label07;

        $b11 = l17 cmp $l13;

        $i19 = (int) $b11;

        if $i19 >= 0 goto label07;

        $r12 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet connectingFollowers>;

        $l12 = $l13 - l17;

        virtualinvoke $r12.<java.lang.Object: void wait(long)>($l12);

        l17 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label06;

     label07:
        $z2 = r0.<org.apache.zookeeper.server.quorum.Leader: boolean waitingForNewEpoch>;

        if $z2 == 0 goto label08;

        $r17 = new java.lang.InterruptedException;

        specialinvoke $r17.<java.lang.InterruptedException: void <init>(java.lang.String)>("Timeout while waiting for epoch from quorum");

        throw $r17;

     label08:
        $l10 = r0.<org.apache.zookeeper.server.quorum.Leader: long epoch>;

        exitmonitor $r1;

     label09:
        return $l10;

     label10:
        $r16 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void waitForEpochAck(long, org.apache.zookeeper.server.quorum.StateSummary) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r3, $r5, $r8, $r9;
        byte $b1, $b8;
        java.lang.Long $r7, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.zookeeper.server.quorum.StateSummary r2, $r14, $r20, $r23;
        java.lang.StringBuilder $r19, $r21, $r22, $r24, $r25, $r28;
        java.lang.Throwable $r27;
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier $r4;
        long $l0, $l2, $l3, $l7, $l9, $l10, l11, $l12, $l13, l14;
        java.util.HashSet $r1, $r6, $r11, $r12, $r13, $r15;
        int $i4, $i5, $i6, $i15;
        java.lang.String $r26;
        java.io.IOException $r29;
        org.apache.zookeeper.server.quorum.Leader r0;
        java.lang.InterruptedException $r30;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader;

        l11 := @parameter0: long;

        r2 := @parameter1: org.apache.zookeeper.server.quorum.StateSummary;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet electingFollowers>;

        entermonitor $r1;

     label01:
        $z0 = r0.<org.apache.zookeeper.server.quorum.Leader: boolean electionFinished>;

        if $z0 == 0 goto label03;

        exitmonitor $r1;

     label02:
        return;

     label03:
        $l0 = virtualinvoke r2.<org.apache.zookeeper.server.quorum.StateSummary: long getCurrentEpoch()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label05;

        $r14 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.StateSummary leaderStateSummary>;

        $z4 = virtualinvoke r2.<org.apache.zookeeper.server.quorum.StateSummary: boolean isMoreRecentThan(org.apache.zookeeper.server.quorum.StateSummary)>($r14);

        if $z4 == 0 goto label04;

        $r29 = new java.io.IOException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Follower is ahead of the leader, leader summary: ");

        $r20 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.StateSummary leaderStateSummary>;

        $l12 = virtualinvoke $r20.<org.apache.zookeeper.server.quorum.StateSummary: long getCurrentEpoch()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (current epoch), ");

        $r23 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.StateSummary leaderStateSummary>;

        $l13 = virtualinvoke $r23.<org.apache.zookeeper.server.quorum.StateSummary: long getLastZxid()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (last zxid)");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r29;

     label04:
        $r15 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet electingFollowers>;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11);

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>($r16);

     label05:
        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r4 = virtualinvoke $r3.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()>();

        $r6 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet electingFollowers>;

        $r5 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l2 = virtualinvoke $r5.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $z1 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label06;

        $r12 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet electingFollowers>;

        $z3 = interfaceinvoke $r4.<org.apache.zookeeper.server.quorum.flexible.QuorumVerifier: boolean containsQuorum(java.util.HashSet)>($r12);

        if $z3 == 0 goto label06;

        r0.<org.apache.zookeeper.server.quorum.Leader: boolean electionFinished> = 1;

        $r13 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet electingFollowers>;

        virtualinvoke $r13.<java.lang.Object: void notifyAll()>();

        goto label09;

     label06:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l14 = $l3;

        $r8 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i4 = virtualinvoke $r8.<org.apache.zookeeper.server.quorum.QuorumPeer: int getInitLimit()>();

        $r9 = r0.<org.apache.zookeeper.server.quorum.Leader: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i5 = virtualinvoke $r9.<org.apache.zookeeper.server.quorum.QuorumPeer: int getTickTime()>();

        $i6 = $i4 * $i5;

        $l7 = (long) $i6;

        $l10 = $l3 + $l7;

     label07:
        $z5 = r0.<org.apache.zookeeper.server.quorum.Leader: boolean electionFinished>;

        if $z5 != 0 goto label08;

        $b8 = l14 cmp $l10;

        $i15 = (int) $b8;

        if $i15 >= 0 goto label08;

        $r11 = r0.<org.apache.zookeeper.server.quorum.Leader: java.util.HashSet electingFollowers>;

        $l9 = $l10 - l14;

        virtualinvoke $r11.<java.lang.Object: void wait(long)>($l9);

        l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label07;

     label08:
        $z2 = r0.<org.apache.zookeeper.server.quorum.Leader: boolean electionFinished>;

        if $z2 != 0 goto label09;

        $r30 = new java.lang.InterruptedException;

        specialinvoke $r30.<java.lang.InterruptedException: void <init>(java.lang.String)>("Timeout while waiting for epoch to be acked by quorum");

        throw $r30;

     label09:
        exitmonitor $r1;

     label10:
        goto label13;

     label11:
        $r27 := @caughtexception;

        exitmonitor $r1;

     label12:
        throw $r27;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static java.lang.String getPacketType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            case 4: goto label13;
            case 5: goto label14;
            case 6: goto label15;
            case 7: goto label16;
            case 8: goto label17;
            case 9: goto label18;
            case 10: goto label05;
            case 11: goto label06;
            case 12: goto label07;
            case 13: goto label01;
            case 14: goto label02;
            case 15: goto label03;
            case 16: goto label04;
            case 17: goto label08;
            case 18: goto label09;
            default: goto label18;
        };

     label01:
        return "DIFF";

     label02:
        return "TRUNC";

     label03:
        return "SNAP";

     label04:
        return "OBSERVERINFO";

     label05:
        return "NEWLEADER";

     label06:
        return "FOLLOWERINFO";

     label07:
        return "UPTODATE";

     label08:
        return "LEADERINFO";

     label09:
        return "ACKEPOCH";

     label10:
        return "REQUEST";

     label11:
        return "PROPOSAL";

     label12:
        return "ACK";

     label13:
        return "COMMIT";

     label14:
        return "PING";

     label15:
        return "REVALIDATE";

     label16:
        return "SYNC";

     label17:
        return "INFORM";

     label18:
        return "UNKNOWN";
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <org.apache.zookeeper.server.quorum.Leader: boolean nodelay>;

        return $z0;
    }

    static org.slf4j.Logger access$100()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0, $r3;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r1, $r6;
        boolean $z0, $z1;

        <org.apache.zookeeper.server.quorum.Leader: int INFORM> = 8;

        <org.apache.zookeeper.server.quorum.Leader: int SYNC> = 7;

        <org.apache.zookeeper.server.quorum.Leader: int REVALIDATE> = 6;

        <org.apache.zookeeper.server.quorum.Leader: int PING> = 5;

        <org.apache.zookeeper.server.quorum.Leader: int COMMIT> = 4;

        <org.apache.zookeeper.server.quorum.Leader: int ACK> = 3;

        <org.apache.zookeeper.server.quorum.Leader: int PROPOSAL> = 2;

        <org.apache.zookeeper.server.quorum.Leader: int REQUEST> = 1;

        <org.apache.zookeeper.server.quorum.Leader: int ACKEPOCH> = 18;

        <org.apache.zookeeper.server.quorum.Leader: int LEADERINFO> = 17;

        <org.apache.zookeeper.server.quorum.Leader: int UPTODATE> = 12;

        <org.apache.zookeeper.server.quorum.Leader: int FOLLOWERINFO> = 11;

        <org.apache.zookeeper.server.quorum.Leader: int NEWLEADER> = 10;

        <org.apache.zookeeper.server.quorum.Leader: int OBSERVERINFO> = 16;

        <org.apache.zookeeper.server.quorum.Leader: int SNAP> = 15;

        <org.apache.zookeeper.server.quorum.Leader: int TRUNC> = 14;

        <org.apache.zookeeper.server.quorum.Leader: int DIFF> = 13;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/Leader;");

        <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG> = $r0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("leader.nodelay", "true");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        <org.apache.zookeeper.server.quorum.Leader: boolean nodelay> = $z0;

        $r3 = <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCP NoDelay set to: ");

        $z1 = <org.apache.zookeeper.server.quorum.Leader: boolean nodelay>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r6);

        return;
    }
}
