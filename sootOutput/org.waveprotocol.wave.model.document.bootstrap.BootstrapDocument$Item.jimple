abstract class org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item extends java.lang.Object
{
    org.waveprotocol.wave.model.document.operation.impl.AnnotationMap annotations;
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0;

    void <init>(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument, org.waveprotocol.wave.model.document.operation.impl.AnnotationMap)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item r0;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument r1;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap r2;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item;

        r1 := @parameter0: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap;

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap annotations> = r2;

        return;
    }

    void applyItem(org.waveprotocol.wave.model.document.operation.DocInitializationCursor)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item r0;
        java.lang.Object[] $r6;
        java.lang.String[] $r5, r7, $r10, $r11, $r16;
        java.lang.AssertionError $r17;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r13;
        java.util.TreeSet $r2, $r4;
        int $i0, $i1, i2;
        org.waveprotocol.wave.model.document.operation.DocInitializationCursor r8;
        java.lang.String $r12, $r15;
        boolean $z0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl $r9;
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument $r1, $r3;
        java.lang.Object $r14;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item;

        r8 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitializationCursor;

        $r1 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: java.util.TreeSet access$000(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument)>($r1);

        $i0 = virtualinvoke $r2.<java.util.TreeSet: int size()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument: java.util.TreeSet access$000(org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument)>($r3);

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = virtualinvoke $r4.<java.util.TreeSet: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        r7 = (java.lang.String[]) $r6;

        $z0 = <org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = lengthof r7;

        if $i1 == $i0 goto label1;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label1:
        $r16 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label2:
        if i2 >= $i0 goto label3;

        $r13 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap annotations>;

        $r12 = r7[i2];

        $r14 = interfaceinvoke $r13.<org.waveprotocol.wave.model.document.operation.impl.AnnotationMap: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.String) $r14;

        $r16[i2] = $r15;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r9 = new org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        $r11 = newarray (java.lang.String)[0];

        $r10 = newarray (java.lang.String)[$i0];

        specialinvoke $r9.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: void <init>(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>($r11, r7, $r10, $r16);

        interfaceinvoke r8.<org.waveprotocol.wave.model.document.operation.DocInitializationCursor: void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>($r9);

        virtualinvoke r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: void applyData(org.waveprotocol.wave.model.document.operation.DocInitializationCursor)>(r8);

        return;
    }

    abstract void applyData(org.waveprotocol.wave.model.document.operation.DocInitializationCursor);

    org.waveprotocol.wave.model.document.operation.impl.AnnotationMap getAnnotations()
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r1;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item;

        $r1 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap annotations>;

        return $r1;
    }

    void updateAnnotations(org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate)
    {
        org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate r1;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r2, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate;

        $r2 = r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap annotations>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.AnnotationMap: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap updateWith(org.waveprotocol.wave.model.document.operation.impl.AnnotationsUpdate)>(r1);

        r0.<org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap annotations> = $r3;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/bootstrap/BootstrapDocument;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.bootstrap.BootstrapDocument$Item: boolean $assertionsDisabled> = $z1;

        return;
    }
}
