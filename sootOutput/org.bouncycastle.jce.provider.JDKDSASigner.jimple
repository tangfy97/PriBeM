public class org.bouncycastle.jce.provider.JDKDSASigner extends java.security.SignatureSpi implements org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers, org.bouncycastle.asn1.x509.X509ObjectIdentifiers
{
    private org.bouncycastle.crypto.Digest digest;
    private org.bouncycastle.crypto.DSA signer;
    private java.security.SecureRandom random;

    protected void <init>(org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.DSA)
    {
        org.bouncycastle.crypto.Digest r1;
        org.bouncycastle.crypto.DSA r2;
        org.bouncycastle.jce.provider.JDKDSASigner r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r1 := @parameter0: org.bouncycastle.crypto.Digest;

        r2 := @parameter1: org.bouncycastle.crypto.DSA;

        specialinvoke r0.<java.security.SignatureSpi: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest> = r1;

        r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.DSA signer> = r2;

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        byte[] $r0;
        java.security.PublicKey $r1, r6;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter r7;
        org.bouncycastle.crypto.Digest $r8;
        java.lang.Exception $r4;
        org.bouncycastle.jce.provider.JDKDSASigner r3;
        java.security.InvalidKeyException $r2, $r5;
        org.bouncycastle.crypto.DSA $r9;
        boolean $z0, $z1, $z2;

        r3 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r6 := @parameter0: java.security.PublicKey;

        $z0 = r6 instanceof org.bouncycastle.jce.interfaces.GOST3410Key;

        if $z0 == 0 goto label1;

        r7 = staticinvoke <org.bouncycastle.jce.provider.GOST3410Util: org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>(r6);

        goto label6;

     label1:
        $z1 = r6 instanceof java.security.interfaces.DSAKey;

        if $z1 == 0 goto label2;

        r7 = staticinvoke <org.bouncycastle.jce.provider.DSAUtil: org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>(r6);

        goto label6;

     label2:
        $r0 = interfaceinvoke r6.<java.security.PublicKey: byte[] getEncoded()>();

        $r1 = staticinvoke <org.bouncycastle.jce.provider.JDKKeyFactory: java.security.PublicKey createPublicKeyFromDERStream(byte[])>($r0);

        $z2 = $r1 instanceof java.security.interfaces.DSAKey;

        if $z2 == 0 goto label3;

        r7 = staticinvoke <org.bouncycastle.jce.provider.DSAUtil: org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>($r1);

        goto label4;

     label3:
        $r2 = new java.security.InvalidKeyException;

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t recognise key type in DSA based signer");

        throw $r2;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.security.InvalidKeyException;

        specialinvoke $r5.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t recognise key type in DSA based signer");

        throw $r5;

     label6:
        $r8 = r3.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: void reset()>();

        $r9 = r3.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.DSA signer>;

        interfaceinvoke $r9.<org.bouncycastle.crypto.DSA: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, r7);

        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    protected void engineInitSign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        java.security.SecureRandom r1;
        org.bouncycastle.jce.provider.JDKDSASigner r0;
        java.security.PrivateKey r2;

        r0 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r2 := @parameter0: java.security.PrivateKey;

        r1 := @parameter1: java.security.SecureRandom;

        r0.<org.bouncycastle.jce.provider.JDKDSASigner: java.security.SecureRandom random> = r1;

        virtualinvoke r0.<org.bouncycastle.jce.provider.JDKDSASigner: void engineInitSign(java.security.PrivateKey)>(r2);

        return;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.crypto.Digest $r3;
        java.security.SecureRandom $r2, $r6;
        java.security.PrivateKey r0;
        org.bouncycastle.jce.provider.JDKDSASigner r1;
        org.bouncycastle.crypto.params.ParametersWithRandom $r5;
        org.bouncycastle.crypto.DSA $r4;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters r7;

        r1 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r0 := @parameter0: java.security.PrivateKey;

        $z0 = r0 instanceof org.bouncycastle.jce.interfaces.GOST3410Key;

        if $z0 == 0 goto label1;

        r7 = staticinvoke <org.bouncycastle.jce.provider.GOST3410Util: org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)>(r0);

        goto label2;

     label1:
        r7 = staticinvoke <org.bouncycastle.jce.provider.DSAUtil: org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)>(r0);

     label2:
        $r2 = r1.<org.bouncycastle.jce.provider.JDKDSASigner: java.security.SecureRandom random>;

        if $r2 == null goto label3;

        $r5 = new org.bouncycastle.crypto.params.ParametersWithRandom;

        $r6 = r1.<org.bouncycastle.jce.provider.JDKDSASigner: java.security.SecureRandom random>;

        specialinvoke $r5.<org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r7, $r6);

        r7 = $r5;

     label3:
        $r3 = r1.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void reset()>();

        $r4 = r1.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.DSA signer>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.DSA: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, r7);

        return;
    }

    protected void engineUpdate(byte) throws java.security.SignatureException
    {
        org.bouncycastle.crypto.Digest $r1;
        byte b0;
        org.bouncycastle.jce.provider.JDKDSASigner r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        b0 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void update(byte)>(b0);

        return;
    }

    protected void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        byte[] r1;
        org.bouncycastle.jce.provider.JDKDSASigner r0;
        int i0, i1;
        org.bouncycastle.crypto.Digest $r2;

        r0 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    protected byte[] engineSign() throws java.security.SignatureException
    {
        byte[] r2, $r8;
        java.security.SignatureException $r10;
        java.math.BigInteger[] $r5;
        org.bouncycastle.crypto.Digest $r1, $r3;
        java.lang.Exception $r9;
        org.bouncycastle.jce.provider.JDKDSASigner r0;
        int $i0;
        java.math.BigInteger $r6, $r7;
        org.bouncycastle.crypto.DSA $r4;
        java.lang.String $r11;

        r0 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        $r1 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r3 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

     label1:
        $r4 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.DSA signer>;

        $r5 = interfaceinvoke $r4.<org.bouncycastle.crypto.DSA: java.math.BigInteger[] generateSignature(byte[])>(r2);

        $r7 = $r5[0];

        $r6 = $r5[1];

        $r8 = specialinvoke r0.<org.bouncycastle.jce.provider.JDKDSASigner: byte[] derEncode(java.math.BigInteger,java.math.BigInteger)>($r7, $r6);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.security.SignatureException;

        $r11 = virtualinvoke $r9.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r10.<java.security.SignatureException: void <init>(java.lang.String)>($r11);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        byte[] r2, r4;
        java.security.SignatureException $r10;
        java.math.BigInteger[] $r5;
        org.bouncycastle.crypto.Digest $r1, $r3;
        java.lang.Exception $r9;
        org.bouncycastle.jce.provider.JDKDSASigner r0;
        int $i0;
        java.math.BigInteger $r6, $r7;
        org.bouncycastle.crypto.DSA $r8;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r4 := @parameter0: byte[];

        $r1 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r3 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

     label1:
        $r5 = specialinvoke r0.<org.bouncycastle.jce.provider.JDKDSASigner: java.math.BigInteger[] derDecode(byte[])>(r4);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.security.SignatureException;

        specialinvoke $r10.<java.security.SignatureException: void <init>(java.lang.String)>("error decoding signature bytes.");

        throw $r10;

     label4:
        $r8 = r0.<org.bouncycastle.jce.provider.JDKDSASigner: org.bouncycastle.crypto.DSA signer>;

        $r7 = $r5[0];

        $r6 = $r5[1];

        $z0 = interfaceinvoke $r8.<org.bouncycastle.crypto.DSA: boolean verifySignature(byte[],java.math.BigInteger,java.math.BigInteger)>(r2, $r7, $r6);

        return $z0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec)
    {
        java.lang.UnsupportedOperationException $r0;
        java.security.spec.AlgorithmParameterSpec r2;
        org.bouncycastle.jce.provider.JDKDSASigner r1;

        r1 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r2 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r0;
    }

    protected void engineSetParameter(java.lang.String, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.bouncycastle.jce.provider.JDKDSASigner r1;
        java.lang.Object r3;
        java.lang.String r2;

        r1 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r0;
    }

    protected java.lang.Object engineGetParameter(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        org.bouncycastle.jce.provider.JDKDSASigner r1;

        r1 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r0;
    }

    private byte[] derEncode(java.math.BigInteger, java.math.BigInteger) throws java.io.IOException
    {
        byte[] $r6;
        org.bouncycastle.asn1.DERInteger $r1, $r3;
        org.bouncycastle.asn1.DERSequence $r5;
        org.bouncycastle.jce.provider.JDKDSASigner r7;
        java.math.BigInteger r2, r4;
        org.bouncycastle.asn1.DERInteger[] $r0;

        r7 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r2 := @parameter0: java.math.BigInteger;

        r4 := @parameter1: java.math.BigInteger;

        $r0 = newarray (org.bouncycastle.asn1.DERInteger)[2];

        $r1 = new org.bouncycastle.asn1.DERInteger;

        specialinvoke $r1.<org.bouncycastle.asn1.DERInteger: void <init>(java.math.BigInteger)>(r2);

        $r0[0] = $r1;

        $r3 = new org.bouncycastle.asn1.DERInteger;

        specialinvoke $r3.<org.bouncycastle.asn1.DERInteger: void <init>(java.math.BigInteger)>(r4);

        $r0[1] = $r3;

        $r5 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r5.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.ASN1Encodable[])>($r0);

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        return $r6;
    }

    private java.math.BigInteger[] derDecode(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.bouncycastle.asn1.ASN1Sequence r2;
        org.bouncycastle.asn1.DEREncodable $r4, $r7;
        java.math.BigInteger[] $r3;
        org.bouncycastle.asn1.DERInteger $r5, $r8;
        org.bouncycastle.jce.provider.JDKDSASigner r10;
        java.math.BigInteger $r6, $r9;
        org.bouncycastle.asn1.ASN1Object $r1;

        r10 := @this: org.bouncycastle.jce.provider.JDKDSASigner;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>(r0);

        r2 = (org.bouncycastle.asn1.ASN1Sequence) $r1;

        $r3 = newarray (java.math.BigInteger)[2];

        $r4 = virtualinvoke r2.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r5 = (org.bouncycastle.asn1.DERInteger) $r4;

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r3[0] = $r6;

        $r7 = virtualinvoke r2.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(1);

        $r8 = (org.bouncycastle.asn1.DERInteger) $r7;

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r3[1] = $r9;

        return $r3;
    }
}
