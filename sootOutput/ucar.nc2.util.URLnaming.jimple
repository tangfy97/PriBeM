public class ucar.nc2.util.URLnaming extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        ucar.nc2.util.URLnaming r0;

        r0 := @this: ucar.nc2.util.URLnaming;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String escapeQueryNew(java.lang.String) throws java.net.URISyntaxException
    {
        java.lang.String $r0, $r2, r3;
        java.net.URI $r1;

        r3 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $r1 = new java.net.URI;

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URI: java.lang.String toASCIIString()>();

        return $r2;
    }

    public static java.lang.String escapeQuery(java.lang.String)
    {
        org.apache.commons.httpclient.URIException $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r0, $r1, $r2, $r5, r8, r9;

        r8 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        r9 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("?");

        if $i0 <= 0 goto label4;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i1 - 2;

        if $i0 >= $i2 goto label4;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("%");

        if $i3 >= 0 goto label4;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeQuery(java.lang.String)>($r1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<org.apache.commons.httpclient.URIException: void printStackTrace()>();

     label4:
        return r9;

        catch org.apache.commons.httpclient.URIException from label1 to label2 with label3;
    }

    public static java.lang.String resolve(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i6, $i7;
        java.lang.String r0, r1, $r5, $r8, $r11, $r15;
        java.net.URI $r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;
        char $c4, $c5;
        java.lang.Exception $r16;
        java.lang.StringBuilder $r9, $r10, $r13, $r14, $r17, $r18;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return r1;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z0 == 0 goto label03;

        return r1;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z1 == 0 goto label11;

     label04:
        $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1);

        $z3 = virtualinvoke $r6.<java.net.URI: boolean isAbsolute()>();

        if $z3 == 0 goto label06;

     label05:
        return r1;

     label06:
        goto label08;

     label07:
        $r16 := @caughtexception;

     label08:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label09;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i6 = (int) $c5;

        if $i6 != 35 goto label09;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label09:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label10;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i7 = (int) $c4;

        if $i7 != 47 goto label10;

        return r1;

     label10:
        $i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        if $i2 <= 0 goto label11;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $i3 = $i2 + 1;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label11:
        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1);

        $z2 = virtualinvoke $r2.<java.net.URI: boolean isAbsolute()>();

        if $z2 == 0 goto label12;

        return r1;

     label12:
        $r3 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.net.URI: java.net.URI resolve(java.net.URI)>($r2);

        $r5 = virtualinvoke $r4.<java.net.URI: java.lang.String toASCIIString()>();

        return $r5;

        catch java.lang.Exception from label04 to label05 with label07;
    }

    public static java.lang.String canonicalizeRead(java.lang.String)
    {
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r0, $r6;
        java.net.URI $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label3;

     label2:
        return r0;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label5:
        return r0;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static java.lang.String canonicalizeWrite(java.lang.String)
    {
        java.lang.Exception $r6;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r0, $r5;
        java.net.URI $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label3;

     label2:
        return r0;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static java.lang.String resolveFile(java.lang.String, java.lang.String)
    {
        java.io.File $r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r0, r2, $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return r2;

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean isAbsolute()>();

        if $z0 == 0 goto label2;

        return r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static void test(java.lang.String)
    {
        java.net.URI $r2;
        java.lang.StringBuilder $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;
        java.lang.String r0, $r6, $r8, $r12, $r14, $r18, $r20, $r24, $r26, $r30, $r32;
        java.io.PrintStream $r1, $r4, $r10, $r16, $r22, $r28, $r33;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r0);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scheme=");

        $r6 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getSchemeSpecificPart=");

        $r12 = virtualinvoke $r2.<java.net.URI: java.lang.String getSchemeSpecificPart()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getAuthority=");

        $r18 = virtualinvoke $r2.<java.net.URI: java.lang.String getAuthority()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getPath=");

        $r24 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getQuery=");

        $r30 = virtualinvoke $r2.<java.net.URI: java.lang.String getQuery()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $r33 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r33.<java.io.PrintStream: void println()>();

        return;
    }

    public static void main1(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("file:/test/me/", "blank in dir", "file:/test/me/blank in dir");

        return;
    }

    public static void main2(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.util.URLnaming: void test(java.lang.String)>("file:test/dir");

        staticinvoke <ucar.nc2.util.URLnaming: void test(java.lang.String)>("file:/test/dir");

        staticinvoke <ucar.nc2.util.URLnaming: void test(java.lang.String)>("file://test/dir");

        staticinvoke <ucar.nc2.util.URLnaming: void test(java.lang.String)>("file:///test/dir");

        staticinvoke <ucar.nc2.util.URLnaming: void test(java.lang.String)>("file:C:/Program Files (x86)/Apache Software Foundation/Tomcat 5.0/content/thredds/cache");

        staticinvoke <ucar.nc2.util.URLnaming: void test(java.lang.String)>("file:C:\\Program Files (x86)\\Apache Software Foundation\\Tomcat 5.0\\content\\thredds\\cache");

        staticinvoke <ucar.nc2.util.URLnaming: void test(java.lang.String)>("http://localhost:8080/thredds/catalog.html?hi=lo");

        return;
    }

    private static void testResolve(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.AssertionError $r20;
        java.lang.String r3, $r5, r9, $r11, $r15, $r17, r18, $r19;
        boolean $z0, $z1;
        java.io.PrintStream $r1, $r7, $r13;
        java.lang.StringBuilder $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        r3 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        r18 := @parameter2: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nbase= ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rel= ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolve= ");

        $r15 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String resolve(java.lang.String,java.lang.String)>(r3, r9);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        if r18 == null goto label1;

        $z0 = <ucar.nc2.util.URLnaming: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r19 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String resolve(java.lang.String,java.lang.String)>(r3, r9);

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z1 != 0 goto label1;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label1:
        return;
    }

    public static void main3(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("http://test/me/", "wanna", "http://test/me/wanna");

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("http://test/me/", "/wanna", "http://test/wanna");

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("file:/test/me/", "wanna", "file:/test/me/wanna");

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("file:/test/me/", "/wanna", "/wanna");

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("file://test/me/", "http:/wanna", "http:/wanna");

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("file://test/me/", "file:/wanna", "file:/wanna");

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("file://test/me/", "C:/wanna", "C:/wanna");

        staticinvoke <ucar.nc2.util.URLnaming: void testResolve(java.lang.String,java.lang.String,java.lang.String)>("http://test/me/", "file:wanna", "file:wanna");

        return;
    }

    public static void main4(java.lang.String[])
    {
        java.net.URL $r0;
        java.lang.String[] r4;
        java.net.URI $r1;
        java.io.File $r2;
        java.lang.Exception $r3;

        r4 := @parameter0: java.lang.String[];

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>("file:src/test/data/ncml/nc/");

        $r1 = new java.net.URI;

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>("file:src/test/data/ncml/nc/");

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.net.URI)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void main5(java.lang.String[]) throws java.net.URISyntaxException
    {
        java.lang.String[] r1;
        java.net.URI $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.net.URI;

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>("http://test.opendap.org:8080/dods/dts/test.53.dods?types[0:1:9]");

        return;
    }

    public static void main(java.lang.String[]) throws java.net.URISyntaxException
    {
        java.io.PrintStream $r2, $r4, $r7, $r10;
        java.lang.Object[] $r1, $r3, $r6, $r9;
        java.lang.String[] r12;
        java.net.URI $r0;
        java.lang.String $r5, $r8, $r11;

        r12 := @parameter0: java.lang.String[];

        $r0 = new java.net.URI;

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>("http://test.opendap.org:8080/dods/dts/test.53.dods?types[0:1:9]");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r0;

        virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("uri = %s%n", $r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke $r0.<java.net.URI: java.lang.String toASCIIString()>();

        $r3[0] = $r5;

        virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("uri.toASCIIString = %s%n", $r3);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String escapeQueryNew(java.lang.String)>("http://test.opendap.org:8080/dods/dts/test.53.dods?types[0:1:9]");

        $r6[0] = $r8;

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("escapeQueryNew = %s%n", $r6);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String escapeQuery(java.lang.String)>("http://test.opendap.org:8080/dods/dts/test.53.dods?types[0:1:9]");

        $r9[0] = $r11;

        virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("escapeQueryOld = %s%n", $r9);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/util/URLnaming;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.util.URLnaming: boolean $assertionsDisabled> = $z1;

        return;
    }
}
