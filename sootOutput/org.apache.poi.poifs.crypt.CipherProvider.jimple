public final enum class org.apache.poi.poifs.crypt.CipherProvider extends java.lang.Enum
{
    public static final enum org.apache.poi.poifs.crypt.CipherProvider rc4;
    public static final enum org.apache.poi.poifs.crypt.CipherProvider aes;
    public final java.lang.String jceId;
    public final int ecmaId;
    private static final org.apache.poi.poifs.crypt.CipherProvider[] $VALUES;

    public static org.apache.poi.poifs.crypt.CipherProvider[] values()
    {
        org.apache.poi.poifs.crypt.CipherProvider[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.poifs.crypt.CipherProvider[]) $r1;

        return $r2;
    }

    public static org.apache.poi.poifs.crypt.CipherProvider valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.poi.poifs.crypt.CipherProvider $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/poifs/crypt/CipherProvider;", r0);

        $r2 = (org.apache.poi.poifs.crypt.CipherProvider) $r1;

        return $r2;
    }

    public static org.apache.poi.poifs.crypt.CipherProvider fromEcmaId(int)
    {
        org.apache.poi.poifs.crypt.CipherProvider[] $r0;
        org.apache.poi.EncryptedDocumentException $r1;
        int i0, i1, $i2, i3;
        org.apache.poi.poifs.crypt.CipherProvider r2;

        i1 := @parameter0: int;

        $r0 = staticinvoke <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r2 = $r0[i3];

        $i2 = r2.<org.apache.poi.poifs.crypt.CipherProvider: int ecmaId>;

        if $i2 != i1 goto label2;

        return r2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r1.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("cipher provider not found");

        throw $r1;
    }

    private void <init>(java.lang.String, int, java.lang.String, int)
    {
        int i0, i1;
        java.lang.String r1, r2;
        org.apache.poi.poifs.crypt.CipherProvider r0;

        r0 := @this: org.apache.poi.poifs.crypt.CipherProvider;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.poi.poifs.crypt.CipherProvider: java.lang.String jceId> = r2;

        r0.<org.apache.poi.poifs.crypt.CipherProvider: int ecmaId> = i1;

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.poifs.crypt.CipherProvider[] $r2;
        org.apache.poi.poifs.crypt.CipherProvider $r0, $r1, $r3, $r4;

        $r0 = new org.apache.poi.poifs.crypt.CipherProvider;

        specialinvoke $r0.<org.apache.poi.poifs.crypt.CipherProvider: void <init>(java.lang.String,int,java.lang.String,int)>("rc4", 0, "RC4", 1);

        <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider rc4> = $r0;

        $r1 = new org.apache.poi.poifs.crypt.CipherProvider;

        specialinvoke $r1.<org.apache.poi.poifs.crypt.CipherProvider: void <init>(java.lang.String,int,java.lang.String,int)>("aes", 1, "AES", 24);

        <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider aes> = $r1;

        $r2 = newarray (org.apache.poi.poifs.crypt.CipherProvider)[2];

        $r3 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider rc4>;

        $r2[0] = $r3;

        $r4 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider aes>;

        $r2[1] = $r4;

        <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider[] $VALUES> = $r2;

        return;
    }
}
