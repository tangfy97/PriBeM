public class org.codehaus.groovy.tools.shell.commands.EditCommand extends org.codehaus.groovy.tools.shell.CommandSupport
{
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697127;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$io$File;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport;
    static java.lang.Class class$java$lang$System;

    public void <init>(org.codehaus.groovy.tools.shell.Shell)
    {
        java.lang.Object[] $r15;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r10;
        java.lang.IllegalArgumentException $r11;
        org.codehaus.groovy.tools.shell.commands.EditCommand r4;
        java.lang.Class $r0, $r1, $r3, $r13, $r14, $r16;
        java.lang.Object $r5, $r7, $r9, $r12;
        org.codehaus.groovy.tools.shell.Shell r2, $r6;

        r4 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r2 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.EditCommand");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0> = $r13;

        goto label02;

     label01:
        $r13 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

     label02:
        $r1 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label04;

     label03:
        $r14 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = r2;

        $r15[1] = "edit";

        $r15[2] = "\\e";

        $r3 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

        if $r3 != null goto label05;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport> = $r16;

        goto label06;

     label05:
        $r16 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r15, 1, $r16);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r12 = $r15[0];

        $r15 = (java.lang.Object[]) $r12;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            default: goto label09;
        };

     label08:
        $r5 = $r15[0];

        $r6 = (org.codehaus.groovy.tools.shell.Shell) $r5;

        $r7 = $r15[1];

        $r8 = (java.lang.String) $r7;

        $r9 = $r15[2];

        $r10 = (java.lang.String) $r9;

        specialinvoke r4.<org.codehaus.groovy.tools.shell.CommandSupport: void <init>(org.codehaus.groovy.tools.shell.Shell,java.lang.String,java.lang.String)>($r6, $r8, $r10);

        goto label10;

     label09:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r11;

     label10:
        return;
    }

    private java.lang.String getEditorCommand()
    {
        java.lang.Object[] $r4, $r10;
        java.lang.String $r8;
        boolean $z0, $z1;
        org.codehaus.groovy.tools.shell.commands.EditCommand r9;
        java.lang.Class $r0, r1, $r2, $r3, $r6, $r11, $r12, $r13, $r14;
        java.lang.Object $r5, $r7;

        r9 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.EditCommand");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0> = $r11;

        goto label02;

     label01:
        $r11 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

     label02:
        r1 = $r11;

        $r2 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label04;

     label03:
        $r12 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$System>;

        if $r3 != null goto label05;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$System> = $r13;

        goto label06;

     label05:
        $r13 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$System>;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "EDITOR";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r13, "getenv", $r4);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z0 != 0 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        if $z1 == 0 goto label09;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "Unable to determine which editor to use; check $EDITOR";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r9, "fail", $r10);

        goto label09;

     label09:
        $r6 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$String>;

        if $r6 != null goto label10;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$String> = $r14;

        goto label11;

     label10:
        $r14 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$String>;

     label11:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, $r14);

        $r8 = (java.lang.String) $r7;

        return $r8;
    }

    public java.lang.Object execute(java.util.List)
    {
        org.codehaus.groovy.runtime.GStringImpl $r14, $r20, $r26;
        java.util.List r5;
        org.codehaus.groovy.tools.shell.commands.EditCommand r3;
        java.lang.Throwable $r34;
        java.lang.Object[] $r4, $r7, $r9, $r11, $r15, $r19, $r21, $r25, $r27, $r29;
        java.lang.String[] $r17, $r22, $r28;
        org.codehaus.groovy.tools.shell.commands.EditCommand$_execute_closure1 $r30;
        java.lang.Class $r0, r1, $r2, $r6, $r31, $r35, $r36, $r37, $r38;
        java.lang.Object $r8, $r10, $r12, $r13, $r16, $r18, $r23, $r24, $r32, $r33;

        r3 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r5 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.EditCommand");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0> = $r35;

        goto label02;

     label01:
        $r35 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

     label02:
        r1 = $r35;

        $r2 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r36 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass> = $r36;

        goto label04;

     label03:
        $r36 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "assertNoArguments", $r4);

        $r6 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$io$File>;

        if $r6 != null goto label05;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$io$File> = $r37;

        goto label06;

     label05:
        $r37 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$io$File>;

     label06:
        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "groovysh-buffer";

        $r7[1] = ".groovy";

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r37, "createTempFile", $r7);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r8, "deleteOnExit");

     label07:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "buffer");

        $r11 = newarray (java.lang.Object)[1];

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "NEWLINE");

        $r11[0] = $r12;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r10, "join", $r11);

        $r9[0] = $r13;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r8, "write", $r9);

        $r14 = new org.codehaus.groovy.runtime.GStringImpl;

        $r15 = newarray (java.lang.Object)[2];

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "editorCommand");

        $r15[0] = $r16;

        $r15[1] = $r8;

        $r17 = newarray (java.lang.String)[3];

        $r17[0] = "";

        $r17[1] = " ";

        $r17[2] = "";

        specialinvoke $r14.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r15, $r17);

        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "log");

        $r19 = newarray (java.lang.Object)[1];

        $r20 = new org.codehaus.groovy.runtime.GStringImpl;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = $r14;

        $r22 = newarray (java.lang.String)[2];

        $r22[0] = "Executing: ";

        $r22[1] = "";

        specialinvoke $r20.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r21, $r22);

        $r19[0] = $r20;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r18, "debug", $r19);

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r14, "execute");

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "log");

        $r25 = newarray (java.lang.Object)[1];

        $r26 = new org.codehaus.groovy.runtime.GStringImpl;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = $r23;

        $r28 = newarray (java.lang.String)[2];

        $r28[0] = "Waiting for process: ";

        $r28[1] = "";

        specialinvoke $r26.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r27, $r28);

        $r25[0] = $r26;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r24, "debug", $r25);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r23, "waitFor");

        $r29 = newarray (java.lang.Object)[1];

        $r30 = new org.codehaus.groovy.tools.shell.commands.EditCommand$_execute_closure1;

        specialinvoke $r30.<org.codehaus.groovy.tools.shell.commands.EditCommand$_execute_closure1: void <init>(java.lang.Object,java.lang.Object)>(r3, r3);

        $r29[0] = $r30;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r8, "eachLine", $r29);

        goto label08;

     label08:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r8, "delete");

        goto label10;

     label09:
        $r34 := @caughtexception;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r8, "delete");

        throw $r34;

     label10:
        $r31 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$Object>;

        if $r31 != null goto label11;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$Object> = $r38;

        goto label12;

     label11:
        $r38 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$java$lang$Object>;

     label12:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r38);

        $r33 = (java.lang.Object) $r32;

        return $r33;

        catch java.lang.Throwable from label07 to label08 with label09;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.EditCommand");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697127L);

        $r3 = (java.lang.Long) $r2;

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.Long __timeStamp__239_neverHappen1239119697127> = $r5;

        return;
    }

    java.lang.String this$3$getEditorCommand()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.commands.EditCommand: java.lang.String getEditorCommand()>();

        return $r1;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    org.codehaus.groovy.tools.shell.BufferManager super$2$getBuffers()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        org.codehaus.groovy.tools.shell.BufferManager $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.BufferManager getBuffers()>();

        return $r1;
    }

    java.lang.String super$2$getHelp()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getHelp()>();

        return $r1;
    }

    jline.History super$2$getHistory()
    {
        jline.History $r1;
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.History getHistory()>();

        return $r1;
    }

    java.util.List super$2$createCompletors()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List createCompletors()>();

        return $r1;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        groovy.lang.MetaClass $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        groovy.lang.MetaClass r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.util.Map super$2$getVariables()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.Map getVariables()>();

        return $r1;
    }

    java.util.List super$2$getBuffer()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getBuffer()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.String super$2$getDescription()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getDescription()>();

        return $r1;
    }

    java.lang.String super$2$getShortcut()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getShortcut()>();

        return $r1;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$2$getName()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getName()>();

        return $r1;
    }

    void super$2$fail(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    void super$2$fail(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String)>(r1);

        return;
    }

    void super$2$assertNoArguments(java.util.List)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.util.List r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void assertNoArguments(java.util.List)>(r1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$alias(java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void alias(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$2$setHidden(boolean)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setHidden(boolean)>(z0);

        return;
    }

    jline.Completor super$2$getCompletor()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        jline.Completor $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.Completor getCompletor()>();

        return $r1;
    }

    java.lang.Object super$1$clone()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.Object $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    java.lang.String super$2$getUsage()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getUsage()>();

        return $r1;
    }

    groovy.lang.GroovyClassLoader super$2$getClassLoader()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        groovy.lang.GroovyClassLoader $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.GroovyClassLoader getClassLoader()>();

        return $r1;
    }

    boolean super$2$isHidden()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean isHidden()>();

        return $z0;
    }

    void super$1$wait(long, int)
    {
        int i1;
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    boolean super$2$getHidden()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean getHidden()>();

        return $z0;
    }

    groovy.lang.Binding super$2$getBinding()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        groovy.lang.Binding $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.Binding getBinding()>();

        return $r1;
    }

    java.util.List super$2$getImports()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getImports()>();

        return $r1;
    }

    java.util.List super$2$getAliases()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getAliases()>();

        return $r1;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.EditCommand r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.EditCommand;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
