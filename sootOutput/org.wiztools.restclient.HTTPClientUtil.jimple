class org.wiztools.restclient.HTTPClientUtil extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;

    void <init>()
    {
        org.wiztools.restclient.HTTPClientUtil r0;

        r0 := @this: org.wiztools.restclient.HTTPClientUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void appendHttpEntity(java.lang.StringBuilder, org.apache.http.HttpEntity)
    {
        java.io.PrintStream $r4;
        org.apache.http.HttpEntity r0;
        java.io.IOException $r10;
        java.util.logging.Logger $r11;
        org.apache.http.Header $r2;
        java.io.InputStreamReader $r6;
        java.nio.charset.Charset $r7;
        java.lang.StringBuilder r9;
        java.lang.String $r3, $r8, $r12;
        java.io.BufferedReader $r5;
        java.io.InputStream $r1;

        r9 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: org.apache.http.HttpEntity;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r2 = interfaceinvoke r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.Header: java.lang.String getValue()>();

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        $r7 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r3);

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r1, $r7);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label2:
        $r8 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r8 == null goto label3;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label2;

     label3:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = <org.wiztools.restclient.HTTPClientUtil: java.util.logging.Logger LOG>;

        $r12 = virtualinvoke $r10.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r11.<java.util.logging.Logger: void severe(java.lang.String)>($r12);

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    static java.lang.String getHTTPRequestTrace(org.apache.http.HttpRequest)
    {
        org.apache.http.Header r5;
        org.apache.http.RequestLine $r2;
        int i0, i1;
        java.lang.String $r6, $r9, $r12;
        boolean $z0;
        org.apache.http.Header[] $r3;
        org.apache.http.HttpEntityEnclosingRequest r11;
        org.apache.http.HttpEntity $r4;
        org.apache.http.HttpRequest r1;
        java.lang.StringBuilder $r0, $r7, $r8, $r10;

        r1 := @parameter0: org.apache.http.HttpRequest;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r3 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.Header[] getAllHeaders()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = $r3[i1];

        $r6 = interfaceinvoke r5.<org.apache.http.Header: java.lang.String getName()>();

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = interfaceinvoke r5.<org.apache.http.Header: java.lang.String getValue()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $z0 = r1 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z0 == 0 goto label3;

        r11 = (org.apache.http.HttpEntityEnclosingRequest) r1;

        $r4 = interfaceinvoke r11.<org.apache.http.HttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>();

        if $r4 == null goto label3;

        staticinvoke <org.wiztools.restclient.HTTPClientUtil: void appendHttpEntity(java.lang.StringBuilder,org.apache.http.HttpEntity)>($r0, $r4);

     label3:
        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    static java.lang.String getHTTPResponseTrace(org.apache.http.HttpResponse)
    {
        org.apache.http.Header[] $r4;
        org.apache.http.HttpEntity $r5;
        org.apache.http.StatusLine $r2;
        org.apache.http.Header r7;
        int i0, i1;
        org.apache.http.HttpResponse r1;
        java.lang.StringBuilder $r0, $r3, $r9, $r10, $r12;
        java.lang.String $r6, $r8, $r11;

        r1 := @parameter0: org.apache.http.HttpResponse;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r4 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = $r4[i1];

        $r8 = interfaceinvoke r7.<org.apache.http.Header: java.lang.String getName()>();

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = interfaceinvoke r7.<org.apache.http.Header: java.lang.String getValue()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r5 == null goto label3;

        staticinvoke <org.wiztools.restclient.HTTPClientUtil: void appendHttpEntity(java.lang.StringBuilder,org.apache.http.HttpEntity)>($r0, $r5);

     label3:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static org.apache.http.entity.AbstractHttpEntity getEntity(org.wiztools.restclient.bean.ReqEntitySimple) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        byte[] $r11;
        long $l0;
        org.apache.http.entity.ByteArrayEntity $r9;
        java.nio.charset.Charset $r17;
        java.lang.String $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.wiztools.restclient.bean.ReqEntityFile $r3;
        org.apache.http.entity.AbstractHttpEntity r18;
        org.wiztools.restclient.bean.ReqEntityString $r13;
        org.apache.http.entity.ContentType r19;
        org.apache.http.entity.FileEntity $r2;
        org.apache.http.entity.StringEntity $r12;
        org.wiztools.restclient.bean.ReqEntitySimple r0;
        java.io.File $r4;
        org.wiztools.restclient.bean.ReqEntityByteArray $r10;
        org.wiztools.restclient.bean.ReqEntityStream $r6, $r8;
        org.apache.http.entity.InputStreamEntity $r5;
        org.wiztools.restclient.bean.ContentType $r1, $r15;
        java.io.InputStream $r7;

        r0 := @parameter0: org.wiztools.restclient.bean.ReqEntitySimple;

        r18 = null;

        r19 = null;

        $r1 = interfaceinvoke r0.<org.wiztools.restclient.bean.ReqEntitySimple: org.wiztools.restclient.bean.ContentType getContentType()>();

        if $r1 == null goto label1;

        $r15 = interfaceinvoke r0.<org.wiztools.restclient.bean.ReqEntitySimple: org.wiztools.restclient.bean.ContentType getContentType()>();

        $r16 = interfaceinvoke $r15.<org.wiztools.restclient.bean.ContentType: java.lang.String getContentType()>();

        $r17 = interfaceinvoke $r15.<org.wiztools.restclient.bean.ContentType: java.nio.charset.Charset getCharset()>();

        r19 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>($r16, $r17);

     label1:
        $z0 = r0 instanceof org.wiztools.restclient.bean.ReqEntityString;

        if $z0 == 0 goto label2;

        $r12 = new org.apache.http.entity.StringEntity;

        $r13 = (org.wiztools.restclient.bean.ReqEntityString) r0;

        $r14 = interfaceinvoke $r13.<org.wiztools.restclient.bean.ReqEntityString: java.lang.String getBody()>();

        specialinvoke $r12.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,org.apache.http.entity.ContentType)>($r14, r19);

        r18 = $r12;

        goto label5;

     label2:
        $z1 = r0 instanceof org.wiztools.restclient.bean.ReqEntityByteArray;

        if $z1 == 0 goto label3;

        $r9 = new org.apache.http.entity.ByteArrayEntity;

        $r10 = (org.wiztools.restclient.bean.ReqEntityByteArray) r0;

        $r11 = interfaceinvoke $r10.<org.wiztools.restclient.bean.ReqEntityByteArray: byte[] getBody()>();

        specialinvoke $r9.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[],org.apache.http.entity.ContentType)>($r11, r19);

        r18 = $r9;

        goto label5;

     label3:
        $z2 = r0 instanceof org.wiztools.restclient.bean.ReqEntityStream;

        if $z2 == 0 goto label4;

        $r5 = new org.apache.http.entity.InputStreamEntity;

        $r6 = (org.wiztools.restclient.bean.ReqEntityStream) r0;

        $r7 = interfaceinvoke $r6.<org.wiztools.restclient.bean.ReqEntityStream: java.io.InputStream getBody()>();

        $r8 = (org.wiztools.restclient.bean.ReqEntityStream) r0;

        $l0 = interfaceinvoke $r8.<org.wiztools.restclient.bean.ReqEntityStream: long getLength()>();

        specialinvoke $r5.<org.apache.http.entity.InputStreamEntity: void <init>(java.io.InputStream,long,org.apache.http.entity.ContentType)>($r7, $l0, r19);

        r18 = $r5;

        goto label5;

     label4:
        $z3 = r0 instanceof org.wiztools.restclient.bean.ReqEntityFile;

        if $z3 == 0 goto label5;

        $r2 = new org.apache.http.entity.FileEntity;

        $r3 = (org.wiztools.restclient.bean.ReqEntityFile) r0;

        $r4 = interfaceinvoke $r3.<org.wiztools.restclient.bean.ReqEntityFile: java.io.File getBody()>();

        specialinvoke $r2.<org.apache.http.entity.FileEntity: void <init>(java.io.File,org.apache.http.entity.ContentType)>($r4, r19);

        r18 = $r2;

     label5:
        return r18;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/wiztools/restclient/HTTPClientUtil;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.wiztools.restclient.HTTPClientUtil: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
