public class org.apache.lucene.util.automaton.CharacterRunAutomaton extends org.apache.lucene.util.automaton.RunAutomaton
{

    public void <init>(org.apache.lucene.util.automaton.Automaton)
    {
        org.apache.lucene.util.automaton.Automaton r1;
        org.apache.lucene.util.automaton.CharacterRunAutomaton r0;

        r0 := @this: org.apache.lucene.util.automaton.CharacterRunAutomaton;

        r1 := @parameter0: org.apache.lucene.util.automaton.Automaton;

        specialinvoke r0.<org.apache.lucene.util.automaton.RunAutomaton: void <init>(org.apache.lucene.util.automaton.Automaton,int,boolean)>(r1, 1114111, 0);

        return;
    }

    public boolean run(java.lang.String)
    {
        boolean[] $r2;
        int $i0, $i1, $i2, $i3, i4, i5, $i7;
        java.lang.String r1;
        org.apache.lucene.util.automaton.CharacterRunAutomaton r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.automaton.CharacterRunAutomaton;

        r1 := @parameter0: java.lang.String;

        i4 = r0.<org.apache.lucene.util.automaton.CharacterRunAutomaton: int initial>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = 0;

     label1:
        if i5 >= $i0 goto label3;

        $i1 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(i5);

        $i2 = virtualinvoke r0.<org.apache.lucene.util.automaton.CharacterRunAutomaton: int step(int,int)>(i4, $i1);

        i4 = $i2;

        $i7 = (int) -1;

        if $i2 != $i7 goto label2;

        return 0;

     label2:
        $i3 = staticinvoke <java.lang.Character: int charCount(int)>($i1);

        i5 = i5 + $i3;

        goto label1;

     label3:
        $r2 = r0.<org.apache.lucene.util.automaton.CharacterRunAutomaton: boolean[] accept>;

        $z0 = $r2[i4];

        return $z0;
    }

    public boolean run(char[], int, int)
    {
        boolean[] $r1;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, $i9;
        char[] r2;
        org.apache.lucene.util.automaton.CharacterRunAutomaton r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.automaton.CharacterRunAutomaton;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i6 = r0.<org.apache.lucene.util.automaton.CharacterRunAutomaton: int initial>;

        i2 = i0 + i1;

        i7 = i0;

     label1:
        if i7 >= i2 goto label3;

        $i3 = staticinvoke <java.lang.Character: int codePointAt(char[],int,int)>(r2, i7, i2);

        $i4 = virtualinvoke r0.<org.apache.lucene.util.automaton.CharacterRunAutomaton: int step(int,int)>(i6, $i3);

        i6 = $i4;

        $i9 = (int) -1;

        if $i4 != $i9 goto label2;

        return 0;

     label2:
        $i5 = staticinvoke <java.lang.Character: int charCount(int)>($i3);

        i7 = i7 + $i5;

        goto label1;

     label3:
        $r1 = r0.<org.apache.lucene.util.automaton.CharacterRunAutomaton: boolean[] accept>;

        $z0 = $r1[i6];

        return $z0;
    }
}
