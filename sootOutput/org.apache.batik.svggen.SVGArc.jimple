public class org.apache.batik.svggen.SVGArc extends org.apache.batik.svggen.SVGGraphicObjectConverter
{
    private org.apache.batik.svggen.SVGLine svgLine;
    private org.apache.batik.svggen.SVGEllipse svgEllipse;

    public void <init>(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGArc r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r0 := @this: org.apache.batik.svggen.SVGArc;

        r1 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke r0.<org.apache.batik.svggen.SVGGraphicObjectConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r1);

        return;
    }

    public org.w3c.dom.Element toSVG(java.awt.geom.Arc2D)
    {
        byte $b0, $b1, $b2, $b3, $b5, $b6, $b7;
        org.w3c.dom.Document $r15;
        org.apache.batik.svggen.SVGGeneratorContext $r7, $r13, $r14;
        java.lang.StringBuffer $r33;
        java.lang.String $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        org.apache.batik.svggen.SVGLine $r3, $r4, $r30;
        java.awt.geom.Line2D$Double $r29;
        org.apache.batik.svggen.SVGEllipse $r9, $r10, $r32;
        java.awt.geom.Point2D $r18, $r19;
        org.apache.batik.svggen.SVGArc r2;
        java.awt.geom.Arc2D r0;
        int $i4, $i8, $i9, $i10, $i11, $i12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, $d19, d20, $d21, $d22;
        java.awt.geom.Ellipse2D$Double $r31;
        org.w3c.dom.Element $r5, $r11, $r16;

        r2 := @this: org.apache.batik.svggen.SVGArc;

        r0 := @parameter0: java.awt.geom.Arc2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Arc2D: double getAngleExtent()>();

        $d1 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getWidth()>();

        $d2 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getHeight()>();

        $b0 = $d1 cmpl 0.0;

        if $b0 == 0 goto label01;

        $b1 = $d2 cmpl 0.0;

        if $b1 != 0 goto label03;

     label01:
        $r29 = new java.awt.geom.Line2D$Double;

        $d3 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getX()>();

        $d4 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getY()>();

        $d5 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getX()>();

        $d6 = $d5 + $d1;

        $d7 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getY()>();

        $d8 = $d7 + $d2;

        specialinvoke $r29.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d3, $d4, $d6, $d8);

        $r3 = r2.<org.apache.batik.svggen.SVGArc: org.apache.batik.svggen.SVGLine svgLine>;

        if $r3 != null goto label02;

        $r30 = new org.apache.batik.svggen.SVGLine;

        $r7 = r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        specialinvoke $r30.<org.apache.batik.svggen.SVGLine: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>($r7);

        r2.<org.apache.batik.svggen.SVGArc: org.apache.batik.svggen.SVGLine svgLine> = $r30;

     label02:
        $r4 = r2.<org.apache.batik.svggen.SVGArc: org.apache.batik.svggen.SVGLine svgLine>;

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.SVGLine: org.w3c.dom.Element toSVG(java.awt.geom.Line2D)>($r29);

        return $r5;

     label03:
        $b2 = $d0 cmpl 360.0;

        $i8 = (int) $b2;

        if $i8 >= 0 goto label04;

        $b3 = $d0 cmpg -360.0;

        $i9 = (int) $b3;

        if $i9 > 0 goto label06;

     label04:
        $r31 = new java.awt.geom.Ellipse2D$Double;

        $d9 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getX()>();

        $d10 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getY()>();

        specialinvoke $r31.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($d9, $d10, $d1, $d2);

        $r9 = r2.<org.apache.batik.svggen.SVGArc: org.apache.batik.svggen.SVGEllipse svgEllipse>;

        if $r9 != null goto label05;

        $r32 = new org.apache.batik.svggen.SVGEllipse;

        $r13 = r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        specialinvoke $r32.<org.apache.batik.svggen.SVGEllipse: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>($r13);

        r2.<org.apache.batik.svggen.SVGArc: org.apache.batik.svggen.SVGEllipse svgEllipse> = $r32;

     label05:
        $r10 = r2.<org.apache.batik.svggen.SVGArc: org.apache.batik.svggen.SVGEllipse svgEllipse>;

        $r11 = virtualinvoke $r10.<org.apache.batik.svggen.SVGEllipse: org.w3c.dom.Element toSVG(java.awt.geom.Ellipse2D)>($r31);

        return $r11;

     label06:
        $r14 = r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r15 = $r14.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        $r16 = interfaceinvoke $r15.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "path");

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>(int)>(64);

        $r18 = virtualinvoke r0.<java.awt.geom.Arc2D: java.awt.geom.Point2D getStartPoint()>();

        $r19 = virtualinvoke r0.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $i4 = virtualinvoke r0.<java.awt.geom.Arc2D: int getArcType()>();

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("M");

        $d11 = virtualinvoke $r18.<java.awt.geom.Point2D: double getX()>();

        $r20 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>($d11);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $d12 = virtualinvoke $r18.<java.awt.geom.Point2D: double getY()>();

        $r21 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>($d12);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A");

        $d13 = $d1 / 2.0;

        $r22 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>($d13);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $d14 = $d2 / 2.0;

        $r23 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>($d14);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $b5 = $d0 cmpl 0.0;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label09;

        $b7 = $d0 cmpl 180.0;

        $i11 = (int) $b7;

        if $i11 <= 0 goto label07;

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

        goto label08;

     label07:
        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label08:
        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        goto label12;

     label09:
        $b6 = $d0 cmpg -180.0;

        $i12 = (int) $b6;

        if $i12 >= 0 goto label10;

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

        goto label11;

     label10:
        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label11:
        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

     label12:
        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $d21 = virtualinvoke $r19.<java.awt.geom.Point2D: double getX()>();

        $r26 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>($d21);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $d22 = virtualinvoke $r19.<java.awt.geom.Point2D: double getY()>();

        $r27 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>($d22);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        if $i4 != 1 goto label13;

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Z");

        goto label14;

     label13:
        if $i4 != 2 goto label14;

        $d15 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getX()>();

        $d16 = $d1 / 2.0;

        d17 = $d15 + $d16;

        $d18 = virtualinvoke r0.<java.awt.geom.RectangularShape: double getY()>();

        $d19 = $d2 / 2.0;

        d20 = $d18 + $d19;

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r24 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>(d17);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r25 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicObjectConverter: java.lang.String doubleString(double)>(d20);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Z");

     label14:
        $r28 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r16.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "d", $r28);

        return $r16;
    }
}
