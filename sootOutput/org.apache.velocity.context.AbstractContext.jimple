public abstract class org.apache.velocity.context.AbstractContext extends org.apache.velocity.context.InternalContextBase implements org.apache.velocity.context.Context
{
    private org.apache.velocity.context.Context innerContext;

    public abstract java.lang.Object internalGet(java.lang.String);

    public abstract java.lang.Object internalPut(java.lang.String, java.lang.Object);

    public abstract boolean internalContainsKey(java.lang.Object);

    public abstract java.lang.Object[] internalGetKeys();

    public abstract java.lang.Object internalRemove(java.lang.Object);

    public void <init>()
    {
        org.apache.velocity.context.AbstractContext r0;

        r0 := @this: org.apache.velocity.context.AbstractContext;

        specialinvoke r0.<org.apache.velocity.context.InternalContextBase: void <init>()>();

        r0.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext> = null;

        return;
    }

    public void <init>(org.apache.velocity.context.Context)
    {
        org.apache.velocity.context.InternalEventContext $r4;
        org.apache.velocity.context.Context r1, $r2, $r3;
        org.apache.velocity.app.event.EventCartridge $r5;
        org.apache.velocity.context.AbstractContext r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.context.AbstractContext;

        r1 := @parameter0: org.apache.velocity.context.Context;

        specialinvoke r0.<org.apache.velocity.context.InternalContextBase: void <init>()>();

        r0.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext> = null;

        r0.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext> = r1;

        $r2 = r0.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext>;

        $z0 = $r2 instanceof org.apache.velocity.context.InternalEventContext;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext>;

        $r4 = (org.apache.velocity.context.InternalEventContext) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.velocity.context.InternalEventContext: org.apache.velocity.app.event.EventCartridge getEventCartridge()>();

        virtualinvoke r0.<org.apache.velocity.context.AbstractContext: org.apache.velocity.app.event.EventCartridge attachEventCartridge(org.apache.velocity.app.event.EventCartridge)>($r5);

     label1:
        return;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        org.apache.velocity.context.AbstractContext r1;
        java.lang.Object r3, $r4;
        java.lang.String r0, $r2;

        r1 := @this: org.apache.velocity.context.AbstractContext;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String intern()>();

        $r4 = virtualinvoke r1.<org.apache.velocity.context.AbstractContext: java.lang.Object internalPut(java.lang.String,java.lang.Object)>($r2, r3);

        return $r4;
    }

    public java.lang.Object get(java.lang.String)
    {
        org.apache.velocity.context.Context $r3, $r4;
        org.apache.velocity.context.AbstractContext r1;
        java.lang.Object $r2, r5;
        java.lang.String r0;

        r1 := @this: org.apache.velocity.context.AbstractContext;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<org.apache.velocity.context.AbstractContext: java.lang.Object internalGet(java.lang.String)>(r0);

        r5 = $r2;

        if $r2 != null goto label2;

        $r3 = r1.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext>;

        if $r3 == null goto label2;

        $r4 = r1.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext>;

        r5 = interfaceinvoke $r4.<org.apache.velocity.context.Context: java.lang.Object get(java.lang.String)>(r0);

     label2:
        return r5;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.velocity.context.Context $r2, $r3;
        org.apache.velocity.context.AbstractContext r1;
        java.lang.Object r0;
        boolean $z0, z1;

        r1 := @this: org.apache.velocity.context.AbstractContext;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<org.apache.velocity.context.AbstractContext: boolean internalContainsKey(java.lang.Object)>(r0);

        z1 = $z0;

        if $z0 != 0 goto label2;

        $r2 = r1.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext>;

        if $r2 == null goto label2;

        $r3 = r1.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext>;

        z1 = interfaceinvoke $r3.<org.apache.velocity.context.Context: boolean containsKey(java.lang.Object)>(r0);

     label2:
        return z1;
    }

    public java.lang.Object[] getKeys()
    {
        org.apache.velocity.context.AbstractContext r0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.velocity.context.AbstractContext;

        $r1 = virtualinvoke r0.<org.apache.velocity.context.AbstractContext: java.lang.Object[] internalGetKeys()>();

        return $r1;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.velocity.context.AbstractContext r1;
        java.lang.Object r0, $r2;

        r1 := @this: org.apache.velocity.context.AbstractContext;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<org.apache.velocity.context.AbstractContext: java.lang.Object internalRemove(java.lang.Object)>(r0);

        return $r2;
    }

    public org.apache.velocity.context.Context getChainedContext()
    {
        org.apache.velocity.context.AbstractContext r0;
        org.apache.velocity.context.Context $r1;

        r0 := @this: org.apache.velocity.context.AbstractContext;

        $r1 = r0.<org.apache.velocity.context.AbstractContext: org.apache.velocity.context.Context innerContext>;

        return $r1;
    }
}
