public class com.hp.hpl.jena.graph.Node_Literal extends com.hp.hpl.jena.graph.Node_Concrete
{

    void <init>(java.lang.Object)
    {
        com.hp.hpl.jena.graph.Node_Literal r0;
        java.lang.Object r1;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.hp.hpl.jena.graph.Node_Concrete: void <init>(java.lang.Object)>(r1);

        return;
    }

    public com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r2;
        com.hp.hpl.jena.graph.Node_Literal r0;
        java.lang.Object $r1;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = r0.<com.hp.hpl.jena.graph.Node_Literal: java.lang.Object label>;

        $r2 = (com.hp.hpl.jena.graph.impl.LiteralLabel) $r1;

        return $r2;
    }

    public final java.lang.Object getLiteralValue()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.graph.Node_Literal r0;
        java.lang.Object $r2;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getValue()>();

        return $r2;
    }

    public final java.lang.String getLiteralLexicalForm()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.graph.Node_Literal r0;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getLexicalForm()>();

        return $r2;
    }

    public final java.lang.String getLiteralLanguage()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.graph.Node_Literal r0;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String language()>();

        return $r2;
    }

    public final java.lang.String getLiteralDatatypeURI()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.graph.Node_Literal r0;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getDatatypeURI()>();

        return $r2;
    }

    public final com.hp.hpl.jena.datatypes.RDFDatatype getLiteralDatatype()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.graph.Node_Literal r0;
        com.hp.hpl.jena.datatypes.RDFDatatype $r2;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: com.hp.hpl.jena.datatypes.RDFDatatype getDatatype()>();

        return $r2;
    }

    public final boolean getLiteralIsXML()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.graph.Node_Literal r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: boolean isXML()>();

        return $z0;
    }

    public java.lang.String toString(com.hp.hpl.jena.shared.PrefixMapping, boolean)
    {
        com.hp.hpl.jena.graph.Node_Literal r0;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        com.hp.hpl.jena.shared.PrefixMapping r4;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        r4 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.hp.hpl.jena.graph.Node_Literal: java.lang.Object label>;

        $r2 = (com.hp.hpl.jena.graph.impl.LiteralLabel) $r1;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String toString(boolean)>(z0);

        return $r3;
    }

    public boolean isLiteral()
    {
        com.hp.hpl.jena.graph.Node_Literal r0;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        return 1;
    }

    public java.lang.Object getIndexingValue()
    {
        com.hp.hpl.jena.graph.impl.LiteralLabel $r1;
        com.hp.hpl.jena.graph.Node_Literal r0;
        java.lang.Object $r2;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getIndexingValue()>();

        return $r2;
    }

    public java.lang.Object visitWith(com.hp.hpl.jena.graph.NodeVisitor)
    {
        com.hp.hpl.jena.graph.NodeVisitor r0;
        com.hp.hpl.jena.graph.Node_Literal r1;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r2;
        java.lang.Object $r3;

        r1 := @this: com.hp.hpl.jena.graph.Node_Literal;

        r0 := @parameter0: com.hp.hpl.jena.graph.NodeVisitor;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.graph.NodeVisitor: java.lang.Object visitLiteral(com.hp.hpl.jena.graph.Node_Literal,com.hp.hpl.jena.graph.impl.LiteralLabel)>(r1, $r2);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.graph.Node_Literal r0, $r2;
        java.lang.Object r1, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.graph.Node_Literal;

        if $z0 == 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.graph.Node_Literal: java.lang.Object label>;

        $r2 = (com.hp.hpl.jena.graph.Node_Literal) r1;

        $r3 = $r2.<com.hp.hpl.jena.graph.Node_Literal: java.lang.Object label>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean sameValueAs(java.lang.Object)
    {
        com.hp.hpl.jena.graph.Node_Literal r1, $r3;
        com.hp.hpl.jena.graph.impl.LiteralLabel $r4, $r5;
        java.lang.Object r0, $r2;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.graph.Node_Literal;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.graph.Node_Literal;

        if $z0 == 0 goto label1;

        $r2 = r1.<com.hp.hpl.jena.graph.Node_Literal: java.lang.Object label>;

        $r4 = (com.hp.hpl.jena.graph.impl.LiteralLabel) $r2;

        $r3 = (com.hp.hpl.jena.graph.Node_Literal) r0;

        $r5 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Node_Literal: com.hp.hpl.jena.graph.impl.LiteralLabel getLiteral()>();

        $z1 = interfaceinvoke $r4.<com.hp.hpl.jena.graph.impl.LiteralLabel: boolean sameValueAs(com.hp.hpl.jena.graph.impl.LiteralLabel)>($r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean matches(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node_Literal r0;
        com.hp.hpl.jena.graph.Node r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.Node_Literal;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node_Literal: boolean sameValueAs(java.lang.Object)>(r1);

        return $z0;
    }
}
