class org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand;
    static java.lang.Class class$java$lang$Integer;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4 r2;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;

        r2 := @this: org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        java.lang.Integer $r9, $r13;
        java.lang.Exception $r37;
        java.lang.Throwable $r36;
        java.lang.Object[] $r12, $r22, $r24, $r30, $r35, $r39, $r41, $r52, $r61;
        groovy.lang.Reference $r1, $r5, $r15, $r38;
        boolean $z0;
        org.codehaus.groovy.runtime.GStringImpl $r23, $r40;
        java.lang.String[] $r27, $r43;
        org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4 r19;
        java.lang.Object r0, $r7, $r8, $r11, $r14, $r21, $r25, $r26, $r29, $r31, $r32, $r42, $r44, $r53, $r54, $r59, $r60, $r62, $r63;
        java.lang.Class $r2, r3, $r4, $r6, $r10, $r16, $r17, $r18, $r20, $r28, $r33, $r34, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r55, $r56, $r57, $r58, $r64, $r65;

        r19 := @this: org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4;

        r0 := @parameter0: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r45 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$0> = $r45;

        goto label02;

     label01:
        $r45 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$0>;

     label02:
        r3 = $r45;

        $r4 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label03;

        $r46 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$groovy$lang$MetaClass> = $r46;

        goto label04;

     label03:
        $r46 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>(null);

        $r6 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

        if $r6 != null goto label05;

        $r47 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand> = $r47;

        goto label06;

     label05:
        $r47 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

     label06:
        $r7 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r47, $r7, "size");

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(1);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z0 == 0 goto label07;

        $r35 = newarray (java.lang.Object)[1];

        $r35[0] = "History recall requires a single history identifer";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r19, "fail", $r35);

        goto label07;

     label07:
        $r10 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

        if $r10 != null goto label08;

        $r48 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand> = $r48;

        goto label09;

     label08:
        $r48 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

     label09:
        $r11 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r12 = newarray (java.lang.Object)[1];

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(0);

        $r12[0] = $r13;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r48, $r11, "getAt", $r12);

        $r15 = new groovy.lang.Reference;

        specialinvoke $r15.<groovy.lang.Reference: void <init>(java.lang.Object)>($r14);

     label10:
        $r16 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

        if $r16 != null goto label11;

        $r34 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand");

        $r49 = $r34;

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand> = $r34;

        goto label12;

     label11:
        $r49 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

     label12:
        $r17 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$java$lang$Integer>;

        if $r17 != null goto label13;

        $r50 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        $r51 = $r50;

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$java$lang$Integer> = $r50;

        goto label14;

     label13:
        $r51 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$java$lang$Integer>;

     label14:
        $r52 = newarray (java.lang.Object)[1];

        $r53 = virtualinvoke $r15.<groovy.lang.Reference: java.lang.Object get()>();

        $r52[0] = $r53;

        $r54 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r49, $r51, "parseInt", $r52);

        virtualinvoke $r15.<groovy.lang.Reference: void set(java.lang.Object)>($r54);

        $r55 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

        if $r55 != null goto label15;

        $r33 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand");

        $r56 = $r33;

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand> = $r33;

        goto label16;

     label15:
        $r56 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

     label16:
        $r18 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

        if $r18 != null goto label17;

        $r57 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand");

        $r58 = $r57;

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand> = $r57;

        goto label18;

     label17:
        $r58 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

     label18:
        $r59 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r19, "history");

        $r60 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r58, $r59, "historyList");

        $r61 = newarray (java.lang.Object)[1];

        $r62 = virtualinvoke $r15.<groovy.lang.Reference: java.lang.Object get()>();

        $r61[0] = $r62;

        $r63 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r56, $r60, "getAt", $r61);

        virtualinvoke $r5.<groovy.lang.Reference: void set(java.lang.Object)>($r63);

        goto label20;

     label19:
        $r37 := @caughtexception;

        $r38 = new groovy.lang.Reference;

        specialinvoke $r38.<groovy.lang.Reference: void <init>(java.lang.Object)>($r37);

        $r39 = newarray (java.lang.Object)[2];

        $r40 = new org.codehaus.groovy.runtime.GStringImpl;

        $r41 = newarray (java.lang.Object)[1];

        $r42 = virtualinvoke $r15.<groovy.lang.Reference: java.lang.Object get()>();

        $r41[0] = $r42;

        $r43 = newarray (java.lang.String)[2];

        $r43[0] = "Invalid history identifier: ";

        $r43[1] = "";

        specialinvoke $r40.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r41, $r43);

        $r39[0] = $r40;

        $r44 = virtualinvoke $r38.<groovy.lang.Reference: java.lang.Object get()>();

        $r39[1] = $r44;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r19, "fail", $r39);

        goto label20;

     label20:
        goto label22;

     label21:
        $r36 := @caughtexception;

        throw $r36;

     label22:
        $r20 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

        if $r20 != null goto label23;

        $r64 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand> = $r64;

        goto label24;

     label23:
        $r64 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

     label24:
        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r19, "log");

        $r22 = newarray (java.lang.Object)[1];

        $r23 = new org.codehaus.groovy.runtime.GStringImpl;

        $r24 = newarray (java.lang.Object)[2];

        $r25 = virtualinvoke $r15.<groovy.lang.Reference: java.lang.Object get()>();

        $r24[0] = $r25;

        $r26 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r24[1] = $r26;

        $r27 = newarray (java.lang.String)[3];

        $r27[0] = "Recalling history item #";

        $r27[1] = ": ";

        $r27[2] = "";

        specialinvoke $r23.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r24, $r27);

        $r22[0] = $r23;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r64, $r21, "debug", $r22);

        $r28 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

        if $r28 != null goto label25;

        $r65 = staticinvoke <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.HistoryCommand");

        <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand> = $r65;

        goto label26;

     label25:
        $r65 = <org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$HistoryCommand>;

     label26:
        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r19, "shell");

        $r30 = newarray (java.lang.Object)[1];

        $r31 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r30[0] = $r31;

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r65, $r29, "execute", $r30);

        return $r32;

        catch java.lang.Exception from label10 to label19 with label19;
        catch java.lang.Throwable from label10 to label20 with label21;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
