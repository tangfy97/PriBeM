public class org.mozilla.universalchardet.prober.statemachine.CodingStateMachine extends java.lang.Object
{
    protected org.mozilla.universalchardet.prober.statemachine.SMModel model;
    protected int currentState;
    protected int currentCharLen;
    protected int currentBytePos;

    public void <init>(org.mozilla.universalchardet.prober.statemachine.SMModel)
    {
        org.mozilla.universalchardet.prober.statemachine.SMModel r1;
        org.mozilla.universalchardet.prober.statemachine.CodingStateMachine r0;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.CodingStateMachine;

        r1 := @parameter0: org.mozilla.universalchardet.prober.statemachine.SMModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: org.mozilla.universalchardet.prober.statemachine.SMModel model> = r1;

        r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentState> = 0;

        return;
    }

    public int nextState(byte)
    {
        org.mozilla.universalchardet.prober.statemachine.CodingStateMachine r0;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.mozilla.universalchardet.prober.statemachine.SMModel $r1, $r2, $r3;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.CodingStateMachine;

        b0 := @parameter0: byte;

        $r1 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: org.mozilla.universalchardet.prober.statemachine.SMModel model>;

        $i1 = virtualinvoke $r1.<org.mozilla.universalchardet.prober.statemachine.SMModel: int getClass(byte)>(b0);

        $i2 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentState>;

        if $i2 != 0 goto label1;

        r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentBytePos> = 0;

        $r3 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: org.mozilla.universalchardet.prober.statemachine.SMModel model>;

        $i8 = virtualinvoke $r3.<org.mozilla.universalchardet.prober.statemachine.SMModel: int getCharLen(int)>($i1);

        r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentCharLen> = $i8;

     label1:
        $r2 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: org.mozilla.universalchardet.prober.statemachine.SMModel model>;

        $i3 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentState>;

        $i4 = virtualinvoke $r2.<org.mozilla.universalchardet.prober.statemachine.SMModel: int getNextState(int,int)>($i1, $i3);

        r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentState> = $i4;

        $i5 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentBytePos>;

        $i6 = $i5 + 1;

        r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentBytePos> = $i6;

        $i7 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentState>;

        return $i7;
    }

    public int getCurrentCharLen()
    {
        int $i0;
        org.mozilla.universalchardet.prober.statemachine.CodingStateMachine r0;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.CodingStateMachine;

        $i0 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentCharLen>;

        return $i0;
    }

    public void reset()
    {
        org.mozilla.universalchardet.prober.statemachine.CodingStateMachine r0;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.CodingStateMachine;

        r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: int currentState> = 0;

        return;
    }

    public java.lang.String getCodingStateMachine()
    {
        java.lang.String $r2;
        org.mozilla.universalchardet.prober.statemachine.SMModel $r1;
        org.mozilla.universalchardet.prober.statemachine.CodingStateMachine r0;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.CodingStateMachine;

        $r1 = r0.<org.mozilla.universalchardet.prober.statemachine.CodingStateMachine: org.mozilla.universalchardet.prober.statemachine.SMModel model>;

        $r2 = virtualinvoke $r1.<org.mozilla.universalchardet.prober.statemachine.SMModel: java.lang.String getName()>();

        return $r2;
    }
}
