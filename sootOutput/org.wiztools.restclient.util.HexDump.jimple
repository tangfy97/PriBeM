public class org.wiztools.restclient.util.HexDump extends java.lang.Object
{
    private static final int ROW_BYTES;
    private static final int ROW_QTR1;
    private static final int ROW_HALF;
    private static final int ROW_QTR2;

    private void <init>()
    {
        org.wiztools.restclient.util.HexDump r0;

        r0 := @this: org.wiztools.restclient.util.HexDump;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getHexDataDumpAsString(byte[])
    {
        int $i0;
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.wiztools.restclient.util.HexDump: java.lang.String getHexDataDumpAsString(byte[],int)>(r0, $i0);

        return $r1;
    }

    public static java.lang.String getHexDataDumpAsString(byte[], int)
    {
        java.io.PrintStream $r1;
        byte[] r4, $r6;
        java.io.ByteArrayOutputStream $r0;
        java.lang.RuntimeException $r10;
        java.nio.charset.Charset $r2, $r7;
        int i0;
        java.lang.String $r3, $r5, $r8;
        java.io.UnsupportedEncodingException $r9;

        r4 := @parameter0: byte[];

        i0 := @parameter1: int;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.PrintStream;

        $r2 = <org.wiztools.commons.Charsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>($r0, 0, $r3);

        staticinvoke <org.wiztools.restclient.util.HexDump: void dumpHexData(java.io.PrintStream,byte[],int)>($r1, r4, i0);

        $r5 = new java.lang.String;

        $r6 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = <org.wiztools.commons.Charsets: java.nio.charset.Charset UTF_8>;

        $r8 = virtualinvoke $r7.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, $r8);

     label2:
        return $r5;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static void dumpHexData(java.io.PrintStream, byte[])
    {
        java.io.PrintStream r0;
        int $i0;
        byte[] r1;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: byte[];

        $i0 = lengthof r1;

        staticinvoke <org.wiztools.restclient.util.HexDump: void dumpHexData(java.io.PrintStream,byte[],int)>(r0, r1, $i0);

        return;
    }

    public static void dumpHexData(java.io.PrintStream, byte[], int)
    {
        byte[] r0, r1, r2, r3, r16;
        byte $b5, $b8, $b11, $b13, $b16, $b17, $b20, $b21, $b22, $b23, $b24, $b26, $b28, $b31, $b34, $b37, $b39, $b42, $b43, $b46, $b47, $b48, $b49, $b50, $b52, $b54, $b58, $b61;
        java.lang.StringBuilder $r7, $r8, $r12, $r13, $r14, $r19, $r20, $r24, $r25, $r26, $r29, $r31, $r33, $r35;
        java.lang.String $r9, $r15, $r21, $r27, $r28, $r30, $r32, $r34;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i14, $i15, $i18, $i19, $i29, $i30, $i32, $i33, $i35, $i36, $i38, $i40, $i41, $i44, $i45, i55, i56, i57, i59, i60, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69;
        java.io.PrintStream r5;
        char $c25, $c27, $c51, $c53;

        r5 := @parameter0: java.io.PrintStream;

        r16 := @parameter1: byte[];

        i0 := @parameter2: int;

        r0 = newarray (byte)[18];

        r1 = newarray (byte)[4];

        r2 = newarray (byte)[8];

        r3 = newarray (byte)[20];

        r3[0] = 48;

        r3[1] = 49;

        r3[2] = 50;

        r3[3] = 51;

        r3[4] = 52;

        r3[5] = 53;

        r3[6] = 54;

        r3[7] = 55;

        r3[8] = 56;

        r3[9] = 57;

        r3[10] = 65;

        r3[11] = 66;

        r3[12] = 67;

        r3[13] = 68;

        r3[14] = 69;

        r3[15] = 70;

        i1 = i0 >> 4;

        i2 = i0 & 15;

        i55 = 0;

     label01:
        if i55 >= i1 goto label08;

        i56 = i55 * 16;

        $i29 = i56 >> 12;

        $i30 = $i29 & 15;

        $b31 = r3[$i30];

        r2[0] = $b31;

        $i32 = i56 >> 8;

        $i33 = $i32 & 15;

        $b34 = r3[$i33];

        r2[1] = $b34;

        $i35 = i56 >> 4;

        $i36 = $i35 & 15;

        $b37 = r3[$i36];

        r2[2] = $b37;

        $i38 = i56 & 15;

        $b39 = r3[$i38];

        r2[3] = $b39;

        $r28 = new java.lang.String;

        specialinvoke $r28.<java.lang.String: void <init>(byte[],int,int)>(r2, 0, 4);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r21);

        i57 = 0;

     label02:
        if i57 >= 16 goto label07;

        $i40 = i55 * 16;

        $i41 = $i40 + i57;

        $b42 = r16[$i41];

        r0[i57] = $b42;

        $b43 = r0[i57];

        $i62 = (int) $b43;

        $i44 = $i62 >> 4;

        $i45 = $i44 & 15;

        $b46 = r3[$i45];

        r1[0] = $b46;

        $b47 = r0[i57];

        $b48 = $b47 & 15;

        $i63 = (int) $b48;

        $b49 = r3[$i63];

        r1[1] = $b49;

        $b50 = r1[0];

        $c51 = (char) $b50;

        virtualinvoke r5.<java.io.PrintStream: void print(char)>($c51);

        $b52 = r1[1];

        $c53 = (char) $b52;

        virtualinvoke r5.<java.io.PrintStream: void print(char)>($c53);

        virtualinvoke r5.<java.io.PrintStream: void print(char)>(32);

        if i57 == 3 goto label03;

        if i57 == 7 goto label03;

        if i57 != 11 goto label04;

     label03:
        virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label04:
        $b58 = r0[i57];

        $i64 = (int) $b58;

        if $i64 < 32 goto label05;

        $b54 = r0[i57];

        $i65 = (int) $b54;

        if $i65 <= 217 goto label06;

     label05:
        r0[i57] = 46;

     label06:
        i57 = i57 + 1;

        goto label02;

     label07:
        $r30 = new java.lang.String;

        specialinvoke $r30.<java.lang.String: void <init>(byte[],int,int)>(r0, 0, i57);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.PrintStream: void println(java.lang.String)>($r27);

        i55 = i55 + 1;

        goto label01;

     label08:
        if i2 <= 0 goto label18;

        i59 = i55 * 16;

        $i3 = i59 >> 12;

        $i4 = $i3 & 15;

        $b5 = r3[$i4];

        r2[0] = $b5;

        $i6 = i59 >> 8;

        $i7 = $i6 & 15;

        $b8 = r3[$i7];

        r2[1] = $b8;

        $i9 = i59 >> 4;

        $i10 = $i9 & 15;

        $b11 = r3[$i10];

        r2[2] = $b11;

        $i12 = i59 & 15;

        $b13 = r3[$i12];

        r2[3] = $b13;

        $r32 = new java.lang.String;

        specialinvoke $r32.<java.lang.String: void <init>(byte[],int,int)>(r2, 0, 4);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r9);

        i60 = 0;

     label09:
        if i60 >= i2 goto label14;

        $i14 = i55 * 16;

        $i15 = $i14 + i60;

        $b16 = r16[$i15];

        r0[i60] = $b16;

        $b17 = r0[i60];

        $i66 = (int) $b17;

        $i18 = $i66 >> 4;

        $i19 = $i18 & 15;

        $b20 = r3[$i19];

        r1[0] = $b20;

        $b21 = r0[i60];

        $b22 = $b21 & 15;

        $i67 = (int) $b22;

        $b23 = r3[$i67];

        r1[1] = $b23;

        $b24 = r1[0];

        $c25 = (char) $b24;

        virtualinvoke r5.<java.io.PrintStream: void print(char)>($c25);

        $b26 = r1[1];

        $c27 = (char) $b26;

        virtualinvoke r5.<java.io.PrintStream: void print(char)>($c27);

        virtualinvoke r5.<java.io.PrintStream: void print(char)>(32);

        if i60 == 3 goto label10;

        if i60 == 7 goto label10;

        if i60 != 11 goto label11;

     label10:
        virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label11:
        $b61 = r0[i60];

        $i68 = (int) $b61;

        if $i68 < 32 goto label12;

        $b28 = r0[i60];

        $i69 = (int) $b28;

        if $i69 <= 217 goto label13;

     label12:
        r0[i60] = 46;

     label13:
        i60 = i60 + 1;

        goto label09;

     label14:
        if i60 >= 16 goto label17;

        r0[i60] = 32;

        virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>("   ");

        if i60 == 3 goto label15;

        if i60 == 7 goto label15;

        if i60 != 11 goto label16;

     label15:
        virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label16:
        i60 = i60 + 1;

        goto label14;

     label17:
        $r34 = new java.lang.String;

        specialinvoke $r34.<java.lang.String: void <init>(byte[],int,int)>(r0, 0, i60);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label18:
        return;
    }

    public static void <clinit>()
    {
        <org.wiztools.restclient.util.HexDump: int ROW_QTR2> = 11;

        <org.wiztools.restclient.util.HexDump: int ROW_HALF> = 7;

        <org.wiztools.restclient.util.HexDump: int ROW_QTR1> = 3;

        <org.wiztools.restclient.util.HexDump: int ROW_BYTES> = 16;

        return;
    }
}
