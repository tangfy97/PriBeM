public class org.apache.cxf.bus.extension.TextExtensionFragmentParser extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    private static java.util.regex.Pattern colonPattern;
    final java.lang.ClassLoader loader;

    public void <init>(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.apache.cxf.bus.extension.TextExtensionFragmentParser r0;

        r0 := @this: org.apache.cxf.bus.extension.TextExtensionFragmentParser;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.bus.extension.TextExtensionFragmentParser: java.lang.ClassLoader loader> = r1;

        return;
    }

    public java.util.List getExtensions(java.net.URL)
    {
        java.lang.Throwable $r5;
        java.net.URL r0;
        java.io.IOException $r4, $r6, $r12;
        java.util.logging.Logger $r8;
        java.lang.Exception $r7;
        java.util.logging.Level $r9;
        java.util.ArrayList $r11;
        java.util.List $r3;
        java.lang.String $r10;
        org.apache.cxf.bus.extension.TextExtensionFragmentParser r2;
        java.io.InputStream $r1, r13;

        r2 := @this: org.apache.cxf.bus.extension.TextExtensionFragmentParser;

        r0 := @parameter0: java.net.URL;

        r13 = null;

     label01:
        $r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        r13 = $r1;

        $r3 = virtualinvoke r2.<org.apache.cxf.bus.extension.TextExtensionFragmentParser: java.util.List getExtensions(java.io.InputStream)>($r1);

     label02:
        if $r1 == null goto label06;

     label03:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

     label06:
        return $r3;

     label07:
        $r7 := @caughtexception;

        $r8 = <org.apache.cxf.bus.extension.TextExtensionFragmentParser: java.util.logging.Logger LOG>;

        $r9 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r9, $r10, $r7);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

     label08:
        if r13 == null goto label12;

     label09:
        virtualinvoke r13.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r6 := @caughtexception;

     label12:
        return $r11;

     label13:
        $r5 := @caughtexception;

     label14:
        if r13 == null goto label18;

     label15:
        virtualinvoke r13.<java.io.InputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r4 := @caughtexception;

     label18:
        throw $r5;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Exception from label01 to label02 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public java.util.List getExtensions(java.io.InputStream) throws java.io.IOException
    {
        org.apache.cxf.bus.extension.Extension $r5;
        java.io.BufferedReader $r1;
        java.lang.String r6;
        java.io.InputStreamReader $r2;
        org.apache.cxf.bus.extension.TextExtensionFragmentParser r4;
        java.util.ArrayList $r0;
        java.io.InputStream r3;

        r4 := @this: org.apache.cxf.bus.extension.TextExtensionFragmentParser;

        r3 := @parameter0: java.io.InputStream;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.io.BufferedReader;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, "UTF-8");

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

        r6 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label1:
        if r6 == null goto label3;

        $r5 = specialinvoke r4.<org.apache.cxf.bus.extension.TextExtensionFragmentParser: org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)>(r6);

        if $r5 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        r6 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label1;

     label3:
        return $r0;
    }

    private org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)
    {
        java.lang.String[] $r5;
        int $i0, $i2, $i3, $i4, $i5;
        java.lang.String $r0, $r6, $r7, $r8, $r9, $r10, r11, r12;
        boolean $z0, $z1, $z2;
        char $c1;
        org.apache.cxf.bus.extension.Extension $r13;
        java.lang.ClassLoader $r3;
        java.util.regex.Pattern $r4;
        org.apache.cxf.bus.extension.TextExtensionFragmentParser r2;

        r2 := @this: org.apache.cxf.bus.extension.TextExtensionFragmentParser;

        r11 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i5 = (int) $c1;

        if $i5 != 35 goto label2;

     label1:
        return null;

     label2:
        $r13 = new org.apache.cxf.bus.extension.Extension;

        $r3 = r2.<org.apache.cxf.bus.extension.TextExtensionFragmentParser: java.lang.ClassLoader loader>;

        specialinvoke $r13.<org.apache.cxf.bus.extension.Extension: void <init>(java.lang.ClassLoader)>($r3);

        $r4 = <org.apache.cxf.bus.extension.TextExtensionFragmentParser: java.util.regex.Pattern colonPattern>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>($r0, 0);

        $r6 = $r5[0];

        virtualinvoke $r13.<org.apache.cxf.bus.extension.Extension: void setClassname(java.lang.String)>($r6);

        $r7 = virtualinvoke $r13.<org.apache.cxf.bus.extension.Extension: java.lang.String getClassname()>();

        if $r7 != null goto label3;

        return null;

     label3:
        $i2 = lengthof $r5;

        if $i2 < 2 goto label5;

        r12 = $r5[1];

        if r12 == null goto label4;

        $r10 = "";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z2 == 0 goto label4;

        r12 = null;

     label4:
        virtualinvoke $r13.<org.apache.cxf.bus.extension.Extension: void setInterfaceName(java.lang.String)>(r12);

     label5:
        $i4 = lengthof $r5;

        if $i4 < 3 goto label6;

        $r9 = $r5[2];

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r9);

        virtualinvoke $r13.<org.apache.cxf.bus.extension.Extension: void setDeferred(boolean)>($z1);

     label6:
        $i3 = lengthof $r5;

        if $i3 < 4 goto label7;

        $r8 = $r5[3];

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r8);

        virtualinvoke $r13.<org.apache.cxf.bus.extension.Extension: void setOptional(boolean)>($z0);

     label7:
        return $r13;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r1;
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/bus/extension/TextExtensionFragmentParser;");

        <org.apache.cxf.bus.extension.TextExtensionFragmentParser: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(":");

        <org.apache.cxf.bus.extension.TextExtensionFragmentParser: java.util.regex.Pattern colonPattern> = $r1;

        return;
    }
}
