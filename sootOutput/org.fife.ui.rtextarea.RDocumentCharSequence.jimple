class org.fife.ui.rtextarea.RDocumentCharSequence extends java.lang.Object implements java.lang.CharSequence
{
    private org.fife.ui.rtextarea.RDocument doc;
    private int start;
    private int end;

    public void <init>(org.fife.ui.rtextarea.RDocument, int)
    {
        int i0, $i1;
        org.fife.ui.rtextarea.RDocumentCharSequence r0;
        org.fife.ui.rtextarea.RDocument r1;

        r0 := @this: org.fife.ui.rtextarea.RDocumentCharSequence;

        r1 := @parameter0: org.fife.ui.rtextarea.RDocument;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<org.fife.ui.rtextarea.RDocument: int getLength()>();

        specialinvoke r0.<org.fife.ui.rtextarea.RDocumentCharSequence: void <init>(org.fife.ui.rtextarea.RDocument,int,int)>(r1, i0, $i1);

        return;
    }

    public void <init>(org.fife.ui.rtextarea.RDocument, int, int)
    {
        int i0, i1;
        org.fife.ui.rtextarea.RDocumentCharSequence r0;
        org.fife.ui.rtextarea.RDocument r1;

        r0 := @this: org.fife.ui.rtextarea.RDocumentCharSequence;

        r1 := @parameter0: org.fife.ui.rtextarea.RDocument;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.fife.ui.rtextarea.RDocumentCharSequence: org.fife.ui.rtextarea.RDocument doc> = r1;

        r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int start> = i0;

        r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int end> = i1;

        return;
    }

    public char charAt(int)
    {
        java.lang.IndexOutOfBoundsException $r0, $r11;
        org.fife.ui.rtextarea.RDocumentCharSequence r5;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r8, $r12;
        char $c5;
        javax.swing.text.BadLocationException $r10;
        org.fife.ui.rtextarea.RDocument $r9;

        r5 := @this: org.fife.ui.rtextarea.RDocumentCharSequence;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r5.<org.fife.ui.rtextarea.RDocumentCharSequence: int length()>();

        if i0 < $i2 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Index ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not in range [0-");

        $i1 = virtualinvoke r5.<org.fife.ui.rtextarea.RDocumentCharSequence: int length()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r0;

     label2:
        $r9 = r5.<org.fife.ui.rtextarea.RDocumentCharSequence: org.fife.ui.rtextarea.RDocument doc>;

        $i3 = r5.<org.fife.ui.rtextarea.RDocumentCharSequence: int start>;

        $i4 = $i3 + i0;

        $c5 = virtualinvoke $r9.<org.fife.ui.rtextarea.RDocument: char charAt(int)>($i4);

     label3:
        return $c5;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.lang.IndexOutOfBoundsException;

        $r12 = virtualinvoke $r10.<javax.swing.text.BadLocationException: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch javax.swing.text.BadLocationException from label2 to label3 with label4;
    }

    public int length()
    {
        int $i0, $i1, $i2;
        org.fife.ui.rtextarea.RDocumentCharSequence r0;

        r0 := @this: org.fife.ui.rtextarea.RDocumentCharSequence;

        $i1 = r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int end>;

        $i0 = r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int start>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        java.lang.IndexOutOfBoundsException $r3, $r11, $r19, $r25;
        org.fife.ui.rtextarea.RDocumentCharSequence r0, $r1;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r29;
        int i0, i1, $i2, $i3, i4, $i5, i6, $i7;
        java.lang.String $r10, $r18, $r24, $r30;
        org.fife.ui.rtextarea.RDocument $r2;

        r0 := @this: org.fife.ui.rtextarea.RDocumentCharSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r25 = new java.lang.IndexOutOfBoundsException;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("start must be >= 0 (");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r30);

        throw $r25;

     label1:
        if i1 >= 0 goto label2;

        $r19 = new java.lang.IndexOutOfBoundsException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("end must be >= 0 (");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label2:
        $i2 = virtualinvoke r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int length()>();

        if i1 <= $i2 goto label3;

        $r11 = new java.lang.IndexOutOfBoundsException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("end must be <= ");

        $i7 = virtualinvoke r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int length()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label3:
        if i0 <= i1 goto label4;

        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("start (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") cannot be > end (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label4:
        $i3 = r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int start>;

        i4 = $i3 + i0;

        $i5 = r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int start>;

        i6 = $i5 + i1;

        $r1 = new org.fife.ui.rtextarea.RDocumentCharSequence;

        $r2 = r0.<org.fife.ui.rtextarea.RDocumentCharSequence: org.fife.ui.rtextarea.RDocument doc>;

        specialinvoke $r1.<org.fife.ui.rtextarea.RDocumentCharSequence: void <init>(org.fife.ui.rtextarea.RDocument,int,int)>($r2, i4, i6);

        return $r1;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        org.fife.ui.rtextarea.RDocumentCharSequence r0;
        java.lang.String $r2;
        javax.swing.text.BadLocationException $r3;
        org.fife.ui.rtextarea.RDocument $r1;

        r0 := @this: org.fife.ui.rtextarea.RDocumentCharSequence;

     label1:
        $r1 = r0.<org.fife.ui.rtextarea.RDocumentCharSequence: org.fife.ui.rtextarea.RDocument doc>;

        $i0 = r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int start>;

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RDocumentCharSequence: int length()>();

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.RDocument: java.lang.String getText(int,int)>($i0, $i1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<javax.swing.text.BadLocationException: void printStackTrace()>();

        return "";

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }
}
