class org.codehaus.groovy.control.CompilationUnit$6 extends org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation
{
    private final org.codehaus.groovy.control.CompilationUnit this$0;

    void <init>(org.codehaus.groovy.control.CompilationUnit)
    {
        org.codehaus.groovy.control.CompilationUnit$6 r0;
        org.codehaus.groovy.control.CompilationUnit r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit$6;

        r1 := @parameter0: org.codehaus.groovy.control.CompilationUnit;

        r0.<org.codehaus.groovy.control.CompilationUnit$6: org.codehaus.groovy.control.CompilationUnit this$0> = r1;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation: void <init>()>();

        return;
    }

    public void call(org.codehaus.groovy.control.SourceUnit, org.codehaus.groovy.classgen.GeneratorContext, org.codehaus.groovy.ast.ClassNode) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.CompilationUnit $r1;
        org.codehaus.groovy.control.SourceUnit r3;
        org.codehaus.groovy.ast.ClassNode r2;
        org.codehaus.groovy.control.CompilationUnit$6 r0;
        org.codehaus.groovy.control.StaticImportVisitor $r4;
        org.codehaus.groovy.classgen.GeneratorContext r5;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit$6;

        r3 := @parameter0: org.codehaus.groovy.control.SourceUnit;

        r5 := @parameter1: org.codehaus.groovy.classgen.GeneratorContext;

        r2 := @parameter2: org.codehaus.groovy.ast.ClassNode;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit$6: org.codehaus.groovy.control.CompilationUnit this$0>;

        $r4 = $r1.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.StaticImportVisitor staticImportVisitor>;

        virtualinvoke $r4.<org.codehaus.groovy.control.StaticImportVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.control.SourceUnit)>(r2, r3);

        return;
    }
}
