public final class org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl extends org.apache.xmlbeans.impl.jam.internal.elements.InvokableImpl implements org.apache.xmlbeans.impl.jam.mutable.MConstructor
{

    void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)
    {
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.InvokableImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)>(r1);

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getSimpleName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl: void setSimpleName(java.lang.String)>($r2);

        return;
    }

    public void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl r1;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.MVisitor;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MConstructor)>(r1);

        return;
    }

    public void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.JVisitor;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.JVisitor: void visit(org.apache.xmlbeans.impl.jam.JConstructor)>(r1);

        return;
    }

    public java.lang.String getQualifiedName()
    {
        java.io.StringWriter $r0;
        org.apache.xmlbeans.impl.jam.JParameter[] $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl r1;
        org.apache.xmlbeans.impl.jam.JClass $r6;
        org.apache.xmlbeans.impl.jam.JParameter $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r2, $r3, $r7, $r8;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl: int getModifiers()>();

        $r2 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r2);

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(32);

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl: java.lang.String getSimpleName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r3);

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(40);

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        if $r4 == null goto label3;

        $i1 = lengthof $r4;

        if $i1 <= 0 goto label3;

        i5 = 0;

     label1:
        $i2 = lengthof $r4;

        if i5 >= $i2 goto label3;

        $r5 = $r4[i5];

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.jam.JParameter: org.apache.xmlbeans.impl.jam.JClass getType()>();

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r7);

        $i3 = lengthof $r4;

        $i4 = $i3 - 1;

        if i5 >= $i4 goto label2;

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(44);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(41);

        $r8 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r8;
    }
}
