abstract class com.google.gson.CompositionFieldNamingPolicy extends com.google.gson.RecursiveFieldNamingPolicy
{
    private final com.google.gson.RecursiveFieldNamingPolicy[] fieldPolicies;

    public transient void <init>(com.google.gson.RecursiveFieldNamingPolicy[])
    {
        com.google.gson.RecursiveFieldNamingPolicy[] r1;
        java.lang.NullPointerException $r2;
        com.google.gson.CompositionFieldNamingPolicy r0;

        r0 := @this: com.google.gson.CompositionFieldNamingPolicy;

        r1 := @parameter0: com.google.gson.RecursiveFieldNamingPolicy[];

        specialinvoke r0.<com.google.gson.RecursiveFieldNamingPolicy: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("naming policies can not be null.");

        throw $r2;

     label1:
        r0.<com.google.gson.CompositionFieldNamingPolicy: com.google.gson.RecursiveFieldNamingPolicy[] fieldPolicies> = r1;

        return;
    }

    protected java.lang.String translateName(java.lang.String, java.lang.reflect.Type, java.util.Collection)
    {
        java.util.Collection r4;
        com.google.gson.RecursiveFieldNamingPolicy[] r1;
        com.google.gson.RecursiveFieldNamingPolicy r2;
        java.lang.reflect.Type r3;
        com.google.gson.CompositionFieldNamingPolicy r0;
        int i0, i1;
        java.lang.String r5;

        r0 := @this: com.google.gson.CompositionFieldNamingPolicy;

        r5 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.util.Collection;

        r1 = r0.<com.google.gson.CompositionFieldNamingPolicy: com.google.gson.RecursiveFieldNamingPolicy[] fieldPolicies>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        r5 = virtualinvoke r2.<com.google.gson.RecursiveFieldNamingPolicy: java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection)>(r5, r3, r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r5;
    }
}
