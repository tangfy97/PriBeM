final class org.springframework.http.client.SimpleClientHttpResponse extends java.lang.Object implements org.springframework.http.client.ClientHttpResponse
{
    private final java.net.HttpURLConnection connection;
    private org.springframework.http.HttpHeaders headers;

    void <init>(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection r1;
        org.springframework.http.client.SimpleClientHttpResponse r0;

        r0 := @this: org.springframework.http.client.SimpleClientHttpResponse;

        r1 := @parameter0: java.net.HttpURLConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection> = r1;

        return;
    }

    public org.springframework.http.HttpStatus getStatusCode() throws java.io.IOException
    {
        java.net.HttpURLConnection $r1;
        org.springframework.http.HttpStatus $r2;
        int $i0;
        org.springframework.http.client.SimpleClientHttpResponse r0;

        r0 := @this: org.springframework.http.client.SimpleClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        $r2 = staticinvoke <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus valueOf(int)>($i0);

        return $r2;
    }

    public java.lang.String getStatusText() throws java.io.IOException
    {
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;
        org.springframework.http.client.SimpleClientHttpResponse r0;

        r0 := @this: org.springframework.http.client.SimpleClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        return $r2;
    }

    public org.springframework.http.HttpHeaders getHeaders()
    {
        java.net.HttpURLConnection $r4, $r6, $r9, $r12;
        org.springframework.http.client.SimpleClientHttpResponse r0;
        int i0;
        java.lang.String $r5, $r8, $r11, $r13;
        boolean $z0, $z1;
        org.springframework.http.HttpHeaders $r1, $r2, $r3, $r7, $r10;

        r0 := @this: org.springframework.http.client.SimpleClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.SimpleClientHttpResponse: org.springframework.http.HttpHeaders headers>;

        if $r1 != null goto label4;

        $r3 = new org.springframework.http.HttpHeaders;

        specialinvoke $r3.<org.springframework.http.HttpHeaders: void <init>()>();

        r0.<org.springframework.http.client.SimpleClientHttpResponse: org.springframework.http.HttpHeaders headers> = $r3;

        $r4 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $r5 = virtualinvoke $r4.<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>(0);

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r5);

        if $z0 == 0 goto label1;

        $r10 = r0.<org.springframework.http.client.SimpleClientHttpResponse: org.springframework.http.HttpHeaders headers>;

        $r9 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $r11 = virtualinvoke $r9.<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>(0);

        virtualinvoke $r10.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>($r5, $r11);

     label1:
        i0 = 1;

     label2:
        $r12 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $r13 = virtualinvoke $r12.<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>(i0);

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r13);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r7 = r0.<org.springframework.http.client.SimpleClientHttpResponse: org.springframework.http.HttpHeaders headers>;

        $r6 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $r8 = virtualinvoke $r6.<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>(i0);

        virtualinvoke $r7.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>($r13, $r8);

        i0 = i0 + 1;

        goto label2;

     label4:
        $r2 = r0.<org.springframework.http.client.SimpleClientHttpResponse: org.springframework.http.HttpHeaders headers>;

        return $r2;
    }

    public java.io.InputStream getBody() throws java.io.IOException
    {
        java.net.HttpURLConnection $r1, $r3;
        org.springframework.http.client.SimpleClientHttpResponse r0;
        java.io.InputStream $r2, $r4;

        r0 := @this: org.springframework.http.client.SimpleClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        if $r2 == null goto label1;

        $r4 = $r2;

        goto label2;

     label1:
        $r3 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        return $r4;
    }

    public void close()
    {
        java.net.HttpURLConnection $r1;
        org.springframework.http.client.SimpleClientHttpResponse r0;

        r0 := @this: org.springframework.http.client.SimpleClientHttpResponse;

        $r1 = r0.<org.springframework.http.client.SimpleClientHttpResponse: java.net.HttpURLConnection connection>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        return;
    }
}
