class org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream extends java.io.InputStream
{
    private final java.io.InputStream in;
    private final long max;
    private long pos;
    final org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0;

    public void <init>(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream, java.io.InputStream, long)
    {
        long l0;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream r1;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;

        r2 := @parameter1: java.io.InputStream;

        l0 := @parameter2: long;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0> = r1;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos> = 0L;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max> = l0;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: java.io.InputStream in> = r2;

        return;
    }

    public int read() throws java.io.IOException
    {
        long $l0, $l3, $l4, $l5, $l6;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream r0;
        byte $b1, $b7;
        int $i2, $i8, $i9, $i11;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry $r4;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream $r2, $r3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i8 = (int) $b1;

        if $i8 < 0 goto label1;

        $l6 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l5 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b7 = $l6 cmp $l5;

        $i9 = (int) $b7;

        if $i9 < 0 goto label1;

        $i11 = (int) -1;

        return $i11;

     label1:
        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $l3 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l4 = $l3 + 1L;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos> = $l4;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0>;

        staticinvoke <org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: void access$800(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,int)>($r2, 1);

        $r3 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0>;

        $r4 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry access$900(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream)>($r3);

        staticinvoke <org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry: long access$708(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)>($r4);

        return $i2;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        int $i0, $i1;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        byte $b1, $b3, $b18;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry $r5;
        long $l0, $l2, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l19;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream r0;
        int i4, i5, $i6, $i7, $i20, $i21, $i23, $i24, $i26, $i28;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream $r3, $r4;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i4 := @parameter2: int;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i20 = (int) $b1;

        if $i20 < 0 goto label1;

        $l17 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l16 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b18 = $l17 cmp $l16;

        $i21 = (int) $b18;

        if $i21 < 0 goto label1;

        $i23 = (int) -1;

        return $i23;

     label1:
        $l2 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b3 = $l2 cmp 0L;

        $i24 = (int) $b3;

        if $i24 < 0 goto label2;

        $l15 = (long) i4;

        $l13 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $l12 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l14 = $l13 - $l12;

        $l19 = staticinvoke <java.lang.Math: long min(long,long)>($l15, $l14);

        goto label3;

     label2:
        $l19 = (long) i4;

     label3:
        $r2 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: java.io.InputStream in>;

        $i6 = (int) $l19;

        $i7 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i5, $i6);

        $i26 = (int) -1;

        if $i7 != $i26 goto label4;

        $i28 = (int) -1;

        return $i28;

     label4:
        $l9 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l8 = (long) $i7;

        $l10 = $l9 + $l8;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos> = $l10;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0>;

        staticinvoke <org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: void access$1000(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,int)>($r3, $i7);

        $r4 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0>;

        $r5 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry access$900(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream)>($r4);

        $l11 = (long) $i7;

        staticinvoke <org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry: long access$714(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,long)>($r5, $l11);

        return $i7;
    }

    public long skip(long) throws java.io.IOException
    {
        long $l0, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream r0;
        byte $b1;
        int $i10;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream;

        l2 := @parameter0: long;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i10 = (int) $b1;

        if $i10 < 0 goto label1;

        $l7 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $l6 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l8 = $l7 - $l6;

        $l9 = staticinvoke <java.lang.Math: long min(long,long)>(l2, $l8);

        goto label2;

     label1:
        $l9 = l2;

     label2:
        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: java.io.InputStream in>;

        $l3 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l9);

        $l4 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l5 = $l4 + $l3;

        r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos> = $l5;

        return $l3;
    }

    public int available() throws java.io.IOException
    {
        long $l0, $l3, $l4;
        org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream r0;
        byte $b1, $b5;
        int $i2, $i6, $i7;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 < 0 goto label1;

        $l4 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long pos>;

        $l3 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: long max>;

        $b5 = $l4 cmp $l3;

        $i7 = (int) $b5;

        if $i7 < 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i2;
    }
}
