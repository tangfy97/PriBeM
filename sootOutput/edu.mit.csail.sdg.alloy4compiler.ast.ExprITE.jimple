public final class edu.mit.csail.sdg.alloy4compiler.ast.ExprITE extends edu.mit.csail.sdg.alloy4compiler.ast.Expr
{
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr cond;
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr left;
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr right;
    private edu.mit.csail.sdg.alloy4.Pos span;

    public edu.mit.csail.sdg.alloy4.Pos span()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r1, $r3, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r0;
        edu.mit.csail.sdg.alloy4.Pos $r2, $r4, $r5, $r7, $r8, r9;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        r9 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4.Pos span>;

        if r9 != null goto label1;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $r2 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r4);

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r7 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r8 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r7);

        r9 = $r8;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4.Pos span> = $r8;

     label1:
        return r9;
    }

    public void toString(java.lang.StringBuilder, int)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r5, $r6, $r7, $r8, $r9, $r10;
        int i0, $i1, $i2, $i3, i4, $i6, $i8, $i10;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r2;
        java.lang.StringBuilder r0, $r1, $r4;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r8 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $i6 = (int) -1;

        virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i6);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r9 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i8 = (int) -1;

        virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i8);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" else ");

        $r10 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i10 = (int) -1;

        virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i10);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        goto label4;

     label1:
        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i4 = i4 + 1;

        goto label2;

     label3:
        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("if-then-else with type=");

        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $i1 = i0 + 2;

        virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i1);

        $r6 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i2 = i0 + 2;

        virtualinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i2);

        $r7 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i3 = i0 + 2;

        virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i3);

     label4:
        return;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Type, edu.mit.csail.sdg.alloy4.JoinableList)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r2, r4, r5;
        long $l0, $l1, $l2, $l3, $l4;
        edu.mit.csail.sdg.alloy4.JoinableList r6;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r0;
        edu.mit.csail.sdg.alloy4.Pos r1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r4 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter4: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r6 := @parameter5: edu.mit.csail.sdg.alloy4.JoinableList;

        $z0 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z0 != 0 goto label1;

        $z1 = r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z1 != 0 goto label1;

        if r5 == null goto label2;

        $z2 = r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $l0 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        $l1 = r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        $l2 = $l0 + $l1;

        if r5 == null goto label4;

        $l3 = r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        goto label5;

     label4:
        $l3 = 0L;

     label5:
        $l4 = $l2 + $l3;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,boolean,edu.mit.csail.sdg.alloy4compiler.ast.Type,int,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, null, $z3, r3, 0, $l4, r6);

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4.Pos span> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond> = r2;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left> = r4;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right> = r5;

        return;
    }

    public boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r9, $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r3, $r4, $r5, $r6, $r7, r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r8, $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r0, r1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        r12 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

     label1:
        $z0 = r12 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z0 == 0 goto label2;

        $r8 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r12;

        $r10 = $r8.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r10 != $r9 goto label2;

        $r11 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r12;

        r12 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        goto label1;

     label2:
        if r12 != r0 goto label3;

        return 1;

     label3:
        $z1 = r12 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        if $z1 != 0 goto label4;

        return 0;

     label4:
        r1 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprITE) r12;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $z2 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        if $z2 == 0 goto label5;

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z3 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r4);

        if $z3 == 0 goto label5;

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z4 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r6);

        if $z4 == 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r27, r28, r29, $r34;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r17, $r19;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r21, $r23, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        edu.mit.csail.sdg.alloy4.Pos r0, $r6, $r7, $r8, $r9, $r10, $r22, $r24, $r26;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15;
        edu.mit.csail.sdg.alloy4compiler.ast.Type r2, r3, $r4, $r18, $r20, r31, $r33;
        edu.mit.csail.sdg.alloy4.ErrorType $r5;
        edu.mit.csail.sdg.alloy4.JoinableList $r1, r30, $r32, $r36, $r37, $r38, $r39, $r40, $r41;
        int $i0, $i1, $i2;
        java.lang.String $r16;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE $r35;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r27 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r28 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r29 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r30 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4.JoinableList emptyListOfErrors>;

        $i0 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i0 == 0 goto label01;

        $r25 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r26 = virtualinvoke r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r25.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r26, "Multiplicity expression not allowed here.");

        r30 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r25);

     label01:
        $i1 = r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i1 == 0 goto label02;

        $r23 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r24 = virtualinvoke r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r23.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r24, "Multiplicity expression not allowed here.");

        r30 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r23);

     label02:
        $i2 = r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i2 == 0 goto label03;

        $r21 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r22 = virtualinvoke r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r21.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r22, "Multiplicity expression not allowed here.");

        r30 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r21);

     label03:
        r31 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

     label04:
        $r32 = r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z12 = virtualinvoke $r32.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z12 == 0 goto label11;

        $r1 = r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 == 0 goto label11;

        r2 = r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        r3 = r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r4 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type unionWithCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r3);

        r31 = $r4;

        $z1 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z1 == 0 goto label05;

        $z11 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z11 == 0 goto label05;

        r31 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r4);

     label05:
        $z13 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_bool>;

        if $z13 == 0 goto label06;

        $z10 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_bool>;

        if $z10 == 0 goto label06;

        r31 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeBool(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r31);

     label06:
        $r33 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r31 != $r33 goto label11;

        $z2 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z2 == 0 goto label07;

        $r19 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $r20 = $r19.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z9 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r20);

        if $z9 == 0 goto label07;

        r29 = virtualinvoke r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2int()>();

        goto label04;

     label07:
        $z3 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z3 == 0 goto label08;

        $r17 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $r18 = $r17.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z8 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r18);

        if $z8 == 0 goto label08;

        r28 = virtualinvoke r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2int()>();

        goto label04;

     label08:
        $z4 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z4 == 0 goto label09;

        $z7 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>(1);

        if $z7 == 0 goto label09;

        r28 = virtualinvoke r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2sigint()>();

        goto label04;

     label09:
        $z5 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z5 == 0 goto label10;

        $z6 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>(1);

        if $z6 == 0 goto label10;

        r29 = virtualinvoke r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr cast2sigint()>();

        goto label04;

     label10:
        $r5 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r6 = virtualinvoke r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r7 = virtualinvoke r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r8 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r7);

        $r9 = virtualinvoke r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r10 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r9);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The then-clause and the else-clause must match.\nThe then-clause has type: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nand the else-clause has type: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r10, $r16);

        r30 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r5);

        goto label11;

     label11:
        $r34 = virtualinvoke r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_formula()>();

        $r35 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        $r36 = $r34.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r37 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(edu.mit.csail.sdg.alloy4.JoinableList)>($r36);

        $r38 = r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r39 = virtualinvoke $r37.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(edu.mit.csail.sdg.alloy4.JoinableList)>($r38);

        $r40 = r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r41 = virtualinvoke $r39.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(edu.mit.csail.sdg.alloy4.JoinableList)>($r40);

        specialinvoke $r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Type,edu.mit.csail.sdg.alloy4.JoinableList)>(r0, $r34, r28, r29, r31, $r41);

        return $r35;
    }

    public edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type, java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r3, $r6, $r7, $r10, $r13, $r15, $r18, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection r5;
        edu.mit.csail.sdg.alloy4.Pos $r14, $r19, $r33;
        edu.mit.csail.sdg.alloy4compiler.ast.Type r4, $r8, $r9, $r11, $r16, r20, r21, r22, r23, $r25;
        edu.mit.csail.sdg.alloy4.ErrorWarning $r12, $r17;
        edu.mit.csail.sdg.alloy4.JoinableList $r1;
        int $i0, $i1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        r4 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r5 := @parameter1: java.util.Collection;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: int size()>();

        if $i0 <= 0 goto label1;

        return r0;

     label1:
        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        r20 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        r21 = $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $i1 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int size()>();

        if $i1 <= 0 goto label5;

        $r8 = virtualinvoke r20.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r4);

        r22 = $r8;

        $r9 = virtualinvoke r21.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r4);

        r23 = $r9;

        $z0 = r4.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z0 == 0 goto label2;

        r22 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r8);

        r23 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r9);

     label2:
        $z1 = r4.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_bool>;

        if $z1 == 0 goto label3;

        r22 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeBool(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r22);

        r23 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type makeBool(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r23);

     label3:
        if r5 == null goto label4;

        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r16 = $r15.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z4 = virtualinvoke $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z4 == 0 goto label4;

        $z5 = virtualinvoke r22.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z5 != 0 goto label4;

        $r17 = new edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r19 = virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r17.<edu.mit.csail.sdg.alloy4.ErrorWarning: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r19, "This subexpression is redundant.");

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r17);

     label4:
        if r5 == null goto label6;

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r11 = $r10.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z2 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z2 == 0 goto label6;

        $z3 = virtualinvoke r23.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z3 != 0 goto label6;

        $r12 = new edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r14 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r12.<edu.mit.csail.sdg.alloy4.ErrorWarning: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r14, "This subexpression is redundant.");

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        goto label6;

     label5:
        r22 = r4;

        r23 = r4;

     label6:
        $r24 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $r25 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type FORMULA>;

        $r26 = virtualinvoke $r24.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r25, r5);

        $r27 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r28 = virtualinvoke $r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>(r22, r5);

        $r29 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r30 = virtualinvoke $r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>(r23, r5);

        $r31 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        if $r26 != $r31 goto label7;

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        if $r28 != $r6 goto label7;

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        if $r30 != $r7 goto label7;

        $r32 = r0;

        goto label8;

     label7:
        $r33 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r32 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r33, $r26, $r28, $r30);

     label8:
        return $r32;
    }

    public int getDepth()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r1, $r2, $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i1 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i2 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        if $i0 < $i1 goto label3;

        if $i0 < $i2 goto label1;

        $i5 = $i0;

        goto label2;

     label1:
        $i5 = $i2;

     label2:
        $i4 = 1 + $i5;

        return $i4;

     label3:
        if $i1 < $i2 goto label4;

        $i6 = $i1;

        goto label5;

     label4:
        $i6 = $i2;

     label5:
        $i3 = 1 + $i6;

        return $i3;
    }

    final java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r1;
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprITE)>(r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r2;
        java.lang.String $r6;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<b>if-then-else</b> <i>");

        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</i>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.util.List getSubnodes()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr[] $r0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        $r0 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Expr)[3];

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $r0[0] = $r2;

        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r0[1] = $r3;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r0[2] = $r4;

        $r5 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>($r0);

        return $r5;
    }
}
