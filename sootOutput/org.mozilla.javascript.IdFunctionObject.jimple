public class org.mozilla.javascript.IdFunctionObject extends org.mozilla.javascript.BaseFunction
{
    static final long serialVersionUID;
    private final org.mozilla.javascript.IdFunctionCall idcall;
    private final java.lang.Object tag;
    private final int methodId;
    private int arity;
    private boolean useCallAsConstructor;
    private java.lang.String functionName;

    public void <init>(org.mozilla.javascript.IdFunctionCall, java.lang.Object, int, int)
    {
        org.mozilla.javascript.IdFunctionCall r1;
        org.mozilla.javascript.IdFunctionObject r0;
        int i0, i1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        r1 := @parameter0: org.mozilla.javascript.IdFunctionCall;

        r2 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<org.mozilla.javascript.BaseFunction: void <init>()>();

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        r0.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.IdFunctionCall idcall> = r1;

        r0.<org.mozilla.javascript.IdFunctionObject: java.lang.Object tag> = r2;

        r0.<org.mozilla.javascript.IdFunctionObject: int methodId> = i1;

        r0.<org.mozilla.javascript.IdFunctionObject: int arity> = i0;

        if i0 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    public void <init>(org.mozilla.javascript.IdFunctionCall, java.lang.Object, int, java.lang.String, int, org.mozilla.javascript.Scriptable)
    {
        java.lang.IllegalArgumentException $r5, $r6;
        org.mozilla.javascript.IdFunctionCall r3;
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable r1;
        int i0, i1;
        java.lang.Object r4;
        java.lang.String r2;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        r3 := @parameter0: org.mozilla.javascript.IdFunctionCall;

        r4 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r1 := @parameter5: org.mozilla.javascript.Scriptable;

        specialinvoke r0.<org.mozilla.javascript.BaseFunction: void <init>(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable)>(r1, null);

        if i0 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        r0.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.IdFunctionCall idcall> = r3;

        r0.<org.mozilla.javascript.IdFunctionObject: java.lang.Object tag> = r4;

        r0.<org.mozilla.javascript.IdFunctionObject: int methodId> = i1;

        r0.<org.mozilla.javascript.IdFunctionObject: int arity> = i0;

        r0.<org.mozilla.javascript.IdFunctionObject: java.lang.String functionName> = r2;

        return;
    }

    public void initFunction(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.IdFunctionObject r2;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r3, $r4;

        r2 := @this: org.mozilla.javascript.IdFunctionObject;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        r2.<org.mozilla.javascript.IdFunctionObject: java.lang.String functionName> = r0;

        virtualinvoke r2.<org.mozilla.javascript.IdFunctionObject: void setParentScope(org.mozilla.javascript.Scriptable)>(r1);

        return;
    }

    public final boolean hasTag(java.lang.Object)
    {
        org.mozilla.javascript.IdFunctionObject r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.mozilla.javascript.IdFunctionObject: java.lang.Object tag>;

        if $r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int methodId()
    {
        int $i0;
        org.mozilla.javascript.IdFunctionObject r0;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        $i0 = r0.<org.mozilla.javascript.IdFunctionObject: int methodId>;

        return $i0;
    }

    public final void markAsConstructor(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable r1;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r0.<org.mozilla.javascript.IdFunctionObject: boolean useCallAsConstructor> = 1;

        virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: void setImmunePrototypeProperty(java.lang.Object)>(r1);

        return;
    }

    public final void addAsProperty(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.IdFunctionObject r1;
        java.lang.String $r2;

        r1 := @this: org.mozilla.javascript.IdFunctionObject;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $r2 = r1.<org.mozilla.javascript.IdFunctionObject: java.lang.String functionName>;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r0, $r2, r1, 2);

        return;
    }

    public void exportAsScopeProperty()
    {
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable $r1;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.Scriptable getParentScope()>();

        virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: void addAsProperty(org.mozilla.javascript.Scriptable)>($r1);

        return;
    }

    public org.mozilla.javascript.Scriptable getPrototype()
    {
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable $r1, $r2, $r3, r4;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        $r1 = specialinvoke r0.<org.mozilla.javascript.BaseFunction: org.mozilla.javascript.Scriptable getPrototype()>();

        r4 = $r1;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.Scriptable getParentScope()>();

        $r3 = staticinvoke <org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.Scriptable getFunctionPrototype(org.mozilla.javascript.Scriptable)>($r2);

        r4 = $r3;

        virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: void setPrototype(org.mozilla.javascript.Scriptable)>($r3);

     label1:
        return r4;
    }

    public java.lang.Object call(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.IdFunctionCall $r5;
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable r2, r3;
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r1;
        java.lang.Object $r6;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: org.mozilla.javascript.Scriptable;

        r4 := @parameter3: java.lang.Object[];

        $r5 = r0.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.IdFunctionCall idcall>;

        $r6 = interfaceinvoke $r5.<org.mozilla.javascript.IdFunctionCall: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r1, r2, r3, r4);

        return $r6;
    }

    public org.mozilla.javascript.Scriptable createObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.EcmaError $r2;
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable r4;
        org.mozilla.javascript.Context r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        $z0 = r0.<org.mozilla.javascript.IdFunctionObject: boolean useCallAsConstructor>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.mozilla.javascript.IdFunctionObject: java.lang.String functionName>;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.not.ctor", $r1);

        throw $r2;
    }

    java.lang.String decompile(int, int)
    {
        org.mozilla.javascript.IdFunctionCall $r2, $r5;
        org.mozilla.javascript.IdFunctionObject r1;
        java.lang.StringBuffer $r0;
        int i0, $i1, $i2, i3;
        java.lang.String $r3, $r4, $r7, $r8, $r9;
        boolean z0, $z1, $z3, $z4;
        org.mozilla.javascript.Scriptable r6;

        r1 := @this: org.mozilla.javascript.IdFunctionObject;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i1 = i0 & 1;

        if 0 == $i1 goto label1;

        $z4 = 1;

        $z3 = 1;

        goto label2;

     label1:
        $z4 = 0;

        $z3 = 0;

     label2:
        z0 = $z4;

        if $z3 != 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("function ");

        $r8 = virtualinvoke r1.<org.mozilla.javascript.IdFunctionObject: java.lang.String getFunctionName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("() { ");

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[native code for ");

        $r2 = r1.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.IdFunctionCall idcall>;

        $z1 = $r2 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label4;

        $r5 = r1.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.IdFunctionCall idcall>;

        r6 = (org.mozilla.javascript.Scriptable) $r5;

        $r7 = interfaceinvoke r6.<org.mozilla.javascript.Scriptable: java.lang.String getClassName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

     label4:
        $r3 = virtualinvoke r1.<org.mozilla.javascript.IdFunctionObject: java.lang.String getFunctionName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", arity=");

        $i2 = virtualinvoke r1.<org.mozilla.javascript.IdFunctionObject: int getArity()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        if z0 == 0 goto label5;

        $r9 = "]\n";

        goto label6;

     label5:
        $r9 = "] }\n";

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public int getArity()
    {
        int $i0;
        org.mozilla.javascript.IdFunctionObject r0;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        $i0 = r0.<org.mozilla.javascript.IdFunctionObject: int arity>;

        return $i0;
    }

    public int getLength()
    {
        int $i0;
        org.mozilla.javascript.IdFunctionObject r0;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int getArity()>();

        return $i0;
    }

    public java.lang.String getFunctionName()
    {
        org.mozilla.javascript.IdFunctionObject r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.mozilla.javascript.IdFunctionObject;

        $r1 = r0.<org.mozilla.javascript.IdFunctionObject: java.lang.String functionName>;

        if $r1 != null goto label1;

        $r2 = "";

        goto label2;

     label1:
        $r2 = r0.<org.mozilla.javascript.IdFunctionObject: java.lang.String functionName>;

     label2:
        return $r2;
    }

    public final java.lang.RuntimeException 'unknown'()
    {
        java.lang.IllegalArgumentException $r0;
        org.mozilla.javascript.IdFunctionCall $r6;
        org.mozilla.javascript.IdFunctionObject r3;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7;
        int $i0;
        java.lang.String $r8;

        r3 := @this: org.mozilla.javascript.IdFunctionObject;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BAD FUNCTION ID=");

        $i0 = r3.<org.mozilla.javascript.IdFunctionObject: int methodId>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" MASTER=");

        $r6 = r3.<org.mozilla.javascript.IdFunctionObject: org.mozilla.javascript.IdFunctionCall idcall>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.IdFunctionObject: long serialVersionUID> = -5332312783643935019L;

        return;
    }
}
