public final class org.apache.poi.hslf.dev.SlideShowDumper extends java.lang.Object
{
    private java.io.InputStream istream;
    private org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem;
    private byte[] _docstream;
    private boolean ddfEscher;
    private boolean basicEscher;

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r3;
        java.lang.String[] r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, r4;
        org.apache.poi.hslf.dev.SlideShowDumper $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Useage: SlideShowDumper [-escher|-basicescher] <filename>");

        return;

     label1:
        r4 = r0[0];

        $i1 = lengthof r0;

        if $i1 <= 1 goto label2;

        r4 = r0[1];

     label2:
        $r1 = new org.apache.poi.hslf.dev.SlideShowDumper;

        specialinvoke $r1.<org.apache.poi.hslf.dev.SlideShowDumper: void <init>(java.lang.String)>(r4);

        $i2 = lengthof r0;

        if $i2 <= 1 goto label4;

        $r2 = r0[0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-escher");

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<org.apache.poi.hslf.dev.SlideShowDumper: void setDDFEscher(boolean)>(1);

        goto label4;

     label3:
        virtualinvoke $r1.<org.apache.poi.hslf.dev.SlideShowDumper: void setBasicEscher(boolean)>(1);

     label4:
        virtualinvoke $r1.<org.apache.poi.hslf.dev.SlideShowDumper: void printDump()>();

        virtualinvoke $r1.<org.apache.poi.hslf.dev.SlideShowDumper: void close()>();

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.io.FileInputStream $r1;
        java.lang.String r2;
        org.apache.poi.hslf.dev.SlideShowDumper r0;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r1;
        org.apache.poi.hslf.dev.SlideShowDumper r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void <init>(org.apache.poi.poifs.filesystem.POIFSFileSystem)>($r1);

        r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.io.InputStream istream> = r2;

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException
    {
        byte[] $r5, $r7;
        org.apache.poi.poifs.filesystem.Entry $r3;
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r1;
        int $i0;
        org.apache.poi.poifs.filesystem.DocumentEntry r4;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r6;
        org.apache.poi.hslf.dev.SlideShowDumper r0;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean ddfEscher> = 0;

        r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean basicEscher> = 0;

        r0.<org.apache.poi.hslf.dev.SlideShowDumper: org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem> = r1;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("PowerPoint Document");

        r4 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r3;

        $i0 = interfaceinvoke r4.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r5 = newarray (byte)[$i0];

        r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream> = $r5;

        $r6 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>("PowerPoint Document");

        $r7 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        virtualinvoke $r6.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r7);

        return;
    }

    public void setDDFEscher(boolean)
    {
        org.apache.poi.hslf.dev.SlideShowDumper r0;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean ddfEscher> = z0;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean basicEscher> = $z1;

        return;
    }

    public void setBasicEscher(boolean)
    {
        org.apache.poi.hslf.dev.SlideShowDumper r0;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean basicEscher> = z0;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean ddfEscher> = $z1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.poi.hslf.dev.SlideShowDumper r0;
        java.io.InputStream $r1, $r2;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        $r1 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.io.InputStream istream>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.io.InputStream istream>;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label1:
        r0.<org.apache.poi.hslf.dev.SlideShowDumper: org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem> = null;

        return;
    }

    public void printDump()
    {
        int $i0;
        byte[] $r1;
        org.apache.poi.hslf.dev.SlideShowDumper r0;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        $r1 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        $i0 = lengthof $r1;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkTree(int,int,int)>(0, 0, $i0);

        return;
    }

    public java.lang.String makeHex(short)
    {
        short s0;
        int $i1, $i2;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.String $r0, $r1, $r5;
        org.apache.poi.hslf.dev.SlideShowDumper r6;

        r6 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        s0 := @parameter0: short;

        $i2 = (int) s0;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 1 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return $r1;
    }

    public java.lang.String makeHex(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String $r0, $r1, $r5, $r9, $r13;
        org.apache.poi.hslf.dev.SlideShowDumper r14;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12;

        r14 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 1 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("000");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 != 2 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label2:
        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 != 3 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label3:
        return $r1;
    }

    public void walkTree(int, int, int)
    {
        byte[] $r1, $r2, $r3;
        byte b10, $b15, $b16, $b25, $b29, b33, $b34;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r30, $r32, $r33, $r36, $r38, $r39, $r40, $r45, $r46, $r47;
        long l7, $l9, $l28;
        java.lang.String $r10, $r13, $r20, $r25, $r28, $r29, $r34, $r41, r48;
        org.apache.poi.hslf.dev.SlideShowDumper r0;
        boolean $z0, $z1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, i30, i31, i32;
        java.io.PrintStream $r5, $r15, $r31, $r35, $r37, $r42, $r43, $r44;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i30 = i0;

        i2 = i0 + i1;

     label01:
        $i4 = i2 - 8;

        if i30 > $i4 goto label13;

        $r1 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        $i5 = i30 + 2;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r1, $i5);

        l7 = (long) $i6;

        $r2 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        $i8 = i30 + 4;

        $l9 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>($r2, $i8);

        $r3 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        b10 = $r3[i30];

        r48 = "";

        i31 = 0;

     label02:
        if i31 >= i3 goto label03;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        i31 = i31 + 1;

        goto label02;

     label03:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At position ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r10 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>(i30);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i11 = (int) l7;

        $r20 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>($i11);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), len is ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i12 = (int) $l9;

        $r25 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>($i12);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $i13 = (int) l7;

        $r29 = staticinvoke <org.apache.poi.hslf.record.RecordTypes: java.lang.String recordName(int)>($i13);

        i32 = i30 + 8;

        if $r29 == null goto label11;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("That\'s a ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r41);

        b33 = b10 & 15;

        $b15 = l7 cmp 5003L;

        if $b15 != 0 goto label04;

        $l28 = (long) b10;

        $b29 = $l28 cmp 0L;

        if $b29 != 0 goto label04;

        b33 = 15;

     label04:
        $b34 = l7 cmp 0L;

        if $b34 == 0 goto label05;

        if b33 == 15 goto label06;

     label05:
        $r42 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r42.<java.io.PrintStream: void println()>();

        goto label10;

     label06:
        $b16 = l7 cmp 1035L;

        if $b16 == 0 goto label07;

        $b25 = l7 cmp 1036L;

        if $b25 != 0 goto label09;

     label07:
        $r43 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r43.<java.io.PrintStream: void println()>();

        $z0 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean ddfEscher>;

        if $z0 == 0 goto label08;

        $i24 = i3 + 3;

        $i23 = i32 + 8;

        $i21 = (int) $l9;

        $i22 = $i21 - 8;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkEscherDDF(int,int,int)>($i24, $i23, $i22);

        goto label10;

     label08:
        $z1 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: boolean basicEscher>;

        if $z1 == 0 goto label10;

        $i20 = i3 + 3;

        $i19 = i32 + 8;

        $i17 = (int) $l9;

        $i18 = $i17 - 8;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkEscherBasic(int,int,int)>($i20, $i19, $i18);

        goto label10;

     label09:
        $r44 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r44.<java.io.PrintStream: void println()>();

        $i27 = i3 + 2;

        $i26 = (int) $l9;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkTree(int,int,int)>($i27, i32, $i26);

     label10:
        goto label12;

     label11:
        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** unknown record **");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);

        $r35 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r35.<java.io.PrintStream: void println()>();

     label12:
        $i14 = (int) $l9;

        i30 = i32 + $i14;

        goto label01;

     label13:
        return;
    }

    public void walkEscherDDF(int, int, int)
    {
        byte[] $r1, r64;
        byte $b9, $b10, $b15, $b32;
        org.apache.poi.ddf.DefaultEscherRecordFactory $r66;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r34, $r36, $r40, $r41, $r46, $r48, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r61, $r62, $r65, $r67, $r68, $r69, $r70, $r71, $r72;
        long l2, l4, $l8, $l11, $l12, $l13, $l14, $l21, $l22, $l23, $l24, $l30, $l31, $l33;
        java.lang.String $r10, $r13, $r20, $r25, $r31, $r35, $r37, $r42, $r47, $r49, $r59, r63;
        org.apache.poi.hslf.dev.SlideShowDumper r0;
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherContainerRecord r43;
        org.apache.poi.ddf.EscherRecord $r3;
        int i0, $i1, $i3, $i5, $i6, $i7, $i16, $i17, $i18, $i19, $i20, $i25, $i26, $i27, $i28, $i29, i34, i35, i36, i37, i38, i39, i40, i41, $i42, $i44, $i46;
        java.io.PrintStream $r5, $r15, $r33, $r39, $r45, $r51;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        i0 := @parameter0: int;

        i34 := @parameter1: int;

        i35 := @parameter2: int;

        if i35 >= 8 goto label01;

        return;

     label01:
        r63 = "";

        i36 = 0;

     label02:
        if i36 >= i0 goto label03;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        i36 = i36 + 1;

        goto label02;

     label03:
        r64 = newarray (byte)[i35];

        $r1 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i34, r64, 0, i35);

        $r66 = new org.apache.poi.ddf.DefaultEscherRecordFactory;

        specialinvoke $r66.<org.apache.poi.ddf.DefaultEscherRecordFactory: void <init>()>();

        $r3 = virtualinvoke $r66.<org.apache.poi.ddf.DefaultEscherRecordFactory: org.apache.poi.ddf.EscherRecord createRecord(byte[],int)>(r64, 0);

        virtualinvoke $r3.<org.apache.poi.ddf.EscherRecord: int fillFields(byte[],int,org.apache.poi.ddf.EscherRecordFactory)>(r64, 0, $r66);

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r64, 2);

        l2 = (long) $i1;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r64, 4);

        l4 = (long) $i3;

        $i5 = virtualinvoke $r3.<org.apache.poi.ddf.EscherRecord: int getRecordSize()>();

        i37 = $i5;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At position ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i34);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r10 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>(i34);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i6 = (int) l2;

        $r20 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>($i6);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), len is ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i7 = (int) l4;

        $r25 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>($i7);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") (");

        $l8 = l4 + 8L;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - record claims ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r31);

        if $i5 == 8 goto label04;

        $l31 = (long) $i5;

        $l30 = l4 + 8L;

        $b32 = $l31 cmp $l30;

        if $b32 == 0 goto label04;

        $r51 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Atom length of ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l33 = l4 + 8L;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l33);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") doesn\'t match record length of ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r59);

     label04:
        $z1 = $r3 instanceof org.apache.poi.ddf.EscherContainerRecord;

        if $z1 == 0 goto label05;

        r43 = (org.apache.poi.ddf.EscherContainerRecord) $r3;

        $r45 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r47 = virtualinvoke r43.<org.apache.poi.ddf.EscherContainerRecord: java.lang.String toString()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r49);

        $i29 = i0 + 3;

        $i28 = i34 + 8;

        $i27 = (int) l4;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkEscherDDF(int,int,int)>($i29, $i28, $i27);

        goto label06;

     label05:
        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r35 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label06:
        $b9 = l2 cmp 61451L;

        if $b9 != 0 goto label07;

        $i26 = (int) l4;

        i37 = $i26 + 8;

     label07:
        $b10 = l2 cmp 61453L;

        if $b10 != 0 goto label08;

        $i25 = (int) l4;

        i37 = $i25 + 8;

        virtualinvoke $r3.<org.apache.poi.ddf.EscherRecord: int fillFields(byte[],int,org.apache.poi.ddf.EscherRecordFactory)>(r64, 0, $r66);

        $z0 = $r3 instanceof org.apache.poi.ddf.EscherTextboxRecord;

        if $z0 != 0 goto label08;

        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Really a msofbtClientTextbox !");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r42);

     label08:
        if i37 != 8 goto label09;

        $b15 = l4 cmp 8L;

        $i42 = (int) $b15;

        if $i42 <= 0 goto label09;

        $i20 = i0 + 3;

        $i19 = i34 + 8;

        $i18 = (int) l4;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkEscherDDF(int,int,int)>($i20, $i19, $i18);

        $l21 = (long) i34;

        $l22 = $l21 + l4;

        i38 = (int) $l22;

        i39 = i38 + 8;

        $l23 = (long) i35;

        $l24 = $l23 - l4;

        i40 = (int) $l24;

        $i44 = (int) -8;

        i41 = i40 + $i44;

        goto label10;

     label09:
        $l11 = (long) i34;

        $l12 = $l11 + l4;

        $i16 = (int) $l12;

        i39 = $i16 + 8;

        $l13 = (long) i35;

        $l14 = $l13 - l4;

        $i17 = (int) $l14;

        $i46 = (int) -8;

        i41 = $i17 + $i46;

     label10:
        if i41 < 8 goto label11;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkEscherDDF(int,int,int)>(i0, i39, i41);

     label11:
        return;
    }

    public void walkEscherBasic(int, int, int)
    {
        byte[] $r1, $r2, $r39, $r50;
        byte $b10, $b11, $b19, $b21, $b24, $b33;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r31, $r32, $r42, $r43, $r44, $r45, $r47, $r48, $r53, $r54, $r55, $r56, $r58, $r59, $r63, $r64, $r65, $r68, $r69, $r71, $r72, $r73, $r74, $r75, $r76, $r77;
        long $l6, l27, $l32;
        short s29, s31;
        java.lang.String $r3, $r10, $r13, $r24, $r27, $r28, $r33, $r46, $r49, $r57, $r60, $r66, r70;
        org.apache.poi.hslf.dev.SlideShowDumper r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i22, $i23, $i25, i26, i28, i30, i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        java.io.PrintStream $r5, $r15, $r30, $r34, $r35, $r36, $r37, $r38, $r41, $r52, $r62;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowDumper;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 >= 8 goto label01;

        return;

     label01:
        r70 = "";

        i26 = 0;

     label02:
        if i26 >= i1 goto label03;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        i26 = i26 + 1;

        goto label02;

     label03:
        $r1 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        $i3 = i2 + 2;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r1, $i3);

        l27 = (long) $i4;

        $r2 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        $i5 = i2 + 4;

        $l6 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>($r2, $i5);

        $i7 = (int) l27;

        $r3 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>($i7);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At position ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r10 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>(i2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l27);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), len is ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i8 = (int) $l6;

        $r24 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(int)>($i8);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $i9 = (int) l27;

        $r28 = staticinvoke <org.apache.poi.hslf.record.RecordTypes: java.lang.String recordName(int)>($i9);

        if $r28 == null goto label04;

        $r62 = <java.lang.System: java.io.PrintStream out>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("That\'s an Escher Record: ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>($r66);

        goto label05;

     label04:
        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Unknown Escher Record)");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label05:
        $b10 = l27 cmp 61453L;

        if $b10 != 0 goto label12;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r35.<java.io.PrintStream: void print(java.lang.String)>(r70);

        i28 = 8;

     label06:
        if i28 >= 16 goto label08;

        $r50 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        $i23 = i28 + i2;

        $b24 = $r50[$i23];

        s29 = (short) $b24;

        $i35 = (int) s29;

        if $i35 >= 0 goto label07;

        $i36 = (int) s29;

        $i25 = $i36 + 256;

        s29 = (short) $i25;

     label07:
        $r52 = <java.lang.System: java.io.PrintStream out>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i37 = (int) s29;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r57 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(short)>(s29);

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")  ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void print(java.lang.String)>($r60);

        i28 = i28 + 1;

        goto label06;

     label08:
        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("");

        $r37 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r37.<java.io.PrintStream: void print(java.lang.String)>(r70);

        i30 = 20;

     label09:
        if i30 >= 28 goto label11;

        $r39 = r0.<org.apache.poi.hslf.dev.SlideShowDumper: byte[] _docstream>;

        $i20 = i30 + i2;

        $b21 = $r39[$i20];

        s31 = (short) $b21;

        $i38 = (int) s31;

        if $i38 >= 0 goto label10;

        $i39 = (int) s31;

        $i22 = $i39 + 256;

        s31 = (short) $i22;

     label10:
        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i40 = (int) s31;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r46 = virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: java.lang.String makeHex(short)>(s31);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")  ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void print(java.lang.String)>($r49);

        i30 = i30 + 1;

        goto label09;

     label11:
        $r38 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("");

     label12:
        $r34 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("");

        $b11 = l27 cmp 61443L;

        if $b11 == 0 goto label13;

        $b19 = l27 cmp 61444L;

        if $b19 != 0 goto label14;

     label13:
        $i14 = i1 + 3;

        $i13 = i2 + 8;

        $i12 = (int) $l6;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkEscherBasic(int,int,int)>($i14, $i13, $i12);

     label14:
        $l32 = (long) i0;

        $b33 = $l6 cmp $l32;

        $i41 = (int) $b33;

        if $i41 >= 0 goto label15;

        i34 = (int) $l6;

        $i15 = i2 + i34;

        $i18 = $i15 + 8;

        $i16 = i0 - i34;

        $i17 = $i16 - 8;

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowDumper: void walkEscherBasic(int,int,int)>(i1, $i18, $i17);

     label15:
        return;
    }
}
