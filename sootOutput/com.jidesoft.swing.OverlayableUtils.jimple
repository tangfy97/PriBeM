public class com.jidesoft.swing.OverlayableUtils extends java.lang.Object
{

    public void <init>()
    {
        com.jidesoft.swing.OverlayableUtils r0;

        r0 := @this: com.jidesoft.swing.OverlayableUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.jidesoft.swing.Overlayable getOverlayable(javax.swing.JComponent)
    {
        javax.swing.JComponent r0, $r1;
        java.lang.Object $r2;
        java.awt.Container $r3, r5;
        boolean $z0, $z1;
        com.jidesoft.swing.Overlayable $r4;

        r0 := @parameter0: javax.swing.JComponent;

        r5 = r0;

     label1:
        $r1 = (javax.swing.JComponent) r5;

        $r2 = virtualinvoke $r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("Overlayable.overlayable");

        $z0 = $r2 instanceof com.jidesoft.swing.Overlayable;

        if $z0 == 0 goto label2;

        $r4 = (com.jidesoft.swing.Overlayable) $r2;

        return $r4;

     label2:
        $r3 = virtualinvoke r5.<java.awt.Container: java.awt.Container getParent()>();

        r5 = $r3;

        $z1 = $r3 instanceof javax.swing.JComponent;

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        return null;
    }

    public static com.jidesoft.swing.Overlayable[] getAllOverlayables(javax.swing.JComponent)
    {
        javax.swing.JComponent r1, $r2;
        java.lang.Object[] $r5;
        com.jidesoft.swing.Overlayable[] $r4, $r6;
        java.util.ArrayList $r0;
        int $i0;
        java.lang.Object $r3;
        java.awt.Container r8, $r9;
        boolean $z0, $z1;
        com.jidesoft.swing.Overlayable $r7;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r8 = r1;

     label1:
        $r2 = (javax.swing.JComponent) r8;

        $r3 = virtualinvoke $r2.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("Overlayable.overlayable");

        $z0 = $r3 instanceof com.jidesoft.swing.Overlayable;

        if $z0 == 0 goto label2;

        $z1 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r7 = (com.jidesoft.swing.Overlayable) $r3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

     label2:
        $r9 = virtualinvoke r8.<java.awt.Container: java.awt.Container getParent()>();

        r8 = $r9;

        if $r9 != null goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = newarray (com.jidesoft.swing.Overlayable)[$i0];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (com.jidesoft.swing.Overlayable[]) $r5;

        return $r6;
    }

    public static void repaintOverlayable(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        java.awt.Component $r2;
        com.jidesoft.swing.Overlayable $r1;
        boolean $z0;

        r0 := @parameter0: javax.swing.JComponent;

        $r1 = staticinvoke <com.jidesoft.swing.OverlayableUtils: com.jidesoft.swing.Overlayable getOverlayable(javax.swing.JComponent)>(r0);

        if $r1 == null goto label1;

        $z0 = $r1 instanceof java.awt.Component;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Component) $r1;

        virtualinvoke $r2.<java.awt.Component: void repaint()>();

     label1:
        return;
    }

    public static void repaintAllOverlayables(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        int i0, i1;
        java.awt.Component $r3;
        com.jidesoft.swing.Overlayable[] $r1;
        com.jidesoft.swing.Overlayable r2;
        boolean $z0;

        r0 := @parameter0: javax.swing.JComponent;

        $r1 = staticinvoke <com.jidesoft.swing.OverlayableUtils: com.jidesoft.swing.Overlayable[] getAllOverlayables(javax.swing.JComponent)>(r0);

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        if r2 == null goto label2;

        $z0 = r2 instanceof java.awt.Component;

        if $z0 == 0 goto label2;

        $r3 = (java.awt.Component) r2;

        virtualinvoke $r3.<java.awt.Component: void repaint()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static javax.swing.Icon getPredefinedOverlayIcon(java.lang.String)
    {
        javax.swing.ImageIcon $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.jidesoft.swing.OverlayableIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>(r0);

        return $r1;
    }
}
