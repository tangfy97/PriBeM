public class org.mozilla.universalchardet.UniversalDetector extends java.lang.Object
{
    public static final float SHORTCUT_THRESHOLD;
    public static final float MINIMUM_THRESHOLD;
    private org.mozilla.universalchardet.UniversalDetector$InputState inputState;
    private boolean done;
    private boolean start;
    private boolean gotData;
    private byte lastChar;
    private java.lang.String detectedCharset;
    private org.mozilla.universalchardet.prober.CharsetProber[] probers;
    private org.mozilla.universalchardet.prober.CharsetProber escCharsetProber;
    private org.mozilla.universalchardet.CharsetListener listener;

    public void <init>(org.mozilla.universalchardet.CharsetListener)
    {
        org.mozilla.universalchardet.prober.CharsetProber[] $r2, $r3, $r4;
        org.mozilla.universalchardet.UniversalDetector r0;
        org.mozilla.universalchardet.CharsetListener r1;
        int $i0, i1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        r1 := @parameter0: org.mozilla.universalchardet.CharsetListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener> = r1;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber> = null;

        $r2 = newarray (org.mozilla.universalchardet.prober.CharsetProber)[3];

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers> = $r2;

        i1 = 0;

     label1:
        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r4 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r4[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.mozilla.universalchardet.UniversalDetector: void reset()>();

        return;
    }

    public boolean isDone()
    {
        org.mozilla.universalchardet.UniversalDetector r0;
        boolean $z0;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $z0 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean done>;

        return $z0;
    }

    public java.lang.String getDetectedCharset()
    {
        java.lang.String $r1;
        org.mozilla.universalchardet.UniversalDetector r0;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $r1 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        return $r1;
    }

    public void setListener(org.mozilla.universalchardet.CharsetListener)
    {
        org.mozilla.universalchardet.UniversalDetector r0;
        org.mozilla.universalchardet.CharsetListener r1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        r1 := @parameter0: org.mozilla.universalchardet.CharsetListener;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener> = r1;

        return;
    }

    public org.mozilla.universalchardet.CharsetListener getListener()
    {
        org.mozilla.universalchardet.UniversalDetector r0;
        org.mozilla.universalchardet.CharsetListener $r1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $r1 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        return $r1;
    }

    public void handleData(byte[], int, int)
    {
        org.mozilla.universalchardet.prober.CharsetProber $r8, $r12, $r14, $r15, $r18, $r27, $r29, $r31, $r33;
        byte[] r7;
        org.mozilla.universalchardet.prober.CharsetProber[] $r5, $r6, $r11, $r28, $r30, $r32, $r35, $r37, $r39;
        byte $b3, $b5, $b6, $b8, $b10, $b12, $b20;
        org.mozilla.universalchardet.prober.SBCSGroupProber $r49;
        short $s4, s13, s14, s15, s16, s19, $s22, $s23, $s24, $s25, $s37;
        java.lang.String $r13, $r19, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47;
        org.mozilla.universalchardet.prober.MBCSGroupProber $r48;
        org.mozilla.universalchardet.prober.Latin1Prober $r50;
        org.mozilla.universalchardet.UniversalDetector$InputState $r1, $r2, $r3, $r4, $r21, $r22, $r23, $r24, $r25, $r26;
        org.mozilla.universalchardet.UniversalDetector r0;
        boolean $z0, $z1;
        org.mozilla.universalchardet.prober.CharsetProber$ProbingState $r9, $r10, $r16, $r17;
        org.mozilla.universalchardet.prober.EscCharsetProber $r51;
        int i0, i1, $i2, $i7, $i9, $i11, $i17, i18, i21, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        r7 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean done>;

        if $z0 == 0 goto label01;

        return;

     label01:
        if i0 <= 0 goto label02;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean gotData> = 1;

     label02:
        $z1 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean start>;

        if $z1 == 0 goto label11;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean start> = 0;

        if i0 <= 3 goto label11;

        $b6 = r7[i1];

        $s22 = (short) $b6;

        s14 = $s22 & 255;

        $i7 = i1 + 1;

        $b8 = r7[$i7];

        $s23 = (short) $b8;

        s15 = $s23 & 255;

        $i9 = i1 + 2;

        $b10 = r7[$i9];

        $s24 = (short) $b10;

        s16 = $s24 & 255;

        $i11 = i1 + 3;

        $b12 = r7[$i11];

        $s25 = (short) $b12;

        s13 = $s25 & 255;

        $i26 = (int) s14;

        lookupswitch($i26)
        {
            case 0: goto label06;
            case 239: goto label03;
            case 254: goto label04;
            case 255: goto label08;
            default: goto label10;
        };

     label03:
        $i27 = (int) s15;

        if $i27 != 187 goto label10;

        $i28 = (int) s16;

        if $i28 != 191 goto label10;

        $r44 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_8>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r44;

        goto label10;

     label04:
        $i29 = (int) s15;

        if $i29 != 255 goto label05;

        if s16 != 0 goto label05;

        if s13 != 0 goto label05;

        $r43 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_X_ISO_10646_UCS_4_3412>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r43;

        goto label10;

     label05:
        $i30 = (int) s15;

        if $i30 != 255 goto label10;

        $r42 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_16BE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r42;

        goto label10;

     label06:
        if s15 != 0 goto label07;

        $i31 = (int) s16;

        if $i31 != 254 goto label07;

        $i32 = (int) s13;

        if $i32 != 255 goto label07;

        $r46 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_32BE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r46;

        goto label10;

     label07:
        if s15 != 0 goto label10;

        $i33 = (int) s16;

        if $i33 != 255 goto label10;

        $i34 = (int) s13;

        if $i34 != 254 goto label10;

        $r45 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_X_ISO_10646_UCS_4_2143>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r45;

        goto label10;

     label08:
        $i35 = (int) s15;

        if $i35 != 254 goto label09;

        if s16 != 0 goto label09;

        if s13 != 0 goto label09;

        $r41 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_32LE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r41;

        goto label10;

     label09:
        $i36 = (int) s15;

        if $i36 != 254 goto label10;

        $r40 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_16LE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r40;

     label10:
        $r47 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        if $r47 == null goto label11;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        return;

     label11:
        $i17 = i1 + i0;

        i18 = i1;

     label12:
        if i18 >= $i17 goto label20;

        $b3 = r7[i18];

        $s37 = (short) $b3;

        s19 = $s37 & 255;

        $s4 = s19 & 128;

        if $s4 == 0 goto label16;

        $i38 = (int) s19;

        if $i38 == 160 goto label16;

        $r25 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r24 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        if $r25 == $r24 goto label19;

        $r26 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState> = $r26;

        $r27 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        if $r27 == null goto label13;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber> = null;

     label13:
        $r28 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r29 = $r28[0];

        if $r29 != null goto label14;

        $r39 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r48 = new org.mozilla.universalchardet.prober.MBCSGroupProber;

        specialinvoke $r48.<org.mozilla.universalchardet.prober.MBCSGroupProber: void <init>()>();

        $r39[0] = $r48;

     label14:
        $r30 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r31 = $r30[1];

        if $r31 != null goto label15;

        $r37 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r49 = new org.mozilla.universalchardet.prober.SBCSGroupProber;

        specialinvoke $r49.<org.mozilla.universalchardet.prober.SBCSGroupProber: void <init>()>();

        $r37[1] = $r49;

     label15:
        $r32 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r33 = $r32[2];

        if $r33 != null goto label19;

        $r35 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r50 = new org.mozilla.universalchardet.prober.Latin1Prober;

        specialinvoke $r50.<org.mozilla.universalchardet.prober.Latin1Prober: void <init>()>();

        $r35[2] = $r50;

        goto label19;

     label16:
        $r22 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r21 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState PURE_ASCII>;

        if $r22 != $r21 goto label18;

        $i39 = (int) s19;

        if $i39 == 27 goto label17;

        $i40 = (int) s19;

        if $i40 != 123 goto label18;

        $b5 = r0.<org.mozilla.universalchardet.UniversalDetector: byte lastChar>;

        $i41 = (int) $b5;

        if $i41 != 126 goto label18;

     label17:
        $r23 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState ESC_ASCII>;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState> = $r23;

     label18:
        $b20 = r7[i18];

        r0.<org.mozilla.universalchardet.UniversalDetector: byte lastChar> = $b20;

     label19:
        i18 = i18 + 1;

        goto label12;

     label20:
        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r1 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState ESC_ASCII>;

        if $r2 != $r1 goto label22;

        $r14 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        if $r14 != null goto label21;

        $r51 = new org.mozilla.universalchardet.prober.EscCharsetProber;

        specialinvoke $r51.<org.mozilla.universalchardet.prober.EscCharsetProber: void <init>()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber> = $r51;

     label21:
        $r15 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        $r16 = virtualinvoke $r15.<org.mozilla.universalchardet.prober.CharsetProber: org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int)>(r7, i1, i0);

        $r17 = <org.mozilla.universalchardet.prober.CharsetProber$ProbingState: org.mozilla.universalchardet.prober.CharsetProber$ProbingState FOUND_IT>;

        if $r16 != $r17 goto label25;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        $r18 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        $r19 = virtualinvoke $r18.<org.mozilla.universalchardet.prober.CharsetProber: java.lang.String getCharSetName()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r19;

        goto label25;

     label22:
        $r4 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r3 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        if $r4 != $r3 goto label25;

        i21 = 0;

     label23:
        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i2 = lengthof $r5;

        if i21 >= $i2 goto label25;

        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r8 = $r6[i21];

        $r9 = virtualinvoke $r8.<org.mozilla.universalchardet.prober.CharsetProber: org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int)>(r7, i1, i0);

        $r10 = <org.mozilla.universalchardet.prober.CharsetProber$ProbingState: org.mozilla.universalchardet.prober.CharsetProber$ProbingState FOUND_IT>;

        if $r9 != $r10 goto label24;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        $r11 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r12 = $r11[i21];

        $r13 = virtualinvoke $r12.<org.mozilla.universalchardet.prober.CharsetProber: java.lang.String getCharSetName()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r13;

        return;

     label24:
        i21 = i21 + 1;

        goto label23;

     label25:
        return;
    }

    public void dataEnd()
    {
        org.mozilla.universalchardet.UniversalDetector$InputState $r2, $r3, $r4, $r5;
        org.mozilla.universalchardet.prober.CharsetProber $r8, $r14;
        org.mozilla.universalchardet.prober.CharsetProber[] $r6, $r7, $r13;
        org.mozilla.universalchardet.UniversalDetector r0;
        byte $b1, $b2;
        org.mozilla.universalchardet.CharsetListener $r10, $r12, $r15, $r17;
        int $i0, i3, i4, $i5, $i6;
        java.lang.String $r1, $r9, $r11, $r16;
        boolean $z0;
        float $f0, f1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $z0 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean gotData>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        if $r1 == null goto label3;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        $r15 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        if $r15 == null goto label2;

        $r17 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        $r16 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        interfaceinvoke $r17.<org.mozilla.universalchardet.CharsetListener: void report(java.lang.String)>($r16);

     label2:
        return;

     label3:
        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r2 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        if $r3 != $r2 goto label8;

        f1 = 0.0F;

        i3 = 0;

        i4 = 0;

     label4:
        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i0 = lengthof $r6;

        if i4 >= $i0 goto label6;

        $r13 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r14 = $r13[i4];

        $f0 = virtualinvoke $r14.<org.mozilla.universalchardet.prober.CharsetProber: float getConfidence()>();

        $b2 = $f0 cmpl f1;

        $i5 = (int) $b2;

        if $i5 <= 0 goto label5;

        f1 = $f0;

        i3 = i4;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        $b1 = f1 cmpl 0.2F;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label7;

        $r7 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r8 = $r7[i3];

        $r9 = virtualinvoke $r8.<org.mozilla.universalchardet.prober.CharsetProber: java.lang.String getCharSetName()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r9;

        $r10 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        if $r10 == null goto label7;

        $r12 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        $r11 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        interfaceinvoke $r12.<org.mozilla.universalchardet.CharsetListener: void report(java.lang.String)>($r11);

     label7:
        goto label9;

     label8:
        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r4 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState ESC_ASCII>;

        if $r5 != $r4 goto label9;

     label9:
        return;
    }

    public void reset()
    {
        org.mozilla.universalchardet.UniversalDetector$InputState $r1;
        org.mozilla.universalchardet.prober.CharsetProber $r2, $r4, $r6, $r7;
        org.mozilla.universalchardet.prober.CharsetProber[] $r3, $r5, $r8;
        org.mozilla.universalchardet.UniversalDetector r0;
        int i0, $i1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 0;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean start> = 1;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = null;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean gotData> = 0;

        $r1 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState PURE_ASCII>;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState> = $r1;

        r0.<org.mozilla.universalchardet.UniversalDetector: byte lastChar> = 0;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        if $r2 == null goto label1;

        $r7 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        virtualinvoke $r7.<org.mozilla.universalchardet.prober.CharsetProber: void reset()>();

     label1:
        i0 = 0;

     label2:
        $r8 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i1 = lengthof $r8;

        if i0 >= $i1 goto label4;

        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r4 = $r3[i0];

        if $r4 == null goto label3;

        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r6 = $r5[i0];

        virtualinvoke $r6.<org.mozilla.universalchardet.prober.CharsetProber: void reset()>();

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r6;
        byte[] r3;
        java.lang.String[] r0;
        java.io.FileInputStream $r4;
        org.mozilla.universalchardet.UniversalDetector $r1;
        org.mozilla.universalchardet.UniversalDetector$1 $r2;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 1 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("USAGE: java UniversalDetector filename");

        return;

     label1:
        $r1 = new org.mozilla.universalchardet.UniversalDetector;

        $r2 = new org.mozilla.universalchardet.UniversalDetector$1;

        specialinvoke $r2.<org.mozilla.universalchardet.UniversalDetector$1: void <init>()>();

        specialinvoke $r1.<org.mozilla.universalchardet.UniversalDetector: void <init>(org.mozilla.universalchardet.CharsetListener)>($r2);

        r3 = newarray (byte)[4096];

        $r4 = new java.io.FileInputStream;

        $r5 = r0[0];

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r5);

     label2:
        $i1 = virtualinvoke $r4.<java.io.FileInputStream: int read(byte[])>(r3);

        if $i1 <= 0 goto label3;

        $z0 = virtualinvoke $r1.<org.mozilla.universalchardet.UniversalDetector: boolean isDone()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r1.<org.mozilla.universalchardet.UniversalDetector: void handleData(byte[],int,int)>(r3, 0, $i1);

        goto label2;

     label3:
        virtualinvoke $r1.<org.mozilla.universalchardet.UniversalDetector: void dataEnd()>();

        return;
    }

    public static void <clinit>()
    {
        <org.mozilla.universalchardet.UniversalDetector: float MINIMUM_THRESHOLD> = 0.2F;

        <org.mozilla.universalchardet.UniversalDetector: float SHORTCUT_THRESHOLD> = 0.95F;

        return;
    }
}
