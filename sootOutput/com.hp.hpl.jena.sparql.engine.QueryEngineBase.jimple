public abstract class com.hp.hpl.jena.sparql.engine.QueryEngineBase extends java.lang.Object implements com.hp.hpl.jena.sparql.engine.OpEval, org.apache.jena.atlas.lib.Closeable
{
    public static final com.hp.hpl.jena.sparql.mgt.QueryEngineInfo queryEngineInfo;
    protected com.hp.hpl.jena.sparql.core.DatasetGraph dataset;
    protected com.hp.hpl.jena.sparql.util.Context context;
    private com.hp.hpl.jena.sparql.engine.binding.Binding startBinding;
    private com.hp.hpl.jena.query.Query query;
    private com.hp.hpl.jena.sparql.algebra.Op queryOp;
    private com.hp.hpl.jena.sparql.engine.Plan plan;

    protected void <init>(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.query.Query r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.util.Context r3;
        com.hp.hpl.jena.sparql.algebra.Op $r5;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r4 := @parameter0: com.hp.hpl.jena.query.Query;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3);

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.query.Query query> = r4;

        virtualinvoke r4.<com.hp.hpl.jena.query.Query: void setResultVars()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.algebra.Op createOp(com.hp.hpl.jena.query.Query)>(r4);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: void setOp(com.hp.hpl.jena.sparql.algebra.Op)>($r5);

        return;
    }

    protected void <init>(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.util.Context r3, $r4, $r6, $r7;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.algebra.Op r5;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r5 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3);

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context>;

        if $r4 != null goto label1;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.Context: com.hp.hpl.jena.sparql.util.Context setupContext(com.hp.hpl.jena.sparql.util.Context,com.hp.hpl.jena.sparql.core.DatasetGraph)>($r6, r1);

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context> = $r7;

     label1:
        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.query.Query query> = null;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: void setOp(com.hp.hpl.jena.sparql.algebra.Op)>(r5);

        return;
    }

    private void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;
        com.hp.hpl.jena.sparql.util.Context r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r3 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.core.DatasetGraph dataset> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.query.Query query> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.algebra.Op queryOp> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.Plan plan> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context> = r1;

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.core.DatasetGraph dataset> = r2;

        if r3 != null goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Null initial input");

        r3 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingRoot: com.hp.hpl.jena.sparql.engine.binding.Binding create()>();

     label1:
        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.binding.Binding startBinding> = r3;

        return;
    }

    public com.hp.hpl.jena.sparql.engine.Plan getPlan()
    {
        com.hp.hpl.jena.sparql.engine.Plan $r1, $r2, $r3;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.Plan plan>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.Plan createPlan()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.Plan plan> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.Plan plan>;

        return $r2;
    }

    protected com.hp.hpl.jena.sparql.engine.Plan createPlan()
    {
        com.hp.hpl.jena.sparql.engine.PlanOp $r7;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r8, $r13, r16;
        boolean $z0;
        com.hp.hpl.jena.sparql.util.Symbol $r14;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r3, $r6, $r11;
        com.hp.hpl.jena.sparql.util.Context $r4, $r9, $r15;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1, $r5, $r10, $r12;
        com.hp.hpl.jena.sparql.engine.QueryIterator r17;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r16 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.algebra.Op queryOp>;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.binding.Binding startBinding>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r12 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.binding.Binding startBinding>;

        $r13 = staticinvoke <com.hp.hpl.jena.sparql.core.Substitute: com.hp.hpl.jena.sparql.algebra.Op substitute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r16, $r12);

        r16 = $r13;

        $r15 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context>;

        $r14 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysCurrentAlgebra>;

        virtualinvoke $r15.<com.hp.hpl.jena.sparql.util.Context: void put(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r14, $r13);

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.algebra.Op modifyOp(com.hp.hpl.jena.sparql.algebra.Op)>(r16);

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.core.DatasetGraph dataset>;

        if $r3 == null goto label2;

        $r11 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.core.DatasetGraph dataset>;

        $r10 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.binding.Binding startBinding>;

        $r9 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context>;

        r17 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.QueryIterator evaluate(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>($r2, $r11, $r10, $r9);

        goto label3;

     label2:
        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.core.DatasetGraph dataset>;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.binding.Binding startBinding>;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context>;

        r17 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.QueryIterator evaluateNoMgt(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>($r2, $r6, $r5, $r4);

     label3:
        $r7 = new com.hp.hpl.jena.sparql.engine.PlanOp;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.algebra.Op getOp()>();

        specialinvoke $r7.<com.hp.hpl.jena.sparql.engine.PlanOp: void <init>(com.hp.hpl.jena.sparql.algebra.Op,org.apache.jena.atlas.lib.Closeable,com.hp.hpl.jena.sparql.engine.QueryIterator)>($r8, r0, r17);

        return $r7;
    }

    protected com.hp.hpl.jena.sparql.algebra.Op modifyOp(com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.algebra.Op r0;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r1;

        r1 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        return r0;
    }

    protected com.hp.hpl.jena.sparql.algebra.Op createOp(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.algebra.Op $r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r2;

        r2 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op compile(com.hp.hpl.jena.query.Query)>(r0);

        return $r1;
    }

    public final com.hp.hpl.jena.sparql.engine.QueryIterator evaluate(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query $r1, $r9, $r14;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r11;
        com.hp.hpl.jena.sparql.util.Context r3;
        com.hp.hpl.jena.sparql.engine.binding.Binding r12;
        com.hp.hpl.jena.sparql.mgt.QueryEngineInfo $r4, $r5, $r7, $r10;
        java.lang.Object $r8;
        com.hp.hpl.jena.sparql.algebra.Op r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r13;
        com.hp.hpl.jena.sparql.util.Symbol $r6;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r11 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r12 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.query.Query query>;

        if $r1 == null goto label1;

        $r14 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.query.Query query>;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.util.Context)>("QUERY", $r14, r3);

     label1:
        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.util.Context)>("ALGEBRA", r2, r3);

        $r4 = <com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.mgt.QueryEngineInfo queryEngineInfo>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.mgt.QueryEngineInfo: void incQueryCount()>();

        $r5 = <com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.mgt.QueryEngineInfo queryEngineInfo>;

        virtualinvoke $r5.<com.hp.hpl.jena.sparql.mgt.QueryEngineInfo: void setLastQueryExecAt()>();

        $r7 = <com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.mgt.QueryEngineInfo queryEngineInfo>;

        $r6 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysCurrentQuery>;

        $r8 = virtualinvoke r3.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r6);

        $r9 = (com.hp.hpl.jena.query.Query) $r8;

        virtualinvoke $r7.<com.hp.hpl.jena.sparql.mgt.QueryEngineInfo: void setLastQueryString(com.hp.hpl.jena.query.Query)>($r9);

        $r10 = <com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.mgt.QueryEngineInfo queryEngineInfo>;

        virtualinvoke $r10.<com.hp.hpl.jena.sparql.mgt.QueryEngineInfo: void setLastOp(com.hp.hpl.jena.sparql.algebra.Op)>(r2);

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.QueryIterator eval(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r2, r11, r12, r3);

        return $r13;
    }

    private com.hp.hpl.jena.sparql.engine.QueryIterator evaluateNoMgt(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;
        com.hp.hpl.jena.sparql.util.Context r4;
        com.hp.hpl.jena.sparql.algebra.Op r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r5;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.QueryIterator eval(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3, r4);

        return $r5;
    }

    protected abstract com.hp.hpl.jena.sparql.engine.QueryIterator eval(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context);

    public com.hp.hpl.jena.sparql.algebra.Op getOp()
    {
        com.hp.hpl.jena.sparql.algebra.Op $r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.algebra.Op queryOp>;

        return $r1;
    }

    protected com.hp.hpl.jena.sparql.engine.binding.Binding getStartBinding()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.engine.binding.Binding startBinding>;

        return $r1;
    }

    public void close()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        return;
    }

    protected void setOp(com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineBase r0;
        com.hp.hpl.jena.sparql.util.Context $r3;
        com.hp.hpl.jena.sparql.algebra.Op r1;
        com.hp.hpl.jena.sparql.util.Symbol $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.algebra.Op queryOp> = r1;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.util.Context context>;

        $r2 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysCurrentAlgebra>;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.util.Context: void put(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r2, r1);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.mgt.QueryEngineInfo $r0;

        $r0 = new com.hp.hpl.jena.sparql.mgt.QueryEngineInfo;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.mgt.QueryEngineInfo: void <init>()>();

        <com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.mgt.QueryEngineInfo queryEngineInfo> = $r0;

        return;
    }
}
