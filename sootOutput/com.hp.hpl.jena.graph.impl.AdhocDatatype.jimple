public class com.hp.hpl.jena.graph.impl.AdhocDatatype extends com.hp.hpl.jena.datatypes.BaseDatatype
{
    private final java.lang.Class javaClass;

    public void <init>(java.lang.Class)
    {
        com.hp.hpl.jena.graph.impl.AdhocDatatype r0;
        java.lang.Class r1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.jena.graph.impl.AdhocDatatype;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.impl.AdhocDatatype: java.lang.String adhocURIfor(java.lang.Class)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.datatypes.BaseDatatype: void <init>(java.lang.String)>($r2);

        r0.<com.hp.hpl.jena.graph.impl.AdhocDatatype: java.lang.Class javaClass> = r1;

        return;
    }

    public boolean isValidValue(java.lang.Object)
    {
        com.hp.hpl.jena.graph.impl.AdhocDatatype r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.AdhocDatatype;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.AdhocDatatype: java.lang.Class javaClass>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Class getJavaClass()
    {
        com.hp.hpl.jena.graph.impl.AdhocDatatype r0;
        java.lang.Class $r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.AdhocDatatype;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.AdhocDatatype: java.lang.Class javaClass>;

        return $r1;
    }

    public java.lang.Object parse(java.lang.String)
    {
        com.hp.hpl.jena.graph.impl.AdhocDatatype r3;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7, r8;

        r3 := @this: com.hp.hpl.jena.graph.impl.AdhocDatatype;

        r8 := @parameter0: java.lang.String;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("don\'t know how to parse a ");

        $r4 = r3.<com.hp.hpl.jena.graph.impl.AdhocDatatype: java.lang.Class javaClass>;

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.graph.impl.AdhocDatatype r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        r2 := @this: com.hp.hpl.jena.graph.impl.AdhocDatatype;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Datatype[adhoc: ");

        $r3 = r2.<com.hp.hpl.jena.graph.impl.AdhocDatatype: java.lang.Class javaClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static java.lang.String adhocURIfor(java.lang.Class)
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.Class r2;
        java.lang.String $r3, $r5;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("java:");

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
