public final enum class org.apache.poi.ss.usermodel.FontFamily extends java.lang.Enum
{
    public static final enum org.apache.poi.ss.usermodel.FontFamily NOT_APPLICABLE;
    public static final enum org.apache.poi.ss.usermodel.FontFamily ROMAN;
    public static final enum org.apache.poi.ss.usermodel.FontFamily SWISS;
    public static final enum org.apache.poi.ss.usermodel.FontFamily MODERN;
    public static final enum org.apache.poi.ss.usermodel.FontFamily SCRIPT;
    public static final enum org.apache.poi.ss.usermodel.FontFamily DECORATIVE;
    private int family;
    private static org.apache.poi.ss.usermodel.FontFamily[] _table;
    private static final org.apache.poi.ss.usermodel.FontFamily[] $VALUES;

    public static org.apache.poi.ss.usermodel.FontFamily[] values()
    {
        java.lang.Object $r1;
        org.apache.poi.ss.usermodel.FontFamily[] $r0, $r2;

        $r0 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.ss.usermodel.FontFamily[]) $r1;

        return $r2;
    }

    public static org.apache.poi.ss.usermodel.FontFamily valueOf(java.lang.String)
    {
        org.apache.poi.ss.usermodel.FontFamily $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/ss/usermodel/FontFamily;", r0);

        $r2 = (org.apache.poi.ss.usermodel.FontFamily) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.apache.poi.ss.usermodel.FontFamily r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.apache.poi.ss.usermodel.FontFamily;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.poi.ss.usermodel.FontFamily: int family> = i1;

        return;
    }

    public int getValue()
    {
        org.apache.poi.ss.usermodel.FontFamily r0;
        int $i0;

        r0 := @this: org.apache.poi.ss.usermodel.FontFamily;

        $i0 = r0.<org.apache.poi.ss.usermodel.FontFamily: int family>;

        return $i0;
    }

    public static org.apache.poi.ss.usermodel.FontFamily valueOf(int)
    {
        int i0;
        org.apache.poi.ss.usermodel.FontFamily $r1;
        org.apache.poi.ss.usermodel.FontFamily[] $r0;

        i0 := @parameter0: int;

        $r0 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily[] _table>;

        $r1 = $r0[i0];

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.usermodel.FontFamily $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, r15;
        int i0, $i1, i2;
        org.apache.poi.ss.usermodel.FontFamily[] $r6, $r13, $r14, $r16;

        $r0 = new org.apache.poi.ss.usermodel.FontFamily;

        specialinvoke $r0.<org.apache.poi.ss.usermodel.FontFamily: void <init>(java.lang.String,int,int)>("NOT_APPLICABLE", 0, 0);

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily NOT_APPLICABLE> = $r0;

        $r1 = new org.apache.poi.ss.usermodel.FontFamily;

        specialinvoke $r1.<org.apache.poi.ss.usermodel.FontFamily: void <init>(java.lang.String,int,int)>("ROMAN", 1, 1);

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily ROMAN> = $r1;

        $r2 = new org.apache.poi.ss.usermodel.FontFamily;

        specialinvoke $r2.<org.apache.poi.ss.usermodel.FontFamily: void <init>(java.lang.String,int,int)>("SWISS", 2, 2);

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily SWISS> = $r2;

        $r3 = new org.apache.poi.ss.usermodel.FontFamily;

        specialinvoke $r3.<org.apache.poi.ss.usermodel.FontFamily: void <init>(java.lang.String,int,int)>("MODERN", 3, 3);

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily MODERN> = $r3;

        $r4 = new org.apache.poi.ss.usermodel.FontFamily;

        specialinvoke $r4.<org.apache.poi.ss.usermodel.FontFamily: void <init>(java.lang.String,int,int)>("SCRIPT", 4, 4);

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily SCRIPT> = $r4;

        $r5 = new org.apache.poi.ss.usermodel.FontFamily;

        specialinvoke $r5.<org.apache.poi.ss.usermodel.FontFamily: void <init>(java.lang.String,int,int)>("DECORATIVE", 5, 5);

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily DECORATIVE> = $r5;

        $r6 = newarray (org.apache.poi.ss.usermodel.FontFamily)[6];

        $r7 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily NOT_APPLICABLE>;

        $r6[0] = $r7;

        $r8 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily ROMAN>;

        $r6[1] = $r8;

        $r9 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily SWISS>;

        $r6[2] = $r9;

        $r10 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily MODERN>;

        $r6[3] = $r10;

        $r11 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily SCRIPT>;

        $r6[4] = $r11;

        $r12 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily DECORATIVE>;

        $r6[5] = $r12;

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily[] $VALUES> = $r6;

        $r13 = newarray (org.apache.poi.ss.usermodel.FontFamily)[6];

        <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily[] _table> = $r13;

        $r14 = staticinvoke <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily[] values()>();

        i0 = lengthof $r14;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r15 = $r14[i2];

        $r16 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily[] _table>;

        $i1 = virtualinvoke r15.<org.apache.poi.ss.usermodel.FontFamily: int getValue()>();

        $r16[$i1] = r15;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
