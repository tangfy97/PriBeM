class com.glines.socketio.server.DefaultSession extends java.lang.Object implements com.glines.socketio.server.SocketIOSession
{
    private static final int SESSION_ID_LENGTH;
    private static final java.util.logging.Logger LOGGER;
    private final com.glines.socketio.server.SocketIOSessionManager socketIOSessionManager;
    private final java.lang.String sessionId;
    private final java.util.concurrent.atomic.AtomicLong messageId;
    private final java.util.Map attributes;
    private com.glines.socketio.server.SocketIOInbound inbound;
    private com.glines.socketio.server.TransportHandler handler;
    private com.glines.socketio.common.ConnectionState state;
    private long hbDelay;
    private com.glines.socketio.server.SocketIOSession$SessionTask hbDelayTask;
    private long timeout;
    private com.glines.socketio.server.SocketIOSession$SessionTask timeoutTask;
    private boolean timedout;
    private java.lang.String closeId;
    private static int[] $SWITCH_TABLE$com$glines$socketio$server$SocketIOFrame$FrameType;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.glines.socketio.server.DefaultSession: int SESSION_ID_LENGTH> = 20;

        $r0 = class "Lcom/glines/socketio/server/DefaultSession;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER> = $r2;

        return;
    }

    void <init>(com.glines.socketio.server.SocketIOSessionManager, com.glines.socketio.server.SocketIOInbound)
    {
        com.glines.socketio.server.DefaultSession r0;
        java.util.concurrent.atomic.AtomicLong $r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        com.glines.socketio.server.SocketIOInbound r6;
        java.lang.String $r1;
        com.glines.socketio.common.ConnectionState $r4;
        com.glines.socketio.server.SocketIOSessionManager r5;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r5 := @parameter0: com.glines.socketio.server.SocketIOSessionManager;

        r6 := @parameter1: com.glines.socketio.server.SocketIOInbound;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.glines.socketio.util.Web: java.lang.String generateRandomString(int)>(20);

        r0.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.glines.socketio.server.DefaultSession: java.util.concurrent.atomic.AtomicLong messageId> = $r2;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.glines.socketio.server.DefaultSession: java.util.Map attributes> = $r3;

        $r4 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CONNECTING>;

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r4;

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSessionManager socketIOSessionManager> = r5;

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound> = r6;

        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        com.glines.socketio.server.DefaultSession r0;
        java.util.Map $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.glines.socketio.server.DefaultSession: java.util.Map attributes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        com.glines.socketio.server.DefaultSession r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.glines.socketio.server.DefaultSession: java.util.Map attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.String getSessionId()
    {
        com.glines.socketio.server.DefaultSession r0;
        java.lang.String $r1;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        return $r1;
    }

    public com.glines.socketio.common.ConnectionState getConnectionState()
    {
        com.glines.socketio.server.DefaultSession r0;
        com.glines.socketio.common.ConnectionState $r1;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state>;

        return $r1;
    }

    public com.glines.socketio.server.SocketIOInbound getInbound()
    {
        com.glines.socketio.server.DefaultSession r0;
        com.glines.socketio.server.SocketIOInbound $r1;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        return $r1;
    }

    public com.glines.socketio.server.TransportHandler getTransportHandler()
    {
        com.glines.socketio.server.DefaultSession r0;
        com.glines.socketio.server.TransportHandler $r1;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        return $r1;
    }

    private void onTimeout()
    {
        java.util.logging.Logger $r1, $r7;
        java.util.logging.Level $r0, $r8;
        com.glines.socketio.server.DefaultSession r2;
        com.glines.socketio.common.DisconnectReason $r4;
        com.glines.socketio.server.TransportHandler $r5;
        java.lang.StringBuilder $r6, $r10, $r11;
        java.lang.String $r9, $r12;
        boolean $z0, $z1;
        com.glines.socketio.common.ConnectionState $r3;

        r2 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r7 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r8 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r9 = r2.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: onTimeout");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r8, $r12);

     label1:
        $z1 = r2.<com.glines.socketio.server.DefaultSession: boolean timedout>;

        if $z1 != 0 goto label2;

        r2.<com.glines.socketio.server.DefaultSession: boolean timedout> = 1;

        $r3 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSED>;

        r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r3;

        $r4 = <com.glines.socketio.common.DisconnectReason: com.glines.socketio.common.DisconnectReason TIMEOUT>;

        virtualinvoke r2.<com.glines.socketio.server.DefaultSession: void onDisconnect(com.glines.socketio.common.DisconnectReason)>($r4);

        $r5 = r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r5.<com.glines.socketio.server.TransportHandler: void abort()>();

     label2:
        return;
    }

    public void startTimeoutTimer()
    {
        com.glines.socketio.server.SocketIOSession$SessionTask $r2;
        long $l0, $l2;
        com.glines.socketio.server.DefaultSession$1 $r3;
        com.glines.socketio.server.DefaultSession r0;
        byte $b1;
        int $i3;
        boolean $z0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        virtualinvoke r0.<com.glines.socketio.server.DefaultSession: void clearTimeoutTimer()>();

        $z0 = r0.<com.glines.socketio.server.DefaultSession: boolean timedout>;

        if $z0 != 0 goto label1;

        $l0 = r0.<com.glines.socketio.server.DefaultSession: long timeout>;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $r3 = new com.glines.socketio.server.DefaultSession$1;

        specialinvoke $r3.<com.glines.socketio.server.DefaultSession$1: void <init>(com.glines.socketio.server.DefaultSession)>(r0);

        $l2 = r0.<com.glines.socketio.server.DefaultSession: long timeout>;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask scheduleTask(java.lang.Runnable,long)>($r3, $l2);

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask timeoutTask> = $r2;

     label1:
        return;
    }

    public void clearTimeoutTimer()
    {
        com.glines.socketio.server.DefaultSession r0;
        com.glines.socketio.server.SocketIOSession$SessionTask $r1, $r2;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask timeoutTask>;

        if $r1 == null goto label1;

        $r2 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask timeoutTask>;

        interfaceinvoke $r2.<com.glines.socketio.server.SocketIOSession$SessionTask: boolean cancel()>();

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask timeoutTask> = null;

     label1:
        return;
    }

    private void sendPing()
    {
        com.glines.socketio.server.SocketIOFrame $r7;
        long $l0;
        java.util.logging.Level $r5, $r12, $r19, $r22;
        com.glines.socketio.server.DefaultSession r1;
        com.glines.socketio.common.SocketIOException $r18;
        java.lang.String $r4, $r13, $r17;
        boolean $z0, $z1;
        com.glines.socketio.server.SocketIOFrame$FrameType $r8;
        java.util.logging.Logger $r6, $r11, $r20, $r23;
        java.util.concurrent.atomic.AtomicLong $r2;
        java.lang.StringBuilder $r0, $r3, $r10, $r14, $r15, $r16;
        com.glines.socketio.server.TransportHandler $r9, $r21;

        r1 := @this: com.glines.socketio.server.DefaultSession;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.glines.socketio.server.DefaultSession: java.util.concurrent.atomic.AtomicLong messageId>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r5 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r6.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r5);

        if $z0 == 0 goto label1;

        $r11 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r13 = r1.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: sendPing ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r12, $r17);

     label1:
        $r9 = r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        $r7 = new com.glines.socketio.server.SocketIOFrame;

        $r8 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType PING>;

        specialinvoke $r7.<com.glines.socketio.server.SocketIOFrame: void <init>(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r8, 0, $r4);

        interfaceinvoke $r9.<com.glines.socketio.server.TransportHandler: void sendMessage(com.glines.socketio.server.SocketIOFrame)>($r7);

     label2:
        goto label5;

     label3:
        $r18 := @caughtexception;

        $r20 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r19 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r20.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r19);

        if $z1 == 0 goto label4;

        $r23 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r22 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r23.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r22, "handler.sendMessage failed: ", $r18);

     label4:
        $r21 = r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r21.<com.glines.socketio.server.TransportHandler: void abort()>();

     label5:
        virtualinvoke r1.<com.glines.socketio.server.DefaultSession: void startTimeoutTimer()>();

        return;

        catch com.glines.socketio.common.SocketIOException from label1 to label2 with label3;
    }

    public void startHeartbeatTimer()
    {
        com.glines.socketio.server.SocketIOSession$SessionTask $r2;
        long $l0, $l2;
        com.glines.socketio.server.DefaultSession$2 $r3;
        com.glines.socketio.server.DefaultSession r0;
        byte $b1;
        int $i3;
        boolean $z0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        virtualinvoke r0.<com.glines.socketio.server.DefaultSession: void clearHeartbeatTimer()>();

        $z0 = r0.<com.glines.socketio.server.DefaultSession: boolean timedout>;

        if $z0 != 0 goto label1;

        $l0 = r0.<com.glines.socketio.server.DefaultSession: long hbDelay>;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $r3 = new com.glines.socketio.server.DefaultSession$2;

        specialinvoke $r3.<com.glines.socketio.server.DefaultSession$2: void <init>(com.glines.socketio.server.DefaultSession)>(r0);

        $l2 = r0.<com.glines.socketio.server.DefaultSession: long hbDelay>;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask scheduleTask(java.lang.Runnable,long)>($r3, $l2);

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask hbDelayTask> = $r2;

     label1:
        return;
    }

    public void clearHeartbeatTimer()
    {
        com.glines.socketio.server.DefaultSession r0;
        com.glines.socketio.server.SocketIOSession$SessionTask $r1, $r2;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask hbDelayTask>;

        if $r1 == null goto label1;

        $r2 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask hbDelayTask>;

        interfaceinvoke $r2.<com.glines.socketio.server.SocketIOSession$SessionTask: boolean cancel()>();

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSession$SessionTask hbDelayTask> = null;

     label1:
        return;
    }

    public void setHeartbeat(long)
    {
        com.glines.socketio.server.DefaultSession r0;
        long l0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        l0 := @parameter0: long;

        r0.<com.glines.socketio.server.DefaultSession: long hbDelay> = l0;

        return;
    }

    public long getHeartbeat()
    {
        com.glines.socketio.server.DefaultSession r0;
        long $l0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $l0 = r0.<com.glines.socketio.server.DefaultSession: long hbDelay>;

        return $l0;
    }

    public void setTimeout(long)
    {
        com.glines.socketio.server.DefaultSession r0;
        long l0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        l0 := @parameter0: long;

        r0.<com.glines.socketio.server.DefaultSession: long timeout> = l0;

        return;
    }

    public long getTimeout()
    {
        com.glines.socketio.server.DefaultSession r0;
        long $l0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $l0 = r0.<com.glines.socketio.server.DefaultSession: long timeout>;

        return $l0;
    }

    public void startClose()
    {
        com.glines.socketio.server.SocketIOFrame$FrameType $r4;
        com.glines.socketio.server.SocketIOFrame $r2;
        java.util.logging.Logger $r8, $r11;
        java.util.logging.Level $r7, $r10;
        com.glines.socketio.server.DefaultSession r0;
        com.glines.socketio.common.SocketIOException $r6;
        com.glines.socketio.server.TransportHandler $r5, $r9;
        java.lang.String $r3;
        com.glines.socketio.common.ConnectionState $r1;
        boolean $z0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSING>;

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r1;

        r0.<com.glines.socketio.server.DefaultSession: java.lang.String closeId> = "server";

     label1:
        $r5 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        $r2 = new com.glines.socketio.server.SocketIOFrame;

        $r4 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType CLOSE>;

        $r3 = r0.<com.glines.socketio.server.DefaultSession: java.lang.String closeId>;

        specialinvoke $r2.<com.glines.socketio.server.SocketIOFrame: void <init>(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r4, 0, $r3);

        interfaceinvoke $r5.<com.glines.socketio.server.TransportHandler: void sendMessage(com.glines.socketio.server.SocketIOFrame)>($r2);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        $r8 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r7 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r8.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r7);

        if $z0 == 0 goto label4;

        $r11 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r10 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r11.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r10, "handler.sendMessage failed: ", $r6);

     label4:
        $r9 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r9.<com.glines.socketio.server.TransportHandler: void abort()>();

     label5:
        return;

        catch com.glines.socketio.common.SocketIOException from label1 to label2 with label3;
    }

    public void onMessage(com.glines.socketio.server.SocketIOFrame)
    {
        com.glines.socketio.server.SocketIOFrame r1;
        com.glines.socketio.server.DefaultSession r5;
        int[] $r0;
        boolean $z0, $z1, $z2, $z3;
        com.glines.socketio.server.SocketIOFrame$FrameType $r2;
        java.util.logging.Logger $r4, $r8, $r17, $r20, $r29, $r32, $r41, $r44;
        java.lang.StringBuilder $r7, $r11, $r12, $r14, $r19, $r23, $r24, $r26, $r31, $r35, $r36, $r38, $r43, $r47, $r48, $r50;
        java.util.logging.Level $r3, $r9, $r16, $r21, $r28, $r33, $r40, $r45;
        int $i0, $i1;
        java.lang.String $r6, $r10, $r13, $r15, $r18, $r22, $r25, $r27, $r30, $r34, $r37, $r39, $r42, $r46, $r49, $r51;

        r5 := @this: com.glines.socketio.server.DefaultSession;

        r1 := @parameter0: com.glines.socketio.server.SocketIOFrame;

        $r0 = staticinvoke <com.glines.socketio.server.DefaultSession: int[] $SWITCH_TABLE$com$glines$socketio$server$SocketIOFrame$FrameType()>();

        $r2 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: com.glines.socketio.server.SocketIOFrame$FrameType getFrameType()>();

        $i0 = virtualinvoke $r2.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        $i1 = $r0[$i0];

        tableswitch($i1)
        {
            case 2: goto label02;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label04;
            case 6: goto label06;
            case 7: goto label08;
            default: goto label10;
        };

     label01:
        goto label10;

     label02:
        $r41 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r40 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r41.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r40);

        if $z3 == 0 goto label03;

        $r44 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r45 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r46 = r5.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: onClose: ");

        $r49 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r45, $r51);

     label03:
        $r42 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        virtualinvoke r5.<com.glines.socketio.server.DefaultSession: void onClose(java.lang.String)>($r42);

        goto label10;

     label04:
        $r29 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r28 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r29.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r28);

        if $z2 == 0 goto label05;

        $r32 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r33 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r34 = r5.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: onPing: ");

        $r37 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r33, $r39);

     label05:
        $r30 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        virtualinvoke r5.<com.glines.socketio.server.DefaultSession: void onPing(java.lang.String)>($r30);

        goto label10;

     label06:
        $r17 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r16 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r17.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r16);

        if $z1 == 0 goto label07;

        $r20 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r21 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r22 = r5.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: onPong: ");

        $r25 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r21, $r27);

     label07:
        $r18 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        virtualinvoke r5.<com.glines.socketio.server.DefaultSession: void onPong(java.lang.String)>($r18);

        goto label10;

     label08:
        $r4 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r4.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r3);

        if $z0 == 0 goto label09;

        $r8 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r9 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r10 = r5.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: onMessage: ");

        $r13 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r9, $r15);

     label09:
        $r6 = virtualinvoke r1.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        virtualinvoke r5.<com.glines.socketio.server.DefaultSession: void onMessage(java.lang.String)>($r6);

        goto label10;

     label10:
        return;
    }

    public void onPing(java.lang.String)
    {
        com.glines.socketio.server.SocketIOFrame$FrameType $r3;
        com.glines.socketio.server.SocketIOFrame $r1;
        java.util.logging.Logger $r7, $r10;
        java.util.logging.Level $r6, $r9;
        com.glines.socketio.server.DefaultSession r0;
        com.glines.socketio.common.SocketIOException $r5;
        com.glines.socketio.server.TransportHandler $r4, $r8;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r2 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        $r1 = new com.glines.socketio.server.SocketIOFrame;

        $r3 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType PONG>;

        specialinvoke $r1.<com.glines.socketio.server.SocketIOFrame: void <init>(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r3, 0, r2);

        interfaceinvoke $r4.<com.glines.socketio.server.TransportHandler: void sendMessage(com.glines.socketio.server.SocketIOFrame)>($r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $r7 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r6 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r7.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r6);

        if $z0 == 0 goto label4;

        $r10 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r9 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r10.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r9, "handler.sendMessage failed: ", $r5);

     label4:
        $r8 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r8.<com.glines.socketio.server.TransportHandler: void abort()>();

     label5:
        return;

        catch com.glines.socketio.common.SocketIOException from label1 to label2 with label3;
    }

    public void onPong(java.lang.String)
    {
        com.glines.socketio.server.DefaultSession r0;
        java.lang.String r1;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.glines.socketio.server.DefaultSession: void clearTimeoutTimer()>();

        return;
    }

    public void onClose(java.lang.String)
    {
        com.glines.socketio.server.SocketIOFrame $r4, $r12;
        com.glines.socketio.server.DefaultSession r0;
        boolean $z0, $z1, $z2, $z3;
        com.glines.socketio.server.SocketIOFrame$FrameType $r6, $r13;
        java.util.logging.Logger $r21, $r24, $r27, $r30;
        com.glines.socketio.common.ConnectionState $r1, $r2, $r3, $r16;
        java.util.logging.Level $r20, $r23, $r26, $r29;
        com.glines.socketio.common.DisconnectReason $r10, $r17;
        com.glines.socketio.common.SocketIOException $r19, $r25;
        java.lang.String r5, $r9, $r11, $r15;
        com.glines.socketio.server.TransportHandler $r7, $r8, $r14, $r18, $r22, $r28;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r5 := @parameter0: java.lang.String;

        $r2 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state>;

        $r1 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSING>;

        if $r2 != $r1 goto label05;

        $r11 = r0.<com.glines.socketio.server.DefaultSession: java.lang.String closeId>;

        if $r11 == null goto label01;

        $r15 = r0.<com.glines.socketio.server.DefaultSession: java.lang.String closeId>;

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label01;

        $r16 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSED>;

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r16;

        $r17 = <com.glines.socketio.common.DisconnectReason: com.glines.socketio.common.DisconnectReason CLOSED>;

        virtualinvoke r0.<com.glines.socketio.server.DefaultSession: void onDisconnect(com.glines.socketio.common.DisconnectReason)>($r17);

        $r18 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r18.<com.glines.socketio.server.TransportHandler: void abort()>();

        goto label10;

     label01:
        $r14 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        $r12 = new com.glines.socketio.server.SocketIOFrame;

        $r13 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType CLOSE>;

        specialinvoke $r12.<com.glines.socketio.server.SocketIOFrame: void <init>(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r13, 0, r5);

        interfaceinvoke $r14.<com.glines.socketio.server.TransportHandler: void sendMessage(com.glines.socketio.server.SocketIOFrame)>($r12);

     label02:
        goto label10;

     label03:
        $r25 := @caughtexception;

        $r27 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r26 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r27.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r26);

        if $z3 == 0 goto label04;

        $r30 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r29 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r30.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r29, "handler.sendMessage failed: ", $r25);

     label04:
        $r28 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r28.<com.glines.socketio.server.TransportHandler: void abort()>();

        goto label10;

     label05:
        $r3 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSING>;

        r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r3;

     label06:
        $r7 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        $r4 = new com.glines.socketio.server.SocketIOFrame;

        $r6 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType CLOSE>;

        specialinvoke $r4.<com.glines.socketio.server.SocketIOFrame: void <init>(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r6, 0, r5);

        interfaceinvoke $r7.<com.glines.socketio.server.TransportHandler: void sendMessage(com.glines.socketio.server.SocketIOFrame)>($r4);

        $r8 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r8.<com.glines.socketio.server.TransportHandler: void disconnectWhenEmpty()>();

        $r9 = "client";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label10;

        $r10 = <com.glines.socketio.common.DisconnectReason: com.glines.socketio.common.DisconnectReason CLOSED_REMOTELY>;

        virtualinvoke r0.<com.glines.socketio.server.DefaultSession: void onDisconnect(com.glines.socketio.common.DisconnectReason)>($r10);

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        $r21 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r20 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r21.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r20);

        if $z2 == 0 goto label09;

        $r24 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r23 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r24.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r23, "handler.sendMessage failed: ", $r19);

     label09:
        $r22 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        interfaceinvoke $r22.<com.glines.socketio.server.TransportHandler: void abort()>();

     label10:
        return;

        catch com.glines.socketio.common.SocketIOException from label01 to label02 with label03;
        catch com.glines.socketio.common.SocketIOException from label06 to label07 with label08;
    }

    public com.glines.socketio.server.SocketIOSession$SessionTask scheduleTask(java.lang.Runnable, long)
    {
        java.util.concurrent.ScheduledFuture $r5;
        long l0;
        java.lang.Runnable r2;
        com.glines.socketio.server.SocketIOSessionManager $r1;
        com.glines.socketio.server.DefaultSession$3 $r6;
        com.glines.socketio.server.DefaultSession r0;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.ScheduledExecutorService $r4;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r2 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSessionManager socketIOSessionManager>;

        $r4 = $r1.<com.glines.socketio.server.SocketIOSessionManager: java.util.concurrent.ScheduledExecutorService executor>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(r2, l0, $r3);

        $r6 = new com.glines.socketio.server.DefaultSession$3;

        specialinvoke $r6.<com.glines.socketio.server.DefaultSession$3: void <init>(com.glines.socketio.server.DefaultSession,java.util.concurrent.Future)>(r0, $r5);

        return $r6;
    }

    public void onConnect(com.glines.socketio.server.TransportHandler)
    {
        java.lang.Throwable $r11;
        com.glines.socketio.server.SocketIOInbound $r3, $r5;
        java.util.concurrent.ConcurrentMap $r10;
        java.util.logging.Level $r12, $r17;
        com.glines.socketio.server.DefaultSession r1;
        java.lang.String $r9, $r18, $r21;
        boolean $z0;
        java.util.logging.Logger $r13, $r16;
        com.glines.socketio.server.SocketIOSessionManager $r8;
        com.glines.socketio.server.TransportHandler r0, $r2;
        java.lang.StringBuilder $r15, $r19, $r20;
        com.glines.socketio.common.ConnectionState $r4, $r6, $r7, $r14;

        r1 := @this: com.glines.socketio.server.DefaultSession;

        r0 := @parameter0: com.glines.socketio.server.TransportHandler;

        if r0 != null goto label1;

        $r7 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSED>;

        r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r7;

        r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound> = null;

        $r8 = r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSessionManager socketIOSessionManager>;

        $r10 = $r8.<com.glines.socketio.server.SocketIOSessionManager: java.util.concurrent.ConcurrentMap socketIOSessions>;

        $r9 = r1.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>($r9);

        goto label7;

     label1:
        $r2 = r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler>;

        if $r2 != null goto label6;

        r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.TransportHandler handler> = r0;

        $r3 = r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        if $r3 != null goto label2;

        $r6 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSED>;

        r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r6;

        interfaceinvoke r0.<com.glines.socketio.server.TransportHandler: void abort()>();

        goto label7;

     label2:
        $r4 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CONNECTED>;

        r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r4;

        $r5 = r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        interfaceinvoke $r5.<com.glines.socketio.server.SocketIOInbound: void onConnect(com.glines.socketio.server.SocketIOOutbound)>(r0);

     label3:
        goto label7;

     label4:
        $r11 := @caughtexception;

        $r13 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r12 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $z0 = virtualinvoke $r13.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r12);

        if $z0 == 0 goto label5;

        $r16 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r17 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r18 = r1.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: Exception thrown by SocketIOInbound.onConnect()");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r17, $r21, $r11);

     label5:
        $r14 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSED>;

        r1.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r14;

        interfaceinvoke r0.<com.glines.socketio.server.TransportHandler: void abort()>();

        goto label7;

     label6:
        interfaceinvoke r0.<com.glines.socketio.server.TransportHandler: void abort()>();

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void onMessage(java.lang.String)
    {
        java.lang.Throwable $r4;
        com.glines.socketio.server.SocketIOInbound $r1, $r3;
        java.util.logging.Logger $r6, $r8;
        java.util.logging.Level $r5, $r9;
        com.glines.socketio.server.DefaultSession r0;
        java.lang.StringBuilder $r7, $r11, $r12;
        java.lang.String r2, $r10, $r13;
        boolean $z0;

        r0 := @this: com.glines.socketio.server.DefaultSession;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        if $r1 == null goto label4;

     label1:
        $r3 = r0.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        interfaceinvoke $r3.<com.glines.socketio.server.SocketIOInbound: void onMessage(int,java.lang.String)>(0, r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r5 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $z0 = virtualinvoke $r6.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r5);

        if $z0 == 0 goto label4;

        $r8 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r9 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r10 = r0.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: Exception thrown by SocketIOInbound.onMessage()");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r9, $r13, $r4);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onDisconnect(com.glines.socketio.common.DisconnectReason)
    {
        java.lang.Throwable $r15;
        com.glines.socketio.server.SocketIOInbound $r3, $r6;
        java.util.logging.Level $r0, $r9, $r16, $r20;
        com.glines.socketio.server.DefaultSession r2;
        com.glines.socketio.common.DisconnectReason r5;
        java.lang.String $r10, $r14, $r21, $r24;
        boolean $z0, $z1;
        java.util.logging.Logger $r1, $r8, $r17, $r19;
        java.lang.StringBuilder $r7, $r11, $r12, $r13, $r18, $r22, $r23;
        com.glines.socketio.common.ConnectionState $r4;

        r2 := @this: com.glines.socketio.server.DefaultSession;

        r5 := @parameter0: com.glines.socketio.common.DisconnectReason;

        $r1 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r8 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r9 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r10 = r2.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: onDisconnect: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r9, $r14);

     label1:
        virtualinvoke r2.<com.glines.socketio.server.DefaultSession: void clearTimeoutTimer()>();

        virtualinvoke r2.<com.glines.socketio.server.DefaultSession: void clearHeartbeatTimer()>();

        $r3 = r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        if $r3 == null goto label6;

        $r4 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSED>;

        r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state> = $r4;

     label2:
        $r6 = r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        interfaceinvoke $r6.<com.glines.socketio.server.SocketIOInbound: void onDisconnect(com.glines.socketio.common.DisconnectReason,java.lang.String)>(r5, null);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        $r17 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r16 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $z1 = virtualinvoke $r17.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r16);

        if $z1 == 0 goto label5;

        $r19 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r20 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r21 = r2.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: Exception thrown by SocketIOInbound.onDisconnect()");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r20, $r24, $r15);

     label5:
        r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound> = null;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void onShutdown()
    {
        com.glines.socketio.server.SocketIOInbound $r3;
        java.util.logging.Level $r0, $r12;
        java.util.concurrent.ConcurrentMap $r18;
        com.glines.socketio.server.DefaultSession r2;
        com.glines.socketio.common.DisconnectReason $r6, $r8, $r9;
        java.lang.String $r7, $r13, $r16, $r19;
        boolean $z0;
        java.util.logging.Logger $r1, $r11;
        com.glines.socketio.server.SocketIOSessionManager $r17;
        java.lang.StringBuilder $r10, $r14, $r15;
        com.glines.socketio.common.ConnectionState $r4, $r5;

        r2 := @this: com.glines.socketio.server.DefaultSession;

        $r1 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r11 = <com.glines.socketio.server.DefaultSession: java.util.logging.Logger LOGGER>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r13 = r2.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: onShutdown");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r12, $r16);

     label1:
        $r3 = r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOInbound inbound>;

        if $r3 == null goto label4;

        $r5 = r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.common.ConnectionState state>;

        $r4 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CLOSING>;

        if $r5 != $r4 goto label3;

        $r7 = r2.<com.glines.socketio.server.DefaultSession: java.lang.String closeId>;

        if $r7 == null goto label2;

        $r9 = <com.glines.socketio.common.DisconnectReason: com.glines.socketio.common.DisconnectReason CLOSE_FAILED>;

        virtualinvoke r2.<com.glines.socketio.server.DefaultSession: void onDisconnect(com.glines.socketio.common.DisconnectReason)>($r9);

        goto label4;

     label2:
        $r8 = <com.glines.socketio.common.DisconnectReason: com.glines.socketio.common.DisconnectReason CLOSED_REMOTELY>;

        virtualinvoke r2.<com.glines.socketio.server.DefaultSession: void onDisconnect(com.glines.socketio.common.DisconnectReason)>($r8);

        goto label4;

     label3:
        $r6 = <com.glines.socketio.common.DisconnectReason: com.glines.socketio.common.DisconnectReason ERROR>;

        virtualinvoke r2.<com.glines.socketio.server.DefaultSession: void onDisconnect(com.glines.socketio.common.DisconnectReason)>($r6);

     label4:
        $r17 = r2.<com.glines.socketio.server.DefaultSession: com.glines.socketio.server.SocketIOSessionManager socketIOSessionManager>;

        $r18 = $r17.<com.glines.socketio.server.SocketIOSessionManager: java.util.concurrent.ConcurrentMap socketIOSessions>;

        $r19 = r2.<com.glines.socketio.server.DefaultSession: java.lang.String sessionId>;

        interfaceinvoke $r18.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>($r19);

        return;
    }

    static void access$0(com.glines.socketio.server.DefaultSession)
    {
        com.glines.socketio.server.DefaultSession r0;

        r0 := @parameter0: com.glines.socketio.server.DefaultSession;

        specialinvoke r0.<com.glines.socketio.server.DefaultSession: void onTimeout()>();

        return;
    }

    static void access$1(com.glines.socketio.server.DefaultSession)
    {
        com.glines.socketio.server.DefaultSession r0;

        r0 := @parameter0: com.glines.socketio.server.DefaultSession;

        specialinvoke r0.<com.glines.socketio.server.DefaultSession: void sendPing()>();

        return;
    }

    static int[] $SWITCH_TABLE$com$glines$socketio$server$SocketIOFrame$FrameType()
    {
        java.lang.NoSuchFieldError $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        int[] $r0, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.glines.socketio.server.SocketIOFrame$FrameType $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        com.glines.socketio.server.SocketIOFrame$FrameType[] $r1;

        $r0 = <com.glines.socketio.server.DefaultSession: int[] $SWITCH_TABLE$com$glines$socketio$server$SocketIOFrame$FrameType>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType[] values()>();

        $i0 = lengthof $r1;

        r2 = newarray (int)[$i0];

     label02:
        $r3 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType CLOSE>;

        $i1 = virtualinvoke $r3.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i1] = 2;

     label03:
        goto label05;

     label04:
        $r18 := @caughtexception;

     label05:
        $r4 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType DATA>;

        $i2 = virtualinvoke $r4.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i2] = 7;

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

     label08:
        $r5 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType FRAGMENT>;

        $i3 = virtualinvoke $r5.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i3] = 8;

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

     label11:
        $r6 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType HEARTBEAT_INTERVAL>;

        $i4 = virtualinvoke $r6.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i4] = 4;

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

     label14:
        $r7 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType PING>;

        $i5 = virtualinvoke $r7.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i5] = 5;

     label15:
        goto label17;

     label16:
        $r14 := @caughtexception;

     label17:
        $r8 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType PONG>;

        $i6 = virtualinvoke $r8.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i6] = 6;

     label18:
        goto label20;

     label19:
        $r13 := @caughtexception;

     label20:
        $r9 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType SESSION_ID>;

        $i7 = virtualinvoke $r9.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i7] = 3;

     label21:
        goto label23;

     label22:
        $r12 := @caughtexception;

     label23:
        $r10 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType UNKNOWN>;

        $i8 = virtualinvoke $r10.<com.glines.socketio.server.SocketIOFrame$FrameType: int ordinal()>();

        r2[$i8] = 1;

     label24:
        goto label26;

     label25:
        $r11 := @caughtexception;

     label26:
        <com.glines.socketio.server.DefaultSession: int[] $SWITCH_TABLE$com$glines$socketio$server$SocketIOFrame$FrameType> = r2;

        return r2;

        catch java.lang.NoSuchFieldError from label02 to label03 with label04;
        catch java.lang.NoSuchFieldError from label05 to label06 with label07;
        catch java.lang.NoSuchFieldError from label08 to label09 with label10;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
        catch java.lang.NoSuchFieldError from label17 to label18 with label19;
        catch java.lang.NoSuchFieldError from label20 to label21 with label22;
        catch java.lang.NoSuchFieldError from label23 to label24 with label25;
    }
}
