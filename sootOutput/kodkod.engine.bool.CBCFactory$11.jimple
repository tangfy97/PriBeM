final class kodkod.engine.bool.CBCFactory$11 extends kodkod.engine.bool.CBCFactory$Assembler
{
    final kodkod.engine.bool.CBCFactory this$0;

    void <init>(kodkod.engine.bool.CBCFactory)
    {
        kodkod.engine.bool.CBCFactory$11 r0;
        kodkod.engine.bool.CBCFactory r1;

        r0 := @this: kodkod.engine.bool.CBCFactory$11;

        r1 := @parameter0: kodkod.engine.bool.CBCFactory;

        r0.<kodkod.engine.bool.CBCFactory$11: kodkod.engine.bool.CBCFactory this$0> = r1;

        specialinvoke r0.<kodkod.engine.bool.CBCFactory$Assembler: void <init>(kodkod.engine.bool.CBCFactory$Assembler)>(null);

        return;
    }

    kodkod.engine.bool.BooleanValue assemble(kodkod.engine.bool.Operator$Nary, kodkod.engine.bool.BooleanFormula, kodkod.engine.bool.BooleanFormula)
    {
        kodkod.engine.bool.Operator$Nary r3;
        kodkod.engine.bool.BooleanFormula r0, r1, $r8;
        kodkod.engine.bool.CBCFactory$11 r2;
        java.lang.AssertionError $r7;
        kodkod.engine.bool.Operator $r5, $r6;
        kodkod.engine.bool.CBCFactory $r4;
        boolean $z0;

        r2 := @this: kodkod.engine.bool.CBCFactory$11;

        r3 := @parameter0: kodkod.engine.bool.Operator$Nary;

        r0 := @parameter1: kodkod.engine.bool.BooleanFormula;

        r1 := @parameter2: kodkod.engine.bool.BooleanFormula;

        $z0 = <kodkod.engine.bool.CBCFactory: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r0.<kodkod.engine.bool.BooleanFormula: kodkod.engine.bool.Operator op()>();

        $r6 = virtualinvoke r1.<kodkod.engine.bool.BooleanFormula: kodkod.engine.bool.Operator op()>();

        if $r5 == $r6 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        if r0 != r1 goto label2;

        $r8 = r0;

        goto label3;

     label2:
        $r4 = r2.<kodkod.engine.bool.CBCFactory$11: kodkod.engine.bool.CBCFactory this$0>;

        $r8 = staticinvoke <kodkod.engine.bool.CBCFactory: kodkod.engine.bool.BooleanFormula access$1(kodkod.engine.bool.CBCFactory,kodkod.engine.bool.Operator$Nary,kodkod.engine.bool.BooleanFormula,kodkod.engine.bool.BooleanFormula)>($r4, r3, r0, r1);

     label3:
        return $r8;
    }
}
