public class org.apache.commons.httpclient.HttpException extends java.io.IOException
{
    private java.lang.String reason;
    private int reasonCode;
    private final java.lang.Throwable cause;
    static java.lang.Class class$java$lang$Throwable;

    public void <init>()
    {
        org.apache.commons.httpclient.HttpException r0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = 200;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = 200;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object[] $r7;
        java.lang.Class[] $r3;
        java.lang.Exception $r8;
        org.apache.commons.httpclient.HttpException r0;
        java.lang.Class $r4, $r5, $r9, $r10;
        java.lang.String r1;
        java.lang.reflect.Method $r6;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = 200;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause> = r2;

     label1:
        $r3 = newarray (java.lang.Class)[1];

        $r4 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

        if $r4 != null goto label2;

        $r9 = staticinvoke <org.apache.commons.httpclient.HttpException: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable> = $r9;

        goto label3;

     label2:
        $r9 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

     label3:
        $r3[0] = $r9;

        $r5 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

        if $r5 != null goto label4;

        $r10 = staticinvoke <org.apache.commons.httpclient.HttpException: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable> = $r10;

        goto label5;

     label4:
        $r10 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

     label5:
        $r6 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", $r3);

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r2;

        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r7);

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    public java.lang.Throwable getCause()
    {
        java.lang.Throwable $r1;
        org.apache.commons.httpclient.HttpException r0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        return $r1;
    }

    public void printStackTrace()
    {
        java.io.PrintStream $r1;
        org.apache.commons.httpclient.HttpException r0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpException: void printStackTrace(java.io.PrintStream)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream r2;
        java.lang.Throwable $r4, $r5;
        org.apache.commons.httpclient.HttpException r0;
        java.lang.Class[] r6;
        java.lang.Class $r1;
        java.lang.Exception $r3;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        r2 := @parameter0: java.io.PrintStream;

     label1:
        r6 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getStackTrace", r6);

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintStream)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintStream)>(r2);

        $r4 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        if $r4 == null goto label4;

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("Caused by: ");

        $r5 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        java.lang.Throwable $r4, $r5;
        org.apache.commons.httpclient.HttpException r0;
        java.lang.Class[] r6;
        java.lang.Class $r1;
        java.lang.Exception $r3;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        r2 := @parameter0: java.io.PrintWriter;

     label1:
        r6 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getStackTrace", r6);

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintWriter)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintWriter)>(r2);

        $r4 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        if $r4 == null goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Caused by: ");

        $r5 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setReason(java.lang.String)
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.String reason> = r1;

        return;
    }

    public java.lang.String getReason()
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 = r0.<org.apache.commons.httpclient.HttpException: java.lang.String reason>;

        return $r1;
    }

    public void setReasonCode(int)
    {
        int i0;
        org.apache.commons.httpclient.HttpException r0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        i0 := @parameter0: int;

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = i0;

        return;
    }

    public int getReasonCode()
    {
        int $i0;
        org.apache.commons.httpclient.HttpException r0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $i0 = r0.<org.apache.commons.httpclient.HttpException: int reasonCode>;

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
