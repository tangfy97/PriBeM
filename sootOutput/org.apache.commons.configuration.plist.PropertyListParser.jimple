class org.apache.commons.configuration.plist.PropertyListParser extends java.lang.Object implements org.apache.commons.configuration.plist.PropertyListParserConstants
{
    public org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source;
    org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream;
    public org.apache.commons.configuration.plist.Token token;
    public org.apache.commons.configuration.plist.Token jj_nt;
    private int jj_ntk;
    private org.apache.commons.configuration.plist.Token jj_scanpos;
    private org.apache.commons.configuration.plist.Token jj_lastpos;
    private int jj_la;
    public boolean lookingAhead;
    private boolean jj_semLA;
    private int jj_gen;
    private final int[] jj_la1;
    private static int[] jj_la1_0;
    private final org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns;
    private boolean jj_rescan;
    private int jj_gc;
    private final org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess jj_ls;
    private java.util.Vector jj_expentries;
    private int[] jj_expentry;
    private int jj_kind;
    private int[] jj_lasttokens;
    private int jj_endpos;

    protected java.lang.String removeQuotes(java.lang.String)
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int $i0, $i1, $i2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 < 2 goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

     label2:
        return r1;
    }

    protected java.lang.String unescapeQuotes(java.lang.String)
    {
        java.lang.String r0, $r1;
        org.apache.commons.configuration.plist.PropertyListParser r2;

        r2 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r0, "\\\"", "\"");

        return $r1;
    }

    protected byte[] filterData(java.lang.String) throws org.apache.commons.configuration.plist.ParseException
    {
        byte[] $r1;
        org.apache.commons.configuration.plist.ParseException $r6;
        org.apache.commons.configuration.plist.PropertyListParser r12;
        java.lang.StringBuffer $r2, $r3, $r4, $r7, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r9, $r11, r13, $r14, r15;
        boolean $z0, $z1;
        java.lang.Exception $r5;
        char[] $r0;

        r12 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r13 := @parameter0: java.lang.String;

        if r13 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("<");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>(">");

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i0 < 2 goto label2;

        $i1 = virtualinvoke r13.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

     label2:
        $r14 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String)>(r13, " \t\n\r", "");

        r15 = $r14;

        $i3 = virtualinvoke $r14.<java.lang.String: int length()>();

        $i4 = $i3 % 2;

        if $i4 == 0 goto label3;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        r15 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r0 = virtualinvoke r15.<java.lang.String: char[] toCharArray()>();

        $r1 = staticinvoke <org.apache.commons.codec.binary.Hex: byte[] decodeHex(char[])>($r0);

     label4:
        return $r1;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.configuration.plist.ParseException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse the byte[] : ");

        $r9 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.commons.configuration.plist.ParseException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected java.util.Date parseDate(java.lang.String) throws org.apache.commons.configuration.plist.ParseException
    {
        java.lang.String r0;
        org.apache.commons.configuration.plist.PropertyListParser r2;
        java.util.Date $r1;

        r2 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.configuration.plist.PropertyListConfiguration: java.util.Date parseDate(java.lang.String)>(r0);

        return $r1;
    }

    public final org.apache.commons.configuration.plist.PropertyListConfiguration parse() throws org.apache.commons.configuration.plist.ParseException
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.PropertyListConfiguration $r1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListConfiguration Dictionary()>();

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(0);

        return $r1;
    }

    public final org.apache.commons.configuration.plist.PropertyListConfiguration Dictionary() throws org.apache.commons.configuration.plist.ParseException
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration $r13;
        java.util.ArrayList $r14;
        org.apache.commons.configuration.plist.PropertyListParser r2;
        int[] $r8;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.String $r7;
        boolean $z0;
        org.apache.commons.configuration.HierarchicalConfiguration r11;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r3, $r6, $r10, r12;
        java.lang.Object $r4, $r5, $r9;

        r2 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r13 = new org.apache.commons.configuration.plist.PropertyListConfiguration;

        specialinvoke $r13.<org.apache.commons.configuration.plist.PropertyListConfiguration: void <init>()>();

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        specialinvoke r2.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(8);

     label01:
        $i2 = r2.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

        $i6 = (int) -1;

        if $i2 != $i6 goto label02;

        $i3 = specialinvoke r2.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk()>();

        goto label03;

     label02:
        $i3 = r2.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

     label03:
        lookupswitch($i3)
        {
            case 21: goto label04;
            case 22: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r8 = r2.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i0 = r2.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $r8[0] = $i0;

        goto label08;

     label06:
        $r3 = virtualinvoke r2.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.HierarchicalConfiguration$Node Property()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        $z0 = $r4 instanceof org.apache.commons.configuration.HierarchicalConfiguration;

        if $z0 == 0 goto label07;

        $r5 = virtualinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        r11 = (org.apache.commons.configuration.HierarchicalConfiguration) $r5;

        $r6 = virtualinvoke r11.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        $r7 = virtualinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        virtualinvoke $r6.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setName(java.lang.String)>($r7);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label01;

     label07:
        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label01;

     label08:
        specialinvoke r2.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(9);

        i4 = 0;

     label09:
        $i1 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i4 >= $i1 goto label10;

        $r9 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i4);

        r12 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r9;

        $r10 = virtualinvoke $r13.<org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        virtualinvoke $r10.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addChild(org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r12);

        i4 = i4 + 1;

        goto label09;

     label10:
        return $r13;
    }

    public final org.apache.commons.configuration.HierarchicalConfiguration$Node Property() throws org.apache.commons.configuration.plist.ParseException
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r5;
        org.apache.commons.configuration.plist.PropertyListParser r1;
        int[] $r4;
        int $i0, $i1, $i2, $i4;
        java.lang.Object $r3;
        java.lang.String $r2;

        r1 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r5 = new org.apache.commons.configuration.HierarchicalConfiguration$Node;

        specialinvoke $r5.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: java.lang.String String()>();

        virtualinvoke $r5.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setName(java.lang.String)>($r2);

        specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(11);

        $r3 = virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: java.lang.Object Element()>();

        virtualinvoke $r5.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>($r3);

        $i0 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 10: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(10);

        goto label5;

     label4:
        $r4 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i1 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $r4[1] = $i1;

     label5:
        return $r5;
    }

    public final java.lang.Object Element() throws org.apache.commons.configuration.plist.ParseException
    {
        byte[] $r3;
        java.util.Date $r2;
        org.apache.commons.configuration.plist.PropertyListConfiguration $r4;
        java.util.List $r7;
        org.apache.commons.configuration.plist.ParseException $r8;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r5;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_2_1(int)>(2);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.List Array()>();

        return $r7;

     label1:
        $i0 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

     label3:
        tableswitch($i2)
        {
            case 8: goto label4;
            case 9: goto label8;
            case 10: goto label8;
            case 11: goto label8;
            case 12: goto label8;
            case 13: goto label8;
            case 14: goto label8;
            case 15: goto label8;
            case 16: goto label8;
            case 17: goto label8;
            case 18: goto label8;
            case 19: goto label6;
            case 20: goto label7;
            case 21: goto label5;
            case 22: goto label5;
            default: goto label8;
        };

     label4:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListConfiguration Dictionary()>();

        return $r4;

     label5:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: java.lang.String String()>();

        return $r1;

     label6:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: byte[] Data()>();

        return $r3;

     label7:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Date Date()>();

        return $r2;

     label8:
        $r5 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $r5[2] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>($i6);

        $r8 = new org.apache.commons.configuration.plist.ParseException;

        specialinvoke $r8.<org.apache.commons.configuration.plist.ParseException: void <init>()>();

        throw $r8;
    }

    public final java.util.List Array() throws org.apache.commons.configuration.plist.ParseException
    {
        java.util.ArrayList $r6;
        org.apache.commons.configuration.plist.PropertyListParser r1;
        int[] $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        java.lang.Object $r2, $r3;

        r1 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(5);

        $i0 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

     label02:
        tableswitch($i4)
        {
            case 5: goto label03;
            case 6: goto label10;
            case 7: goto label10;
            case 8: goto label03;
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label10;
            case 12: goto label10;
            case 13: goto label10;
            case 14: goto label10;
            case 15: goto label10;
            case 16: goto label10;
            case 17: goto label10;
            case 18: goto label10;
            case 19: goto label03;
            case 20: goto label03;
            case 21: goto label03;
            case 22: goto label03;
            default: goto label10;
        };

     label03:
        $r2 = virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: java.lang.Object Element()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2);

     label04:
        $i1 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label05;

        $i5 = specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk()>();

        goto label06;

     label05:
        $i5 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

     label06:
        lookupswitch($i5)
        {
            case 7: goto label07;
            default: goto label08;
        };

     label07:
        goto label09;

     label08:
        $r4 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i2 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $r4[3] = $i2;

        goto label11;

     label09:
        specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(7);

        $r3 = virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: java.lang.Object Element()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label04;

     label10:
        $r5 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i3 = r1.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $r5[4] = $i3;

     label11:
        specialinvoke r1.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(6);

        return $r6;
    }

    public final java.lang.String String() throws org.apache.commons.configuration.plist.ParseException
    {
        org.apache.commons.configuration.plist.Token $r1, $r5;
        org.apache.commons.configuration.plist.ParseException $r9;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r7;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r2, $r3, $r4, $r6;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $i0 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 21: goto label4;
            case 22: goto label3;
            default: goto label5;
        };

     label3:
        $r1 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(22);

        $r2 = $r1.<org.apache.commons.configuration.plist.Token: java.lang.String image>;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: java.lang.String removeQuotes(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: java.lang.String unescapeQuotes(java.lang.String)>($r3);

        return $r4;

     label4:
        $r5 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(21);

        $r6 = $r5.<org.apache.commons.configuration.plist.Token: java.lang.String image>;

        return $r6;

     label5:
        $r7 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $r7[5] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>($i6);

        $r9 = new org.apache.commons.configuration.plist.ParseException;

        specialinvoke $r9.<org.apache.commons.configuration.plist.ParseException: void <init>()>();

        throw $r9;
    }

    public final byte[] Data() throws org.apache.commons.configuration.plist.ParseException
    {
        byte[] $r3;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.Token $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(19);

        $r2 = $r1.<org.apache.commons.configuration.plist.Token: java.lang.String image>;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: byte[] filterData(java.lang.String)>($r2);

        return $r3;
    }

    public final java.util.Date Date() throws org.apache.commons.configuration.plist.ParseException
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        java.util.Date $r3;
        org.apache.commons.configuration.plist.Token $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_consume_token(int)>(20);

        $r2 = $r1.<org.apache.commons.configuration.plist.Token: java.lang.String image>;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Date parseDate(java.lang.String)>($r2);

        return $r3;
    }

    private final boolean jj_2_1(int)
    {
        java.lang.Throwable $r2;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess $r3;
        int i0;
        org.apache.commons.configuration.plist.Token $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        i0 := @parameter0: int;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_la> = i0;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = $r1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_lastpos> = $r1;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3_1()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: void jj_save(int,int)>(0, i0);

        return $z1;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: void jj_save(int,int)>(0, i0);

        return 1;

     label6:
        $r2 := @caughtexception;

     label7:
        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: void jj_save(int,int)>(0, i0);

        throw $r2;

        catch org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private final boolean jj_3R_14()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_scan_token(int)>(22);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_11()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.Token r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_14()>();

        if $z0 == 0 goto label1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = r1;

        $z1 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_15()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_13()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_scan_token(int)>(20);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_10()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_scan_token(int)>(8);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_9()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_13()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_8()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_12()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_12()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_scan_token(int)>(19);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_7()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_11()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_4()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_5()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_6()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_10()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_15()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_scan_token(int)>(21);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_3()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_scan_token(int)>(5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $z1 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_4()>();

        if $z1 == 0 goto label2;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = r1;

     label2:
        $z2 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_scan_token(int)>(6);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3_1()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_3()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_5()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $z0 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3_1()>();

        if $z0 == 0 goto label1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = r1;

        $z1 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_6()>();

        if $z1 == 0 goto label1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = r1;

        $z2 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_7()>();

        if $z2 == 0 goto label1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = r1;

        $z3 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_8()>();

        if $z3 == 0 goto label1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = r1;

        $z4 = specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3R_9()>();

        if $z4 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static void jj_la1_0()
    {
        int[] $r0;

        $r0 = newarray (int)[6];

        $r0[0] = 6291456;

        $r0[1] = 1024;

        $r0[2] = 7864576;

        $r0[3] = 128;

        $r0[4] = 7864608;

        $r0[5] = 6291456;

        <org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1_0> = $r0;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        java.util.Vector $r16;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r1, $r5, $r14;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls $r20;
        int $i0, i1, i2, $i4, $i6, $i8;
        org.apache.commons.configuration.plist.Token $r19;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r18;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r2, $r11, $r13;
        org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess $r15;
        org.apache.commons.configuration.plist.SimpleCharStream $r9, $r17;
        java.io.InputStream r7;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r7 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean lookingAhead> = 0;

        $r1 = newarray (int)[6];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1> = $r1;

        $r2 = newarray (org.apache.commons.configuration.plist.PropertyListParser$JJCalls)[1];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns> = $r2;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_rescan> = 0;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gc> = 0;

        $r15 = new org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess;

        specialinvoke $r15.<org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess: void <init>(org.apache.commons.configuration.plist.PropertyListParser$1)>(null);

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess jj_ls> = $r15;

        $r16 = new java.util.Vector;

        specialinvoke $r16.<java.util.Vector: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries> = $r16;

        $i4 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_kind> = $i4;

        $r5 = newarray (int)[100];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_lasttokens> = $r5;

        $r17 = new org.apache.commons.configuration.plist.SimpleCharStream;

        specialinvoke $r17.<org.apache.commons.configuration.plist.SimpleCharStream: void <init>(java.io.InputStream,int,int)>(r7, 1, 1);

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream> = $r17;

        $r18 = new org.apache.commons.configuration.plist.PropertyListParserTokenManager;

        $r9 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream>;

        specialinvoke $r18.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: void <init>(org.apache.commons.configuration.plist.SimpleCharStream)>($r9);

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source> = $r18;

        $r19 = new org.apache.commons.configuration.plist.Token;

        specialinvoke $r19.<org.apache.commons.configuration.plist.Token: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r19;

        $i6 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i6;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 6 goto label2;

        $r14 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i8 = (int) -1;

        $r14[i1] = $i8;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r11 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r11;

        if i2 >= $i0 goto label4;

        $r13 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $r20 = new org.apache.commons.configuration.plist.PropertyListParser$JJCalls;

        specialinvoke $r20.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: void <init>()>();

        $r13[i2] = $r20;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void ReInit(java.io.InputStream)
    {
        org.apache.commons.configuration.plist.Token $r10;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r4;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r9;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r6, $r8;
        org.apache.commons.configuration.plist.SimpleCharStream $r2, $r3;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls $r11;
        int $i0, i1, i2, $i4, $i6;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream>;

        virtualinvoke $r2.<org.apache.commons.configuration.plist.SimpleCharStream: void ReInit(java.io.InputStream,int,int)>(r1, 1, 1);

        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source>;

        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream>;

        virtualinvoke $r4.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: void ReInit(org.apache.commons.configuration.plist.SimpleCharStream)>($r3);

        $r10 = new org.apache.commons.configuration.plist.Token;

        specialinvoke $r10.<org.apache.commons.configuration.plist.Token: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r10;

        $i4 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i4;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 6 goto label2;

        $r9 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i6 = (int) -1;

        $r9[i1] = $i6;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r6 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r6;

        if i2 >= $i0 goto label4;

        $r8 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $r11 = new org.apache.commons.configuration.plist.PropertyListParser$JJCalls;

        specialinvoke $r11.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: void <init>()>();

        $r8[i2] = $r11;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(java.io.Reader)
    {
        java.util.Vector $r16;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r1, $r5, $r14;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls $r20;
        int $i0, i1, i2, $i4, $i6, $i8;
        org.apache.commons.configuration.plist.Token $r19;
        java.io.Reader r7;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r18;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r2, $r11, $r13;
        org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess $r15;
        org.apache.commons.configuration.plist.SimpleCharStream $r9, $r17;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r7 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean lookingAhead> = 0;

        $r1 = newarray (int)[6];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1> = $r1;

        $r2 = newarray (org.apache.commons.configuration.plist.PropertyListParser$JJCalls)[1];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns> = $r2;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_rescan> = 0;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gc> = 0;

        $r15 = new org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess;

        specialinvoke $r15.<org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess: void <init>(org.apache.commons.configuration.plist.PropertyListParser$1)>(null);

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess jj_ls> = $r15;

        $r16 = new java.util.Vector;

        specialinvoke $r16.<java.util.Vector: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries> = $r16;

        $i4 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_kind> = $i4;

        $r5 = newarray (int)[100];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_lasttokens> = $r5;

        $r17 = new org.apache.commons.configuration.plist.SimpleCharStream;

        specialinvoke $r17.<org.apache.commons.configuration.plist.SimpleCharStream: void <init>(java.io.Reader,int,int)>(r7, 1, 1);

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream> = $r17;

        $r18 = new org.apache.commons.configuration.plist.PropertyListParserTokenManager;

        $r9 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream>;

        specialinvoke $r18.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: void <init>(org.apache.commons.configuration.plist.SimpleCharStream)>($r9);

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source> = $r18;

        $r19 = new org.apache.commons.configuration.plist.Token;

        specialinvoke $r19.<org.apache.commons.configuration.plist.Token: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r19;

        $i6 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i6;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 6 goto label2;

        $r14 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i8 = (int) -1;

        $r14[i1] = $i8;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r11 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r11;

        if i2 >= $i0 goto label4;

        $r13 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $r20 = new org.apache.commons.configuration.plist.PropertyListParser$JJCalls;

        specialinvoke $r20.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: void <init>()>();

        $r13[i2] = $r20;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void ReInit(java.io.Reader)
    {
        org.apache.commons.configuration.plist.Token $r10;
        java.io.Reader r1;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r4;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r9;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r6, $r8;
        org.apache.commons.configuration.plist.SimpleCharStream $r2, $r3;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls $r11;
        int $i0, i1, i2, $i4, $i6;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream>;

        virtualinvoke $r2.<org.apache.commons.configuration.plist.SimpleCharStream: void ReInit(java.io.Reader,int,int)>(r1, 1, 1);

        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source>;

        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.SimpleCharStream jj_input_stream>;

        virtualinvoke $r4.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: void ReInit(org.apache.commons.configuration.plist.SimpleCharStream)>($r3);

        $r10 = new org.apache.commons.configuration.plist.Token;

        specialinvoke $r10.<org.apache.commons.configuration.plist.Token: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r10;

        $i4 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i4;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 6 goto label2;

        $r9 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i6 = (int) -1;

        $r9[i1] = $i6;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r6 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r6;

        if i2 >= $i0 goto label4;

        $r8 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $r11 = new org.apache.commons.configuration.plist.PropertyListParser$JJCalls;

        specialinvoke $r11.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: void <init>()>();

        $r8[i2] = $r11;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(org.apache.commons.configuration.plist.PropertyListParserTokenManager)
    {
        java.util.Vector $r13;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r1, $r5, $r11;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls $r15;
        int $i0, i1, i2, $i4, $i6, $i8;
        org.apache.commons.configuration.plist.Token $r14;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager r6;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r2, $r8, $r10;
        org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess $r12;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r6 := @parameter0: org.apache.commons.configuration.plist.PropertyListParserTokenManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean lookingAhead> = 0;

        $r1 = newarray (int)[6];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1> = $r1;

        $r2 = newarray (org.apache.commons.configuration.plist.PropertyListParser$JJCalls)[1];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns> = $r2;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_rescan> = 0;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gc> = 0;

        $r12 = new org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess;

        specialinvoke $r12.<org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess: void <init>(org.apache.commons.configuration.plist.PropertyListParser$1)>(null);

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess jj_ls> = $r12;

        $r13 = new java.util.Vector;

        specialinvoke $r13.<java.util.Vector: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries> = $r13;

        $i4 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_kind> = $i4;

        $r5 = newarray (int)[100];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_lasttokens> = $r5;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source> = r6;

        $r14 = new org.apache.commons.configuration.plist.Token;

        specialinvoke $r14.<org.apache.commons.configuration.plist.Token: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r14;

        $i6 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i6;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 6 goto label2;

        $r11 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i8 = (int) -1;

        $r11[i1] = $i8;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r8 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r8;

        if i2 >= $i0 goto label4;

        $r10 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $r15 = new org.apache.commons.configuration.plist.PropertyListParser$JJCalls;

        specialinvoke $r15.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: void <init>()>();

        $r10[i2] = $r15;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void ReInit(org.apache.commons.configuration.plist.PropertyListParserTokenManager)
    {
        org.apache.commons.configuration.plist.Token $r7;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager r1;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r6;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r3, $r5;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls $r8;
        int $i0, i1, i2, $i4, $i6;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r1 := @parameter0: org.apache.commons.configuration.plist.PropertyListParserTokenManager;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source> = r1;

        $r7 = new org.apache.commons.configuration.plist.Token;

        specialinvoke $r7.<org.apache.commons.configuration.plist.Token: void <init>()>();

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r7;

        $i4 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i4;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = 0;

        i1 = 0;

     label1:
        if i1 >= 6 goto label2;

        $r6 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i6 = (int) -1;

        $r6[i1] = $i6;

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $i0 = lengthof $r3;

        if i2 >= $i0 goto label4;

        $r5 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $r8 = new org.apache.commons.configuration.plist.PropertyListParser$JJCalls;

        specialinvoke $r8.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: void <init>()>();

        $r5[i2] = $r8;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    private final org.apache.commons.configuration.plist.Token jj_consume_token(int) throws org.apache.commons.configuration.plist.ParseException
    {
        org.apache.commons.configuration.plist.ParseException $r7;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11;
        org.apache.commons.configuration.plist.Token $r1, $r2, $r4, $r5, $r6, $r8, $r11, $r12;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r3;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r9, $r10;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r2 = $r1.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        if $r2 == null goto label1;

        $r11 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r12 = $r11.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r12;

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source>;

        $r5 = virtualinvoke $r3.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: org.apache.commons.configuration.plist.Token getNextToken()>();

        $r4.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next> = $r5;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r5;

     label2:
        $i11 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i11;

        $r6 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $i1 = $r6.<org.apache.commons.configuration.plist.Token: int kind>;

        if $i1 != i0 goto label8;

        $i2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = $i3;

        $i4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gc>;

        $i5 = $i4 + 1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gc> = $i5;

        if $i5 <= 100 goto label7;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gc> = 0;

        i9 = 0;

     label3:
        $r9 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        $i6 = lengthof $r9;

        if i9 >= $i6 goto label7;

        $r10 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        r13 = $r10[i9];

     label4:
        if r13 == null goto label6;

        $i8 = r13.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: int gen>;

        $i7 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        if $i8 >= $i7 goto label5;

        r13.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.Token first> = null;

     label5:
        r13 = r13.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.PropertyListParser$JJCalls next>;

        goto label4;

     label6:
        i9 = i9 + 1;

        goto label3;

     label7:
        $r8 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        return $r8;

     label8:
        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_kind> = i0;

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.ParseException generateParseException()>();

        throw $r7;
    }

    private final boolean jj_scan_token(int)
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int i0, $i1, $i2, $i3, i4, $i5;
        boolean $z0;
        org.apache.commons.configuration.plist.Token $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r14, $r15, r16, $r17;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r13;
        org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess $r7;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_lastpos>;

        if $r2 != $r1 goto label2;

        $i2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_la>;

        $i3 = $i2 - 1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_la> = $i3;

        $r9 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $r10 = $r9.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        if $r10 != null goto label1;

        $r14 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $r13 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source>;

        $r15 = virtualinvoke $r13.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: org.apache.commons.configuration.plist.Token getNextToken()>();

        $r14.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next> = $r15;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = $r15;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_lastpos> = $r15;

        goto label3;

     label1:
        $r11 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $r12 = $r11.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = $r12;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_lastpos> = $r12;

        goto label3;

     label2:
        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $r4 = $r3.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = $r4;

     label3:
        $z0 = r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_rescan>;

        if $z0 == 0 goto label6;

        i4 = 0;

        r16 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

     label4:
        if r16 == null goto label5;

        $r8 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        if r16 == $r8 goto label5;

        i4 = i4 + 1;

        r16 = r16.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        goto label4;

     label5:
        if r16 == null goto label6;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: void jj_add_error_token(int,int)>(i0, i4);

     label6:
        $r17 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $i5 = $r17.<org.apache.commons.configuration.plist.Token: int kind>;

        if $i5 == i0 goto label7;

        return 1;

     label7:
        $i1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_la>;

        if $i1 != 0 goto label8;

        $r6 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        $r5 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_lastpos>;

        if $r6 != $r5 goto label8;

        $r7 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess jj_ls>;

        throw $r7;

     label8:
        return 0;
    }

    public final org.apache.commons.configuration.plist.Token getNextToken()
    {
        org.apache.commons.configuration.plist.Token $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r3;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r2 = $r1.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        if $r2 == null goto label1;

        $r7 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r8 = $r7.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r8;

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source>;

        $r5 = virtualinvoke $r3.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: org.apache.commons.configuration.plist.Token getNextToken()>();

        $r4.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next> = $r5;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token> = $r5;

     label2:
        $i3 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i3;

        $i0 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen> = $i1;

        $r6 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        return $r6;
    }

    public final org.apache.commons.configuration.plist.Token getToken(int)
    {
        org.apache.commons.configuration.plist.Token $r1, $r3, $r4, r5;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r2;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean lookingAhead>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos>;

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

     label2:
        r5 = $r4;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        $r1 = r5.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        if $r1 == null goto label4;

        r5 = r5.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        goto label5;

     label4:
        $r2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source>;

        $r3 = virtualinvoke $r2.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: org.apache.commons.configuration.plist.Token getNextToken()>();

        r5.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next> = $r3;

        r5 = $r3;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return r5;
    }

    private final int jj_ntk()
    {
        org.apache.commons.configuration.plist.Token $r1, $r2, $r3, $r5, $r6;
        org.apache.commons.configuration.plist.PropertyListParserTokenManager $r4;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r2 = $r1.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_nt> = $r2;

        if $r2 != null goto label1;

        $r5 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParserTokenManager token_source>;

        $r6 = virtualinvoke $r4.<org.apache.commons.configuration.plist.PropertyListParserTokenManager: org.apache.commons.configuration.plist.Token getNextToken()>();

        $r5.<org.apache.commons.configuration.plist.Token: org.apache.commons.configuration.plist.Token next> = $r6;

        $i1 = $r6.<org.apache.commons.configuration.plist.Token: int kind>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i1;

        return $i1;

     label1:
        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_nt>;

        $i0 = $r3.<org.apache.commons.configuration.plist.Token: int kind>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_ntk> = $i0;

        return $i0;
    }

    private void jj_add_error_token(int, int)
    {
        java.util.Enumeration $r3;
        java.util.Vector $r2, $r6;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r1, $r4, $r5, r8, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, z1, z2, z3;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        java.lang.Object $r7;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 < 100 goto label01;

        return;

     label01:
        $i1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos>;

        $i2 = $i1 + 1;

        if i0 != $i2 goto label02;

        $r14 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_lasttokens>;

        $i14 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos>;

        $i15 = $i14 + 1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos> = $i15;

        $r14[$i14] = i6;

        goto label12;

     label02:
        $i3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos>;

        if $i3 == 0 goto label12;

        $i4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos>;

        $r1 = newarray (int)[$i4];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry> = $r1;

        i16 = 0;

     label03:
        $i5 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos>;

        if i16 >= $i5 goto label04;

        $r13 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry>;

        $r12 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_lasttokens>;

        $i13 = $r12[i16];

        $r13[i16] = $i13;

        i16 = i16 + 1;

        goto label03;

     label04:
        z1 = 0;

        z3 = 0;

        $r2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label05:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r8 = (int[]) $r7;

        $i9 = lengthof r8;

        $r9 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry>;

        $i8 = lengthof $r9;

        if $i9 != $i8 goto label09;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        i17 = 0;

     label06:
        $r10 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry>;

        $i10 = lengthof $r10;

        if i17 >= $i10 goto label08;

        $i12 = r8[i17];

        $r11 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry>;

        $i11 = $r11[i17];

        if $i12 == $i11 goto label07;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        goto label08;

     label07:
        i17 = i17 + 1;

        goto label06;

     label08:
        if z2 == 0 goto label09;

        goto label10;

     label09:
        goto label05;

     label10:
        if z3 != 0 goto label11;

        $r6 = r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries>;

        $r5 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry>;

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r5);

     label11:
        if i0 == 0 goto label12;

        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_lasttokens>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos> = i0;

        $i7 = i0 - 1;

        $r4[$i7] = i6;

     label12:
        return;
    }

    public org.apache.commons.configuration.plist.ParseException generateParseException()
    {
        int[][] r17;
        java.util.Vector $r1, $r3, $r4, $r8, $r14;
        org.apache.commons.configuration.plist.ParseException $r18;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        int[] $r10, $r11, $r12, $r13, $r15, $r16;
        boolean $z0;
        java.lang.String[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, $i15;
        boolean[] r2;
        org.apache.commons.configuration.plist.Token $r7;
        java.lang.Object $r9;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries>;

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        r2 = newarray (boolean)[24];

        i9 = 0;

     label01:
        if i9 >= 24 goto label02;

        r2[i9] = 0;

        i9 = i9 + 1;

        goto label01;

     label02:
        $i0 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_kind>;

        if $i0 < 0 goto label03;

        $i8 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_kind>;

        r2[$i8] = 1;

        $i15 = (int) -1;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_kind> = $i15;

     label03:
        i10 = 0;

     label04:
        if i10 >= 6 goto label08;

        $r15 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1>;

        $i4 = $r15[i10];

        $i3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        if $i4 != $i3 goto label07;

        i11 = 0;

     label05:
        if i11 >= 32 goto label07;

        $r16 = <org.apache.commons.configuration.plist.PropertyListParser: int[] jj_la1_0>;

        $i6 = $r16[i10];

        $i5 = 1 << i11;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label06;

        r2[i11] = 1;

     label06:
        i11 = i11 + 1;

        goto label05;

     label07:
        i10 = i10 + 1;

        goto label04;

     label08:
        i12 = 0;

     label09:
        if i12 >= 24 goto label11;

        $z0 = r2[i12];

        if $z0 == 0 goto label10;

        $r11 = newarray (int)[1];

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry> = $r11;

        $r12 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry>;

        $r12[0] = i12;

        $r14 = r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries>;

        $r13 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int[] jj_expentry>;

        virtualinvoke $r14.<java.util.Vector: void addElement(java.lang.Object)>($r13);

     label10:
        i12 = i12 + 1;

        goto label09;

     label11:
        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_endpos> = 0;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: void jj_rescan_token()>();

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: void jj_add_error_token(int,int)>(0, 0);

        $r3 = r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        r17 = newarray (int[])[$i1];

        i13 = 0;

     label12:
        $r4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries>;

        $i2 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if i13 >= $i2 goto label13;

        $r8 = r0.<org.apache.commons.configuration.plist.PropertyListParser: java.util.Vector jj_expentries>;

        $r9 = virtualinvoke $r8.<java.util.Vector: java.lang.Object elementAt(int)>(i13);

        $r10 = (int[]) $r9;

        r17[i13] = $r10;

        i13 = i13 + 1;

        goto label12;

     label13:
        $r18 = new org.apache.commons.configuration.plist.ParseException;

        $r7 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        $r6 = <org.apache.commons.configuration.plist.PropertyListParser: java.lang.String[] tokenImage>;

        specialinvoke $r18.<org.apache.commons.configuration.plist.ParseException: void <init>(org.apache.commons.configuration.plist.Token,int[][],java.lang.String[])>($r7, r17, $r6);

        return $r18;
    }

    public final void enable_tracing()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        return;
    }

    public final void disable_tracing()
    {
        org.apache.commons.configuration.plist.PropertyListParser r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        return;
    }

    private final void jj_rescan_token()
    {
        org.apache.commons.configuration.plist.Token $r2;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r1;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls r3, $r4;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_rescan> = 1;

        i3 = 0;

     label1:
        if i3 >= 1 goto label5;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        r3 = $r1[i3];

     label2:
        $i1 = r3.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: int gen>;

        $i0 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        if $i1 <= $i0 goto label4;

        $i2 = r3.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: int arg>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_la> = $i2;

        $r2 = r3.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.Token first>;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_scanpos> = $r2;

        r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token jj_lastpos> = $r2;

        lookupswitch(i3)
        {
            case 0: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_3_1()>();

     label4:
        $r4 = r3.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.PropertyListParser$JJCalls next>;

        r3 = $r4;

        if $r4 != null goto label2;

        i3 = i3 + 1;

        goto label1;

     label5:
        r0.<org.apache.commons.configuration.plist.PropertyListParser: boolean jj_rescan> = 0;

        return;
    }

    private final void jj_save(int, int)
    {
        org.apache.commons.configuration.plist.Token $r2;
        org.apache.commons.configuration.plist.PropertyListParser r0;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] $r1;
        org.apache.commons.configuration.plist.PropertyListParser$JJCalls $r3, $r4, r5;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListParser;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListParser$JJCalls[] jj_2_rtns>;

        r5 = $r1[i0];

     label1:
        $i2 = r5.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: int gen>;

        $i1 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        if $i2 <= $i1 goto label3;

        $r3 = r5.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.PropertyListParser$JJCalls next>;

        if $r3 != null goto label2;

        $r4 = new org.apache.commons.configuration.plist.PropertyListParser$JJCalls;

        specialinvoke $r4.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: void <init>()>();

        r5.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.PropertyListParser$JJCalls next> = $r4;

        r5 = $r4;

        goto label3;

     label2:
        r5 = r5.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.PropertyListParser$JJCalls next>;

        goto label1;

     label3:
        $i4 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_gen>;

        $i6 = $i4 + i3;

        $i5 = r0.<org.apache.commons.configuration.plist.PropertyListParser: int jj_la>;

        $i7 = $i6 - $i5;

        r5.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: int gen> = $i7;

        $r2 = r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.Token token>;

        r5.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: org.apache.commons.configuration.plist.Token first> = $r2;

        r5.<org.apache.commons.configuration.plist.PropertyListParser$JJCalls: int arg> = i3;

        return;
    }

    static void <clinit>()
    {
        staticinvoke <org.apache.commons.configuration.plist.PropertyListParser: void jj_la1_0()>();

        return;
    }
}
