public class org.codehaus.groovy.antlr.java.JavaLexer extends groovyjarjarantlr.CharScanner implements org.codehaus.groovy.antlr.java.JavaTokenTypes, groovyjarjarantlr.TokenStream
{
    protected static final int SCS_TYPE;
    protected static final int SCS_VAL;
    protected static final int SCS_LIT;
    protected static final int SCS_LIMIT;
    protected static final int SCS_SQ_TYPE;
    protected static final int SCS_TQ_TYPE;
    protected static final int SCS_RE_TYPE;
    protected int stringCtorState;
    protected int lastSigTokenType;
    private boolean assertEnabled;
    private boolean enumEnabled;
    private boolean whitespaceIncluded;
    protected org.codehaus.groovy.antlr.java.JavaRecognizer parser;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_0;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_1;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_2;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_3;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_4;

    public void enableAssert(boolean)
    {
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean assertEnabled> = z0;

        return;
    }

    public boolean isAssertEnabled()
    {
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        $z0 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean assertEnabled>;

        return $z0;
    }

    public void enableEnum(boolean)
    {
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean enumEnabled> = z0;

        return;
    }

    public boolean isEnumEnabled()
    {
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        $z0 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean enumEnabled>;

        return $z0;
    }

    public groovyjarjarantlr.TokenStream plumb()
    {
        org.codehaus.groovy.antlr.java.JavaLexer r1;
        org.codehaus.groovy.antlr.java.JavaLexer$1 $r0;

        r1 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        $r0 = new org.codehaus.groovy.antlr.java.JavaLexer$1;

        specialinvoke $r0.<org.codehaus.groovy.antlr.java.JavaLexer$1: void <init>(org.codehaus.groovy.antlr.java.JavaLexer)>(r1);

        return $r0;
    }

    public void <init>(java.io.InputStream)
    {
        groovyjarjarantlr.ByteBuffer $r1;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        java.io.InputStream r2;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new groovyjarjarantlr.ByteBuffer;

        specialinvoke $r1.<groovyjarjarantlr.ByteBuffer: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(java.io.Reader)
    {
        groovyjarjarantlr.CharBuffer $r1;
        java.io.Reader r2;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        r2 := @parameter0: java.io.Reader;

        $r1 = new groovyjarjarantlr.CharBuffer;

        specialinvoke $r1.<groovyjarjarantlr.CharBuffer: void <init>(java.io.Reader)>(r2);

        specialinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.InputBuffer)
    {
        groovyjarjarantlr.LexerSharedInputState $r1;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.InputBuffer r2;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        r2 := @parameter0: groovyjarjarantlr.InputBuffer;

        $r1 = new groovyjarjarantlr.LexerSharedInputState;

        specialinvoke $r1.<groovyjarjarantlr.LexerSharedInputState: void <init>(groovyjarjarantlr.InputBuffer)>(r2);

        specialinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void <init>(groovyjarjarantlr.LexerSharedInputState)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.LexerSharedInputState)
    {
        java.lang.Integer $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95, $r98, $r101, $r104, $r107, $r110, $r113, $r116, $r119, $r122, $r125, $r128, $r131, $r134, $r137, $r140, $r143, $r146, $r149, $r152, $r155, $r158;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.ANTLRHashString $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r126, $r129, $r132, $r135, $r138, $r141, $r144, $r147, $r150, $r153, $r156;
        groovyjarjarantlr.LexerSharedInputState r1;
        java.util.Hashtable $r2, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r136, $r139, $r142, $r145, $r148, $r151, $r154, $r157;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        r1 := @parameter0: groovyjarjarantlr.LexerSharedInputState;

        specialinvoke r0.<groovyjarjarantlr.CharScanner: void <init>(groovyjarjarantlr.LexerSharedInputState)>(r1);

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: int stringCtorState> = 0;

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: int lastSigTokenType> = 1;

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean assertEnabled> = 1;

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean enumEnabled> = 1;

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean whitespaceIncluded> = 0;

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean caseSensitiveLiterals> = 1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void setCaseSensitive(boolean)>(1);

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals> = $r2;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r3 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r3.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("byte", r0);

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(79);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r7 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r6 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r6.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("public", r0);

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(88);

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        $r10 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r9 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r9.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("case", r0);

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(122);

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        $r13 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r12 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r12.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("short", r0);

        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>(81);

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14);

        $r16 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r15 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r15.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("break", r0);

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(115);

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

        $r19 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r18 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r18.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("while", r0);

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(113);

        virtualinvoke $r19.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r20);

        $r22 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r21 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r21.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("new", r0);

        $r23 = new java.lang.Integer;

        specialinvoke $r23.<java.lang.Integer: void <init>(int)>(158);

        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r23);

        $r25 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r24 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r24.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("instanceof", r0);

        $r26 = new java.lang.Integer;

        specialinvoke $r26.<java.lang.Integer: void <init>(int)>(145);

        virtualinvoke $r25.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r26);

        $r28 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r27 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r27.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("implements", r0);

        $r29 = new java.lang.Integer;

        specialinvoke $r29.<java.lang.Integer: void <init>(int)>(106);

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r29);

        $r31 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r30 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r30.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("synchronized", r0);

        $r32 = new java.lang.Integer;

        specialinvoke $r32.<java.lang.Integer: void <init>(int)>(93);

        virtualinvoke $r31.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r32);

        $r34 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r33 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r33.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("float", r0);

        $r35 = new java.lang.Integer;

        specialinvoke $r35.<java.lang.Integer: void <init>(int)>(83);

        virtualinvoke $r34.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r35);

        $r37 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r36 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r36.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("package", r0);

        $r38 = new java.lang.Integer;

        specialinvoke $r38.<java.lang.Integer: void <init>(int)>(61);

        virtualinvoke $r37.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r38);

        $r40 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r39 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r39.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("return", r0);

        $r41 = new java.lang.Integer;

        specialinvoke $r41.<java.lang.Integer: void <init>(int)>(117);

        virtualinvoke $r40.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r41);

        $r43 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r42 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r42.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("throw", r0);

        $r44 = new java.lang.Integer;

        specialinvoke $r44.<java.lang.Integer: void <init>(int)>(119);

        virtualinvoke $r43.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r44);

        $r46 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r45 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r45.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("null", r0);

        $r47 = new java.lang.Integer;

        specialinvoke $r47.<java.lang.Integer: void <init>(int)>(157);

        virtualinvoke $r46.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, $r47);

        $r49 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r48 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r48.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("threadsafe", r0);

        $r50 = new java.lang.Integer;

        specialinvoke $r50.<java.lang.Integer: void <init>(int)>(92);

        virtualinvoke $r49.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r50);

        $r52 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r51 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r51.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("protected", r0);

        $r53 = new java.lang.Integer;

        specialinvoke $r53.<java.lang.Integer: void <init>(int)>(89);

        virtualinvoke $r52.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, $r53);

        $r55 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r54 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r54.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("class", r0);

        $r56 = new java.lang.Integer;

        specialinvoke $r56.<java.lang.Integer: void <init>(int)>(101);

        virtualinvoke $r55.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, $r56);

        $r58 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r57 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r57.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("throws", r0);

        $r59 = new java.lang.Integer;

        specialinvoke $r59.<java.lang.Integer: void <init>(int)>(108);

        virtualinvoke $r58.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r59);

        $r61 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r60 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r60.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("do", r0);

        $r62 = new java.lang.Integer;

        specialinvoke $r62.<java.lang.Integer: void <init>(int)>(114);

        virtualinvoke $r61.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r60, $r62);

        $r64 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r63 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r63.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("strictfp", r0);

        $r65 = new java.lang.Integer;

        specialinvoke $r65.<java.lang.Integer: void <init>(int)>(40);

        virtualinvoke $r64.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r63, $r65);

        $r67 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r66 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r66.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("super", r0);

        $r68 = new java.lang.Integer;

        specialinvoke $r68.<java.lang.Integer: void <init>(int)>(71);

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r66, $r68);

        $r70 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r69 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r69.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("transient", r0);

        $r71 = new java.lang.Integer;

        specialinvoke $r71.<java.lang.Integer: void <init>(int)>(90);

        virtualinvoke $r70.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r69, $r71);

        $r73 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r72 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r72.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("native", r0);

        $r74 = new java.lang.Integer;

        specialinvoke $r74.<java.lang.Integer: void <init>(int)>(91);

        virtualinvoke $r73.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, $r74);

        $r76 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r75 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r75.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("interface", r0);

        $r77 = new java.lang.Integer;

        specialinvoke $r77.<java.lang.Integer: void <init>(int)>(102);

        virtualinvoke $r76.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r75, $r77);

        $r79 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r78 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r78.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("final", r0);

        $r80 = new java.lang.Integer;

        specialinvoke $r80.<java.lang.Integer: void <init>(int)>(38);

        virtualinvoke $r79.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r78, $r80);

        $r82 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r81 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r81.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("if", r0);

        $r83 = new java.lang.Integer;

        specialinvoke $r83.<java.lang.Integer: void <init>(int)>(111);

        virtualinvoke $r82.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r81, $r83);

        $r85 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r84 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r84.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("double", r0);

        $r86 = new java.lang.Integer;

        specialinvoke $r86.<java.lang.Integer: void <init>(int)>(85);

        virtualinvoke $r85.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r84, $r86);

        $r88 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r87 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r87.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("volatile", r0);

        $r89 = new java.lang.Integer;

        specialinvoke $r89.<java.lang.Integer: void <init>(int)>(94);

        virtualinvoke $r88.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r87, $r89);

        $r91 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r90 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r90.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("assert", r0);

        $r92 = new java.lang.Integer;

        specialinvoke $r92.<java.lang.Integer: void <init>(int)>(120);

        virtualinvoke $r91.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r90, $r92);

        $r94 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r93 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r93.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("catch", r0);

        $r95 = new java.lang.Integer;

        specialinvoke $r95.<java.lang.Integer: void <init>(int)>(125);

        virtualinvoke $r94.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r93, $r95);

        $r97 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r96 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r96.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("try", r0);

        $r98 = new java.lang.Integer;

        specialinvoke $r98.<java.lang.Integer: void <init>(int)>(123);

        virtualinvoke $r97.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r96, $r98);

        $r100 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r99 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r99.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("enum", r0);

        $r101 = new java.lang.Integer;

        specialinvoke $r101.<java.lang.Integer: void <init>(int)>(103);

        virtualinvoke $r100.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r99, $r101);

        $r103 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r102 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r102.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("int", r0);

        $r104 = new java.lang.Integer;

        specialinvoke $r104.<java.lang.Integer: void <init>(int)>(82);

        virtualinvoke $r103.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r102, $r104);

        $r106 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r105 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r105.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("for", r0);

        $r107 = new java.lang.Integer;

        specialinvoke $r107.<java.lang.Integer: void <init>(int)>(121);

        virtualinvoke $r106.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r105, $r107);

        $r109 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r108 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r108.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("extends", r0);

        $r110 = new java.lang.Integer;

        specialinvoke $r110.<java.lang.Integer: void <init>(int)>(70);

        virtualinvoke $r109.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r108, $r110);

        $r112 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r111 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r111.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("boolean", r0);

        $r113 = new java.lang.Integer;

        specialinvoke $r113.<java.lang.Integer: void <init>(int)>(78);

        virtualinvoke $r112.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r111, $r113);

        $r115 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r114 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r114.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("char", r0);

        $r116 = new java.lang.Integer;

        specialinvoke $r116.<java.lang.Integer: void <init>(int)>(80);

        virtualinvoke $r115.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r114, $r116);

        $r118 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r117 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r117.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("private", r0);

        $r119 = new java.lang.Integer;

        specialinvoke $r119.<java.lang.Integer: void <init>(int)>(87);

        virtualinvoke $r118.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r117, $r119);

        $r121 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r120 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r120.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("default", r0);

        $r122 = new java.lang.Integer;

        specialinvoke $r122.<java.lang.Integer: void <init>(int)>(105);

        virtualinvoke $r121.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r122);

        $r124 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r123 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r123.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("false", r0);

        $r125 = new java.lang.Integer;

        specialinvoke $r125.<java.lang.Integer: void <init>(int)>(156);

        virtualinvoke $r124.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r123, $r125);

        $r127 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r126 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r126.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("this", r0);

        $r128 = new java.lang.Integer;

        specialinvoke $r128.<java.lang.Integer: void <init>(int)>(107);

        virtualinvoke $r127.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r126, $r128);

        $r130 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r129 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r129.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("static", r0);

        $r131 = new java.lang.Integer;

        specialinvoke $r131.<java.lang.Integer: void <init>(int)>(64);

        virtualinvoke $r130.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r129, $r131);

        $r133 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r132 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r132.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("abstract", r0);

        $r134 = new java.lang.Integer;

        specialinvoke $r134.<java.lang.Integer: void <init>(int)>(39);

        virtualinvoke $r133.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r132, $r134);

        $r136 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r135 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r135.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("continue", r0);

        $r137 = new java.lang.Integer;

        specialinvoke $r137.<java.lang.Integer: void <init>(int)>(116);

        virtualinvoke $r136.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r135, $r137);

        $r139 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r138 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r138.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("finally", r0);

        $r140 = new java.lang.Integer;

        specialinvoke $r140.<java.lang.Integer: void <init>(int)>(124);

        virtualinvoke $r139.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r138, $r140);

        $r142 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r141 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r141.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("else", r0);

        $r143 = new java.lang.Integer;

        specialinvoke $r143.<java.lang.Integer: void <init>(int)>(112);

        virtualinvoke $r142.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r141, $r143);

        $r145 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r144 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r144.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("import", r0);

        $r146 = new java.lang.Integer;

        specialinvoke $r146.<java.lang.Integer: void <init>(int)>(63);

        virtualinvoke $r145.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r144, $r146);

        $r148 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r147 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r147.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("void", r0);

        $r149 = new java.lang.Integer;

        specialinvoke $r149.<java.lang.Integer: void <init>(int)>(77);

        virtualinvoke $r148.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r147, $r149);

        $r151 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r150 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r150.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("switch", r0);

        $r152 = new java.lang.Integer;

        specialinvoke $r152.<java.lang.Integer: void <init>(int)>(118);

        virtualinvoke $r151.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r150, $r152);

        $r154 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r153 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r153.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("true", r0);

        $r155 = new java.lang.Integer;

        specialinvoke $r155.<java.lang.Integer: void <init>(int)>(155);

        virtualinvoke $r154.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r153, $r155);

        $r157 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.util.Hashtable literals>;

        $r156 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r156.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("long", r0);

        $r158 = new java.lang.Integer;

        specialinvoke $r158.<java.lang.Integer: void <init>(int)>(84);

        virtualinvoke $r157.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r156, $r158);

        return;
    }

    public groovyjarjarantlr.Token nextToken() throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.CharStreamIOException $r11;
        groovyjarjarantlr.TokenStreamRecognitionException $r17;
        java.io.IOException $r12;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.TokenStreamIOException $r18;
        groovyjarjarantlr.Token $r1, $r2, $r3, $r6, $r15;
        int $i1, $i36, $i37, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i139;
        groovyjarjarantlr.NoViableAltForCharException $r16;
        java.lang.String $r5, $r9;
        boolean $z0;
        groovyjarjarantlr.CharStreamException $r7;
        groovyjarjarantlr.RecognitionException $r13;
        char $c0, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, $c29, $c30, $c31, $c32, $c33, $c34, $c35, $c38, $c39, $c40, $c41, $c42, $c43, $c44, $c45, $c46, $c47, $c48, $c49, $c50, $c51, $c52, $c53, $c54, $c55, $c56, $c57, $c58, $c59, $c60, $c61, $c62, $c63, $c64, $c65, $c66, $c67, $c68, $c69, $c70;
        groovyjarjarantlr.TokenStreamException $r19;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void resetText()>();

     label02:
        $c0 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i71 = (int) $c0;

        tableswitch($i71)
        {
            case 9: goto label14;
            case 10: goto label14;
            case 11: goto label20;
            case 12: goto label14;
            case 13: goto label14;
            case 14: goto label20;
            case 15: goto label20;
            case 16: goto label20;
            case 17: goto label20;
            case 18: goto label20;
            case 19: goto label20;
            case 20: goto label20;
            case 21: goto label20;
            case 22: goto label20;
            case 23: goto label20;
            case 24: goto label20;
            case 25: goto label20;
            case 26: goto label20;
            case 27: goto label20;
            case 28: goto label20;
            case 29: goto label20;
            case 30: goto label20;
            case 31: goto label20;
            case 32: goto label14;
            case 33: goto label20;
            case 34: goto label16;
            case 35: goto label20;
            case 36: goto label17;
            case 37: goto label20;
            case 38: goto label20;
            case 39: goto label15;
            case 40: goto label04;
            case 41: goto label05;
            case 42: goto label20;
            case 43: goto label20;
            case 44: goto label11;
            case 45: goto label20;
            case 46: goto label18;
            case 47: goto label20;
            case 48: goto label18;
            case 49: goto label18;
            case 50: goto label18;
            case 51: goto label18;
            case 52: goto label18;
            case 53: goto label18;
            case 54: goto label18;
            case 55: goto label18;
            case 56: goto label18;
            case 57: goto label18;
            case 58: goto label10;
            case 59: goto label13;
            case 60: goto label20;
            case 61: goto label20;
            case 62: goto label20;
            case 63: goto label03;
            case 64: goto label19;
            case 65: goto label17;
            case 66: goto label17;
            case 67: goto label17;
            case 68: goto label17;
            case 69: goto label17;
            case 70: goto label17;
            case 71: goto label17;
            case 72: goto label17;
            case 73: goto label17;
            case 74: goto label17;
            case 75: goto label17;
            case 76: goto label17;
            case 77: goto label17;
            case 78: goto label17;
            case 79: goto label17;
            case 80: goto label17;
            case 81: goto label17;
            case 82: goto label17;
            case 83: goto label17;
            case 84: goto label17;
            case 85: goto label17;
            case 86: goto label17;
            case 87: goto label17;
            case 88: goto label17;
            case 89: goto label17;
            case 90: goto label17;
            case 91: goto label06;
            case 92: goto label20;
            case 93: goto label07;
            case 94: goto label20;
            case 95: goto label17;
            case 96: goto label20;
            case 97: goto label17;
            case 98: goto label17;
            case 99: goto label17;
            case 100: goto label17;
            case 101: goto label17;
            case 102: goto label17;
            case 103: goto label17;
            case 104: goto label17;
            case 105: goto label17;
            case 106: goto label17;
            case 107: goto label17;
            case 108: goto label17;
            case 109: goto label17;
            case 110: goto label17;
            case 111: goto label17;
            case 112: goto label17;
            case 113: goto label17;
            case 114: goto label17;
            case 115: goto label17;
            case 116: goto label17;
            case 117: goto label17;
            case 118: goto label17;
            case 119: goto label17;
            case 120: goto label17;
            case 121: goto label17;
            case 122: goto label17;
            case 123: goto label08;
            case 124: goto label20;
            case 125: goto label09;
            case 126: goto label12;
            default: goto label20;
        };

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mQUESTION(boolean)>(1);

        goto label58;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLPAREN(boolean)>(1);

        goto label58;

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mRPAREN(boolean)>(1);

        goto label58;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLBRACK(boolean)>(1);

        goto label58;

     label07:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mRBRACK(boolean)>(1);

        goto label58;

     label08:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLCURLY(boolean)>(1);

        goto label58;

     label09:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mRCURLY(boolean)>(1);

        goto label58;

     label10:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mCOLON(boolean)>(1);

        goto label58;

     label11:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mCOMMA(boolean)>(1);

        goto label58;

     label12:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBNOT(boolean)>(1);

        goto label58;

     label13:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSEMI(boolean)>(1);

        goto label58;

     label14:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mWS(boolean)>(1);

        goto label58;

     label15:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mCHAR_LITERAL(boolean)>(1);

        goto label58;

     label16:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSTRING_LITERAL(boolean)>(1);

        goto label58;

     label17:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mIDENT(boolean)>(1);

        goto label58;

     label18:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mNUM_INT(boolean)>(1);

        goto label58;

     label19:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mAT(boolean)>(1);

        goto label58;

     label20:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i72 = (int) $c2;

        if $i72 != 62 goto label21;

        $c64 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i73 = (int) $c64;

        if $i73 != 62 goto label21;

        $c65 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i74 = (int) $c65;

        if $i74 != 62 goto label21;

        $c66 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(4);

        $i75 = (int) $c66;

        if $i75 != 61 goto label21;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBSR_ASSIGN(boolean)>(1);

        goto label58;

     label21:
        $c67 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i76 = (int) $c67;

        if $i76 != 62 goto label22;

        $c62 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i77 = (int) $c62;

        if $i77 != 62 goto label22;

        $c63 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i78 = (int) $c63;

        if $i78 != 61 goto label22;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSR_ASSIGN(boolean)>(1);

        goto label58;

     label22:
        $c68 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i79 = (int) $c68;

        if $i79 != 62 goto label23;

        $c60 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i80 = (int) $c60;

        if $i80 != 62 goto label23;

        $c61 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i81 = (int) $c61;

        if $i81 != 62 goto label23;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBSR(boolean)>(1);

        goto label58;

     label23:
        $c69 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i82 = (int) $c69;

        if $i82 != 60 goto label24;

        $c58 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i83 = (int) $c58;

        if $i83 != 60 goto label24;

        $c59 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i84 = (int) $c59;

        if $i84 != 61 goto label24;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSL_ASSIGN(boolean)>(1);

        goto label58;

     label24:
        $c70 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i85 = (int) $c70;

        if $i85 != 61 goto label25;

        $c57 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i86 = (int) $c57;

        if $i86 != 61 goto label25;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mEQUAL(boolean)>(1);

        goto label58;

     label25:
        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i87 = (int) $c3;

        if $i87 != 33 goto label26;

        $c56 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i88 = (int) $c56;

        if $i88 != 61 goto label26;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mNOT_EQUAL(boolean)>(1);

        goto label58;

     label26:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i89 = (int) $c4;

        if $i89 != 47 goto label27;

        $c55 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i90 = (int) $c55;

        if $i90 != 61 goto label27;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mDIV_ASSIGN(boolean)>(1);

        goto label58;

     label27:
        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i91 = (int) $c5;

        if $i91 != 43 goto label28;

        $c54 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i92 = (int) $c54;

        if $i92 != 61 goto label28;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mPLUS_ASSIGN(boolean)>(1);

        goto label58;

     label28:
        $c6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i93 = (int) $c6;

        if $i93 != 43 goto label29;

        $c53 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i94 = (int) $c53;

        if $i94 != 43 goto label29;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mINC(boolean)>(1);

        goto label58;

     label29:
        $c7 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i95 = (int) $c7;

        if $i95 != 45 goto label30;

        $c52 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i96 = (int) $c52;

        if $i96 != 61 goto label30;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mMINUS_ASSIGN(boolean)>(1);

        goto label58;

     label30:
        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i97 = (int) $c8;

        if $i97 != 45 goto label31;

        $c51 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i98 = (int) $c51;

        if $i98 != 45 goto label31;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mDEC(boolean)>(1);

        goto label58;

     label31:
        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i99 = (int) $c9;

        if $i99 != 42 goto label32;

        $c50 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i100 = (int) $c50;

        if $i100 != 61 goto label32;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSTAR_ASSIGN(boolean)>(1);

        goto label58;

     label32:
        $c10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i101 = (int) $c10;

        if $i101 != 37 goto label33;

        $c49 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i102 = (int) $c49;

        if $i102 != 61 goto label33;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mMOD_ASSIGN(boolean)>(1);

        goto label58;

     label33:
        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i103 = (int) $c11;

        if $i103 != 62 goto label34;

        $c48 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i104 = (int) $c48;

        if $i104 != 62 goto label34;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSR(boolean)>(1);

        goto label58;

     label34:
        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i105 = (int) $c12;

        if $i105 != 62 goto label35;

        $c47 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i106 = (int) $c47;

        if $i106 != 61 goto label35;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mGE(boolean)>(1);

        goto label58;

     label35:
        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i107 = (int) $c13;

        if $i107 != 60 goto label36;

        $c46 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i108 = (int) $c46;

        if $i108 != 60 goto label36;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSL(boolean)>(1);

        goto label58;

     label36:
        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i109 = (int) $c14;

        if $i109 != 60 goto label37;

        $c45 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i110 = (int) $c45;

        if $i110 != 61 goto label37;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLE(boolean)>(1);

        goto label58;

     label37:
        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i111 = (int) $c15;

        if $i111 != 94 goto label38;

        $c44 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i112 = (int) $c44;

        if $i112 != 61 goto label38;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBXOR_ASSIGN(boolean)>(1);

        goto label58;

     label38:
        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i113 = (int) $c16;

        if $i113 != 124 goto label39;

        $c43 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i114 = (int) $c43;

        if $i114 != 61 goto label39;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBOR_ASSIGN(boolean)>(1);

        goto label58;

     label39:
        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i115 = (int) $c17;

        if $i115 != 124 goto label40;

        $c42 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i116 = (int) $c42;

        if $i116 != 124 goto label40;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLOR(boolean)>(1);

        goto label58;

     label40:
        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i117 = (int) $c18;

        if $i117 != 38 goto label41;

        $c41 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i118 = (int) $c41;

        if $i118 != 61 goto label41;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBAND_ASSIGN(boolean)>(1);

        goto label58;

     label41:
        $c19 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i119 = (int) $c19;

        if $i119 != 38 goto label42;

        $c40 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i120 = (int) $c40;

        if $i120 != 38 goto label42;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLAND(boolean)>(1);

        goto label58;

     label42:
        $c20 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i121 = (int) $c20;

        if $i121 != 47 goto label43;

        $c39 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i122 = (int) $c39;

        if $i122 != 47 goto label43;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSL_COMMENT(boolean)>(1);

        goto label58;

     label43:
        $c21 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i123 = (int) $c21;

        if $i123 != 47 goto label44;

        $c38 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i124 = (int) $c38;

        if $i124 != 42 goto label44;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mML_COMMENT(boolean)>(1);

        goto label58;

     label44:
        $c22 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i125 = (int) $c22;

        if $i125 != 61 goto label45;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mASSIGN(boolean)>(1);

        goto label58;

     label45:
        $c23 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i126 = (int) $c23;

        if $i126 != 33 goto label46;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLNOT(boolean)>(1);

        goto label58;

     label46:
        $c24 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i127 = (int) $c24;

        if $i127 != 47 goto label47;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mDIV(boolean)>(1);

        goto label58;

     label47:
        $c25 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i128 = (int) $c25;

        if $i128 != 43 goto label48;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mPLUS(boolean)>(1);

        goto label58;

     label48:
        $c26 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i129 = (int) $c26;

        if $i129 != 45 goto label49;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mMINUS(boolean)>(1);

        goto label58;

     label49:
        $c27 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i130 = (int) $c27;

        if $i130 != 42 goto label50;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mSTAR(boolean)>(1);

        goto label58;

     label50:
        $c28 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i131 = (int) $c28;

        if $i131 != 37 goto label51;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mMOD(boolean)>(1);

        goto label58;

     label51:
        $c29 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i132 = (int) $c29;

        if $i132 != 62 goto label52;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mGT(boolean)>(1);

        goto label58;

     label52:
        $c30 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i133 = (int) $c30;

        if $i133 != 60 goto label53;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mLT(boolean)>(1);

        goto label58;

     label53:
        $c31 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i134 = (int) $c31;

        if $i134 != 94 goto label54;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBXOR(boolean)>(1);

        goto label58;

     label54:
        $c32 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i135 = (int) $c32;

        if $i135 != 124 goto label55;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBOR(boolean)>(1);

        goto label58;

     label55:
        $c33 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i136 = (int) $c33;

        if $i136 != 38 goto label56;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mBAND(boolean)>(1);

        goto label58;

     label56:
        $c34 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i137 = (int) $c34;

        $i139 = (int) 65535;

        if $i137 != $i139 goto label57;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void uponEOF()>();

        $r6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(1);

        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = $r6;

        goto label58;

     label57:
        $r16 = new groovyjarjarantlr.NoViableAltForCharException;

        $c35 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i36 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i37 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r16.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c35, $r5, $i36, $i37);

        throw $r16;

     label58:
        $r15 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

        if $r15 != null goto label60;

     label59:
        goto label01;

     label60:
        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

        $i1 = virtualinvoke $r1.<groovyjarjarantlr.Token: int getType()>();

        $r2 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setType(int)>($i1);

        $r3 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

     label61:
        return $r3;

     label62:
        $r13 := @caughtexception;

        $r17 = new groovyjarjarantlr.TokenStreamRecognitionException;

        specialinvoke $r17.<groovyjarjarantlr.TokenStreamRecognitionException: void <init>(groovyjarjarantlr.RecognitionException)>($r13);

        throw $r17;

     label63:
        $r7 := @caughtexception;

        $z0 = $r7 instanceof groovyjarjarantlr.CharStreamIOException;

        if $z0 == 0 goto label64;

        $r18 = new groovyjarjarantlr.TokenStreamIOException;

        $r11 = (groovyjarjarantlr.CharStreamIOException) $r7;

        $r12 = $r11.<groovyjarjarantlr.CharStreamIOException: java.io.IOException io>;

        specialinvoke $r18.<groovyjarjarantlr.TokenStreamIOException: void <init>(java.io.IOException)>($r12);

        throw $r18;

     label64:
        $r19 = new groovyjarjarantlr.TokenStreamException;

        $r9 = virtualinvoke $r7.<groovyjarjarantlr.CharStreamException: java.lang.String getMessage()>();

        specialinvoke $r19.<groovyjarjarantlr.TokenStreamException: void <init>(java.lang.String)>($r9);

        throw $r19;

        catch groovyjarjarantlr.RecognitionException from label02 to label59 with label62;
        catch groovyjarjarantlr.RecognitionException from label60 to label61 with label62;
        catch groovyjarjarantlr.CharStreamException from label02 to label59 with label63;
        catch groovyjarjarantlr.CharStreamException from label60 to label61 with label63;
        catch groovyjarjarantlr.CharStreamException from label62 to label63 with label63;
    }

    public final void mQUESTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(63);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 69 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(69);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(40);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 96 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(96);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(41);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 97 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(97);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLBRACK(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(91);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 65 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(65);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRBRACK(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(93);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 66 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(66);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLCURLY(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(123);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 99 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(99);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRCURLY(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(125);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 100 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(100);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCOLON(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(58);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 110 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(110);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCOMMA(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(44);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 73 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(73);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(61);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 98 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(98);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mEQUAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("==");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 142 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(142);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLNOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(33);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 154 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(154);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBNOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(126);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 153 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(153);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mNOT_EQUAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("!=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 141 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(141);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mDIV(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(47);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 149 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(149);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mDIV_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("/=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 129 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(129);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mPLUS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(43);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 147 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(147);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mPLUS_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("+=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 126 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(126);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mINC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("++");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 151 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(151);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMINUS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(45);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 148 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(148);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMINUS_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("-=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 127 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(127);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mDEC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("--");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 152 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(152);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSTAR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(42);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 86 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(86);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSTAR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("*=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 128 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(128);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMOD(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(37);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 150 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(150);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMOD_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("%=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 130 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(130);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>(">>");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 75 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(75);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>(">>=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 131 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(131);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBSR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>(">>>");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 76 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(76);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBSR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>(">>>=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 132 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(132);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mGE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>(">=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 144 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(144);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mGT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>(">");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 74 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(74);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("<<");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 146 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(146);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSL_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("<<=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 133 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(133);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("<=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 143 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(143);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(60);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 72 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(72);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBXOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(94);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 140 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(140);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBXOR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("^=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 135 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(135);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(124);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 139 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(139);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBOR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("|=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 136 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(136);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("||");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 137 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(137);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBAND(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(38);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 104 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(104);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBAND_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("&=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 134 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(134);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLAND(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("&&");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 138 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(138);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSEMI(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(59);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 62 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(62);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mWS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r7, r12;
        boolean z0;
        groovyjarjarantlr.LexerSharedInputState $r6, $r13;
        short s15, s18, s19;
        int $i0, $i6, $i7, $i10, $i11, $i12, $i13, $i14, i16, $i17, $i20, $i21, $i22, $i23, $i24, $i26;
        java.lang.String $r3, $r5, $r16;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r9, $r11;
        char $c1, $c2, $c3, $c4, $c5, $c8, $c9;
        groovyjarjarantlr.NoViableAltForCharException $r14, $r15;
        char[] $r10;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r12 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s15 = 165;

        s19 = 165;

        s18 = 165;

        i16 = 0;

     label01:
        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i20 = (int) $c1;

        lookupswitch($i20)
        {
            case 9: goto label03;
            case 10: goto label05;
            case 12: goto label04;
            case 13: goto label05;
            case 32: goto label02;
            default: goto label10;
        };

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(32);

        goto label12;

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(9);

        goto label12;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(12);

        goto label12;

     label05:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i21 = (int) $c2;

        if $i21 != 13 goto label06;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i22 = (int) $c8;

        if $i22 != 10 goto label06;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("\r\n");

        goto label09;

     label06:
        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i23 = (int) $c3;

        if $i23 != 13 goto label07;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(13);

        goto label09;

     label07:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i24 = (int) $c4;

        if $i24 != 10 goto label08;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(10);

        goto label09;

     label08:
        $r14 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i7 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r14.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r3, $i6, $i7);

        throw $r14;

     label09:
        $r13 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i17 = $r13.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i17 != 0 goto label12;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void newline()>();

        goto label12;

     label10:
        if i16 < 1 goto label11;

        goto label13;

     label11:
        $r15 = new groovyjarjarantlr.NoViableAltForCharException;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i11 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r15.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c9, $r5, $i10, $i11);

        throw $r15;

     label12:
        i16 = i16 + 1;

        goto label01;

     label13:
        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i12 = $r6.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i12 != 0 goto label14;

        s15 = -1;

        s19 = -1;

        s18 = -1;

     label14:
        if z0 == 0 goto label15;

        if null != null goto label15;

        $i26 = (int) -1;

        if s18 == $i26 goto label15;

        $r7 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(s19);

        r12 = $r7;

        $r16 = new java.lang.String;

        $r9 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r10 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r11 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i13 = virtualinvoke $r11.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i14 = $i13 - $i0;

        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>($r10, $i0, $i14);

        virtualinvoke $r7.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r16);

     label15:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r12;

        return;
    }

    public final void mSL_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r3, r11;
        boolean $z0, z1;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r10;
        groovyjarjarantlr.LexerSharedInputState $r12;
        short s9, s11, s12;
        int $i0, $i4, $i5, $i7, $i8, $i10, $i13, $i14, $i15, $i17;
        java.lang.String $r9, $r14;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        char $c1, $c2, $c3, $c6;
        groovyjarjarantlr.NoViableAltForCharException $r13;
        char[] $r6;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z1 := @parameter0: boolean;

        r11 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s9 = 166;

        s12 = 166;

        s11 = 166;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("//");

     label1:
        $r2 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i13 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i13);

        if $z0 == 0 goto label2;

        $r10 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r10);

        goto label1;

     label2:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i14 = (int) $c2;

        lookupswitch($i14)
        {
            case 10: goto label3;
            case 13: goto label4;
            default: goto label5;
        };

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(10);

        goto label6;

     label4:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(13);

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i15 = (int) $c3;

        if $i15 != 10 goto label6;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(10);

        goto label6;

     label5:
        $r13 = new groovyjarjarantlr.NoViableAltForCharException;

        $c6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i7 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r13.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c6, $r9, $i7, $i8);

        throw $r13;

     label6:
        $r12 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i10 = $r12.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i10 != 0 goto label7;

        s9 = -1;

        s12 = -1;

        s11 = -1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void newline()>();

     label7:
        if z1 == 0 goto label8;

        if null != null goto label8;

        $i17 = (int) -1;

        if s11 == $i17 goto label8;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(s12);

        r11 = $r3;

        $r14 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i4 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i5 = $i4 - $i0;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i5);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r14);

     label8:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r11;

        return;
    }

    public final void mML_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        short s22, s27, s28;
        java.lang.String $r14;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char[] $r7;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r4, r13;
        boolean $z0, z1;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r9;
        groovyjarjarantlr.LexerSharedInputState $r3, $r10, $r11, $r12;
        int $i0, $i2, $i3, $i4, $i5, $i10, $i21, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i43, $i44, $i45, $i47, $i48, $i49, $i50, $i51, $i53, $i54, $i55, $i57, $i58, $i59, $i61;
        char $c1, $c6, $c7, $c8, $c9, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c23, $c24, $c25, $c26;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z1 := @parameter0: boolean;

        r13 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s22 = 167;

        s28 = 167;

        s27 = 167;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("/*");

     label1:
        $c23 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i29 = (int) $c23;

        if $i29 != 13 goto label2;

        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i30 = (int) $c16;

        if $i30 != 10 goto label2;

        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i31 = (int) $c17;

        if $i31 < 3 goto label2;

        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i32 = (int) $c18;

        $i34 = (int) 65535;

        if $i32 > $i34 goto label2;

        $c19 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(4);

        $i35 = (int) $c19;

        if $i35 < 3 goto label2;

        $c20 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(4);

        $i36 = (int) $c20;

        $i38 = (int) 65535;

        if $i36 > $i38 goto label2;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(13);

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(10);

        $r12 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i21 = $r12.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i21 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void newline()>();

        goto label1;

     label2:
        $c24 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i39 = (int) $c24;

        if $i39 != 42 goto label3;

        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i40 = (int) $c11;

        if $i40 < 3 goto label3;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i41 = (int) $c12;

        $i43 = (int) 65535;

        if $i41 > $i43 goto label3;

        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i44 = (int) $c13;

        if $i44 < 3 goto label3;

        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i45 = (int) $c14;

        $i47 = (int) 65535;

        if $i45 > $i47 goto label3;

        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i48 = (int) $c15;

        if $i48 == 47 goto label3;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(42);

        goto label1;

     label3:
        $c25 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i49 = (int) $c25;

        if $i49 != 13 goto label4;

        $c6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i50 = (int) $c6;

        if $i50 < 3 goto label4;

        $c7 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i51 = (int) $c7;

        $i53 = (int) 65535;

        if $i51 > $i53 goto label4;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i54 = (int) $c8;

        if $i54 < 3 goto label4;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(3);

        $i55 = (int) $c9;

        $i57 = (int) 65535;

        if $i55 > $i57 goto label4;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(13);

        $r11 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i10 = $r11.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i10 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void newline()>();

        goto label1;

     label4:
        $c26 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i58 = (int) $c26;

        if $i58 != 10 goto label5;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(10);

        $r10 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i5 = $r10.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i5 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void newline()>();

        goto label1;

     label5:
        $r2 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i59 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i59);

        if $z0 == 0 goto label6;

        $r9 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r9);

        goto label1;

     label6:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("*/");

        $r3 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i2 = $r3.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i2 != 0 goto label7;

        s22 = -1;

        s28 = -1;

        s27 = -1;

     label7:
        if z1 == 0 goto label8;

        if null != null goto label8;

        $i61 = (int) -1;

        if s28 == $i61 goto label8;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(s27);

        r13 = $r4;

        $r14 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i3 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i4 = $i3 - $i0;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i4);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r14);

     label8:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r13;

        return;
    }

    public final void mCHAR_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        java.lang.String $r4, $r13;
        groovyjarjarantlr.Token $r6, r11;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r8, $r10;
        char $c1, $c2, $c3;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r5;
        groovyjarjarantlr.NoViableAltForCharException $r12;
        char[] $r9;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z1 := @parameter0: boolean;

        r11 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(39);

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i8 = (int) $c1;

        if $i8 != 92 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mESC(boolean)>(0);

        goto label3;

     label1:
        $r2 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i9 = (int) $c2;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i9);

        if $z0 == 0 goto label2;

        $r5 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r5);

        goto label3;

     label2:
        $r12 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r12.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r4, $i4, $i5);

        throw $r12;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(39);

        if z1 == 0 goto label4;

        if null != null goto label4;

        $i11 = (int) -1;

        if 160 == $i11 goto label4;

        $r6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(160);

        r11 = $r6;

        $r13 = new java.lang.String;

        $r8 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r10 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r13.<java.lang.String: void <init>(char[],int,int)>($r9, $i0, $i7);

        virtualinvoke $r6.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r13);

     label4:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r11;

        return;
    }

    protected final void mESC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String $r3, $r10, $r13, $r16, $r19, $r29;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char[] $r7;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r4, r20;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        groovyjarjarantlr.collections.impl.BitSet $r11, $r14, $r17, $r21, $r22, $r23;
        int $i0, $i4, $i5, $i6, $i7, $i10, $i11, $i16, $i17, $i22, $i23, $i27, $i28, i29, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48;
        char $c1, $c2, $c3, $c8, $c9, $c12, $c13, $c14, $c15, $c18, $c19, $c20, $c21, $c24, $c25, $c26, $c30, $c31, $c32;
        groovyjarjarantlr.NoViableAltForCharException $r24, $r25, $r26, $r27, $r28;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r20 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(92);

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i33 = (int) $c1;

        lookupswitch($i33)
        {
            case 34: goto label06;
            case 39: goto label07;
            case 48: goto label15;
            case 49: goto label15;
            case 50: goto label15;
            case 51: goto label15;
            case 52: goto label20;
            case 53: goto label20;
            case 54: goto label20;
            case 55: goto label20;
            case 92: goto label08;
            case 98: goto label04;
            case 102: goto label05;
            case 110: goto label01;
            case 114: goto label02;
            case 116: goto label03;
            case 117: goto label09;
            default: goto label23;
        };

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(110);

        goto label24;

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(114);

        goto label24;

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(116);

        goto label24;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(98);

        goto label24;

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(102);

        goto label24;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(34);

        goto label24;

     label07:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(39);

        goto label24;

     label08:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(92);

        goto label24;

     label09:
        i29 = 0;

     label10:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i34 = (int) $c2;

        if $i34 != 117 goto label11;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(117);

        goto label13;

     label11:
        if i29 < 1 goto label12;

        goto label14;

     label12:
        $r24 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r24.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r3, $i4, $i5);

        throw $r24;

     label13:
        i29 = i29 + 1;

        goto label10;

     label14:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mHEX_DIGIT(boolean)>(0);

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mHEX_DIGIT(boolean)>(0);

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mHEX_DIGIT(boolean)>(0);

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mHEX_DIGIT(boolean)>(0);

        goto label24;

     label15:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 51);

        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i35 = (int) $c14;

        if $i35 < 48 goto label18;

        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i36 = (int) $c18;

        if $i36 > 55 goto label18;

        $r14 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c19 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i37 = (int) $c19;

        $z2 = virtualinvoke $r14.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i37);

        if $z2 == 0 goto label18;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 55);

        $c20 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i38 = (int) $c20;

        if $i38 < 48 goto label16;

        $c24 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i39 = (int) $c24;

        if $i39 > 55 goto label16;

        $r17 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c25 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i40 = (int) $c25;

        $z3 = virtualinvoke $r17.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i40);

        if $z3 == 0 goto label16;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 55);

        goto label24;

     label16:
        $r21 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c30 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i41 = (int) $c30;

        $z4 = virtualinvoke $r21.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i41);

        if $z4 == 0 goto label17;

        goto label24;

     label17:
        $r25 = new groovyjarjarantlr.NoViableAltForCharException;

        $c21 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r16 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i22 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i23 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r25.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c21, $r16, $i22, $i23);

        throw $r25;

     label18:
        $r22 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c31 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i42 = (int) $c31;

        $z5 = virtualinvoke $r22.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i42);

        if $z5 == 0 goto label19;

        goto label24;

     label19:
        $r26 = new groovyjarjarantlr.NoViableAltForCharException;

        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r13 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i16 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i17 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r26.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c15, $r13, $i16, $i17);

        throw $r26;

     label20:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(52, 55);

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i43 = (int) $c8;

        if $i43 < 48 goto label21;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i44 = (int) $c12;

        if $i44 > 55 goto label21;

        $r11 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(2);

        $i45 = (int) $c13;

        $z1 = virtualinvoke $r11.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i45);

        if $z1 == 0 goto label21;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 55);

        goto label24;

     label21:
        $r23 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c32 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i46 = (int) $c32;

        $z6 = virtualinvoke $r23.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i46);

        if $z6 == 0 goto label22;

        goto label24;

     label22:
        $r27 = new groovyjarjarantlr.NoViableAltForCharException;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i11 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r27.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c9, $r10, $i10, $i11);

        throw $r27;

     label23:
        $r28 = new groovyjarjarantlr.NoViableAltForCharException;

        $c26 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r19 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i27 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i28 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r28.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c26, $r19, $i27, $i28);

        throw $r28;

     label24:
        if z0 == 0 goto label25;

        if null != null goto label25;

        $i48 = (int) -1;

        if 168 == $i48 goto label25;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(168);

        r20 = $r4;

        $r29 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r29.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i7);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r29);

     label25:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r20;

        return;
    }

    public final void mSTRING_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i8;
        java.lang.String $r10;
        groovyjarjarantlr.Token $r3, r9;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        char $c1, $c4;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r8;
        char[] $r6;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z1 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(34);

     label1:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i5 = (int) $c4;

        if $i5 != 92 goto label2;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mESC(boolean)>(0);

        goto label1;

     label2:
        $r2 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3>;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i6 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i6);

        if $z0 == 0 goto label3;

        $r8 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r8);

        goto label1;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(34);

        if z1 == 0 goto label4;

        if null != null goto label4;

        $i8 = (int) -1;

        if 161 == $i8 goto label4;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(161);

        r9 = $r3;

        $r10 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r10);

     label4:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mHEX_DIGIT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c4;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i7 = (int) $c1;

        tableswitch($i7)
        {
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            case 53: goto label1;
            case 54: goto label1;
            case 55: goto label1;
            case 56: goto label1;
            case 57: goto label1;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label4;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label4;
            case 64: goto label4;
            case 65: goto label2;
            case 66: goto label2;
            case 67: goto label2;
            case 68: goto label2;
            case 69: goto label2;
            case 70: goto label2;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label3;
            case 98: goto label3;
            case 99: goto label3;
            case 100: goto label3;
            case 101: goto label3;
            case 102: goto label3;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label5;

     label2:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(65, 70);

        goto label5;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(97, 102);

        goto label5;

     label4:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r8, $i5, $i6);

        throw $r10;

     label5:
        if z0 == 0 goto label6;

        if null != null goto label6;

        $i9 = (int) -1;

        if 169 == $i9 goto label6;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(169);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label6:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mVOCAB(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(3, 255);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 170 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(170);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mIDENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        byte b12;
        groovyjarjarantlr.Token $r3, r20;
        boolean z0, $z1, $z2, $z3, $z4;
        groovyjarjarantlr.LexerSharedInputState $r2;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i14, $i15, $i16, $i18;
        java.lang.String $r10, $r15, $r19, $r22, $r23, $r24;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7, $r9, $r12, $r14, $r17;
        char $c1, $c9, $c13;
        groovyjarjarantlr.NoViableAltForCharException $r21;
        char[] $r6, $r11, $r16;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r20 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        b12 = 67;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i15 = (int) $c1;

        tableswitch($i15)
        {
            case 36: goto label04;
            case 37: goto label05;
            case 38: goto label05;
            case 39: goto label05;
            case 40: goto label05;
            case 41: goto label05;
            case 42: goto label05;
            case 43: goto label05;
            case 44: goto label05;
            case 45: goto label05;
            case 46: goto label05;
            case 47: goto label05;
            case 48: goto label05;
            case 49: goto label05;
            case 50: goto label05;
            case 51: goto label05;
            case 52: goto label05;
            case 53: goto label05;
            case 54: goto label05;
            case 55: goto label05;
            case 56: goto label05;
            case 57: goto label05;
            case 58: goto label05;
            case 59: goto label05;
            case 60: goto label05;
            case 61: goto label05;
            case 62: goto label05;
            case 63: goto label05;
            case 64: goto label05;
            case 65: goto label02;
            case 66: goto label02;
            case 67: goto label02;
            case 68: goto label02;
            case 69: goto label02;
            case 70: goto label02;
            case 71: goto label02;
            case 72: goto label02;
            case 73: goto label02;
            case 74: goto label02;
            case 75: goto label02;
            case 76: goto label02;
            case 77: goto label02;
            case 78: goto label02;
            case 79: goto label02;
            case 80: goto label02;
            case 81: goto label02;
            case 82: goto label02;
            case 83: goto label02;
            case 84: goto label02;
            case 85: goto label02;
            case 86: goto label02;
            case 87: goto label02;
            case 88: goto label02;
            case 89: goto label02;
            case 90: goto label02;
            case 91: goto label05;
            case 92: goto label05;
            case 93: goto label05;
            case 94: goto label05;
            case 95: goto label03;
            case 96: goto label05;
            case 97: goto label01;
            case 98: goto label01;
            case 99: goto label01;
            case 100: goto label01;
            case 101: goto label01;
            case 102: goto label01;
            case 103: goto label01;
            case 104: goto label01;
            case 105: goto label01;
            case 106: goto label01;
            case 107: goto label01;
            case 108: goto label01;
            case 109: goto label01;
            case 110: goto label01;
            case 111: goto label01;
            case 112: goto label01;
            case 113: goto label01;
            case 114: goto label01;
            case 115: goto label01;
            case 116: goto label01;
            case 117: goto label01;
            case 118: goto label01;
            case 119: goto label01;
            case 120: goto label01;
            case 121: goto label01;
            case 122: goto label01;
            default: goto label05;
        };

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(97, 122);

        goto label06;

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(65, 90);

        goto label06;

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(95);

        goto label06;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(36);

        goto label06;

     label05:
        $r21 = new groovyjarjarantlr.NoViableAltForCharException;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r19 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i11 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r21.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c9, $r19, $i10, $i11);

        throw $r21;

     label06:
        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i16 = (int) $c13;

        tableswitch($i16)
        {
            case 36: goto label11;
            case 37: goto label12;
            case 38: goto label12;
            case 39: goto label12;
            case 40: goto label12;
            case 41: goto label12;
            case 42: goto label12;
            case 43: goto label12;
            case 44: goto label12;
            case 45: goto label12;
            case 46: goto label12;
            case 47: goto label12;
            case 48: goto label10;
            case 49: goto label10;
            case 50: goto label10;
            case 51: goto label10;
            case 52: goto label10;
            case 53: goto label10;
            case 54: goto label10;
            case 55: goto label10;
            case 56: goto label10;
            case 57: goto label10;
            case 58: goto label12;
            case 59: goto label12;
            case 60: goto label12;
            case 61: goto label12;
            case 62: goto label12;
            case 63: goto label12;
            case 64: goto label12;
            case 65: goto label08;
            case 66: goto label08;
            case 67: goto label08;
            case 68: goto label08;
            case 69: goto label08;
            case 70: goto label08;
            case 71: goto label08;
            case 72: goto label08;
            case 73: goto label08;
            case 74: goto label08;
            case 75: goto label08;
            case 76: goto label08;
            case 77: goto label08;
            case 78: goto label08;
            case 79: goto label08;
            case 80: goto label08;
            case 81: goto label08;
            case 82: goto label08;
            case 83: goto label08;
            case 84: goto label08;
            case 85: goto label08;
            case 86: goto label08;
            case 87: goto label08;
            case 88: goto label08;
            case 89: goto label08;
            case 90: goto label08;
            case 91: goto label12;
            case 92: goto label12;
            case 93: goto label12;
            case 94: goto label12;
            case 95: goto label09;
            case 96: goto label12;
            case 97: goto label07;
            case 98: goto label07;
            case 99: goto label07;
            case 100: goto label07;
            case 101: goto label07;
            case 102: goto label07;
            case 103: goto label07;
            case 104: goto label07;
            case 105: goto label07;
            case 106: goto label07;
            case 107: goto label07;
            case 108: goto label07;
            case 109: goto label07;
            case 110: goto label07;
            case 111: goto label07;
            case 112: goto label07;
            case 113: goto label07;
            case 114: goto label07;
            case 115: goto label07;
            case 116: goto label07;
            case 117: goto label07;
            case 118: goto label07;
            case 119: goto label07;
            case 120: goto label07;
            case 121: goto label07;
            case 122: goto label07;
            default: goto label12;
        };

     label07:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(97, 122);

        goto label06;

     label08:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(65, 90);

        goto label06;

     label09:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(95);

        goto label06;

     label10:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label06;

     label11:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(36);

        goto label06;

     label12:
        goto label13;

     label13:
        $r2 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i2 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i2 != 0 goto label15;

        $z1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean assertEnabled>;

        if $z1 == 0 goto label14;

        $r15 = "assert";

        $r22 = new java.lang.String;

        $r14 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r16 = virtualinvoke $r14.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r17 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r17.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r22.<java.lang.String: void <init>(char[],int,int)>($r16, $i0, $i8);

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z3 == 0 goto label14;

        b12 = 120;

     label14:
        $z4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean enumEnabled>;

        if $z4 == 0 goto label15;

        $r10 = "enum";

        $r23 = new java.lang.String;

        $r9 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r11 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r12 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r12.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r23.<java.lang.String: void <init>(char[],int,int)>($r11, $i0, $i6);

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z2 == 0 goto label15;

        b12 = 103;

     label15:
        $i14 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int testLiteralsTable(int)>(b12);

        if z0 == 0 goto label16;

        if null != null goto label16;

        $i18 = (int) -1;

        if $i14 == $i18 goto label16;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>($i14);

        r20 = $r3;

        $r24 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i3 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i4 = $i3 - $i0;

        specialinvoke $r24.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i4);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r24);

     label16:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r20;

        return;
    }

    public final void mNUM_INT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        short s96, s111, s112;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r4, r42, r43, r49;
        int $i0, $i4, $i6, $i7, $i8, $i10, $i11, $i16, $i20, $i29, $i30, $i38, $i42, $i43, $i45, $i46, $i53, $i54, $i58, $i59, $i62, $i63, $i64, $i67, $i68, $i70, $i71, $i73, $i74, $i77, $i78, $i79, $i83, $i84, $i86, $i92, $i94, $i95, i97, $i99, $i100, i101, i103, i104, i105, $i108, $i109, $i110, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i165;
        groovyjarjarantlr.NoViableAltForCharException $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61;
        java.lang.String $r10, $r11, $r12, $r15, $r18, $r20, $r22, $r24, $r27, $r30, $r32, $r35, $r36, $r37, $r40, $r62;
        char[] $r7;
        boolean z0, z1, $z2, z3;
        groovyjarjarantlr.collections.impl.BitSet $r46;
        groovyjarjarantlr.RecognitionException $r41;
        groovyjarjarantlr.LexerSharedInputState $r2, $r3, $r13, $r16, $r25, $r28, $r33, $r38, $r44, $r45, $r47, $r48, $r50;
        char $c1, $c2, $c3, $c5, $c9, $c12, $c13, $c14, $c15, $c17, $c18, $c19, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, $c31, $c32, $c33, $c34, $c35, $c36, $c37, $c39, $c40, $c41, $c44, $c47, $c48, $c49, $c50, $c51, $c52, $c55, $c56, $c57, $c60, $c61, $c65, $c66, $c69, $c72, $c75, $c76, $c80, $c81, $c82, $c85, $c87, $c88, $c89, $c90, $c91, $c93, $c98, $c102, $c106, $c107;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r42 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s96 = 159;

        s112 = 159;

        s111 = 159;

        z1 = 0;

        r43 = null;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i113 = (int) $c1;

        tableswitch($i113)
        {
            case 46: goto label01;
            case 47: goto label79;
            case 48: goto label16;
            case 49: goto label16;
            case 50: goto label16;
            case 51: goto label16;
            case 52: goto label16;
            case 53: goto label16;
            case 54: goto label16;
            case 55: goto label16;
            case 56: goto label16;
            case 57: goto label16;
            default: goto label79;
        };

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(46);

        $r33 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i79 = $r33.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i79 != 0 goto label02;

        s96 = 68;

        s112 = 68;

        s111 = 68;

     label02:
        $c80 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i114 = (int) $c80;

        tableswitch($i114)
        {
            case 46: goto label14;
            case 47: goto label15;
            case 48: goto label03;
            case 49: goto label03;
            case 50: goto label03;
            case 51: goto label03;
            case 52: goto label03;
            case 53: goto label03;
            case 54: goto label03;
            case 55: goto label03;
            case 56: goto label03;
            case 57: goto label03;
            default: goto label15;
        };

     label03:
        i97 = 0;

     label04:
        $c81 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i115 = (int) $c81;

        if $i115 < 48 goto label05;

        $c91 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i116 = (int) $c91;

        if $i116 > 57 goto label05;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label07;

     label05:
        if i97 < 1 goto label06;

        goto label08;

     label06:
        $r51 = new groovyjarjarantlr.NoViableAltForCharException;

        $c82 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r35 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i83 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i84 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r51.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c82, $r35, $i83, $i84);

        throw $r51;

     label07:
        i97 = i97 + 1;

        goto label04;

     label08:
        $c85 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i117 = (int) $c85;

        if $i117 == 69 goto label09;

        $c90 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i118 = (int) $c90;

        if $i118 != 101 goto label10;

     label09:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mEXPONENT(boolean)>(0);

     label10:
        $c98 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i119 = (int) $c98;

        if $i119 == 68 goto label11;

        $c87 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i120 = (int) $c87;

        if $i120 == 70 goto label11;

        $c88 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i121 = (int) $c88;

        if $i121 == 100 goto label11;

        $c89 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i122 = (int) $c89;

        if $i122 != 102 goto label12;

     label11:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mFLOAT_SUFFIX(boolean)>(1);

        $r44 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i99 = $r44.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i99 != 0 goto label12;

        r43 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

     label12:
        $r45 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i100 = $r45.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i100 != 0 goto label80;

        if r43 == null goto label13;

        $r36 = virtualinvoke r43.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String toUpperCase()>();

        $i86 = virtualinvoke $r37.<java.lang.String: int indexOf(int)>(70);

        if $i86 < 0 goto label13;

        s96 = 162;

        s112 = 162;

        s111 = 162;

        goto label80;

     label13:
        s96 = 164;

        s112 = 164;

        s111 = 164;

        goto label80;

     label14:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(java.lang.String)>("..");

        $r38 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i92 = $r38.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i92 != 0 goto label80;

        s96 = 109;

        s112 = 109;

        s111 = 109;

        goto label80;

     label15:
        goto label80;

     label16:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i123 = (int) $c2;

        tableswitch($i123)
        {
            case 48: goto label17;
            case 49: goto label55;
            case 50: goto label55;
            case 51: goto label55;
            case 52: goto label55;
            case 53: goto label55;
            case 54: goto label55;
            case 55: goto label55;
            case 56: goto label55;
            case 57: goto label55;
            default: goto label58;
        };

     label17:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(48);

        $r16 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i38 = $r16.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i38 != 0 goto label18;

        z1 = 1;

     label18:
        $c39 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i124 = (int) $c39;

        if $i124 == 88 goto label19;

        $c47 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i125 = (int) $c47;

        if $i125 != 120 goto label29;

     label19:
        $c40 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i126 = (int) $c40;

        lookupswitch($i126)
        {
            case 88: goto label21;
            case 120: goto label20;
            default: goto label22;
        };

     label20:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(120);

        goto label23;

     label21:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(88);

        goto label23;

     label22:
        $r52 = new groovyjarjarantlr.NoViableAltForCharException;

        $c44 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r20 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i45 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i46 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r52.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c44, $r20, $i45, $i46);

        throw $r52;

     label23:
        i101 = 0;

     label24:
        $r46 = <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4>;

        $c102 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i127 = (int) $c102;

        $z2 = virtualinvoke $r46.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i127);

        if $z2 == 0 goto label25;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mHEX_DIGIT(boolean)>(0);

        goto label27;

     label25:
        if i101 < 1 goto label26;

        goto label28;

     label26:
        $r53 = new groovyjarjarantlr.NoViableAltForCharException;

        $c41 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r18 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i42 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i43 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r53.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c41, $r18, $i42, $i43);

        throw $r53;

     label27:
        i101 = i101 + 1;

        goto label24;

     label28:
        goto label59;

     label29:
        z3 = 0;

        $c48 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i128 = (int) $c48;

        if $i128 < 48 goto label43;

        $c61 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i129 = (int) $c61;

        if $i129 > 57 goto label43;

        $i62 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int mark()>();

        z3 = 1;

        $r25 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i63 = $r25.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i64 = $i63 + 1;

        $r25.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i64;

     label30:
        i103 = 0;

     label31:
        $c65 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i130 = (int) $c65;

        if $i130 < 48 goto label32;

        $c75 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i131 = (int) $c75;

        if $i131 > 57 goto label32;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label34;

     label32:
        if i103 < 1 goto label33;

        goto label35;

     label33:
        $r54 = new groovyjarjarantlr.NoViableAltForCharException;

        $c66 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r27 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i67 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i68 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r54.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c66, $r27, $i67, $i68);

        throw $r54;

     label34:
        i103 = i103 + 1;

        goto label31;

     label35:
        $c69 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i132 = (int) $c69;

        lookupswitch($i132)
        {
            case 46: goto label36;
            case 68: goto label38;
            case 69: goto label37;
            case 70: goto label38;
            case 100: goto label38;
            case 101: goto label37;
            case 102: goto label38;
            default: goto label39;
        };

     label36:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(46);

        goto label40;

     label37:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mEXPONENT(boolean)>(0);

        goto label40;

     label38:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mFLOAT_SUFFIX(boolean)>(0);

        goto label40;

     label39:
        $r55 = new groovyjarjarantlr.NoViableAltForCharException;

        $c72 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r30 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i73 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i74 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r55.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c72, $r30, $i73, $i74);

        throw $r55;

     label40:
        goto label42;

     label41:
        $r41 := @caughtexception;

        z3 = 0;

     label42:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void rewind(int)>($i62);

        $r28 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i70 = $r28.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i71 = $i70 - 1;

        $r28.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i71;

     label43:
        if z3 == 0 goto label49;

        i104 = 0;

     label44:
        $c56 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i133 = (int) $c56;

        if $i133 < 48 goto label45;

        $c60 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i134 = (int) $c60;

        if $i134 > 57 goto label45;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label47;

     label45:
        if i104 < 1 goto label46;

        goto label48;

     label46:
        $r56 = new groovyjarjarantlr.NoViableAltForCharException;

        $c57 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r24 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i58 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i59 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r56.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c57, $r24, $i58, $i59);

        throw $r56;

     label47:
        i104 = i104 + 1;

        goto label44;

     label48:
        goto label54;

     label49:
        $c49 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i135 = (int) $c49;

        if $i135 < 48 goto label54;

        $c50 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i136 = (int) $c50;

        if $i136 > 55 goto label54;

        i105 = 0;

     label50:
        $c51 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i137 = (int) $c51;

        if $i137 < 48 goto label51;

        $c55 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i138 = (int) $c55;

        if $i138 > 55 goto label51;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 55);

        goto label53;

     label51:
        if i105 < 1 goto label52;

        goto label54;

     label52:
        $r57 = new groovyjarjarantlr.NoViableAltForCharException;

        $c52 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r22 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i53 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i54 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r57.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c52, $r22, $i53, $i54);

        throw $r57;

     label53:
        i105 = i105 + 1;

        goto label50;

     label54:
        goto label59;

     label55:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(49, 57);

     label56:
        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i139 = (int) $c3;

        if $i139 < 48 goto label57;

        $c37 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i140 = (int) $c37;

        if $i140 > 57 goto label57;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label56;

     label57:
        $r2 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i4 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i4 != 0 goto label59;

        z1 = 1;

        goto label59;

     label58:
        $r58 = new groovyjarjarantlr.NoViableAltForCharException;

        $c76 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r32 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i77 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i78 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r58.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c76, $r32, $i77, $i78);

        throw $r58;

     label59:
        $c106 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i141 = (int) $c106;

        if $i141 == 76 goto label60;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i142 = (int) $c12;

        if $i142 != 108 goto label65;

     label60:
        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i143 = (int) $c5;

        lookupswitch($i143)
        {
            case 76: goto label62;
            case 108: goto label61;
            default: goto label63;
        };

     label61:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(108);

        goto label64;

     label62:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(76);

        goto label64;

     label63:
        $r59 = new groovyjarjarantlr.NoViableAltForCharException;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i11 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r59.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c9, $r10, $i10, $i11);

        throw $r59;

     label64:
        $r3 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i6 = $r3.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i6 != 0 goto label80;

        s96 = 163;

        s112 = 163;

        s111 = 163;

        goto label80;

     label65:
        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i144 = (int) $c13;

        if $i144 == 46 goto label66;

        $c31 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i145 = (int) $c31;

        if $i145 == 68 goto label66;

        $c32 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i146 = (int) $c32;

        if $i146 == 69 goto label66;

        $c33 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i147 = (int) $c33;

        if $i147 == 70 goto label66;

        $c34 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i148 = (int) $c34;

        if $i148 == 100 goto label66;

        $c35 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i149 = (int) $c35;

        if $i149 == 101 goto label66;

        $c36 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i150 = (int) $c36;

        if $i150 != 102 goto label80;

     label66:
        if z1 == 0 goto label80;

        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i151 = (int) $c14;

        lookupswitch($i151)
        {
            case 46: goto label67;
            case 68: goto label75;
            case 69: goto label73;
            case 70: goto label75;
            case 100: goto label75;
            case 101: goto label73;
            case 102: goto label75;
            default: goto label76;
        };

     label67:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(46);

     label68:
        $c21 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i152 = (int) $c21;

        if $i152 < 48 goto label69;

        $c27 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i153 = (int) $c27;

        if $i153 > 57 goto label69;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label68;

     label69:
        $c22 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i154 = (int) $c22;

        if $i154 == 69 goto label70;

        $c26 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i155 = (int) $c26;

        if $i155 != 101 goto label71;

     label70:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mEXPONENT(boolean)>(0);

     label71:
        $c107 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i156 = (int) $c107;

        if $i156 == 68 goto label72;

        $c23 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i157 = (int) $c23;

        if $i157 == 70 goto label72;

        $c24 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i158 = (int) $c24;

        if $i158 == 100 goto label72;

        $c25 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i159 = (int) $c25;

        if $i159 != 102 goto label77;

     label72:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mFLOAT_SUFFIX(boolean)>(1);

        $r47 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i108 = $r47.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i108 != 0 goto label77;

        r43 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

        goto label77;

     label73:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mEXPONENT(boolean)>(0);

        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i160 = (int) $c15;

        if $i160 == 68 goto label74;

        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i161 = (int) $c17;

        if $i161 == 70 goto label74;

        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i162 = (int) $c18;

        if $i162 == 100 goto label74;

        $c19 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i163 = (int) $c19;

        if $i163 != 102 goto label77;

     label74:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mFLOAT_SUFFIX(boolean)>(1);

        $r48 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i109 = $r48.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i109 != 0 goto label77;

        r43 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

        goto label77;

     label75:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void mFLOAT_SUFFIX(boolean)>(1);

        r49 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken>;

        $r13 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i20 = $r13.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i20 != 0 goto label77;

        r43 = r49;

        goto label77;

     label76:
        $r60 = new groovyjarjarantlr.NoViableAltForCharException;

        $c28 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r15 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i29 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i30 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r60.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c28, $r15, $i29, $i30);

        throw $r60;

     label77:
        $r50 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i110 = $r50.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i110 != 0 goto label80;

        if r43 == null goto label78;

        $r11 = virtualinvoke r43.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase()>();

        $i16 = virtualinvoke $r12.<java.lang.String: int indexOf(int)>(70);

        if $i16 < 0 goto label78;

        s96 = 162;

        s112 = 162;

        s111 = 162;

        goto label80;

     label78:
        s96 = 164;

        s112 = 164;

        s111 = 164;

        goto label80;

     label79:
        $r61 = new groovyjarjarantlr.NoViableAltForCharException;

        $c93 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r40 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i94 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i95 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r61.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c93, $r40, $i94, $i95);

        throw $r61;

     label80:
        if z0 == 0 goto label81;

        if null != null goto label81;

        $i165 = (int) -1;

        if s111 == $i165 goto label81;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(s112);

        r42 = $r4;

        $r62 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r62.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i8);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r62);

     label81:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r42;

        return;

        catch groovyjarjarantlr.RecognitionException from label30 to label40 with label41;
    }

    protected final void mEXPONENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r4, r13;
        boolean z0;
        int $i0, $i4, $i5, $i6, $i7, $i10, $i11, $i13, $i14, i15, $i17, $i18, $i19, $i20, $i22;
        java.lang.String $r3, $r10, $r12, $r17;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c3, $c8, $c9, $c12, $c16;
        groovyjarjarantlr.NoViableAltForCharException $r14, $r15, $r16;
        char[] $r7;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r13 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i17 = (int) $c1;

        lookupswitch($i17)
        {
            case 69: goto label02;
            case 101: goto label01;
            default: goto label03;
        };

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(101);

        goto label04;

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(69);

        goto label04;

     label03:
        $r14 = new groovyjarjarantlr.NoViableAltForCharException;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r12 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i13 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i14 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r14.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c12, $r12, $i13, $i14);

        throw $r14;

     label04:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i18 = (int) $c2;

        tableswitch($i18)
        {
            case 43: goto label05;
            case 44: goto label08;
            case 45: goto label06;
            case 46: goto label08;
            case 47: goto label08;
            case 48: goto label07;
            case 49: goto label07;
            case 50: goto label07;
            case 51: goto label07;
            case 52: goto label07;
            case 53: goto label07;
            case 54: goto label07;
            case 55: goto label07;
            case 56: goto label07;
            case 57: goto label07;
            default: goto label08;
        };

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(43);

        goto label09;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(45);

        goto label09;

     label07:
        goto label09;

     label08:
        $r15 = new groovyjarjarantlr.NoViableAltForCharException;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i11 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r15.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c9, $r10, $i10, $i11);

        throw $r15;

     label09:
        i15 = 0;

     label10:
        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i19 = (int) $c16;

        if $i19 < 48 goto label11;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i20 = (int) $c8;

        if $i20 > 57 goto label11;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void matchRange(char,char)>(48, 57);

        goto label13;

     label11:
        if i15 < 1 goto label12;

        goto label14;

     label12:
        $r16 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r16.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r3, $i4, $i5);

        throw $r16;

     label13:
        i15 = i15 + 1;

        goto label10;

     label14:
        if z0 == 0 goto label15;

        if null != null goto label15;

        $i22 = (int) -1;

        if 171 == $i22 goto label15;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(171);

        r13 = $r4;

        $r17 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i7);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r17);

     label15:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r13;

        return;
    }

    protected final void mFLOAT_SUFFIX(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c4;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;
        org.codehaus.groovy.antlr.java.JavaLexer r0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $i7 = (int) $c1;

        lookupswitch($i7)
        {
            case 68: goto label4;
            case 70: goto label2;
            case 100: goto label3;
            case 102: goto label1;
            default: goto label5;
        };

     label1:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(102);

        goto label6;

     label2:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(70);

        goto label6;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(100);

        goto label6;

     label4:
        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(68);

        goto label6;

     label5:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getLine()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r8, $i5, $i6);

        throw $r10;

     label6:
        if z0 == 0 goto label7;

        if null != null goto label7;

        $i9 = (int) -1;

        if 172 == $i9 goto label7;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(172);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label7:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    public final void mAT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.java.JavaLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: void match(char)>(64);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 95 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token makeToken(int)>(95);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    private static final long[] mk_tokenSet_0()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -9224L;

        i0 = 1;

     label1:
        if i0 > 1023 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_1()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -4398046520328L;

        i0 = 1;

     label1:
        if i0 > 1023 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_2()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -549755823112L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 1023 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_3()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -17179878408L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 1023 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_4()
    {
        long[] r0;

        r0 = newarray (long)[1025];

        r0[0] = 287948901175001088L;

        r0[1] = 541165879422L;

        return r0;
    }

    static boolean access$000(org.codehaus.groovy.antlr.java.JavaLexer)
    {
        org.codehaus.groovy.antlr.java.JavaLexer r0;
        boolean $z0;

        r0 := @parameter0: org.codehaus.groovy.antlr.java.JavaLexer;

        $z0 = r0.<org.codehaus.groovy.antlr.java.JavaLexer: boolean whitespaceIncluded>;

        return $z0;
    }

    static void <clinit>()
    {
        groovyjarjarantlr.collections.impl.BitSet $r0, $r2, $r4, $r6, $r8;
        long[] $r1, $r3, $r5, $r7, $r9;

        <org.codehaus.groovy.antlr.java.JavaLexer: int SCS_RE_TYPE> = 2;

        <org.codehaus.groovy.antlr.java.JavaLexer: int SCS_TQ_TYPE> = 1;

        <org.codehaus.groovy.antlr.java.JavaLexer: int SCS_SQ_TYPE> = 0;

        <org.codehaus.groovy.antlr.java.JavaLexer: int SCS_LIMIT> = 16;

        <org.codehaus.groovy.antlr.java.JavaLexer: int SCS_LIT> = 8;

        <org.codehaus.groovy.antlr.java.JavaLexer: int SCS_VAL> = 4;

        <org.codehaus.groovy.antlr.java.JavaLexer: int SCS_TYPE> = 3;

        $r0 = new groovyjarjarantlr.collections.impl.BitSet;

        $r1 = staticinvoke <org.codehaus.groovy.antlr.java.JavaLexer: long[] mk_tokenSet_0()>();

        specialinvoke $r0.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r1);

        <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0> = $r0;

        $r2 = new groovyjarjarantlr.collections.impl.BitSet;

        $r3 = staticinvoke <org.codehaus.groovy.antlr.java.JavaLexer: long[] mk_tokenSet_1()>();

        specialinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r3);

        <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1> = $r2;

        $r4 = new groovyjarjarantlr.collections.impl.BitSet;

        $r5 = staticinvoke <org.codehaus.groovy.antlr.java.JavaLexer: long[] mk_tokenSet_2()>();

        specialinvoke $r4.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r5);

        <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2> = $r4;

        $r6 = new groovyjarjarantlr.collections.impl.BitSet;

        $r7 = staticinvoke <org.codehaus.groovy.antlr.java.JavaLexer: long[] mk_tokenSet_3()>();

        specialinvoke $r6.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r7);

        <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3> = $r6;

        $r8 = new groovyjarjarantlr.collections.impl.BitSet;

        $r9 = staticinvoke <org.codehaus.groovy.antlr.java.JavaLexer: long[] mk_tokenSet_4()>();

        specialinvoke $r8.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r9);

        <org.codehaus.groovy.antlr.java.JavaLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4> = $r8;

        return;
    }
}
