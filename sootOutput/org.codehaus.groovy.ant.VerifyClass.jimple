public class org.codehaus.groovy.ant.VerifyClass extends org.apache.tools.ant.taskdefs.MatchingTask
{
    private java.lang.String topDir;
    private boolean verbose;

    public void <init>()
    {
        org.codehaus.groovy.ant.VerifyClass r0;

        r0 := @this: org.codehaus.groovy.ant.VerifyClass;

        specialinvoke r0.<org.apache.tools.ant.taskdefs.MatchingTask: void <init>()>();

        r0.<org.codehaus.groovy.ant.VerifyClass: java.lang.String topDir> = null;

        r0.<org.codehaus.groovy.ant.VerifyClass: boolean verbose> = 0;

        return;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r26, $r27;
        org.codehaus.groovy.ant.VerifyClass r0;
        java.lang.StringBuffer $r5, $r6, $r9, $r10, $r11, $r15, $r16, $r17, $r22, $r24, $r25;
        int $i0;
        java.lang.String $r1, $r3, $r7, $r12, $r18;
        boolean $z0;
        org.apache.tools.ant.BuildException $r20, $r23;
        java.io.File $r21;

        r0 := @this: org.codehaus.groovy.ant.VerifyClass;

        $r1 = r0.<org.codehaus.groovy.ant.VerifyClass: java.lang.String topDir>;

        if $r1 != null goto label1;

        $r20 = new org.apache.tools.ant.BuildException;

        specialinvoke $r20.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("no dir attribute is set");

        $r26 = (java.lang.Throwable) $r20;

        throw $r26;

     label1:
        $r21 = new java.io.File;

        $r3 = r0.<org.codehaus.groovy.ant.VerifyClass: java.lang.String topDir>;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke $r21.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r23 = new org.apache.tools.ant.BuildException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("the directory ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not exist");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r18);

        $r27 = (java.lang.Throwable) $r23;

        throw $r27;

     label2:
        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("top dir is ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.ant.VerifyClass: void log(java.lang.String)>($r7);

        $i0 = specialinvoke r0.<org.codehaus.groovy.ant.VerifyClass: int execute(java.io.File)>($r21);

        if $i0 != 0 goto label3;

        virtualinvoke r0.<org.codehaus.groovy.ant.VerifyClass: void log(java.lang.String)>("no bytecode problems found");

        goto label4;

     label3:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" failing classes");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.ant.VerifyClass: void log(java.lang.String)>($r12);

     label4:
        return;
    }

    public void setDir(java.lang.String) throws org.apache.tools.ant.BuildException
    {
        java.lang.String r1;
        org.codehaus.groovy.ant.VerifyClass r0;

        r0 := @this: org.codehaus.groovy.ant.VerifyClass;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.ant.VerifyClass: java.lang.String topDir> = r1;

        return;
    }

    public void setVerbose(boolean)
    {
        org.codehaus.groovy.ant.VerifyClass r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.VerifyClass;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.VerifyClass: boolean verbose> = z0;

        return;
    }

    private int execute(java.io.File)
    {
        java.lang.Throwable $r10;
        org.codehaus.groovy.ant.VerifyClass r4;
        int $i0, $i1, i2, i3;
        java.lang.String $r3, $r5, $r7;
        boolean $z0, $z1, $z2;
        java.io.IOException $r6;
        org.apache.tools.ant.BuildException $r9;
        java.io.File r0, r2;
        java.io.File[] $r1;

        r4 := @this: org.codehaus.groovy.ant.VerifyClass;

        r0 := @parameter0: java.io.File;

        i2 = 0;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r1;

        if i3 >= $i0 goto label7;

        r2 = $r1[i3];

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $i1 = specialinvoke r4.<org.codehaus.groovy.ant.VerifyClass: int execute(java.io.File)>(r2);

        i2 = i2 + $i1;

        goto label6;

     label2:
        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z1 == 0 goto label6;

     label3:
        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getCanonicalPath()>();

        $z2 = specialinvoke r4.<org.codehaus.groovy.ant.VerifyClass: boolean readClass(java.lang.String)>($r5);

        if $z2 != 0 goto label4;

        i2 = i2 + 1;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r4.<org.codehaus.groovy.ant.VerifyClass: void log(java.lang.String)>($r7);

        $r9 = new org.apache.tools.ant.BuildException;

        specialinvoke $r9.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable)>($r6);

        $r10 = (java.lang.Throwable) $r9;

        throw $r10;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return i2;

        catch java.io.IOException from label3 to label4 with label5;
    }

    private boolean readClass(java.lang.String) throws java.io.IOException
    {
        groovyjarjarasm.asm.util.CheckClassAdapter $r35;
        groovyjarjarasm.asm.tree.MethodNode r8;
        groovyjarjarasm.asm.MethodVisitor $r43;
        org.codehaus.groovy.ant.VerifyClass r4;
        groovyjarjarasm.asm.tree.analysis.Frame[] $r14;
        boolean $z0, $z1, z2, $z3, z4, z5;
        org.codehaus.groovy.ant.VerifyClass$1 $r34;
        org.codehaus.groovy.ant.VerifyClass$2 $r40;
        java.lang.Exception $r13;
        java.util.List r6, $r9, $r16, $r31;
        groovyjarjarasm.asm.tree.AbstractInsnNode $r19;
        groovyjarjarasm.asm.ClassVisitor $r41;
        java.lang.StringBuffer $r22, $r24, $r27, $r28, $r29, $r38, $r39;
        int $i0, $i1, $i2, $i3, i4, i5, $i6;
        java.lang.String r2, $r12, $r21, $r23, $r25, $r30;
        groovyjarjarasm.asm.Label $r18;
        java.io.FileInputStream $r32;
        groovyjarjarasm.asm.tree.analysis.SimpleVerifier $r36;
        groovyjarjarasm.asm.tree.analysis.Analyzer $r37;
        java.lang.Object $r7, $r17;
        groovyjarjarasm.asm.ClassReader $r33;
        groovyjarjarasm.asm.tree.analysis.Interpreter $r42;

        r4 := @this: org.codehaus.groovy.ant.VerifyClass;

        r2 := @parameter0: java.lang.String;

        $r33 = new groovyjarjarasm.asm.ClassReader;

        $r32 = new java.io.FileInputStream;

        specialinvoke $r32.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r33.<groovyjarjarasm.asm.ClassReader: void <init>(java.io.InputStream)>($r32);

        $r34 = new org.codehaus.groovy.ant.VerifyClass$1;

        specialinvoke $r34.<org.codehaus.groovy.ant.VerifyClass$1: void <init>(org.codehaus.groovy.ant.VerifyClass)>(r4);

        $r35 = new groovyjarjarasm.asm.util.CheckClassAdapter;

        specialinvoke $r35.<groovyjarjarasm.asm.util.CheckClassAdapter: void <init>(groovyjarjarasm.asm.ClassVisitor)>($r34);

        $r41 = (groovyjarjarasm.asm.ClassVisitor) $r35;

        virtualinvoke $r33.<groovyjarjarasm.asm.ClassReader: void accept(groovyjarjarasm.asm.ClassVisitor,boolean)>($r41, 1);

        z2 = 0;

        z5 = 0;

        z4 = 0;

        r6 = $r34.<groovyjarjarasm.asm.tree.ClassNode: java.util.List methods>;

        i4 = 0;

     label01:
        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        if i4 >= $i0 goto label12;

        $r7 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i4);

        r8 = (groovyjarjarasm.asm.tree.MethodNode) $r7;

        $r9 = r8.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i1 <= 0 goto label11;

        $r37 = new groovyjarjarasm.asm.tree.analysis.Analyzer;

        $r36 = new groovyjarjarasm.asm.tree.analysis.SimpleVerifier;

        specialinvoke $r36.<groovyjarjarasm.asm.tree.analysis.SimpleVerifier: void <init>()>();

        $r42 = (groovyjarjarasm.asm.tree.analysis.Interpreter) $r36;

        specialinvoke $r37.<groovyjarjarasm.asm.tree.analysis.Analyzer: void <init>(groovyjarjarasm.asm.tree.analysis.Interpreter)>($r42);

     label02:
        $r12 = $r34.<groovyjarjarasm.asm.tree.ClassNode: java.lang.String name>;

        virtualinvoke $r37.<groovyjarjarasm.asm.tree.analysis.Analyzer: groovyjarjarasm.asm.tree.analysis.Frame[] analyze(java.lang.String,groovyjarjarasm.asm.tree.MethodNode)>($r12, r8);

     label03:
        goto label11;

     label04:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

        $r14 = virtualinvoke $r37.<groovyjarjarasm.asm.tree.analysis.Analyzer: groovyjarjarasm.asm.tree.analysis.Frame[] getFrames()>();

        if z4 != 0 goto label05;

        z2 = 1;

        z5 = 1;

        z4 = 1;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("verifying of class ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" failed");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<org.codehaus.groovy.ant.VerifyClass: void log(java.lang.String)>($r30);

     label05:
        $z0 = r4.<org.codehaus.groovy.ant.VerifyClass: boolean verbose>;

        if $z0 == 0 goto label06;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r21 = r8.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String name>;

        $r22 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = r8.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String desc>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<org.codehaus.groovy.ant.VerifyClass: void log(java.lang.String)>($r25);

     label06:
        $r40 = new org.codehaus.groovy.ant.VerifyClass$2;

        specialinvoke $r40.<org.codehaus.groovy.ant.VerifyClass$2: void <init>(org.codehaus.groovy.ant.VerifyClass,groovyjarjarasm.asm.MethodVisitor,groovyjarjarasm.asm.tree.analysis.Frame[])>(r4, null, $r14);

        i5 = 0;

     label07:
        $r31 = r8.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $i6 = interfaceinvoke $r31.<java.util.List: int size()>();

        if i5 >= $i6 goto label10;

        $r16 = r8.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i5);

        $z1 = $r17 instanceof groovyjarjarasm.asm.tree.AbstractInsnNode;

        if $z1 == 0 goto label08;

        $r19 = (groovyjarjarasm.asm.tree.AbstractInsnNode) $r17;

        $r43 = (groovyjarjarasm.asm.MethodVisitor) $r40;

        virtualinvoke $r19.<groovyjarjarasm.asm.tree.AbstractInsnNode: void accept(groovyjarjarasm.asm.MethodVisitor)>($r43);

        goto label09;

     label08:
        $r18 = (groovyjarjarasm.asm.Label) $r17;

        virtualinvoke $r40.<groovyjarjarasm.asm.util.TraceMethodVisitor: void visitLabel(groovyjarjarasm.asm.Label)>($r18);

     label09:
        i5 = i5 + 1;

        goto label07;

     label10:
        $i3 = r8.<groovyjarjarasm.asm.tree.MethodNode: int maxStack>;

        $i2 = r8.<groovyjarjarasm.asm.tree.MethodNode: int maxLocals>;

        virtualinvoke $r40.<groovyjarjarasm.asm.util.TraceMethodVisitor: void visitMaxs(int,int)>($i3, $i2);

     label11:
        i4 = i4 + 1;

        goto label01;

     label12:
        if z5 != 0 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        return $z3;

        catch java.lang.Exception from label02 to label03 with label04;
    }

    static boolean access$000(org.codehaus.groovy.ant.VerifyClass)
    {
        org.codehaus.groovy.ant.VerifyClass r0;
        boolean $z0;

        r0 := @parameter0: org.codehaus.groovy.ant.VerifyClass;

        $z0 = r0.<org.codehaus.groovy.ant.VerifyClass: boolean verbose>;

        return $z0;
    }
}
