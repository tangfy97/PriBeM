public final class org.apache.cxf.common.util.CollectionUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.common.util.CollectionUtils r0;

        r0 := @this: org.apache.cxf.common.util.CollectionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Collection diff(java.util.Collection, java.util.Collection)
    {
        java.util.Iterator $r3;
        java.util.Collection r0, r1;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 == 0 goto label1;

        if r1 == null goto label1;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i1 != 0 goto label2;

     label1:
        return r0;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r4);

        if $z1 != 0 goto label4;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label4:
        goto label3;

     label5:
        return $r2;
    }

    public static boolean isEmpty(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        int $i0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 == null goto label3;

        return 0;

     label4:
        return 1;
    }
}
